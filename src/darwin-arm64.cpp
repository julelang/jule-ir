// Auto generated by JuleC.
// JuleC version: beta 0.0.6 @master
// Date: 28/10/2023 9.36 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O0 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   
#include "std/process/cmd.hpp"                                   

struct _1c1b398be_Importer;
struct _1a8ad0a37_Kind;
struct _1a8be79c8_Lookup;
struct _1d9d8c4cc_CommonFlag;

struct _20370d928_AnsiEscape;


struct _20370d928_Logger;


struct _20525e312_LazyBuff;


struct _20379d743_Cmd;


struct _203741197_Log;


struct _2037c5759_FloatInfo;


struct _2037c5759_DecimalSlice;


struct _1da102588_LeftCheat;


struct _1da102588_Decimal;


struct _1db2d9c36_FoldPair;


struct _1db2d9c36_CaseRange;


struct _1db2d9c36_Range16;


struct _1db2d9c36_Range32;


struct _1db2d9c36_RangeTable;


struct _1da91c952_accept_range;


struct _1db3db7e9_DirEntry;


struct _1db3db7e9_Directory;


struct _1db3ddeb1_File;


struct _1db3e1b84_Status;


struct _1da81133a_Token;


struct _1da7bba21_File;


struct _1da7bd281_KindPair;


struct _1da7bd281_Lex;


struct _1da7635cd_Ast;


struct _1da7b8e5d_CommentGroup;


struct _1da7b8e5d_NamespaceTypeDecl;


struct _1da7b8e5d_SptrTypeDecl;


struct _1da7b8e5d_SlcTypeDecl;


struct _1da7b8e5d_TupleTypeDecl;


struct _1da7b8e5d_PtrTypeDecl;


struct _1da7b8e5d_ArrTypeDecl;


struct _1da7b8e5d_MapTypeDecl;


struct _1da7b8e5d_RetTypeDecl;


struct _1da7b8e5d_TupleExpr;


struct _1da7b8e5d_CastExpr;


struct _1da7b8e5d_StructLit;


struct _1da7b8e5d_ScopeTree;


struct _1da7b8e5d_Conditional;


struct _1db4a8399_FileInfo;


struct _1db4a8399_PackageInfo;


struct _1db4a8553_Stmt;


struct _1db4a8553_ScopeParser;


struct _1db4ca7d9_CallData;


struct _1db4ca7d9_ExprBuilder;


struct _1c1526124_Parser;


struct _1c163edb9_TypeBuilder;


struct _1a8d46165_Const;


struct _1db4a7e59_FieldIns;


struct _1db4a7e59_StructIns;


struct _1c17e2687_RetType;


struct _1c17e2687_ParamIns;


struct _1c17e2687_FnIns;


struct _1c18c86d5_ReferenceStack;


struct _1c18c86d5_SymbolBuilder;


struct _1c197a248_Scope;


struct _1c197a248_If;


struct _1c197a248_Else;


struct _1c197a248_Conditional;


struct _1c197a248_InfIter;


struct _1c197a248_WhileIter;


struct _1c197a248_RangeIter;


struct _1c197a248_ContSt;


struct _1c197a248_BreakSt;


struct _1c197a248_Label;


struct _1c197a248_GotoSt;


struct _1c197a248_Postfix;


struct _1c197a248_Assign;


struct _1c197a248_MultiAssign;


struct _1c197a248_Match;


struct _1c197a248_Case;


struct _1c197a248_FallSt;


struct _1c197a248_RetSt;


struct _1c197a248_ScopeGoto;


struct _1c197a248_ScopeChecker;


struct _1c19727a1_BinopExprModel;


struct _1c19727a1_UnaryExprModel;


struct _1c19727a1_StructArgExprModel;


struct _1c19727a1_StructLitExprModel;


struct _1c19727a1_AllocStructLitExprModel;


struct _1c19727a1_CastingExprModel;


struct _1c19727a1_SliceExprModel;


struct _1c19727a1_IndexigExprModel;


struct _1c19727a1_AnonFnExprModel;


struct _1c19727a1_KeyValPairExprModel;


struct _1c19727a1_MapExprModel;


struct _1c19727a1_SlicingExprModel;


struct _1c19727a1_TraitSubIdentExprModel;


struct _1c19727a1_StructSubIdentExprModel;


struct _1c19727a1_StructStaticIdentExprModel;


struct _1c19727a1_ArrayExprModel;


struct _1c19727a1_CommonIdentExprModel;


struct _1c19727a1_CommonSubIdentExprModel;


struct _1c19727a1_TupleExprModel;


struct _1c19727a1_BuiltinOutCallExprModel;


struct _1c19727a1_BuiltinOutlnCallExprModel;


struct _1c19727a1_BuiltinCloneCallExprModel;


struct _1c19727a1_BuiltinNewCallExprModel;


struct _1c19727a1_BuiltinMakeCallExprModel;


struct _1c19727a1_BuiltinAppendCallExprModel;


struct _1c19727a1_BuiltinErrorCallExprModel;


struct _1c19727a1_SizeofExprModel;


struct _1c19727a1_AlignofExprModel;


struct _1c19727a1_RuneExprModel;


struct _1c19727a1_IntegratedToStrExprModel;


struct _1c19727a1_TernaryExprModel;


struct _1c19727a1_BackendEmitExprModel;


struct _1c1b32862_DirectiveChecker;


struct _1c1b398be_Package;


struct _1c1b18a24_Sema;


struct _1c1b58316_IterRelation;


struct _1c1d617a5_RangeChecker;


struct _1c2020e2b_SymbolTable;


struct _1c1ead281_Data;


struct _1c1ead281_Value;


struct _1c1ead281_Eval;


struct _1a8ad0a37_TypeKind;


struct _1a8ad0a37_TypeSymbol;


struct _1a8ad0a37_Prim;


struct _1a8ad0a37_Sptr;


struct _1a8ad0a37_Slc;


struct _1a8ad0a37_Tuple;


struct _1a8ad0a37_Map;


struct _1a8ad0a37_Arr;


struct _1a8ad0a37_Ptr;


struct _1a8ad0a37_Referencer;


struct _1da76219d_DirectiveEval;


struct _1da7889cc_PlainImporter;


struct _1da73db6e_OrderedDefines;


struct _1da73db6e_DefineOrderer;


struct _1da7303ad_ScopeDeadCode;


struct _1a93d0c71_AbsTime;


struct _1a93d0c71_Time;


struct _1a93d0c71_Duration;


struct _1d9d8c4cc_Flag_0;

struct _1d9d8c4cc_Flag_1;

struct _1d9d8c4cc_Flag_2;

struct _1d9d8c4cc_Flag_3;

struct _1d9d8c4cc_Flag_4;


struct _1d9d8c4cc_FlagSet;


struct _1da7b8e5d_RangeKind;


struct _1da7b8e5d_BreakSt;


struct _1da7b8e5d_ContSt;


struct _1da7b8e5d_If;


struct _1da7b8e5d_Else;


struct _1da7b8e5d_Directive;


struct _1da7b8e5d_TypeAliasDecl;


struct _1c19727a1_FnCallExprModel;


struct _1da7b8e5d_Case;


struct _1da7b8e5d_MatchCase;


struct _1da7b8e5d_UseDecl;


struct _1da7b8e5d_EnumItemDecl;


struct _1da7b8e5d_EnumDecl;


struct _1da7b8e5d_FieldDecl;


struct _1da7b8e5d_StructDecl;


struct _1da7b8e5d_TraitDecl;


struct _1da7b8e5d_Impl;


struct _1da7b8e5d_Expr;


struct _1da7b8e5d_UseExpr;


struct _1da7b8e5d_TypeDecl;


struct _1da7b8e5d_LitExpr;


struct _1da7b8e5d_UnsafeExpr;


struct _1da7b8e5d_CoExpr;


struct _1c152a326_AssignInfo;


struct _1da7b8e5d_IdentExpr;


struct _1c19727a1_BuiltinPanicCallExprModel;


struct _1c19727a1_BuiltinAssertCallExprModel;


struct _1da7b8e5d_UnaryExpr;


struct _1da7b8e5d_VariadicExpr;


struct _1db4a7e59_Field;


struct _1db4a7e59_Struct;


struct _1da7b8e5d_IdentTypeDecl;


struct _1da7b8e5d_NsSelectionExpr;


struct _1da7b8e5d_SubIdentExpr;


struct _1c17e2687_Param;


struct _1c17e2687_Fn;


struct _1da7b8e5d_BinopExpr;


struct _1c1b398be_ImportInfo;


struct _1da7b8e5d_FnCallExpr;


struct _1da7b8e5d_FieldExprPair;


struct _1c18c86d5_Pass;


struct _1c1b58316_Var;


struct _1c1d617a5_TypeCompatibilityChecker;


struct _1c1d617a5_AssignTypeChecker;


struct _1c1d617a5_DynamicTypeAnnotation;


struct _1c1d617a5_FnCallArgChecker;


struct _1c1d617a5_StructLitChecker;


struct _1da7b8e5d_Node;


struct _1c1d617a5_RetTypeChecker;


struct _1c196b2a0_Trait;


struct _1c196c834_EnumItem;


struct _1c196c834_Enum;


struct _1c1977ee3_Impl;


struct _1c1ead281_BinopSolver;


struct _1a8ad0a37_TypeAlias;


struct _1da7b8e5d_BraceLit;


struct _1da7b8e5d_KeyValPair;


struct _1da7b8e5d_SliceExpr;


struct _1da7b8e5d_IndexingExpr;


struct _1da7b8e5d_SlicingExpr;


struct _1da7b8e5d_TernaryExpr;


struct _1da7b8e5d_GenericDecl;


struct _1da7b8e5d_LabelSt;


struct _1da7b8e5d_GotoSt;


struct _1da7b8e5d_FallSt;


struct _1a8ad0a37_TypeChecker;


struct _1da7b8e5d_AssignLeft;


struct _1da7b8e5d_AssignSt;


struct _1da73e9b6_IR;


struct _1da7b8e5d_Comment;


struct _1da7b8e5d_ParamDecl;


struct _1da7b8e5d_FnDecl;


struct _1da7b8e5d_VarDecl;


struct _1da7b8e5d_RetSt;


struct _1da7b8e5d_Iter;


struct _1c197a248_ScopeLabel;


struct _1da7b8e5d_WhileKind;


struct _1d9d8c4cc_ArgParser;

struct _1c1b398be_Importer {
	virtual ~_1c1b398be_Importer(void) {}

	virtual jule::Ptr<_1c1b398be_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_1da7635cd_Ast>>,jule::Slice<_203741197_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ptr<_1c1b398be_ImportInfo>) {}
};

struct _1a8ad0a37_Kind {
	virtual ~_1a8ad0a37_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _4722_other) { return {}; }
};

struct _1a8be79c8_Lookup {
	virtual ~_1a8be79c8_Lookup(void) {}

	virtual jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1d9d8c4cc_CommonFlag {
	virtual ~_1d9d8c4cc_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _20370d928_AnsiEscape {
	

	_20370d928_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _20370d928_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _20370d928_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _20370d928_Logger {
	

	_20370d928_Logger(void) = default;

	static inline void _static_method_log_flat(_203741197_Log&);


	static inline void _static_method_log_error(_203741197_Log&);


	static inline void _static_method_log(_203741197_Log&);


	static inline void _static_method_print_logs(jule::Slice<_203741197_Log>&);


	inline bool operator==(const _20370d928_Logger &_Src) const { return true; }

	inline bool operator!=(const _20370d928_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _20525e312_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::Int _field_w = jule::Int();
	jule::Str _field_vol_and_path = jule::Str();
	jule::Int _field_vol_len = jule::Int();


	_20525e312_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_20525e312_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _20525e312_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _20525e312_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _20379d743_Cmd {
	jule::Str _field__fle = jule::Str();
	jule::Int _field__pid = jule::Int();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_20379d743_Cmd(jule::Str __param__fle, jule::Int __param__pid, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field__fle(__param__fle), _field__pid(__param__pid), _field_args(__param_args), _field_env(__param_env) {}

	

	_20379d743_Cmd(void) = default;

	static inline jule::Ptr<_20379d743_Cmd> _static_method_new(jule::Str);


	inline jule::Int _method_pid(void);


	inline jule::Str _method_file(void);


	inline jule::VoidExceptional _method_spawn(void);


	inline jule::VoidExceptional _method_kill(void);


	inline jule::Exceptional<jule::Int> _method_wait(void);


	inline bool operator==(const _20379d743_Cmd &_Src) const {
		return 
			this->_field__fle == _Src._field__fle &&
			this->_field__pid == _Src._field__pid &&
			this->_field_args == _Src._field_args &&
			this->_field_env == _Src._field_env;
	}

	inline bool operator!=(const _20379d743_Cmd &_Src) const { return !this->operator==(_Src); }
};


struct _203741197_Log {
	jule::Int _field_kind = 0LLU;
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_203741197_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_203741197_Log(void) = default;

	inline bool operator==(const _203741197_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _203741197_Log &_Src) const { return !this->operator==(_Src); }
};


struct _2037c5759_FloatInfo {
	jule::Uint _field_mantbits = jule::Uint();
	jule::Uint _field_expbits = jule::Uint();
	jule::Int _field_bias = jule::Int();


	_2037c5759_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_2037c5759_FloatInfo(void) = default;

	inline bool operator==(const _2037c5759_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _2037c5759_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2037c5759_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();


	_2037c5759_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_2037c5759_DecimalSlice(void) = default;

	inline bool operator==(const _2037c5759_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _2037c5759_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1da102588_LeftCheat {
	jule::Int _field_delta = jule::Int();
	jule::Str _field_cutoff = jule::Str();


	_1da102588_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1da102588_LeftCheat(void) = default;

	inline bool operator==(const _1da102588_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1da102588_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1da102588_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1da102588_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1da102588_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_2037c5759_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1da102588_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1da102588_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1db2d9c36_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1db2d9c36_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1db2d9c36_FoldPair(void) = default;

	inline bool operator==(const _1db2d9c36_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1db2d9c36_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1db2d9c36_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1db2d9c36_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1db2d9c36_CaseRange(void) = default;

	inline bool operator==(const _1db2d9c36_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1db2d9c36_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1db2d9c36_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1db2d9c36_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1db2d9c36_Range16(void) = default;

	inline bool operator==(const _1db2d9c36_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1db2d9c36_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1db2d9c36_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1db2d9c36_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1db2d9c36_Range32(void) = default;

	inline bool operator==(const _1db2d9c36_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1db2d9c36_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1db2d9c36_RangeTable {
	jule::Slice<_1db2d9c36_Range16> _field_r16 = jule::Slice<_1db2d9c36_Range16>();
	jule::Slice<_1db2d9c36_Range32> _field_r32 = jule::Slice<_1db2d9c36_Range32>();
	jule::Int _field_latin_offset = jule::Int();


	_1db2d9c36_RangeTable(jule::Slice<_1db2d9c36_Range16> __param_r16, jule::Slice<_1db2d9c36_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1db2d9c36_RangeTable(void) = default;

	inline bool operator==(const _1db2d9c36_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1db2d9c36_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1da91c952_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1da91c952_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1da91c952_accept_range(void) = default;

	inline bool operator==(const _1da91c952_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1da91c952_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1db3db7e9_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1db3e1b84_Status> _field_stat = jule::Ptr<_1db3e1b84_Status>();


	_1db3db7e9_DirEntry(jule::Str __param_name, jule::Ptr<_1db3e1b84_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1db3db7e9_DirEntry(void) = default;

	inline bool operator==(const _1db3db7e9_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1db3db7e9_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1db3db7e9_Directory {
	

	_1db3db7e9_Directory(void) = default;

	static inline jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_create(jule::Str);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline bool operator==(const _1db3db7e9_Directory &_Src) const { return true; }

	inline bool operator!=(const _1db3db7e9_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _1db3ddeb1_File {
	jule::Uintptr _field_handle = jule::Uintptr();


	_1db3ddeb1_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_1db3ddeb1_File(void) = default;

	static inline jule::Exceptional<jule::Ptr<_1db3ddeb1_File>> _static_method_open(jule::Str,jule::Int,jule::Int);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ptr<_1db3ddeb1_File> _static_method_new(jule::Uintptr);


	static inline jule::Exceptional<jule::Ptr<_1db3ddeb1_File>> _static_method_create(jule::Str);


	static inline jule::Exceptional<jule::Slice<jule::U8>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	inline jule::Exceptional<jule::I64> _method_seek(jule::I64,jule::Int);


	inline jule::VoidExceptional _method_close(void);


	inline bool operator==(const _1db3ddeb1_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1db3ddeb1_File &_Src) const { return !this->operator==(_Src); }
};


struct _1db3e1b84_Status {
	jule::Uint _field_mode = jule::Uint();
	jule::Uint _field_size = jule::Uint();


	_1db3e1b84_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1db3e1b84_Status(void) = default;

	static inline jule::Exceptional<jule::Ptr<_1db3e1b84_Status>> _static_method_of(jule::Str);


	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1db3e1b84_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1db3e1b84_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1da81133a_Token {
	jule::Ptr<_1da7bba21_File> _field_file = jule::Ptr<_1da7bba21_File>();
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_kind = jule::Str();
	jule::Uint _field_id = 0LLU;


	_1da81133a_Token(jule::Ptr<_1da7bba21_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1da81133a_Token(void) = default;

	inline jule::U8 _method_prec(void);


	inline bool operator==(const _1da81133a_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1da81133a_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1da7bba21_File {
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Str _field__path = jule::Str();
	jule::Slice<_1da81133a_Token> _field__tokens = jule::Slice<_1da81133a_Token>();


	_1da7bba21_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1da81133a_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_1da7bba21_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1da81133a_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1da7bba21_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1da7bba21_File &_Src) const { return !this->operator==(_Src); }
};


struct _1da7bd281_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::Uint _field_id = 0LLU;


	_1da7bd281_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1da7bd281_KindPair(void) = default;

	inline bool operator==(const _1da7bd281_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1da7bd281_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1da7bd281_Lex {
	jule::Slice<_1da81133a_Token> _field_tokens = jule::Slice<_1da81133a_Token>();
	jule::Ptr<_1da7bba21_File> _field_file = jule::Ptr<_1da7bba21_File>();
	jule::Int _field_pos = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Int _field_row = jule::Int();
	jule::Slice<_203741197_Log> _field_errors = jule::Slice<_203741197_Log>();


	_1da7bd281_Lex(jule::Slice<_1da81133a_Token> __param_tokens, jule::Ptr<_1da7bba21_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_203741197_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1da7bd281_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1da81133a_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1da81133a_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1da81133a_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1da81133a_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1da81133a_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1da81133a_Token&);


	inline _1da81133a_Token _method_token(void);


	inline bool operator==(const _1da7bd281_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1da7bd281_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1da7635cd_Ast {
	jule::Ptr<_1da7bba21_File> _field_file = jule::Ptr<_1da7bba21_File>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Slice<jule::Ptr<_1da7b8e5d_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1da7b8e5d_UseDecl>>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Impl>> _field_impls = jule::Slice<jule::Ptr<_1da7b8e5d_Impl>>();
	jule::Slice<_1da7b8e5d_Node> _field_decls = jule::Slice<_1da7b8e5d_Node>();


	_1da7635cd_Ast(jule::Ptr<_1da7bba21_File> __param_file, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1da7b8e5d_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_1da7b8e5d_Impl>> __param_impls, jule::Slice<_1da7b8e5d_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_decls(__param_decls) {}

	

	_1da7635cd_Ast(void) = default;

	inline bool operator==(const _1da7635cd_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1da7635cd_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_CommentGroup {
	jule::Slice<jule::Ptr<_1da7b8e5d_Comment>> _field_comments = jule::Slice<jule::Ptr<_1da7b8e5d_Comment>>();


	_1da7b8e5d_CommentGroup(jule::Slice<jule::Ptr<_1da7b8e5d_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_1da7b8e5d_CommentGroup(void) = default;

	inline bool operator==(const _1da7b8e5d_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1da7b8e5d_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_NamespaceTypeDecl {
	jule::Slice<_1da81133a_Token> _field_idents = jule::Slice<_1da81133a_Token>();
	jule::Ptr<_1da7b8e5d_IdentTypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_IdentTypeDecl>();


	_1da7b8e5d_NamespaceTypeDecl(jule::Slice<_1da81133a_Token> __param_idents, jule::Ptr<_1da7b8e5d_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1da7b8e5d_NamespaceTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da7b8e5d_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_SptrTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_elem = jule::Ptr<_1da7b8e5d_TypeDecl>();


	_1da7b8e5d_SptrTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1da7b8e5d_SptrTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_SptrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da7b8e5d_SptrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_SlcTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_elem = jule::Ptr<_1da7b8e5d_TypeDecl>();


	_1da7b8e5d_SlcTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1da7b8e5d_SlcTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da7b8e5d_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>();


	_1da7b8e5d_TupleTypeDecl(jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1da7b8e5d_TupleTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1da7b8e5d_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_PtrTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_elem = jule::Ptr<_1da7b8e5d_TypeDecl>();


	_1da7b8e5d_PtrTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1da7b8e5d_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1da7b8e5d_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da7b8e5d_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_ArrTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_elem = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Ptr<_1da7b8e5d_Expr> _field_size = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_ArrTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_elem, jule::Ptr<_1da7b8e5d_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1da7b8e5d_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1da7b8e5d_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1da7b8e5d_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_MapTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_key = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_val = jule::Ptr<_1da7b8e5d_TypeDecl>();


	_1da7b8e5d_MapTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_key, jule::Ptr<_1da7b8e5d_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1da7b8e5d_MapTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1da7b8e5d_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_RetTypeDecl {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Slice<_1da81133a_Token> _field_idents = jule::Slice<_1da81133a_Token>();


	_1da7b8e5d_RetTypeDecl(jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Slice<_1da81133a_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1da7b8e5d_RetTypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1da7b8e5d_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TupleExpr {
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _field_expr = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>();


	_1da7b8e5d_TupleExpr(jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1da7b8e5d_TupleExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_CastExpr {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Any _field_expr = jule::Any();


	_1da7b8e5d_CastExpr(jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1da7b8e5d_CastExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_StructLit {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1da7b8e5d_StructLit(jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1da7b8e5d_StructLit(void) = default;

	inline bool operator==(const _1da7b8e5d_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1da7b8e5d_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_ScopeTree {
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_parent = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1da7b8e5d_ScopeTree(jule::Ptr<_1da7b8e5d_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1da7b8e5d_ScopeTree(void) = default;

	inline bool operator==(const _1da7b8e5d_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1da7b8e5d_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Conditional {
	jule::Ptr<_1da7b8e5d_If> _field_head = jule::Ptr<_1da7b8e5d_If>();
	jule::Slice<jule::Ptr<_1da7b8e5d_If>> _field_tail = jule::Slice<jule::Ptr<_1da7b8e5d_If>>();
	jule::Ptr<_1da7b8e5d_Else> _field_default = jule::Ptr<_1da7b8e5d_Else>();


	_1da7b8e5d_Conditional(jule::Ptr<_1da7b8e5d_If> __param_head, jule::Slice<jule::Ptr<_1da7b8e5d_If>> __param_tail, jule::Ptr<_1da7b8e5d_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1da7b8e5d_Conditional(void) = default;

	inline bool operator==(const _1da7b8e5d_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1da7b8e5d_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a8399_FileInfo {
	jule::Ptr<_1da7635cd_Ast> _field_ast = jule::Ptr<_1da7635cd_Ast>();
	jule::Slice<_203741197_Log> _field_errors = jule::Slice<_203741197_Log>();


	_1db4a8399_FileInfo(jule::Ptr<_1da7635cd_Ast> __param_ast, jule::Slice<_203741197_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1db4a8399_FileInfo(void) = default;

	inline bool operator==(const _1db4a8399_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1db4a8399_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a8399_PackageInfo {
	jule::Slice<jule::Ptr<_1db4a8399_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1db4a8399_FileInfo>>();


	_1db4a8399_PackageInfo(jule::Slice<jule::Ptr<_1db4a8399_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1db4a8399_PackageInfo(void) = default;

	inline bool operator==(const _1db4a8399_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1db4a8399_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a8553_Stmt {
	jule::Slice<_1da81133a_Token> _field_tokens = jule::Slice<_1da81133a_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_1db4a8553_Stmt(jule::Slice<_1da81133a_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1db4a8553_Stmt(void) = default;

	inline bool operator==(const _1db4a8553_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1db4a8553_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a8553_ScopeParser {
	jule::Ptr<_1c1526124_Parser> _field_p = jule::Ptr<_1c1526124_Parser>();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_s = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1db4a8553_Stmt>>();
	jule::Int _field_pos = jule::Int();


	_1db4a8553_ScopeParser(jule::Ptr<_1c1526124_Parser> __param_p, jule::Ptr<_1da7b8e5d_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1db4a8553_Stmt>> __param_stmts, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1db4a8553_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1da81133a_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1db4a8553_Stmt> _method_next(void);


	inline jule::Ptr<_1da7b8e5d_ScopeTree> _method_build_scope(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ptr<_1db4a8553_Stmt>&);


	inline jule::Ptr<_1da7b8e5d_WhileKind> _method_build_while_iter_kind(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Slice<_1da81133a_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_VarDecl> _method_build_range_kind_key(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1da81133a_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ptr<_1da7b8e5d_RangeKind>&,jule::Slice<_1da81133a_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ptr<_1da7b8e5d_RangeKind>&,jule::Slice<_1da81133a_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ptr<_1da7b8e5d_RangeKind>&,jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_RangeKind> _method_build_range_iter_kind(jule::Slice<_1da81133a_Token>&,jule::Slice<_1da81133a_Token>&,_1da81133a_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1da81133a_Token>&,_1da81133a_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ptr<_1db4a8553_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_If> _method_build_if(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_Else> _method_build_else(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_comment_st(_1da81133a_Token&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1da81133a_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1da81133a_Token>,_1da81133a_Token,jule::Bool,jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _method_build_case_exprs(jule::Slice<_1da81133a_Token>&,jule::Bool);


	inline jule::Ptr<_1da7b8e5d_ScopeTree> _method_build_case_scope(jule::Slice<_1da81133a_Token>&);


	inline std::tuple<jule::Ptr<_1da7b8e5d_Case>,jule::Bool> _method_build_case(jule::Slice<_1da81133a_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ptr<_1da7b8e5d_Case>>,jule::Ptr<_1da7b8e5d_Else>> _method_build_cases(jule::Slice<_1da81133a_Token>,jule::Bool);


	inline jule::Ptr<_1da7b8e5d_MatchCase> _method_build_match_case(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_ScopeTree> _method_build_scope_st(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_LabelSt> _method_build_label_st(jule::Slice<_1da81133a_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1c152a326_AssignInfo> _method_build_assign_info(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_AssignLeft> _method_build_assign_l(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1da81133a_Token>>&);


	inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1da81133a_Token>&);


	inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1da81133a_Token>);


	inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_use_expr(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_st(jule::Ptr<_1db4a8553_Stmt>&);


	inline void _method_build(jule::Slice<_1da81133a_Token>&,jule::Ptr<_1da7b8e5d_ScopeTree>&);


	inline bool operator==(const _1db4a8553_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1db4a8553_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1db4ca7d9_CallData {
	jule::Slice<_1da81133a_Token> _field_expr_tokens = jule::Slice<_1da81133a_Token>();
	jule::Slice<_1da81133a_Token> _field_args_tokens = jule::Slice<_1da81133a_Token>();
	jule::Slice<_1da81133a_Token> _field_generics_tokens = jule::Slice<_1da81133a_Token>();


	_1db4ca7d9_CallData(jule::Slice<_1da81133a_Token> __param_expr_tokens, jule::Slice<_1da81133a_Token> __param_args_tokens, jule::Slice<_1da81133a_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1db4ca7d9_CallData(void) = default;

	inline bool operator==(const _1db4ca7d9_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1db4ca7d9_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1db4ca7d9_ExprBuilder {
	jule::Ptr<_1c1526124_Parser> _field_p = jule::Ptr<_1c1526124_Parser>();


	_1db4ca7d9_ExprBuilder(jule::Ptr<_1c1526124_Parser> __param_p): _field_p(__param_p) {}

	

	_1db4ca7d9_ExprBuilder(void) = default;

	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1da7b8e5d_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1da81133a_Token>>&);


	inline jule::Ptr<_1da7b8e5d_LitExpr> _method_build_lit(_1da81133a_Token);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_primitive_type(_1da81133a_Token&);


	inline jule::Any _method_build_single(_1da81133a_Token);


	inline jule::Ptr<_1da7b8e5d_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_UnaryExpr> _method_build_unary(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_type(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_VariadicExpr> _method_build_variadic(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_CastExpr> _method_try_build_cast(jule::Slice<_1da81133a_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>&,jule::Slice<_1da81133a_Token>,_1da81133a_Token);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _method_build_args(jule::Slice<_1da81133a_Token>);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _method_build_call_generics(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_FnCallExpr> _method_build_fn_call(_1da81133a_Token&,jule::Ptr<_1db4ca7d9_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_FnDecl> _method_build_anon_fn(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1da81133a_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1da81133a_Token>,_1da81133a_Token,jule::Slice<jule::Slice<_1da81133a_Token>>&);


	inline jule::Slice<jule::Slice<_1da81133a_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_StructLit> _method_build_typed_struct_literal(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_BraceLit> _method_build_brace_lit(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Slice<_1da81133a_Token>> _method_get_enumerable_parts(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_SliceExpr> _method_build_slice(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_IndexingExpr> _method_build_indexing(jule::Slice<_1da81133a_Token>,jule::Slice<_1da81133a_Token>,_1da81133a_Token);


	inline jule::Ptr<_1da7b8e5d_SlicingExpr> _method_build_slicing(jule::Slice<_1da81133a_Token>&,jule::Slice<_1da81133a_Token>&,jule::Int&,_1da81133a_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_BinopExpr> _method_build_binop(jule::Slice<_1da81133a_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1da81133a_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_Expr> _method_build_from_tokens(jule::Slice<_1da81133a_Token>);


	inline bool operator==(const _1db4ca7d9_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1db4ca7d9_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1c1526124_Parser {
	jule::Ptr<_1c1526124_Parser> self;

	jule::Ptr<_1da7635cd_Ast> _field_ast = jule::Ptr<_1da7635cd_Ast>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_comment_group = jule::Ptr<_1da7b8e5d_CommentGroup>();
	jule::Slice<_203741197_Log> _field_errors = jule::Slice<_203741197_Log>();


	_1c1526124_Parser(jule::Ptr<_1da7635cd_Ast> __param_ast, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Ptr<_1da7b8e5d_CommentGroup> __param_comment_group, jule::Slice<_203741197_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_1c1526124_Parser>::make(this, nullptr);

	}

	~_1c1526124_Parser(void) { this->self.ref = nullptr; }

	_1c1526124_Parser(void) { this->self = jule::Ptr<_1c1526124_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1da7b8e5d_Expr> _method_build_expr(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_Directive> _method_build_directive(jule::Slice<_1da81133a_Token>);


	inline void _method_push_directive(jule::Ptr<_1da7b8e5d_Directive>);


	inline jule::Ptr<_1da7b8e5d_ScopeTree> _method_build_scope(jule::Slice<_1da81133a_Token>&);


	inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1da81133a_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1da81133a_Token>&,jule::Int*,jule::Bool);


	inline jule::Ptr<_1da7b8e5d_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1da81133a_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ptr<_1da7b8e5d_VarDecl>&,jule::Slice<_1da81133a_Token>&);


	inline void _method_build_var_common(jule::Ptr<_1da7b8e5d_VarDecl>&,jule::Slice<_1da81133a_Token>);


	inline void _method_build_var_begin(jule::Ptr<_1da7b8e5d_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_VarDecl> _method_build_var(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_GenericDecl> _method_build_generic(jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _method_build_generics(jule::Slice<_1da81133a_Token>&,_1da81133a_Token&);


	inline jule::Ptr<_1da7b8e5d_ParamDecl> _method_build_self_param(jule::Slice<_1da81133a_Token>);


	inline void _method_param_type_begin(jule::Ptr<_1da7b8e5d_ParamDecl>&,jule::Int&,jule::Slice<_1da81133a_Token>&);


	inline void _method_build_param_type(jule::Ptr<_1da7b8e5d_ParamDecl>&,jule::Slice<_1da81133a_Token>&);


	inline void _method_param_body_id(jule::Ptr<_1da7b8e5d_ParamDecl>,_1da81133a_Token);


	inline void _method_build_param_body(jule::Ptr<_1da7b8e5d_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_ParamDecl> _method_build_param(jule::Slice<_1da81133a_Token>);


	inline void _method_check_params(jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>> _method_build_params(jule::Slice<_1da81133a_Token>&,jule::Bool);


	inline std::tuple<jule::Ptr<_1da7b8e5d_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1da81133a_Token>&,jule::Int&);


	inline std::tuple<jule::Ptr<_1da7b8e5d_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1da81133a_Token>&,jule::Int&);


	inline jule::Ptr<_1da7b8e5d_FnDecl> _method_build_fn_prototype(jule::Slice<_1da81133a_Token>&,jule::Int&,jule::Bool);


	inline jule::Ptr<_1da7b8e5d_FnDecl> _method_build_fn(jule::Slice<_1da81133a_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1da81133a_Token> _method_get_use_decl_selectors(jule::Slice<_1da81133a_Token>);


	inline void _method_build_cpp_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>&,jule::Slice<_1da81133a_Token>&);


	inline void _method_build_std_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>&,jule::Slice<_1da81133a_Token>);


	inline void _method_build_ident_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>&,jule::Slice<_1da81133a_Token>);


	inline void _method_parse_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>&,jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_UseDecl> _method_build_use_decl(jule::Slice<_1da81133a_Token>,jule::Bool);


	inline jule::Ptr<_1da7b8e5d_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_1da81133a_Token>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_EnumDecl> _method_build_enum_decl(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_FieldDecl> _method_build_field(jule::Slice<_1da81133a_Token>);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_StructDecl> _method_build_struct_decl(jule::Slice<_1da81133a_Token>&);


	inline void _method_check_method_receiver(jule::Ptr<_1da7b8e5d_FnDecl>&);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> _method_build_trait_methods(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_TraitDecl> _method_build_trait_decl(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_VarDecl> _method_build_cpp_link_var(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1da81133a_Token>);


	inline jule::Ptr<_1da7b8e5d_UseDecl> _method_build_cpp_link_use(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_FnDecl> _method_get_method(jule::Slice<_1da81133a_Token>&);


	inline void _method_parse_impl_body(jule::Ptr<_1da7b8e5d_Impl>&,jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_Impl> _method_build_impl(jule::Slice<_1da81133a_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1da81133a_Token>&);


	inline void _method_check_comment_group(_1da7b8e5d_Node&);


	inline void _method_check_directive(_1da7b8e5d_Node&);


	inline void _method_apply_fn_meta(jule::Ptr<_1da7b8e5d_FnDecl>&,jule::Bool);


	inline void _method_apply_meta(_1da7b8e5d_Node&,jule::Bool);


	inline void _method_check_use_decl(_1da7b8e5d_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1da81133a_Token>);


	inline _1da7b8e5d_Node _method_parse_node(jule::Slice<_1da81133a_Token>&);


	inline void _method_append_node(jule::Slice<_1da81133a_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1da81133a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1da81133a_Token&,jule::Slice<_1da81133a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1da81133a_Token,jule::Str,jule::Slice<_1da81133a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1da81133a_Token>&);


	inline void _method_parse(jule::Ptr<_1da7bba21_File>&);


	inline bool operator==(const _1c1526124_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1c1526124_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1c163edb9_TypeBuilder {
	jule::Ptr<_1c1526124_Parser> _field_p = jule::Ptr<_1c1526124_Parser>();
	jule::Slice<_1da81133a_Token> _field_tokens = jule::Slice<_1da81133a_Token>();
	jule::Int* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1c163edb9_TypeBuilder(jule::Ptr<_1c1526124_Parser> __param_p, jule::Slice<_1da81133a_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1c163edb9_TypeBuilder(void) = default;

	inline void _method_push_err(_1da81133a_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_prim(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1da81133a_Token>> _method_ident_generics(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_ident(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_fn(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_ptr(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_sptr(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_op(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_slc(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_arr(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1da81133a_Token>&);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_build_enumerable(void);


	inline jule::Ptr<_1da7b8e5d_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1c163edb9_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1c163edb9_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1a8d46165_Const {
	jule::Any _field_data = jule::Any();


	_1a8d46165_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a8d46165_Const(void) = default;

	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_str(jule::Str);


	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ptr<_1a8d46165_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1a8d46165_Const);


	inline jule::Bool _method_and(_1a8d46165_Const);


	inline jule::Bool _method_or(_1a8d46165_Const);


	inline jule::Bool _method_eqs(_1a8d46165_Const);


	inline jule::Bool _method_lt(_1a8d46165_Const);


	inline jule::Bool _method_gt(_1a8d46165_Const);


	inline jule::Bool _method_add(_1a8d46165_Const);


	inline jule::Bool _method_sub(_1a8d46165_Const);


	inline jule::Bool _method_mul(_1a8d46165_Const);


	inline jule::Bool _method_div(_1a8d46165_Const);


	inline jule::Bool _method_mod(_1a8d46165_Const);


	inline jule::Bool _method_bitwise_and(_1a8d46165_Const);


	inline jule::Bool _method_bitwise_or(_1a8d46165_Const);


	inline jule::Bool _method_xor(_1a8d46165_Const);


	inline jule::Bool _method_lshift(_1a8d46165_Const);


	inline jule::Bool _method_rshift(_1a8d46165_Const);


	inline bool operator==(const _1a8d46165_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1a8d46165_Const &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a7e59_FieldIns {
	jule::Ptr<_1db4a7e59_Field> _field_decl = jule::Ptr<_1db4a7e59_Field>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1db4a7e59_FieldIns(jule::Ptr<_1db4a7e59_Field> __param_decl, jule::Ptr<_1a8ad0a37_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1db4a7e59_FieldIns(void) = default;

	inline bool operator==(const _1db4a7e59_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1db4a7e59_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a7e59_StructIns: public _1a8ad0a37_Kind {
	jule::Ptr<_1db4a7e59_StructIns> self;

	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1db4a7e59_Struct> _field_decl = jule::Ptr<_1db4a7e59_Struct>();
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>();
	jule::Slice<jule::Ptr<_1db4a7e59_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1db4a7e59_FieldIns>>();
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c17e2687_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1c18c86d5_ReferenceStack> _field_references = jule::Ptr<_1c18c86d5_ReferenceStack>();


	_1db4a7e59_StructIns(jule::Bool __param_checked, jule::Ptr<_1db4a7e59_Struct> __param_decl, jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1db4a7e59_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1c17e2687_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1c18c86d5_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {
		this->self = jule::Ptr<_1db4a7e59_StructIns>::make(this, nullptr);

	}

	~_1db4a7e59_StructIns(void) { this->self.ref = nullptr; }

	_1db4a7e59_StructIns(void) { this->self = jule::Ptr<_1db4a7e59_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_same(jule::Ptr<_1db4a7e59_StructIns>);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1db4a7e59_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1db4a7e59_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1c17e2687_RetType {
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();
	jule::Slice<_1da81133a_Token> _field_idents = jule::Slice<_1da81133a_Token>();


	_1c17e2687_RetType(jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind, jule::Slice<_1da81133a_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1c17e2687_RetType(void) = default;

	inline bool operator==(const _1c17e2687_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1c17e2687_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1c17e2687_ParamIns {
	jule::Ptr<_1c17e2687_Param> _field_decl = jule::Ptr<_1c17e2687_Param>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1c17e2687_ParamIns(jule::Ptr<_1c17e2687_Param> __param_decl, jule::Ptr<_1a8ad0a37_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1c17e2687_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1c17e2687_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1c17e2687_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1c17e2687_FnIns: public _1a8ad0a37_Kind {
	jule::Ptr<_1c17e2687_FnIns> self;

	jule::Ptr<_1db4a7e59_StructIns> _field_owner = jule::Ptr<_1db4a7e59_StructIns>();
	jule::Ptr<_1c17e2687_Fn> _field_decl = jule::Ptr<_1c17e2687_Fn>();
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>();
	jule::Slice<jule::Ptr<_1c17e2687_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_result = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();
	jule::Ptr<_1c18c86d5_ReferenceStack> _field_references = jule::Ptr<_1c18c86d5_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Ptr<_1c18c86d5_ReferenceStack> _field_refers = jule::Ptr<_1c18c86d5_ReferenceStack>();
	jule::U8 _field_caller = jule::U8();
	jule::Bool _field_reloaded = jule::Bool();


	_1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns> __param_owner, jule::Ptr<_1c17e2687_Fn> __param_decl, jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1c17e2687_ParamIns>> __param_params, jule::Ptr<_1a8ad0a37_TypeKind> __param_result, jule::Ptr<_1c197a248_Scope> __param_scope, jule::Ptr<_1c18c86d5_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Ptr<_1c18c86d5_ReferenceStack> __param_refers, jule::U8 __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {
		this->self = jule::Ptr<_1c17e2687_FnIns>::make(this, nullptr);

	}

	~_1c17e2687_FnIns(void) { this->self.ref = nullptr; }

	_1c17e2687_FnIns(void) { this->self = jule::Ptr<_1c17e2687_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ptr<_1c17e2687_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1c17e2687_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_anon == _Src._field_anon &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded;
	}

	inline bool operator!=(const _1c17e2687_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1c18c86d5_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1c18c86d5_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1c18c86d5_ReferenceStack(void) = default;

	static inline jule::Ptr<_1c18c86d5_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ptr<_1c1b58316_Var>);
	inline jule::Bool _method_exist_1(jule::Ptr<_1c17e2687_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ptr<_1db4a7e59_StructIns>);


	inline bool operator==(const _1c18c86d5_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1c18c86d5_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1c18c86d5_SymbolBuilder {
	jule::Ptr<_1c18c86d5_SymbolBuilder> self;

	jule::Ptr<_1c18c86d5_SymbolBuilder> _field_owner = jule::Ptr<_1c18c86d5_SymbolBuilder>();
	jule::Trait<_1c1b398be_Importer> _field_importer = jule::Trait<_1c1b398be_Importer>();
	jule::Slice<_203741197_Log> _field_errors = jule::Slice<_203741197_Log>();
	jule::Ptr<_1da7635cd_Ast> _field_ast = jule::Ptr<_1da7635cd_Ast>();
	jule::Ptr<_1c2020e2b_SymbolTable> _field_table = jule::Ptr<_1c2020e2b_SymbolTable>();


	_1c18c86d5_SymbolBuilder(jule::Ptr<_1c18c86d5_SymbolBuilder> __param_owner, jule::Trait<_1c1b398be_Importer> __param_importer, jule::Slice<_203741197_Log> __param_errors, jule::Ptr<_1da7635cd_Ast> __param_ast, jule::Ptr<_1c2020e2b_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_1c18c86d5_SymbolBuilder>::make(this, nullptr);

	}

	~_1c18c86d5_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1c18c86d5_SymbolBuilder(void) { this->self = jule::Ptr<_1c18c86d5_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ptr<_1c18c86d5_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1da81133a_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1da81133a_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_build_std_import(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_build_ident_import(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_build_import(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_1c1b398be_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ptr<_1c1b398be_ImportInfo>&,jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ptr<_1c18c86d5_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ptr<_1c18c86d5_SymbolBuilder>&,jule::Ptr<_1c1b398be_ImportInfo>&,_1da81133a_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ptr<_1c1b398be_ImportInfo>,jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ptr<_1c1b398be_ImportInfo>&,jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_import_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1da7b8e5d_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1c18c86d5_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1c18c86d5_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Scope {
	jule::Ptr<_1c197a248_Scope> _field_parent = jule::Ptr<_1c197a248_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1c197a248_Scope(jule::Ptr<_1c197a248_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1c197a248_Scope(void) = default;

	inline bool operator==(const _1c197a248_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1c197a248_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();


	_1c197a248_If(jule::Any __param_expr, jule::Ptr<_1c197a248_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1c197a248_If(void) = default;

	inline bool operator==(const _1c197a248_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1c197a248_If &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Else {
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();


	_1c197a248_Else(jule::Ptr<_1c197a248_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1c197a248_Else(void) = default;

	inline bool operator==(const _1c197a248_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1c197a248_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Conditional {
	jule::Slice<jule::Ptr<_1c197a248_If>> _field_elifs = jule::Slice<jule::Ptr<_1c197a248_If>>();
	jule::Ptr<_1c197a248_Else> _field_default = jule::Ptr<_1c197a248_Else>();


	_1c197a248_Conditional(jule::Slice<jule::Ptr<_1c197a248_If>> __param_elifs, jule::Ptr<_1c197a248_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1c197a248_Conditional(void) = default;

	inline bool operator==(const _1c197a248_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1c197a248_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_InfIter {
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();


	_1c197a248_InfIter(jule::Ptr<_1c197a248_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1c197a248_InfIter(void) = default;

	inline bool operator==(const _1c197a248_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1c197a248_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();


	_1c197a248_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1c197a248_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1c197a248_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1c197a248_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1c197a248_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_RangeIter {
	jule::Ptr<_1c1ead281_Data> _field_expr = jule::Ptr<_1c1ead281_Data>();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();
	jule::Ptr<_1c1b58316_Var> _field_key_a = jule::Ptr<_1c1b58316_Var>();
	jule::Ptr<_1c1b58316_Var> _field_key_b = jule::Ptr<_1c1b58316_Var>();


	_1c197a248_RangeIter(jule::Ptr<_1c1ead281_Data> __param_expr, jule::Ptr<_1c197a248_Scope> __param_scope, jule::Ptr<_1c1b58316_Var> __param_key_a, jule::Ptr<_1c1b58316_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1c197a248_RangeIter(void) = default;

	inline bool operator==(const _1c197a248_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1c197a248_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();


	_1c197a248_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_1c197a248_ContSt(void) = default;

	inline bool operator==(const _1c197a248_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1c197a248_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();


	_1c197a248_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1c197a248_BreakSt(void) = default;

	inline bool operator==(const _1c197a248_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1c197a248_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Label {
	jule::Str _field_ident = jule::Str();


	_1c197a248_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1c197a248_Label(void) = default;

	inline bool operator==(const _1c197a248_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c197a248_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1c197a248_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1c197a248_GotoSt(void) = default;

	inline bool operator==(const _1c197a248_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c197a248_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1c197a248_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1c197a248_Postfix(void) = default;

	inline bool operator==(const _1c197a248_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1c197a248_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Assign {
	jule::Any _field_l = jule::Any();
	jule::Any _field_r = jule::Any();
	jule::Str _field_op = jule::Str();


	_1c197a248_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1c197a248_Assign(void) = default;

	inline bool operator==(const _1c197a248_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1c197a248_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1c197a248_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1c197a248_MultiAssign(void) = default;

	inline bool operator==(const _1c197a248_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1c197a248_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Match {
	jule::Ptr<_1c1ead281_Data> _field_expr = jule::Ptr<_1c1ead281_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1c197a248_Case>> _field_cases = jule::Slice<jule::Ptr<_1c197a248_Case>>();
	jule::Ptr<_1c197a248_Case> _field_default = jule::Ptr<_1c197a248_Case>();


	_1c197a248_Match(jule::Ptr<_1c1ead281_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1c197a248_Case>> __param_cases, jule::Ptr<_1c197a248_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1c197a248_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(const _1c197a248_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1c197a248_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_Case {
	jule::Ptr<_1c197a248_Match> _field_owner = jule::Ptr<_1c197a248_Match>();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();
	jule::Slice<jule::Ptr<_1c1ead281_Data>> _field_exprs = jule::Slice<jule::Ptr<_1c1ead281_Data>>();
	jule::Ptr<_1c197a248_Case> _field_next = jule::Ptr<_1c197a248_Case>();


	_1c197a248_Case(jule::Ptr<_1c197a248_Match> __param_owner, jule::Ptr<_1c197a248_Scope> __param_scope, jule::Slice<jule::Ptr<_1c1ead281_Data>> __param_exprs, jule::Ptr<_1c197a248_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1c197a248_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1c197a248_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1c197a248_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();


	_1c197a248_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1c197a248_FallSt(void) = default;

	inline bool operator==(const _1c197a248_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1c197a248_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_RetSt {
	jule::Ptr<_1c17e2687_FnIns> _field_func = jule::Ptr<_1c17e2687_FnIns>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_vars = jule::Slice<jule::Ptr<_1c1b58316_Var>>();
	jule::Any _field_expr = jule::Any();


	_1c197a248_RetSt(jule::Ptr<_1c17e2687_FnIns> __param_func, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1c197a248_RetSt(void) = default;

	inline bool operator==(const _1c197a248_RetSt &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c197a248_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_ScopeGoto {
	jule::Ptr<_1da7b8e5d_GotoSt> _field_gt = jule::Ptr<_1da7b8e5d_GotoSt>();
	jule::Ptr<_1c197a248_ScopeChecker> _field_scope = jule::Ptr<_1c197a248_ScopeChecker>();
	jule::Int _field_pos = jule::Int();


	_1c197a248_ScopeGoto(jule::Ptr<_1da7b8e5d_GotoSt> __param_gt, jule::Ptr<_1c197a248_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1c197a248_ScopeGoto(void) = default;

	inline bool operator==(const _1c197a248_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1c197a248_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_ScopeChecker: public _1a8be79c8_Lookup {
	jule::Ptr<_1c197a248_ScopeChecker> self;

	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Ptr<_1c17e2687_FnIns> _field_owner = jule::Ptr<_1c17e2687_FnIns>();
	jule::Ptr<_1c197a248_ScopeChecker> _field_parent = jule::Ptr<_1c197a248_ScopeChecker>();
	jule::Int _field_child_index = jule::Int();
	jule::Ptr<_1c2020e2b_SymbolTable> _field_table = jule::Ptr<_1c2020e2b_SymbolTable>();
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_tree = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_result = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>>();
	jule::Int _field_i = jule::Int();


	_1c197a248_ScopeChecker(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Ptr<_1c17e2687_FnIns> __param_owner, jule::Ptr<_1c197a248_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_1c2020e2b_SymbolTable> __param_table, jule::Ptr<_1c197a248_Scope> __param_scope, jule::Ptr<_1da7b8e5d_ScopeTree> __param_tree, jule::Ptr<_1a8ad0a37_TypeKind> __param_result, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_1c197a248_ScopeChecker>::make(this, nullptr);

	}

	~_1c197a248_ScopeChecker(void) { this->self.ref = nullptr; }

	_1c197a248_ScopeChecker(void) { this->self = jule::Ptr<_1c197a248_ScopeChecker>::make(this, nullptr); }

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>);


	inline jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Bool _method_is_deferred(void);


	inline jule::Ptr<_1c197a248_ScopeChecker> _method_get_root(void);


	inline jule::Ptr<_1c197a248_Label> _method_find_label(jule::Str);


	inline jule::Ptr<_1c197a248_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ptr<_1c197a248_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ptr<_1da7b8e5d_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1da7b8e5d_TypeAliasDecl>);


	inline jule::Ptr<_1c197a248_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ptr<_1da7b8e5d_ScopeTree>&,jule::Ptr<_1c197a248_Scope>&,jule::Ptr<_1c197a248_ScopeChecker>&);


	inline jule::Ptr<_1c197a248_Scope> _method_check_child_sc(jule::Ptr<_1da7b8e5d_ScopeTree>&,jule::Ptr<_1c197a248_ScopeChecker>&);


	inline jule::Ptr<_1c197a248_Scope> _method_check_child(jule::Ptr<_1da7b8e5d_ScopeTree>&);


	inline void _method_check_anon_scope(jule::Ptr<_1da7b8e5d_ScopeTree>);


	inline void _method_process_error_call(jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>&,_1da81133a_Token);


	inline void _method_check_expr(jule::Ptr<_1da7b8e5d_Expr>);


	inline void _method_check_co_expr(jule::Ptr<_1da7b8e5d_CoExpr>);


	inline jule::Ptr<_1c197a248_If> _method_check_if(jule::Ptr<_1da7b8e5d_If>);


	inline jule::Ptr<_1c197a248_Else> _method_check_else(jule::Ptr<_1da7b8e5d_Else>);


	inline void _method_check_conditional(jule::Ptr<_1da7b8e5d_Conditional>);


	inline jule::Ptr<_1c197a248_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_1da7b8e5d_ScopeTree>,jule::Ptr<_1c197a248_ScopeChecker>);


	inline jule::Ptr<_1c197a248_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_1da7b8e5d_ScopeTree>&);


	inline void _method_check_inf_iter(jule::Ptr<_1da7b8e5d_Iter>&);


	inline void _method_check_while_iter(jule::Ptr<_1da7b8e5d_Iter>&);


	inline void _method_check_range_iter(jule::Ptr<_1da7b8e5d_Iter>&);


	inline void _method_check_iter(jule::Ptr<_1da7b8e5d_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ptr<_1c197a248_ContSt> _method_check_cont_valid_scope(jule::Ptr<_1da7b8e5d_ContSt>);


	inline void _method_check_cont(jule::Ptr<_1da7b8e5d_ContSt>);


	inline void _method_check_label(jule::Ptr<_1da7b8e5d_LabelSt>);


	inline void _method_push_goto(jule::Ptr<_1da7b8e5d_GotoSt>);


	inline void _method_check_postfix(jule::Ptr<_1da7b8e5d_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ptr<_1da7b8e5d_AssignSt>&);


	inline void _method___process_end_part_of_multi_assign(jule::Ptr<_1c197a248_MultiAssign>,jule::Ptr<_1da7b8e5d_AssignSt>,jule::Ptr<_1da7b8e5d_AssignLeft>,jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1c1ead281_Data>);


	inline void _method_check_ret_multi_assign(jule::Ptr<_1da7b8e5d_AssignSt>&);


	inline void _method_check_multi_assign(jule::Ptr<_1da7b8e5d_AssignSt>&);


	inline void _method_check_assign_st(jule::Ptr<_1da7b8e5d_AssignSt>);


	inline jule::Ptr<_1c197a248_Scope> _method_check_case_scope(jule::Ptr<_1c197a248_Case>&,jule::Ptr<_1da7b8e5d_ScopeTree>&);


	inline jule::Ptr<_1c197a248_Case> _method_check_case(jule::Ptr<_1c197a248_Match>,jule::Int,jule::Ptr<_1da7b8e5d_Case>,jule::Ptr<_1c1ead281_Data>);


	inline void _method_check_cases(jule::Ptr<_1da7b8e5d_MatchCase>&,jule::Ptr<_1c197a248_Match>,jule::Ptr<_1c1ead281_Data>);


	inline jule::Ptr<_1c197a248_Case> _method_check_default(jule::Ptr<_1c197a248_Match>,jule::Ptr<_1da7b8e5d_Else>);


	inline void _method_check_comptime_panic(jule::Ptr<_1c197a248_Scope>&,_1da81133a_Token);


	inline void _method_push_type_match(jule::Ptr<_1c197a248_Match>,jule::Ptr<_1da7b8e5d_MatchCase>&);


	inline void _method_check_type_match(jule::Ptr<_1da7b8e5d_MatchCase>&);


	inline void _method_check_common_match(jule::Ptr<_1da7b8e5d_MatchCase>&);


	inline void _method_check_match(jule::Ptr<_1da7b8e5d_MatchCase>);


	inline void _method_check_fall(jule::Ptr<_1da7b8e5d_FallSt>);


	inline jule::Ptr<_1c197a248_BreakSt> _method_check_break_with_label(jule::Ptr<_1da7b8e5d_BreakSt>);


	inline jule::Ptr<_1c197a248_BreakSt> _method_check_plain_break(jule::Ptr<_1da7b8e5d_BreakSt>);


	inline void _method_check_break(jule::Ptr<_1da7b8e5d_BreakSt>);


	inline void _method_check_ret(jule::Ptr<_1da7b8e5d_RetSt>);


	inline void _method_check_use_expr(jule::Ptr<_1da7b8e5d_UseExpr>);


	inline void _method_check_node(jule::Any&);


	inline void _method_check_result(void);


	inline void _method_check_tree(void);


	inline void _method_check_goto(jule::Ptr<_1c197a248_ScopeGoto>&,jule::Ptr<_1c197a248_ScopeLabel>&);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ptr<_1da7b8e5d_ScopeTree>&,jule::Ptr<_1c197a248_Scope>&);


	inline jule::Ptr<_1c197a248_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1c197a248_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_result == _Src._field_result &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1c197a248_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BinopExprModel {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	jule::Str _field_op = jule::Str();


	_1c19727a1_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1c19727a1_BinopExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1c19727a1_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_UnaryExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1c19727a1_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1c19727a1_UnaryExprModel(void) = default;

	inline bool operator==(const _1c19727a1_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1c19727a1_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_StructArgExprModel {
	jule::Ptr<_1db4a7e59_FieldIns> _field_field = jule::Ptr<_1db4a7e59_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1c19727a1_StructArgExprModel(jule::Ptr<_1db4a7e59_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1c19727a1_StructArgExprModel(void) = default;

	inline bool operator==(const _1c19727a1_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_StructLitExprModel {
	jule::Ptr<_1db4a7e59_StructIns> _field_strct = jule::Ptr<_1db4a7e59_StructIns>();
	jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>>();


	_1c19727a1_StructLitExprModel(jule::Ptr<_1db4a7e59_StructIns> __param_strct, jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1c19727a1_StructLitExprModel(void) = default;

	inline bool operator==(const _1c19727a1_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1c19727a1_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_AllocStructLitExprModel {
	jule::Ptr<_1c19727a1_StructLitExprModel> _field_lit = jule::Ptr<_1c19727a1_StructLitExprModel>();


	_1c19727a1_AllocStructLitExprModel(jule::Ptr<_1c19727a1_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1c19727a1_AllocStructLitExprModel(void) = default;

	inline bool operator==(const _1c19727a1_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1c19727a1_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_CastingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_expr_kind = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1c19727a1_CastingExprModel(jule::Any __param_expr, jule::Ptr<_1a8ad0a37_TypeKind> __param_kind, jule::Ptr<_1a8ad0a37_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1c19727a1_CastingExprModel(void) = default;

	inline bool operator==(const _1c19727a1_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1c19727a1_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_SliceExprModel {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_elem_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1c19727a1_SliceExprModel(jule::Ptr<_1a8ad0a37_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1c19727a1_SliceExprModel(void) = default;

	inline bool operator==(const _1c19727a1_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1c19727a1_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_IndexigExprModel {
	jule::Ptr<_1c1ead281_Data> _field_expr = jule::Ptr<_1c1ead281_Data>();
	jule::Ptr<_1c1ead281_Data> _field_index = jule::Ptr<_1c1ead281_Data>();


	_1c19727a1_IndexigExprModel(jule::Ptr<_1c1ead281_Data> __param_expr, jule::Ptr<_1c1ead281_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1c19727a1_IndexigExprModel(void) = default;

	inline bool operator==(const _1c19727a1_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1c19727a1_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_AnonFnExprModel {
	jule::Ptr<_1c17e2687_FnIns> _field_func = jule::Ptr<_1c17e2687_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1c19727a1_AnonFnExprModel(jule::Ptr<_1c17e2687_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1c19727a1_AnonFnExprModel(void) = default;

	inline bool operator==(const _1c19727a1_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1c19727a1_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1c19727a1_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1c19727a1_KeyValPairExprModel(void) = default;

	inline bool operator==(const _1c19727a1_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1c19727a1_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_MapExprModel {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_key_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_val_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Slice<jule::Ptr<_1c19727a1_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1c19727a1_KeyValPairExprModel>>();


	_1c19727a1_MapExprModel(jule::Ptr<_1a8ad0a37_TypeKind> __param_key_kind, jule::Ptr<_1a8ad0a37_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1c19727a1_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1c19727a1_MapExprModel(void) = default;

	inline bool operator==(const _1c19727a1_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1c19727a1_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_SlicingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1c19727a1_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1c19727a1_SlicingExprModel(void) = default;

	inline bool operator==(const _1c19727a1_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1c19727a1_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_TraitSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1c19727a1_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1c19727a1_TraitSubIdentExprModel(void) = default;

	inline bool operator==(const _1c19727a1_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c19727a1_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_StructSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_expr_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1c17e2687_FnIns> _field_method = jule::Ptr<_1c17e2687_FnIns>();
	jule::Ptr<_1db4a7e59_FieldIns> _field_field = jule::Ptr<_1db4a7e59_FieldIns>();


	_1c19727a1_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_1a8ad0a37_TypeKind> __param_expr_kind, jule::Ptr<_1c17e2687_FnIns> __param_method, jule::Ptr<_1db4a7e59_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1c19727a1_StructSubIdentExprModel(void) = default;

	inline bool operator==(const _1c19727a1_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1c19727a1_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_StructStaticIdentExprModel {
	jule::Ptr<_1db4a7e59_StructIns> _field_structure = jule::Ptr<_1db4a7e59_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c17e2687_FnIns> _field_method = jule::Ptr<_1c17e2687_FnIns>();


	_1c19727a1_StructStaticIdentExprModel(jule::Ptr<_1db4a7e59_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1c17e2687_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1c19727a1_StructStaticIdentExprModel(void) = default;

	inline bool operator==(const _1c19727a1_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1c19727a1_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_ArrayExprModel {
	jule::Ptr<_1a8ad0a37_Arr> _field_kind = jule::Ptr<_1a8ad0a37_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1c19727a1_ArrayExprModel(jule::Ptr<_1a8ad0a37_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1c19727a1_ArrayExprModel(void) = default;

	inline bool operator==(const _1c19727a1_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1c19727a1_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1c19727a1_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1c19727a1_CommonIdentExprModel(void) = default;

	inline bool operator==(const _1c19727a1_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c19727a1_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_CommonSubIdentExprModel {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_expr_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1c19727a1_CommonSubIdentExprModel(jule::Ptr<_1a8ad0a37_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1c19727a1_CommonSubIdentExprModel(void) = default;

	inline bool operator==(const _1c19727a1_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c19727a1_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_TupleExprModel {
	jule::Slice<jule::Ptr<_1c1ead281_Data>> _field_datas = jule::Slice<jule::Ptr<_1c1ead281_Data>>();


	_1c19727a1_TupleExprModel(jule::Slice<jule::Ptr<_1c1ead281_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1c19727a1_TupleExprModel(void) = default;

	inline bool operator==(const _1c19727a1_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1c19727a1_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1c19727a1_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1c19727a1_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_debug == _Src._field_debug;
	}

	inline bool operator!=(const _1c19727a1_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1c19727a1_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1c19727a1_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_debug == _Src._field_debug;
	}

	inline bool operator!=(const _1c19727a1_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1c19727a1_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1c19727a1_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinNewCallExprModel {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1c19727a1_BuiltinNewCallExprModel(jule::Ptr<_1a8ad0a37_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1c19727a1_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1c19727a1_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinMakeCallExprModel {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1c19727a1_BuiltinMakeCallExprModel(jule::Ptr<_1a8ad0a37_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1c19727a1_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1c19727a1_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1c19727a1_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1c19727a1_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1c19727a1_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinErrorCallExprModel {
	jule::Ptr<_1c17e2687_FnIns> _field_func = jule::Ptr<_1c17e2687_FnIns>();
	jule::Any _field_err = jule::Any();


	_1c19727a1_BuiltinErrorCallExprModel(jule::Ptr<_1c17e2687_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1c19727a1_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinErrorCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1c19727a1_BuiltinErrorCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1c19727a1_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1c19727a1_SizeofExprModel(void) = default;

	inline bool operator==(const _1c19727a1_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1c19727a1_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1c19727a1_AlignofExprModel(void) = default;

	inline bool operator==(const _1c19727a1_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1c19727a1_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1c19727a1_RuneExprModel(void) = default;

	inline bool operator==(const _1c19727a1_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1c19727a1_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1c19727a1_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1c19727a1_IntegratedToStrExprModel(void) = default;

	inline bool operator==(const _1c19727a1_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1c19727a1_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1c19727a1_TernaryExprModel(void) = default;

	inline bool operator==(const _1c19727a1_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1c19727a1_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();


	_1c19727a1_BackendEmitExprModel(jule::Str __param_code): _field_code(__param_code) {}

	

	_1c19727a1_BackendEmitExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BackendEmitExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1c19727a1_BackendEmitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b32862_DirectiveChecker {
	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_d = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Any _field_o = jule::Any();


	_1c1b32862_DirectiveChecker(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1c1b32862_DirectiveChecker(void) = default;

	inline void _method_check_cdef(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check_typedef(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check_derive(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check_namespace(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check_deprecated(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check_directive(jule::Ptr<_1da7b8e5d_Directive>&);


	inline void _method_check(void);


	inline bool operator==(const _1c1b32862_DirectiveChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_d == _Src._field_d &&
			this->_field_o == _Src._field_o;
	}

	inline bool operator!=(const _1c1b32862_DirectiveChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b398be_Package: public _1a8be79c8_Lookup {
	jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>();


	_1c1b398be_Package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1c1b398be_Package(void) = default;

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>);


	inline jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1c1b398be_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1c1b398be_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b18a24_Sema: public _1a8be79c8_Lookup {
	jule::Ptr<_1c1b18a24_Sema> self;

	jule::Slice<_203741197_Log> _field_errors = jule::Slice<_203741197_Log>();
	jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>();
	jule::Ptr<_1c2020e2b_SymbolTable> _field_file = jule::Ptr<_1c2020e2b_SymbolTable>();
	jule::Int _field_flags = 0LL;


	_1c1b18a24_Sema(jule::Slice<_203741197_Log> __param_errors, jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>> __param_files, jule::Ptr<_1c2020e2b_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_1c1b18a24_Sema>::make(this, nullptr);

	}

	~_1c1b18a24_Sema(void) { this->self.ref = nullptr; }

	_1c1b18a24_Sema(void) { this->self = jule::Ptr<_1c1b18a24_Sema>::make(this, nullptr); }

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>);


	inline jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ptr<_1c2020e2b_SymbolTable>);


	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1da81133a_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline void _method_check_directives(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>&,jule::Any);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1da81133a_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ptr<_1c1b398be_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ptr<_1c1b398be_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ptr<_1c1b398be_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ptr<_1c1b398be_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ptr<_1a8ad0a37_TypeSymbol>&,jule::Trait<_1a8be79c8_Lookup>,jule::Ptr<_1a8ad0a37_Referencer>);


	inline jule::Bool _method_check_type(jule::Ptr<_1a8ad0a37_TypeSymbol>&,jule::Trait<_1a8be79c8_Lookup>);


	inline jule::Ptr<_1a8ad0a37_TypeKind> _method_build_type_with_generics(jule::Ptr<_1da7b8e5d_TypeDecl>&,jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>);


	inline jule::Ptr<_1a8ad0a37_TypeKind> _method_build_type(jule::Ptr<_1da7b8e5d_TypeDecl>&);


	inline jule::Ptr<_1c1ead281_Eval> _method_evalpd(jule::Trait<_1a8be79c8_Lookup>,jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1b58316_Var>);


	inline jule::Ptr<_1c1ead281_Eval> _method_evalp(jule::Trait<_1a8be79c8_Lookup>,jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Ptr<_1c1ead281_Eval> _method_eval(jule::Trait<_1a8be79c8_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token);


	inline jule::Bool _method_check_type_compatibility(jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Ptr<_1a8ad0a37_TypeKind>&,_1da81133a_Token&);


	inline jule::Ptr<_1a8ad0a37_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_1da7b8e5d_TypeDecl>&,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ptr<_1c17e2687_FnIns>&);


	inline jule::Ptr<_1c17e2687_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ptr<_1c17e2687_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_1a8ad0a37_TypeAlias>&,jule::Trait<_1a8be79c8_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1a8ad0a37_TypeAlias>&,jule::Trait<_1a8be79c8_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ptr<_1a8ad0a37_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ptr<_1c196c834_Enum>);


	inline void _method_check_enum_items_str(jule::Ptr<_1c196c834_Enum>&);


	inline void _method_check_enum_items_int(jule::Ptr<_1c196c834_Enum>&);


	inline void _method_check_enum_decl(jule::Ptr<_1c196c834_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_1c17e2687_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ptr<_1c17e2687_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ptr<_1c196b2a0_Trait>&);


	inline void _method_check_trait_decl(jule::Ptr<_1c196b2a0_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ptr<_1c196b2a0_Trait>&,jule::Ptr<_1c1977ee3_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ptr<_1db4a7e59_Struct>&,jule::Ptr<_1c1977ee3_Impl>&);


	inline void _method_impl_trait(jule::Ptr<_1c1977ee3_Impl>&);


	inline void _method_impl_struct(jule::Ptr<_1c1977ee3_Impl>&);


	inline void _method_impl_impl(jule::Ptr<_1c1977ee3_Impl>&);


	inline void _method_check_var_decl(jule::Ptr<_1c1b58316_Var>&,jule::Trait<_1a8be79c8_Lookup>);


	inline void _method_check_global_var_decl(jule::Ptr<_1c1b58316_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ptr<_1db4a7e59_Struct>&,jule::Ptr<_1c196b2a0_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ptr<_1db4a7e59_Struct>&);


	inline void _method_check_struct_decl(jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline void _method_push_cycle_error(jule::Ptr<_1db4a7e59_Struct>&,jule::Ptr<_1db4a7e59_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1db4a7e59_Struct>&,jule::Ptr<_1db4a7e59_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_1db4a7e59_Struct>&,jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_1db4a7e59_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline void _method_check_var(jule::Ptr<_1c1b58316_Var>&);


	inline void _method_check_type_var(jule::Ptr<_1c1b58316_Var>&,jule::Trait<_1a8be79c8_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ptr<_1db4a7e59_StructIns>&,jule::Ptr<_1c17e2687_Fn>&);


	inline void _method_check_type_struct(jule::Ptr<_1db4a7e59_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ptr<_1c17e2687_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ptr<_1c17e2687_FnIns>&,jule::Ptr<_1c197a248_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ptr<_1c17e2687_FnIns>&);


	inline void _method_check_type_fn(jule::Ptr<_1c17e2687_Fn>&);


	inline void _method_precheck_type_fn(jule::Ptr<_1c17e2687_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&);


	inline bool operator==(const _1c1b18a24_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1c1b18a24_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b58316_IterRelation {
	jule::Ptr<_1c1b58316_Var> _field_range = jule::Ptr<_1c1b58316_Var>();


	_1c1b58316_IterRelation(jule::Ptr<_1c1b58316_Var> __param_range): _field_range(__param_range) {}

	

	_1c1b58316_IterRelation(void) = default;

	inline bool operator==(const _1c1b58316_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	inline bool operator!=(const _1c1b58316_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_RangeChecker {
	jule::Ptr<_1c197a248_ScopeChecker> _field_sc = jule::Ptr<_1c197a248_ScopeChecker>();
	jule::Ptr<_1da7b8e5d_RangeKind> _field_rang = jule::Ptr<_1da7b8e5d_RangeKind>();
	jule::Ptr<_1c197a248_RangeIter> _field_kind = jule::Ptr<_1c197a248_RangeIter>();
	jule::Ptr<_1c1ead281_Data> _field_d = jule::Ptr<_1c1ead281_Data>();


	_1c1d617a5_RangeChecker(jule::Ptr<_1c197a248_ScopeChecker> __param_sc, jule::Ptr<_1da7b8e5d_RangeKind> __param_rang, jule::Ptr<_1c197a248_RangeIter> __param_kind, jule::Ptr<_1c1ead281_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1c1d617a5_RangeChecker(void) = default;

	inline jule::Ptr<_1c1b58316_Var> _method_build_var(jule::Ptr<_1da7b8e5d_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1b58316_Var>&,jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1c1d617a5_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1c1d617a5_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c2020e2b_SymbolTable: public _1a8be79c8_Lookup {
	jule::Ptr<_1da7bba21_File> _field_file = jule::Ptr<_1da7bba21_File>();
	jule::Slice<_1c18c86d5_Pass> _field_passes = jule::Slice<_1c18c86d5_Pass>();
	jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_vars = jule::Slice<jule::Ptr<_1c1b58316_Var>>();
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>();
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _field_structs = jule::Slice<jule::Ptr<_1db4a7e59_Struct>>();
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1c17e2687_Fn>>();
	jule::Slice<jule::Ptr<_1c196b2a0_Trait>> _field_traits = jule::Slice<jule::Ptr<_1c196b2a0_Trait>>();
	jule::Slice<jule::Ptr<_1c196c834_Enum>> _field_enums = jule::Slice<jule::Ptr<_1c196c834_Enum>>();
	jule::Slice<jule::Ptr<_1c1977ee3_Impl>> _field_impls = jule::Slice<jule::Ptr<_1c1977ee3_Impl>>();


	_1c2020e2b_SymbolTable(jule::Ptr<_1da7bba21_File> __param_file, jule::Slice<_1c18c86d5_Pass> __param_passes, jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_vars, jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1db4a7e59_Struct>> __param_structs, jule::Slice<jule::Ptr<_1c17e2687_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1c196b2a0_Trait>> __param_traits, jule::Slice<jule::Ptr<_1c196c834_Enum>> __param_enums, jule::Slice<jule::Ptr<_1c1977ee3_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1c2020e2b_SymbolTable(void) = default;

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>);


	inline jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str);


	inline jule::Ptr<_1c1b58316_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1c2020e2b_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1c2020e2b_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1c1ead281_Data {
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_cast_kind = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a8d46165_Const> _field_constant = jule::Ptr<_1a8d46165_Const>();


	_1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind> __param_kind, jule::Ptr<_1a8ad0a37_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1a8d46165_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1c1ead281_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline jule::Bool _method_good_operand(jule::Ptr<_1c1ead281_Data>&);


	inline bool operator==(const _1c1ead281_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1c1ead281_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1c1ead281_Value {
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Ptr<_1c1ead281_Data> _field_data = jule::Ptr<_1c1ead281_Data>();


	_1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Ptr<_1c1ead281_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1c1ead281_Value(void) = default;

	inline bool operator==(const _1c1ead281_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1c1ead281_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1c1ead281_Eval {
	jule::Ptr<_1c1ead281_Eval> self;

	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Trait<_1a8be79c8_Lookup> _field_lookup = jule::Trait<_1a8be79c8_Lookup>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_prefix = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1c1b58316_Var> _field_owner = jule::Ptr<_1c1b58316_Var>();


	_1c1ead281_Eval(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Trait<_1a8be79c8_Lookup> __param_lookup, jule::Ptr<_1a8ad0a37_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1c1b58316_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner) {
		this->self = jule::Ptr<_1c1ead281_Eval>::make(this, nullptr);

	}

	~_1c1ead281_Eval(void) { this->self.ref = nullptr; }

	_1c1ead281_Eval(void) { this->self = jule::Ptr<_1c1ead281_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_allow_builtin(void);


	inline void _method_disallow_builtin(void);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_nil(void);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_str(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_bool(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_rune(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_float(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_int(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_lit_num(jule::Ptr<_1da7b8e5d_LitExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_lit(jule::Ptr<_1da7b8e5d_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ptr<_1c18c86d5_ReferenceStack>&);


	inline void _method_push_reference_to_fn(jule::Ptr<_1c17e2687_FnIns>&);


	inline void _method_push_reference_to_var(jule::Ptr<_1c1b58316_Var>&);


	inline void _method_push_reference_to_struct(jule::Ptr<_1db4a7e59_StructIns>&);


	inline jule::Ptr<_1c1ead281_Data> _method___eval_enum(jule::Ptr<_1c196c834_Enum>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_enum(jule::Ptr<_1c196c834_Enum>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method___eval_struct(jule::Ptr<_1db4a7e59_StructIns>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct(jule::Ptr<_1db4a7e59_StructIns>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_fn_ins(jule::Ptr<_1c17e2687_FnIns>);


	inline void _method_check_deprecated(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>&,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_fn(jule::Ptr<_1c17e2687_Fn>,_1da81133a_Token);


	inline void _method_push_illegal_cycle_error(jule::Ptr<_1c1b58316_Var>&,jule::Ptr<_1c1b58316_Var>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1c1b58316_Var>&,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1c1b58316_Var>&,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_var(jule::Ptr<_1c1b58316_Var>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_type_alias(jule::Ptr<_1a8ad0a37_TypeAlias>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_def(jule::Any,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_ident(jule::Ptr<_1da7b8e5d_IdentExpr>);


	inline void _method_eval_unary_minus(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_eval_unary_plus(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_eval_unary_caret(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_eval_unary_excl(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_eval_unary_star(jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline void _method_eval_unary_amper(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_eval_unary_type_decl(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_UnaryExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_unary(jule::Ptr<_1da7b8e5d_UnaryExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_variadic(jule::Ptr<_1da7b8e5d_VariadicExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_unsafe(jule::Ptr<_1da7b8e5d_UnsafeExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_arr(jule::Ptr<_1da7b8e5d_SliceExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_exp_slc(jule::Ptr<_1da7b8e5d_SliceExpr>,jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_slice_expr(jule::Ptr<_1da7b8e5d_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token);


	inline void _method_indexing_ptr(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline void _method_indexing_arr(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline void _method_indexing_slc(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline void _method_indexing_map(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline void _method_indexing_str(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline void _method_to_indexing(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_1da7b8e5d_IndexingExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_indexing(jule::Ptr<_1da7b8e5d_IndexingExpr>);


	inline std::tuple<jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1c1ead281_Data>> _method_eval_slicing_exprs(jule::Ptr<_1da7b8e5d_SlicingExpr>&);


	inline void _method_slicing_arr(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_slicing_slc(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_slicing_str(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&);


	inline void _method_check_slicing(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1da7b8e5d_SlicingExpr>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_slicing(jule::Ptr<_1da7b8e5d_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_struct(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_ref(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_slc(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_str(jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_int(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_num(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_prim(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline void _method_cast_constant(jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Ptr<_1c1ead281_Data>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_cast(jule::Ptr<_1da7b8e5d_CastExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_ns_selection(jule::Ptr<_1da7b8e5d_NsSelectionExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct_lit_explicit(jule::Ptr<_1db4a7e59_StructIns>,jule::Slice<jule::Any>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct_lit(jule::Ptr<_1da7b8e5d_StructLit>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_type(jule::Ptr<_1da7b8e5d_TypeDecl>);


	inline void _method_call_type_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_1c17e2687_FnIns>,jule::Ptr<_1da7b8e5d_FnCallExpr>);


	inline void _method_call_builtin_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);


	inline void _method_check_fn_of_concurrent_call(jule::Ptr<_1c17e2687_FnIns>&,_1da81133a_Token);


	inline void _method_process_exceptional_handler(jule::Ptr<_1c17e2687_FnIns>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);


	inline void _method_call_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_fn_call(jule::Ptr<_1da7b8e5d_FnCallExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_enum_static(jule::Ptr<_1c196c834_Enum>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct_static(jule::Ptr<_1db4a7e59_StructIns>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_trait_sub_ident(jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1c196b2a0_Trait>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct_sub_ident(jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1db4a7e59_StructIns>,jule::Ptr<_1da7b8e5d_SubIdentExpr>,jule::Bool);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_slice_sub_ident(jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_array_sub_ident(jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_map_sub_ident(jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_str_sub_ident(jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_int_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_uint_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_i8_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_i16_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_i32_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_i64_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_u8_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_u16_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_u32_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_u64_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_f32_type_tatic(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_f64_type_static(_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_prim_static(jule::Str,_1da81133a_Token);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_type_static(jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1da7b8e5d_SubIdentExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_obj_sub_ident(jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1da7b8e5d_SubIdentExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_sub_ident(jule::Ptr<_1da7b8e5d_SubIdentExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_tuple(jule::Ptr<_1da7b8e5d_TupleExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_map(jule::Ptr<_1a8ad0a37_Map>,jule::Ptr<_1da7b8e5d_BraceLit>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_brace_lit(jule::Ptr<_1da7b8e5d_BraceLit>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_anon_fn(jule::Ptr<_1da7b8e5d_FnDecl>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_binop(jule::Ptr<_1da7b8e5d_BinopExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_ternary(jule::Ptr<_1da7b8e5d_TernaryExpr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ptr<_1c1ead281_Data> _method_eval(jule::Ptr<_1da7b8e5d_Expr>);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_expr(jule::Ptr<_1da7b8e5d_Expr>);


	inline bool operator==(const _1c1ead281_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_ignored == _Src._field_ignored &&
			this->_field_dis_builtin == _Src._field_dis_builtin &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1c1ead281_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_TypeKind: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_TypeKind> self;

	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a8ad0a37_Kind> _field_kind = jule::Trait<_1a8ad0a37_Kind>();


	_1a8ad0a37_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a8ad0a37_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_1a8ad0a37_TypeKind>::make(this, nullptr);

	}

	~_1a8ad0a37_TypeKind(void) { this->self.ref = nullptr; }

	_1a8ad0a37_TypeKind(void) { this->self = jule::Ptr<_1a8ad0a37_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ptr<_1a8ad0a37_Prim> _method_prim(void);


	inline jule::Ptr<_1a8ad0a37_Sptr> _method_sptr(void);


	inline jule::Ptr<_1a8ad0a37_Ptr> _method_ptr(void);


	inline jule::Ptr<_1c196c834_Enum> _method_enm(void);


	inline jule::Ptr<_1a8ad0a37_Arr> _method_arr(void);


	inline jule::Ptr<_1a8ad0a37_Slc> _method_slc(void);


	inline jule::Ptr<_1c17e2687_FnIns> _method_fnc(void);


	inline jule::Ptr<_1db4a7e59_StructIns> _method_strct(void);


	inline jule::Ptr<_1c196b2a0_Trait> _method_trt(void);


	inline jule::Ptr<_1a8ad0a37_Map> _method_map(void);


	inline jule::Ptr<_1a8ad0a37_Tuple> _method_tup(void);


	inline bool operator==(const _1a8ad0a37_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1a8ad0a37_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_TypeSymbol {
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_decl = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_kind = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl> __param_decl, jule::Ptr<_1a8ad0a37_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a8ad0a37_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1a8ad0a37_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1a8ad0a37_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Prim: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Prim> self;

	jule::Str _field_kind = jule::Str();


	_1a8ad0a37_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_1a8ad0a37_Prim>::make(this, nullptr);

	}

	~_1a8ad0a37_Prim(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Prim(void) { this->self = jule::Ptr<_1a8ad0a37_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1a8ad0a37_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1a8ad0a37_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Sptr: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Sptr> self;

	jule::Ptr<_1a8ad0a37_TypeKind> _field_elem = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_Sptr(jule::Ptr<_1a8ad0a37_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a8ad0a37_Sptr>::make(this, nullptr);

	}

	~_1a8ad0a37_Sptr(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Sptr(void) { this->self = jule::Ptr<_1a8ad0a37_Sptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline bool operator==(const _1a8ad0a37_Sptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1a8ad0a37_Sptr &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Slc: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Slc> self;

	jule::Ptr<_1a8ad0a37_TypeKind> _field_elem = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_Slc(jule::Ptr<_1a8ad0a37_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a8ad0a37_Slc>::make(this, nullptr);

	}

	~_1a8ad0a37_Slc(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Slc(void) { this->self = jule::Ptr<_1a8ad0a37_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline bool operator==(const _1a8ad0a37_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1a8ad0a37_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Tuple: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Tuple> self;

	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>();


	_1a8ad0a37_Tuple(jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_1a8ad0a37_Tuple>::make(this, nullptr);

	}

	~_1a8ad0a37_Tuple(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Tuple(void) { this->self = jule::Ptr<_1a8ad0a37_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline bool operator==(const _1a8ad0a37_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1a8ad0a37_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Map: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Map> self;

	jule::Ptr<_1a8ad0a37_TypeKind> _field_key = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_val = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_Map(jule::Ptr<_1a8ad0a37_TypeKind> __param_key, jule::Ptr<_1a8ad0a37_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_1a8ad0a37_Map>::make(this, nullptr);

	}

	~_1a8ad0a37_Map(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Map(void) { this->self = jule::Ptr<_1a8ad0a37_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline bool operator==(const _1a8ad0a37_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1a8ad0a37_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Arr: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Arr> self;

	jule::Bool _field_auto = jule::Bool();
	jule::Int _field_n = jule::Int();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_elem = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_1a8ad0a37_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a8ad0a37_Arr>::make(this, nullptr);

	}

	~_1a8ad0a37_Arr(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Arr(void) { this->self = jule::Ptr<_1a8ad0a37_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline bool operator==(const _1a8ad0a37_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1a8ad0a37_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Ptr: public _1a8ad0a37_Kind {
	jule::Ptr<_1a8ad0a37_Ptr> self;

	jule::Ptr<_1a8ad0a37_TypeKind> _field_elem = jule::Ptr<_1a8ad0a37_TypeKind>();


	_1a8ad0a37_Ptr(jule::Ptr<_1a8ad0a37_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a8ad0a37_Ptr>::make(this, nullptr);

	}

	~_1a8ad0a37_Ptr(void) { this->self.ref = nullptr; }

	_1a8ad0a37_Ptr(void) { this->self = jule::Ptr<_1a8ad0a37_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1a8ad0a37_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1a8ad0a37_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a8ad0a37_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a8ad0a37_Referencer(void) = default;

	inline bool operator==(const _1a8ad0a37_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1a8ad0a37_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1da76219d_DirectiveEval {
	jule::Slice<_203741197_Log> _field_logs = jule::Slice<_203741197_Log>();
	jule::Ptr<_1da7b8e5d_Directive> _field_d = jule::Ptr<_1da7b8e5d_Directive>();


	_1da76219d_DirectiveEval(jule::Slice<_203741197_Log> __param_logs, jule::Ptr<_1da7b8e5d_Directive> __param_d): _field_logs(__param_logs), _field_d(__param_d) {}

	

	_1da76219d_DirectiveEval(void) = default;

	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Slice<_1da81133a_Token>> _method_split_operans(jule::Str,jule::Slice<_1da81133a_Token>&);


	inline jule::Bool _method_eval_directive_ident(jule::Str);


	inline jule::Bool _method_eval_directive_part(jule::Slice<_1da81133a_Token>);


	inline jule::Bool _method_eval(void);


	inline bool operator==(const _1da76219d_DirectiveEval &_Src) const {
		return 
			this->_field_logs == _Src._field_logs &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1da76219d_DirectiveEval &_Src) const { return !this->operator==(_Src); }
};


struct _1da7889cc_PlainImporter: public _1c1b398be_Importer {
	jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> _field_all_packages = jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>>();


	_1da7889cc_PlainImporter(jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_1da7889cc_PlainImporter(void) = default;

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ptr<_1da7635cd_Ast>>,jule::Slice<_203741197_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ptr<_1c1b398be_ImportInfo>);


	inline bool operator==(const _1da7889cc_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1da7889cc_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1da73db6e_OrderedDefines {
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _field_structs = jule::Slice<jule::Ptr<_1db4a7e59_Struct>>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_globals = jule::Slice<jule::Ptr<_1c1b58316_Var>>();


	_1da73db6e_OrderedDefines(jule::Slice<jule::Ptr<_1db4a7e59_Struct>> __param_structs, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_1da73db6e_OrderedDefines(void) = default;

	inline bool operator==(const _1da73db6e_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1da73db6e_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1da73db6e_DefineOrderer {
	

	_1da73db6e_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1c1b58316_Var>>&,jule::Ptr<_1c1b58316_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&,jule::Ptr<_1db4a7e59_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ptr<_1c1b58316_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ptr<_1c1b58316_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);


	inline bool operator==(const _1da73db6e_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1da73db6e_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1da7303ad_ScopeDeadCode {
	jule::Ptr<_1da7303ad_ScopeDeadCode> self;

	jule::Ptr<_1da7303ad_ScopeDeadCode> _field_parent = jule::Ptr<_1da7303ad_ScopeDeadCode>();
	jule::Ptr<_1c197a248_Scope> _field_s = jule::Ptr<_1c197a248_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::Int _field_i = jule::Int();


	_1da7303ad_ScopeDeadCode(jule::Ptr<_1da7303ad_ScopeDeadCode> __param_parent, jule::Ptr<_1c197a248_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_1da7303ad_ScopeDeadCode>::make(this, nullptr);

	}

	~_1da7303ad_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1da7303ad_ScopeDeadCode(void) { this->self = jule::Ptr<_1da7303ad_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ptr<_1c197a248_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1da7303ad_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1da7303ad_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1a93d0c71_AbsTime {
	jule::Uint _field_day = jule::Uint();
	jule::Uint _field_week_day = jule::Uint();
	jule::Uint _field_year_day = jule::Uint();
	jule::Uint _field_month = jule::Uint();
	jule::Uint _field_year = jule::Uint();
	jule::Uint _field_second = jule::Uint();
	jule::Uint _field_minute = jule::Uint();
	jule::Uint _field_hour = jule::Uint();


	_1a93d0c71_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1a93d0c71_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _1a93d0c71_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1a93d0c71_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1a93d0c71_Time {
	jule::U64 _field_sec = jule::U64();


	_1a93d0c71_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1a93d0c71_Time(void) = default;

	static inline _1a93d0c71_Time _static_method_unix(jule::U64);


	static inline _1a93d0c71_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1a93d0c71_AbsTime _method_abs(void);


	inline bool operator==(const _1a93d0c71_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1a93d0c71_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1a93d0c71_Duration {
	

	_1a93d0c71_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _1a93d0c71_Duration &_Src) const { return true; }

	inline bool operator!=(const _1a93d0c71_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1d9d8c4cc_Flag_0: public _1d9d8c4cc_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Int _field__default = jule::Int();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Int> _field__data = jule::Ptr<jule::Int>();


	_1d9d8c4cc_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ptr<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1d9d8c4cc_Flag_0(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1d9d8c4cc_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1d9d8c4cc_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _1d9d8c4cc_Flag_1: public _1d9d8c4cc_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Uint _field__default = jule::Uint();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Uint> _field__data = jule::Ptr<jule::Uint>();


	_1d9d8c4cc_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ptr<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1d9d8c4cc_Flag_1(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1d9d8c4cc_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1d9d8c4cc_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _1d9d8c4cc_Flag_2: public _1d9d8c4cc_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1d9d8c4cc_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1d9d8c4cc_Flag_2(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1d9d8c4cc_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1d9d8c4cc_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _1d9d8c4cc_Flag_3: public _1d9d8c4cc_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1d9d8c4cc_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1d9d8c4cc_Flag_3(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1d9d8c4cc_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1d9d8c4cc_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _1d9d8c4cc_Flag_4: public _1d9d8c4cc_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1d9d8c4cc_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1d9d8c4cc_Flag_4(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1d9d8c4cc_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1d9d8c4cc_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _1d9d8c4cc_FlagSet {
	jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>>();


	_1d9d8c4cc_FlagSet(jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1d9d8c4cc_FlagSet(void) = default;

	static inline jule::Ptr<_1d9d8c4cc_FlagSet> _static_method_new(void);


	inline jule::Trait<_1d9d8c4cc_CommonFlag> _method_find_flag(jule::Str);


	inline jule::Trait<_1d9d8c4cc_CommonFlag> _method_find_flag_short(jule::I32);


	inline jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>> _method_flags(void);


	inline jule::Exceptional<jule::Slice<jule::Str>> _method_parse(jule::Slice<jule::Str>);


	inline void _method_reset(void);


	inline jule::Ptr<_1d9d8c4cc_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	inline jule::Ptr<_1d9d8c4cc_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	inline void _method_add_var_0(jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
	inline void _method_add_var_1(jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);


	inline bool operator==(const _1d9d8c4cc_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags;
	}

	inline bool operator!=(const _1d9d8c4cc_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_RangeKind {
	_1da81133a_Token _field_in_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Ptr<_1da7b8e5d_VarDecl> _field_key_a = jule::Ptr<_1da7b8e5d_VarDecl>();
	jule::Ptr<_1da7b8e5d_VarDecl> _field_key_b = jule::Ptr<_1da7b8e5d_VarDecl>();


	_1da7b8e5d_RangeKind(_1da81133a_Token __param_in_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Ptr<_1da7b8e5d_VarDecl> __param_key_a, jule::Ptr<_1da7b8e5d_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1da7b8e5d_RangeKind(void) = default;

	inline bool operator==(const _1da7b8e5d_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1da7b8e5d_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_BreakSt {
	_1da81133a_Token _field_token = _1da81133a_Token();
	_1da81133a_Token _field_label = _1da81133a_Token();


	_1da7b8e5d_BreakSt(_1da81133a_Token __param_token, _1da81133a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1da7b8e5d_BreakSt(void) = default;

	inline bool operator==(const _1da7b8e5d_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1da7b8e5d_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_ContSt {
	_1da81133a_Token _field_token = _1da81133a_Token();
	_1da81133a_Token _field_label = _1da81133a_Token();


	_1da7b8e5d_ContSt(_1da81133a_Token __param_token, _1da81133a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1da7b8e5d_ContSt(void) = default;

	inline bool operator==(const _1da7b8e5d_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1da7b8e5d_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_If {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();


	_1da7b8e5d_If(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1da7b8e5d_If(void) = default;

	inline bool operator==(const _1da7b8e5d_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1da7b8e5d_If &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Else {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();


	_1da7b8e5d_Else(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1da7b8e5d_Else(void) = default;

	inline bool operator==(const _1da7b8e5d_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1da7b8e5d_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Directive {
	_1da81133a_Token _field_tag = _1da81133a_Token();
	jule::Slice<_1da81133a_Token> _field_args = jule::Slice<_1da81133a_Token>();


	_1da7b8e5d_Directive(_1da81133a_Token __param_tag, jule::Slice<_1da81133a_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1da7b8e5d_Directive(void) = default;

	inline bool operator==(const _1da7b8e5d_Directive &_Src) const {
		return 
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1da7b8e5d_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TypeAliasDecl {
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();


	_1da7b8e5d_TypeAliasDecl(jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1da81133a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_1da7b8e5d_TypeAliasDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1da7b8e5d_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_FnCallExprModel {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1c17e2687_FnIns> _field_func = jule::Ptr<_1c17e2687_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1c197a248_Scope> _field_except = jule::Ptr<_1c197a248_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1c19727a1_FnCallExprModel(_1da81133a_Token __param_token, jule::Ptr<_1c17e2687_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1c197a248_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1c19727a1_FnCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_FnCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args &&
			this->_field_except == _Src._field_except &&
			this->_field_assigned == _Src._field_assigned;
	}

	inline bool operator!=(const _1c19727a1_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Case {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>();


	_1da7b8e5d_Case(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1da7b8e5d_Case(void) = default;

	inline bool operator==(const _1da7b8e5d_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1da7b8e5d_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_MatchCase {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Case>> _field_cases = jule::Slice<jule::Ptr<_1da7b8e5d_Case>>();
	jule::Ptr<_1da7b8e5d_Else> _field_default = jule::Ptr<_1da7b8e5d_Else>();


	_1da7b8e5d_MatchCase(_1da81133a_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Slice<jule::Ptr<_1da7b8e5d_Case>> __param_cases, jule::Ptr<_1da7b8e5d_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1da7b8e5d_MatchCase(void) = default;

	inline bool operator==(const _1da7b8e5d_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1da7b8e5d_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_UseDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_1da81133a_Token> _field_selected = jule::Slice<_1da81133a_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1da7b8e5d_UseDecl(_1da81133a_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1da81133a_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1da7b8e5d_UseDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1da7b8e5d_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_EnumItemDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_EnumItemDecl(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1da7b8e5d_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1da7b8e5d_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_EnumDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();


	_1da7b8e5d_EnumDecl(_1da81133a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>> __param_items, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_1da7b8e5d_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1da7b8e5d_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1da7b8e5d_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_FieldDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();


	_1da7b8e5d_FieldDecl(_1da81133a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1da7b8e5d_FieldDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da7b8e5d_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_StructDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>();


	_1da7b8e5d_StructDecl(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_1da7b8e5d_StructDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1da7b8e5d_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TraitDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();
	jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>();


	_1da7b8e5d_TraitDecl(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_1da7b8e5d_TraitDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1da7b8e5d_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Impl {
	_1da81133a_Token _field_base = _1da81133a_Token();
	_1da81133a_Token _field_dest = _1da81133a_Token();
	jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>();
	jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>>();


	_1da7b8e5d_Impl(_1da81133a_Token __param_base, _1da81133a_Token __param_dest, jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1da7b8e5d_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1da7b8e5d_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1da7b8e5d_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Expr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_kind = jule::Any();


	_1da7b8e5d_Expr(_1da81133a_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1da7b8e5d_Expr(void) = default;

	inline bool operator==(const _1da7b8e5d_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da7b8e5d_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_UseExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_UseExpr(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1da7b8e5d_UseExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_UseExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_UseExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TypeDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_kind = jule::Any();


	_1da7b8e5d_TypeDecl(_1da81133a_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1da7b8e5d_TypeDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da7b8e5d_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_LitExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_value = jule::Str();


	_1da7b8e5d_LitExpr(_1da81133a_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1da7b8e5d_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1da7b8e5d_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1da7b8e5d_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_UnsafeExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1da7b8e5d_UnsafeExpr(_1da81133a_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1da7b8e5d_UnsafeExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_CoExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_CoExpr(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1da7b8e5d_CoExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_CoExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_CoExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1c152a326_AssignInfo {
	jule::Slice<_1da81133a_Token> _field_l = jule::Slice<_1da81133a_Token>();
	jule::Slice<_1da81133a_Token> _field_r = jule::Slice<_1da81133a_Token>();
	_1da81133a_Token _field_setter = _1da81133a_Token();
	jule::Bool _field_ok = jule::Bool();


	_1c152a326_AssignInfo(jule::Slice<_1da81133a_Token> __param_l, jule::Slice<_1da81133a_Token> __param_r, _1da81133a_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1c152a326_AssignInfo(void) = default;

	inline bool operator==(const _1c152a326_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1c152a326_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_IdentExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1da7b8e5d_IdentExpr(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1da7b8e5d_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1da7b8e5d_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1da7b8e5d_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinPanicCallExprModel {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1c19727a1_BuiltinPanicCallExprModel(_1da81133a_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1c19727a1_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1c19727a1_BuiltinAssertCallExprModel {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1c19727a1_BuiltinAssertCallExprModel(_1da81133a_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1c19727a1_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(const _1c19727a1_BuiltinAssertCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1c19727a1_BuiltinAssertCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_UnaryExpr {
	_1da81133a_Token _field_op = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1da7b8e5d_UnaryExpr(_1da81133a_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1da7b8e5d_UnaryExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_VariadicExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1da7b8e5d_VariadicExpr(_1da81133a_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1da7b8e5d_VariadicExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a7e59_Field {
	jule::Ptr<_1db4a7e59_Field> self;

	jule::Ptr<_1db4a7e59_Struct> _field_owner = jule::Ptr<_1db4a7e59_Struct>();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();


	_1db4a7e59_Field(jule::Ptr<_1db4a7e59_Struct> __param_owner, _1da81133a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ptr<_1db4a7e59_Field>::make(this, nullptr);

	}

	~_1db4a7e59_Field(void) { this->self.ref = nullptr; }

	_1db4a7e59_Field(void) { this->self = jule::Ptr<_1db4a7e59_Field>::make(this, nullptr); }

	inline jule::Ptr<_1db4a7e59_FieldIns> _method_instance(void);


	inline bool operator==(const _1db4a7e59_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1db4a7e59_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1db4a7e59_Struct {
	jule::Ptr<_1db4a7e59_Struct> self;

	jule::Ptr<_1c1b18a24_Sema> _field_sema = jule::Ptr<_1c1b18a24_Sema>();
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _field_depends = jule::Slice<jule::Ptr<_1db4a7e59_Struct>>();
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _field_uses = jule::Slice<jule::Ptr<_1db4a7e59_Struct>>();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1db4a7e59_Field>> _field_fields = jule::Slice<jule::Ptr<_1db4a7e59_Field>>();
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c17e2687_Fn>>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_statics = jule::Slice<jule::Ptr<_1c1b58316_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c196b2a0_Trait>> _field_implements = jule::Slice<jule::Ptr<_1c196b2a0_Trait>>();
	jule::Slice<jule::Ptr<_1db4a7e59_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1db4a7e59_StructIns>>();


	_1db4a7e59_Struct(jule::Ptr<_1c1b18a24_Sema> __param_sema, jule::Slice<jule::Ptr<_1db4a7e59_Struct>> __param_depends, jule::Slice<jule::Ptr<_1db4a7e59_Struct>> __param_uses, _1da81133a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1db4a7e59_Field>> __param_fields, jule::Slice<jule::Ptr<_1c17e2687_Fn>> __param_methods, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1c196b2a0_Trait>> __param_implements, jule::Slice<jule::Ptr<_1db4a7e59_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1db4a7e59_Struct>::make(this, nullptr);

	}

	~_1db4a7e59_Struct(void) { this->self.ref = nullptr; }

	_1db4a7e59_Struct(void) { this->self = jule::Ptr<_1db4a7e59_Struct>::make(this, nullptr); }

	inline jule::Ptr<_1db4a7e59_StructIns> _method_instance(void);


	inline jule::Ptr<_1db4a7e59_StructIns> _method_append_instance(jule::Ptr<_1db4a7e59_StructIns>&);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1c1b58316_Var> _method_find_static(jule::Str);


	inline jule::Ptr<_1db4a7e59_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ptr<_1c196b2a0_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ptr<_1db4a7e59_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(const _1db4a7e59_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1db4a7e59_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_IdentTypeDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>();


	_1da7b8e5d_IdentTypeDecl(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1da7b8e5d_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1da7b8e5d_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1da7b8e5d_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_NsSelectionExpr {
	jule::Slice<_1da81133a_Token> _field_ns = jule::Slice<_1da81133a_Token>();
	_1da81133a_Token _field_ident = _1da81133a_Token();


	_1da7b8e5d_NsSelectionExpr(jule::Slice<_1da81133a_Token> __param_ns, _1da81133a_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1da7b8e5d_NsSelectionExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1da7b8e5d_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Any _field_expr = jule::Any();
	_1da81133a_Token _field_ident = _1da81133a_Token();


	_1da7b8e5d_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1da81133a_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1da7b8e5d_SubIdentExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1da7b8e5d_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1c17e2687_Param {
	jule::Ptr<_1c17e2687_Param> self;

	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1c17e2687_Param(_1da81133a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_1c17e2687_Param>::make(this, nullptr);

	}

	~_1c17e2687_Param(void) { this->self.ref = nullptr; }

	_1c17e2687_Param(void) { this->self = jule::Ptr<_1c17e2687_Param>::make(this, nullptr); }

	inline jule::Ptr<_1c17e2687_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1c17e2687_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1c17e2687_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1c17e2687_Fn {
	jule::Ptr<_1c17e2687_Fn> self;

	jule::Ptr<_1c1b18a24_Sema> _field_sema = jule::Ptr<_1c1b18a24_Sema>();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>();
	jule::Ptr<_1c17e2687_RetType> _field_result = jule::Ptr<_1c17e2687_RetType>();
	jule::Slice<jule::Ptr<_1c17e2687_Param>> _field_params = jule::Slice<jule::Ptr<_1c17e2687_Param>>();
	jule::Ptr<_1db4a7e59_Struct> _field_owner = jule::Ptr<_1db4a7e59_Struct>();
	jule::Slice<jule::Ptr<_1c17e2687_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1c17e2687_FnIns>>();


	_1c17e2687_Fn(jule::Ptr<_1c1b18a24_Sema> __param_sema, _1da81133a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> __param_generics, jule::Ptr<_1c17e2687_RetType> __param_result, jule::Slice<jule::Ptr<_1c17e2687_Param>> __param_params, jule::Ptr<_1db4a7e59_Struct> __param_owner, jule::Slice<jule::Ptr<_1c17e2687_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1c17e2687_Fn>::make(this, nullptr);

	}

	~_1c17e2687_Fn(void) { this->self.ref = nullptr; }

	_1c17e2687_Fn(void) { this->self = jule::Ptr<_1c17e2687_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ptr<_1c17e2687_FnIns> _method_instance_force(void);


	inline jule::Ptr<_1c17e2687_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_1c17e2687_FnIns>&);


	inline bool operator==(const _1c17e2687_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1c17e2687_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_BinopExpr {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	_1da81133a_Token _field_op = _1da81133a_Token();


	_1da7b8e5d_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1da81133a_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1da7b8e5d_BinopExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1da7b8e5d_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b398be_ImportInfo: public _1a8be79c8_Lookup {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_1da81133a_Token> _field_selected = jule::Slice<_1da81133a_Token>();
	jule::Ptr<_1c1b398be_Package> _field_package = jule::Ptr<_1c1b398be_Package>();


	_1c1b398be_ImportInfo(_1da81133a_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1da81133a_Token> __param_selected, jule::Ptr<_1c1b398be_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_1c1b398be_ImportInfo(void) = default;

	inline jule::Ptr<_1c1b398be_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c1b398be_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>);


	inline jule::Ptr<_1c1b58316_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a8ad0a37_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1db4a7e59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1c196b2a0_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1c196c834_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline jule::Bool _method_is_accessible_via_selection(void);


	inline bool operator==(const _1c1b398be_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1c1b398be_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_FnCallExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _field_args = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_exception = jule::Ptr<_1da7b8e5d_ScopeTree>();


	_1da7b8e5d_FnCallExpr(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> __param_args, jule::Ptr<_1da7b8e5d_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1da7b8e5d_FnCallExpr(void) = default;

	inline jule::Bool _method_unhandled(void);


	inline jule::Bool _method_ignored(void);


	inline bool operator==(const _1da7b8e5d_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_exception == _Src._field_exception;
	}

	inline bool operator!=(const _1da7b8e5d_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_FieldExprPair {
	_1da81133a_Token _field_field = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();


	_1da7b8e5d_FieldExprPair(_1da81133a_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1da7b8e5d_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1da7b8e5d_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1c18c86d5_Pass {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_text = jule::Str();


	_1c18c86d5_Pass(_1da81133a_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1c18c86d5_Pass(void) = default;

	inline bool operator==(const _1c18c86d5_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1c18c86d5_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1c1b58316_Var {
	jule::Ptr<_1c197a248_Scope> _field_scope = jule::Ptr<_1c197a248_Scope>();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();
	jule::Ptr<_1c1ead281_Value> _field_value = jule::Ptr<_1c1ead281_Value>();
	jule::Ptr<_1c18c86d5_ReferenceStack> _field_references = jule::Ptr<_1c18c86d5_ReferenceStack>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Ptr<_1c1b58316_IterRelation> _field_iter_relation = jule::Ptr<_1c1b58316_IterRelation>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_depends = jule::Slice<jule::Ptr<_1c1b58316_Var>>();


	_1c1b58316_Var(jule::Ptr<_1c197a248_Scope> __param_scope, _1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind, jule::Ptr<_1c1ead281_Value> __param_value, jule::Ptr<_1c18c86d5_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Ptr<_1c1b58316_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1c1b58316_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1c1b58316_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1c1b58316_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_TypeCompatibilityChecker {
	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_dest = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_src = jule::Ptr<_1a8ad0a37_TypeKind>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();


	_1c1d617a5_TypeCompatibilityChecker(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Ptr<_1a8ad0a37_TypeKind> __param_dest, jule::Ptr<_1a8ad0a37_TypeKind> __param_src, _1da81133a_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1c1d617a5_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1c1d617a5_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _1c1d617a5_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_AssignTypeChecker {
	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Ptr<_1a8ad0a37_TypeKind> _field_dest = jule::Ptr<_1a8ad0a37_TypeKind>();
	jule::Ptr<_1c1ead281_Data> _field_d = jule::Ptr<_1c1ead281_Data>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();


	_1c1d617a5_AssignTypeChecker(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Ptr<_1a8ad0a37_TypeKind> __param_dest, jule::Ptr<_1c1ead281_Data> __param_d, _1da81133a_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1c1d617a5_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_is_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1c1d617a5_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _1c1d617a5_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_DynamicTypeAnnotation {
	jule::Ptr<_1c1ead281_Eval> _field_e = jule::Ptr<_1c1ead281_Eval>();
	jule::Ptr<_1c17e2687_FnIns> _field_f = jule::Ptr<_1c17e2687_FnIns>();
	jule::Ptr<_1c17e2687_ParamIns> _field_p = jule::Ptr<_1c17e2687_ParamIns>();
	jule::Ptr<_1c1ead281_Data> _field_a = jule::Ptr<_1c1ead281_Data>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();
	jule::Ptr<_1a8ad0a37_TypeKind>* _field_k = nullptr;


	_1c1d617a5_DynamicTypeAnnotation(jule::Ptr<_1c1ead281_Eval> __param_e, jule::Ptr<_1c17e2687_FnIns> __param_f, jule::Ptr<_1c17e2687_ParamIns> __param_p, jule::Ptr<_1c1ead281_Data> __param_a, _1da81133a_Token __param_error_token, jule::Ptr<_1a8ad0a37_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1c1d617a5_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_check_map_key(jule::Ptr<_1a8ad0a37_TypeKind>*,jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_sptr(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1c1d617a5_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1c1d617a5_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_FnCallArgChecker {
	jule::Ptr<_1c1ead281_Eval> _field_e = jule::Ptr<_1c1ead281_Eval>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _field_args = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();
	jule::Ptr<_1c17e2687_FnIns> _field_f = jule::Ptr<_1c17e2687_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1c1d617a5_FnCallArgChecker(jule::Ptr<_1c1ead281_Eval> __param_e, jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> __param_args, _1da81133a_Token __param_error_token, jule::Ptr<_1c17e2687_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1c1d617a5_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ptr<_1c17e2687_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ptr<_1c17e2687_ParamIns>&,jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline jule::Bool _method_push(jule::Ptr<_1c17e2687_ParamIns>&,jule::Ptr<_1da7b8e5d_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ptr<_1c17e2687_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1c1d617a5_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1c1d617a5_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_StructLitChecker {
	jule::Ptr<_1c1ead281_Eval> _field_e = jule::Ptr<_1c1ead281_Eval>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();
	jule::Ptr<_1db4a7e59_StructIns> _field_s = jule::Ptr<_1db4a7e59_StructIns>();
	jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>>();


	_1c1d617a5_StructLitChecker(jule::Ptr<_1c1ead281_Eval> __param_e, _1da81133a_Token __param_error_token, jule::Ptr<_1db4a7e59_StructIns> __param_s, jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1c1d617a5_StructLitChecker(void) = default;

	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ptr<_1db4a7e59_FieldIns>&,jule::Ptr<_1c1ead281_Data>&,_1da81133a_Token&);


	inline void _method_check_pair(jule::Ptr<_1da7b8e5d_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _1c1d617a5_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1c1d617a5_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Node {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_data = jule::Any();


	_1da7b8e5d_Node(_1da81133a_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1da7b8e5d_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_directive(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1da7b8e5d_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1da7b8e5d_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1c1d617a5_RetTypeChecker {
	jule::Ptr<_1c197a248_ScopeChecker> _field_sc = jule::Ptr<_1c197a248_ScopeChecker>();
	jule::Ptr<_1c17e2687_FnIns> _field_f = jule::Ptr<_1c17e2687_FnIns>();
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>();
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_vars = jule::Slice<jule::Ptr<_1c1b58316_Var>>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();
	jule::Any _field_model = jule::Any();


	_1c1d617a5_RetTypeChecker(jule::Ptr<_1c197a248_ScopeChecker> __param_sc, jule::Ptr<_1c17e2687_FnIns> __param_f, jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_vars, _1da81133a_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1c1d617a5_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ptr<_1da7b8e5d_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ptr<_1da7b8e5d_Expr>&);


	inline bool operator==(const _1c1d617a5_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1c1d617a5_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1c196b2a0_Trait: public _1a8ad0a37_Kind {
	jule::Ptr<_1c196b2a0_Trait> self;

	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c17e2687_Fn>>();
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1db4a7e59_Struct>>();


	_1c196b2a0_Trait(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_1c17e2687_Fn>> __param_methods, jule::Slice<jule::Ptr<_1db4a7e59_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_1c196b2a0_Trait>::make(this, nullptr);

	}

	~_1c196b2a0_Trait(void) { this->self.ref = nullptr; }

	_1c196b2a0_Trait(void) { this->self = jule::Ptr<_1c196b2a0_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ptr<_1c17e2687_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1c196b2a0_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1c196b2a0_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1c196c834_EnumItem {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c1ead281_Value> _field_value = jule::Ptr<_1c1ead281_Value>();


	_1c196c834_EnumItem(_1da81133a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1c1ead281_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1c196c834_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1c196c834_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1c196c834_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1c196c834_Enum: public _1a8ad0a37_Kind {
	jule::Ptr<_1c196c834_Enum> self;

	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();
	jule::Slice<jule::Ptr<_1c196c834_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1c196c834_EnumItem>>();
	jule::Str _field_doc = jule::Str();


	_1c196c834_Enum(_1da81133a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1c196c834_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_1c196c834_Enum>::make(this, nullptr);

	}

	~_1c196c834_Enum(void) { this->self.ref = nullptr; }

	_1c196c834_Enum(void) { this->self = jule::Ptr<_1c196c834_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a8ad0a37_TypeKind>);


	inline jule::Ptr<_1c196c834_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1c196c834_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1c196c834_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1c1977ee3_Impl {
	_1da81133a_Token _field_base = _1da81133a_Token();
	_1da81133a_Token _field_dest = _1da81133a_Token();
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c17e2687_Fn>>();
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _field_statics = jule::Slice<jule::Ptr<_1c1b58316_Var>>();


	_1c1977ee3_Impl(_1da81133a_Token __param_base, _1da81133a_Token __param_dest, jule::Slice<jule::Ptr<_1c17e2687_Fn>> __param_methods, jule::Slice<jule::Ptr<_1c1b58316_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1c1977ee3_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1c1977ee3_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1c1977ee3_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1c1ead281_BinopSolver {
	jule::Ptr<_1c1ead281_Eval> _field_e = jule::Ptr<_1c1ead281_Eval>();
	jule::Ptr<_1c1ead281_Data> _field_l = jule::Ptr<_1c1ead281_Data>();
	jule::Ptr<_1c1ead281_Data> _field_r = jule::Ptr<_1c1ead281_Data>();
	_1da81133a_Token _field_op = _1da81133a_Token();


	_1c1ead281_BinopSolver(jule::Ptr<_1c1ead281_Eval> __param_e, jule::Ptr<_1c1ead281_Data> __param_l, jule::Ptr<_1c1ead281_Data> __param_r, _1da81133a_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1c1ead281_BinopSolver(void) = default;

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_nil(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_enum(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_sptr(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_ptr(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_arr(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_slc(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_fn(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_struct(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_trait(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_any(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_bool(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_float(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_int(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval_prim(void);


	inline jule::Ptr<_1c1ead281_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_post_const(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_check_data(jule::Ptr<_1c1ead281_Data>&);


	inline void _method_check_datas(void);


	inline void _method_set_model(jule::Ptr<_1c1ead281_Data>&);


	inline jule::Ptr<_1c1ead281_Data> _method_solve_explicit(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>&);


	inline jule::Ptr<_1c1ead281_Data> _method_solve(jule::Ptr<_1da7b8e5d_BinopExpr>&);


	inline bool operator==(const _1c1ead281_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1c1ead281_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_TypeAlias {
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8ad0a37_TypeSymbol> _field_kind = jule::Ptr<_1a8ad0a37_TypeSymbol>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();


	_1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1da81133a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1a8ad0a37_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_1a8ad0a37_TypeAlias(void) = default;

	inline bool operator==(const _1a8ad0a37_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1a8ad0a37_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_BraceLit {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1da7b8e5d_BraceLit(_1da81133a_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1da7b8e5d_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1da7b8e5d_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1da7b8e5d_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_KeyValPair {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	_1da81133a_Token _field_colon = _1da81133a_Token();


	_1da7b8e5d_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1da81133a_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1da7b8e5d_KeyValPair(void) = default;

	inline bool operator==(const _1da7b8e5d_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1da7b8e5d_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_SliceExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1da7b8e5d_SliceExpr(_1da81133a_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_1da7b8e5d_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1da7b8e5d_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1da7b8e5d_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_IndexingExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_index = jule::Any();


	_1da7b8e5d_IndexingExpr(_1da81133a_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1da7b8e5d_IndexingExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1da7b8e5d_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_SlicingExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_start = jule::Any();
	jule::Any _field_to = jule::Any();


	_1da7b8e5d_SlicingExpr(_1da81133a_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1da7b8e5d_SlicingExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1da7b8e5d_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_TernaryExpr {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1da7b8e5d_TernaryExpr(_1da81133a_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1da7b8e5d_TernaryExpr(void) = default;

	inline bool operator==(const _1da7b8e5d_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1da7b8e5d_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_GenericDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();


	_1da7b8e5d_GenericDecl(_1da81133a_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1da7b8e5d_GenericDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1da7b8e5d_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_LabelSt {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();


	_1da7b8e5d_LabelSt(_1da81133a_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1da7b8e5d_LabelSt(void) = default;

	inline bool operator==(const _1da7b8e5d_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1da7b8e5d_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_GotoSt {
	_1da81133a_Token _field_token = _1da81133a_Token();
	_1da81133a_Token _field_label = _1da81133a_Token();


	_1da7b8e5d_GotoSt(_1da81133a_Token __param_token, _1da81133a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1da7b8e5d_GotoSt(void) = default;

	inline bool operator==(const _1da7b8e5d_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1da7b8e5d_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_FallSt {
	_1da81133a_Token _field_token = _1da81133a_Token();


	_1da7b8e5d_FallSt(_1da81133a_Token __param_token): _field_token(__param_token) {}

	

	_1da7b8e5d_FallSt(void) = default;

	inline bool operator==(const _1da7b8e5d_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1da7b8e5d_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1a8ad0a37_TypeChecker {
	jule::Ptr<_1c1b18a24_Sema> _field_s = jule::Ptr<_1c1b18a24_Sema>();
	jule::Trait<_1a8be79c8_Lookup> _field_lookup = jule::Trait<_1a8be79c8_Lookup>();
	jule::Ptr<_1a8ad0a37_Referencer> _field_referencer = jule::Ptr<_1a8ad0a37_Referencer>();
	_1da81133a_Token _field_error_token = _1da81133a_Token();
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();


	_1a8ad0a37_TypeChecker(jule::Ptr<_1c1b18a24_Sema> __param_s, jule::Trait<_1a8be79c8_Lookup> __param_lookup, jule::Ptr<_1a8ad0a37_Referencer> __param_referencer, _1da81133a_Token __param_error_token, jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin) {}

	

	_1a8ad0a37_TypeChecker(void) = default;

	inline void _method_push_err(_1da81133a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_allow_builtin(void);


	inline void _method_disallow_builtin(void);


	inline jule::Ptr<_1a8ad0a37_Prim> _method_build_prim(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1a8ad0a37_Kind> _method_from_type_alias(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&,jule::Ptr<_1a8ad0a37_TypeAlias>&);


	inline jule::Ptr<_1c196c834_Enum> _method_from_enum(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&,jule::Ptr<_1c196c834_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ptr<_1db4a7e59_StructIns>&,_1da81133a_Token&);


	inline void _method_append_used_struct_reference(jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Ptr<_1db4a7e59_StructIns> _method_from_struct(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&,jule::Ptr<_1db4a7e59_Struct>&);


	inline jule::Trait<_1a8ad0a37_Kind> _method_get_def(jule::Ptr<_1da7b8e5d_IdentTypeDecl>&);


	inline jule::Trait<_1a8ad0a37_Kind> _method_build_ident(jule::Ptr<_1da7b8e5d_IdentTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Sptr> _method_build_sptr_from_type(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Ptr<_1a8ad0a37_Sptr> _method_build_sptr(jule::Ptr<_1da7b8e5d_SptrTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Ptr> _method_build_ptr_from_type(jule::Ptr<_1a8ad0a37_TypeKind>&);


	inline jule::Ptr<_1a8ad0a37_Ptr> _method_build_ptr(jule::Ptr<_1da7b8e5d_PtrTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Slc> _method_build_slc(jule::Ptr<_1da7b8e5d_SlcTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Arr> _method_build_arr(jule::Ptr<_1da7b8e5d_ArrTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Map> _method_build_map(jule::Ptr<_1da7b8e5d_MapTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_Tuple> _method_build_tuple(jule::Ptr<_1da7b8e5d_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ptr<_1c17e2687_FnIns>&);


	inline jule::Ptr<_1c17e2687_FnIns> _method_build_fn(jule::Ptr<_1da7b8e5d_FnDecl>);


	inline jule::Trait<_1a8ad0a37_Kind> _method_build_by_namespace(jule::Ptr<_1da7b8e5d_NamespaceTypeDecl>);


	inline jule::Ptr<_1a8ad0a37_TypeKind> _method_build(jule::Any&);


	inline jule::Ptr<_1a8ad0a37_TypeKind> _method_check_decl(jule::Ptr<_1da7b8e5d_TypeDecl>&);


	inline void _method_check(jule::Ptr<_1a8ad0a37_TypeSymbol>&);


	inline bool operator==(const _1a8ad0a37_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain &&
			this->_field_dis_builtin == _Src._field_dis_builtin;
	}

	inline bool operator!=(const _1a8ad0a37_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_AssignLeft {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_AssignLeft(_1da81133a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1da7b8e5d_AssignLeft(void) = default;

	inline bool operator==(const _1da7b8e5d_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_1da81133a_Token _field_setter = _1da81133a_Token();
	jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>>();
	jule::Ptr<_1da7b8e5d_Expr> _field_right = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_AssignSt(jule::Bool __param_declarative, _1da81133a_Token __param_setter, jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>> __param_left, jule::Ptr<_1da7b8e5d_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1da7b8e5d_AssignSt(void) = default;

	inline bool operator==(const _1da7b8e5d_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1da7b8e5d_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da73e9b6_IR {
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1c1b398be_Package> _field_main = jule::Ptr<_1c1b398be_Package>();
	jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>>();
	_1da73db6e_OrderedDefines _field_ordered = _1da73db6e_OrderedDefines();


	_1da73e9b6_IR(jule::Slice<jule::Str> __param_passes, jule::Ptr<_1c1b398be_Package> __param_main, jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> __param_used, _1da73db6e_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1da73e9b6_IR(void) = default;

	static inline std::tuple<jule::Ptr<_1da73e9b6_IR>,jule::Slice<_203741197_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ptr<_1c1b398be_Package>&,jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);


	inline jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ptr<_1c1b398be_Package>&,jule::Slice<jule::Ptr<_1c1b58316_Var>>&);


	inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1da73e9b6_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1da73e9b6_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Comment {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_text = jule::Str();


	_1da7b8e5d_Comment(_1da81133a_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1da7b8e5d_Comment(void) = default;

	inline bool operator==(const _1da7b8e5d_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1da7b8e5d_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_ParamDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1da7b8e5d_ParamDecl(_1da81133a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1da7b8e5d_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1da7b8e5d_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1da7b8e5d_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_FnDecl {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>();
	jule::Ptr<_1da7b8e5d_RetTypeDecl> _field_result = jule::Ptr<_1da7b8e5d_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>();


	_1da7b8e5d_FnDecl(_1da81133a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> __param_generics, jule::Ptr<_1da7b8e5d_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1da7b8e5d_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1da7b8e5d_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1da7b8e5d_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_VarDecl {
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>();
	jule::Ptr<_1da7b8e5d_CommentGroup> _field_doc_comments = jule::Ptr<_1da7b8e5d_CommentGroup>();
	jule::Ptr<_1da7b8e5d_TypeDecl> _field_kind = jule::Ptr<_1da7b8e5d_TypeDecl>();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_VarDecl(jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope, _1da81133a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1da7b8e5d_Directive>> __param_directives, jule::Ptr<_1da7b8e5d_CommentGroup> __param_doc_comments, jule::Ptr<_1da7b8e5d_TypeDecl> __param_kind, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1da7b8e5d_VarDecl(void) = default;

	inline bool operator==(const _1da7b8e5d_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_RetSt {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();


	_1da7b8e5d_RetSt(_1da81133a_Token __param_token, jule::Ptr<_1da7b8e5d_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1da7b8e5d_RetSt(void) = default;

	inline bool operator==(const _1da7b8e5d_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1da7b8e5d_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_Iter {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1da7b8e5d_ScopeTree> _field_scope = jule::Ptr<_1da7b8e5d_ScopeTree>();


	_1da7b8e5d_Iter(_1da81133a_Token __param_token, jule::Any __param_kind, jule::Ptr<_1da7b8e5d_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1da7b8e5d_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1da7b8e5d_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1da7b8e5d_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1c197a248_ScopeLabel {
	_1da81133a_Token _field_token = _1da81133a_Token();
	jule::Ptr<_1c197a248_Label> _field_label = jule::Ptr<_1c197a248_Label>();
	jule::Int _field_pos = jule::Int();
	jule::Ptr<_1c197a248_ScopeChecker> _field_scope = jule::Ptr<_1c197a248_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1c197a248_ScopeLabel(_1da81133a_Token __param_token, jule::Ptr<_1c197a248_Label> __param_label, jule::Int __param_pos, jule::Ptr<_1c197a248_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1c197a248_ScopeLabel(void) = default;

	inline bool operator==(const _1c197a248_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1c197a248_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1da7b8e5d_WhileKind {
	jule::Ptr<_1da7b8e5d_Expr> _field_expr = jule::Ptr<_1da7b8e5d_Expr>();
	jule::Any _field_next = jule::Any();
	_1da81133a_Token _field_next_token = _1da81133a_Token();


	_1da7b8e5d_WhileKind(jule::Ptr<_1da7b8e5d_Expr> __param_expr, jule::Any __param_next, _1da81133a_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1da7b8e5d_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1da7b8e5d_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1da7b8e5d_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1d9d8c4cc_ArgParser {
	_1d9d8c4cc_FlagSet _field_set = _1d9d8c4cc_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::Int _field_i = jule::Int();


	_1d9d8c4cc_ArgParser(_1d9d8c4cc_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1d9d8c4cc_ArgParser(void) = default;

	inline std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	inline std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	inline jule::Str _method_get_data(void);


	inline jule::VoidExceptional _method_process_flag(jule::Trait<_1d9d8c4cc_CommonFlag>&);


	inline jule::VoidExceptional _method_single_dash(jule::Str&);


	inline jule::VoidExceptional _method_double_dash(jule::Str&);


	inline jule::VoidExceptional _method_try_arg(void);


	inline jule::VoidExceptional _method_parse(void);


	inline bool operator==(const _1d9d8c4cc_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1d9d8c4cc_ArgParser &_Src) const { return !this->operator==(_Src); }
};


inline void _2037d0ea1_free(void*);
inline jule::Str _2037d15bc_byte_ptr_to_str(jule::U8*);
inline jule::Int _2052c4982_get_last_errno(void);
inline jule::Int _2052c5444_stat(jule::U8*,struct stat*);
inline jule::Int _2052c5444_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _2052c5444_getcwd(jule::U8*,jule::Uint);
inline DIR* _2052c5444_opendir(jule::U8*);
inline struct dirent* _2052c5444_readdir(DIR*);
inline jule::Int _2052c5444_closedir(DIR*);
inline jule::Int _2052c5444_mkdir(jule::U8*,jule::Int);
inline jule::Int _2052c5444_rmdir(jule::U8*);
inline jule::Int _2052c5444_unlink(jule::U8*);
inline jule::I64 _203797660_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _203797660_read(jule::Int,void*,jule::Uint);
inline jule::Int _203797660_close(jule::Int);
inline jule::Int _203797660_write(jule::Int,void*,jule::Uint);
inline void _203797660_exit(jule::Int);
inline jule::Int _2052ae6b4_get_last_os_error(void);
inline jule::Slice<jule::Str> _2052b1331_args(void);
inline jule::Exceptional<jule::Str> _2052b1331_working_dir(void);
inline jule::Exceptional<jule::Str> _2052bb8be___getwd(void);
inline jule::Str _20525e312_clean(jule::Str);
inline jule::Str _20525e312_from_slash(jule::Str);
inline jule::Str _20525e312_join(jule::Slice<jule::Str>);
inline jule::Str _20525e312_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20525e312_abs(jule::Str);
inline jule::Str _20525e312_base(jule::Str);
inline jule::Str _20525e312_dir(jule::Str);
inline jule::Str _20525e312_volume_name(jule::Str);
inline jule::Bool _205260d2a_is_path_sep(jule::U8);
inline jule::Bool _205260d2a_is_abs(jule::Str);
inline jule::Int _205260d2a_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _205260d2a___abs(jule::Str);
inline jule::Str _205260d2a_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _205260d2a___join(jule::Slice<jule::Str>);
inline jule::Int _20379c05a_get_last_process_error(void);
inline void _2038538d6_exit(jule::Int);
inline jule::Str _2038538d6_executable(void);
inline jule::Bool _20374065d_is_std_header_path(jule::Str);
inline jule::Bool _20374065d_is_valid_header_ext(jule::Str);
inline jule::Bool _20374065d_is_valid_cpp_ext(jule::Str);
inline jule::Str _203741197_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _203741197_arg_to_str(jule::Any);
inline jule::Int _203741197_find_next_fmt(jule::Str);
inline jule::Str _203741197_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _2052172ed_is_top_directive(jule::Str);
inline jule::Bool _2052120b7_is_windows(jule::Str);
inline jule::Bool _2052120b7_is_darwin(jule::Str);
inline jule::Bool _2052120b7_is_linux(jule::Str);
inline jule::Bool _2052120b7_is_i386(jule::Str);
inline jule::Bool _2052120b7_is_amd64(jule::Str);
inline jule::Bool _2052120b7_is_arm64(jule::Str);
inline jule::Bool _2052120b7_is_unix(jule::Str);
inline jule::Bool _2052120b7_is_32bit(jule::Str);
inline jule::Bool _2052120b7_is_64bit(jule::Str);
inline void _205229b6d_exit_err(jule::Str);
inline void _205229b6d_init(void);
inline jule::Int _1da64d3ca_leading_zeros64(jule::U64);
inline jule::Int _1da64d3ca_trailing_zeros(jule::Uint);
inline jule::Int _1da64d3ca_trailing_zeros32(jule::U32);
inline jule::Int _1da64d3ca_trailing_zeros64(jule::U64);
inline jule::Int _1da64d3ca_len32(jule::U32);
inline jule::Int _1da64d3ca_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1da64d3ca_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1da64d3ca_mul64(jule::U64,jule::U64);
inline jule::U32 _1da1885db_f32_bits(jule::F32);
inline jule::F32 _1da1885db_f32_from_bits(jule::U32);
inline jule::U64 _1da1885db_f64_bits(jule::F64);
inline jule::F64 _1da1885db_f64_from_bits(jule::U64);
inline jule::F64 _1da23ca58_nan(void);
inline jule::Bool _1da23ca58_is_nan(jule::F64);
inline jule::F64 _1da23ca58_inf(jule::Int);
inline jule::Bool _1da23ca58_is_inf(jule::F64,jule::Int);
inline jule::F64 _1da2cb047_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1da327538_modf(jule::F64);
inline jule::Str _2037c5759_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _2037c5759_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _2037c5759_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline jule::Slice<jule::U8> _2037c5759_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_2037c5759_DecimalSlice,jule::Int,jule::U8);
inline void _2037c5759_round_shortest(_1da102588_Decimal&,jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline jule::Slice<jule::U8> _2037c5759_fmt_e(jule::Slice<jule::U8>,jule::Bool,_2037c5759_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _2037c5759_fmt_f(jule::Slice<jule::U8>,jule::Bool,_2037c5759_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _2037c5759_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline jule::Slice<jule::U8> _2037c5759_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline jule::Int _2037c5759_min(jule::Int,jule::Int);
inline jule::Int _2037c5759_max(jule::Int,jule::Int);
inline jule::U8 _20385580b_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _20385580b_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _20385580b_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1d9e17a41_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d9e17a41_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1d9e31c58_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1d9e31c58_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d9e31c58_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1d9e31c58_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d9e31c58_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1d9e31c58_atof_hex(jule::Str,_2037c5759_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1d9e31c58_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1d9e31c58_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1d9e31c58_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1d9e31c58_parse_float(jule::Str,jule::Int);
inline void _1d9e3ae71_ryu_ftoa_fixed32(_2037c5759_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1d9e3ae71_ryu_ftoa_fixed64(_2037c5759_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1d9e3ae71_format_decimal(_2037c5759_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1d9e3ae71_ryu_ftoa_shortest(_2037c5759_DecimalSlice&,jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline jule::Int _1d9e3ae71_mul_by_log2_log10(jule::Int);
inline jule::Int _1d9e3ae71_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d9e3ae71_compute_bounds(jule::U64,jule::Int,_2037c5759_FloatInfo&);
inline void _1d9e3ae71_ryu_digits(_2037c5759_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1d9e3ae71_ryu_digits32(_2037c5759_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1d9e3ae71_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1d9e3ae71_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1d9e3ae71_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1d9e3ae71_divmod1e9(jule::U64);
inline void _1da102588_trim(_1da102588_Decimal&);
inline void _1da102588_right_shift(_1da102588_Decimal&,jule::Uint);
inline jule::Bool _1da102588_prefix_is_less_than(jule::Array<jule::U8,800>,jule::Int,jule::Str);
inline void _1da102588_left_shift(_1da102588_Decimal&,jule::Uint);
inline jule::Bool _1da102588_should_round_up(_1da102588_Decimal&,jule::Int);
inline jule::Str _1da106db7_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1da106db7_fmt_int(jule::I64,jule::Int);
inline jule::Str _1da106db7_itoa(jule::Int);
inline jule::Str _1da106db7_small(jule::Int);
inline jule::Bool _1da106db7_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1da106db7_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1d9d89b4a_push_opt_level(jule::Int);
inline jule::Bool _1da85a4b6_is_letter(jule::I32);
inline jule::Bool _1db2d9c36_is16(jule::Slice<_1db2d9c36_Range16>,jule::U16);
inline jule::Bool _1db2d9c36_is32(jule::Slice<_1db2d9c36_Range32>,jule::U32);
inline jule::Bool _1db2d9c36_is_excluding_latin(jule::Ptr<_1db2d9c36_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::Int> _1da91c952_decode_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1da91c952_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1da91c952_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1db3c5ea9_get_last_fs_error(void);
inline jule::Bool _1da81133a_is_unary_op(jule::Str);
inline jule::Bool _1da81133a_is_bin_op(jule::Str);
inline jule::Bool _1da81133a_is_str(jule::Str);
inline jule::Bool _1da81133a_is_raw_str(jule::Str);
inline jule::Bool _1da81133a_is_rune(jule::Str);
inline jule::Bool _1da81133a_is_bool(jule::Str);
inline jule::Bool _1da81133a_contains_any(jule::Str,jule::Str);
inline jule::Bool _1da81133a_is_float(jule::Str);
inline jule::Bool _1da81133a_is_num(jule::Str);
inline jule::Bool _1da81133a_is_ignore_ident(jule::Str);
inline jule::Bool _1da81133a_is_anon_ident(jule::Str);
inline jule::Bool _1da81133a_is_space(jule::I32);
inline jule::Bool _1da81133a_is_letter(jule::I32);
inline jule::Bool _1da81133a_is_decimal(jule::U8);
inline jule::Bool _1da81133a_is_binary(jule::U8);
inline jule::Bool _1da81133a_is_octal(jule::U8);
inline jule::Bool _1da81133a_is_hex(jule::U8);
inline jule::Bool _1da81133a_is_assign(jule::Uint);
inline jule::Bool _1da81133a_is_postfix_op(jule::Str);
inline jule::Bool _1da81133a_is_assign_op(jule::Str);
inline jule::Ptr<_1da7bba21_File> _1da7bba21_new_file_set(jule::Str);
inline _203741197_Log _1da7bd281_make_err(jule::Int,jule::Int,jule::Ptr<_1da7bba21_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1da7bd281_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1da7bd281_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1da7bd281_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1da7bd281_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1da7bd281_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1da7bd281_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1da7bd281_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1da7bd281_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1da7bd281_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_203741197_Log> _1da7bd281_lex(jule::Ptr<_1da7bba21_File>);
inline jule::Ptr<_1db4a8399_FileInfo> _1db4a8399_parse_file(jule::Ptr<_1da7bba21_File>);
inline std::tuple<jule::Ptr<_1da7635cd_Ast>,jule::Slice<_203741197_Log>> _1db4a8399_parse_fileset(jule::Ptr<_1da7bba21_File>);
inline jule::Ptr<_1da7b8e5d_ScopeTree> _1db4a8553_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1db4a8553_is_st(_1da81133a_Token,_1da81133a_Token);
inline jule::Bool _1db4a8553_prev_is_incomplete_expr(jule::Slice<_1da81133a_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1db4a8553_next_st_pos(jule::Slice<_1da81133a_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Bool> _1db4a8553_skip_st(jule::Int&,jule::Slice<_1da81133a_Token>);
inline jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _1db4a8553_split_stmts(jule::Slice<_1da81133a_Token>&);
inline jule::Ptr<_1db4ca7d9_CallData> _1db4ca7d9_get_call_data(jule::Slice<_1da81133a_Token>&);
inline jule::Slice<_1da81133a_Token> _1db4ca7d9_get_block_expr(jule::Slice<_1da81133a_Token>&);
inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Slice<_1da81133a_Token>> _1db4ca7d9_split_colon(jule::Slice<_1da81133a_Token>&);
inline jule::Slice<_1da81133a_Token> _1db4ca7d9_eliminate_comments(jule::Slice<_1da81133a_Token>&);
inline jule::Int _1db4ca7d9_find_lowest_prec_op(jule::Slice<_1da81133a_Token>&);
inline jule::Ptr<_1da7b8e5d_IdentExpr> _1db4ca7d9_build_ident_expr(_1da81133a_Token&);
inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Int> _1db4ca7d9_get_range_expr_tokens(jule::Slice<_1da81133a_Token>&);
inline jule::Bool _1c152a326_check_assign_tokens(jule::Slice<_1da81133a_Token>&);
inline _203741197_Log _1c1526124_make_err(jule::Int,jule::Int,jule::Ptr<_1da7bba21_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1da81133a_Token> _1c1526124_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1da81133a_Token>&);
inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Slice<_1da81133a_Token>> _1c1526124_range_last(jule::Slice<_1da81133a_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1da81133a_Token>>,jule::Slice<_203741197_Log>> _1c1526124_parts(jule::Slice<_1da81133a_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1c1526124_get_close_kind_of_brace(jule::Str);
inline _203741197_Log _1c1526124_compiler_err(_1da81133a_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1c1526124_push_suggestion(_203741197_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1da7b8e5d_Comment> _1c1526124_build_comment(_1da81133a_Token&);
inline jule::Str _1c1526124_tokstoa(jule::Slice<_1da81133a_Token>&);
inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_build_void_type(void);
inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_build_prim_type(_1da81133a_Token);
inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Int> _1c163edb9_split_map_range(jule::Slice<_1da81133a_Token>&,jule::Int&);
inline void _1a8d46165_lshift_unsig(_1a8d46165_Const&,_1a8d46165_Const&);
inline void _1a8d46165_rshift_unsig(_1a8d46165_Const&,_1a8d46165_Const&);
inline jule::Str _1a8d48c4a_real_kind_of(jule::Str);
inline jule::Int _1a8d48c4a_bitsize_of(jule::Str);
inline jule::Str _1a8d48c4a_int_from_bits(jule::U64);
inline jule::Str _1a8d48c4a_uint_from_bits(jule::U64);
inline jule::Str _1a8d48c4a_float_from_bits(jule::U64);
inline jule::Bool _1a8d48c4a_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1a8d48c4a_bitsize_of_float(jule::F64);
inline jule::U64 _1a8d48c4a_bitsize_of_int(jule::I64);
inline jule::U64 _1a8d48c4a_bitsize_of_uint(jule::U64);
inline jule::F64 _1a8d4e338_min(jule::Str);
inline jule::F64 _1a8d4e338_max(jule::Str);
inline jule::Bool _1a8d4a39a_is_i8_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_i16_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_i32_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_i64_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_u8_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_u16_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_u32_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_u64_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_f32_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_is_f64_compatible(jule::Str);
inline jule::Bool _1a8d4a39a_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1a8d4a39a_is_i16_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_i32_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_i64_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_u16_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_u32_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_u64_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_f32_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_f64_greater(jule::Str);
inline jule::Bool _1a8d4a39a_is_greater(jule::Str,jule::Str);
inline jule::Bool _1a8dc9a45_is_sig_int(jule::Str);
inline jule::Bool _1a8dc9a45_is_unsig_int(jule::Str);
inline jule::Bool _1a8dc9a45_is_int(jule::Str);
inline jule::Bool _1a8dc9a45_is_float(jule::Str);
inline jule::Bool _1a8dc9a45_is_num(jule::Str);
inline jule::Bool _1a8e7e6ee_is_ascii(jule::I32);
inline jule::I32 _1a8e7e6ee_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a8e7e6ee_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a8e7e6ee_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a8e7e6ee_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a8e7e6ee_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _1a8e7e6ee_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _1c17e2687_kind_uses_generics(jule::Ptr<_1a8ad0a37_TypeKind>,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>&);
inline jule::Bool _1c17e2687_parameter_uses_generics(jule::Ptr<_1c17e2687_Param>&,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>&);
inline jule::Str _1c18c86d5_str_repeat(jule::Str,jule::Int);
inline jule::Str _1c18c86d5_build_doc(jule::Ptr<_1da7b8e5d_CommentGroup>);
inline jule::Ptr<_1a8ad0a37_TypeSymbol> _1c18c86d5_build_type(jule::Ptr<_1da7b8e5d_TypeDecl>);
inline jule::Ptr<_1c1ead281_Value> _1c18c86d5_build_expr(jule::Ptr<_1da7b8e5d_Expr>);
inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c18c86d5_build_type_alias(jule::Ptr<_1da7b8e5d_TypeAliasDecl>);
inline jule::Ptr<_1db4a7e59_Field> _1c18c86d5_build_field(jule::Ptr<_1da7b8e5d_FieldDecl>);
inline jule::Slice<jule::Ptr<_1db4a7e59_Field>> _1c18c86d5_build_fields(jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>>&);
inline jule::Ptr<_1db4a7e59_Struct> _1c18c86d5_build_struct(jule::Ptr<_1da7b8e5d_StructDecl>);
inline jule::Ptr<_1c17e2687_Param> _1c18c86d5_build_param(jule::Ptr<_1da7b8e5d_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c17e2687_Param>> _1c18c86d5_build_params(jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>&);
inline jule::Ptr<_1c17e2687_RetType> _1c18c86d5_build_ret_type(jule::Ptr<_1da7b8e5d_RetTypeDecl>);
inline jule::Ptr<_1c17e2687_Fn> _1c18c86d5_build_fn(jule::Ptr<_1da7b8e5d_FnDecl>);
inline jule::Slice<jule::Ptr<_1c17e2687_Fn>> _1c18c86d5_build_methods(jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>&);
inline jule::Ptr<_1c196b2a0_Trait> _1c18c86d5_build_trait(jule::Ptr<_1da7b8e5d_TraitDecl>);
inline jule::Ptr<_1c196c834_EnumItem> _1c18c86d5_build_enum_item(jule::Ptr<_1da7b8e5d_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c196c834_EnumItem>> _1c18c86d5_build_enum_items(jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>>&);
inline jule::Ptr<_1c196c834_Enum> _1c18c86d5_build_enum(jule::Ptr<_1da7b8e5d_EnumDecl>);
inline jule::Ptr<_1c1b58316_Var> _1c18c86d5_build_var(jule::Ptr<_1da7b8e5d_VarDecl>);
inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c18c86d5_build_vars(jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>>);
inline jule::Ptr<_1c1977ee3_Impl> _1c18c86d5_build_impl(jule::Ptr<_1da7b8e5d_Impl>);
inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_new_scope_checker_base(jule::Ptr<_1c1b18a24_Sema>&,jule::Ptr<_1c17e2687_FnIns>);
inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_new_scope_checker(jule::Ptr<_1c1b18a24_Sema>&,jule::Ptr<_1c17e2687_FnIns>);
inline jule::Ptr<_1c197a248_ScopeLabel> _1c197a248_find_label_parent(jule::Str,jule::Ptr<_1c197a248_ScopeChecker>);
inline jule::Bool _1c197a248_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1c197a248_Scope>&);
inline jule::Int _1c197a248_count_match_type(jule::Ptr<_1c197a248_Match>&,jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Slice<jule::Ptr<_1c1ead281_Data>> _1c197a248_get_datas_from_tuple_data(jule::Ptr<_1c1ead281_Data>&);
inline jule::Slice<jule::Any> _1c197a248_get_expr_models(jule::Any&);
inline jule::Bool _1c197a248_check_mut(jule::Ptr<_1c1b18a24_Sema>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);
inline jule::Bool _1c197a248_check_assign(jule::Ptr<_1c1b18a24_Sema>&,jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1ead281_Data>,_1da81133a_Token);
inline jule::Bool _1c197a248_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1c197a248_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1c197a248_st_is_def(jule::Any&);
inline jule::Ptr<_1c1b58316_Var> _1c1b398be_find_var_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b398be_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1db4a7e59_Struct> _1c1b398be_find_struct_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1c17e2687_Fn> _1c1b398be_find_fn_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1c196b2a0_Trait> _1c1b398be_find_trait_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1c196c834_Enum> _1c1b398be_find_enum_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Str);
inline jule::Bool _1c1b18a24_is_valid_model_for_ref(jule::Any);
inline _203741197_Log _1c1b18a24_compiler_err(_1da81133a_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1c1b18a24_imp_is_lookupable(jule::Ptr<_1c1b398be_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c1b18a24_build_ret_vars(jule::Ptr<_1c17e2687_FnIns>&);
inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c1b18a24_build_param_vars(jule::Ptr<_1c17e2687_FnIns>&);
inline jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _1c1b18a24_build_generic_type_aliases(jule::Ptr<_1c17e2687_FnIns>&);
inline jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_find_file(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>&,jule::Ptr<_1da7bba21_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1c1b18a24_conditional_has_ret(jule::Ptr<_1c197a248_Conditional>);
inline jule::Bool _1c1b18a24_match_has_ret(jule::Ptr<_1c197a248_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1c1b18a24___has_ret(jule::Ptr<_1c197a248_Scope>);
inline jule::Bool _1c1b18a24_has_ret(jule::Ptr<_1c197a248_Scope>);
inline void _1c1b18a24_push_suggestion(_203741197_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _1c1d617a5_get_result_types(jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Bool _1c1d617a5_trait_has_reference_receiver(jule::Ptr<_1c196b2a0_Trait>&);
inline jule::Bool _1c1d617a5_float_assignable(jule::Str,jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1c1d617a5_sig_assignable(jule::Str,jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1c1d617a5_unsig_assignable(jule::Str,jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1c1d617a5_int_assignable(jule::Str,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1da7b8e5d_Directive> _1c1ead281_find_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>&,jule::Str);
inline jule::Any _1c1ead281_find_builtins_import(jule::Str,jule::Ptr<_1c1b398be_ImportInfo>);
inline void _1c1ead281_make_struct_lit_alloc(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c19727a1_StructLitExprModel>&);
inline jule::Ptr<_1c1b58316_Var> _1c1ead281_build_error_var(jule::Ptr<_1c197a248_Scope>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&);
inline jule::Any _1c1ead281_find_builtins_sema(jule::Str,jule::Ptr<_1c1b18a24_Sema>);
inline jule::Bool _1c1ead281_is_ok_for_shifting(jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1c1ead281_is_instanced_struct(jule::Ptr<_1db4a7e59_StructIns>);
inline jule::Bool _1c1ead281_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c1ead281_Data>&);
inline void _1c1ead281_normalize_bitsize(jule::Ptr<_1c1ead281_Data>&);
inline void _1c1ead281_normalize_type(jule::Ptr<_1c1ead281_Data>&);
inline void _1c1ead281_apply_cast_kind_model(jule::Ptr<_1c1ead281_Data>&);
inline void _1c1ead281_apply_cast_kind(jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1c1ead281_build_void_data(void);
inline jule::Str _1c1ead281_kind_by_bitsize(jule::Any);
inline jule::Str _1c1ead281_check_data_for_integer_indexing(jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1a8ad0a37_can_get_ptr(jule::Ptr<_1c1ead281_Data>&);
inline jule::Bool _1a8ad0a37_is_valid_for_sptr_type(jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Bool _1a8ad0a37_is_valid_for_ref(jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Bool _1a8ad0a37_is_builtin_str_convertable(jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Str _1a8ad0a37_build_link_path_by_tokens(jule::Slice<_1da81133a_Token>&);
inline jule::Ptr<_1a8ad0a37_Prim> _1a8ad0a37_build_prim_type(jule::Str);
inline jule::Ptr<_1db4a7e59_Struct> _1a8ad0a37_get_struct_from_kind(jule::Ptr<_1a8ad0a37_TypeKind>);
inline jule::Bool _1a8ad0a37_is_prim(jule::Str);
inline std::tuple<jule::Ptr<_1c2020e2b_SymbolTable>,jule::Slice<_203741197_Log>> _1da7ae948_build_symbols(jule::Ptr<_1da7635cd_Ast>&,jule::Trait<_1c1b398be_Importer>&,jule::Ptr<_1c18c86d5_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1c1b398be_Package>,jule::Slice<_203741197_Log>> _1da7ae948___analyze_package(jule::Slice<jule::Ptr<_1da7635cd_Ast>>&,jule::Trait<_1c1b398be_Importer>&,jule::Int&);
inline std::tuple<jule::Ptr<_1c1b398be_Package>,jule::Slice<_203741197_Log>> _1da7ae948_analyze_package(jule::Slice<jule::Ptr<_1da7635cd_Ast>>,jule::Trait<_1c1b398be_Importer>,jule::Int);
inline jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)> _1a8c0ca10_find_builtin_caller(jule::U8);
inline jule::Ptr<_1c17e2687_FnIns> _1a8c0ca10_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a8ad0a37_TypeAlias> _1a8c0ca10_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1c196b2a0_Trait> _1a8c0ca10_find_builtin_trait(jule::Str);
inline jule::Any _1a8c0ca10_find_builtin_def(jule::Str);
inline jule::Any _1a8c0ca10_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a8c0ca10_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a8c0ca10_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a8c0ca10_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common_plain(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common_mut(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_error(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_out(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_outln(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_new(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_panic(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_make(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_append(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_copy(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_clone(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_assert(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_mem_size_of(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_mem_align_of(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_jule_integrated_inline(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_debug_out(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_debug_outln(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1da7590b8_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1da7590b8_check_arch(jule::Str);
inline jule::Bool _1da7590b8_is_pass_file_annotation(jule::Str);
inline void _1da78aaab_set_os_flags(void);
inline void _1da78aaab_set_arch_flags(void);
inline void _1da78aaab_init_flags(void);
inline void _1da7889cc_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1da7889cc_read_buff(jule::Str);
inline _203741197_Log _1da7889cc_flat_compiler_err(jule::Str);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>> _1da7889cc_read_package_dirents(jule::Str);
inline std::tuple<jule::Bool,jule::Slice<_203741197_Log>> _1da7889cc_is_pass_build_directives(jule::Ptr<_1da7635cd_Ast>&);
inline void _1da73e9b6_push_passes(jule::Ptr<_1c1b398be_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1da73e9b6_get_all_unique_passes(jule::Ptr<_1c1b398be_Package>&,jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>>);
inline jule::Bool _1d9d8a321_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1d9d8a321_is_dead(jule::Any);
inline void _1d9d8a321_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1d9d8a321_is_all_references_are_dead(jule::Ptr<_1c18c86d5_ReferenceStack>);
inline jule::Bool _1d9d8a321_is_fn_dead(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Bool _1d9d8a321_is_var_dead(jule::Ptr<_1c1b58316_Var>);
inline jule::Bool _1d9d8a321_is_struct_dead(jule::Ptr<_1db4a7e59_StructIns>);
inline jule::Bool _1d9d8a321_is_trait_dead(jule::Ptr<_1c196b2a0_Trait>);
inline void _1d9d8a321_eliminate_dead_functions(jule::Slice<jule::Ptr<_1c17e2687_Fn>>&);
inline void _1d9d8a321_eliminate_dead_globals(jule::Ptr<_1c1b398be_Package>&);
inline void _1d9d8a321_eliminate_dead_functions_package(jule::Ptr<_1c1b398be_Package>&);
inline void _1d9d8a321_catch_alive_init(jule::Ptr<_1c1b398be_Package>&);
inline void _1d9d8a321_eliminate_package(jule::Ptr<_1c1b398be_Package>&);
inline void _1d9d8a321_eliminate(jule::Ptr<_1da73e9b6_IR>&);
inline void _1da7303ad_eliminate_dead_code_of_scope(jule::Ptr<_1c197a248_Scope>);
inline jule::U64 _1a93d0c71_unix(void);
inline jule::U64 _1a93d0c71_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _1a93d0c71_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Bool _1c1ed6320_iter_expr_is_copy_optimizable(jule::Ptr<_1c1ead281_Data>&,jule::Ptr<_1c1b58316_Var>&);
inline jule::Str _1c1ed6320_gen_range_index_iter(jule::Ptr<_1c197a248_RangeIter>&);
inline jule::Str _1c1ed6320_gen_range_hashmap_iter(jule::Ptr<_1c197a248_RangeIter>&);
inline jule::Str _1c1ed6320_gen_if(jule::Ptr<_1c197a248_If>);
inline jule::Str _1c1ed6320_gen_conditional(jule::Ptr<_1c197a248_Conditional>);
inline jule::Str _1c1ed6320_gen_inf_iter(jule::Ptr<_1c197a248_InfIter>);
inline jule::Str _1c1ed6320_gen_while_iter(jule::Ptr<_1c197a248_WhileIter>);
inline jule::Str _1c1ed6320_gen_range_iter(jule::Ptr<_1c197a248_RangeIter>);
inline jule::Str _1c1ed6320_gen_cont(jule::Ptr<_1c197a248_ContSt>);
inline jule::Str _1c1ed6320_gen_label(jule::Ptr<_1c197a248_Label>);
inline jule::Str _1c1ed6320_gen_goto(jule::Ptr<_1c197a248_GotoSt>);
inline jule::Str _1c1ed6320_gen_postfix(jule::Ptr<_1c197a248_Postfix>);
inline jule::Str _1c1ed6320_gen_div_by_zero_assign(jule::Ptr<_1c197a248_Assign>);
inline jule::Str _1c1ed6320_gen_assign(jule::Ptr<_1c197a248_Assign>);
inline jule::Str _1c1ed6320_gen_multi_assign(jule::Ptr<_1c197a248_MultiAssign>);
inline jule::Str _1c1ed6320_get_case_match_expr(jule::Ptr<_1c197a248_Match>&);
inline jule::Str _1c1ed6320_gen_case(jule::Ptr<_1c197a248_Match>,jule::Ptr<_1c197a248_Case>);
inline jule::Str _1c1ed6320_gen_match(jule::Ptr<_1c197a248_Match>);
inline jule::Str _1c1ed6320_gen_fall_st(jule::Ptr<_1c197a248_FallSt>);
inline jule::Str _1c1ed6320_gen_break_st(jule::Ptr<_1c197a248_BreakSt>);
inline jule::Str _1c1ed6320_gen_ret_vars(jule::Ptr<_1c197a248_RetSt>);
inline jule::Str _1c1ed6320_gen_ret_expr_tuple(jule::Ptr<_1c197a248_RetSt>);
inline jule::Str _1c1ed6320_gen_ret_expr(jule::Ptr<_1c197a248_RetSt>);
inline jule::Str _1c1ed6320_gen_ret_st(jule::Ptr<_1c197a248_RetSt>);
inline jule::Str _1c1ed6320_gen_data_expr(jule::Ptr<_1c1ead281_Data>);
inline jule::Str _1c1ed6320_gen_scope_var(jule::Ptr<_1c1b58316_Var>);
inline jule::Str _1c1ed6320_gen_st(jule::Any);
inline jule::Str _1c1ed6320_gen_scope(jule::Ptr<_1c197a248_Scope>);
inline jule::Str _1c1ed6320_gen_fn_scope(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1c1ed6320_gen_method_scope(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1c200553c_concat_all_parts(jule::Slice<_1da81133a_Token>);
inline jule::Str _1c200553c_get_accessor(jule::Ptr<_1a8ad0a37_TypeKind>&);
inline jule::Str _1c200553c_decompose_common_esq(jule::U8);
inline jule::Str _1c200553c_sbtoa(jule::U8);
inline jule::Str _1c200553c_get_cstr_model(jule::Slice<jule::U8>);
inline jule::Str _1c200553c_get_str_model(jule::Ptr<_1a8d46165_Const>&);
inline jule::Str _1c200553c_get_bool_model(jule::Ptr<_1a8d46165_Const>&);
inline jule::Str _1c200553c_get_nil_model(void);
inline jule::Str _1c200553c_gen_float_special_cases(jule::F64&);
inline jule::Str _1c200553c_ftoa(jule::F64,jule::Int);
inline jule::Str _1c200553c_get_f32_model(jule::Ptr<_1a8d46165_Const>&);
inline jule::Str _1c200553c_get_f64_model(jule::Ptr<_1a8d46165_Const>&);
inline jule::Str _1c200553c_get_float_model(jule::Ptr<_1c1ead281_Data>&);
inline jule::Str _1c200553c_i64toa(jule::I64);
inline jule::Str _1c200553c_get_i64_model(jule::Ptr<_1a8d46165_Const>&);
inline jule::Str _1c200553c_u64toa(jule::U64);
inline jule::Str _1c200553c_get_u64_model(jule::Ptr<_1a8d46165_Const>);
inline jule::Str _1c200553c_gen_const_expr(jule::Ptr<_1c1ead281_Data>);
inline jule::Str _1c200553c_gen_const_expr_model(jule::Ptr<_1a8d46165_Const>);
inline jule::Str _1c200553c_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1c200553c_gen_binop_expr_model(jule::Ptr<_1c19727a1_BinopExprModel>);
inline jule::Str _1c200553c_gen_var_expr_model(jule::Ptr<_1c1b58316_Var>);
inline jule::Str _1c200553c_gen_struct_expr_model(jule::Ptr<_1db4a7e59_Struct>);
inline jule::Str _1c200553c_gen_struct_ins_expr_model(jule::Ptr<_1db4a7e59_StructIns>);
inline jule::Str _1c200553c_gen_unary_expr_model(jule::Ptr<_1c19727a1_UnaryExprModel>);
inline jule::Str _1c200553c_gen_cpp_struct_lit_expr_model(jule::Ptr<_1c19727a1_StructLitExprModel>);
inline jule::Str _1c200553c_gen_struct_lit_expr_model(jule::Ptr<_1c19727a1_StructLitExprModel>);
inline jule::Str _1c200553c_gen_alloc_struct_lit_expr_model(jule::Ptr<_1c19727a1_AllocStructLitExprModel>);
inline jule::Str _1c200553c_gen_casting_expr_model(jule::Ptr<_1c19727a1_CastingExprModel>);
inline jule::Str _1c200553c_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1c200553c_gen_expr_model_for_call(jule::Any);
inline jule::Str _1c200553c_gen_pure_fn_call_expr_model(jule::Ptr<_1c19727a1_FnCallExprModel>&);
inline jule::Bool _1c200553c_is_forwarded(jule::Ptr<_1c197a248_Scope>&);
inline jule::Bool _1c200553c_is_std_package(jule::Str,jule::Str);
inline jule::Str _1c200553c_gen_fn_call_expr_model(jule::Ptr<_1c19727a1_FnCallExprModel>);
inline jule::Str _1c200553c_gen_slice_expr_model(jule::Ptr<_1c19727a1_SliceExprModel>);
inline jule::Str _1c200553c_gen_indexing_expr_model(jule::Ptr<_1c19727a1_IndexigExprModel>);
inline jule::Str _1c200553c_gen_anon_fn_expr_model(jule::Ptr<_1c19727a1_AnonFnExprModel>);
inline jule::Str _1c200553c_gen_map_expr_model(jule::Ptr<_1c19727a1_MapExprModel>);
inline jule::Str _1c200553c_gen_slicing_expr_model(jule::Ptr<_1c19727a1_SlicingExprModel>);
inline jule::Str _1c200553c_gen_trait_sub_ident_expr_model(jule::Ptr<_1c19727a1_TraitSubIdentExprModel>);
inline jule::Str _1c200553c_gen_struct_sub_ident_expr_model(jule::Ptr<_1c19727a1_StructSubIdentExprModel>);
inline jule::Str _1c200553c_gen_common_ident_expr_model(jule::Ptr<_1c19727a1_CommonIdentExprModel>);
inline jule::Str _1c200553c_gen_common_sub_ident_expr_model(jule::Ptr<_1c19727a1_CommonSubIdentExprModel>);
inline jule::Str _1c200553c_gen_array_expr_model(jule::Ptr<_1c19727a1_ArrayExprModel>);
inline jule::Str _1c200553c_gen_fn_ins_expr_model_common(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1c200553c_gen_fn_ins_expr_model(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1c200553c_gen_tuple_expr_model(jule::Ptr<_1c19727a1_TupleExprModel>);
inline jule::Str _1c200553c_gen_builtin_new_call_expr_model(jule::Ptr<_1c19727a1_BuiltinNewCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_out_call_expr_model(jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_outln_call_expr_model(jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_panic_call_expr_model(jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_assert_call_expr_model(jule::Ptr<_1c19727a1_BuiltinAssertCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_error_call_expr_model(jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_make_call_expr_model(jule::Ptr<_1c19727a1_BuiltinMakeCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ptr<_1a8ad0a37_TypeKind>&,jule::Ptr<_1c19727a1_SliceExprModel>&,jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1c200553c_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_append_call_expr_model(jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>);
inline jule::Str _1c200553c_gen_builtin_clone_call_expr_model(jule::Ptr<_1c19727a1_BuiltinCloneCallExprModel>);
inline jule::Str _1c200553c_gen_sizeof_expr_model(jule::Ptr<_1c19727a1_SizeofExprModel>);
inline jule::Str _1c200553c_gen_alignof_expr_model(jule::Ptr<_1c19727a1_AlignofExprModel>);
inline jule::Str _1c200553c_gen_rune_expr_model(jule::Ptr<_1c19727a1_RuneExprModel>);
inline jule::Str _1c200553c_gen_struct_static_ident_expr_model(jule::Ptr<_1c19727a1_StructStaticIdentExprModel>);
inline jule::Str _1c200553c_gen_integrated_to_str_expr_model(jule::Ptr<_1c19727a1_IntegratedToStrExprModel>);
inline jule::Str _1c200553c_gen_ternary_expr_model(jule::Ptr<_1c19727a1_TernaryExprModel>);
inline jule::Str _1c200553c_gen_backend_emit_expr_model(jule::Ptr<_1c19727a1_BackendEmitExprModel>);
inline jule::Str _1c200553c_gen_expr_model(jule::Any);
inline jule::Str _1c200553c_gen_expr(jule::Any);
inline jule::Str _1c200553c_gen_val(jule::Ptr<_1c1ead281_Value>);
inline jule::Str _1c200553c_get_init_expr(jule::Ptr<_1a8ad0a37_TypeKind>);
inline jule::Str _1a926b546_get_derive_fn_decl_clone(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a926b546_get_derive_fn_def_clone(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a926bc61_as_ident(jule::Str);
inline jule::Str _1a926bc61_as_jt(jule::Str);
inline jule::Str _1a926bc61_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1a926bc61_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1a926bc61_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1a926bc61_fn_out_ident(jule::Ptr<_1c17e2687_Fn>&);
inline jule::Str _1a926bc61_fn_ins_out_ident(jule::Ptr<_1c17e2687_FnIns>&);
inline jule::Str _1a926bc61_trait_out_ident(jule::Ptr<_1c196b2a0_Trait>);
inline jule::Str _1a926bc61_param_out_ident(jule::Ptr<_1c17e2687_Param>&);
inline jule::Str _1a926bc61_struct_out_ident(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a926bc61_struct_ins_out_ident(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a926bc61_field_out_ident(jule::Ptr<_1db4a7e59_Field>&);
inline jule::Str _1a926bc61_var_out_ident(jule::Ptr<_1c1b58316_Var>);
inline jule::Str _1a926bc61_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1a926bc61_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1a926bc61_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1a926bc61_label_ident(jule::Str);
inline jule::Str _1a926bc61_match_end_label_ident(jule::Uintptr);
inline jule::Str _1a926bc61_case_begin_label_ident(jule::Uintptr);
inline jule::Ptr<_1da7b8e5d_Directive> _1a9294b13_find_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>&,jule::Str);
inline jule::Bool _1a9294b13_has_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>&,jule::Str);
inline jule::Str _1a9294b13_gen_prim_kind(jule::Ptr<_1a8ad0a37_Prim>);
inline jule::Str _1a9294b13_gen_tuple_kind(jule::Ptr<_1a8ad0a37_Tuple>);
inline jule::Str _1a9294b13_as_sptr_kind(jule::Str);
inline jule::Str _1a9294b13_gen_sptr_kind(jule::Ptr<_1a8ad0a37_Sptr>);
inline jule::Str _1a9294b13_gen_ptr_kind(jule::Ptr<_1a8ad0a37_Ptr>);
inline jule::Str _1a9294b13_gen_enum_kind(jule::Ptr<_1c196c834_Enum>);
inline jule::Str _1a9294b13_as_slice_kind(jule::Ptr<_1a8ad0a37_TypeKind>);
inline jule::Str _1a9294b13_gen_slice_kind(jule::Ptr<_1a8ad0a37_Slc>);
inline jule::Str _1a9294b13_gen_map_kind(jule::Ptr<_1a8ad0a37_Map>);
inline jule::Str _1a9294b13_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1a9294b13_gen_trait_kind(jule::Ptr<_1c196b2a0_Trait>);
inline jule::Str _1a9294b13_gen_struct_kind(jule::Ptr<_1db4a7e59_Struct>);
inline jule::Str _1a9294b13_gen_struct_kind_ins(jule::Ptr<_1db4a7e59_StructIns>);
inline jule::Str _1a9294b13_gen_array_kind(jule::Ptr<_1a8ad0a37_Arr>);
inline jule::Str _1a9294b13_gen_fn_anon_decl(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1a9294b13_gen_fn_kind(jule::Ptr<_1c17e2687_FnIns>);
inline jule::Str _1a9294b13_gen_type_kind(jule::Ptr<_1a8ad0a37_TypeKind>);
inline void _1a92bc4dc_add_indent(void);
inline void _1a92bc4dc_done_indent(void);
inline jule::Str _1a92bc4dc_indent(void);
inline jule::Bool _1a92bc4dc_is_cpp_header_file(jule::Str);
inline jule::Str _1a92bc4dc_gen_links(jule::Ptr<_1da73e9b6_IR>&);
inline jule::Str _1a92bc4dc_gen_fn_result(jule::Ptr<_1c17e2687_Fn>&);
inline jule::Str _1a92bc4dc_gen_fn_ins_result(jule::Ptr<_1c17e2687_FnIns>&);
inline jule::Str _1a92bc4dc_gen_param_prototype(jule::Ptr<_1c17e2687_Param>&);
inline jule::Str _1a92bc4dc_gen_param_ins(jule::Ptr<_1c17e2687_ParamIns>&);
inline jule::Str _1a92bc4dc_gen_param_ins_prototype(jule::Ptr<_1c17e2687_ParamIns>&);
inline jule::Str _1a92bc4dc_gen_param(jule::Ptr<_1c17e2687_Param>&);
inline jule::Str _1a92bc4dc_gen_params(jule::Slice<jule::Ptr<_1c17e2687_Param>>&);
inline jule::Str _1a92bc4dc_gen_params_ins(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>&);
inline jule::Str _1a92bc4dc_gen_params_prototypes(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>&);
inline jule::Str _1a92bc4dc_gen_trait(jule::Ptr<_1c196b2a0_Trait>&);
inline jule::Str _1a92bc4dc_gen_traits_tbl(jule::Ptr<_1c2020e2b_SymbolTable>&);
inline jule::Str _1a92bc4dc_gen_traits_pkg(jule::Ptr<_1c1b398be_Package>&);
inline jule::Str _1a92bc4dc_gen_traits(jule::Ptr<_1da73e9b6_IR>&);
inline jule::Str _1a92bc4dc_gen_trait_prototype(jule::Ptr<_1c196b2a0_Trait>&);
inline jule::Str _1a92bc4dc_gen_trait_prototypes(jule::Ptr<_1c1b398be_Package>&);
inline jule::Str _1a92bc4dc_gen_struct_plain_prototype(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a92bc4dc_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);
inline jule::Str _1a92bc4dc_gen_struct_traits(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a92bc4dc_gen_field_decl(jule::Ptr<_1db4a7e59_FieldIns>&);
inline jule::Str _1a92bc4dc_gen_struct_self_field_type_kind(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_self_field(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_self_field_init_st(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_constructor(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_destructor(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_operators(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_derive_defs_prototypes(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_ins_prototype(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_prototype(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a92bc4dc_gen_struct_prototypes(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);
inline jule::Str _1a92bc4dc_gen_fn_decl_head(jule::Ptr<_1c17e2687_FnIns>&,jule::Bool);
inline jule::Str _1a92bc4dc_gen_fn_prototype(jule::Ptr<_1c17e2687_Fn>&,jule::Bool);
inline jule::Str _1a92bc4dc_gen_fn_prototypes(jule::Ptr<_1c1b398be_Package>&);
inline jule::Str _1a92bc4dc_gen_prototypes(jule::Ptr<_1da73e9b6_IR>&);
inline jule::Str _1a92bc4dc_gen_var_init_expr(jule::Ptr<_1c1b58316_Var>&,jule::Str);
inline jule::Str _1a92bc4dc_gen_var(jule::Ptr<_1c1b58316_Var>);
inline jule::Str _1a92bc4dc_gen_globals(jule::Slice<jule::Ptr<_1c1b58316_Var>>&);
inline jule::Str _1a92bc4dc_gen_fn(jule::Ptr<_1c17e2687_Fn>&);
inline jule::Str _1a92bc4dc_gen_pkg_fns(jule::Ptr<_1c1b398be_Package>&);
inline jule::Str _1a92bc4dc_gen_struct_method_defs(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_ostream(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_derive_defs(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct_ins(jule::Ptr<_1db4a7e59_StructIns>&);
inline jule::Str _1a92bc4dc_gen_struct(jule::Ptr<_1db4a7e59_Struct>&);
inline jule::Str _1a92bc4dc_gen_structs(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>&);
inline jule::Str _1a92bc4dc_gen_fns(jule::Ptr<_1da73e9b6_IR>&);
inline void _1a92bc4dc_push_init(jule::Ptr<_1c1b398be_Package>&,jule::Str&);
inline jule::Str _1a92bc4dc_gen_init_caller(jule::Ptr<_1da73e9b6_IR>&);
inline void _1a92bc4dc_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1a92bc4dc_gen(jule::Ptr<_1da73e9b6_IR>&);
inline jule::Str _20370da05_str_repeat(jule::Str,jule::Int);
inline void _20370da05_print_error_message(jule::Str);
inline void _20370da05_help(jule::Slice<jule::Str>&);
inline void _20370da05_version(jule::Slice<jule::Str>&);
inline void _20370da05_tool_distos(void);
inline void _20370da05_tool_distarch(void);
inline void _20370da05_tool(jule::Slice<jule::Str>&);
inline void _20370da05_julenv(void);
inline jule::Bool _20370da05_process_command(jule::Slice<jule::Str>&);
inline void _20370da05_exit_err(jule::Str);
void entry_point(void);
inline void _20370e154___init_common(void);
inline void _203744145_init(void);
inline void _2037450be_write_output(jule::Str,jule::Str);
inline void _2037450be_clear_objects(void);
inline void _2037450be_compile_ir(jule::Str,jule::Str);
inline void _2037450be_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _2037450be_is_cpp_source_file(jule::Str);
inline void _2037450be_push_comp_cmd_clang(jule::Str&);
inline void _2037450be_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _2037450be_gen_compile_cmd(jule::Str,jule::Ptr<_1da73e9b6_IR>&);
inline jule::Str _2037450be_get_compile_path(void);
inline void _2037450be_apply_target_independent_optimizations(jule::Ptr<_1da73e9b6_IR>&);
inline void _2037450be_check_compiler_flag(void);
inline void _2037450be_check_target_arch(jule::Str);
inline void _2037450be_check_target_os(jule::Str);
inline void _2037450be_check_target_flag(jule::Str&);
inline void _2037450be_check_opt_flag(jule::Str&);
inline jule::Slice<jule::Str> _2037450be_check_flags(jule::Slice<jule::Str>&);
inline void _2037450be_setup_sema_flags(jule::Int&);
inline jule::Ptr<_1da73e9b6_IR> _2037450be_build_ir(jule::Slice<jule::Str>&);
inline void _2037450be_compile_command(jule::Slice<jule::Str>&);


static jule::Str _2037450be_COMPILER = jule::Str();
static jule::Str _2037450be_COMPILER_PATH = jule::Str();
static jule::Str _2037450be_OUT_DIR = jule::Str("dist", 4);
static jule::Str _2037450be_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _2037450be_OUT = jule::Str();
static jule::Str _2037450be_CPP_STD = jule::Str("c++17", 5);
static jule::Bool _2037450be_SHADOWING = false;
static jule::Bool _2037450be_TRANSPILATION = false;
static jule::Array<jule::Str,4> _20374065d_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _20374065d_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _20374065d_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,3> _2052120b7_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _2052120b7_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _205229b6d_PATH_STDLIB = jule::Str();
static jule::Str _205229b6d_PATH_EXEC = jule::Str();
static jule::Str _205229b6d_PATH_WD = jule::Str();
static jule::Str _205229b6d_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _1da64d3ca_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1da64d3ca_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _2037c5759_FloatInfo _2037c5759_F32_INFO = _2037c5759_FloatInfo(23LLU,8LLU,-127LL);
static _2037c5759_FloatInfo _2037c5759_F64_INFO = _2037c5759_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1d9e17a41_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1d9e31c58_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1d9e31c58_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1d9e31c58_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1d9e3ae71_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1da102588_LeftCheat> _1da102588_LEFTCHEATS = jule::Slice<_1da102588_LeftCheat>({_1da102588_LeftCheat(0LL,jule::Str()),_1da102588_LeftCheat(1LL,jule::Str("5", 1)),_1da102588_LeftCheat(1LL,jule::Str("25", 2)),_1da102588_LeftCheat(1LL,jule::Str("125", 3)),_1da102588_LeftCheat(2LL,jule::Str("625", 3)),_1da102588_LeftCheat(2LL,jule::Str("3125", 4)),_1da102588_LeftCheat(2LL,jule::Str("15625", 5)),_1da102588_LeftCheat(3LL,jule::Str("78125", 5)),_1da102588_LeftCheat(3LL,jule::Str("390625", 6)),_1da102588_LeftCheat(3LL,jule::Str("1953125", 7)),_1da102588_LeftCheat(4LL,jule::Str("9765625", 7)),_1da102588_LeftCheat(4LL,jule::Str("48828125", 8)),_1da102588_LeftCheat(4LL,jule::Str("244140625", 9)),_1da102588_LeftCheat(4LL,jule::Str("1220703125", 10)),_1da102588_LeftCheat(5LL,jule::Str("6103515625", 10)),_1da102588_LeftCheat(5LL,jule::Str("30517578125", 11)),_1da102588_LeftCheat(5LL,jule::Str("152587890625", 12)),_1da102588_LeftCheat(6LL,jule::Str("762939453125", 12)),_1da102588_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1da102588_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1da102588_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1da102588_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1da102588_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1da102588_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1da102588_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1da102588_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1da102588_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1da102588_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1da102588_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1da102588_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1da102588_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1da102588_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1da102588_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1da102588_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1da102588_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1da102588_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1da102588_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1da102588_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1da102588_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1da102588_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1da102588_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1da102588_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1da102588_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1da102588_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1da102588_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1da102588_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1da102588_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1da102588_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1da102588_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1da102588_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1da102588_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1da102588_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1da102588_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1da102588_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1da102588_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1da102588_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1da102588_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1da102588_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1da102588_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1da102588_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1da102588_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Bool _1d9d89b4a_PRODUCTION = false;
static jule::Bool _1d9d89b4a_OPT_COPY = false;
static jule::Bool _1d9d89b4a_OPT_DEADCODE = false;
static jule::Bool _1d9d89b4a_OPT_APPEND = false;
static jule::Bool _1d9d89b4a_OPT_MATH = false;
static jule::Bool _1d9d89b4a_OPT_ACCESS = false;
static jule::Bool _1d9d89b4a_OPT_INLINE = false;
static jule::Bool _1d9d89b4a_OPT_PTR = false;
static jule::Ptr<_1db2d9c36_RangeTable> _1da92365b__L = jule::new_struct<_1db2d9c36_RangeTable>(new( std::nothrow ) _1db2d9c36_RangeTable(jule::Slice<_1db2d9c36_Range16>({_1db2d9c36_Range16(65LLU,90LLU,1LLU),_1db2d9c36_Range16(97LLU,122LLU,1LLU),_1db2d9c36_Range16(170LLU,181LLU,11LLU),_1db2d9c36_Range16(186LLU,192LLU,6LLU),_1db2d9c36_Range16(193LLU,214LLU,1LLU),_1db2d9c36_Range16(216LLU,246LLU,1LLU),_1db2d9c36_Range16(248LLU,705LLU,1LLU),_1db2d9c36_Range16(710LLU,721LLU,1LLU),_1db2d9c36_Range16(736LLU,740LLU,1LLU),_1db2d9c36_Range16(748LLU,750LLU,2LLU),_1db2d9c36_Range16(880LLU,884LLU,1LLU),_1db2d9c36_Range16(886LLU,887LLU,1LLU),_1db2d9c36_Range16(890LLU,893LLU,1LLU),_1db2d9c36_Range16(895LLU,902LLU,7LLU),_1db2d9c36_Range16(904LLU,906LLU,1LLU),_1db2d9c36_Range16(908LLU,910LLU,2LLU),_1db2d9c36_Range16(911LLU,929LLU,1LLU),_1db2d9c36_Range16(931LLU,1013LLU,1LLU),_1db2d9c36_Range16(1015LLU,1153LLU,1LLU),_1db2d9c36_Range16(1162LLU,1327LLU,1LLU),_1db2d9c36_Range16(1329LLU,1366LLU,1LLU),_1db2d9c36_Range16(1369LLU,1376LLU,7LLU),_1db2d9c36_Range16(1377LLU,1416LLU,1LLU),_1db2d9c36_Range16(1488LLU,1514LLU,1LLU),_1db2d9c36_Range16(1519LLU,1522LLU,1LLU),_1db2d9c36_Range16(1568LLU,1610LLU,1LLU),_1db2d9c36_Range16(1646LLU,1647LLU,1LLU),_1db2d9c36_Range16(1649LLU,1747LLU,1LLU),_1db2d9c36_Range16(1749LLU,1765LLU,16LLU),_1db2d9c36_Range16(1766LLU,1774LLU,8LLU),_1db2d9c36_Range16(1775LLU,1786LLU,11LLU),_1db2d9c36_Range16(1787LLU,1788LLU,1LLU),_1db2d9c36_Range16(1791LLU,1808LLU,17LLU),_1db2d9c36_Range16(1810LLU,1839LLU,1LLU),_1db2d9c36_Range16(1869LLU,1957LLU,1LLU),_1db2d9c36_Range16(1969LLU,1994LLU,25LLU),_1db2d9c36_Range16(1995LLU,2026LLU,1LLU),_1db2d9c36_Range16(2036LLU,2037LLU,1LLU),_1db2d9c36_Range16(2042LLU,2048LLU,6LLU),_1db2d9c36_Range16(2049LLU,2069LLU,1LLU),_1db2d9c36_Range16(2074LLU,2084LLU,10LLU),_1db2d9c36_Range16(2088LLU,2112LLU,24LLU),_1db2d9c36_Range16(2113LLU,2136LLU,1LLU),_1db2d9c36_Range16(2144LLU,2154LLU,1LLU),_1db2d9c36_Range16(2160LLU,2183LLU,1LLU),_1db2d9c36_Range16(2185LLU,2190LLU,1LLU),_1db2d9c36_Range16(2208LLU,2249LLU,1LLU),_1db2d9c36_Range16(2308LLU,2361LLU,1LLU),_1db2d9c36_Range16(2365LLU,2384LLU,19LLU),_1db2d9c36_Range16(2392LLU,2401LLU,1LLU),_1db2d9c36_Range16(2417LLU,2432LLU,1LLU),_1db2d9c36_Range16(2437LLU,2444LLU,1LLU),_1db2d9c36_Range16(2447LLU,2448LLU,1LLU),_1db2d9c36_Range16(2451LLU,2472LLU,1LLU),_1db2d9c36_Range16(2474LLU,2480LLU,1LLU),_1db2d9c36_Range16(2482LLU,2486LLU,4LLU),_1db2d9c36_Range16(2487LLU,2489LLU,1LLU),_1db2d9c36_Range16(2493LLU,2510LLU,17LLU),_1db2d9c36_Range16(2524LLU,2525LLU,1LLU),_1db2d9c36_Range16(2527LLU,2529LLU,1LLU),_1db2d9c36_Range16(2544LLU,2545LLU,1LLU),_1db2d9c36_Range16(2556LLU,2565LLU,9LLU),_1db2d9c36_Range16(2566LLU,2570LLU,1LLU),_1db2d9c36_Range16(2575LLU,2576LLU,1LLU),_1db2d9c36_Range16(2579LLU,2600LLU,1LLU),_1db2d9c36_Range16(2602LLU,2608LLU,1LLU),_1db2d9c36_Range16(2610LLU,2611LLU,1LLU),_1db2d9c36_Range16(2613LLU,2614LLU,1LLU),_1db2d9c36_Range16(2616LLU,2617LLU,1LLU),_1db2d9c36_Range16(2649LLU,2652LLU,1LLU),_1db2d9c36_Range16(2654LLU,2674LLU,20LLU),_1db2d9c36_Range16(2675LLU,2676LLU,1LLU),_1db2d9c36_Range16(2693LLU,2701LLU,1LLU),_1db2d9c36_Range16(2703LLU,2705LLU,1LLU),_1db2d9c36_Range16(2707LLU,2728LLU,1LLU),_1db2d9c36_Range16(2730LLU,2736LLU,1LLU),_1db2d9c36_Range16(2738LLU,2739LLU,1LLU),_1db2d9c36_Range16(2741LLU,2745LLU,1LLU),_1db2d9c36_Range16(2749LLU,2768LLU,19LLU),_1db2d9c36_Range16(2784LLU,2785LLU,1LLU),_1db2d9c36_Range16(2809LLU,2821LLU,12LLU),_1db2d9c36_Range16(2822LLU,2828LLU,1LLU),_1db2d9c36_Range16(2831LLU,2832LLU,1LLU),_1db2d9c36_Range16(2835LLU,2856LLU,1LLU),_1db2d9c36_Range16(2858LLU,2864LLU,1LLU),_1db2d9c36_Range16(2866LLU,2867LLU,1LLU),_1db2d9c36_Range16(2869LLU,2873LLU,1LLU),_1db2d9c36_Range16(2877LLU,2908LLU,31LLU),_1db2d9c36_Range16(2909LLU,2911LLU,2LLU),_1db2d9c36_Range16(2912LLU,2913LLU,1LLU),_1db2d9c36_Range16(2929LLU,2947LLU,18LLU),_1db2d9c36_Range16(2949LLU,2954LLU,1LLU),_1db2d9c36_Range16(2958LLU,2960LLU,1LLU),_1db2d9c36_Range16(2962LLU,2965LLU,1LLU),_1db2d9c36_Range16(2969LLU,2970LLU,1LLU),_1db2d9c36_Range16(2972LLU,2974LLU,2LLU),_1db2d9c36_Range16(2975LLU,2979LLU,4LLU),_1db2d9c36_Range16(2980LLU,2984LLU,4LLU),_1db2d9c36_Range16(2985LLU,2986LLU,1LLU),_1db2d9c36_Range16(2990LLU,3001LLU,1LLU),_1db2d9c36_Range16(3024LLU,3077LLU,53LLU),_1db2d9c36_Range16(3078LLU,3084LLU,1LLU),_1db2d9c36_Range16(3086LLU,3088LLU,1LLU),_1db2d9c36_Range16(3090LLU,3112LLU,1LLU),_1db2d9c36_Range16(3114LLU,3129LLU,1LLU),_1db2d9c36_Range16(3133LLU,3160LLU,27LLU),_1db2d9c36_Range16(3161LLU,3162LLU,1LLU),_1db2d9c36_Range16(3165LLU,3168LLU,3LLU),_1db2d9c36_Range16(3169LLU,3200LLU,31LLU),_1db2d9c36_Range16(3205LLU,3212LLU,1LLU),_1db2d9c36_Range16(3214LLU,3216LLU,1LLU),_1db2d9c36_Range16(3218LLU,3240LLU,1LLU),_1db2d9c36_Range16(3242LLU,3251LLU,1LLU),_1db2d9c36_Range16(3253LLU,3257LLU,1LLU),_1db2d9c36_Range16(3261LLU,3293LLU,32LLU),_1db2d9c36_Range16(3294LLU,3296LLU,2LLU),_1db2d9c36_Range16(3297LLU,3313LLU,16LLU),_1db2d9c36_Range16(3314LLU,3332LLU,18LLU),_1db2d9c36_Range16(3333LLU,3340LLU,1LLU),_1db2d9c36_Range16(3342LLU,3344LLU,1LLU),_1db2d9c36_Range16(3346LLU,3386LLU,1LLU),_1db2d9c36_Range16(3389LLU,3406LLU,17LLU),_1db2d9c36_Range16(3412LLU,3414LLU,1LLU),_1db2d9c36_Range16(3423LLU,3425LLU,1LLU),_1db2d9c36_Range16(3450LLU,3455LLU,1LLU),_1db2d9c36_Range16(3461LLU,3478LLU,1LLU),_1db2d9c36_Range16(3482LLU,3505LLU,1LLU),_1db2d9c36_Range16(3507LLU,3515LLU,1LLU),_1db2d9c36_Range16(3517LLU,3520LLU,3LLU),_1db2d9c36_Range16(3521LLU,3526LLU,1LLU),_1db2d9c36_Range16(3585LLU,3632LLU,1LLU),_1db2d9c36_Range16(3634LLU,3635LLU,1LLU),_1db2d9c36_Range16(3648LLU,3654LLU,1LLU),_1db2d9c36_Range16(3713LLU,3714LLU,1LLU),_1db2d9c36_Range16(3716LLU,3718LLU,2LLU),_1db2d9c36_Range16(3719LLU,3722LLU,1LLU),_1db2d9c36_Range16(3724LLU,3747LLU,1LLU),_1db2d9c36_Range16(3749LLU,3751LLU,2LLU),_1db2d9c36_Range16(3752LLU,3760LLU,1LLU),_1db2d9c36_Range16(3762LLU,3763LLU,1LLU),_1db2d9c36_Range16(3773LLU,3776LLU,3LLU),_1db2d9c36_Range16(3777LLU,3780LLU,1LLU),_1db2d9c36_Range16(3782LLU,3804LLU,22LLU),_1db2d9c36_Range16(3805LLU,3807LLU,1LLU),_1db2d9c36_Range16(3840LLU,3904LLU,64LLU),_1db2d9c36_Range16(3905LLU,3911LLU,1LLU),_1db2d9c36_Range16(3913LLU,3948LLU,1LLU),_1db2d9c36_Range16(3976LLU,3980LLU,1LLU),_1db2d9c36_Range16(4096LLU,4138LLU,1LLU),_1db2d9c36_Range16(4159LLU,4176LLU,17LLU),_1db2d9c36_Range16(4177LLU,4181LLU,1LLU),_1db2d9c36_Range16(4186LLU,4189LLU,1LLU),_1db2d9c36_Range16(4193LLU,4197LLU,4LLU),_1db2d9c36_Range16(4198LLU,4206LLU,8LLU),_1db2d9c36_Range16(4207LLU,4208LLU,1LLU),_1db2d9c36_Range16(4213LLU,4225LLU,1LLU),_1db2d9c36_Range16(4238LLU,4256LLU,18LLU),_1db2d9c36_Range16(4257LLU,4293LLU,1LLU),_1db2d9c36_Range16(4295LLU,4301LLU,6LLU),_1db2d9c36_Range16(4304LLU,4346LLU,1LLU),_1db2d9c36_Range16(4348LLU,4680LLU,1LLU),_1db2d9c36_Range16(4682LLU,4685LLU,1LLU),_1db2d9c36_Range16(4688LLU,4694LLU,1LLU),_1db2d9c36_Range16(4696LLU,4698LLU,2LLU),_1db2d9c36_Range16(4699LLU,4701LLU,1LLU),_1db2d9c36_Range16(4704LLU,4744LLU,1LLU),_1db2d9c36_Range16(4746LLU,4749LLU,1LLU),_1db2d9c36_Range16(4752LLU,4784LLU,1LLU),_1db2d9c36_Range16(4786LLU,4789LLU,1LLU),_1db2d9c36_Range16(4792LLU,4798LLU,1LLU),_1db2d9c36_Range16(4800LLU,4802LLU,2LLU),_1db2d9c36_Range16(4803LLU,4805LLU,1LLU),_1db2d9c36_Range16(4808LLU,4822LLU,1LLU),_1db2d9c36_Range16(4824LLU,4880LLU,1LLU),_1db2d9c36_Range16(4882LLU,4885LLU,1LLU),_1db2d9c36_Range16(4888LLU,4954LLU,1LLU),_1db2d9c36_Range16(4992LLU,5007LLU,1LLU),_1db2d9c36_Range16(5024LLU,5109LLU,1LLU),_1db2d9c36_Range16(5112LLU,5117LLU,1LLU),_1db2d9c36_Range16(5121LLU,5740LLU,1LLU),_1db2d9c36_Range16(5743LLU,5759LLU,1LLU),_1db2d9c36_Range16(5761LLU,5786LLU,1LLU),_1db2d9c36_Range16(5792LLU,5866LLU,1LLU),_1db2d9c36_Range16(5873LLU,5880LLU,1LLU),_1db2d9c36_Range16(5888LLU,5905LLU,1LLU),_1db2d9c36_Range16(5919LLU,5937LLU,1LLU),_1db2d9c36_Range16(5952LLU,5969LLU,1LLU),_1db2d9c36_Range16(5984LLU,5996LLU,1LLU),_1db2d9c36_Range16(5998LLU,6000LLU,1LLU),_1db2d9c36_Range16(6016LLU,6067LLU,1LLU),_1db2d9c36_Range16(6103LLU,6108LLU,5LLU),_1db2d9c36_Range16(6176LLU,6264LLU,1LLU),_1db2d9c36_Range16(6272LLU,6276LLU,1LLU),_1db2d9c36_Range16(6279LLU,6312LLU,1LLU),_1db2d9c36_Range16(6314LLU,6320LLU,6LLU),_1db2d9c36_Range16(6321LLU,6389LLU,1LLU),_1db2d9c36_Range16(6400LLU,6430LLU,1LLU),_1db2d9c36_Range16(6480LLU,6509LLU,1LLU),_1db2d9c36_Range16(6512LLU,6516LLU,1LLU),_1db2d9c36_Range16(6528LLU,6571LLU,1LLU),_1db2d9c36_Range16(6576LLU,6601LLU,1LLU),_1db2d9c36_Range16(6656LLU,6678LLU,1LLU),_1db2d9c36_Range16(6688LLU,6740LLU,1LLU),_1db2d9c36_Range16(6823LLU,6917LLU,94LLU),_1db2d9c36_Range16(6918LLU,6963LLU,1LLU),_1db2d9c36_Range16(6981LLU,6988LLU,1LLU),_1db2d9c36_Range16(7043LLU,7072LLU,1LLU),_1db2d9c36_Range16(7086LLU,7087LLU,1LLU),_1db2d9c36_Range16(7098LLU,7141LLU,1LLU),_1db2d9c36_Range16(7168LLU,7203LLU,1LLU),_1db2d9c36_Range16(7245LLU,7247LLU,1LLU),_1db2d9c36_Range16(7258LLU,7293LLU,1LLU),_1db2d9c36_Range16(7296LLU,7304LLU,1LLU),_1db2d9c36_Range16(7312LLU,7354LLU,1LLU),_1db2d9c36_Range16(7357LLU,7359LLU,1LLU),_1db2d9c36_Range16(7401LLU,7404LLU,1LLU),_1db2d9c36_Range16(7406LLU,7411LLU,1LLU),_1db2d9c36_Range16(7413LLU,7414LLU,1LLU),_1db2d9c36_Range16(7418LLU,7424LLU,6LLU),_1db2d9c36_Range16(7425LLU,7615LLU,1LLU),_1db2d9c36_Range16(7680LLU,7957LLU,1LLU),_1db2d9c36_Range16(7960LLU,7965LLU,1LLU),_1db2d9c36_Range16(7968LLU,8005LLU,1LLU),_1db2d9c36_Range16(8008LLU,8013LLU,1LLU),_1db2d9c36_Range16(8016LLU,8023LLU,1LLU),_1db2d9c36_Range16(8025LLU,8031LLU,2LLU),_1db2d9c36_Range16(8032LLU,8061LLU,1LLU),_1db2d9c36_Range16(8064LLU,8116LLU,1LLU),_1db2d9c36_Range16(8118LLU,8124LLU,1LLU),_1db2d9c36_Range16(8126LLU,8130LLU,4LLU),_1db2d9c36_Range16(8131LLU,8132LLU,1LLU),_1db2d9c36_Range16(8134LLU,8140LLU,1LLU),_1db2d9c36_Range16(8144LLU,8147LLU,1LLU),_1db2d9c36_Range16(8150LLU,8155LLU,1LLU),_1db2d9c36_Range16(8160LLU,8172LLU,1LLU),_1db2d9c36_Range16(8178LLU,8180LLU,1LLU),_1db2d9c36_Range16(8182LLU,8188LLU,1LLU),_1db2d9c36_Range16(8305LLU,8319LLU,14LLU),_1db2d9c36_Range16(8336LLU,8348LLU,1LLU),_1db2d9c36_Range16(8450LLU,8455LLU,5LLU),_1db2d9c36_Range16(8458LLU,8467LLU,1LLU),_1db2d9c36_Range16(8469LLU,8473LLU,4LLU),_1db2d9c36_Range16(8474LLU,8477LLU,1LLU),_1db2d9c36_Range16(8484LLU,8490LLU,2LLU),_1db2d9c36_Range16(8491LLU,8493LLU,1LLU),_1db2d9c36_Range16(8495LLU,8505LLU,1LLU),_1db2d9c36_Range16(8508LLU,8511LLU,1LLU),_1db2d9c36_Range16(8517LLU,8521LLU,1LLU),_1db2d9c36_Range16(8526LLU,8579LLU,53LLU),_1db2d9c36_Range16(8580LLU,11264LLU,2684LLU),_1db2d9c36_Range16(11265LLU,11492LLU,1LLU),_1db2d9c36_Range16(11499LLU,11502LLU,1LLU),_1db2d9c36_Range16(11506LLU,11507LLU,1LLU),_1db2d9c36_Range16(11520LLU,11557LLU,1LLU),_1db2d9c36_Range16(11559LLU,11565LLU,6LLU),_1db2d9c36_Range16(11568LLU,11623LLU,1LLU),_1db2d9c36_Range16(11631LLU,11648LLU,17LLU),_1db2d9c36_Range16(11649LLU,11670LLU,1LLU),_1db2d9c36_Range16(11680LLU,11686LLU,1LLU),_1db2d9c36_Range16(11688LLU,11694LLU,1LLU),_1db2d9c36_Range16(11696LLU,11702LLU,1LLU),_1db2d9c36_Range16(11704LLU,11710LLU,1LLU),_1db2d9c36_Range16(11712LLU,11718LLU,1LLU),_1db2d9c36_Range16(11720LLU,11726LLU,1LLU),_1db2d9c36_Range16(11728LLU,11734LLU,1LLU),_1db2d9c36_Range16(11736LLU,11742LLU,1LLU),_1db2d9c36_Range16(11823LLU,12293LLU,470LLU),_1db2d9c36_Range16(12294LLU,12337LLU,43LLU),_1db2d9c36_Range16(12338LLU,12341LLU,1LLU),_1db2d9c36_Range16(12347LLU,12348LLU,1LLU),_1db2d9c36_Range16(12353LLU,12438LLU,1LLU),_1db2d9c36_Range16(12445LLU,12447LLU,1LLU),_1db2d9c36_Range16(12449LLU,12538LLU,1LLU),_1db2d9c36_Range16(12540LLU,12543LLU,1LLU),_1db2d9c36_Range16(12549LLU,12591LLU,1LLU),_1db2d9c36_Range16(12593LLU,12686LLU,1LLU),_1db2d9c36_Range16(12704LLU,12735LLU,1LLU),_1db2d9c36_Range16(12784LLU,12799LLU,1LLU),_1db2d9c36_Range16(13312LLU,19903LLU,1LLU),_1db2d9c36_Range16(19968LLU,42124LLU,1LLU),_1db2d9c36_Range16(42192LLU,42237LLU,1LLU),_1db2d9c36_Range16(42240LLU,42508LLU,1LLU),_1db2d9c36_Range16(42512LLU,42527LLU,1LLU),_1db2d9c36_Range16(42538LLU,42539LLU,1LLU),_1db2d9c36_Range16(42560LLU,42606LLU,1LLU),_1db2d9c36_Range16(42623LLU,42653LLU,1LLU),_1db2d9c36_Range16(42656LLU,42725LLU,1LLU),_1db2d9c36_Range16(42775LLU,42783LLU,1LLU),_1db2d9c36_Range16(42786LLU,42888LLU,1LLU),_1db2d9c36_Range16(42891LLU,42954LLU,1LLU),_1db2d9c36_Range16(42960LLU,42961LLU,1LLU),_1db2d9c36_Range16(42963LLU,42965LLU,2LLU),_1db2d9c36_Range16(42966LLU,42969LLU,1LLU),_1db2d9c36_Range16(42994LLU,43009LLU,1LLU),_1db2d9c36_Range16(43011LLU,43013LLU,1LLU),_1db2d9c36_Range16(43015LLU,43018LLU,1LLU),_1db2d9c36_Range16(43020LLU,43042LLU,1LLU),_1db2d9c36_Range16(43072LLU,43123LLU,1LLU),_1db2d9c36_Range16(43138LLU,43187LLU,1LLU),_1db2d9c36_Range16(43250LLU,43255LLU,1LLU),_1db2d9c36_Range16(43259LLU,43261LLU,2LLU),_1db2d9c36_Range16(43262LLU,43274LLU,12LLU),_1db2d9c36_Range16(43275LLU,43301LLU,1LLU),_1db2d9c36_Range16(43312LLU,43334LLU,1LLU),_1db2d9c36_Range16(43360LLU,43388LLU,1LLU),_1db2d9c36_Range16(43396LLU,43442LLU,1LLU),_1db2d9c36_Range16(43471LLU,43488LLU,17LLU),_1db2d9c36_Range16(43489LLU,43492LLU,1LLU),_1db2d9c36_Range16(43494LLU,43503LLU,1LLU),_1db2d9c36_Range16(43514LLU,43518LLU,1LLU),_1db2d9c36_Range16(43520LLU,43560LLU,1LLU),_1db2d9c36_Range16(43584LLU,43586LLU,1LLU),_1db2d9c36_Range16(43588LLU,43595LLU,1LLU),_1db2d9c36_Range16(43616LLU,43638LLU,1LLU),_1db2d9c36_Range16(43642LLU,43646LLU,4LLU),_1db2d9c36_Range16(43647LLU,43695LLU,1LLU),_1db2d9c36_Range16(43697LLU,43701LLU,4LLU),_1db2d9c36_Range16(43702LLU,43705LLU,3LLU),_1db2d9c36_Range16(43706LLU,43709LLU,1LLU),_1db2d9c36_Range16(43712LLU,43714LLU,2LLU),_1db2d9c36_Range16(43739LLU,43741LLU,1LLU),_1db2d9c36_Range16(43744LLU,43754LLU,1LLU),_1db2d9c36_Range16(43762LLU,43764LLU,1LLU),_1db2d9c36_Range16(43777LLU,43782LLU,1LLU),_1db2d9c36_Range16(43785LLU,43790LLU,1LLU),_1db2d9c36_Range16(43793LLU,43798LLU,1LLU),_1db2d9c36_Range16(43808LLU,43814LLU,1LLU),_1db2d9c36_Range16(43816LLU,43822LLU,1LLU),_1db2d9c36_Range16(43824LLU,43866LLU,1LLU),_1db2d9c36_Range16(43868LLU,43881LLU,1LLU),_1db2d9c36_Range16(43888LLU,44002LLU,1LLU),_1db2d9c36_Range16(44032LLU,55203LLU,1LLU),_1db2d9c36_Range16(55216LLU,55238LLU,1LLU),_1db2d9c36_Range16(55243LLU,55291LLU,1LLU),_1db2d9c36_Range16(63744LLU,64109LLU,1LLU),_1db2d9c36_Range16(64112LLU,64217LLU,1LLU),_1db2d9c36_Range16(64256LLU,64262LLU,1LLU),_1db2d9c36_Range16(64275LLU,64279LLU,1LLU),_1db2d9c36_Range16(64285LLU,64287LLU,2LLU),_1db2d9c36_Range16(64288LLU,64296LLU,1LLU),_1db2d9c36_Range16(64298LLU,64310LLU,1LLU),_1db2d9c36_Range16(64312LLU,64316LLU,1LLU),_1db2d9c36_Range16(64318LLU,64320LLU,2LLU),_1db2d9c36_Range16(64321LLU,64323LLU,2LLU),_1db2d9c36_Range16(64324LLU,64326LLU,2LLU),_1db2d9c36_Range16(64327LLU,64433LLU,1LLU),_1db2d9c36_Range16(64467LLU,64829LLU,1LLU),_1db2d9c36_Range16(64848LLU,64911LLU,1LLU),_1db2d9c36_Range16(64914LLU,64967LLU,1LLU),_1db2d9c36_Range16(65008LLU,65019LLU,1LLU),_1db2d9c36_Range16(65136LLU,65140LLU,1LLU),_1db2d9c36_Range16(65142LLU,65276LLU,1LLU),_1db2d9c36_Range16(65313LLU,65338LLU,1LLU),_1db2d9c36_Range16(65345LLU,65370LLU,1LLU),_1db2d9c36_Range16(65382LLU,65470LLU,1LLU),_1db2d9c36_Range16(65474LLU,65479LLU,1LLU),_1db2d9c36_Range16(65482LLU,65487LLU,1LLU),_1db2d9c36_Range16(65490LLU,65495LLU,1LLU),_1db2d9c36_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1db2d9c36_Range32>({_1db2d9c36_Range32(65536LLU,65547LLU,1LLU),_1db2d9c36_Range32(65549LLU,65574LLU,1LLU),_1db2d9c36_Range32(65576LLU,65594LLU,1LLU),_1db2d9c36_Range32(65596LLU,65597LLU,1LLU),_1db2d9c36_Range32(65599LLU,65613LLU,1LLU),_1db2d9c36_Range32(65616LLU,65629LLU,1LLU),_1db2d9c36_Range32(65664LLU,65786LLU,1LLU),_1db2d9c36_Range32(66176LLU,66204LLU,1LLU),_1db2d9c36_Range32(66208LLU,66256LLU,1LLU),_1db2d9c36_Range32(66304LLU,66335LLU,1LLU),_1db2d9c36_Range32(66349LLU,66368LLU,1LLU),_1db2d9c36_Range32(66370LLU,66377LLU,1LLU),_1db2d9c36_Range32(66384LLU,66421LLU,1LLU),_1db2d9c36_Range32(66432LLU,66461LLU,1LLU),_1db2d9c36_Range32(66464LLU,66499LLU,1LLU),_1db2d9c36_Range32(66504LLU,66511LLU,1LLU),_1db2d9c36_Range32(66560LLU,66717LLU,1LLU),_1db2d9c36_Range32(66736LLU,66771LLU,1LLU),_1db2d9c36_Range32(66776LLU,66811LLU,1LLU),_1db2d9c36_Range32(66816LLU,66855LLU,1LLU),_1db2d9c36_Range32(66864LLU,66915LLU,1LLU),_1db2d9c36_Range32(66928LLU,66938LLU,1LLU),_1db2d9c36_Range32(66940LLU,66954LLU,1LLU),_1db2d9c36_Range32(66956LLU,66962LLU,1LLU),_1db2d9c36_Range32(66964LLU,66965LLU,1LLU),_1db2d9c36_Range32(66967LLU,66977LLU,1LLU),_1db2d9c36_Range32(66979LLU,66993LLU,1LLU),_1db2d9c36_Range32(66995LLU,67001LLU,1LLU),_1db2d9c36_Range32(67003LLU,67004LLU,1LLU),_1db2d9c36_Range32(67072LLU,67382LLU,1LLU),_1db2d9c36_Range32(67392LLU,67413LLU,1LLU),_1db2d9c36_Range32(67424LLU,67431LLU,1LLU),_1db2d9c36_Range32(67456LLU,67461LLU,1LLU),_1db2d9c36_Range32(67463LLU,67504LLU,1LLU),_1db2d9c36_Range32(67506LLU,67514LLU,1LLU),_1db2d9c36_Range32(67584LLU,67589LLU,1LLU),_1db2d9c36_Range32(67592LLU,67594LLU,2LLU),_1db2d9c36_Range32(67595LLU,67637LLU,1LLU),_1db2d9c36_Range32(67639LLU,67640LLU,1LLU),_1db2d9c36_Range32(67644LLU,67647LLU,3LLU),_1db2d9c36_Range32(67648LLU,67669LLU,1LLU),_1db2d9c36_Range32(67680LLU,67702LLU,1LLU),_1db2d9c36_Range32(67712LLU,67742LLU,1LLU),_1db2d9c36_Range32(67808LLU,67826LLU,1LLU),_1db2d9c36_Range32(67828LLU,67829LLU,1LLU),_1db2d9c36_Range32(67840LLU,67861LLU,1LLU),_1db2d9c36_Range32(67872LLU,67897LLU,1LLU),_1db2d9c36_Range32(67968LLU,68023LLU,1LLU),_1db2d9c36_Range32(68030LLU,68031LLU,1LLU),_1db2d9c36_Range32(68096LLU,68112LLU,16LLU),_1db2d9c36_Range32(68113LLU,68115LLU,1LLU),_1db2d9c36_Range32(68117LLU,68119LLU,1LLU),_1db2d9c36_Range32(68121LLU,68149LLU,1LLU),_1db2d9c36_Range32(68192LLU,68220LLU,1LLU),_1db2d9c36_Range32(68224LLU,68252LLU,1LLU),_1db2d9c36_Range32(68288LLU,68295LLU,1LLU),_1db2d9c36_Range32(68297LLU,68324LLU,1LLU),_1db2d9c36_Range32(68352LLU,68405LLU,1LLU),_1db2d9c36_Range32(68416LLU,68437LLU,1LLU),_1db2d9c36_Range32(68448LLU,68466LLU,1LLU),_1db2d9c36_Range32(68480LLU,68497LLU,1LLU),_1db2d9c36_Range32(68608LLU,68680LLU,1LLU),_1db2d9c36_Range32(68736LLU,68786LLU,1LLU),_1db2d9c36_Range32(68800LLU,68850LLU,1LLU),_1db2d9c36_Range32(68864LLU,68899LLU,1LLU),_1db2d9c36_Range32(69248LLU,69289LLU,1LLU),_1db2d9c36_Range32(69296LLU,69297LLU,1LLU),_1db2d9c36_Range32(69376LLU,69404LLU,1LLU),_1db2d9c36_Range32(69415LLU,69424LLU,9LLU),_1db2d9c36_Range32(69425LLU,69445LLU,1LLU),_1db2d9c36_Range32(69488LLU,69505LLU,1LLU),_1db2d9c36_Range32(69552LLU,69572LLU,1LLU),_1db2d9c36_Range32(69600LLU,69622LLU,1LLU),_1db2d9c36_Range32(69635LLU,69687LLU,1LLU),_1db2d9c36_Range32(69745LLU,69746LLU,1LLU),_1db2d9c36_Range32(69749LLU,69763LLU,14LLU),_1db2d9c36_Range32(69764LLU,69807LLU,1LLU),_1db2d9c36_Range32(69840LLU,69864LLU,1LLU),_1db2d9c36_Range32(69891LLU,69926LLU,1LLU),_1db2d9c36_Range32(69956LLU,69959LLU,3LLU),_1db2d9c36_Range32(69968LLU,70002LLU,1LLU),_1db2d9c36_Range32(70006LLU,70019LLU,13LLU),_1db2d9c36_Range32(70020LLU,70066LLU,1LLU),_1db2d9c36_Range32(70081LLU,70084LLU,1LLU),_1db2d9c36_Range32(70106LLU,70108LLU,2LLU),_1db2d9c36_Range32(70144LLU,70161LLU,1LLU),_1db2d9c36_Range32(70163LLU,70187LLU,1LLU),_1db2d9c36_Range32(70207LLU,70208LLU,1LLU),_1db2d9c36_Range32(70272LLU,70278LLU,1LLU),_1db2d9c36_Range32(70280LLU,70282LLU,2LLU),_1db2d9c36_Range32(70283LLU,70285LLU,1LLU),_1db2d9c36_Range32(70287LLU,70301LLU,1LLU),_1db2d9c36_Range32(70303LLU,70312LLU,1LLU),_1db2d9c36_Range32(70320LLU,70366LLU,1LLU),_1db2d9c36_Range32(70405LLU,70412LLU,1LLU),_1db2d9c36_Range32(70415LLU,70416LLU,1LLU),_1db2d9c36_Range32(70419LLU,70440LLU,1LLU),_1db2d9c36_Range32(70442LLU,70448LLU,1LLU),_1db2d9c36_Range32(70450LLU,70451LLU,1LLU),_1db2d9c36_Range32(70453LLU,70457LLU,1LLU),_1db2d9c36_Range32(70461LLU,70480LLU,19LLU),_1db2d9c36_Range32(70493LLU,70497LLU,1LLU),_1db2d9c36_Range32(70656LLU,70708LLU,1LLU),_1db2d9c36_Range32(70727LLU,70730LLU,1LLU),_1db2d9c36_Range32(70751LLU,70753LLU,1LLU),_1db2d9c36_Range32(70784LLU,70831LLU,1LLU),_1db2d9c36_Range32(70852LLU,70853LLU,1LLU),_1db2d9c36_Range32(70855LLU,71040LLU,185LLU),_1db2d9c36_Range32(71041LLU,71086LLU,1LLU),_1db2d9c36_Range32(71128LLU,71131LLU,1LLU),_1db2d9c36_Range32(71168LLU,71215LLU,1LLU),_1db2d9c36_Range32(71236LLU,71296LLU,60LLU),_1db2d9c36_Range32(71297LLU,71338LLU,1LLU),_1db2d9c36_Range32(71352LLU,71424LLU,72LLU),_1db2d9c36_Range32(71425LLU,71450LLU,1LLU),_1db2d9c36_Range32(71488LLU,71494LLU,1LLU),_1db2d9c36_Range32(71680LLU,71723LLU,1LLU),_1db2d9c36_Range32(71840LLU,71903LLU,1LLU),_1db2d9c36_Range32(71935LLU,71942LLU,1LLU),_1db2d9c36_Range32(71945LLU,71948LLU,3LLU),_1db2d9c36_Range32(71949LLU,71955LLU,1LLU),_1db2d9c36_Range32(71957LLU,71958LLU,1LLU),_1db2d9c36_Range32(71960LLU,71983LLU,1LLU),_1db2d9c36_Range32(71999LLU,72001LLU,2LLU),_1db2d9c36_Range32(72096LLU,72103LLU,1LLU),_1db2d9c36_Range32(72106LLU,72144LLU,1LLU),_1db2d9c36_Range32(72161LLU,72163LLU,2LLU),_1db2d9c36_Range32(72192LLU,72203LLU,11LLU),_1db2d9c36_Range32(72204LLU,72242LLU,1LLU),_1db2d9c36_Range32(72250LLU,72272LLU,22LLU),_1db2d9c36_Range32(72284LLU,72329LLU,1LLU),_1db2d9c36_Range32(72349LLU,72368LLU,19LLU),_1db2d9c36_Range32(72369LLU,72440LLU,1LLU),_1db2d9c36_Range32(72704LLU,72712LLU,1LLU),_1db2d9c36_Range32(72714LLU,72750LLU,1LLU),_1db2d9c36_Range32(72768LLU,72818LLU,50LLU),_1db2d9c36_Range32(72819LLU,72847LLU,1LLU),_1db2d9c36_Range32(72960LLU,72966LLU,1LLU),_1db2d9c36_Range32(72968LLU,72969LLU,1LLU),_1db2d9c36_Range32(72971LLU,73008LLU,1LLU),_1db2d9c36_Range32(73030LLU,73056LLU,26LLU),_1db2d9c36_Range32(73057LLU,73061LLU,1LLU),_1db2d9c36_Range32(73063LLU,73064LLU,1LLU),_1db2d9c36_Range32(73066LLU,73097LLU,1LLU),_1db2d9c36_Range32(73112LLU,73440LLU,328LLU),_1db2d9c36_Range32(73441LLU,73458LLU,1LLU),_1db2d9c36_Range32(73474LLU,73476LLU,2LLU),_1db2d9c36_Range32(73477LLU,73488LLU,1LLU),_1db2d9c36_Range32(73490LLU,73523LLU,1LLU),_1db2d9c36_Range32(73648LLU,73728LLU,80LLU),_1db2d9c36_Range32(73729LLU,74649LLU,1LLU),_1db2d9c36_Range32(74880LLU,75075LLU,1LLU),_1db2d9c36_Range32(77712LLU,77808LLU,1LLU),_1db2d9c36_Range32(77824LLU,78895LLU,1LLU),_1db2d9c36_Range32(78913LLU,78918LLU,1LLU),_1db2d9c36_Range32(82944LLU,83526LLU,1LLU),_1db2d9c36_Range32(92160LLU,92728LLU,1LLU),_1db2d9c36_Range32(92736LLU,92766LLU,1LLU),_1db2d9c36_Range32(92784LLU,92862LLU,1LLU),_1db2d9c36_Range32(92880LLU,92909LLU,1LLU),_1db2d9c36_Range32(92928LLU,92975LLU,1LLU),_1db2d9c36_Range32(92992LLU,92995LLU,1LLU),_1db2d9c36_Range32(93027LLU,93047LLU,1LLU),_1db2d9c36_Range32(93053LLU,93071LLU,1LLU),_1db2d9c36_Range32(93760LLU,93823LLU,1LLU),_1db2d9c36_Range32(93952LLU,94026LLU,1LLU),_1db2d9c36_Range32(94032LLU,94099LLU,67LLU),_1db2d9c36_Range32(94100LLU,94111LLU,1LLU),_1db2d9c36_Range32(94176LLU,94177LLU,1LLU),_1db2d9c36_Range32(94179LLU,94208LLU,29LLU),_1db2d9c36_Range32(94209LLU,100343LLU,1LLU),_1db2d9c36_Range32(100352LLU,101589LLU,1LLU),_1db2d9c36_Range32(101632LLU,101640LLU,1LLU),_1db2d9c36_Range32(110576LLU,110579LLU,1LLU),_1db2d9c36_Range32(110581LLU,110587LLU,1LLU),_1db2d9c36_Range32(110589LLU,110590LLU,1LLU),_1db2d9c36_Range32(110592LLU,110882LLU,1LLU),_1db2d9c36_Range32(110898LLU,110928LLU,30LLU),_1db2d9c36_Range32(110929LLU,110930LLU,1LLU),_1db2d9c36_Range32(110933LLU,110948LLU,15LLU),_1db2d9c36_Range32(110949LLU,110951LLU,1LLU),_1db2d9c36_Range32(110960LLU,111355LLU,1LLU),_1db2d9c36_Range32(113664LLU,113770LLU,1LLU),_1db2d9c36_Range32(113776LLU,113788LLU,1LLU),_1db2d9c36_Range32(113792LLU,113800LLU,1LLU),_1db2d9c36_Range32(113808LLU,113817LLU,1LLU),_1db2d9c36_Range32(119808LLU,119892LLU,1LLU),_1db2d9c36_Range32(119894LLU,119964LLU,1LLU),_1db2d9c36_Range32(119966LLU,119967LLU,1LLU),_1db2d9c36_Range32(119970LLU,119973LLU,3LLU),_1db2d9c36_Range32(119974LLU,119977LLU,3LLU),_1db2d9c36_Range32(119978LLU,119980LLU,1LLU),_1db2d9c36_Range32(119982LLU,119993LLU,1LLU),_1db2d9c36_Range32(119995LLU,119997LLU,2LLU),_1db2d9c36_Range32(119998LLU,120003LLU,1LLU),_1db2d9c36_Range32(120005LLU,120069LLU,1LLU),_1db2d9c36_Range32(120071LLU,120074LLU,1LLU),_1db2d9c36_Range32(120077LLU,120084LLU,1LLU),_1db2d9c36_Range32(120086LLU,120092LLU,1LLU),_1db2d9c36_Range32(120094LLU,120121LLU,1LLU),_1db2d9c36_Range32(120123LLU,120126LLU,1LLU),_1db2d9c36_Range32(120128LLU,120132LLU,1LLU),_1db2d9c36_Range32(120134LLU,120138LLU,4LLU),_1db2d9c36_Range32(120139LLU,120144LLU,1LLU),_1db2d9c36_Range32(120146LLU,120485LLU,1LLU),_1db2d9c36_Range32(120488LLU,120512LLU,1LLU),_1db2d9c36_Range32(120514LLU,120538LLU,1LLU),_1db2d9c36_Range32(120540LLU,120570LLU,1LLU),_1db2d9c36_Range32(120572LLU,120596LLU,1LLU),_1db2d9c36_Range32(120598LLU,120628LLU,1LLU),_1db2d9c36_Range32(120630LLU,120654LLU,1LLU),_1db2d9c36_Range32(120656LLU,120686LLU,1LLU),_1db2d9c36_Range32(120688LLU,120712LLU,1LLU),_1db2d9c36_Range32(120714LLU,120744LLU,1LLU),_1db2d9c36_Range32(120746LLU,120770LLU,1LLU),_1db2d9c36_Range32(120772LLU,120779LLU,1LLU),_1db2d9c36_Range32(122624LLU,122654LLU,1LLU),_1db2d9c36_Range32(122661LLU,122666LLU,1LLU),_1db2d9c36_Range32(122928LLU,122989LLU,1LLU),_1db2d9c36_Range32(123136LLU,123180LLU,1LLU),_1db2d9c36_Range32(123191LLU,123197LLU,1LLU),_1db2d9c36_Range32(123214LLU,123536LLU,322LLU),_1db2d9c36_Range32(123537LLU,123565LLU,1LLU),_1db2d9c36_Range32(123584LLU,123627LLU,1LLU),_1db2d9c36_Range32(124112LLU,124139LLU,1LLU),_1db2d9c36_Range32(124896LLU,124902LLU,1LLU),_1db2d9c36_Range32(124904LLU,124907LLU,1LLU),_1db2d9c36_Range32(124909LLU,124910LLU,1LLU),_1db2d9c36_Range32(124912LLU,124926LLU,1LLU),_1db2d9c36_Range32(124928LLU,125124LLU,1LLU),_1db2d9c36_Range32(125184LLU,125251LLU,1LLU),_1db2d9c36_Range32(125259LLU,126464LLU,1205LLU),_1db2d9c36_Range32(126465LLU,126467LLU,1LLU),_1db2d9c36_Range32(126469LLU,126495LLU,1LLU),_1db2d9c36_Range32(126497LLU,126498LLU,1LLU),_1db2d9c36_Range32(126500LLU,126503LLU,3LLU),_1db2d9c36_Range32(126505LLU,126514LLU,1LLU),_1db2d9c36_Range32(126516LLU,126519LLU,1LLU),_1db2d9c36_Range32(126521LLU,126523LLU,2LLU),_1db2d9c36_Range32(126530LLU,126535LLU,5LLU),_1db2d9c36_Range32(126537LLU,126541LLU,2LLU),_1db2d9c36_Range32(126542LLU,126543LLU,1LLU),_1db2d9c36_Range32(126545LLU,126546LLU,1LLU),_1db2d9c36_Range32(126548LLU,126551LLU,3LLU),_1db2d9c36_Range32(126553LLU,126561LLU,2LLU),_1db2d9c36_Range32(126562LLU,126564LLU,2LLU),_1db2d9c36_Range32(126567LLU,126570LLU,1LLU),_1db2d9c36_Range32(126572LLU,126578LLU,1LLU),_1db2d9c36_Range32(126580LLU,126583LLU,1LLU),_1db2d9c36_Range32(126585LLU,126588LLU,1LLU),_1db2d9c36_Range32(126590LLU,126592LLU,2LLU),_1db2d9c36_Range32(126593LLU,126601LLU,1LLU),_1db2d9c36_Range32(126603LLU,126619LLU,1LLU),_1db2d9c36_Range32(126625LLU,126627LLU,1LLU),_1db2d9c36_Range32(126629LLU,126633LLU,1LLU),_1db2d9c36_Range32(126635LLU,126651LLU,1LLU),_1db2d9c36_Range32(131072LLU,173791LLU,1LLU),_1db2d9c36_Range32(173824LLU,177977LLU,1LLU),_1db2d9c36_Range32(177984LLU,178205LLU,1LLU),_1db2d9c36_Range32(178208LLU,183969LLU,1LLU),_1db2d9c36_Range32(183984LLU,191456LLU,1LLU),_1db2d9c36_Range32(194560LLU,195101LLU,1LLU),_1db2d9c36_Range32(196608LLU,201546LLU,1LLU),_1db2d9c36_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Array<jule::I32,5> _1da81133a_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1da81133a_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,12> _1da81133a_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1da81133a_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1da81133a_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1da7bd281_KindPair,47> _1da7bd281_KEYWORDS = jule::Array<_1da7bd281_KindPair,47>({_1da7bd281_KindPair(jule::Str("i8", 2),1LLU),_1da7bd281_KindPair(jule::Str("i16", 3),1LLU),_1da7bd281_KindPair(jule::Str("i32", 3),1LLU),_1da7bd281_KindPair(jule::Str("i64", 3),1LLU),_1da7bd281_KindPair(jule::Str("u8", 2),1LLU),_1da7bd281_KindPair(jule::Str("u16", 3),1LLU),_1da7bd281_KindPair(jule::Str("u32", 3),1LLU),_1da7bd281_KindPair(jule::Str("u64", 3),1LLU),_1da7bd281_KindPair(jule::Str("f32", 3),1LLU),_1da7bd281_KindPair(jule::Str("f64", 3),1LLU),_1da7bd281_KindPair(jule::Str("uint", 4),1LLU),_1da7bd281_KindPair(jule::Str("int", 3),1LLU),_1da7bd281_KindPair(jule::Str("uintptr", 7),1LLU),_1da7bd281_KindPair(jule::Str("bool", 4),1LLU),_1da7bd281_KindPair(jule::Str("str", 3),1LLU),_1da7bd281_KindPair(jule::Str("any", 3),1LLU),_1da7bd281_KindPair(jule::Str("true", 4),6LLU),_1da7bd281_KindPair(jule::Str("false", 5),6LLU),_1da7bd281_KindPair(jule::Str("nil", 3),6LLU),_1da7bd281_KindPair(jule::Str("const", 5),9LLU),_1da7bd281_KindPair(jule::Str("ret", 3),4LLU),_1da7bd281_KindPair(jule::Str("type", 4),10LLU),_1da7bd281_KindPair(jule::Str("for", 3),12LLU),_1da7bd281_KindPair(jule::Str("break", 5),13LLU),_1da7bd281_KindPair(jule::Str("continue", 8),14LLU),_1da7bd281_KindPair(jule::Str("in", 2),15LLU),_1da7bd281_KindPair(jule::Str("if", 2),16LLU),_1da7bd281_KindPair(jule::Str("else", 4),17LLU),_1da7bd281_KindPair(jule::Str("use", 3),19LLU),_1da7bd281_KindPair(jule::Str("pub", 3),21LLU),_1da7bd281_KindPair(jule::Str("goto", 4),22LLU),_1da7bd281_KindPair(jule::Str("enum", 4),24LLU),_1da7bd281_KindPair(jule::Str("struct", 6),25LLU),_1da7bd281_KindPair(jule::Str("co", 2),26LLU),_1da7bd281_KindPair(jule::Str("match", 5),27LLU),_1da7bd281_KindPair(jule::Str("self", 4),28LLU),_1da7bd281_KindPair(jule::Str("trait", 5),29LLU),_1da7bd281_KindPair(jule::Str("impl", 4),30LLU),_1da7bd281_KindPair(jule::Str("cpp", 3),31LLU),_1da7bd281_KindPair(jule::Str("fall", 4),32LLU),_1da7bd281_KindPair(jule::Str("fn", 2),33LLU),_1da7bd281_KindPair(jule::Str("let", 3),34LLU),_1da7bd281_KindPair(jule::Str("unsafe", 6),35LLU),_1da7bd281_KindPair(jule::Str("mut", 3),36LLU),_1da7bd281_KindPair(jule::Str("defer", 5),37LLU),_1da7bd281_KindPair(jule::Str("static", 6),38LLU),_1da7bd281_KindPair(jule::Str("error", 5),40LLU)});
static jule::Array<_1da7bd281_KindPair,39> _1da7bd281_BASIC_OPS = jule::Array<_1da7bd281_KindPair,39>({_1da7bd281_KindPair(jule::Str("::", 2),23LLU),_1da7bd281_KindPair(jule::Str(":", 1),11LLU),_1da7bd281_KindPair(jule::Str(";", 1),5LLU),_1da7bd281_KindPair(jule::Str(",", 1),8LLU),_1da7bd281_KindPair(jule::Str("...", 3),7LLU),_1da7bd281_KindPair(jule::Str(".", 1),20LLU),_1da7bd281_KindPair(jule::Str("+=", 2),7LLU),_1da7bd281_KindPair(jule::Str("-=", 2),7LLU),_1da7bd281_KindPair(jule::Str("*=", 2),7LLU),_1da7bd281_KindPair(jule::Str("/=", 2),7LLU),_1da7bd281_KindPair(jule::Str("%=", 2),7LLU),_1da7bd281_KindPair(jule::Str("<<=", 3),7LLU),_1da7bd281_KindPair(jule::Str(">>=", 3),7LLU),_1da7bd281_KindPair(jule::Str("^=", 2),7LLU),_1da7bd281_KindPair(jule::Str("&=", 2),7LLU),_1da7bd281_KindPair(jule::Str("|=", 2),7LLU),_1da7bd281_KindPair(jule::Str("==", 2),7LLU),_1da7bd281_KindPair(jule::Str("!=", 2),7LLU),_1da7bd281_KindPair(jule::Str(">=", 2),7LLU),_1da7bd281_KindPair(jule::Str("<=", 2),7LLU),_1da7bd281_KindPair(jule::Str("&&", 2),7LLU),_1da7bd281_KindPair(jule::Str("||", 2),7LLU),_1da7bd281_KindPair(jule::Str("<<", 2),7LLU),_1da7bd281_KindPair(jule::Str(">>", 2),7LLU),_1da7bd281_KindPair(jule::Str("++", 2),7LLU),_1da7bd281_KindPair(jule::Str("--", 2),7LLU),_1da7bd281_KindPair(jule::Str("+", 1),7LLU),_1da7bd281_KindPair(jule::Str("-", 1),7LLU),_1da7bd281_KindPair(jule::Str("*", 1),7LLU),_1da7bd281_KindPair(jule::Str("/", 1),7LLU),_1da7bd281_KindPair(jule::Str("%", 1),7LLU),_1da7bd281_KindPair(jule::Str("&", 1),7LLU),_1da7bd281_KindPair(jule::Str("|", 1),7LLU),_1da7bd281_KindPair(jule::Str("^", 1),7LLU),_1da7bd281_KindPair(jule::Str("!", 1),7LLU),_1da7bd281_KindPair(jule::Str("<", 1),7LLU),_1da7bd281_KindPair(jule::Str(">", 1),7LLU),_1da7bd281_KindPair(jule::Str("=", 1),7LLU),_1da7bd281_KindPair(jule::Str("#", 1),39LLU)});
static jule::Ptr<_1a8ad0a37_TypeAlias> _1a8c0ca10_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1da81133a_Token(),jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_1a8ad0a37_TypeAlias> _1a8c0ca10_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1da81133a_Token(),jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Slice<jule::Str> _1da78aaab_FLAGS = nullptr;
static jule::Slice<jule::Any> _1d9d8a321_deads = nullptr;
static jule::Slice<jule::Any> _1d9d8a321_checking = nullptr;
static jule::Any _1d9d8a321_current = jule::Any(nullptr);
static jule::Any _1d9d8a321_main_current = jule::Any(nullptr);
static jule::Array<jule::U8,12> _1a93d0c71_MDAYS = jule::Array<jule::U8,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
static jule::Slice<jule::U8> _1a92bc4dc_INDENT = nullptr;
static jule::Ptr<_1c196b2a0_Trait> _1a8c0ca10_BUILTIN_TRAIT_DISPOSE = jule::new_struct_ptr<_1c196b2a0_Trait>(new( std::nothrow ) _1c196b2a0_Trait(_1da81133a_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1c17e2687_Fn>>({jule::new_struct_ptr<_1c17e2687_Fn>(new( std::nothrow ) _1c17e2687_Fn(jule::Ptr<_1c1b18a24_Sema>(),_1da81133a_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Str(),jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),jule::Ptr<_1c17e2687_RetType>(),jule::Slice<jule::Ptr<_1c17e2687_Param>>({jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_1db4a7e59_Struct>(),jule::Slice<jule::Ptr<_1c17e2687_FnIns>>({jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool()))})))}),jule::Slice<jule::Ptr<_1db4a7e59_Struct>>()));
static jule::Str _2037a1d84_ARCH = jule::Str("arm64", 5);
static jule::Ptr<_1db2d9c36_RangeTable> _1da92365b_LETTER = _1da92365b__L;
static jule::Array<_1da91c952_accept_range,16> _1da91c952_ACCEPT_RANGES = jule::Array<_1da91c952_accept_range,16>({_1da91c952_accept_range(128LLU,191LLU),_1da91c952_accept_range(160LLU,191LLU),_1da91c952_accept_range(128LLU,159LLU),_1da91c952_accept_range(144LLU,191LLU),_1da91c952_accept_range(128LLU,143LLU)});
static jule::Array<jule::Array<jule::Str,2>,4> _20370da05_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _2037a1d84_OS = jule::Str("darwin", 6);
static jule::Array<jule::U8,256> _1da92365b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Array<jule::U8,256> _1da91c952_FIRST = jule::Array<jule::U8,256>({});

inline void _20370d928_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _20370d928_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_20370d928_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _20370d928_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _20370d928_Logger::_static_method_log_flat(_203741197_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _20370d928_Logger::_static_method_log_error(_203741197_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_20370d928_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1da106db7_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1da106db7_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _1da106db7_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20370da05_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20370da05_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20370da05_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_20370d928_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _20370d928_Logger::_static_method_log(_203741197_Log& _8020_l) {
	{
		auto &_match_expr{ _8020_l._field_kind };
		if (_match_expr == 0LLU) {
			_case_begin_4375150416:;
			{
				_20370d928_Logger::_static_method_log_flat(_8020_l);
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_4375150512:;
			{
				_20370d928_Logger::_static_method_log_error(_8020_l);
			}
		}
		_match_end_4375150320:;
	}
}



inline void _20370d928_Logger::_static_method_print_logs(jule::Slice<_203741197_Log>& _8827_logs) {
	{
		auto &expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_4375154416:;
		if (it != expr.end()) {
			_203741197_Log &_20370d928_l = *it;
			{
				_20370d928_Logger::_static_method_log(_20370d928_l);
			}
			_iter_next_4375154416:;
			++it;
			goto _iter_begin_4375154416;
		}
		_iter_end_4375154416:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1da106db7_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _20370d928_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20525e312_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



inline void _20525e312_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _20525e312_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _20525e312_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20379d743_Cmd> _20379d743_Cmd::_static_method_new(jule::Str _2923_file) {
	return jule::new_struct<_20379d743_Cmd>(new( std::nothrow ) _20379d743_Cmd(_2923_file,-1LL,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Int _20379d743_Cmd::_method_pid(void) {
	return (*this)._field__pid;
}



inline jule::Str _20379d743_Cmd::_method_file(void) {
	return (*this)._field__fle;
}



inline jule::VoidExceptional _20379d743_Cmd::_method_spawn(void) {
	if ((*this)._field__pid != -1LL) {
		return jule::VoidExceptional(jule::Str("command already spawned", 23));
	}
	(*this)._field__pid=static_cast<jule::Int>(fork());
	{
		auto &_match_expr{ (*this)._field__pid };
		if (_match_expr == -1LL) {
			_case_begin_4377737936:;
			{
				return jule::VoidExceptional(jule::Str("fork failed", 11));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_4377740080:;
			{
				jule::Int _3117_stat = ((((*this)._field_env == nullptr)) ? (__jule_execvp((*this)._field__fle,(*this)._field_args)) : (static_cast<jule::Int>(__jule_execve((*this)._field__fle,(*this)._field_args,(*this)._field_env))));
				if (_3117_stat == -1LL) {
					return jule::VoidExceptional(_20379c05a_get_last_process_error());
				}
				_2038538d6_exit(255LL);
			}
		}
		_match_end_4377739888:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _20379d743_Cmd::_method_kill(void) {
	if (kill((*this)._field__pid,1LL) != 0LL) {
		return jule::VoidExceptional(jule::Str("kill failed", 11));
	}
	(*this)._field__pid=-1LL; return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Int> _20379d743_Cmd::_method_wait(void) {
	if ((*this)._field__pid == -1LL) {
		return jule::Exceptional<jule::Int>(jule::Str("command is not spawned", 22));
	}
	jule::Int _6017_status = 0LL;
	if (waitpid((*this)._field__pid,((signed*)((&(_6017_status)))),0LL) == -1LL) {
		return jule::Exceptional<jule::Int>(_20379c05a_get_last_process_error());
	}
	(*this)._field__pid=-1LL;
	return jule::Exceptional(jule::Any(),static_cast<jule::Int>(WEXITSTATUS(_6017_status)));
}







std::ostream &operator<<(std::ostream &_Stream, const _20379d743_Cmd &_Src) {
	_Stream << "Cmd{";
	_Stream << "_fle:" << _Src._field__fle << ", ";
	_Stream << "_pid:" << _Src._field__pid << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _203741197_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2037c5759_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2037c5759_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da102588_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da102588_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (_22922_s[_23017_i] == '+') {
			_case_begin_4381401120:;
			{
				(_23017_i)++;
			}
		}
		else if (_22922_s[_23017_i] == '-') {
			_case_begin_4381401216:;
			{
				(*this)._field_neg=true;
				(_23017_i)++;
			}
		}
		_match_end_4381400352:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (_22922_s[_23017_i] == '.') {
					_case_begin_4381407312:;
					{
						if (_24717_sawdot) {
							return _22932_ok;
						}
						_24717_sawdot=true;
						(*this)._field_dp=(*this)._field_nd;
						goto _iter_next_4381405456;
					}
				}
				else if (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')) {
					_case_begin_4381407424:;
					{
						_24817_sawdigits=true;
						if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
							((*this)._field_dp)--;
							goto _iter_next_4381405456;
						}
						if ((*this)._field_nd < 800LL) {
							(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
							((*this)._field_nd)++;
						} else if (_22922_s[_23017_i] != '0') {
							(*this)._field_trunc=true;
						}
						goto _iter_next_4381405456;
					}
				}
				_match_end_4381407088:;
			}
			goto _iter_end_4381405456;
		}
	_iter_next_4381405456:;
	}
	_iter_end_4381405456:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_20385580b_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_4381422144:;
		}
		_iter_end_4381422144:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1da102588_Decimal::_method_float_bits(_2037c5759_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LLU;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LLU;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _1d9e31c58_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_1d9e31c58_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4381438512:;
	}
	_iter_end_4381438512:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d.__at(0LL) < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _1d9e31c58_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_1d9e31c58_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4381441424:;
	}
	_iter_end_4381441424:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= static_cast<jule::Int>((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LLU;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= static_cast<jule::Int>((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LLU;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + static_cast<jule::Uint>(_31830_flt._field_bias));
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & static_cast<jule::Int>((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Uint>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1da102588_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::unsafe_div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4381471488:;
	}
	_iter_end_4381471488:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_4381474848:;
	}
	_iter_end_4381474848:;
	(*this)._field_dp=(*this)._field_nd;
	_1da102588_trim((*this));
}



inline void _1da102588_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if ((*this)._field_nd == 0LL) {
			_case_begin_4381479088:;
		}
		else if (_17728_k > 0LL) {
			_case_begin_4381479200:;
			{
				while (_17728_k > 60LLU) {
					{
						_1da102588_left_shift((*this),60LLU);
						_17728_k-=60LL;
					}
				_iter_next_4381480032:;
				}
				_iter_end_4381480032:;
				_1da102588_left_shift((*this),static_cast<jule::Uint>(_17728_k));
			}
		}
		else if (_17728_k < 0LL) {
			_case_begin_4381479312:;
			{
				while (_17728_k < -60LL) {
					{
						_1da102588_right_shift((*this),60LLU);
						_17728_k+=60LL;
					}
				_iter_next_4381483472:;
				}
				_iter_end_4381483472:;
				_1da102588_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
			}
		}
		_match_end_4381478848:;
	}
}



inline void _1da102588_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1da102588_trim((*this));
}



inline void _1da102588_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4381491408:;
	}
	_iter_end_4381491408:;
	(*this)._field_d.__at(0LL)='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1da102588_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1da102588_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1da102588_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_4381497232:;
	}
	_iter_end_4381497232:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LLU;
		}
	_iter_next_4381506624:;
	}
	_iter_end_4381506624:;
	if (_1da102588_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da102588_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db2d9c36_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db2d9c36_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db2d9c36_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db2d9c36_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db2d9c36_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da91c952_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db3db7e9_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>> _1db3db7e9_Directory::_static_method_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>();
	DIR* _1617_dir = _2052c5444_opendir((&(_1524_path[0LL])));
	if (_1617_dir == nullptr) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>>(_1db3c5ea9_get_last_fs_error());
	}
	for (;;) {
		{
			struct dirent* _2117_dirent = _2052c5444_readdir(_1617_dir);
			if (_2117_dirent == nullptr) {
				goto _iter_end_4385967120;
			}
			jule::Str _2517_name = _2037d15bc_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));
			jule::Ptr<_1db3e1b84_Status> _2621_stat = ({
				auto except = _1db3e1b84_Status::_static_method_of(_20525e312_join(jule::Slice<jule::Str>({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>>(except.error);
				} jule::Ptr<_1db3e1b84_Status>();});
			});
			_1538_dirents.push(jule::new_struct<_1db3db7e9_DirEntry>(new( std::nothrow ) _1db3db7e9_DirEntry(_2517_name,_2621_stat)));
		}
	_iter_next_4385967120:;
	}
	_iter_end_4385967120:;
	_2052c5444_closedir(_1617_dir);
	return jule::Exceptional(jule::Any(),_1538_dirents);
}



inline jule::VoidExceptional _1db3db7e9_Directory::_static_method_create(jule::Str _3926_path) {
	if (_2052c5444_mkdir((&(_3926_path[0LL])),448LL) != 0LL) {
		return jule::VoidExceptional(_1db3c5ea9_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1db3db7e9_Directory::_static_method_remove(jule::Str _5126_path) {
	if (_2052c5444_rmdir((&(_5126_path[0LL]))) != 0LL) {
		return jule::VoidExceptional(_1db3c5ea9_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _1db3db7e9_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1db3ddeb1_File>> _1db3ddeb1_File::_static_method_open(jule::Str _1824_path,jule::Int _1835_flag,jule::Int _1848_mode) {
	jule::Int _1913_handle = _2052c5444_open((&(_1824_path[0LL])),static_cast<jule::Int>(_1835_flag),_1848_mode);
	if (_1913_handle == -1LL) {
		return jule::Exceptional<jule::Ptr<_1db3ddeb1_File>>(_1db3c5ea9_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_1db3ddeb1_File::_static_method_new(static_cast<jule::Uintptr>(_1913_handle)));
}



inline jule::VoidExceptional _1db3ddeb1_File::_static_method_remove(jule::Str _3026_path) {
	if (_2052c5444_unlink((&(_3026_path[0LL]))) != 0LL) {
		return jule::VoidExceptional(_1db3c5ea9_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Int> _1db3ddeb1_File::_method_write(jule::Slice<jule::U8> _4428_buff) {
	jule::Int _4445_n = jule::Int();
	if (_4428_buff.len() == 0LL) {
		_4445_n = 0LL;
		return jule::Exceptional(jule::Any(),_4445_n);
	}
	_4445_n=static_cast<jule::Int>(static_cast<jule::Int>(_203797660_write(static_cast<jule::Int>((*this)._field_handle),(&(_4428_buff[0LL])),static_cast<jule::Uint>(_4428_buff.len()))));
	if (_4445_n == -1LL) {
		return jule::Exceptional<jule::Int>(_1db3c5ea9_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::Int> _1db3ddeb1_File::_method_read(jule::Slice<jule::U8> _6531_buff) {
	jule::Int _6548_n = jule::Int();
	if (_6531_buff.len() == 0LL) {
		_6548_n = 0LL;
		return jule::Exceptional(jule::Any(),_6548_n);
	}
	_6548_n=static_cast<jule::Int>(static_cast<jule::Int>(_203797660_read(static_cast<jule::Int>((*this)._field_handle),(&(_6531_buff[0LL])),static_cast<jule::Uint>(_6531_buff.len()))));
	if (_6548_n == -1LL) {
		return jule::Exceptional<jule::Int>(_1db3c5ea9_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_6548_n);
}



inline jule::Ptr<_1db3ddeb1_File> _1db3ddeb1_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1db3ddeb1_File>(new( std::nothrow ) _1db3ddeb1_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1db3ddeb1_File>> _1db3ddeb1_File::_static_method_create(jule::Str _5526_path) {
	return jule::Exceptional(jule::Any(),({
		auto except = _1db3ddeb1_File::_static_method_open(_5526_path,1538LL,438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1db3ddeb1_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1db3ddeb1_File>>(except.error);
		} jule::Ptr<_1db3ddeb1_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1db3ddeb1_File::_static_method_read(jule::Str _6724_path) {
	jule::Ptr<_1db3e1b84_Status> _6813_s = ({
		auto except = _1db3e1b84_Status::_static_method_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1db3e1b84_Status>();});
	});
	if ((!(_6813_s->_method_is_reg()))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(14LLU);
	}
	if (_6813_s->_field_size == 0LL) {
		return jule::Exceptional(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1db3ddeb1_File> _7817_f = ({
		auto except = _1db3ddeb1_File::_static_method_open(_6724_path,0LL,0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1db3ddeb1_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _7817_f->_method_close();
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6813_s->_field_size));
	jule::Int _8213_n = ({
		auto except = _7817_f->_method_read(_8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Int();});
	});
	return jule::Exceptional(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional _1db3ddeb1_File::_static_method_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::Int _9150_perm) {
	jule::Ptr<_1db3ddeb1_File> _9217_f = ({
		auto except = _1db3ddeb1_File::_static_method_open(_9125_path,1537LL,_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1db3ddeb1_File>();});
	});
	({
		auto except = _9217_f->_method_write(_9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _9217_f->_method_close();
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1db3ddeb1_File::_method_seek(jule::I64 _10527_offset,jule::Int _10540_origin) {
	jule::I64 _10613_pos = _203797660_seek(static_cast<jule::Int>((*this)._field_handle),_10527_offset,static_cast<jule::Int>(_10540_origin));
	if (_10613_pos == -1LL) {
		return jule::Exceptional<jule::I64>(_1db3c5ea9_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1db3ddeb1_File::_method_close(void) {
	if (_203797660_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return jule::VoidExceptional(_1db3c5ea9_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _1db3ddeb1_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1db3e1b84_Status>> _1db3e1b84_Status::_static_method_of(jule::Str _1122_path) {
	struct stat _1217_handle = (struct stat){};
	jule::Int _1313_code = _2052c5444_stat((&(_1122_path[0LL])),(&(_1217_handle)));
	if (_1313_code != -1LL) {
		return jule::Exceptional(jule::Any(),jule::new_struct<_1db3e1b84_Status>(new( std::nothrow ) _1db3e1b84_Status(static_cast<jule::Uint>(_1217_handle.st_mode),static_cast<jule::Uint>(_1217_handle.st_size))));
	}
	return jule::Exceptional<jule::Ptr<_1db3e1b84_Status>>(_1db3c5ea9_get_last_fs_error());
}



inline jule::Bool _1db3e1b84_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1db3e1b84_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db3e1b84_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1da81133a_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_4386452048:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_4386452288:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_4386452384:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_4386452480:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_4386451584:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_4386450880:;
			{
				return 0LLU;
			}
		}
		_match_end_4386450576:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da81133a_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7bba21_File::_method_is_ok(void) {
	({
		auto except = _1db3e1b84_Status::_static_method_of((*this)._field__path);
		if (!except.ok()) {
			return false;
		}
	});
	return true;
}



inline void _1da7bba21_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1da7bba21_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1da7bba21_File::_method_dir(void) {
	return _20525e312_dir((*this)._field__path);
}



inline jule::Str _1da7bba21_File::_method_name(void) {
	return _20525e312_base((*this)._field__path);
}



inline jule::Uintptr _1da7bba21_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1da81133a_Token> _1da7bba21_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1da7bba21_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_4386474816;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4386474816:;
	}
	_iter_end_4386474816:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7bba21_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7bd281_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1da7bd281_Lex::_method_push_err(jule::Str _40427_fmt,jule::Slice<jule::Any> _40440_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1da7bd281_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40427_fmt,_40440_args));
}



inline void _1da7bd281_Lex::_method_push_err_tok(_1da81133a_Token& _40932_token,jule::Str _40946_fmt) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1da7bd281_make_err(_40932_token._field_row,_40932_token._field_column,(*this)._field_file,_40946_fmt,jule::Slice<jule::Any>()));
}



inline void _1da7bd281_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_1da81133a_Token _41921_token = (*this)._method_token();
			if (_41921_token._field_id != 0LLU) {
				(*this)._field_tokens = jule::alloc_for_append((*this)._field_tokens,1);(*this)._field_tokens.push(_41921_token);
			}
		}
	_iter_next_4386487776:;
	}
	_iter_end_4386487776:;
}



inline jule::Str _1da7bd281_Lex::_method_id(jule::Slice<jule::U8>& _42822_ln) {
	if (_42822_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43214_r;
	jule::Int _43221_i;
	std::tie(_43214_r,_43221_i) = _1da91c952_decode_rune(_42822_ln);
	if ((_43214_r != '_') && (!(_1da81133a_is_letter(_43214_r)))) {
		return jule::Str();
	}
	while (_43221_i < _42822_ln.len()) {
		{
			jule::I32 _43818_r;
			jule::Int _43821_n;
			std::tie(_43818_r,_43821_n) = _1da91c952_decode_rune(_42822_ln.slice(_43221_i));
			if (((_43818_r != '_') && (!(_1da81133a_is_decimal(static_cast<jule::U8>(_43818_r))))) && (!(_1da81133a_is_letter(_43818_r)))) {
				(*this)._field_pos+=_43221_i;
				return static_cast<jule::Str>(_42822_ln.slice(0LL,_43221_i));
			}
			_43221_i+=_43821_n;
		}
	_iter_next_4386499728:;
	}
	_iter_end_4386499728:;
	(*this)._field_pos+=static_cast<jule::I64>(_42822_ln.len());
	return static_cast<jule::Str>(_42822_ln);
}



inline jule::Slice<jule::U8> _1da7bd281_Lex::_method_resume(void) {
	jule::Int _45317_i = (*this)._field_pos;
	for (; _45317_i < (*this)._field_file->_field_data.len(); (_45317_i)++) {
		{
			jule::I32 _45517_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45317_i]);
			if (_1da81133a_is_space(_45517_r)) {
				((*this)._field_pos)++;
				{
					auto &_match_expr{ _45517_r };
					if (_match_expr == '\n') {
						_case_begin_4386512048:;
						{
							(*this)._method_new_line();
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_4386512144:;
						{
							(*this)._field_column+=8LL;
						}
					}
					else {
						_case_begin_4386510320:;
						{
							((*this)._field_column)++;
						}
					}
					_match_end_4386510656:;
				}
				goto _iter_next_4386506720;
			}
			jule::Int _46621_j = _45317_i;
			for (; _46621_j < (*this)._field_file->_field_data.len(); (_46621_j)++) {
				{
					if ((*this)._field_file->_field_data[_46621_j] == '\n') {
						goto _iter_end_4386509088;
					}
				}
			_iter_next_4386509088:;
			}
			_iter_end_4386509088:;
			return (*this)._field_file->_field_data.slice(_45317_i,_46621_j);
		}
	_iter_next_4386506720:;
	}
	_iter_end_4386506720:;
	return nullptr;
}



inline void _1da7bd281_Lex::_method_lex_line_comment(_1da81133a_Token& _47840_token) {
	jule::Int _47913_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48317_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48317_r == '\n') || (_48317_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47840_token._field_id=18LLU;
					_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_4386518608:;
	}
	_iter_end_4386518608:;
	if ((*this)._method_is_first_token_of_line()) {
		_47840_token._field_id=18LLU;
		_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start));
	}
}



inline void _1da7bd281_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50217_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50217_r == '\r') {
				goto _iter_next_4386527984;
			}
			if (_50217_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4386527984;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50217_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4386527984:;
	}
	_iter_end_4386527984:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1da7bd281_Lex::_method_num(jule::Slice<jule::U8>& _52323_txt) {
	jule::Str _52338_lit = jule::Str();
	_52338_lit=_1da7bd281_hex_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_1da7bd281_octal_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_1da7bd281_binary_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_1da7bd281_common_num(_52323_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52338_lit.len());
	return _52338_lit;
}



inline jule::Str _1da7bd281_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54230_txt) {
	jule::Str _54317_seq = jule::Str();
	if (_54230_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _54230_txt[1LL] };
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_4386553344:;
			{
				(*this)._field_pos+=2LL;
				return static_cast<jule::Str>(_54230_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_4386554192:;
			{
				_54317_seq=_1da7bd281_big_unicode_point_escape(_54230_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_4386554288:;
			{
				_54317_seq=_1da7bd281_little_unicode_point_escape(_54230_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_4386552784:;
			{
				_54317_seq=_1da7bd281_hex_byte_escape(_54230_txt);
			}
		}
		else {
			_case_begin_4386551280:;
			{
				_54317_seq=_1da7bd281_byte_escape(_54230_txt);
			}
		}
		_match_end_4386552112:;
	}
	_julec_label_end:;
	if (_54317_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54317_seq.len());
	return _54317_seq;
}



inline jule::Str _1da7bd281_Lex::_method_get_rune(jule::Slice<jule::U8>& _57628_txt,jule::Bool _57641_raw) {
	if ((!(_57641_raw)) && (_57628_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57628_txt);
	}
	jule::I32 _58114_r;
	jule::Int _58117_n;
	std::tie(_58114_r,_58117_n) = _1da91c952_decode_rune(_57628_txt);
	(*this)._field_pos+=_58117_n;
	return static_cast<jule::Str>(_58114_r);
}



inline jule::Str _1da7bd281_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58628_txt) {
	jule::Str _58717_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58917_n = 0LL;
	jule::Int _59017_i = 1LL;
	for (; _59017_i < _58628_txt.len(); (_59017_i)++) {
		{
			if (_58628_txt[_59017_i] == '\r') {
				goto _iter_next_4386577200;
			}
			if (_58628_txt[_59017_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60217_part = _58628_txt.slice(_59017_i);
			jule::Str _60317_r = (*this)._method_get_rune(_60217_part,false);
			_58717_run+=_60317_r;
			jule::I64 _60517_length = _60317_r.len();
			(*this)._field_column+=_60517_length;
			if (_60317_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4386577200;
			}
			if (_60517_length > 1LL) {
				_59017_i+=static_cast<jule::I64>(_60517_length - 1LL);
			}
			(_58917_n)++;
		}
	_iter_next_4386577200:;
	}
	_iter_end_4386577200:;
	if (_58917_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if (_58917_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _58717_run;
}



inline jule::Str _1da7bd281_Lex::_method_lex_str(void) {
	jule::Str _62717_s = jule::Str();
	jule::U8 _62813_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _63013_raw = _62813_mark == '`';
	_62717_s+=static_cast<jule::Str>(_62813_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63517_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63517_ch == '\r') {
				goto _iter_next_4386594912;
			}
			if (_63517_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_63013_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64721_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64817_r = (*this)._method_get_rune(_64721_part,_63013_raw);
			_62717_s+=_64817_r;
			(*this)._field_column+=static_cast<jule::I64>(_64817_r.len());
			if (_63517_ch == _62813_mark) {
				goto _iter_end_4386594912;
			}
		}
	_iter_next_4386594912:;
	}
	_iter_end_4386594912:;
	return _62717_s;
}



inline jule::Bool _1da7bd281_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1da7bd281_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1da7bd281_Lex::_method_is_op(jule::Slice<jule::U8>& _66825_txt,jule::Str _66838_kind,jule::Uint _66849_id,_1da81133a_Token& _66867_t) {
	if ((!(_1da7bd281_bytes_has_prefix(_66825_txt,_66838_kind)))) {
		return false;
	}
	_66867_t._field_kind=_66838_kind;
	_66867_t._field_id=_66849_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66838_kind.len());
	return true;
}



inline jule::Bool _1da7bd281_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67932_txt,_1da81133a_Token& _67950_tok) {
	{
		auto &expr = _1da7bd281_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_4386615616:;
		if (it != expr.end()) {
			_1da7bd281_KindPair &_1da7bd281_pair = *it;
			{
				if ((*this)._method_is_op(_67932_txt,_1da7bd281_pair._field_kind,_1da7bd281_pair._field_id,_67950_tok)) {
					return true;
				}
			}
			_iter_next_4386615616:;
			++it;
			goto _iter_begin_4386615616;
		}
		_iter_end_4386615616:;
	}
	return false;
}



inline jule::Bool _1da7bd281_Lex::_method_lex_id(jule::Slice<jule::U8>& _68926_txt,_1da81133a_Token& _68944_t) {
	jule::Str _69013_lex = (*this)._method_id(_68926_txt);
	if (_69013_lex == jule::Str()) {
		return false;
	}
	_68944_t._field_kind=_69013_lex;
	_68944_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1da7bd281_Lex::_method_lex_num(jule::Slice<jule::U8>& _70027_txt,_1da81133a_Token& _70045_t) {
	jule::Str _70113_lex = (*this)._method_num(_70027_txt);
	if (_70113_lex == jule::Str()) {
		return false;
	}
	_70045_t._field_kind=_70113_lex;
	_70045_t._field_id=6LLU;
	return true;
}



inline _1da81133a_Token _1da7bd281_Lex::_method_token(void) {
	_1da81133a_Token _71317_t = _1da81133a_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71513_txt = (*this)._method_resume();
	if (_71513_txt == nullptr) {
		return _71317_t;
	}
	_71317_t._field_column=(*this)._field_column;
	_71317_t._field_row=(*this)._field_row;
	{
		if ((*this)._method_lex_num(_71513_txt,_71317_t)) {
			_case_begin_4386637792:;
		}
		else if (_71513_txt[0LL] == '\'') {
			_case_begin_4386634128:;
			{
				_71317_t._field_kind=(*this)._method_lex_rune(_71513_txt);
				_71317_t._field_id=6LLU;
				return _71317_t;
			}
		}
		else if ((_71513_txt[0LL] == '\"') || (_71513_txt[0LL] == '`')) {
			_case_begin_4386634224:;
			{
				_71317_t._field_kind=(*this)._method_lex_str();
				_71317_t._field_id=6LLU;
				return _71317_t;
			}
		}
		else if (_1da7bd281_bytes_has_prefix(_71513_txt,jule::Str("//", 2))) {
			_case_begin_4386634320:;
			{
				(*this)._method_lex_line_comment(_71317_t);
				return _71317_t;
			}
		}
		else if (_1da7bd281_bytes_has_prefix(_71513_txt,jule::Str("/*", 2))) {
			_case_begin_4386634416:;
			{
				(*this)._method_lex_range_comment();
				return _71317_t;
			}
		}
		else if ((*this)._method_is_op(_71513_txt,jule::Str("(", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str(")", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("{", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("}", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("[", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("]", 1),3LLU,_71317_t) || (*this)._method_lex_basic_ops(_71513_txt,_71317_t)) {
			_case_begin_4386638288:;
		}
		else if ((*this)._method_lex_id(_71513_txt,_71317_t)) {
			_case_begin_4386638384:;
			{
				{
					auto &expr = _1da7bd281_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_4386652800:;
					if (it != expr.end()) {
						_1da7bd281_KindPair &_1da7bd281_pair = *it;
						{
							if (_1da7bd281_pair._field_kind == _71317_t._field_kind) {
								_71317_t._field_id=_1da7bd281_pair._field_id;
								goto _iter_end_4386652800;
							}
						}
						_iter_next_4386652800:;
						++it;
						goto _iter_begin_4386652800;
					}
					_iter_end_4386652800:;
				}
			}
		}
		else {
			_case_begin_4386632336:;
			{
				jule::I32 _76518_r;
				jule::Int _76521_sz;
				std::tie(_76518_r,_76521_sz) = _1da91c952_decode_rune(_71513_txt);
				(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76518_r)}));
				((*this)._field_column)++;
				(*this)._field_pos+=_76521_sz;
				return _71317_t;
			}
		}
		_match_end_4386632256:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71317_t._field_kind.len());
	return _71317_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7bd281_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7635cd_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a8399_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a8399_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a8553_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1db4a8553_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1db4a8553_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1db4a8553_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stmts.len();
}



inline jule::Bool _1db4a8553_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stmts.len();
}



inline void _1db4a8553_ScopeParser::_method_push_err(_1da81133a_Token _17827_token,jule::Str _17841_fmt) {
	(*this)._field_p->_method_push_err(_17827_token,_17841_fmt,jule::Slice<jule::Any>());
}



inline void _1db4a8553_ScopeParser::_method_push_suggestion(jule::Str _18134_fmt,jule::Slice<jule::Any> _18147_args) {
	(*this)._field_p->_method_push_suggestion(_18134_fmt,_18147_args);
}



inline void _1db4a8553_ScopeParser::_method_insert_as_next(jule::Slice<_1da81133a_Token>& _18538_tokens) {
	(*this)._field_stmts=jule::append((*this)._field_stmts.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stmts.slice((*this)._field_pos));
	(*this)._field_stmts[(*this)._field_pos + 1LL]=jule::new_struct<_1db4a8553_Stmt>(new( std::nothrow ) _1db4a8553_Stmt(_18538_tokens,jule::Bool()));
}



inline jule::Ptr<_1db4a8553_Stmt> _1db4a8553_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stmts[(*this)._field_pos];
}



inline jule::Ptr<_1da7b8e5d_ScopeTree> _1db4a8553_ScopeParser::_method_build_scope(jule::Slice<_1da81133a_Token>& _19535_tokens) {
	jule::Ptr<_1da7b8e5d_ScopeTree> _19617_s = _1db4a8553_new_scope();
	_19617_s->_field_parent=(*this)._field_s;
	_1db4a8553_ScopeParser _19817_ssp = _1db4a8553_ScopeParser((*this)._field_p,jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Slice<jule::Ptr<_1db4a8553_Stmt>>(),jule::Int());
	_19817_ssp._method_build(_19535_tokens,_19617_s);
	return _19617_s;
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_var_st(jule::Slice<_1da81133a_Token>& _20536_tokens) {
	jule::Ptr<_1da7b8e5d_VarDecl> _20617_v = (*this)._field_p->_method_build_var(_20536_tokens);
	_20617_v->_field_scope=(*this)._field_s;
	return jule::Any(_20617_v);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_ret_st(jule::Slice<_1da81133a_Token> _21135_tokens) {
	jule::Ptr<_1da7b8e5d_RetSt> _21217_st = jule::new_struct<_1da7b8e5d_RetSt>(new( std::nothrow ) _1da7b8e5d_RetSt(_21135_tokens[0LL],jule::Ptr<_1da7b8e5d_Expr>()));
	if (_21135_tokens.len() > 1LL) {
		_21135_tokens=_21135_tokens.slice(1LL);
		_21217_st->_field_expr=(*this)._field_p->_method_build_expr(_21135_tokens);
	}
	return jule::Any(_21217_st);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_while_next_iter(jule::Ptr<_1db4a8553_Stmt>& _22245_s) {
	jule::Ptr<_1da7b8e5d_Iter> _22317_it = jule::new_struct<_1da7b8e5d_Iter>(new( std::nothrow ) _1da7b8e5d_Iter(_22245_s->_field_tokens[0LL],jule::Any(),jule::Ptr<_1da7b8e5d_ScopeTree>()));
	jule::Slice<_1da81133a_Token> _22617_tokens = _22245_s->_field_tokens.slice(1LL);
	jule::Ptr<_1da7b8e5d_WhileKind> _22717_kind = jule::new_struct<_1da7b8e5d_WhileKind>(new( std::nothrow ) _1da7b8e5d_WhileKind());
	if (_22617_tokens.len() > 0LL) {
		_22717_kind->_field_expr=(*this)._field_p->_method_build_expr(_22617_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22617_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1da81133a_Token> _23917_st_tokens = _1db4ca7d9_get_block_expr(_22617_tokens);
	if (_23917_st_tokens.len() > 0LL) {
		jule::Ptr<_1db4a8553_Stmt> _24121_stmt = jule::new_struct<_1db4a8553_Stmt>(new( std::nothrow ) _1db4a8553_Stmt(_23917_st_tokens,_22245_s->_field_terminated));
		_22717_kind->_field_next_token=_23917_st_tokens[0LL];
		_22717_kind->_field_next=(*this)._method_build_st(_24121_stmt);
	}
	jule::I64 _24917_i = _23917_st_tokens.len();
	jule::Slice<_1da81133a_Token> _25017_block_tokens = _1c1526124_range(_24917_i,jule::Str("{", 1),jule::Str("}", 1),_22617_tokens);
	if (_25017_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_24917_i < _22617_tokens.len()) {
		(*this)._method_push_err(_22617_tokens[_24917_i],jule::Str("invalid syntax", 14));
	}
	_22317_it->_field_scope=(*this)._method_build_scope(_25017_block_tokens);
	_22317_it->_field_kind=jule::Any(_22717_kind);
	return jule::Any(_22317_it);
}



inline jule::Ptr<_1da7b8e5d_WhileKind> _1db4a8553_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1da81133a_Token>& _26745_tokens) {
	return jule::new_struct<_1da7b8e5d_WhileKind>(new( std::nothrow ) _1da7b8e5d_WhileKind((*this)._field_p->_method_build_expr(_26745_tokens),jule::Any(),_1da81133a_Token()));
}



inline jule::Slice<jule::Slice<_1da81133a_Token>> _1db4a8553_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1da81133a_Token>& _27350_toks) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _27418_vars;
	jule::Slice<_203741197_Log> _27424_errs;
	std::tie(_27418_vars,_27424_errs) = _1c1526124_parts(_27350_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27424_errs);
	return _27418_vars;
}



inline jule::Ptr<_1da7b8e5d_VarDecl> _1db4a8553_ScopeParser::_method_build_range_kind_key(jule::Slice<_1da81133a_Token>& _27944_tokens) {
	if (_27944_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_VarDecl> _28317_key = jule::new_struct<_1da7b8e5d_VarDecl>(new( std::nothrow ) _1da7b8e5d_VarDecl(jule::Ptr<_1da7b8e5d_ScopeTree>(),_27944_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1da7b8e5d_CommentGroup>(),jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::Ptr<_1da7b8e5d_Expr>()));
	if (_28317_key->_field_token._field_id == 36LLU) {
		_28317_key->_field_mutable=true;
		if (_27944_tokens.len() == 1LL) {
			(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28317_key->_field_token=_27944_tokens[1LL];
	} else if (_27944_tokens.len() > 1LL) {
		(*this)._method_push_err(_27944_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28317_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_28317_key->_field_ident=_28317_key->_field_token._field_kind;
	return _28317_key;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _1db4a8553_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1da81133a_Token>>& _30445_parts) {
	jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _30517_keys = nullptr;
	{
		auto &expr = _30445_parts;
		auto it = expr.begin();
		_iter_begin_4387371632:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4a8553_tokens = *it;
			{
				_30517_keys.push((*this)._method_build_range_kind_key(_1db4a8553_tokens));
			}
			_iter_next_4387371632:;
			++it;
			goto _iter_begin_4387371632;
		}
		_iter_end_4387371632:;
	}
	return _30517_keys;
}



inline void _1db4a8553_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_1da7b8e5d_RangeKind>& _31251_rng,jule::Slice<_1da81133a_Token>& _31273_tokens) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _31317_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31273_tokens);
	if (_31317_key_tokens.len() == 0LL) {
		return;
	}
	if (_31317_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31251_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _32017_keys = (*this)._method_build_range_kind_keys(_31317_key_tokens);
	_31251_rng->_field_key_a=_32017_keys[0LL];
	if (_32017_keys.len() > 1LL) {
		_31251_rng->_field_key_b=_32017_keys[1LL];
	}
}



inline void _1db4a8553_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_1da7b8e5d_RangeKind>& _32754_rng,jule::Slice<_1da81133a_Token>& _32776_tokens) {
	jule::Int _32817_i = 0LL;
	jule::Slice<_1da81133a_Token> _32917_rang = _1c1526124_range(_32817_i,jule::Str("(", 1),jule::Str(")", 1),_32776_tokens);
	if (_32817_i < _32776_tokens.len()) {
		(*this)._method_push_err(_32754_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32754_rng,_32917_rang);
}



inline void _1db4a8553_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_1da7b8e5d_RangeKind>& _33645_rng,jule::Slice<_1da81133a_Token>& _33667_tokens) {
	if (_33667_tokens[0LL]._field_id == 3LLU) {
		if (_33667_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33667_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33645_rng,_33667_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33645_rng,_33667_tokens);
}



inline jule::Ptr<_1da7b8e5d_RangeKind> _1db4a8553_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1da81133a_Token>& _34845_var_tokens,jule::Slice<_1da81133a_Token>& _34914_expr_tokens,_1da81133a_Token& _34941_in_token) {
	jule::Ptr<_1da7b8e5d_RangeKind> _35017_rng = jule::new_struct<_1da7b8e5d_RangeKind>(new( std::nothrow ) _1da7b8e5d_RangeKind(_34941_in_token,jule::Ptr<_1da7b8e5d_Expr>(),jule::Ptr<_1da7b8e5d_VarDecl>(),jule::Ptr<_1da7b8e5d_VarDecl>()));
	if (_34914_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_35017_rng->_field_in_token,jule::Str("expression missing", 18));
		return _35017_rng;
	}
	_35017_rng->_field_expr=(*this)._field_p->_method_build_expr(_34914_expr_tokens);
	if (_34845_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_35017_rng,_34845_var_tokens);
	}
	return _35017_rng;
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1da81133a_Token>& _36446_tokens,_1da81133a_Token& _36464_err_tok) {
	jule::Int _36517_brace_n = 0LL;
	{
		auto &expr = _36446_tokens;
		auto it = expr.begin();
		_iter_begin_4387411008:;
		if (it != expr.end()) {
			jule::Int _1db4a8553_i = it - expr.begin();
			_1da81133a_Token _1db4a8553_tok = *it;
			{
				if (_1db4a8553_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4a8553_tok._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_4387415440:;
							{
								(_36517_brace_n)++;
								goto _iter_next_4387411008;
							}
						}
						else {
							_case_begin_4387413664:;
							{
								(_36517_brace_n)--;
							}
						}
						_match_end_4387413760:;
					}
				}
				if (_36517_brace_n != 0LL) {
					goto _iter_next_4387411008;
				}
				{
					auto &_match_expr{ _1db4a8553_tok._field_id };
					if (_match_expr == 15LLU) {
						_case_begin_4387416800:;
						{
							jule::Slice<_1da81133a_Token> _38425_decl_tokens = _36446_tokens.slice(0LL,_1db4a8553_i);
							jule::Slice<_1da81133a_Token> _38525_expr_tokens = _36446_tokens.slice(_1db4a8553_i + 1LL);
							return jule::Any((*this)._method_build_range_iter_kind(_38425_decl_tokens,_38525_expr_tokens,_1db4a8553_tok));
						}
					}
					_match_end_4387413392:;
				}
			}
			_iter_next_4387411008:;
			++it;
			_1db4a8553_i++;
			goto _iter_begin_4387411008;
		}
		_iter_end_4387411008:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36446_tokens));
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_common_iter(jule::Slice<_1da81133a_Token> _39240_tokens) {
	jule::Ptr<_1da7b8e5d_Iter> _39317_it = jule::new_struct<_1da7b8e5d_Iter>(new( std::nothrow ) _1da7b8e5d_Iter(_39240_tokens[0LL],jule::Any(),jule::Ptr<_1da7b8e5d_ScopeTree>()));
	_39240_tokens=_39240_tokens.slice(1LL);
	if (_39240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_1da81133a_Token> _40317_expr_tokens = _1db4ca7d9_get_block_expr(_39240_tokens);
	if (_40317_expr_tokens.len() > 0LL) {
		_39317_it->_field_kind=(*this)._method_build_common_iter_kind(_40317_expr_tokens,_39317_it->_field_token);
	}
	jule::I64 _40717_i = _40317_expr_tokens.len();
	jule::Slice<_1da81133a_Token> _40817_scope_tokens = _1c1526124_range(_40717_i,jule::Str("{", 1),jule::Str("}", 1),_39240_tokens);
	if (_40817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_40717_i < _39240_tokens.len()) {
		(*this)._method_push_err(_39240_tokens[_40717_i],jule::Str("invalid syntax", 14));
	}
	_39317_it->_field_scope=(*this)._method_build_scope(_40817_scope_tokens);
	return jule::Any(_39317_it);
}



inline jule::Any _1db4a8553_ScopeParser::_method_buid_iter_st(jule::Ptr<_1db4a8553_Stmt>& _42236_st) {
	if (_42236_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42236_st);
	}
	return (*this)._method_build_common_iter(_42236_st->_field_tokens);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_break_st(jule::Slice<_1da81133a_Token>& _42938_tokens) {
	jule::Ptr<_1da7b8e5d_BreakSt> _43017_brk = jule::new_struct<_1da7b8e5d_BreakSt>(new( std::nothrow ) _1da7b8e5d_BreakSt(_42938_tokens[0LL],_1da81133a_Token()));
	if (_42938_tokens.len() > 1LL) {
		if (_42938_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_43017_brk->_field_label=_42938_tokens[1LL];
			if (_42938_tokens.len() > 2LL) {
				(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_43017_brk);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_cont_st(jule::Slice<_1da81133a_Token>& _44737_tokens) {
	jule::Ptr<_1da7b8e5d_ContSt> _44817_cont = jule::new_struct<_1da7b8e5d_ContSt>(new( std::nothrow ) _1da7b8e5d_ContSt(_44737_tokens[0LL],_1da81133a_Token()));
	if (_44737_tokens.len() > 1LL) {
		if (_44737_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44817_cont->_field_label=_44737_tokens[1LL];
			if (_44737_tokens.len() > 2LL) {
				(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44817_cont);
}



inline jule::Ptr<_1da7b8e5d_If> _1db4a8553_ScopeParser::_method_build_if(jule::Slice<_1da81133a_Token>& _46532_tokens) {
	jule::Ptr<_1da7b8e5d_If> _46617_model = jule::new_struct<_1da7b8e5d_If>(new( std::nothrow ) _1da7b8e5d_If(_46532_tokens[0LL],jule::Ptr<_1da7b8e5d_Expr>(),jule::Ptr<_1da7b8e5d_ScopeTree>()));
	_46532_tokens=_46532_tokens.slice(1LL);
	jule::Slice<_1da81133a_Token> _47017_expr_tokens = _1db4ca7d9_get_block_expr(_46532_tokens);
	jule::Int _47117_i = 0LL;
	if (_47017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_47117_i=static_cast<jule::I64>(_47017_expr_tokens.len());
	}
	jule::Slice<_1da81133a_Token> _47717_scope_tokens = _1c1526124_range(_47117_i,jule::Str("{", 1),jule::Str("}", 1),_46532_tokens);
	if (_47717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_47117_i < _46532_tokens.len()) {
		if (_46532_tokens[_47117_i]._field_id == 17LLU) {
			_46532_tokens=_46532_tokens.slice(_47117_i);
		} else {
			(*this)._method_push_err(_46532_tokens[_47117_i],jule::Str("invalid syntax", 14));
			_46532_tokens=nullptr;
		}
	}
	_46617_model->_field_expr=(*this)._field_p->_method_build_expr(_47017_expr_tokens);
	_46617_model->_field_scope=(*this)._method_build_scope(_47717_scope_tokens);
	return _46617_model;
}



inline jule::Ptr<_1da7b8e5d_Else> _1db4a8553_ScopeParser::_method_build_else(jule::Slice<_1da81133a_Token>& _49734_tokens) {
	jule::Ptr<_1da7b8e5d_Else> _49817_els = jule::new_struct<_1da7b8e5d_Else>(new( std::nothrow ) _1da7b8e5d_Else(_49734_tokens[0LL],jule::Ptr<_1da7b8e5d_ScopeTree>()));
	_49734_tokens=_49734_tokens.slice(1LL);
	jule::Int _50217_i = 0LL;
	jule::Slice<_1da81133a_Token> _50317_scope_tokens = _1c1526124_range(_50217_i,jule::Str("{", 1),jule::Str("}", 1),_49734_tokens);
	if (_50317_scope_tokens == nullptr) {
		if (_50217_i < _49734_tokens.len()) {
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_50217_i < _49734_tokens.len()) {
		(*this)._method_push_err(_49734_tokens[_50217_i],jule::Str("invalid syntax", 14));
	}
	_49817_els->_field_scope=(*this)._method_build_scope(_50317_scope_tokens);
	return _49817_els;
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_if_else_chain(jule::Slice<_1da81133a_Token> _52142_tokens) {
	jule::Ptr<_1da7b8e5d_Conditional> _52217_chain = jule::new_struct<_1da7b8e5d_Conditional>(new( std::nothrow ) _1da7b8e5d_Conditional((*this)._method_build_if(_52142_tokens),jule::Slice<jule::Ptr<_1da7b8e5d_If>>(),jule::Ptr<_1da7b8e5d_Else>()));
	if (_52217_chain->_field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_52142_tokens.len() != 0LL) {
		{
			if (_52142_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4387499584;
			}
			if ((_52142_tokens.len() > 1LL) && (_52142_tokens[1LL]._field_id == 16LLU)) {
				_52142_tokens=_52142_tokens.slice(1LL);
				jule::Ptr<_1da7b8e5d_If> _53425_elif = (*this)._method_build_if(_52142_tokens);
				_52217_chain->_field_tail = jule::alloc_for_append(_52217_chain->_field_tail,1);_52217_chain->_field_tail.push(_53425_elif);
				goto _iter_next_4387499584;
			}
			_52217_chain->_field_default=(*this)._method_build_else(_52142_tokens);
			goto _iter_end_4387499584;
		}
	_iter_next_4387499584:;
	}
	_iter_end_4387499584:;
	return jule::Any(_52217_chain);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_comment_st(_1da81133a_Token& _54436_token) {
	return jule::Any(_1c1526124_build_comment(_54436_token));
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_co_call_st(jule::Slice<_1da81133a_Token> _54839_tokens) {
	jule::Ptr<_1da7b8e5d_CoExpr> _54917_c = jule::new_struct<_1da7b8e5d_CoExpr>(new( std::nothrow ) _1da7b8e5d_CoExpr(_54839_tokens[0LL],jule::Ptr<_1da7b8e5d_Expr>()));
	_54839_tokens=_54839_tokens.slice(1LL);
	_54917_c->_field_expr=(*this)._field_p->_method_build_expr(_54839_tokens);
	return jule::Any(_54917_c);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_goto_st(jule::Slice<_1da81133a_Token>& _55737_tokens) {
	jule::Ptr<_1da7b8e5d_GotoSt> _55817_gt = jule::new_struct<_1da7b8e5d_GotoSt>(new( std::nothrow ) _1da7b8e5d_GotoSt(_55737_tokens[0LL],_1da81133a_Token()));
	if (_55737_tokens.len() == 1LL) {
		(*this)._method_push_err(_55817_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_55737_tokens.len() > 2LL) {
		(*this)._method_push_err(_55737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1da81133a_Token _56717_ident_token = _55737_tokens[1LL];
	if (_56717_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_56717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_55817_gt);
	}
	_55817_gt->_field_label=_56717_ident_token;
	return jule::Any(_55817_gt);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_fall_st(jule::Slice<_1da81133a_Token>& _57737_tokens) {
	jule::Ptr<_1da7b8e5d_FallSt> _57817_fll = jule::new_struct<_1da7b8e5d_FallSt>(new( std::nothrow ) _1da7b8e5d_FallSt(_57737_tokens[0LL]));
	if (_57737_tokens.len() > 1LL) {
		(*this)._method_push_err(_57737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_57817_fll);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_type_alias_st(jule::Slice<_1da81133a_Token>& _58743_tokens) {
	jule::Ptr<_1da7b8e5d_TypeAliasDecl> _58817_tad = (*this)._field_p->_method_build_type_alias_decl(_58743_tokens);
	_58817_tad->_field_scope=(*this)._field_s;
	return jule::Any(_58817_tad);
}



inline void _1db4a8553_ScopeParser::_method_push_case_expr(jule::Slice<_1da81133a_Token> _59337_tokens,_1da81133a_Token _59358_token,jule::Bool _5949_type_match,jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>& _59432_exprs) {
	if (_59337_tokens.len() == 0LL) {
		return;
	}
	if (_5949_type_match) {
		jule::Int _60021_i = 0LL;
		jule::Ptr<_1da7b8e5d_TypeDecl> _60122_t;
		jule::Bool _60125_ok;
		std::tie(_60122_t,_60125_ok) = (*this)._field_p->_method_build_type(_59337_tokens,(&(_60021_i)),true);
		if (_60125_ok) {
			_59432_exprs.push(jule::new_struct<_1da7b8e5d_Expr>(new( std::nothrow ) _1da7b8e5d_Expr(_59358_token,jule::Any(_60122_t))));
		}
		if (_60021_i < _59337_tokens.len()) {
			(*this)._method_push_err(_59337_tokens[_60021_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_59432_exprs.push((*this)._field_p->_method_build_expr(_59337_tokens));
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _1db4a8553_ScopeParser::_method_build_case_exprs(jule::Slice<_1da81133a_Token>& _61640_tokens,jule::Bool _61657_type_match) {
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _61717_exprs = jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>::alloc(0LL,1LL);
	jule::Int _61917_brace_n = 0LL;
	jule::Int _62017_j = 0LL;
	{
		auto &expr = _61640_tokens;
		auto it = expr.begin();
		_iter_begin_4387555936:;
		if (it != expr.end()) {
			jule::Int _1db4a8553_i = it - expr.begin();
			_1da81133a_Token _1db4a8553_tok = *it;
			{
				if (_1db4a8553_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4a8553_tok._field_kind };
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_4387560400:;
							{
								(_61917_brace_n)++;
							}
						}
						else {
							_case_begin_4387558624:;
							{
								(_61917_brace_n)--;
							}
						}
						_match_end_4387558720:;
					}
					goto _iter_next_4387555936;
				} else if (_61917_brace_n != 0LL) {
					goto _iter_next_4387555936;
				}
				{
					if ((_1db4a8553_tok._field_id == 7LLU) && (_1db4a8553_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_4387561328:;
						{
							jule::Slice<_1da81133a_Token> _63821_expr_tokens = _61640_tokens.slice(_62017_j,_1db4a8553_i);
							if (_63821_expr_tokens.len() == 0LL) {
								(*this)._method_push_err(_1db4a8553_tok,jule::Str("expression missing", 18));
							} else {
								(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_1db4a8553_i),_1db4a8553_tok,_61657_type_match,_61717_exprs);
							}
							_62017_j=static_cast<jule::Int>(_1db4a8553_i + 1LL);
						}
					}
					else if (_1db4a8553_tok._field_id == 11LLU) {
						_case_begin_4387558176:;
						{
							(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_1db4a8553_i),_1db4a8553_tok,_61657_type_match,_61717_exprs);
							_61640_tokens=_61640_tokens.slice(_1db4a8553_i + 1LL);
							return _61717_exprs;
						}
					}
					_match_end_4387560912:;
				}
			}
			_iter_next_4387555936:;
			++it;
			_1db4a8553_i++;
			goto _iter_begin_4387555936;
		}
		_iter_end_4387555936:;
	}
	(*this)._method_push_err(_61640_tokens[0LL],jule::Str("invalid syntax", 14));
	_61640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1da7b8e5d_ScopeTree> _1db4a8553_ScopeParser::_method_build_case_scope(jule::Slice<_1da81133a_Token>& _65740_tokens) {
	jule::Int _65817_n = 0LL;
	for (;;) {
		{
			jule::Int _66021_i = 0LL;
			jule::Slice<_1da81133a_Token> _66122_next;
			std::tie(_66122_next,std::ignore) = _1db4a8553_skip_st(_66021_i,_65740_tokens.slice(_65817_n));
			if (_66122_next.len() == 0LL) {
				goto _iter_end_4387573072;
			}
			_1da81133a_Token _66517_tok = _66122_next[0LL];
			if ((_66517_tok._field_id != 7LLU) || (_66517_tok._field_kind != jule::Str("|", 1))) {
				_65817_n+=_66021_i;
				goto _iter_next_4387573072;
			}
			jule::Slice<_1da81133a_Token> _67021_scope_tokens = _65740_tokens.slice(0LL,_65817_n);
			jule::Ptr<_1da7b8e5d_ScopeTree> _67121_scope = (*this)._method_build_scope(_67021_scope_tokens);
			_65740_tokens=_65740_tokens.slice(_65817_n);
			return _67121_scope;
		}
	_iter_next_4387573072:;
	}
	_iter_end_4387573072:;
	jule::Ptr<_1da7b8e5d_ScopeTree> _67517_scope = (*this)._method_build_scope(_65740_tokens);
	_65740_tokens=nullptr;
	return _67517_scope;
}



inline std::tuple<jule::Ptr<_1da7b8e5d_Case>,jule::Bool> _1db4a8553_ScopeParser::_method_build_case(jule::Slice<_1da81133a_Token>& _68034_tokens,jule::Bool _68051_type_match) {
	jule::Ptr<_1da7b8e5d_Case> _68117_c = jule::new_struct<_1da7b8e5d_Case>(new( std::nothrow ) _1da7b8e5d_Case(_68034_tokens[0LL],jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>()));
	_68034_tokens=_68034_tokens.slice(1LL);
	_68117_c->_field_exprs=(*this)._method_build_case_exprs(_68034_tokens,_68051_type_match);
	_68117_c->_field_scope=(*this)._method_build_case_scope(_68034_tokens);
	jule::Bool _68713_is_default = _68117_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68117_c,_68713_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1da7b8e5d_Case>>,jule::Ptr<_1da7b8e5d_Else>> _1db4a8553_ScopeParser::_method_build_cases(jule::Slice<_1da81133a_Token> _69134_tokens,jule::Bool _69151_type_match) {
	jule::Slice<jule::Ptr<_1da7b8e5d_Case>> _69217_cases = nullptr;
	jule::Ptr<_1da7b8e5d_Else> _69317_def = nullptr;
	jule::Bool _69417_def_not_last = false;
	while (_69134_tokens.len() > 0LL) {
		{
			_1da81133a_Token _69621_tok = _69134_tokens[0LL];
			if (_69621_tok._field_id == 18LLU) {
				_69134_tokens=_69134_tokens.slice(1LL);
				goto _iter_next_4387595888;
			}
			if ((_69621_tok._field_id != 7LLU) || (_69621_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4387595888;
			}
			jule::Ptr<_1da7b8e5d_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = (*this)._method_build_case(_69134_tokens,_69151_type_match);
			if (_70725_is_default) {
				_70722_c->_field_token=_69621_tok;
				if (_69317_def == nullptr) {
					_69317_def=jule::new_struct<_1da7b8e5d_Else>(new( std::nothrow ) _1da7b8e5d_Else(_70722_c->_field_token,_70722_c->_field_scope));
				} else {
					(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_69417_def_not_last=_69417_def_not_last || (_69317_def != nullptr);
				_69217_cases.push(_70722_c);
			}
		}
	_iter_next_4387595888:;
	}
	_iter_end_4387595888:;
	if (_69417_def_not_last) {
		(*this)._method_push_err(_69317_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69217_cases,_69317_def);
}



inline jule::Ptr<_1da7b8e5d_MatchCase> _1db4a8553_ScopeParser::_method_build_match_case(jule::Slice<_1da81133a_Token> _73139_tokens) {
	jule::Ptr<_1da7b8e5d_MatchCase> _73217_m = jule::new_struct<_1da7b8e5d_MatchCase>(new( std::nothrow ) _1da7b8e5d_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_1da7b8e5d_Expr>(),jule::Slice<jule::Ptr<_1da7b8e5d_Case>>(),jule::Ptr<_1da7b8e5d_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == 10LLU)) {
		_73217_m->_field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_1da81133a_Token> _74217_expr_tokens = _1db4ca7d9_get_block_expr(_73139_tokens);
	if (_74217_expr_tokens.len() > 0LL) {
		_73217_m->_field_expr=(*this)._field_p->_method_build_expr(_74217_expr_tokens);
	} else if (_73217_m->_field_type_match) {
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74917_i = _74217_expr_tokens.len();
	jule::Slice<_1da81133a_Token> _75017_block_toks = _1c1526124_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if (_75017_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_73217_m->_field_cases,_73217_m->_field_default) = (*this)._method_build_cases(_75017_block_toks,_73217_m->_field_type_match);
	return _73217_m;
}



inline jule::Ptr<_1da7b8e5d_ScopeTree> _1db4a8553_ScopeParser::_method_build_scope_st(jule::Slice<_1da81133a_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_1da81133a_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == 35LLU) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == 37LLU) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if (_76237_tokens.len() == 0LL) {
				(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == 37LLU) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _79117_i = 0LL;
	jule::Slice<_1da81133a_Token> _79217_scope_tokens = _1c1526124_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if (_79217_scope_tokens == nullptr) {
		(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < _76237_tokens.len()) {
		(*this)._method_push_err(_76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1da7b8e5d_ScopeTree> _79917_scope = (*this)._method_build_scope(_79217_scope_tokens);
	_79917_scope->_field_unsafety=_76317_is_unsafe;
	_79917_scope->_field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_1da7b8e5d_LabelSt> _1db4a8553_ScopeParser::_method_build_label_st(jule::Slice<_1da81133a_Token>& _80538_tokens) {
	jule::Ptr<_1da7b8e5d_LabelSt> _80617_lbl = jule::new_struct<_1da7b8e5d_LabelSt>(new( std::nothrow ) _1da7b8e5d_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if (_80538_tokens.len() > 2LL) {
		_80538_tokens=_80538_tokens.slice(2LL);
		(*this)._method_insert_as_next(_80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1db4a8553_ScopeParser::_method_build_id_st(jule::Slice<_1da81133a_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if (_82035_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_1da81133a_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		if (_match_expr == 11LLU) {
			_case_begin_4387657040:;
			{
				_82064_ok = true;
				return std::make_tuple(jule::Any((*this)._method_build_label_st(_82035_tokens)),_82064_ok);
			}
		}
		_match_end_4387658640:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_1c152a326_AssignInfo> _1db4a8553_ScopeParser::_method_build_assign_info(jule::Slice<_1da81133a_Token>& _83441_tokens) {
	jule::Ptr<_1c152a326_AssignInfo> _83517_info = jule::new_struct<_1c152a326_AssignInfo>(new( std::nothrow ) _1c152a326_AssignInfo(jule::Slice<_1da81133a_Token>(),jule::Slice<_1da81133a_Token>(),_1da81133a_Token(),true));
	jule::Int _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_4387665888:;
		if (it != expr.end()) {
			jule::Int _1db4a8553_i = it - expr.begin();
			_1da81133a_Token _1db4a8553_token = *it;
			{
				if (_1db4a8553_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4a8553_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_4387670448:;
							{
								(_83817_brace_n)++;
							}
						}
						else {
							_case_begin_4387668672:;
							{
								(_83817_brace_n)--;
							}
						}
						_match_end_4387668768:;
					}
				}
				{
					if (_83817_brace_n > 0LL) {
						_case_begin_4387671920:;
						{
							goto _iter_next_4387665888;
						}
					}
					else if (_1db4a8553_token._field_id != 7LLU) {
						_case_begin_4387670960:;
						{
							goto _iter_next_4387665888;
						}
					}
					else if ((!(_1da81133a_is_assign_op(_1db4a8553_token._field_kind)))) {
						_case_begin_4387671056:;
						{
							goto _iter_next_4387665888;
						}
					}
					_match_end_4387671472:;
				}
				_83517_info->_field_l=_83441_tokens.slice(0LL,_1db4a8553_i);
				if (_83517_info->_field_l.len() == 0LL) {
					_83517_info->_field_ok=false;
				}
				_83517_info->_field_setter=_1db4a8553_token;
				if ((_1db4a8553_i + 1LL) >= _83441_tokens.len()) {
					_83517_info->_field_r=nullptr;
					_83517_info->_field_ok=_1da81133a_is_postfix_op(_83517_info->_field_setter._field_kind);
					goto _iter_end_4387665888;
				}
				_83517_info->_field_r=_83441_tokens.slice(_1db4a8553_i + 1LL);
				if (_1da81133a_is_postfix_op(_83517_info->_field_setter._field_kind)) {
					if (_83517_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_83517_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_83517_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4387665888;
			}
			_iter_next_4387665888:;
			++it;
			_1db4a8553_i++;
			goto _iter_begin_4387665888;
		}
		_iter_end_4387665888:;
	}
	return _83517_info;
}



inline jule::Ptr<_1da7b8e5d_AssignLeft> _1db4a8553_ScopeParser::_method_build_assign_l(jule::Slice<_1da81133a_Token>& _88138_tokens) {
	jule::Ptr<_1da7b8e5d_AssignLeft> _88217_l = jule::new_struct<_1da7b8e5d_AssignLeft>(new( std::nothrow ) _1da7b8e5d_AssignLeft(_88138_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1da7b8e5d_Expr>()));
	if (_88138_tokens[0LL]._field_id == 2LLU) {
		_88217_l->_field_ident=_88217_l->_field_token._field_kind;
	}
	_88217_l->_field_expr=(*this)._field_p->_method_build_expr(_88138_tokens);
	return _88217_l;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>> _1db4a8553_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1da81133a_Token>>& _89439_parts) {
	jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>> _89517_lefts = nullptr;
	{
		auto &expr = _89439_parts;
		auto it = expr.begin();
		_iter_begin_4387690880:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4a8553_part = *it;
			{
				jule::Ptr<_1da7b8e5d_AssignLeft> _89721_l = (*this)._method_build_assign_l(_1db4a8553_part);
				_89517_lefts.push(_89721_l);
			}
			_iter_next_4387690880:;
			++it;
			goto _iter_begin_4387690880;
		}
		_iter_end_4387690880:;
	}
	return _89517_lefts;
}



inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _1db4a8553_ScopeParser::_method_build_plain_assign(jule::Slice<_1da81133a_Token>& _90442_tokens) {
	jule::Ptr<_1c152a326_AssignInfo> _90517_info = (*this)._method_build_assign_info(_90442_tokens);
	if ((!(_90517_info->_field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1da7b8e5d_AssignSt> _91017_assign = jule::new_struct<_1da7b8e5d_AssignSt>(new( std::nothrow ) _1da7b8e5d_AssignSt(jule::Bool(),_90517_info->_field_setter,jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>>(),jule::Ptr<_1da7b8e5d_Expr>()));
	jule::Slice<jule::Slice<_1da81133a_Token>> _91418_parts;
	jule::Slice<_203741197_Log> _91425_errs;
	std::tie(_91418_parts,_91425_errs) = _1c1526124_parts(_90517_info->_field_l,8LLU,true);
	if (_91425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_91425_errs);
		return std::make_tuple(nullptr,false);
	}
	_91017_assign->_field_left=(*this)._method_build_assign_ls(_91418_parts);
	if (_90517_info->_field_r != nullptr) {
		_91017_assign->_field_right=(*this)._field_p->_method_build_expr(_90517_info->_field_r);
	}
	return std::make_tuple(_91017_assign,true);
}



inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _1db4a8553_ScopeParser::_method_build_decl_assign(jule::Slice<_1da81133a_Token> _92840_tokens) {
	if (_92840_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_92840_tokens=_92840_tokens.slice(1LL);
	_1da81133a_Token _93417_token = _92840_tokens[0LL];
	if ((_93417_token._field_id != 3LLU) || (_93417_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1da7b8e5d_AssignSt> _93917_assign = jule::new_struct<_1da7b8e5d_AssignSt>(new( std::nothrow ) _1da7b8e5d_AssignSt(true,_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_AssignLeft>>(),jule::Ptr<_1da7b8e5d_Expr>()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_1da81133a_Token> _94417_rang = _1c1526124_range(_94317_i,jule::Str("(", 1),jule::Str(")", 1),_92840_tokens);
	if (_94417_rang == nullptr) {
		(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94317_i + 1LL) < _92840_tokens.len()) {
		_93917_assign->_field_setter=_92840_tokens[_94317_i];
		(_94317_i)++;
		jule::Slice<_1da81133a_Token> _95121_expr_tokens = _92840_tokens.slice(_94317_i);
		_93917_assign->_field_right=(*this)._field_p->_method_build_expr(_95121_expr_tokens);
	}
	jule::Slice<jule::Slice<_1da81133a_Token>> _95618_parts;
	jule::Slice<_203741197_Log> _95625_errs;
	std::tie(_95618_parts,_95625_errs) = _1c1526124_parts(_94417_rang,8LLU,true);
	if (_95625_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_95625_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95618_parts;
		auto it = expr.begin();
		_iter_begin_4387725616:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4a8553_part = *it;
			{
				jule::Bool _96321_is_mut = false;
				jule::Bool _96421_is_ref = false;
				_93417_token=_1db4a8553_part[0LL];
				if (_93417_token._field_id == 36LLU) {
					_96321_is_mut=true;
					_1db4a8553_part=_1db4a8553_part.slice(1LL);
					if (_1db4a8553_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4387725616;
					}
				}
				if ((_1db4a8553_part[0LL]._field_id == 7LLU) && (_1db4a8553_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96421_is_ref=true;
					_1db4a8553_part=_1db4a8553_part.slice(1LL);
					if (_1db4a8553_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4387725616;
					}
				}
				if (((_1db4a8553_part[0LL]._field_id != 2LLU) && (_1db4a8553_part[0LL]._field_id != 3LLU)) && (_1db4a8553_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4387725616;
				}
				jule::Ptr<_1da7b8e5d_AssignLeft> _99221_l = (*this)._method_build_assign_l(_1db4a8553_part);
				_99221_l->_field_mutable=_96321_is_mut;
				_99221_l->_field_reference=_96421_is_ref;
				_93917_assign->_field_left = jule::alloc_for_append(_93917_assign->_field_left,1);_93917_assign->_field_left.push(_99221_l);
			}
			_iter_next_4387725616:;
			++it;
			goto _iter_begin_4387725616;
		}
		_iter_end_4387725616:;
	}
	return std::make_tuple(_93917_assign,true);
}



inline std::tuple<jule::Ptr<_1da7b8e5d_AssignSt>,jule::Bool> _1db4a8553_ScopeParser::_method_build_assign_st(jule::Slice<_1da81133a_Token>& _100139_tokens) {
	jule::Ptr<_1da7b8e5d_AssignSt> _100158_st = jule::Ptr<_1da7b8e5d_AssignSt>();
	jule::Bool _100173_ok = jule::Bool();
	if ((!(_1c152a326_check_assign_tokens(_100139_tokens)))) {
		_100158_st = nullptr;
		_100173_ok = false;
		return std::make_tuple(_100158_st,_100173_ok);
	}
	{
		auto &_match_expr{ _100139_tokens[0LL]._field_id };
		if (_match_expr == 34LLU) {
			_case_begin_4387749968:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_decl_assign(_100139_tokens);
			}
		}
		else {
			_case_begin_4387747472:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_plain_assign(_100139_tokens);
			}
		}
		_match_end_4387748608:;
	}
	return std::make_tuple(_100158_st,_100173_ok);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_use_expr(jule::Slice<_1da81133a_Token>& _101438_tokens) {
	if (_101438_tokens.len() == 1LL) {
		(*this)._method_push_err(_101438_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1da7b8e5d_UseExpr> _102017_ue = jule::new_struct<_1da7b8e5d_UseExpr>(new( std::nothrow ) _1da7b8e5d_UseExpr(_101438_tokens[0LL],jule::Ptr<_1da7b8e5d_Expr>()));
	_101438_tokens=_101438_tokens.slice(1LL);
	_102017_ue->_field_expr=(*this)._field_p->_method_build_expr(_101438_tokens);
	return jule::Any(_102017_ue);
}



inline jule::Any _1db4a8553_ScopeParser::_method_build_st(jule::Ptr<_1db4a8553_Stmt>& _102932_st) {
	_1da81133a_Token _103017_token = _102932_st->_field_tokens[0LL];
	if (_103017_token._field_id == 2LLU) {
		jule::Any _103222_s;
		jule::Bool _103225_ok;
		std::tie(_103222_s,_103225_ok) = (*this)._method_build_id_st(_102932_st->_field_tokens);
		if (_103225_ok) {
			return _103222_s;
		}
	}
	jule::Ptr<_1da7b8e5d_AssignSt> _103818_s;
	jule::Bool _103821_ok;
	std::tie(_103818_s,_103821_ok) = (*this)._method_build_assign_st(_102932_st->_field_tokens);
	if (_103821_ok) {
		return jule::Any(_103818_s);
	}
	{
		auto &_match_expr{ _103017_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_5166371488:;
			{
				return (*this)._method_build_use_expr(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 38LLU || _match_expr == 9LLU || _match_expr == 34LLU || _match_expr == 36LLU) {
			_case_begin_5166371600:;
			{
				return (*this)._method_build_var_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 4LLU) {
			_case_begin_5166368768:;
			{
				return (*this)._method_build_ret_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 12LLU) {
			_case_begin_5166368864:;
			{
				return (*this)._method_buid_iter_st(_102932_st);
			}
		}
		else if (_match_expr == 13LLU) {
			_case_begin_5166368960:;
			{
				return (*this)._method_build_break_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 14LLU) {
			_case_begin_5166369056:;
			{
				return (*this)._method_build_cont_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_5166370512:;
			{
				return (*this)._method_build_if_else_chain(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_5166370608:;
			{
				return (*this)._method_build_comment_st(_103017_token);
			}
		}
		else if (_match_expr == 26LLU) {
			_case_begin_5166370704:;
			{
				return (*this)._method_build_co_call_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 22LLU) {
			_case_begin_5166370800:;
			{
				return (*this)._method_build_goto_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_5166372080:;
			{
				return (*this)._method_build_fall_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_5166372176:;
			{
				return (*this)._method_build_type_alias_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 27LLU) {
			_case_begin_5166372272:;
			{
				return jule::Any((*this)._method_build_match_case(_102932_st->_field_tokens));
			}
		}
		else if (_match_expr == 35LLU || _match_expr == 37LLU) {
			_case_begin_5166372368:;
			{
				return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5166372464:;
			{
				if (_103017_token._field_kind == jule::Str("{", 1)) {
					return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
				}
			}
		}
		else {
			_case_begin_5166368448:;
			{
				jule::Ptr<_1da7b8e5d_Expr> _109921_expr = (*this)._field_p->_method_build_expr(_102932_st->_field_tokens);
				if (_109921_expr != nullptr) {
					return jule::Any(_109921_expr);
				}
			}
		}
		_match_end_5166368208:;
	}
	(*this)._method_push_err(_103017_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1db4a8553_ScopeParser::_method_build(jule::Slice<_1da81133a_Token>& _110929_tokens,jule::Ptr<_1da7b8e5d_ScopeTree>& _110951_s) {
	if (_110951_s == nullptr) {
		return;
	}
	(*this)._field_stmts=_1db4a8553_split_stmts(_110929_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_110951_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_1db4a8553_Stmt> _111821_st = (*this)._method_next();
			jule::Any _111921_data = (*this)._method_build_st(_111821_st);
			if (_111921_data != nullptr) {
				(*this)._field_s->_field_stmts = jule::alloc_for_append((*this)._field_s->_field_stmts,1);(*this)._field_s->_field_stmts.push(_111921_data);
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_5166394128;
			}
		}
	_iter_next_5166394128:;
	}
	_iter_end_5166394128:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a8553_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4ca7d9_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1db4ca7d9_ExprBuilder::_method_push_err(_1da81133a_Token _24227_token,jule::Str _24241_fmt,jule::Slice<jule::Any> _24254_args) {
	(*this)._field_p->_method_push_err(_24227_token,_24241_fmt,_24254_args);
}



inline void _1db4ca7d9_ExprBuilder::_method_push_suggestion(jule::Str _24734_fmt,jule::Slice<jule::Any> _24747_args) {
	(*this)._field_p->_method_push_suggestion(_24734_fmt,_24747_args);
}



inline jule::Ptr<_1da7b8e5d_TupleExpr> _1db4ca7d9_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1da81133a_Token>>& _25135_parts) {
	jule::Ptr<_1da7b8e5d_TupleExpr> _25217_tuple = jule::new_struct<_1da7b8e5d_TupleExpr>(new( std::nothrow ) _1da7b8e5d_TupleExpr(jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>::alloc(0LL,static_cast<jule::I64>(_25135_parts.len()))));
	{
		auto &expr = _25135_parts;
		auto it = expr.begin();
		_iter_begin_5166430928:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4ca7d9_part = *it;
			{
				_25217_tuple->_field_expr = jule::alloc_for_append(_25217_tuple->_field_expr,1);_25217_tuple->_field_expr.push((*this)._method_build_from_tokens(_1db4ca7d9_part));
			}
			_iter_next_5166430928:;
			++it;
			goto _iter_begin_5166430928;
		}
		_iter_end_5166430928:;
	}
	return _25217_tuple;
}



inline jule::Ptr<_1da7b8e5d_LitExpr> _1db4ca7d9_ExprBuilder::_method_build_lit(_1da81133a_Token _26128_token) {
	return jule::new_struct<_1da7b8e5d_LitExpr>(new( std::nothrow ) _1da7b8e5d_LitExpr(_26128_token,_26128_token._field_kind));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1db4ca7d9_ExprBuilder::_method_build_primitive_type(_1da81133a_Token& _26840_token) {
	return _1c163edb9_build_prim_type(_26840_token);
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_single(_1da81133a_Token _27235_token) {
	{
		auto &_match_expr{ _27235_token._field_id };
		if (_match_expr == 6LLU) {
			_case_begin_5166442096:;
			{
				return jule::Any((*this)._method_build_lit(_27235_token));
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5166442192:;
			{
				if (_27235_token._field_kind == jule::Str("...", 3)) {
					return jule::Any(jule::new_struct<_1da7b8e5d_VariadicExpr>(new( std::nothrow ) _1da7b8e5d_VariadicExpr(_27235_token,jule::Any())));
				}
			}
		}
		else if (_match_expr == 2LLU || _match_expr == 28LLU || _match_expr == 40LLU) {
			_case_begin_5166442304:;
			{
				return jule::Any(_1db4ca7d9_build_ident_expr(_27235_token));
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_5166442416:;
			{
				return jule::Any((*this)._method_build_primitive_type(_27235_token));
			}
		}
		_match_end_5166441872:;
	}
	(*this)._method_push_err(_27235_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1da7b8e5d_IdentExpr> _1db4ca7d9_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1da81133a_Token>& _29646_tokens) {
	if (_29646_tokens[0LL]._field_id != 31LLU) {
		return nullptr;
	} else if (_29646_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_29646_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1da81133a_Token _30417_token = _29646_tokens[2LL];
	if (_30417_token._field_id != 2LLU) {
		(*this)._method_push_err(_29646_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_IdentExpr> _31017_expr = _1db4ca7d9_build_ident_expr(_30417_token);
	_31017_expr->_field_cpp_linked=true;
	return _31017_expr;
}



inline jule::Ptr<_1da7b8e5d_UnaryExpr> _1db4ca7d9_ExprBuilder::_method_build_unary(jule::Slice<_1da81133a_Token> _31534_tokens) {
	_1da81133a_Token _31617_op = _31534_tokens[0LL];
	if (_31534_tokens.len() == 1LL) {
		(*this)._method_push_err(_31617_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1da81133a_is_unary_op(_31617_op._field_kind)))) {
		(*this)._method_push_err(_31617_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_31617_op._field_kind)}));
		return nullptr;
	}
	_31534_tokens=_31534_tokens.slice(1LL);
	return jule::new_struct<_1da7b8e5d_UnaryExpr>(new( std::nothrow ) _1da7b8e5d_UnaryExpr(_31617_op,(*this)._method_build(_31534_tokens)));
}



inline jule::Ptr<_1da7b8e5d_SubIdentExpr> _1db4ca7d9_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1da81133a_Token> _33642_tokens) {
	jule::I64 _33717_i = _33642_tokens.len() - 1LL;
	_1da81133a_Token _33817_ident_token = _33642_tokens[_33717_i];
	(_33717_i)--;
	_33642_tokens=_33642_tokens.slice(0LL,_33717_i);
	if (_33642_tokens.len() == 0LL) {
		(*this)._method_push_err(_33817_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_SubIdentExpr>(new( std::nothrow ) _1da7b8e5d_SubIdentExpr(jule::Bool(),(*this)._method_build(_33642_tokens),_33817_ident_token));
}



inline jule::Ptr<_1da7b8e5d_NsSelectionExpr> _1db4ca7d9_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1da81133a_Token>& _35142_tokens) {
	jule::Ptr<_1da7b8e5d_NsSelectionExpr> _35217_ns = jule::new_struct<_1da7b8e5d_NsSelectionExpr>(new( std::nothrow ) _1da7b8e5d_NsSelectionExpr());
	{
		auto &expr = _35142_tokens;
		auto it = expr.begin();
		_iter_begin_5166483328:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token _1db4ca7d9_token = *it;
			{
				if (jule::unsafe_mod(_1db4ca7d9_i,2LL) == 0LL) {
					if (_1db4ca7d9_token._field_id != 2LLU) {
						(*this)._method_push_err(_1db4ca7d9_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_35217_ns->_field_ns = jule::alloc_for_append(_35217_ns->_field_ns,1);_35217_ns->_field_ns.push(_1db4ca7d9_token);
				} else if (_1db4ca7d9_token._field_id != 23LLU) {
					(*this)._method_push_err(_1db4ca7d9_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_5166483328:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_5166483328;
		}
		_iter_end_5166483328:;
	}
	_35217_ns->_field_ident=_35217_ns->_field_ns[_35217_ns->_field_ns.len() - 1LL];
	_35217_ns->_field_ns=_35217_ns->_field_ns.slice(0LL,_35217_ns->_field_ns.len() - 1LL);
	return _35217_ns;
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1db4ca7d9_ExprBuilder::_method_build_type(jule::Slice<_1da81133a_Token>& _37034_tokens) {
	jule::Int _37117_i = 0LL;
	jule::Ptr<_1da7b8e5d_TypeDecl> _37218_t;
	jule::Bool _37221_ok;
	std::tie(_37218_t,_37221_ok) = (*this)._field_p->_method_build_type(_37034_tokens,(&(_37117_i)),false);
	if ((!(_37221_ok))) {
		(*this)._method_push_err(_37034_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_37117_i < _37034_tokens.len()) {
		(*this)._method_push_err(_37034_tokens[_37117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _37218_t;
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_sub_ident(jule::Slice<_1da81133a_Token>& _38439_tokens) {
	jule::I64 _38513_i = _38439_tokens.len() - 2LL;
	_1da81133a_Token _38613_token = _38439_tokens[_38513_i];
	{
		auto &_match_expr{ _38613_token._field_id };
		if (_match_expr == 20LLU) {
			_case_begin_5166506688:;
			{
				return jule::Any((*this)._method_build_obj_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == 23LLU) {
			_case_begin_5166506784:;
			{
				return jule::Any((*this)._method_build_ns_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5166506880:;
			{
				if (_38613_token._field_kind == jule::Str("]", 1)) {
					return jule::Any((*this)._method_build_type(_38439_tokens));
				}
			}
		}
		_match_end_5166506480:;
	}
	(*this)._method_push_err(_38613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1da7b8e5d_VariadicExpr> _1db4ca7d9_ExprBuilder::_method_build_variadic(jule::Slice<_1da81133a_Token> _40537_tokens) {
	_1da81133a_Token _40617_token = _40537_tokens[_40537_tokens.len() - 1LL];
	_40537_tokens=_40537_tokens.slice(0LL,_40537_tokens.len() - 1LL);
	return jule::new_struct<_1da7b8e5d_VariadicExpr>(new( std::nothrow ) _1da7b8e5d_VariadicExpr(_40617_token,(*this)._method_build(_40537_tokens)));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_op_right(jule::Slice<_1da81133a_Token>& _41438_tokens) {
	_1da81133a_Token _41517_token = _41438_tokens[_41438_tokens.len() - 1LL];
	{
		auto &_match_expr{ _41517_token._field_kind };
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_5166521424:;
			{
				_41438_tokens=_41438_tokens.slice(0LL,_41438_tokens.len() - 1LL);
				jule::Any _41921_d = (*this)._method_build(_41438_tokens);
				if (_41921_d == nullptr) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _41921_d };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>()) {
						_case_begin_5166524688:;
						{
							_41921_d.operator jule::Ptr<_1da7b8e5d_FnCallExpr>()->_field_exception=jule::new_struct<_1da7b8e5d_ScopeTree>(new( std::nothrow ) _1da7b8e5d_ScopeTree(jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Bool(),true,jule::Slice<jule::Any>()));
							return _41921_d;
						}
					}
					_match_end_5166525472:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_5166521520:;
			{
				return jule::Any((*this)._method_build_variadic(_41438_tokens));
			}
		}
		_match_end_5166521344:;
	}
	(*this)._method_push_err(_41517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1da81133a_Token> _43948_tokens) {
	_1da81133a_Token _44013_token = _43948_tokens[0LL];
	_43948_tokens=_43948_tokens.slice(1LL,_43948_tokens.len() - 1LL);
	if (_43948_tokens.len() == 0LL) {
		(*this)._method_push_err(_44013_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_43948_tokens);
}



inline jule::Ptr<_1da7b8e5d_CastExpr> _1db4ca7d9_ExprBuilder::_method_try_build_cast(jule::Slice<_1da81133a_Token>& _45038_tokens) {
	jule::Int _45117_range_n = 0LL;
	{
		auto &expr = _45038_tokens;
		auto it = expr.begin();
		_iter_begin_5166539776:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_token = *it;
			{
				if (_1db4ca7d9_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4ca7d9_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5166544208:;
							{
								(_45117_range_n)++;
								goto _iter_next_5166539776;
							}
						}
						else {
							_case_begin_5166542432:;
							{
								(_45117_range_n)--;
							}
						}
						_match_end_5166542528:;
					}
				}
				if (_45117_range_n > 0LL) {
					goto _iter_next_5166539776;
				} else if ((_1db4ca7d9_i + 1LL) == _45038_tokens.len()) {
					return nullptr;
				}
				jule::Slice<_1da81133a_Token> _47221_type_tokens = _45038_tokens.slice(0LL,_1db4ca7d9_i + 1LL);
				jule::Slice<_1da81133a_Token> _47321_expr_tokens = _45038_tokens.slice(_1db4ca7d9_i + 1LL);
				if (_47321_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_1da81133a_Token _48017_tok = _47321_expr_tokens[0LL];
				if ((_48017_tok._field_id != 3LLU) || (_48017_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1da7b8e5d_CastExpr> _48521_cast = jule::new_struct<_1da7b8e5d_CastExpr>(new( std::nothrow ) _1da7b8e5d_CastExpr());
				if (_47321_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_47321_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if (_47221_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_47221_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_47221_type_tokens=_47221_type_tokens.slice(1LL,_47221_type_tokens.len() - 1LL);
					jule::Int _49925_type_index = 0LL;
					jule::Ptr<_1da7b8e5d_TypeDecl> _50026_t;
					jule::Bool _50029_ok;
					std::tie(_50026_t,_50029_ok) = (*this)._field_p->_method_build_type(_47221_type_tokens,(&(_49925_type_index)),true);
					if (_50029_ok && (_49925_type_index < _47221_type_tokens.len())) {
						(*this)._method_push_err(_47221_type_tokens[_49925_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_50029_ok))) {
						return _48521_cast;
					}
					_48521_cast->_field_kind=_50026_t;
					if (_47321_expr_tokens.len() > 2LL) {
						jule::Int _51029_j = 0LL;
						_1c1526124_range(_51029_j,jule::Str("(", 1),jule::Str(")", 1),_47321_expr_tokens);
						if (_51029_j < _47321_expr_tokens.len()) {
							return nullptr;
						}
						_47321_expr_tokens=_47321_expr_tokens.slice(0LL,_51029_j);
						_48521_cast->_field_expr=(*this)._method_build(_47321_expr_tokens);
					}
				}
				return _48521_cast;
			}
			_iter_next_5166539776:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_5166539776;
		}
		_iter_end_5166539776:;
	}
	return nullptr;
}



inline void _1db4ca7d9_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>& _52532_args,jule::Slice<_1da81133a_Token> _52551_tokens,_1da81133a_Token _52568_err_token) {
	if (_52551_tokens.len() == 0LL) {
		(*this)._method_push_err(_52568_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_52532_args.push((*this)._method_build_from_tokens(_52551_tokens));
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _1db4ca7d9_ExprBuilder::_method_build_args(jule::Slice<_1da81133a_Token> _53433_tokens) {
	if (_53433_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_Expr>> _54017_args = nullptr;
	jule::Int _54117_last = 0LL;
	jule::Int _54217_range_n = 0LL;
	_53433_tokens=_53433_tokens.slice(1LL,_53433_tokens.len() - 1LL);
	{
		auto &expr = _53433_tokens;
		auto it = expr.begin();
		_iter_begin_5166580976:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_token = *it;
			{
				if (_1db4ca7d9_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4ca7d9_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5166586112:;
							{
								(_54217_range_n)++;
							}
						}
						else {
							_case_begin_5166584336:;
							{
								(_54217_range_n)--;
							}
						}
						_match_end_5166584432:;
					}
				}
				if ((_54217_range_n > 0LL) || (_1db4ca7d9_token._field_id != 8LLU)) {
					goto _iter_next_5166580976;
				}
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last,_1db4ca7d9_i),_1db4ca7d9_token);
				_54117_last=static_cast<jule::Int>(_1db4ca7d9_i + 1LL);
			}
			_iter_next_5166580976:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_5166580976;
		}
		_iter_end_5166580976:;
	}
	if (_54117_last < _53433_tokens.len()) {
		if (_54117_last == 0LL) {
			if (_53433_tokens.len() > 0LL) {
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last]);
			}
		} else {
			(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last - 1LL]);
		}
	}
	return _54017_args;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _1db4ca7d9_ExprBuilder::_method_build_call_generics(jule::Slice<_1da81133a_Token> _57742_tokens) {
	if (_57742_tokens.len() == 0LL) {
		return nullptr;
	}
	_57742_tokens=_57742_tokens.slice(1LL,_57742_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1da81133a_Token>> _58318_parts;
	jule::Slice<_203741197_Log> _58325_errs;
	std::tie(_58318_parts,_58325_errs) = _1c1526124_parts(_57742_tokens,8LLU,true);
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _58417_generics = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_58318_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_58325_errs);
	{
		auto &expr = _58318_parts;
		auto it = expr.begin();
		_iter_begin_5166601808:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4ca7d9_part = *it;
			{
				if (_1db4ca7d9_part.len() == 0LL) {
					goto _iter_next_5166601808;
				}
				jule::Int _59021_j = 0LL;
				jule::Ptr<_1da7b8e5d_TypeDecl> _59122_generic;
				std::tie(_59122_generic,std::ignore) = (*this)._field_p->_method_build_type(_1db4ca7d9_part,(&(_59021_j)),true);
				if (_59021_j < _1db4ca7d9_part.len()) {
					(*this)._method_push_err(_1db4ca7d9_part[_59021_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_58417_generics.push(_59122_generic);
			}
			_iter_next_5166601808:;
			++it;
			goto _iter_begin_5166601808;
		}
		_iter_end_5166601808:;
	}
	return _58417_generics;
}



inline jule::Ptr<_1da7b8e5d_FnCallExpr> _1db4ca7d9_ExprBuilder::_method_build_fn_call(_1da81133a_Token& _60137_token,jule::Ptr<_1db4ca7d9_CallData>& _60156_data) {
	return jule::new_struct<_1da7b8e5d_FnCallExpr>(new( std::nothrow ) _1da7b8e5d_FnCallExpr(_60137_token,(*this)._method_build_from_tokens(_60156_data->_field_expr_tokens),(*this)._method_build_call_generics(_60156_data->_field_generics_tokens),(*this)._method_build_args(_60156_data->_field_args_tokens),jule::Ptr<_1da7b8e5d_ScopeTree>()));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1da81133a_Token>& _61047_tokens) {
	_1da81133a_Token _61117_token = _61047_tokens[0LL];
	{
		auto &_match_expr{ _61117_token._field_id };
		if (_match_expr == 3LLU) {
			_case_begin_5166615632:;
			{
				{
					auto &_match_expr{ _61117_token._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_5166617200:;
						{
							jule::Ptr<_1da7b8e5d_CastExpr> _61625_expr = (*this)._method_try_build_cast(_61047_tokens);
							if (_61625_expr != nullptr) {
								return jule::Any(_61625_expr);
							}
						}
					}
					_match_end_5166615984:;
				}
			}
		}
		_match_end_5166615232:;
	}
	jule::Ptr<_1db4ca7d9_CallData> _62317_data = _1db4ca7d9_get_call_data(_61047_tokens);
	if (_62317_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_62317_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_61117_token,_62317_data));
}



inline jule::Ptr<_1da7b8e5d_UnsafeExpr> _1db4ca7d9_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1da81133a_Token> _63440_tokens) {
	_1da81133a_Token _63517_token = _63440_tokens[0LL];
	_63440_tokens=_63440_tokens.slice(1LL);
	jule::Int _63717_i = 0LL;
	jule::Slice<_1da81133a_Token> _63817_range_tokens = _1c1526124_range(_63717_i,jule::Str("{", 1),jule::Str("}", 1),_63440_tokens);
	if (_63817_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_63440_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_UnsafeExpr>(new( std::nothrow ) _1da7b8e5d_UnsafeExpr(_63517_token,(*this)._method_build_from_tokens(_63817_range_tokens)->_field_kind));
}



inline jule::Ptr<_1da7b8e5d_FnDecl> _1db4ca7d9_ExprBuilder::_method_build_anon_fn(jule::Slice<_1da81133a_Token>& _64937_tokens) {
	jule::Ptr<_1da7b8e5d_FnDecl> _65017_f = (*this)._field_p->_method_build_fn(_64937_tokens,false,false);
	if ((!(_65017_f->_method_is_anon()))) {
		(*this)._method_push_err(_65017_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _65017_f;
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_unsafe(jule::Slice<_1da81133a_Token>& _65836_tokens) {
	{
		auto &_match_expr{ _65836_tokens[1LL]._field_id };
		if (_match_expr == 33LLU) {
			_case_begin_5166644512:;
			{
				return jule::Any((*this)._method_build_anon_fn(_65836_tokens));
			}
		}
		else {
			_case_begin_5166641696:;
			{
				return jule::Any((*this)._method_build_unsafe_expr(_65836_tokens));
			}
		}
		_match_end_5166642480:;
	}
}



inline void _1db4ca7d9_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1da81133a_Token> _66942_part,_1da81133a_Token _6709_error_token,jule::Slice<jule::Slice<_1da81133a_Token>>& _67034_parts) {
	if (_66942_part.len() == 0LL) {
		(*this)._method_push_err(_6709_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_67034_parts.push(_66942_part);
}



inline jule::Slice<jule::Slice<_1da81133a_Token>> _1db4ca7d9_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1da81133a_Token> _68053_tokens) {
	if (_68053_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1da81133a_Token>> _68617_parts = nullptr;
	jule::Int _68817_last = 0LL;
	jule::Int _68917_range_n = 0LL;
	_68053_tokens=_68053_tokens.slice(1LL,_68053_tokens.len() - 1LL);
	{
		auto &expr = _68053_tokens;
		auto it = expr.begin();
		_iter_begin_5166657968:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_token = *it;
			{
				if (_1db4ca7d9_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1db4ca7d9_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5166663104:;
							{
								(_68917_range_n)++;
							}
						}
						else {
							_case_begin_5166661328:;
							{
								(_68917_range_n)--;
							}
						}
						_match_end_5166661424:;
					}
				}
				if ((_68917_range_n > 0LL) || (_1db4ca7d9_token._field_id != 8LLU)) {
					goto _iter_next_5166657968;
				}
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last,_1db4ca7d9_i),_1db4ca7d9_token,_68617_parts);
				_68817_last=static_cast<jule::Int>(_1db4ca7d9_i + 1LL);
			}
			_iter_next_5166657968:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_5166657968;
		}
		_iter_end_5166657968:;
	}
	if (_68817_last < _68053_tokens.len()) {
		if (_68817_last == 0LL) {
			if (_68053_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last],_68617_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last - 1LL],_68617_parts);
		}
	}
	return _68617_parts;
}



inline jule::Ptr<_1da7b8e5d_FieldExprPair> _1db4ca7d9_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1da81133a_Token> _72344_tokens) {
	if ((_72344_tokens.len() - 2LL) == 0LL) {
		(*this)._method_push_err(_72344_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_FieldExprPair> _72817_pair = jule::new_struct<_1da7b8e5d_FieldExprPair>(new( std::nothrow ) _1da7b8e5d_FieldExprPair(_72344_tokens[0LL],jule::Any()));
	_72344_tokens=_72344_tokens.slice(2LL);
	_72817_pair->_field_expr=(*this)._method_build_from_tokens(_72344_tokens)->_field_kind;
	return _72817_pair;
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1da81133a_Token>& _73645_tokens) {
	_1da81133a_Token _73717_token = _73645_tokens[0LL];
	if (_73717_token._field_id == 2LLU) {
		if (_73645_tokens.len() > 1LL) {
			_73717_token=_73645_tokens[1LL];
			if (_73717_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_73645_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_73645_tokens));
}



inline jule::Slice<jule::Any> _1db4ca7d9_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1da81133a_Token>& _74946_tokens) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _75017_parts = (*this)._method_get_brace_range_lit_expr_parts(_74946_tokens);
	if (_75017_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75517_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_75017_parts.len()));
	{
		auto &expr = _75017_parts;
		auto it = expr.begin();
		_iter_begin_5166690320:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4ca7d9_part = *it;
			{
				_75517_pairs.push((*this)._method_build_struct_lit_expr(_1db4ca7d9_part));
			}
			_iter_next_5166690320:;
			++it;
			goto _iter_begin_5166690320;
		}
		_iter_end_5166690320:;
	}
	return _75517_pairs;
}



inline jule::Ptr<_1da7b8e5d_StructLit> _1db4ca7d9_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1da81133a_Token> _76249_tokens) {
	jule::Int _76317_i = 0LL;
	jule::Ptr<_1da7b8e5d_TypeDecl> _76418_t;
	jule::Bool _76421_ok;
	std::tie(_76418_t,_76421_ok) = (*this)._field_p->_method_build_type(_76249_tokens,(&(_76317_i)),true);
	if ((!(_76421_ok))) {
		return nullptr;
	} else if (_76317_i >= _76249_tokens.len()) {
		(*this)._method_push_err(_76249_tokens[_76317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_76249_tokens=_76249_tokens.slice(_76317_i);
	_1da81133a_Token _77313_token = _76249_tokens[0LL];
	if ((_77313_token._field_id != 3LLU) || (_77313_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_77313_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_StructLit>(new( std::nothrow ) _1da7b8e5d_StructLit(_76418_t,(*this)._method_build_struct_lit_exprs(_76249_tokens)));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1da81133a_Token>& _78544_tokens) {
	jule::Slice<_1da81133a_Token> _78618_l;
	jule::Slice<_1da81133a_Token> _78625_r;
	std::tie(_78618_l,_78625_r) = _1db4ca7d9_split_colon(_78544_tokens);
	if (_78618_l != nullptr) {
		return jule::Any(jule::new_struct<_1da7b8e5d_KeyValPair>(new( std::nothrow ) _1da7b8e5d_KeyValPair((*this)._method_build_from_tokens(_78618_l)->_field_kind,(*this)._method_build_from_tokens(_78625_r)->_field_kind,_78544_tokens[_78618_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_78544_tokens));
}



inline jule::Ptr<_1da7b8e5d_BraceLit> _1db4ca7d9_ExprBuilder::_method_build_brace_lit(jule::Slice<_1da81133a_Token>& _79839_tokens) {
	jule::Ptr<_1da7b8e5d_BraceLit> _79917_lit = jule::new_struct<_1da7b8e5d_BraceLit>(new( std::nothrow ) _1da7b8e5d_BraceLit(_79839_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1da81133a_Token>> _80317_parts = (*this)._method_get_brace_range_lit_expr_parts(_79839_tokens);
	if (_80317_parts == nullptr) {
		return _79917_lit;
	}
	_79917_lit->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_80317_parts.len()));
	{
		auto &expr = _80317_parts;
		auto it = expr.begin();
		_iter_begin_5166718912:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4ca7d9_part = *it;
			{
				_79917_lit->_field_exprs = jule::alloc_for_append(_79917_lit->_field_exprs,1);_79917_lit->_field_exprs.push((*this)._method_build_brace_lit_part(_1db4ca7d9_part));
			}
			_iter_next_5166718912:;
			++it;
			goto _iter_begin_5166718912;
		}
		_iter_end_5166718912:;
	}
	return _79917_lit;
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_brace_range(jule::Slice<_1da81133a_Token>& _81641_tokens) {
	jule::Slice<_1da81133a_Token> _81718_expr_tokens;
	jule::Int _81731_range_n;
	std::tie(_81718_expr_tokens,_81731_range_n) = _1db4ca7d9_get_range_expr_tokens(_81641_tokens);
	{
		if (_81718_expr_tokens.len() == 0LL) {
			_case_begin_5166724496:;
			{
				return jule::Any((*this)._method_build_brace_lit(_81641_tokens));
			}
		}
		else if (_81731_range_n > 0LL) {
			_case_begin_5166724592:;
			{
				(*this)._method_push_err(_81641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5166724368:;
	}
	_1da81133a_Token _82913_else_token = _81718_expr_tokens[_81718_expr_tokens.len() - 1LL];
	if (_81718_expr_tokens[_81718_expr_tokens.len() - 1LL]._field_id == 17LLU) {
		_81718_expr_tokens=_81718_expr_tokens.slice(0LL,_81718_expr_tokens.len() - 1LL);
		jule::Any _83221_d = (*this)._method_build(_81718_expr_tokens);
		if (_83221_d == nullptr) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _83221_d };
			if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>()) {
				_case_begin_5166733024:;
				{
					_81641_tokens=_81641_tokens.slice(_81718_expr_tokens.len() + 1LL);
					jule::Int _83925_i = 0LL;
					jule::Slice<_1da81133a_Token> _84025_range_tokens = _1c1526124_range(_83925_i,jule::Str("{", 1),jule::Str("}", 1),_81641_tokens);
					jule::Ptr<_1da7b8e5d_FnCallExpr> _84125_model = _83221_d.operator jule::Ptr<_1da7b8e5d_FnCallExpr>();
					if (_84125_model->_method_ignored()) {
						(*this)._method_push_err(_82913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_84125_model->_field_exception=(*this)._field_p->_method_build_scope(_84025_range_tokens);
					return _83221_d;
				}
			}
			else {
				_case_begin_5166734000:;
				{
					(*this)._method_push_err(_81718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_5166731168:;
		}
	}
	{
		auto &_match_expr{ _81718_expr_tokens[0LL]._field_id };
		if (_match_expr == 35LLU) {
			_case_begin_5166747344:;
			{
				return (*this)._method_build_unsafe(_81641_tokens);
			}
		}
		else if (_match_expr == 33LLU) {
			_case_begin_5166748960:;
			{
				return jule::Any((*this)._method_build_anon_fn(_81641_tokens));
			}
		}
		else if (_match_expr == 2LLU || _match_expr == 31LLU) {
			_case_begin_5166748688:;
			{
				return jule::Any((*this)._method_build_typed_struct_literal(_81641_tokens));
			}
		}
		else {
			_case_begin_5166745808:;
			{
				(*this)._method_push_err(_81718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5166746144:;
	}
}



inline jule::Slice<jule::Slice<_1da81133a_Token>> _1db4ca7d9_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1da81133a_Token> _87343_tokens) {
	_87343_tokens=_87343_tokens.slice(1LL,_87343_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1da81133a_Token>> _87518_parts;
	jule::Slice<_203741197_Log> _87525_errors;
	std::tie(_87518_parts,_87525_errors) = _1c1526124_parts(_87343_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_87525_errors);
	return _87518_parts;
}



inline jule::Ptr<_1da7b8e5d_SliceExpr> _1db4ca7d9_ExprBuilder::_method_build_slice(jule::Slice<_1da81133a_Token> _88034_tokens) {
	jule::Ptr<_1da7b8e5d_SliceExpr> _88117_slc = jule::new_struct<_1da7b8e5d_SliceExpr>(new( std::nothrow ) _1da7b8e5d_SliceExpr(_88034_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1da81133a_Token>> _88517_parts = (*this)._method_get_enumerable_parts(_88034_tokens);
	if (_88517_parts.len() == 0LL) {
		return _88117_slc;
	}
	_88117_slc->_field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_88517_parts.len()));
	{
		auto &expr = _88517_parts;
		auto it = expr.begin();
		_iter_begin_5166765264:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1db4ca7d9_p = *it;
			{
				_88117_slc->_field_elems = jule::alloc_for_append(_88117_slc->_field_elems,1);_88117_slc->_field_elems.push((*this)._method_build_from_tokens(_1db4ca7d9_p)->_field_kind);
			}
			_iter_next_5166765264:;
			++it;
			goto _iter_begin_5166765264;
		}
		_iter_end_5166765264:;
	}
	return _88117_slc;
}



inline jule::Ptr<_1da7b8e5d_IndexingExpr> _1db4ca7d9_ExprBuilder::_method_build_indexing(jule::Slice<_1da81133a_Token> _89837_expr_tokens,jule::Slice<_1da81133a_Token> _89913_tokens,_1da81133a_Token _89934_error_token) {
	_89913_tokens=_89913_tokens.slice(1LL,_89913_tokens.len() - 1LL);
	return jule::new_struct<_1da7b8e5d_IndexingExpr>(new( std::nothrow ) _1da7b8e5d_IndexingExpr(_89934_error_token,(*this)._method_build_from_tokens(_89837_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89913_tokens)->_field_kind));
}



inline jule::Ptr<_1da7b8e5d_SlicingExpr> _1db4ca7d9_ExprBuilder::_method_build_slicing(jule::Slice<_1da81133a_Token>& _90837_expr_tokens,jule::Slice<_1da81133a_Token>& _90864_slicing_tokens,jule::Int& _90910_colon,_1da81133a_Token& _90927_error_token) {
	jule::Ptr<_1da7b8e5d_SlicingExpr> _91017_slc = jule::new_struct<_1da7b8e5d_SlicingExpr>(new( std::nothrow ) _1da7b8e5d_SlicingExpr(_90927_error_token,(*this)._method_build_from_tokens(_90837_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1da81133a_Token> _91517_start_expr_tokens = _90864_slicing_tokens.slice(0LL,_90910_colon);
	if (_91517_start_expr_tokens.len() > 0LL) {
		_91017_slc->_field_start=(*this)._method_build_from_tokens(_91517_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1da81133a_Token> _92017_to_expr_tokens = _90864_slicing_tokens.slice(_90910_colon + 1LL);
	if (_92017_to_expr_tokens.len() > 0LL) {
		_91017_slc->_field_to=(*this)._method_build_from_tokens(_92017_to_expr_tokens)->_field_kind;
	}
	return _91017_slc;
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_bracket_range(jule::Slice<_1da81133a_Token> _92842_tokens) {
	_1da81133a_Token _92917_error_token = _92842_tokens[0LL];
	jule::Slice<_1da81133a_Token> _93018_expr_tokens;
	jule::Int _93031_range_n;
	std::tie(_93018_expr_tokens,_93031_range_n) = _1db4ca7d9_get_range_expr_tokens(_92842_tokens);
	{
		if (_93018_expr_tokens.len() == 0LL) {
			_case_begin_5166788704:;
			{
				return jule::Any((*this)._method_build_slice(_92842_tokens));
			}
		}
		else if ((_93018_expr_tokens.len() == 0LL) || (_93031_range_n > 0LL)) {
			_case_begin_5166788816:;
			{
				(*this)._method_push_err(_92917_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5166788544:;
	}
	_92842_tokens=_92842_tokens.slice(_93018_expr_tokens.len());
	jule::Int _94917_i = 0LL;
	jule::Slice<_1da81133a_Token> _95018_slicing_tokens;
	jule::Int _95034_colon;
	std::tie(_95018_slicing_tokens,_95034_colon) = _1c163edb9_split_map_range(_92842_tokens,_94917_i);
	if (_95034_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_93018_expr_tokens,_95018_slicing_tokens,_95034_colon,_92917_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_93018_expr_tokens,_92842_tokens,_92917_error_token));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_ternary(jule::Slice<_1da81133a_Token> _95736_tokens) {
	jule::Ptr<_1da7b8e5d_TernaryExpr> _95817_ter = jule::new_struct<_1da7b8e5d_TernaryExpr>(new( std::nothrow ) _1da7b8e5d_TernaryExpr());
	_95817_ter->_field_token=_95736_tokens[0LL];
	_95736_tokens=_95736_tokens.slice(1LL);
	jule::Slice<_1da81133a_Token> _96217_expr_tokens = _1db4ca7d9_get_block_expr(_95736_tokens);
	if (_96217_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_95817_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_95817_ter->_field_condition=(*this)._method_build_kind(_96217_expr_tokens);
	jule::I64 _96917_i = _96217_expr_tokens.len();
	jule::Slice<_1da81133a_Token> _97017_true_expr = _1c1526124_range(_96917_i,jule::Str("{", 1),jule::Str("}", 1),_95736_tokens);
	if (_97017_true_expr == nullptr) {
		(*this)._method_push_err(_95817_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	} else if (_97017_true_expr.len() == 0LL) {
		(*this)._method_push_err(_95736_tokens[_96217_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96917_i >= _95736_tokens.len()) {
		(*this)._method_push_err(_95817_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	}
	_1da81133a_Token _98413_else_token = _95736_tokens[_96917_i];
	if (_98413_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_98413_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	}
	(_96917_i)++;
	jule::I64 _99213_j = _96917_i;
	jule::Slice<_1da81133a_Token> _99317_false_expr = _1c1526124_range(_96917_i,jule::Str("{", 1),jule::Str("}", 1),_95736_tokens);
	if (_99317_false_expr == nullptr) {
		(*this)._method_push_err(_98413_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	} else if (_99317_false_expr.len() == 0LL) {
		(*this)._method_push_err(_95736_tokens[_99213_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96917_i < _95736_tokens.len()) {
		(*this)._method_push_err(_95736_tokens[_96917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_95817_ter->_field_true_expr=(*this)._method_build_kind(_97017_true_expr);
	_95817_ter->_field_false_expr=(*this)._method_build_kind(_99317_false_expr);
	return jule::Any(_95817_ter);
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_data(jule::Slice<_1da81133a_Token>& _101234_tokens) {
	{
		auto _match_expr{ _101234_tokens.len() };
		if (_match_expr == 0LL) {
			_case_begin_5166831168:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_5166831264:;
			{
				return (*this)._method_build_single(_101234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_5166831360:;
			{
				if (_101234_tokens[0LL]._field_id == 31LLU) {
					return jule::Any((*this)._method_build_cpp_linked_ident(_101234_tokens));
				}
			}
		}
		_match_end_5166830784:;
	}
	_1da81133a_Token _102617_token = _101234_tokens[0LL];
	{
		auto &_match_expr{ _102617_token._field_id };
		if (_match_expr == 16LLU) {
			_case_begin_5166837936:;
			{
				return (*this)._method_build_ternary(_101234_tokens);
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5166838032:;
			{
				if ((_101234_tokens.len() > 1LL) && (_102617_token._field_kind == jule::Str("*", 1))) {
					_102617_token=_101234_tokens[1LL];
					if ((_102617_token._field_id == 1LLU) || (_102617_token._field_id == 35LLU)) {
						return jule::Any((*this)._method_build_type(_101234_tokens));
					}
				}
				return jule::Any((*this)._method_build_unary(_101234_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5166838128:;
			{
				if (_101234_tokens.len() < 3LL) {
					goto _match_end_5166837696;
				}
				if (_101234_tokens.len() > 3LL) {
					_1da81133a_Token _104921_t = _101234_tokens[_101234_tokens.len() - 1LL];
					if ((_104921_t._field_id == 3LLU) && (_104921_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_5166837696;
					}
				}
				_1da81133a_Token _105517_next = _101234_tokens[1LL];
				if ((_105517_next._field_id != 3LLU) || (_105517_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_5166837696;
				}
				return jule::Any((*this)._method_build_type(_101234_tokens));
			}
		}
		_match_end_5166837696:;
	}
	_102617_token=_101234_tokens[_101234_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102617_token._field_id };
		if (_match_expr == 2LLU) {
			_case_begin_5166838832:;
			{
				return (*this)._method_build_sub_ident(_101234_tokens);
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_5166838928:;
			{
				return jule::Any((*this)._method_build_type(_101234_tokens));
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5166839024:;
			{
				return (*this)._method_build_op_right(_101234_tokens);
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5166852112:;
			{
				{
					auto &_match_expr{ _102617_token._field_kind };
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_5166855776:;
						{
							return (*this)._method_build_parentheses_range(_101234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_5166855872:;
						{
							return (*this)._method_build_brace_range(_101234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_5166857104:;
						{
							return (*this)._method_build_bracket_range(_101234_tokens);
						}
					}
					_match_end_5166855664:;
				}
			}
		}
		_match_end_5166838752:;
	}
	(*this)._method_push_err(_102617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1da7b8e5d_BinopExpr> _1db4ca7d9_ExprBuilder::_method_build_binop(jule::Slice<_1da81133a_Token>& _109235_tokens,jule::Int _109252_i) {
	jule::Slice<_1da81133a_Token> _109317_left_tokens = _109235_tokens.slice(0LL,_109252_i);
	jule::Slice<_1da81133a_Token> _109417_right_tokens = _109235_tokens.slice(_109252_i + 1LL);
	if (_109317_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_109235_tokens[_109252_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_109417_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_109235_tokens[_109252_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_BinopExpr>(new( std::nothrow ) _1da7b8e5d_BinopExpr((*this)._method_build(_109317_left_tokens),(*this)._method_build(_109417_right_tokens),_109235_tokens[_109252_i]));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build(jule::Slice<_1da81133a_Token>& _111529_tokens) {
	jule::Int _111613_i = _1db4ca7d9_find_lowest_prec_op(_111529_tokens);
	if (_111613_i == -1LL) {
		return (*this)._method_build_data(_111529_tokens);
	}
	return jule::Any((*this)._method_build_binop(_111529_tokens,_111613_i));
}



inline jule::Any _1db4ca7d9_ExprBuilder::_method_build_kind(jule::Slice<_1da81133a_Token>& _112334_tokens) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _112418_parts;
	jule::Slice<_203741197_Log> _112425_errors;
	std::tie(_112418_parts,_112425_errors) = _1c1526124_parts(_112334_tokens,8LLU,true);
	if (_112425_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_112425_errors);
		return jule::Any(nullptr);
	} else if (_112418_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_112418_parts));
	}
	return (*this)._method_build(_112334_tokens);
}



inline jule::Ptr<_1da7b8e5d_Expr> _1db4ca7d9_ExprBuilder::_method_build_from_tokens(jule::Slice<_1da81133a_Token> _113440_tokens) {
	_113440_tokens=_1db4ca7d9_eliminate_comments(_113440_tokens);
	if (_113440_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_Expr>(new( std::nothrow ) _1da7b8e5d_Expr(_113440_tokens[0LL],(*this)._method_build_kind(_113440_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4ca7d9_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1c1526124_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



inline jule::Bool _1c1526124_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



inline void _1c1526124_Parser::_method_push_err(_1da81133a_Token _23927_token,jule::Str _23941_fmt,jule::Slice<jule::Any> _23954_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1c1526124_compiler_err(_23927_token,_23941_fmt,_23954_args));
}



inline void _1c1526124_Parser::_method_push_suggestion(jule::Str _24434_fmt,jule::Slice<jule::Any> _24447_args) {
	{
		_1c1526124_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24434_fmt,_24447_args);
	}
}



inline jule::Ptr<_1da7b8e5d_Expr> _1c1526124_Parser::_method_build_expr(jule::Slice<_1da81133a_Token>& _24835_tokens) {
	jule::Ptr<_1db4ca7d9_ExprBuilder> _24917_ep = jule::new_struct<_1db4ca7d9_ExprBuilder>(new( std::nothrow ) _1db4ca7d9_ExprBuilder(this->self));
	jule::Ptr<_1da7b8e5d_Expr> _25017_expr = _24917_ep->_method_build_from_tokens(_24835_tokens);
	return _25017_expr;
}



inline jule::Ptr<_1da7b8e5d_Directive> _1c1526124_Parser::_method_build_directive(jule::Slice<_1da81133a_Token> _25438_tokens) {
	if (_25438_tokens.len() == 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25438_tokens[1LL]._field_column != (_25438_tokens[0LL]._field_column + 1LL)) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_Directive>(new( std::nothrow ) _1da7b8e5d_Directive(_25438_tokens[1LL],_25438_tokens.slice(2LL)));
}



inline void _1c1526124_Parser::_method_push_directive(jule::Ptr<_1da7b8e5d_Directive> _27137_d) {
	if (_27137_d == nullptr) {
		return;
	}
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_5166913232:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> &_1c1526124_pd = *it;
			{
				if (_27137_d->_field_tag._field_kind == _1c1526124_pd->_field_tag._field_kind) {
					return;
				}
			}
			_iter_next_5166913232:;
			++it;
			goto _iter_begin_5166913232;
		}
		_iter_end_5166913232:;
	}
	(*this)._field_directives = jule::alloc_for_append((*this)._field_directives,1);(*this)._field_directives.push(_27137_d);
}



inline jule::Ptr<_1da7b8e5d_ScopeTree> _1c1526124_Parser::_method_build_scope(jule::Slice<_1da81133a_Token>& _28536_tokens) {
	jule::Ptr<_1da7b8e5d_ScopeTree> _28617_s = _1db4a8553_new_scope();
	_1db4a8553_ScopeParser _28717_sp = _1db4a8553_ScopeParser(this->self,jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Slice<jule::Ptr<_1db4a8553_Stmt>>(),jule::Int());
	_28717_sp._method_build(_28536_tokens,_28617_s);
	return _28617_s;
}



inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _1c1526124_Parser::_method___build_type(jule::Slice<_1da81133a_Token>& _29444_tokens,jule::Int* _29513_i,jule::Bool _29522_err) {
	_1c163edb9_TypeBuilder _29617_tb = _1c163edb9_TypeBuilder(this->self,_29444_tokens,_29513_i,_29522_err);
	jule::Ptr<_1da7b8e5d_TypeDecl> _30218_decl;
	jule::Bool _30224_ok;
	std::tie(_30218_decl,_30224_ok) = _29617_tb._method_build();
	return std::make_tuple(_30218_decl,_30224_ok);
}



inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _1c1526124_Parser::_method_build_type(jule::Slice<_1da81133a_Token>& _30742_tokens,jule::Int* _30813_i,jule::Bool _30822_err) {
	_1da81133a_Token _30913_token = _30742_tokens[(*(_30813_i))];
	jule::Ptr<_1da7b8e5d_TypeDecl> _31018_t;
	jule::Bool _31021_ok;
	std::tie(_31018_t,_31021_ok) = this->self->_method___build_type(_30742_tokens,_30813_i,_30822_err);
	if (_30822_err && (!(_31021_ok))) {
		this->self->_method_push_err(_30913_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_31018_t,_31021_ok);
}



inline jule::Ptr<_1da7b8e5d_TypeAliasDecl> _1c1526124_Parser::_method_build_type_alias_decl(jule::Slice<_1da81133a_Token>& _31746_tokens) {
	jule::Int _31817_i = 1LL;
	if (_31817_i >= _31746_tokens.len()) {
		this->self->_method_push_err(_31746_tokens[_31817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_TypeAliasDecl> _32317_tad = jule::new_struct<_1da7b8e5d_TypeAliasDecl>(new( std::nothrow ) _1da7b8e5d_TypeAliasDecl(jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Bool(),jule::Bool(),_31746_tokens[1LL],_31746_tokens[1LL]._field_kind,jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::Ptr<_1da7b8e5d_CommentGroup>()));
	_1da81133a_Token _32717_token = _31746_tokens[_31817_i];
	if (_32717_token._field_id != 2LLU) {
		this->self->_method_push_err(_32717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_31817_i)++;
	if (_31817_i >= _31746_tokens.len()) {
		this->self->_method_push_err(_31746_tokens[_31817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32317_tad;
	}
	_32717_token=_31746_tokens[_31817_i];
	if (_32717_token._field_id != 11LLU) {
		this->self->_method_push_err(_31746_tokens[_31817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32317_tad;
	}
	(_31817_i)++;
	if (_31817_i >= _31746_tokens.len()) {
		this->self->_method_push_err(_31746_tokens[_31817_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return _32317_tad;
	}
	jule::Ptr<_1da7b8e5d_TypeDecl> _34818_t;
	jule::Bool _34821_ok;
	std::tie(_34818_t,_34821_ok) = this->self->_method_build_type(_31746_tokens,(&(_31817_i)),true);
	_32317_tad->_field_kind=_34818_t;
	if (_34821_ok && (_31817_i < _31746_tokens.len())) {
		this->self->_method_push_err(_31746_tokens[_31817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _32317_tad;
}



inline void _1c1526124_Parser::_method_build_var_type_and_expr(jule::Ptr<_1da7b8e5d_VarDecl>& _35648_v,jule::Slice<_1da81133a_Token>& _35666_tokens) {
	jule::Int _35717_i = 0LL;
	_1da81133a_Token _35817_tok = _35666_tokens[_35717_i];
	if (_35817_tok._field_id == 11LLU) {
		(_35717_i)++;
		if ((_35717_i >= _35666_tokens.len()) || ((_35666_tokens[_35717_i]._field_id == 7LLU) && (_35666_tokens[_35717_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_35817_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1da7b8e5d_TypeDecl> _36622_t;
		jule::Bool _36625_ok;
		std::tie(_36622_t,_36625_ok) = this->self->_method_build_type(_35666_tokens,(&(_35717_i)),true);
		if (_36625_ok) {
			_35648_v->_field_kind=_36622_t;
			if (_35717_i >= _35666_tokens.len()) {
				return;
			}
			_35817_tok=_35666_tokens[_35717_i];
		}
	}
	if (_35817_tok._field_id == 7LLU) {
		if (_35817_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_35817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_1da81133a_Token> _38121_expr_tokens = _35666_tokens.slice(_35717_i + 1LL);
		if (_38121_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_35817_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_35648_v->_field_expr=this->self->_method_build_expr(_38121_expr_tokens);
	} else {
		this->self->_method_push_err(_35817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1c1526124_Parser::_method_build_var_common(jule::Ptr<_1da7b8e5d_VarDecl>& _39241_v,jule::Slice<_1da81133a_Token> _39258_tokens) {
	_39241_v->_field_token=_39258_tokens[0LL];
	if (_39241_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_39241_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_39241_v->_field_ident=_39241_v->_field_token._field_kind;
	_39241_v->_field_kind=nullptr;
	if (_39258_tokens.len() > 1LL) {
		_39258_tokens=_39258_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_39241_v,_39258_tokens);
	}
}



inline void _1c1526124_Parser::_method_build_var_begin(jule::Ptr<_1da7b8e5d_VarDecl>& _40739_v,jule::Ptr<jule::Int> _40756_i,jule::Slice<_1da81133a_Token>& _40766_tokens) {
	_1da81133a_Token _40813_tok = _40766_tokens[(*(_40756_i))];
	{
		auto &_match_expr{ _40813_tok._field_id };
		if (_match_expr == 38LLU) {
			_case_begin_5167003024:;
			{
				_40739_v->_field_statically=true;
				goto _case_begin_5167003120;
			}
		}
		else if (_match_expr == 34LLU) {
			_case_begin_5167003120:;
			{
				((*(_40756_i)))++;
				if ((*(_40756_i)) >= _40766_tokens.len()) {
					(*this)._method_push_err(_40813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_40766_tokens[(*(_40756_i))]._field_id == 36LLU) {
					_40739_v->_field_mutable=true;
					((*(_40756_i)))++;
				}
			}
		}
		else if (_match_expr == 9LLU) {
			_case_begin_5167001472:;
			{
				((*(_40756_i)))++;
				_40739_v->_field_constant=true;
			}
		}
		else {
			_case_begin_5167000064:;
			{
				(*this)._method_push_err(_40813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_5167000688:;
	}
	if ((*(_40756_i)) >= _40766_tokens.len()) {
		(*this)._method_push_err(_40813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1da7b8e5d_VarDecl> _1c1526124_Parser::_method_build_var(jule::Slice<_1da81133a_Token> _44133_tokens) {
	jule::Ptr<jule::Int> _44217_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_1da7b8e5d_VarDecl> _44317_v = jule::new_struct<_1da7b8e5d_VarDecl>(new( std::nothrow ) _1da7b8e5d_VarDecl(jule::Ptr<_1da7b8e5d_ScopeTree>(),_44133_tokens[(*(_44217_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1da7b8e5d_CommentGroup>(),jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::Ptr<_1da7b8e5d_Expr>()));
	this->self->_method_build_var_begin(_44317_v,_44217_i,_44133_tokens);
	if ((*(_44217_i)) >= _44133_tokens.len()) {
		return nullptr;
	}
	_44133_tokens=_44133_tokens.slice((*(_44217_i)));
	if ((_44133_tokens[0LL]._field_id == 7LLU) && (_44133_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_44317_v->_field_reference=true;
		if (_44133_tokens.len() == 1LL) {
			return nullptr;
		}
		_44133_tokens=_44133_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_44317_v,_44133_tokens);
	return _44317_v;
}



inline jule::Ptr<_1da7b8e5d_GenericDecl> _1c1526124_Parser::_method_build_generic(jule::Slice<_1da81133a_Token>& _46337_tokens) {
	if (_46337_tokens.len() > 1LL) {
		(*this)._method_push_err(_46337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1da7b8e5d_GenericDecl> _46717_g = jule::new_struct<_1da7b8e5d_GenericDecl>(new( std::nothrow ) _1da7b8e5d_GenericDecl(_46337_tokens[0LL],jule::Str()));
	if (_46717_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_46717_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_46717_g->_field_ident=_46717_g->_field_token._field_kind;
	return _46717_g;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _1c1526124_Parser::_method_build_generics(jule::Slice<_1da81133a_Token>& _47838_tokens,_1da81133a_Token& _47856_error_token) {
	if (_47838_tokens.len() == 0LL) {
		(*this)._method_push_err(_47856_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_1da81133a_Token>> _48418_parts;
	jule::Slice<_203741197_Log> _48425_errors;
	std::tie(_48418_parts,_48425_errors) = _1c1526124_parts(_47838_tokens,8LLU,true);
	if (_48425_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_48425_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _49017_generics = jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_48418_parts.len()));
	{
		auto &expr = _48418_parts;
		auto it = expr.begin();
		_iter_begin_5167039648:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1c1526124_part = *it;
			{
				_49017_generics.push((*this)._method_build_generic(_1c1526124_part));
			}
			_iter_next_5167039648:;
			++it;
			goto _iter_begin_5167039648;
		}
		_iter_end_5167039648:;
	}
	return _49017_generics;
}



inline jule::Ptr<_1da7b8e5d_ParamDecl> _1c1526124_Parser::_method_build_self_param(jule::Slice<_1da81133a_Token> _49839_tokens) {
	if (_49839_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_ParamDecl> _50317_param = jule::new_struct<_1da7b8e5d_ParamDecl>(new( std::nothrow ) _1da7b8e5d_ParamDecl());
	jule::Int _50617_i = 0LL;
	if (_49839_tokens[_50617_i]._field_id == 36LLU) {
		_50317_param->_field_mutable=true;
		(_50617_i)++;
		if (_50617_i >= _49839_tokens.len()) {
			(*this)._method_push_err(_49839_tokens[_50617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49839_tokens[_50617_i]._field_kind == jule::Str("&", 1)) {
		_50317_param->_field_ident=jule::Str("&", 1);
		(_50617_i)++;
		if (_50617_i >= _49839_tokens.len()) {
			(*this)._method_push_err(_49839_tokens[_50617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49839_tokens[_50617_i]._field_id == 28LLU) {
		_50317_param->_field_ident+=jule::Str("self", 4);
		_50317_param->_field_token=_49839_tokens[_50617_i];
		(_50617_i)++;
		if (_50617_i < _49839_tokens.len()) {
			(*this)._method_push_err(_49839_tokens[_50617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _50317_param;
}



inline void _1c1526124_Parser::_method_param_type_begin(jule::Ptr<_1da7b8e5d_ParamDecl>& _53740_param,jule::Int& _53764_i,jule::Slice<_1da81133a_Token>& _53773_tokens) {
	for (; _53764_i < _53773_tokens.len(); (_53764_i)++) {
		{
			_1da81133a_Token _53917_token = _53773_tokens[_53764_i];
			if (_53917_token._field_id != 7LLU) {
				return;
			} else if (_53917_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_53740_param->_field_variadic) {
				(*this)._method_push_err(_53917_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_5167060288;
			}
			_53740_param->_field_variadic=true;
		}
	_iter_next_5167060288:;
	}
	_iter_end_5167060288:;
}



inline void _1c1526124_Parser::_method_build_param_type(jule::Ptr<_1da7b8e5d_ParamDecl>& _55441_param,jule::Slice<_1da81133a_Token>& _55465_tokens) {
	jule::Int _55517_i = 0LL;
	this->self->_method_param_type_begin(_55441_param,_55517_i,_55465_tokens);
	if (_55517_i >= _55465_tokens.len()) {
		return;
	}
	std::tie(_55441_param->_field_kind,std::ignore) = this->self->_method_build_type(_55465_tokens,(&(_55517_i)),true);
	if (_55517_i < _55465_tokens.len()) {
		this->self->_method_push_err(_55465_tokens[_55517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1c1526124_Parser::_method_param_body_id(jule::Ptr<_1da7b8e5d_ParamDecl> _56732_param,_1da81133a_Token _56751_token) {
	if (_1da81133a_is_ignore_ident(_56751_token._field_kind)) {
		_56732_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_56732_param->_field_ident=_56751_token._field_kind;
}



inline void _1c1526124_Parser::_method_build_param_body(jule::Ptr<_1da7b8e5d_ParamDecl>& _57541_param,jule::Ptr<jule::Int> _57564_i,jule::Slice<_1da81133a_Token> _57577_tokens) {
	this->self->_method_param_body_id(_57541_param,_57577_tokens[(*(_57564_i))]);
	_1da81133a_Token _57717_tok = _57577_tokens[(*(_57564_i))];
	if (((*(_57564_i)) + 1LL) >= _57577_tokens.len()) {
		return;
	} else if (((_57577_tokens.len() - (*(_57564_i))) - 1LL) < 2LL) {
		this->self->_method_push_err(_57717_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return;
	}
	_57717_tok=_57577_tokens[(*(_57564_i)) + 1LL];
	if (_57717_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_57541_param,_57577_tokens);
		return;
	}
	_57577_tokens=_57577_tokens.slice((*(_57564_i)) + 2LL);
	this->self->_method_build_param_type(_57541_param,_57577_tokens);
}



inline jule::Ptr<_1da7b8e5d_ParamDecl> _1c1526124_Parser::_method_build_param(jule::Slice<_1da81133a_Token> _59635_tokens) {
	jule::Ptr<_1da7b8e5d_ParamDecl> _59717_param = jule::new_struct<_1da7b8e5d_ParamDecl>(new( std::nothrow ) _1da7b8e5d_ParamDecl(_59635_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::Str()));
	if (_59717_param->_field_token._field_id == 36LLU) {
		_59717_param->_field_mutable=true;
		if (_59635_tokens.len() == 1LL) {
			this->self->_method_push_err(_59635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_59635_tokens=_59635_tokens.slice(1LL);
		_59717_param->_field_token=_59635_tokens[0LL];
	}
	if (_59635_tokens.len() >= 3LL) {
		if ((_59717_param->_field_token._field_id == 7LLU) && (_59717_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_59635_tokens.len() == 1LL) {
				this->self->_method_push_err(_59635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_59635_tokens[1LL]._field_id == 2LLU) && (_59635_tokens[2LL]._field_id == 11LLU)) {
				_59717_param->_field_reference=true;
				_59635_tokens=_59635_tokens.slice(1LL);
				_59717_param->_field_token=_59635_tokens[0LL];
			}
		}
	}
	if (_59717_param->_field_token._field_id != 2LLU) {
		_59717_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_59717_param,_59635_tokens);
	} else {
		jule::Ptr<jule::Int> _63321_i = jule::new_ptr<jule::Int>(0LL);
		this->self->_method_build_param_body(_59717_param,_63321_i,_59635_tokens);
	}
	return _59717_param;
}



inline void _1c1526124_Parser::_method_check_params(jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>& _64036_params) {
	{
		auto &expr = _64036_params;
		auto it = expr.begin();
		_iter_begin_5167111040:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_ParamDecl> _1c1526124_param = *it;
			{
				if (_1c1526124_param->_method_is_self() || (_1c1526124_param->_field_kind != nullptr)) {
					goto _iter_next_5167111040;
				}
				if (_1c1526124_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1c1526124_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				} else {
					_1c1526124_param->_field_kind=jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1c1526124_param->_field_token,jule::Any(jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_1c1526124_param->_field_token,_1c1526124_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>())))));
					_1c1526124_param->_field_ident=jule::Str("<anonymous>", 11);
					_1c1526124_param->_field_token=_1da81133a_Token();
				}
			}
			_iter_next_5167111040:;
			++it;
			goto _iter_begin_5167111040;
		}
		_iter_end_5167111040:;
	}
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>> _1c1526124_Parser::_method_build_params(jule::Slice<_1da81133a_Token>& _66137_tokens,jule::Bool _66154_method) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _66218_parts;
	jule::Slice<_203741197_Log> _66225_errs;
	std::tie(_66218_parts,_66225_errs) = _1c1526124_parts(_66137_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_66225_errs);
	if (_66218_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>> _66817_params = nullptr;
	if (_66154_method && (_66218_parts.len() > 0LL)) {
		jule::Ptr<_1da7b8e5d_ParamDecl> _67021_param = this->self->_method_build_self_param(_66218_parts[0LL]);
		if ((_67021_param != nullptr) && _67021_param->_method_is_self()) {
			_66817_params.push(_67021_param);
			_66218_parts=_66218_parts.slice(1LL);
		}
	}
	{
		auto &expr = _66218_parts;
		auto it = expr.begin();
		_iter_begin_5167128944:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1c1526124_part = *it;
			{
				jule::Ptr<_1da7b8e5d_ParamDecl> _67821_param = this->self->_method_build_param(_1c1526124_part);
				if (_67821_param != nullptr) {
					_66817_params.push(_67821_param);
				}
			}
			_iter_next_5167128944:;
			++it;
			goto _iter_begin_5167128944;
		}
		_iter_end_5167128944:;
	}
	this->self->_method_check_params(_66817_params);
	return _66817_params;
}



inline std::tuple<jule::Ptr<_1da7b8e5d_RetTypeDecl>,jule::Bool> _1c1526124_Parser::_method_build_multi_ret_type(jule::Slice<_1da81133a_Token>& _68845_tokens,jule::Int& _68867_i) {
	jule::Ptr<_1da7b8e5d_RetTypeDecl> _68877_t = jule::Ptr<_1da7b8e5d_RetTypeDecl>();
	jule::Bool _68894_ok = jule::Bool();
	_68877_t=jule::new_struct<_1da7b8e5d_RetTypeDecl>(new( std::nothrow ) _1da7b8e5d_RetTypeDecl());
	(_68867_i)++;
	if (_68867_i >= _68845_tokens.len()) {
		(_68867_i)--;
		std::tie(_68877_t->_field_kind,_68894_ok) = this->self->_method_build_type(_68845_tokens,(&(_68867_i)),false);
		return std::make_tuple(_68877_t,_68894_ok);
	}
	(_68867_i)--;
	jule::Slice<_1da81133a_Token> _69817_range_tokens = _1c1526124_range(_68867_i,jule::Str("(", 1),jule::Str(")", 1),_68845_tokens);
	jule::Slice<jule::Slice<_1da81133a_Token>> _70018_parts;
	jule::Slice<_203741197_Log> _70025_errs;
	std::tie(_70018_parts,_70025_errs) = _1c1526124_parts(_69817_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_70025_errs);
	if (_70018_parts.len() == 0LL) {
		return std::make_tuple(_68877_t,_68894_ok);
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _70617_types = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_70018_parts.len()));
	_68877_t->_field_idents=jule::Slice<_1da81133a_Token>::alloc(0LL,static_cast<jule::I64>(_70018_parts.len()));
	{
		auto &expr = _70018_parts;
		auto it = expr.begin();
		_iter_begin_5167146176:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1c1526124_part = *it;
			{
				_1da81133a_Token _70921_token = _1c1526124_part[0LL];
				jule::Int _71021_offset = 0LL;
				if (_1c1526124_part.len() > 1LL) {
					_70921_token=_1c1526124_part[1LL];
					if (_70921_token._field_id == 11LLU) {
						_71021_offset=2LL;
						if (_1c1526124_part.len() < 3LL) {
							this->self->_method_push_err(_70921_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
							goto _iter_next_5167146176;
						}
					}
				}
				_70921_token=_1c1526124_part[0LL];
				if (_71021_offset == 2LL) {
					if (_70921_token._field_id != 2LLU) {
					}
					_68877_t->_field_idents = jule::alloc_for_append(_68877_t->_field_idents,1);_68877_t->_field_idents.push(_70921_token);
				} else {
					_70921_token._field_kind=jule::Str("_", 1);
					_68877_t->_field_idents = jule::alloc_for_append(_68877_t->_field_idents,1);_68877_t->_field_idents.push(_70921_token);
				}
				jule::Ptr<_1da7b8e5d_TypeDecl> _73522_t;
				std::tie(_73522_t,std::ignore) = this->self->_method_build_type(_1c1526124_part,(&(_71021_offset)),true);
				if (_71021_offset < _1c1526124_part.len()) {
					this->self->_method_push_err(_1c1526124_part[_71021_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_70617_types.push(_73522_t);
			}
			_iter_next_5167146176:;
			++it;
			goto _iter_begin_5167146176;
		}
		_iter_end_5167146176:;
	}
	if (_70617_types.len() > 1LL) {
		_68877_t->_field_kind=jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_68845_tokens[0LL],jule::Any(jule::new_struct<_1da7b8e5d_TupleTypeDecl>(new( std::nothrow ) _1da7b8e5d_TupleTypeDecl(_70617_types)))));
	} else {
		_68877_t->_field_kind=_70617_types[0LL];
	}
	_68894_ok=true;
	return std::make_tuple(_68877_t,_68894_ok);
}



inline std::tuple<jule::Ptr<_1da7b8e5d_RetTypeDecl>,jule::Bool> _1c1526124_Parser::_method_build_ret_type(jule::Slice<_1da81133a_Token>& _75839_tokens,jule::Int& _75861_i) {
	jule::Ptr<_1da7b8e5d_RetTypeDecl> _75871_t = jule::Ptr<_1da7b8e5d_RetTypeDecl>();
	jule::Bool _75888_ok = jule::Bool();
	_75871_t=jule::new_struct<_1da7b8e5d_RetTypeDecl>(new( std::nothrow ) _1da7b8e5d_RetTypeDecl());
	if (_75861_i >= _75839_tokens.len()) {
		return std::make_tuple(_75871_t,_75888_ok);
	}
	_1da81133a_Token _76417_token = _75839_tokens[_75861_i];
	{
		auto &_match_expr{ _76417_token._field_id };
		if (_match_expr == 3LLU) {
			_case_begin_5167170560:;
			{
				if (_76417_token._field_kind == jule::Str("{", 1)) {
					return std::make_tuple(_75871_t,_75888_ok);
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5167170656:;
			{
				if (_76417_token._field_kind == jule::Str("=", 1)) {
					return std::make_tuple(_75871_t,_75888_ok);
				}
			}
		}
		else if (_match_expr == 11LLU) {
			_case_begin_5167170800:;
			{
				if ((_75861_i + 1LL) >= _75839_tokens.len()) {
					this->self->_method_push_err(_76417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					return std::make_tuple(_75871_t,_75888_ok);
				}
				(_75861_i)++;
				_76417_token=_75839_tokens[_75861_i];
				if (_76417_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _76417_token._field_kind };
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_5167178176:;
							{
								jule::Ptr<_1da7b8e5d_RetTypeDecl> _78730_decl;
								jule::Bool _78736_ok;
								std::tie(_78730_decl,_78736_ok) = this->self->_method_build_multi_ret_type(_75839_tokens,_75861_i);
								_75871_t = _78730_decl;
								_75888_ok = _78736_ok;
								return std::make_tuple(_75871_t,_75888_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_5167178272:;
							{
								this->self->_method_push_err(_76417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
								return std::make_tuple(_75871_t,_75888_ok);
							}
						}
						_match_end_5167177024:;
					}
				}
				std::tie(_75871_t->_field_kind,_75888_ok) = this->self->_method_build_type(_75839_tokens,(&(_75861_i)),true);
				return std::make_tuple(_75871_t,_75888_ok);
			}
		}
		_match_end_5167170480:;
	}
	(_75861_i)++;
	this->self->_method_push_err(_76417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_75871_t,_75888_ok);
}



inline jule::Ptr<_1da7b8e5d_FnDecl> _1c1526124_Parser::_method_build_fn_prototype(jule::Slice<_1da81133a_Token>& _80643_tokens,jule::Int& _80665_i,jule::Bool _80673_method) {
	jule::Ptr<_1da7b8e5d_FnDecl> _80717_f = jule::new_struct<_1da7b8e5d_FnDecl>(new( std::nothrow ) _1da7b8e5d_FnDecl(_80643_tokens[_80665_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1da7b8e5d_CommentGroup>(),jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),jule::Ptr<_1da7b8e5d_RetTypeDecl>(),jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>()));
	if (_80717_f->_field_token._field_id == 38LLU) {
		_80717_f->_field_statically=true;
		(_80665_i)++;
		if (_80665_i >= _80643_tokens.len()) {
			this->self->_method_push_err(_80717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_80717_f->_field_token=_80643_tokens[_80665_i];
	}
	if (_80717_f->_field_token._field_id == 35LLU) {
		_80717_f->_field_unsafety=true;
		(_80665_i)++;
		if (_80665_i >= _80643_tokens.len()) {
			this->self->_method_push_err(_80717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_80717_f->_field_token=_80643_tokens[_80665_i];
	}
	(_80665_i)++;
	if (_80665_i >= _80643_tokens.len()) {
		this->self->_method_push_err(_80717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1da81133a_Token _84013_tok = _80643_tokens[_80665_i];
	if (_84013_tok._field_id == 2LLU) {
		(_80665_i)++;
		if (_80665_i >= _80643_tokens.len()) {
			this->self->_method_push_err(_80717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_80717_f->_field_ident=_84013_tok._field_kind;
	} else {
		_80717_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1da81133a_Token _85213_error_token = _80643_tokens[_80665_i];
	jule::Slice<_1da81133a_Token> _85317_generics_tokens = _1c1526124_range(_80665_i,jule::Str("[", 1),jule::Str("]", 1),_80643_tokens);
	if (_85317_generics_tokens != nullptr) {
		_80717_f->_field_generics=this->self->_method_build_generics(_85317_generics_tokens,_85213_error_token);
	}
	if (_80643_tokens[_80665_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_80643_tokens[_80665_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1da81133a_Token> _86317_params_toks = _1c1526124_range(_80665_i,jule::Str("(", 1),jule::Str(")", 1),_80643_tokens);
	if (_86317_params_toks.len() > 0LL) {
		_80717_f->_field_params=this->self->_method_build_params(_86317_params_toks,_80673_method);
	}
	if (_80665_i < _80643_tokens.len()) {
		_1da81133a_Token _86917_token = _80643_tokens[_80665_i];
		if ((_86917_token._field_id == 7LLU) && (_86917_token._field_kind == jule::Str("!", 1))) {
			_80717_f->_field_exceptional=true;
			(_80665_i)++;
		}
	}
	std::tie(_80717_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_80643_tokens,_80665_i);
	return _80717_f;
}



inline jule::Ptr<_1da7b8e5d_FnDecl> _1c1526124_Parser::_method_build_fn(jule::Slice<_1da81133a_Token>& _88233_tokens,jule::Bool _88250_method,jule::Bool _88264_prototype) {
	jule::Int _88317_i = 0LL;
	jule::Ptr<_1da7b8e5d_FnDecl> _88417_f = this->self->_method_build_fn_prototype(_88233_tokens,_88317_i,_88250_method);
	if (_88264_prototype) {
		if (_88317_i < _88233_tokens.len()) {
			this->self->_method_push_err(_88233_tokens[_88317_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _88417_f;
	} else if (_88417_f == nullptr) {
		return _88417_f;
	}
	if (_88317_i >= _88233_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_88417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1da81133a_Token> _90017_block_tokens = _1c1526124_range(_88317_i,jule::Str("{", 1),jule::Str("}", 1),_88233_tokens);
	if (_90017_block_tokens != nullptr) {
		_88417_f->_field_scope=this->self->_method_build_scope(_90017_block_tokens);
		_88417_f->_field_scope->_field_unsafety=_88417_f->_field_unsafety;
		if (_88317_i < _88233_tokens.len()) {
			this->self->_method_push_err(_88233_tokens[_88317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_88417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _88417_f;
}



inline jule::Slice<_1da81133a_Token> _1c1526124_Parser::_method_get_use_decl_selectors(jule::Slice<_1da81133a_Token> _91645_tokens) {
	jule::Int _91717_i = 0LL;
	_91645_tokens=_1c1526124_range(_91717_i,jule::Str("{", 1),jule::Str("}", 1),_91645_tokens);
	jule::Slice<jule::Slice<_1da81133a_Token>> _91918_parts;
	jule::Slice<_203741197_Log> _91925_errs;
	std::tie(_91918_parts,_91925_errs) = _1c1526124_parts(_91645_tokens,8LLU,true);
	if (_91925_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_91925_errs);
		return nullptr;
	}
	jule::Slice<_1da81133a_Token> _92517_selectors = jule::Slice<_1da81133a_Token>::alloc(0LL,static_cast<jule::I64>(_91918_parts.len()));
	{
		auto &expr = _91918_parts;
		auto it = expr.begin();
		_iter_begin_5167241696:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1c1526124_part = *it;
			{
				if (_1c1526124_part.len() > 1LL) {
					(*this)._method_push_err(_1c1526124_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_1da81133a_Token _93021_tok = _1c1526124_part[0LL];
				if ((_93021_tok._field_id != 2LLU) && (_93021_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_93021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_5167241696;
				}
				_92517_selectors.push(_93021_tok);
			}
			_iter_next_5167241696:;
			++it;
			goto _iter_begin_5167241696;
		}
		_iter_end_5167241696:;
	}
	return _92517_selectors;
}



inline void _1c1526124_Parser::_method_build_cpp_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>& _94142_decl,jule::Slice<_1da81133a_Token>& _94159_tokens) {
	if (_94159_tokens.len() > 1LL) {
		(*this)._method_push_err(_94159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1da81133a_Token _94513_token = _94159_tokens[0LL];
	if ((_94513_token._field_id != 6LLU) || ((_94513_token._field_kind[0LL] != '`') && (_94513_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_94513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_94142_decl->_field_cpp_linked=true;
	_94142_decl->_field_link_path=_94513_token._field_kind.slice(1LL,_94513_token._field_kind.len() - 1LL);
	if ((!(_20374065d_is_std_header_path(_94142_decl->_field_link_path)))) {
		_94142_decl->_field_link_path=_20525e312_join(jule::Slice<jule::Str>({_94513_token._field_file->_method_dir(),_94142_decl->_field_link_path}));
	}
}



inline void _1c1526124_Parser::_method_build_std_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>& _95742_decl,jule::Slice<_1da81133a_Token> _95762_tokens) {
	_95742_decl->_field_std=true;
	_1da81133a_Token _96017_token = _95762_tokens[0LL];
	if (_95762_tokens.len() < 3LL) {
		(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_95762_tokens=_95762_tokens.slice(2LL);
	_96017_token=_95762_tokens[_95762_tokens.len() - 1LL];
	{
		auto &_match_expr{ _96017_token._field_id };
		if (_match_expr == 23LLU) {
			_case_begin_5167270320:;
			{
				(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5167270416:;
			{
				if (_96017_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1da81133a_Token> _97821_selectors = nullptr;
				std::tie(_95762_tokens,_97821_selectors) = _1c1526124_range_last(_95762_tokens);
				_95742_decl->_field_selected=(*this)._method_get_use_decl_selectors(_97821_selectors);
				if (_95762_tokens.len() == 0LL) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96017_token=_95762_tokens[_95762_tokens.len() - 1LL];
				if (_96017_token._field_id != 23LLU) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95762_tokens=_95762_tokens.slice(0LL,_95762_tokens.len() - 1LL);
				if (_95762_tokens.len() == 0LL) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5167270512:;
			{
				if (_96017_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95762_tokens=_95762_tokens.slice(0LL,_95762_tokens.len() - 1LL);
				if (_95762_tokens.len() == 0LL) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96017_token=_95762_tokens[_95762_tokens.len() - 1LL];
				if (_96017_token._field_id != 23LLU) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95762_tokens=_95762_tokens.slice(0LL,_95762_tokens.len() - 1LL);
				if (_95762_tokens.len() == 0LL) {
					(*this)._method_push_err(_96017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95742_decl->_field_full=true;
			}
		}
		_match_end_5167270240:;
	}
	_95742_decl->_field_link_path=jule::Str("std::", 5) + _1c1526124_tokstoa(_95762_tokens);
}



inline void _1c1526124_Parser::_method_build_ident_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>& _102144_decl,jule::Slice<_1da81133a_Token> _102164_tokens) {
	_102144_decl->_field_std=false;
	_1da81133a_Token _102417_token = _102164_tokens[_102164_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102417_token._field_id };
		if (_match_expr == 23LLU) {
			_case_begin_5167296000:;
			{
				(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5167298272:;
			{
				if (_102417_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1da81133a_Token> _103621_selectors = nullptr;
				std::tie(_102164_tokens,_103621_selectors) = _1c1526124_range_last(_102164_tokens);
				_102144_decl->_field_selected=(*this)._method_get_use_decl_selectors(_103621_selectors);
				if (_102164_tokens.len() == 0LL) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102417_token=_102164_tokens[_102164_tokens.len() - 1LL];
				if (_102417_token._field_id != 23LLU) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102164_tokens=_102164_tokens.slice(0LL,_102164_tokens.len() - 1LL);
				if (_102164_tokens.len() == 0LL) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5167298368:;
			{
				if (_102417_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102164_tokens=_102164_tokens.slice(0LL,_102164_tokens.len() - 1LL);
				if (_102164_tokens.len() == 0LL) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102417_token=_102164_tokens[_102164_tokens.len() - 1LL];
				if (_102417_token._field_id != 23LLU) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102164_tokens=_102164_tokens.slice(0LL,_102164_tokens.len() - 1LL);
				if (_102164_tokens.len() == 0LL) {
					(*this)._method_push_err(_102417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102144_decl->_field_full=true;
			}
		}
		_match_end_5167298000:;
	}
	_102144_decl->_field_link_path=_1c1526124_tokstoa(_102164_tokens);
}



inline void _1c1526124_Parser::_method_parse_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>& _108638_decl,jule::Slice<_1da81133a_Token> _108658_tokens) {
	if (_108638_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_108638_decl,_108658_tokens);
		return;
	}
	_1da81133a_Token _109217_token = _108658_tokens[0LL];
	if (_109217_token._field_id != 2LLU) {
		(*this)._method_push_err(_109217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_108658_tokens.len() > 2LL) && (_108658_tokens[1LL]._field_id == 12LLU)) {
		_108638_decl->_field_alias=_109217_token._field_kind;
		if (_108658_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_109217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_108658_tokens=_108658_tokens.slice(2LL);
		_109217_token=_108658_tokens[0LL];
	}
	
	{
		if (_109217_token._field_kind == jule::Str("std", 3)) {
			_case_begin_5167336544:;
			{
				(*this)._method_build_std_use_decl(_108638_decl,_108658_tokens);
			}
		}
		else {
			_case_begin_5167335744:;
			{
				(*this)._method_build_ident_use_decl(_108638_decl,_108658_tokens);
			}
		}
		_match_end_5167335632:;
	}
}



inline jule::Ptr<_1da7b8e5d_UseDecl> _1c1526124_Parser::_method_build_use_decl(jule::Slice<_1da81133a_Token> _112137_tokens,jule::Bool _112154_cpp_linked) {
	jule::Ptr<_1da7b8e5d_UseDecl> _112217_decl = jule::new_struct<_1da7b8e5d_UseDecl>(new( std::nothrow ) _1da7b8e5d_UseDecl(_112137_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1da81133a_Token>(),_112154_cpp_linked,jule::Bool()));
	if (_112137_tokens.len() < 2LL) {
		(*this)._method_push_err(_112217_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_112137_tokens=_112137_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_112217_decl,_112137_tokens);
	return _112217_decl;
}



inline jule::Ptr<_1da7b8e5d_Expr> _1c1526124_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _113544_i,jule::Slice<_1da81133a_Token>& _113558_tokens) {
	jule::Int _113617_brace_n = 0LL;
	jule::Int _113713_expr_start = (*(_113544_i));
	for (; (*(_113544_i)) < _113558_tokens.len(); ((*(_113544_i)))++) {
		{
			_1da81133a_Token _113917_t = _113558_tokens[(*(_113544_i))];
			if (_113917_t._field_id == 3LLU) {
				{
					auto &_match_expr{ _113917_t._field_kind };
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_5167355808:;
						{
							(_113617_brace_n)++;
							goto _iter_next_5167350720;
						}
					}
					else {
						_case_begin_5167354048:;
						{
							(_113617_brace_n)--;
						}
					}
					_match_end_5167354144:;
				}
			}
			if (_113617_brace_n > 0LL) {
				goto _iter_next_5167350720;
			}
			if ((_113917_t._field_id == 8LLU) || (((*(_113544_i)) + 1LL) >= _113558_tokens.len())) {
				jule::Slice<_1da81133a_Token> _115825_expr_tokens = nullptr;
				if (_113917_t._field_id == 8LLU) {
					_115825_expr_tokens=_113558_tokens.slice(_113713_expr_start,(*(_113544_i)));
				} else {
					_115825_expr_tokens=_113558_tokens.slice(_113713_expr_start);
				}
				return this->self->_method_build_expr(_115825_expr_tokens);
			}
		}
	_iter_next_5167350720:;
	}
	_iter_end_5167350720:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>> _1c1526124_Parser::_method_build_enum_items(jule::Slice<_1da81133a_Token>& _117041_tokens) {
	jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>> _117117_items = jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _117217_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_117217_i)) < _117041_tokens.len(); ((*(_117217_i)))++) {
		{
			_1da81133a_Token _117421_t = _117041_tokens[(*(_117217_i))];
			if (_117421_t._field_id == 18LLU) {
				goto _iter_next_5167365552;
			}
			jule::Ptr<_1da7b8e5d_EnumItemDecl> _117921_item = jule::new_struct<_1da7b8e5d_EnumItemDecl>(new( std::nothrow ) _1da7b8e5d_EnumItemDecl());
			_117921_item->_field_token=_117421_t;
			if (_117921_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_117921_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_117921_item->_field_ident=_117921_item->_field_token._field_kind;
			if ((((*(_117217_i)) + 1LL) >= _117041_tokens.len()) || (_117041_tokens[(*(_117217_i)) + 1LL]._field_id == 8LLU)) {
				if (((*(_117217_i)) + 1LL) < _117041_tokens.len()) {
					((*(_117217_i)))++;
				}
				_117117_items.push(_117921_item);
				goto _iter_next_5167365552;
			}
			((*(_117217_i)))++;
			_117421_t=_117041_tokens[(*(_117217_i))];
			((*(_117217_i)))++;
			if ((_117421_t._field_id != 7LLU) || (_117421_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_117421_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_5167365552;
			}
			if (((*(_117217_i)) >= _117041_tokens.len()) || (_117041_tokens[(*(_117217_i))]._field_id == 8LLU)) {
				this->self->_method_push_err(_117421_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_5167365552;
			}
			_117921_item->_field_expr=this->self->_method_build_enum_item_expr(_117217_i,_117041_tokens);
			_117117_items.push(_117921_item);
		}
	_iter_next_5167365552:;
	}
	_iter_end_5167365552:;
	return _117117_items;
}



inline jule::Ptr<_1da7b8e5d_EnumDecl> _1c1526124_Parser::_method_build_enum_decl(jule::Slice<_1da81133a_Token>& _121140_tokens) {
	if ((_121140_tokens.len() < 2LL) || (_121140_tokens.len() < 3LL)) {
		this->self->_method_push_err(_121140_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_EnumDecl> _121617_e = jule::new_struct<_1da7b8e5d_EnumDecl>(new( std::nothrow ) _1da7b8e5d_EnumDecl(_121140_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>>(),jule::Ptr<_1da7b8e5d_CommentGroup>()));
	if (_121617_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_121617_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_121617_e->_field_ident=_121617_e->_field_token._field_kind;
	jule::Int _122417_i = 2LL;
	if (_121140_tokens[_122417_i]._field_id == 11LLU) {
		(_122417_i)++;
		if (_122417_i >= _121140_tokens.len()) {
			this->self->_method_push_err(_121140_tokens[_122417_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _121617_e;
		}
		std::tie(_121617_e->_field_kind,std::ignore) = this->self->_method_build_type(_121140_tokens,(&(_122417_i)),true);
		if (_122417_i >= _121140_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_121617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _121617_e;
		}
	} else {
		_121617_e->_field_kind=nullptr;
	}
	jule::Slice<_1da81133a_Token> _124117_item_tokens = _1c1526124_range(_122417_i,jule::Str("{", 1),jule::Str("}", 1),_121140_tokens);
	if (_124117_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_121617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _121617_e;
	} else if (_122417_i < _121140_tokens.len()) {
		this->self->_method_push_err(_121140_tokens[_122417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_121617_e->_field_items=this->self->_method_build_enum_items(_124117_item_tokens);
	return _121617_e;
}



inline jule::Ptr<_1da7b8e5d_FieldDecl> _1c1526124_Parser::_method_build_field(jule::Slice<_1da81133a_Token> _125435_tokens) {
	jule::Ptr<_1da7b8e5d_FieldDecl> _125517_f = jule::new_struct<_1da7b8e5d_FieldDecl>(new( std::nothrow ) _1da7b8e5d_FieldDecl());
	_125517_f->_field_public=_125435_tokens[0LL]._field_id == 21LLU;
	if (_125517_f->_field_public) {
		if (_125435_tokens.len() == 1LL) {
			this->self->_method_push_err(_125435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125435_tokens=_125435_tokens.slice(1LL);
	}
	_125517_f->_field_mutable=_125435_tokens[0LL]._field_id == 36LLU;
	if (_125517_f->_field_mutable) {
		if (_125435_tokens.len() == 1LL) {
			this->self->_method_push_err(_125435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125435_tokens=_125435_tokens.slice(1LL);
	}
	_125517_f->_field_token=_125435_tokens[0LL];
	if (_125517_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_125517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_125517_f->_field_ident=_125517_f->_field_token._field_kind;
	if (_125435_tokens.len() == 1LL) {
		this->self->_method_push_err(_125435_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_125435_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_125435_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_125435_tokens=_125435_tokens.slice(2LL);
	jule::Int _129217_i = 0LL;
	std::tie(_125517_f->_field_kind,std::ignore) = this->self->_method_build_type(_125435_tokens,(&(_129217_i)),true);
	if (_129217_i < _125435_tokens.len()) {
		this->self->_method_push_err(_125435_tokens[_129217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _125517_f;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>> _1c1526124_Parser::_method_build_struct_decl_fields(jule::Slice<_1da81133a_Token> _130248_tokens) {
	jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>> _130317_fields = nullptr;
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _130417_stmts = _1db4a8553_split_stmts(_130248_tokens);
	{
		auto &expr = _130417_stmts;
		auto it = expr.begin();
		_iter_begin_4388362480:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a8553_Stmt> _1c1526124_stmt = *it;
			{
				_130248_tokens=_1c1526124_stmt->_field_tokens;
				if (_130248_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4388362480;
				}
				jule::Ptr<_1da7b8e5d_FieldDecl> _131021_f = this->self->_method_build_field(_130248_tokens);
				_130317_fields.push(_131021_f);
			}
			_iter_next_4388362480:;
			++it;
			goto _iter_begin_4388362480;
		}
		_iter_end_4388362480:;
	}
	return _130317_fields;
}



inline jule::Ptr<_1da7b8e5d_StructDecl> _1c1526124_Parser::_method_build_struct_decl(jule::Slice<_1da81133a_Token>& _131642_tokens) {
	if (_131642_tokens.len() < 3LL) {
		this->self->_method_push_err(_131642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _132217_i = 1LL;
	jule::Ptr<_1da7b8e5d_StructDecl> _132317_s = jule::new_struct<_1da7b8e5d_StructDecl>(new( std::nothrow ) _1da7b8e5d_StructDecl(_131642_tokens[_132217_i],jule::Str(),jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1da7b8e5d_CommentGroup>(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>()));
	if (_132317_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_132317_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_132217_i)++;
	if (_132217_i >= _131642_tokens.len()) {
		this->self->_method_push_err(_131642_tokens[_132217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _132317_s;
	}
	_132317_s->_field_ident=_132317_s->_field_token._field_kind;
	_1da81133a_Token _133713_error_token = _131642_tokens[_132217_i];
	jule::Slice<_1da81133a_Token> _133817_generics_tokens = _1c1526124_range(_132217_i,jule::Str("[", 1),jule::Str("]", 1),_131642_tokens);
	if (_133817_generics_tokens != nullptr) {
		_132317_s->_field_generics=this->self->_method_build_generics(_133817_generics_tokens,_133713_error_token);
	}
	if (_132217_i >= _131642_tokens.len()) {
		this->self->_method_push_err(_131642_tokens[_132217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _132317_s;
	}
	jule::Slice<_1da81133a_Token> _134717_body_tokens = _1c1526124_range(_132217_i,jule::Str("{", 1),jule::Str("}", 1),_131642_tokens);
	if (_134717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_132317_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _132317_s;
	}
	if (_132217_i < _131642_tokens.len()) {
		this->self->_method_push_err(_131642_tokens[_132217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_132317_s->_field_fields=this->self->_method_build_struct_decl_fields(_134717_body_tokens);
	return _132317_s;
}



inline void _1c1526124_Parser::_method_check_method_receiver(jule::Ptr<_1da7b8e5d_FnDecl>& _136141_f) {
	if (_136141_f->_field_statically) {
		if ((_136141_f->_field_params.len() > 0LL) && _136141_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_136141_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_136141_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_136141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1da7b8e5d_ParamDecl> _137413_param = _136141_f->_field_params[0LL];
	if ((!(_137413_param->_method_is_self()))) {
		(*this)._method_push_err(_136141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> _1c1526124_Parser::_method_build_trait_methods(jule::Slice<_1da81133a_Token> _138143_tokens) {
	jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>> _138217_methods = nullptr;
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _138317_stmts = _1db4a8553_split_stmts(_138143_tokens);
	{
		auto &expr = _138317_stmts;
		auto it = expr.begin();
		_iter_begin_4388407664:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a8553_Stmt> _1c1526124_stmt = *it;
			{
				_138143_tokens=_1db4ca7d9_eliminate_comments(_1c1526124_stmt->_field_tokens);
				if (_138143_tokens.len() == 0LL) {
					goto _iter_next_4388407664;
				}
				jule::Bool _139021_is_pub = false;
				if (_138143_tokens[0LL]._field_id == 21LLU) {
					_139021_is_pub=true;
					if (_138143_tokens.len() == 1LL) {
						this->self->_method_push_err(_138143_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_4388407664;
					}
					_138143_tokens=_138143_tokens.slice(1LL);
				}
				jule::Ptr<_1da7b8e5d_FnDecl> _140021_f = this->self->_method_build_fn(_138143_tokens,true,true);
				if (_140021_f != nullptr) {
					if (_140021_f->_method_is_anon()) {
						this->self->_method_push_err(_140021_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					this->self->_method_check_method_receiver(_140021_f);
					if (_140021_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_140021_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_140021_f->_field_public=_139021_is_pub;
					_138217_methods.push(_140021_f);
				}
			}
			_iter_next_4388407664:;
			++it;
			goto _iter_begin_4388407664;
		}
		_iter_end_4388407664:;
	}
	return _138217_methods;
}



inline jule::Ptr<_1da7b8e5d_TraitDecl> _1c1526124_Parser::_method_build_trait_decl(jule::Slice<_1da81133a_Token>& _141641_tokens) {
	if (_141641_tokens.len() < 3LL) {
		this->self->_method_push_err(_141641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_TraitDecl> _142117_t = jule::new_struct<_1da7b8e5d_TraitDecl>(new( std::nothrow ) _1da7b8e5d_TraitDecl(_141641_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_1da7b8e5d_CommentGroup>(),jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>()));
	if (_142117_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_142117_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_142117_t->_field_ident=_142117_t->_field_token._field_kind;
	jule::Int _142917_i = 2LL;
	jule::Slice<_1da81133a_Token> _143017_body_tokens = _1c1526124_range(_142917_i,jule::Str("{", 1),jule::Str("}", 1),_141641_tokens);
	if (_143017_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_142117_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_142917_i < _141641_tokens.len()) {
		this->self->_method_push_err(_141641_tokens[_142917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_142117_t->_field_methods=this->self->_method_build_trait_methods(_143017_body_tokens);
	return _142117_t;
}



inline jule::Ptr<_1da7b8e5d_FnDecl> _1c1526124_Parser::_method_build_cpp_link_fn(jule::Slice<_1da81133a_Token> _144441_tokens) {
	_144441_tokens=_144441_tokens.slice(1LL);
	jule::Ptr<_1da7b8e5d_FnDecl> _144617_f = this->self->_method_build_fn(_144441_tokens,false,true);
	if (_144617_f != nullptr) {
		if (_144617_f->_method_is_anon()) {
			this->self->_method_push_err(_144617_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_144617_f->_field_cpp_linked=true;
	}
	return _144617_f;
}



inline jule::Ptr<_1da7b8e5d_VarDecl> _1c1526124_Parser::_method_build_cpp_link_var(jule::Slice<_1da81133a_Token> _145642_tokens) {
	_145642_tokens=_145642_tokens.slice(1LL);
	jule::Ptr<_1da7b8e5d_VarDecl> _145817_v = this->self->_method_build_var(_145642_tokens);
	if (_145817_v != nullptr) {
		_145817_v->_field_cpp_linked=true;
		if (_145817_v->_field_expr != nullptr) {
			this->self->_method_push_err(_145817_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _145817_v;
}



inline jule::Ptr<_1da7b8e5d_StructDecl> _1c1526124_Parser::_method_build_cpp_link_struct(jule::Slice<_1da81133a_Token> _146845_tokens) {
	_146845_tokens=_146845_tokens.slice(1LL);
	jule::Ptr<_1da7b8e5d_StructDecl> _147017_s = this->self->_method_build_struct_decl(_146845_tokens);
	if (_147017_s != nullptr) {
		_147017_s->_field_cpp_linked=true;
	}
	return _147017_s;
}



inline jule::Ptr<_1da7b8e5d_TypeAliasDecl> _1c1526124_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1da81133a_Token> _147749_tokens) {
	_147749_tokens=_147749_tokens.slice(1LL);
	jule::Ptr<_1da7b8e5d_TypeAliasDecl> _147917_t = this->self->_method_build_type_alias_decl(_147749_tokens);
	if (_147917_t != nullptr) {
		_147917_t->_field_cpp_linked=true;
	}
	return _147917_t;
}



inline jule::Ptr<_1da7b8e5d_UseDecl> _1c1526124_Parser::_method_build_cpp_link_use(jule::Slice<_1da81133a_Token> _148642_tokens) {
	if (_148642_tokens.len() == 1LL) {
		this->self->_method_push_err(_148642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_148642_tokens=_148642_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_148642_tokens,true);
}



inline jule::Any _1c1526124_Parser::_method_build_cpp_link(jule::Slice<_1da81133a_Token>& _149739_tokens) {
	_1da81133a_Token _149817_token = _149739_tokens[0LL];
	if (_149739_tokens.len() == 1LL) {
		this->self->_method_push_err(_149817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_149817_token=_149739_tokens[1LL];
	{
		auto &_match_expr{ _149817_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_4388475216:;
			{
				return jule::Any(this->self->_method_build_cpp_link_use(_149739_tokens));
			}
		}
		else if (_match_expr == 33LLU || _match_expr == 35LLU) {
			_case_begin_4388474480:;
			{
				return jule::Any(this->self->_method_build_cpp_link_fn(_149739_tokens));
			}
		}
		else if (_match_expr == 9LLU || _match_expr == 34LLU) {
			_case_begin_4388474576:;
			{
				return jule::Any(this->self->_method_build_cpp_link_var(_149739_tokens));
			}
		}
		else if (_match_expr == 25LLU) {
			_case_begin_4388474672:;
			{
				return jule::Any(this->self->_method_build_cpp_link_struct(_149739_tokens));
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_4388474784:;
			{
				return jule::Any(this->self->_method_build_cpp_link_type_alias(_149739_tokens));
			}
		}
		else {
			_case_begin_4388471792:;
			{
				this->self->_method_push_err(_149817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_4388474176:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1da7b8e5d_FnDecl> _1c1526124_Parser::_method_get_method(jule::Slice<_1da81133a_Token>& _152835_tokens) {
	jule::Int _152917_i = 0LL;
	_1da81133a_Token _153017_token = _152835_tokens[_152917_i];
	if (_153017_token._field_id == 38LLU) {
		if ((_152917_i + 1LL) >= _152835_tokens.len()) {
			this->self->_method_push_err(_153017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_152917_i)++;
		_153017_token=_152835_tokens[_152917_i];
	}
	if (_153017_token._field_id == 35LLU) {
		if ((_152917_i + 1LL) >= _152835_tokens.len()) {
			this->self->_method_push_err(_153017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_152917_i)++;
		_153017_token=_152835_tokens[_152917_i];
	}
	if (_153017_token._field_id != 33LLU) {
		this->self->_method_push_err(_153017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_FnDecl> _155417_f = this->self->_method_build_fn(_152835_tokens,true,false);
	if ((_155417_f != nullptr) && _155417_f->_method_is_anon()) {
		this->self->_method_push_err(_155417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _155417_f;
}



inline void _1c1526124_Parser::_method_parse_impl_body(jule::Ptr<_1da7b8e5d_Impl>& _156140_ipl,jule::Slice<_1da81133a_Token>& _156157_tokens) {
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _156217_stmts = _1db4a8553_split_stmts(_156157_tokens);
	{
		auto &expr = _156217_stmts;
		auto it = expr.begin();
		_iter_begin_4388502288:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a8553_Stmt> _1c1526124_stmt = *it;
			{
				_156157_tokens=_1c1526124_stmt->_field_tokens;
				_1da81133a_Token _156521_token = _156157_tokens[0LL];
				jule::Bool _156621_is_pub = false;
				{
					auto &_match_expr{ _156521_token._field_id };
					if (_match_expr == 18LLU) {
						_case_begin_4388506272:;
						{
							goto _iter_next_4388502288;
						}
					}
					else if (_match_expr == 39LLU) {
						_case_begin_4388506368:;
						{
							this->self->_method_push_directive(this->self->_method_build_directive(_156157_tokens));
							goto _iter_next_4388502288;
						}
					}
					else if (_match_expr == 21LLU) {
						_case_begin_4388506496:;
						{
							_156621_is_pub=true;
							if (_156157_tokens.len() == 1LL) {
								this->self->_method_push_err(_156157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_4388502288;
							}
							_156157_tokens=_156157_tokens.slice(1LL);
							if (_156157_tokens.len() > 0LL) {
								_156521_token=_156157_tokens[0LL];
							}
						}
					}
					_match_end_4388506192:;
				}
				{
					auto &_match_expr{ _156521_token._field_id };
					if (_match_expr == 9LLU) {
						_case_begin_4388514688:;
						{
							jule::Ptr<_1da7b8e5d_VarDecl> _159025_v = this->self->_method_build_var(_156157_tokens);
							if (_159025_v != nullptr) {
								_159025_v->_field_public=_156621_is_pub;
								_156140_ipl->_field_statics = jule::alloc_for_append(_156140_ipl->_field_statics,1);_156140_ipl->_field_statics.push(_159025_v);
							}
						}
					}
					else if (_match_expr == 38LLU || _match_expr == 33LLU || _match_expr == 35LLU) {
						_case_begin_4388509792:;
						{
							jule::Ptr<_1da7b8e5d_FnDecl> _159925_f = this->self->_method_get_method(_156157_tokens);
							if (_159925_f != nullptr) {
								this->self->_method_check_method_receiver(_159925_f);
								this->self->_method_apply_fn_meta(_159925_f,_156621_is_pub);
								_156140_ipl->_field_methods = jule::alloc_for_append(_156140_ipl->_field_methods,1);_156140_ipl->_field_methods.push(_159925_f);
							}
						}
					}
					else {
						_case_begin_4388510368:;
						{
							this->self->_method_push_err(_156521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_4388502288;
						}
					}
					_match_end_4388511360:;
				}
			}
			_iter_next_4388502288:;
			++it;
			goto _iter_begin_4388502288;
		}
		_iter_end_4388502288:;
	}
}



inline jule::Ptr<_1da7b8e5d_Impl> _1c1526124_Parser::_method_build_impl(jule::Slice<_1da81133a_Token> _161334_tokens) {
	_1da81133a_Token _161417_token = _161334_tokens[0LL];
	if (_161334_tokens.len() < 2LL) {
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_161417_token=_161334_tokens[1LL];
	if (_161417_token._field_id != 2LLU) {
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161334_tokens.len() < 3LL) {
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_Impl> _162917_ipl = jule::new_struct<_1da7b8e5d_Impl>(new( std::nothrow ) _1da7b8e5d_Impl(_161417_token,_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>(),jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>>()));
	_161417_token=_161334_tokens[2LL];
	if (_161417_token._field_id != 12LLU) {
		if ((_161417_token._field_id == 3LLU) && (_161417_token._field_kind == jule::Str("{", 1))) {
			std::tie(_162917_ipl->_field_base,_162917_ipl->_field_dest) = std::make_tuple(_162917_ipl->_field_dest,_162917_ipl->_field_base);
			_161334_tokens=_161334_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161334_tokens.len() < 4LL) {
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_161417_token=_161334_tokens[3LL];
	if (_161417_token._field_id != 2LLU) {
		this->self->_method_push_err(_161417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162917_ipl->_field_dest=_161417_token;
	_161334_tokens=_161334_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _165917_i = 0LL;
	jule::Slice<_1da81133a_Token> _166017_body_tokens = _1c1526124_range(_165917_i,jule::Str("{", 1),jule::Str("}", 1),_161334_tokens);
	if (_166017_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_162917_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_165917_i < _161334_tokens.len()) {
		this->self->_method_push_err(_161334_tokens[_165917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	this->self->_method_parse_impl_body(_162917_ipl,_166017_body_tokens);
	return _162917_ipl;
}



inline jule::Any _1c1526124_Parser::_method_build_node_data(jule::Slice<_1da81133a_Token>& _167440_tokens) {
	_1da81133a_Token _167517_token = _167440_tokens[0LL];
	{
		auto &_match_expr{ _167517_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_4388560496:;
			{
				
				return jule::Any(this->self->_method_build_use_decl(_167440_tokens,false));
			}
		}
		else if (_match_expr == 33LLU || _match_expr == 35LLU) {
			_case_begin_4388561664:;
			{
				jule::Ptr<_1da7b8e5d_FnDecl> _168321_f = this->self->_method_build_fn(_167440_tokens,false,false);
				if (_168321_f != nullptr) {
					_168321_f->_field_global=true;
					if (_168321_f->_method_is_anon()) {
						this->self->_method_push_err(_168321_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_168321_f);
			}
		}
		else if (_match_expr == 34LLU || _match_expr == 9LLU || _match_expr == 36LLU || _match_expr == 38LLU) {
			_case_begin_4388559840:;
			{
				return jule::Any(this->self->_method_build_var(_167440_tokens));
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_4388559936:;
			{
				return jule::Any(this->self->_method_build_type_alias_decl(_167440_tokens));
			}
		}
		else if (_match_expr == 24LLU) {
			_case_begin_4388560032:;
			{
				return jule::Any(this->self->_method_build_enum_decl(_167440_tokens));
			}
		}
		else if (_match_expr == 25LLU) {
			_case_begin_4388560128:;
			{
				return jule::Any(this->self->_method_build_struct_decl(_167440_tokens));
			}
		}
		else if (_match_expr == 29LLU) {
			_case_begin_4388562176:;
			{
				return jule::Any(this->self->_method_build_trait_decl(_167440_tokens));
			}
		}
		else if (_match_expr == 30LLU) {
			_case_begin_4388562272:;
			{
				return jule::Any(this->self->_method_build_impl(_167440_tokens));
			}
		}
		else if (_match_expr == 31LLU) {
			_case_begin_4388562368:;
			{
				return this->self->_method_build_cpp_link(_167440_tokens);
			}
		}
		else if (_match_expr == 39LLU) {
			_case_begin_4388562464:;
			{
				return jule::Any(this->self->_method_build_directive(_167440_tokens));
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_4388562560:;
			{
				return jule::Any(_1c1526124_build_comment(_167517_token));
			}
		}
		else {
			_case_begin_4388558224:;
			{
				this->self->_method_push_err(_167517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_4388559056:;
	}
}



inline void _1c1526124_Parser::_method_check_comment_group(_1da7b8e5d_Node& _172839_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _172839_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Comment>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_Directive>>()) {
			_case_begin_4388583888:;
		}
		else {
			_case_begin_4388582656:;
			{
				(*this)._field_comment_group=nullptr;
			}
		}
		_match_end_4388581920:;
	}
}



inline void _1c1526124_Parser::_method_check_directive(_1da7b8e5d_Node& _174235_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _174235_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Directive>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_Comment>>()) {
			_case_begin_4388589152:;
		}
		else {
			_case_begin_4388587120:;
			{
				if ((*this)._field_directives.len() != 0LL) {
					(*this)._method_push_err((*this)._field_directives[0LL]->_field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*this)._field_directives=nullptr;
			}
		}
		_match_end_4388586384:;
	}
}



inline void _1c1526124_Parser::_method_apply_fn_meta(jule::Ptr<_1da7b8e5d_FnDecl>& _176037_f,jule::Bool _176049_is_pub) {
	_176037_f->_field_public=_176049_is_pub;
	_176037_f->_field_directives=(*this)._field_directives;
	(*this)._field_directives=nullptr;
	_176037_f->_field_doc_comments=(*this)._field_comment_group;
	(*this)._field_comment_group=nullptr;
}



inline void _1c1526124_Parser::_method_apply_meta(_1da7b8e5d_Node& _176834_node,jule::Bool _176846_is_pub) {
	{
		auto &_match_expr{ _176834_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VarDecl>>()) {
			_case_begin_4388598720:;
			{
				jule::Ptr<_1da7b8e5d_VarDecl> _177121_v = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_VarDecl>();
				if (_177121_v == nullptr) {
					return;
				}
				_177121_v->_field_public=_176846_is_pub;
				_177121_v->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_177121_v->_field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnDecl>>()) {
			_case_begin_4388599024:;
			{
				jule::Ptr<_1da7b8e5d_FnDecl> _178421_f = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_FnDecl>();
				if (_178421_f == nullptr) {
					return;
				}
				(*this)._method_apply_fn_meta(_178421_f,_176846_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeAliasDecl>>()) {
			_case_begin_4388597440:;
			{
				jule::Ptr<_1da7b8e5d_TypeAliasDecl> _179221_tad = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_TypeAliasDecl>();
				if (_179221_tad == nullptr) {
					return;
				}
				_179221_tad->_field_public=_176846_is_pub;
				_179221_tad->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_EnumDecl>>()) {
			_case_begin_4388597552:;
			{
				jule::Ptr<_1da7b8e5d_EnumDecl> _180121_ed = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_EnumDecl>();
				if (_180121_ed == nullptr) {
					return;
				}
				_180121_ed->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_180121_ed->_field_public=_176846_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_StructDecl>>()) {
			_case_begin_4388598000:;
			{
				jule::Ptr<_1da7b8e5d_StructDecl> _181021_sd = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_StructDecl>();
				if (_181021_sd == nullptr) {
					return;
				}
				_181021_sd->_field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
				_181021_sd->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_181021_sd->_field_public=_176846_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TraitDecl>>()) {
			_case_begin_4388598096:;
			{
				jule::Ptr<_1da7b8e5d_TraitDecl> _182121_td = _176834_node._field_data.operator jule::Ptr<_1da7b8e5d_TraitDecl>();
				if (_182121_td == nullptr) {
					return;
				}
				_182121_td->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_182121_td->_field_public=_176846_is_pub;
			}
		}
		else {
			_case_begin_4388596704:;
			{
				if (_176846_is_pub) {
					(*this)._method_push_err(_176834_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_4388597024:;
	}
}



inline void _1c1526124_Parser::_method_check_use_decl(_1da7b8e5d_Node& _183634_node) {
	{
		auto &_match_expr{ _183634_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UseDecl>>()) {
			_case_begin_4388622752:;
		}
		else {
			_case_begin_4388621440:;
			{
				return;
			}
		}
		_match_end_4388621664:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_183634_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1c1526124_Parser::_method_build_general_scope_node_data(jule::Slice<_1da81133a_Token> _185153_st) {
	jule::Bool _185168_is_pub = jule::Bool();
	jule::Any _185182_data = jule::Any();
	if (_185153_st[0LL]._field_id == 21LLU) {
		_185168_is_pub=true;
		_185153_st=_185153_st.slice(1LL);
		if (_185153_st.len() == 0LL) {
			this->self->_method_push_err(_185153_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_185168_is_pub,_185182_data);
		}
	}
	_185182_data=this->self->_method_build_node_data(_185153_st);
	return std::make_tuple(_185168_is_pub,_185182_data);
}



inline _1da7b8e5d_Node _1c1526124_Parser::_method_parse_node(jule::Slice<_1da81133a_Token>& _186635_st) {
	_1da7b8e5d_Node _186717_node = _1da7b8e5d_Node(_186635_st[0LL],jule::Any());
	jule::Bool _187114_is_pub;
	jule::Any _187126_data;
	std::tie(_187114_is_pub,_187126_data) = this->self->_method_build_general_scope_node_data(_186635_st);
	if (_187126_data == nullptr) {
		return _186717_node;
	}
	_186717_node._field_data=_187126_data;
	this->self->_method_apply_meta(_186717_node,_187114_is_pub);
	this->self->_method_check_comment_group(_186717_node);
	this->self->_method_check_directive(_186717_node);
	this->self->_method_check_use_decl(_186717_node);
	return _186717_node;
}



inline void _1c1526124_Parser::_method_append_node(jule::Slice<_1da81133a_Token>& _188536_st) {
	if (_188536_st.len() == 0LL) {
		return;
	}
	_1da7b8e5d_Node _189017_node = this->self->_method_parse_node(_188536_st);
	if ((_189017_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (_189017_node._method_is_directive()) {
			_case_begin_4388651008:;
			{
				this->self->_method_push_directive(_189017_node._field_data.operator jule::Ptr<_1da7b8e5d_Directive>());
			}
		}
		else if (_189017_node._method_is_use_decl()) {
			_case_begin_4388650560:;
			{
				this->self->_field_ast->_field_use_decls = jule::alloc_for_append(this->self->_field_ast->_field_use_decls,1);this->self->_field_ast->_field_use_decls.push(_189017_node._field_data.operator jule::Ptr<_1da7b8e5d_UseDecl>());
			}
		}
		else if (_189017_node._method_is_decl()) {
			_case_begin_4388650656:;
			{
				this->self->_field_ast->_field_decls = jule::alloc_for_append(this->self->_field_ast->_field_decls,1);this->self->_field_ast->_field_decls.push(_189017_node);
			}
		}
		else if (_189017_node._method_is_comment()) {
			_case_begin_4388650752:;
			{
				if (this->self->_field_comment_group == nullptr) {
					this->self->_field_comment_group=jule::new_struct<_1da7b8e5d_CommentGroup>(new( std::nothrow ) _1da7b8e5d_CommentGroup());
				}
				this->self->_field_comment_group->_field_comments = jule::alloc_for_append(this->self->_field_comment_group->_field_comments,1);this->self->_field_comment_group->_field_comments.push(_189017_node._field_data.operator jule::Ptr<_1da7b8e5d_Comment>());
			}
		}
		else if (_189017_node._method_is_impl()) {
			_case_begin_4388650848:;
			{
				this->self->_field_ast->_field_impls = jule::alloc_for_append(this->self->_field_ast->_field_impls,1);this->self->_field_ast->_field_impls.push(_189017_node._field_data.operator jule::Ptr<_1da7b8e5d_Impl>());
			}
		}
		else {
			_case_begin_4388650256:;
			{
				this->self->_method_push_err(_189017_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_4388649312:;
	}
}



inline void _1c1526124_Parser::_method_remove_range(jule::Int _192031_i,jule::Str _192039_kind,jule::Slice<_1da81133a_Token>& _192051_tokens,jule::Slice<jule::Int>& _192073_ranges) {
	jule::Str _192113_close = _1c1526124_get_close_kind_of_brace(_192039_kind);
	for (; _192031_i >= 0LL; (_192031_i)--) {
		{
			_1da81133a_Token _192317_tok = _192051_tokens[_192073_ranges[_192031_i]];
			if (_192317_tok._field_kind != _192113_close) {
				goto _iter_next_4388667456;
			}
			_192073_ranges=jule::append(_192073_ranges.slice(0LL,_192031_i),_192073_ranges.slice(_192031_i + 1LL));
			goto _iter_end_4388667456;
		}
	_iter_next_4388667456:;
	}
	_iter_end_4388667456:;
}



inline void _1c1526124_Parser::_method_push_wrong_order_close_err(_1da81133a_Token& _193346_t,jule::Slice<_1da81133a_Token>& _193357_tokens,jule::Slice<jule::Int>& _193375_ranges) {
	{
		auto &_match_expr{ _193357_tokens[_193375_ranges[_193375_ranges.len() - 1LL]]._field_kind };
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_4388675200:;
			{
				(*this)._method_push_err(_193346_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_4388675296:;
			{
				(*this)._method_push_err(_193346_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_4388675392:;
			{
				(*this)._method_push_err(_193346_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_4388675104:;
	}
}



inline void _1c1526124_Parser::_method_push_range_close(_1da81133a_Token _194135_t,jule::Str _194145_left,jule::Slice<_1da81133a_Token>& _194157_tokens,jule::Slice<jule::Int>& _194179_ranges) {
	jule::I64 _194213_n = _194179_ranges.len();
	if (_194213_n == 0LL) {
		{
			auto &_match_expr{ _194135_t._field_kind };
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_4388686336:;
				{
					(*this)._method_push_err(_194135_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_4388686512:;
				{
					(*this)._method_push_err(_194135_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_4388686608:;
				{
					(*this)._method_push_err(_194135_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_4388686208:;
		}
		return;
	} else if (_194157_tokens[_194179_ranges[_194213_n - 1LL]]._field_kind != _194145_left) {
		(*this)._method_push_wrong_order_close_err(_194135_t,_194157_tokens,_194179_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_194213_n - 1LL),_194135_t._field_kind,_194157_tokens,_194179_ranges);
}



inline void _1c1526124_Parser::_method_check_ranges(jule::Slice<_1da81133a_Token>& _195632_tokens) {
	jule::Slice<jule::Int> _195717_ranges = nullptr;
	{
		auto &expr = _195632_tokens;
		auto it = expr.begin();
		_iter_begin_4388697088:;
		if (it != expr.end()) {
			jule::Int _1c1526124_i = it - expr.begin();
			_1da81133a_Token &_1c1526124_token = *it;
			{
				if (_1c1526124_token._field_id != 3LLU) {
					goto _iter_next_4388697088;
				}
				{
					auto &_match_expr{ _1c1526124_token._field_kind };
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_4388699952:;
						{
							_195717_ranges.push(_1c1526124_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_4388700048:;
						{
							(*this)._method_push_range_close(_1c1526124_token,jule::Str("(", 1),_195632_tokens,_195717_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_4388700496:;
						{
							(*this)._method_push_range_close(_1c1526124_token,jule::Str("{", 1),_195632_tokens,_195717_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_4388700592:;
						{
							(*this)._method_push_range_close(_1c1526124_token,jule::Str("[", 1),_195632_tokens,_195717_ranges);
						}
					}
					_match_end_4388699136:;
				}
			}
			_iter_next_4388697088:;
			++it;
			_1c1526124_i++;
			goto _iter_begin_4388697088;
		}
		_iter_end_4388697088:;
	}
	{
		auto &expr = _195717_ranges;
		auto it = expr.begin();
		_iter_begin_4388704960:;
		if (it != expr.end()) {
			jule::Int &_1c1526124_i = *it;
			{
				_1da81133a_Token _198217_token = _195632_tokens[_1c1526124_i];
				{
					auto &_match_expr{ _198217_token._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_4388708432:;
						{
							(*this)._method_push_err(_198217_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_4388708528:;
						{
							(*this)._method_push_err(_198217_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_4388708624:;
						{
							(*this)._method_push_err(_198217_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_4388708032:;
				}
			}
			_iter_next_4388704960:;
			++it;
			goto _iter_begin_4388704960;
		}
		_iter_end_4388704960:;
	}
}



inline void _1c1526124_Parser::_method_parse(jule::Ptr<_1da7bba21_File>& _199130_f) {
	this->self->_field_ast=jule::new_struct<_1da7635cd_Ast>(new( std::nothrow ) _1da7635cd_Ast(_199130_f,jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Slice<jule::Ptr<_1da7b8e5d_UseDecl>>(),jule::Slice<jule::Ptr<_1da7b8e5d_Impl>>(),jule::Slice<_1da7b8e5d_Node>()));
	jule::Slice<_1da81133a_Token> _199617_tokens = _199130_f->_method_tokens();
	this->self->_method_check_ranges(_199617_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _200217_stmts = _1db4a8553_split_stmts(_199617_tokens);
	jule::Int _200517_i = 0LL;
	_julec_label_iter:;
	for (; _200517_i < _200217_stmts.len(); (_200517_i)++) {
		{
			jule::Ptr<_1db4a8553_Stmt> _200821_stmt = _200217_stmts[_200517_i];
			if (_200821_stmt->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _201325_data;
			std::tie(std::ignore,_201325_data) = this->self->_method_build_general_scope_node_data(_200821_stmt->_field_tokens);
			if (_201325_data == nullptr) {
				goto _iter_end_4388718272;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			{
				auto &_match_expr{ _201325_data };
				if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Directive>>()) {
					_case_begin_4388725312:;
					{
						jule::Ptr<_1da7b8e5d_Directive> _202425_d = _201325_data.operator jule::Ptr<_1da7b8e5d_Directive>();
						if ((_202425_d != nullptr) && _2052172ed_is_top_directive(_202425_d->_field_tag._field_kind)) {
							this->self->_field_ast->_field_top_directives = jule::alloc_for_append(this->self->_field_ast->_field_top_directives,1);this->self->_field_ast->_field_top_directives.push(_202425_d);
						} else {
							goto _iter_end_4388718272;
						}
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Comment>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_CommentGroup>>()) {
					_case_begin_4388725408:;
				}
				else {
					_case_begin_4388724448:;
					{
						goto _iter_end_4388718272;
					}
				}
				_match_end_4388724816:;
			}
		}
	_iter_next_4388718272:;
	}
	_iter_end_4388718272:;
	this->self->_field_errors=nullptr;
	for (; _200517_i < _200217_stmts.len(); (_200517_i)++) {
		{
			jule::Ptr<_1db4a8553_Stmt> _204421_stmt = _200217_stmts[_200517_i];
			this->self->_method_append_node(_204421_stmt->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_4388728368;
			}
		}
	_iter_next_4388728368:;
	}
	_iter_end_4388728368:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1526124_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1c163edb9_TypeBuilder::_method_push_err(_1da81133a_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1c163edb9_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_1da7b8e5d_TypeDecl> _9217_t = _1c163edb9_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_1da7b8e5d_TypeDecl> _9817_t = jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_1da7b8e5d_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1da7b8e5d_NamespaceTypeDecl>(new( std::nothrow ) _1da7b8e5d_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1da81133a_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::unsafe_mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst->_field_idents = jule::alloc_for_append(_10217_nst->_field_idents,1);_10217_nst->_field_idents.push(_10521_token);
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_4388748336;
			}
			(_10317_n)++;
		}
	_iter_next_4388748336:;
	}
	_iter_end_4388748336:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ptr<_1da7b8e5d_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _1c163edb9_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1da81133a_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1da81133a_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_4388771264:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1c163edb9_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_1da7b8e5d_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1c163edb9_part,(&(_14421_j)),true);
				if (_14421_j < _1c163edb9_part.len()) {
					(*this)._method_push_err(_1c163edb9_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types.push(_14522_t);
			}
			_iter_next_4388771264:;
			++it;
			goto _iter_begin_4388771264;
		}
		_iter_end_4388771264:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1da81133a_Token>> _1c163edb9_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1da81133a_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_4388782256:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_4388782368:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_4388781776:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_4388761616;
			}
		}
	_iter_next_4388761616:;
	}
	_iter_end_4388761616:;
	jule::Slice<_1da81133a_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_1da81133a_Token>> _17118_parts;
	jule::Slice<_203741197_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1c1526124_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1da81133a_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1da7b8e5d_IdentTypeDecl> _18317_it = jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_1da7b8e5d_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ptr<_1da7b8e5d_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_fn(void) {
	_1da81133a_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1da7b8e5d_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_ptr(void) {
	_1da81133a_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1da7b8e5d_PtrTypeDecl>(new( std::nothrow ) _1da7b8e5d_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_1da7b8e5d_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1da7b8e5d_PtrTypeDecl>(new( std::nothrow ) _1da7b8e5d_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_sptr(void) {
	_1da81133a_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_1da7b8e5d_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1da7b8e5d_SptrTypeDecl>(new( std::nothrow ) _1da7b8e5d_SptrTypeDecl(_26117_elem)))));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_op(void) {
	_1da81133a_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_4388835264:;
			{
				return (*this)._method_build_ptr();
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_4388835360:;
			{
				return (*this)._method_build_sptr();
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_4388835008:;
			{
				return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1da81133a_Token(),jule::Any(jule::new_struct<_1da7b8e5d_SptrTypeDecl>(new( std::nothrow ) _1da7b8e5d_SptrTypeDecl((*this)._method_build_sptr())))));
			}
		}
		else {
			_case_begin_4388831600:;
			{
				(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_4388832496:;
	}
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_slc(void) {
	_1da81133a_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_1da7b8e5d_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_29717_token,jule::Any(jule::new_struct<_1da7b8e5d_SlcTypeDecl>(new( std::nothrow ) _1da7b8e5d_SlcTypeDecl(_29917_elem)))));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_1da7b8e5d_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1da7b8e5d_ArrTypeDecl> _32717_arrt = jule::new_struct<_1da7b8e5d_ArrTypeDecl>(new( std::nothrow ) _1da7b8e5d_ArrTypeDecl(_32217_elem,jule::Ptr<_1da7b8e5d_Expr>()));
	jule::Slice<_1da81133a_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _1c1526124_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_1da81133a_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == 7LLU)) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt->_field_size=(*this)._field_p->_method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_1da81133a_Token>& _34745_tokens) {
	_1da81133a_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= _34745_tokens.len())) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Slice<_1da81133a_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_1da81133a_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_1da7b8e5d_MapTypeDecl> _35517_mapt = jule::new_struct<_1da7b8e5d_MapTypeDecl>(new( std::nothrow ) _1da7b8e5d_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_1da7b8e5d_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*this)._field_p->_method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35317_key_tokens.len()) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_1da7b8e5d_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*this)._field_p->_method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35417_val_tokens.len()) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_val=_36718_valt;
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_build_enumerable(void) {
	_1da81133a_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_38217_token._field_id != 3LLU)) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == 3LLU) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1da81133a_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _1c163edb9_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_TypeBuilder::_method_step(void) {
	_1da81133a_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		if (_match_expr == 1LLU) {
			_case_begin_4388891664:;
			{
				return (*this)._method_build_prim();
			}
		}
		else if (_match_expr == 2LLU) {
			_case_begin_4388891760:;
			{
				return (*this)._method_build_ident();
			}
		}
		else if (_match_expr == 31LLU) {
			_case_begin_4388893392:;
			{
				return (*this)._method_build_cpp_link();
			}
		}
		else if (_match_expr == 33LLU) {
			_case_begin_4388893488:;
			{
				return (*this)._method_build_fn();
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_4388893584:;
			{
				return (*this)._method_build_op();
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_4388893680:;
			{
				return (*this)._method_build_enumerable();
			}
		}
		else {
			_case_begin_4388886464:;
			{
				((*((*this)._field_i)))++;
				(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_4388891088:;
	}
}



inline std::tuple<jule::Ptr<_1da7b8e5d_TypeDecl>,jule::Bool> _1c163edb9_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_1da7b8e5d_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_1c163edb9_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c163edb9_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(_1527_x)));
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(_1728_x)));
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(_1927_x)));
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(_2127_x)));
}



inline jule::Ptr<_1a8d46165_Const> _1a8d46165_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1a8d46165_Const>(new( std::nothrow ) _1a8d46165_Const(jule::Any(nullptr)));
}



inline jule::I64 _1a8d46165_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1a8d46165_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LLU;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1a8d46165_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1a8d46165_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1a8d46165_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1a8d46165_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_4388976752:;
			{
				return (*this)._field_data.operator jule::I64();
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_4388976848:;
			{
				return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_4388977024:;
			{
				return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
			}
		}
		else {
			_case_begin_4388975024:;
			{
				return 0LL;
			}
		}
		_match_end_4388975216:;
	}
}



inline jule::U64 _1a8d46165_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_4388981840:;
			{
				return (*this)._field_data.operator jule::U64();
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_4388981936:;
			{
				return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_4388982112:;
			{
				return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
			}
		}
		else {
			_case_begin_4388960576:;
			{
				return 0LLU;
			}
		}
		_match_end_4388978720:;
	}
}



inline jule::F64 _1a8d46165_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_4388987968:;
			{
				return (*this)._field_data.operator jule::F64();
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_4388988064:;
			{
				return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_4388986592:;
			{
				return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
			}
		}
		else {
			_case_begin_4388986000:;
			{
				return 0LL;
			}
		}
		_match_end_4388986304:;
	}
}



inline void _1a8d46165_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _1a8d46165_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _1a8d46165_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _1a8d46165_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _1a8d46165_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _1a8d46165_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1a8d46165_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_4389004896:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389003056:;
			{
				return false;
			}
		}
		_match_end_4389003168:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_4389007072:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389005664:;
			{
				return false;
			}
		}
		_match_end_4389005888:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_4389009280:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389007872:;
			{
				return false;
			}
		}
		_match_end_4389008096:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_4389011488:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389010080:;
			{
				return false;
			}
		}
		_match_end_4389010304:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_4389013696:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389012288:;
			{
				return false;
			}
		}
		_match_end_4389012512:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1a8d46165_Const::_method_are_same_types(_1a8d46165_Const _19933_x) {
	{
		if ((*this)._method_is_i64() == _19933_x._method_is_i64()) {
			_case_begin_4389019328:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_u64() == _19933_x._method_is_u64()) {
			_case_begin_4389017920:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_f64() == _19933_x._method_is_f64()) {
			_case_begin_4389018016:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_bool() == _19933_x._method_is_bool()) {
			_case_begin_4389018112:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_str() == _19933_x._method_is_str()) {
			_case_begin_4389018208:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_nil() == _19933_x._method_is_nil()) {
			_case_begin_4389018624:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389017616:;
			{
				return false;
			}
		}
		_match_end_4389017440:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_and(_1a8d46165_Const _21722_x) {
	{
		if ((*this)._method_is_bool() && _21722_x._method_is_bool()) {
			_case_begin_4389030320:;
			{
				return (*this)._method_read_bool() && _21722_x._method_read_bool();
			}
		}
		else {
			_case_begin_4389028688:;
			{
				return false;
			}
		}
		_match_end_4389028512:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_or(_1a8d46165_Const _22921_x) {
	{
		if ((*this)._method_is_bool() && _22921_x._method_is_bool()) {
			_case_begin_4389035424:;
			{
				return (*this)._method_read_bool() || _22921_x._method_read_bool();
			}
		}
		else {
			_case_begin_4389033792:;
			{
				return false;
			}
		}
		_match_end_4389033616:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_eqs(_1a8d46165_Const _24122_x) {
	{
		if ((*this)._method_is_nil()) {
			_case_begin_4389040448:;
			{
				return _24122_x._method_is_nil();
			}
		}
		else if ((*this)._method_is_bool()) {
			_case_begin_4389039040:;
			{
				return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
			}
		}
		else if ((*this)._method_is_str()) {
			_case_begin_4389039136:;
			{
				return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_4389039232:;
			{
				return (*this)._method_read_i64() == _24122_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389039328:;
			{
				return (*this)._method_read_u64() == _24122_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_4389039744:;
			{
				return (*this)._method_read_f64() == _24122_x._method_as_f64();
			}
		}
		else {
			_case_begin_4389038736:;
			{
				return false;
			}
		}
		_match_end_4389038560:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_lt(_1a8d46165_Const _27321_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389054416:;
			{
				return (*this)._method_read_i64() < _27321_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389054512:;
			{
				return (*this)._method_read_u64() < _27321_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_4389053056:;
			{
				return (*this)._method_read_f64() < _27321_x._method_as_f64();
			}
		}
		else {
			_case_begin_4389052752:;
			{
				return false;
			}
		}
		_match_end_4389052576:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_gt(_1a8d46165_Const _29621_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389062224:;
			{
				return (*this)._method_read_i64() > _29621_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389062320:;
			{
				return (*this)._method_read_u64() > _29621_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_4389060864:;
			{
				return (*this)._method_read_f64() > _29621_x._method_as_f64();
			}
		}
		else {
			_case_begin_4389060560:;
			{
				return false;
			}
		}
		_match_end_4389060384:;
	}
}



inline jule::Bool _1a8d46165_Const::_method_add(_1a8d46165_Const _31826_x) {
	{
		if ((*this)._method_is_str()) {
			_case_begin_4389070368:;
			{
				if ((!(_31826_x._method_is_str()))) {
					return false;
				}
				(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_4389070464:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_4389069008:;
			{
				if (_31826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389069120:;
			{
				if (_31826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_4389068688:;
			{
				return false;
			}
		}
		_match_end_4389068512:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_sub(_1a8d46165_Const _35126_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_4389088304:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_4389088400:;
			{
				if (_35126_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389086944:;
			{
				if (_35126_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_4389086640:;
			{
				return false;
			}
		}
		_match_end_4389086464:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_mul(_1a8d46165_Const _37826_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_4389103328:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_4389103424:;
			{
				if (_37826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389101968:;
			{
				if (_37826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_4389101664:;
			{
				return false;
			}
		}
		_match_end_4389101488:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_div(_1a8d46165_Const _40926_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_4389117968:;
			{
				jule::F64 _41217_l = _40926_x._method_as_f64();
				if (_41217_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_4389118064:;
			{
				jule::F64 _41917_l = _40926_x._method_as_f64();
				if (_41917_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389116608:;
			{
				jule::F64 _42617_l = _40926_x._method_as_f64();
				if (_42617_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
			}
		}
		else {
			_case_begin_4389116304:;
			{
				return false;
			}
		}
		_match_end_4389116128:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_mod(_1a8d46165_Const _44126_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389132288:;
			{
				jule::I64 _44417_l = _44126_x._method_as_i64();
				if (_44417_l == 0LL) {
					return false;
				}
				(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389132384:;
			{
				jule::U64 _45117_l = _44126_x._method_as_u64();
				if (_45117_l == 0LL) {
					return false;
				}
				(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
			}
		}
		else {
			_case_begin_4389130640:;
			{
				return false;
			}
		}
		_match_end_4389130464:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_bitwise_and(_1a8d46165_Const _46534_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389143152:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389143248:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
			}
		}
		else {
			_case_begin_4389141504:;
			{
				return false;
			}
		}
		_match_end_4389141328:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_bitwise_or(_1a8d46165_Const _48133_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389150912:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389151008:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
			}
		}
		else {
			_case_begin_4389149264:;
			{
				return false;
			}
		}
		_match_end_4389149088:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_xor(_1a8d46165_Const _49726_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389158544:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389158640:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
			}
		}
		else {
			_case_begin_4389156896:;
			{
				return false;
			}
		}
		_match_end_4389156720:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_lshift(_1a8d46165_Const _51329_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389166304:;
			{
				jule::I64 _51617_l = (*this)._method_as_i64();
				if (_51617_l < 0LL) {
					jule::U64 _51821_r = _51329_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
				} else {
					_1a8d46165_lshift_unsig((*this),_51329_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389166400:;
			{
				_1a8d46165_lshift_unsig((*this),_51329_x);
			}
		}
		else {
			_case_begin_4389164656:;
			{
				return false;
			}
		}
		_match_end_4389164480:;
	}
	return true;
}



inline jule::Bool _1a8d46165_Const::_method_rshift(_1a8d46165_Const _53629_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_4389175744:;
			{
				jule::I64 _53917_l = (*this)._method_as_i64();
				if (_53917_l < 0LL) {
					jule::U64 _54121_r = _53629_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
				} else {
					_1a8d46165_rshift_unsig((*this),_53629_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_4389175840:;
			{
				_1a8d46165_rshift_unsig((*this),_53629_x);
			}
		}
		else {
			_case_begin_4389174096:;
			{
				return false;
			}
		}
		_match_end_4389173920:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8d46165_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a7e59_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1db4a7e59_StructIns::_method_to_str(void) {
	jule::Str _22217_kind = jule::Str();
	_22217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22217_kind+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4391328096:;
			if (it != expr.end()) {
				jule::Ptr<_1a8ad0a37_TypeKind> &_1db4a7e59_g = *it;
				{
					_22217_kind+=_1db4a7e59_g->_method_to_str();
					_22217_kind+=jule::Str(",", 1);
				}
				_iter_next_4391328096:;
				++it;
				goto _iter_begin_4391328096;
			}
			_iter_end_4391328096:;
		}
		_22217_kind=_22217_kind.slice(0LL,_22217_kind.len() - 1LL);
		_22217_kind+=jule::Str("]", 1);
	}
	return _22217_kind;
}



inline jule::Bool _1db4a7e59_StructIns::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _23722_other) {
	jule::Ptr<_1db4a7e59_StructIns> _23813_s = _23722_other->_method_strct();
	if (_23813_s == nullptr) {
		return false;
	}
	if (this->self->_field_decl != _23813_s->_field_decl) {
		return false;
	}
	if (this->self->_field_generics.len() != _23813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25117_i = 0LL;
	for (; _25117_i < this->self->_field_generics.len(); (_25117_i)++) {
		{
			if ((!(this->self->_field_generics[_25117_i]->_method_equals(_23813_s->_field_generics[_25117_i])))) {
				return false;
			}
		}
	_iter_next_4391336768:;
	}
	_iter_end_4391336768:;
	return true;
}



inline jule::Bool _1db4a7e59_StructIns::_method_same(jule::Ptr<_1db4a7e59_StructIns> _26523_s) {
	if (((*this)._field_decl != _26523_s->_field_decl) || (_26523_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4391344560:;
		if (it != expr.end()) {
			jule::Int _1db4a7e59_i = it - expr.begin();
			jule::Ptr<_1a8ad0a37_TypeKind> &_1db4a7e59_g = *it;
			{
				if ((!(_1db4a7e59_g->_method_equals(_26523_s->_field_generics[_1db4a7e59_i])))) {
					return false;
				}
			}
			_iter_next_4391344560:;
			++it;
			_1db4a7e59_i++;
			goto _iter_begin_4391344560;
		}
		_iter_end_4391344560:;
	}
	return true;
}



inline jule::Ptr<_1c17e2687_Fn> _1db4a7e59_StructIns::_method_find_method(jule::Str _28034_ident,jule::Bool _28046_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4391350240:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1db4a7e59_f = *it;
			{
				if ((_1db4a7e59_f->_field_statically == _28046_statically) && (_1db4a7e59_f->_field_ident == _28034_ident)) {
					return _1db4a7e59_f;
				}
			}
			_iter_next_4391350240:;
			++it;
			goto _iter_begin_4391350240;
		}
		_iter_end_4391350240:;
	}
	return nullptr;
}



inline jule::Ptr<_1db4a7e59_FieldIns> _1db4a7e59_StructIns::_method_find_field(jule::Str _29133_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4391354384:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_FieldIns> _1db4a7e59_f = *it;
			{
				if (_1db4a7e59_f->_field_decl->_field_ident == _29133_ident) {
					return _1db4a7e59_f;
				}
			}
			_iter_next_4391354384:;
			++it;
			goto _iter_begin_4391354384;
		}
		_iter_end_4391354384:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a7e59_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c17e2687_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c17e2687_ParamIns::_method_to_str(void) {
	jule::Str _18017_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_18017_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_18017_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_18017_s+=jule::Str("&", 1);
		}
		_18017_s+=jule::Str("self", 4);
		return _18017_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_18017_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_18017_s+=(*this)._field_kind->_method_to_str();
	}
	return _18017_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c17e2687_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c17e2687_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1c17e2687_FnIns::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _23522_other) {
	jule::Ptr<_1c17e2687_FnIns> _23613_f = _23522_other->_method_fnc();
	if (_23613_f == nullptr) {
		return false;
	}
	if (this->self->_field_decl->_field_statically != _23613_f->_field_decl->_field_statically) {
		return false;
	}
	if (this->self->_field_decl->_field_exceptional != _23613_f->_field_decl->_field_exceptional) {
		return false;
	}
	if (this->self->_field_decl->_field_unsafety != _23613_f->_field_decl->_field_unsafety) {
		return false;
	}
	if (this->self->_field_generics.len() != _23613_f->_field_generics.len()) {
		return false;
	}
	if (this->self->_field_decl->_method_is_void() != _23613_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _26117_i = 0LL;
	for (; _26117_i < this->self->_field_generics.len(); (_26117_i)++) {
		{
			if ((!(this->self->_field_generics[_26117_i]->_method_equals(_23613_f->_field_generics[_26117_i])))) {
				return false;
			}
		}
	_iter_next_4391430976:;
	}
	_iter_end_4391430976:;
	jule::Fn<jule::Bool(jule::Ptr<_1c17e2687_ParamIns>,jule::Ptr<_1c17e2687_ParamIns>)> _26813_check_params = jule::Fn<jule::Bool(jule::Ptr<_1c17e2687_ParamIns>,jule::Ptr<_1c17e2687_ParamIns>)>([=](jule::Ptr<_1c17e2687_ParamIns> _26831_p1,jule::Ptr<_1c17e2687_ParamIns> _26846_p2) mutable -> jule::Bool {
		if (_26831_p1->_field_decl->_field_mutable != _26846_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26831_p1->_field_decl->_method_is_self()) {
			if ((!(_26846_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26831_p1->_field_decl->_method_is_ref() != _26846_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26831_p1->_field_decl->_field_reference != _26846_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26831_p1->_field_decl->_field_variadic != _26846_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26831_p1->_field_kind->_method_equals(_26846_p2->_field_kind);
	});
	_26117_i=0LL;
	for (; _26117_i < this->self->_field_params.len(); (_26117_i)++) {
		{
			if ((!(_26813_check_params(this->self->_field_params[_26117_i],_23613_f->_field_params[_26117_i])))) {
				return false;
			}
		}
	_iter_next_4391460704:;
	}
	_iter_end_4391460704:;
	if ((!(this->self->_field_decl->_method_is_void()))) {
		if ((!(this->self->_field_result->_method_equals(_23613_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1c17e2687_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != 0LL;
}



inline jule::Bool _1c17e2687_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*this)._field_decl->_method_is_anon());
}



inline jule::Bool _1c17e2687_FnIns::_method_same(jule::Ptr<_1c17e2687_FnIns> _32523_f) {
	if (((*this)._field_decl != _32523_f->_field_decl) || (_32523_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4391472736:;
		if (it != expr.end()) {
			jule::Int _1c17e2687_i = it - expr.begin();
			jule::Ptr<_1a8ad0a37_TypeKind> &_1c17e2687_g = *it;
			{
				if ((!(_1c17e2687_g->_method_equals(_32523_f->_field_generics[_1c17e2687_i])))) {
					return false;
				}
			}
			_iter_next_4391472736:;
			++it;
			_1c17e2687_i++;
			goto _iter_begin_4391472736;
		}
		_iter_end_4391472736:;
	}
	return true;
}



inline jule::Str _1c17e2687_FnIns::_method_get_kind_str(jule::Bool _34131_ident) {
	jule::Str _34217_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_34217_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_34217_s+=jule::Str("unsafe ", 7);
	}
	_34217_s+=jule::Str("fn", 2);
	if (_34131_ident && ((*this)._field_decl != nullptr)) {
		_34217_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_34217_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4391483072:;
			if (it != expr.end()) {
				jule::Int _1c17e2687_i = it - expr.begin();
				jule::Ptr<_1a8ad0a37_TypeKind> &_1c17e2687_t = *it;
				{
					_34217_s+=_1c17e2687_t->_method_to_str();
					if ((_1c17e2687_i + 1LL) < (*this)._field_generics.len()) {
						_34217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4391483072:;
				++it;
				_1c17e2687_i++;
				goto _iter_begin_4391483072;
			}
			_iter_end_4391483072:;
		}
		_34217_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_34217_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_4391487136:;
			if (it != expr.end()) {
				jule::Int _1c17e2687_i = it - expr.begin();
				jule::Ptr<_1da7b8e5d_GenericDecl> &_1c17e2687_g = *it;
				{
					_34217_s+=_1c17e2687_g->_field_ident;
					if ((_1c17e2687_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_34217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4391487136:;
				++it;
				_1c17e2687_i++;
				goto _iter_begin_4391487136;
			}
			_iter_end_4391487136:;
		}
		_34217_s+=jule::Str("]", 1);
	}
	_34217_s+=jule::Str("(", 1);
	jule::I64 _37913_n = (*this)._field_params.len();
	if (_37913_n > 0LL) {
		{
			auto &expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_4391492304:;
			if (it != expr.end()) {
				jule::Ptr<_1c17e2687_ParamIns> &_1c17e2687_p = *it;
				{
					_34217_s+=_1c17e2687_p->_method_to_str();
					_34217_s+=jule::Str(",", 1);
				}
				_iter_next_4391492304:;
				++it;
				goto _iter_begin_4391492304;
			}
			_iter_end_4391492304:;
		}
		_34217_s=_34217_s.slice(0LL,_34217_s.len() - 1LL);
	}
	_34217_s+=jule::Str(")", 1);
	if ((*this)._field_decl->_field_exceptional) {
		_34217_s+=jule::Str("!", 1);
	}
	if ((!((*this)._field_decl->_method_is_void()))) {
		_34217_s+=jule::Str(":", 1);
		_34217_s+=(*this)._field_result->_method_to_str();
	}
	return _34217_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c17e2687_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "anon:" << _Src._field_anon << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c18c86d5_ReferenceStack> _1c18c86d5_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1c18c86d5_ReferenceStack>(new( std::nothrow ) _1c18c86d5_ReferenceStack());
}



inline jule::Int _1c18c86d5_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1c18c86d5_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



inline void _1c18c86d5_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer = jule::alloc_for_append((*this)._field_buffer,1);(*this)._field_buffer.push(_6331_ref);
}



inline jule::Bool _1c18c86d5_ReferenceStack::_method_exist_0(jule::Ptr<_1c1b58316_Var> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4394469648:;
		if (it != expr.end()) {
			jule::Any &_1c18c86d5_ref = *it;
			{
				if (_1c18c86d5_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4394469648:;
			++it;
			goto _iter_begin_4394469648;
		}
		_iter_end_4394469648:;
	}
	return false;
}

inline jule::Bool _1c18c86d5_ReferenceStack::_method_exist_1(jule::Ptr<_1c17e2687_FnIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4394477552:;
		if (it != expr.end()) {
			jule::Any &_1c18c86d5_ref = *it;
			{
				if (_1c18c86d5_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4394477552:;
			++it;
			goto _iter_begin_4394477552;
		}
		_iter_end_4394477552:;
	}
	return false;
}

inline jule::Bool _1c18c86d5_ReferenceStack::_method_exist_2(jule::Ptr<_1db4a7e59_StructIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4394508176:;
		if (it != expr.end()) {
			jule::Any &_1c18c86d5_ref = *it;
			{
				if (_1c18c86d5_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4394508176:;
			++it;
			goto _iter_begin_4394508176;
		}
		_iter_end_4394508176:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c18c86d5_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c18c86d5_SymbolBuilder> _1c18c86d5_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_1c18c86d5_SymbolBuilder> _31217_root = this->self;
	while (_31217_root->_field_owner != nullptr) {
		{
			_31217_root=_31217_root->_field_owner;
		}
	_iter_next_4391505824:;
	}
	_iter_end_4391505824:;
	return _31217_root;
}



inline void _1c18c86d5_SymbolBuilder::_method_push_err(_1da81133a_Token& _31928_token,jule::Str _31942_fmt,jule::Slice<jule::Any> _31955_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1c1b18a24_compiler_err(_31928_token,true,_31942_fmt,_31955_args));
}



inline void _1c18c86d5_SymbolBuilder::_method_push_err_text(_1da81133a_Token& _32333_token,jule::Str _32347_fmt,jule::Slice<jule::Any> _32360_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1c1b18a24_compiler_err(_32333_token,false,_32347_fmt,_32360_args));
}



inline void _1c18c86d5_SymbolBuilder::_method_push_suggestion(jule::Str _32834_fmt,jule::Slice<jule::Any> _32847_args) {
	{
		_1c1b18a24_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_32834_fmt,_32847_args);
	}
}



inline jule::Bool _1c18c86d5_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_1da7b8e5d_UseDecl>& _33243_decl) {
	jule::Bool _33261_ok = jule::Bool();
	if (_20374065d_is_std_header_path(_33243_decl->_field_link_path)) {
		_33261_ok = true;
		return _33261_ok;
	}
	jule::Str _33713_ext = _20525e312_ext(_33243_decl->_field_link_path);
	if ((!(_20374065d_is_valid_header_ext(_33713_ext))) && (!(_20374065d_is_valid_cpp_ext(_33713_ext)))) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33713_ext)}));
		_33261_ok = false;
		return _33261_ok;
	}
	jule::Ptr<_1db3e1b84_Status> _34413_info = ({
		auto except = _1db3e1b84_Status::_static_method_of(_33243_decl->_field_link_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err(_33243_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33243_decl->_field_link_path)}));
			_33261_ok = false;
			return _33261_ok;
			_33261_ok = false;
			return _33261_ok;
		} jule::Ptr<_1db3e1b84_Status>();});
	});
	if (_34413_info->_method_is_dir()) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33243_decl->_field_link_path)}));
		_33261_ok = false;
		return _33261_ok;
	}
	_33261_ok = true;
	return _33261_ok;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c18c86d5_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_1da7b8e5d_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl->_field_link_path;
	if ((!(_20374065d_is_std_header_path(_35647_decl->_field_link_path)))) {
		jule::Bool _36021_ok = (*this)._method_check_cpp_use_decl_path(_35647_decl);
		if ((!(_36021_ok))) {
			return nullptr;
		}
		std::tie(_35717_path,_36021_ok) = _20525e312_abs(_35647_decl->_field_link_path);
		if ((!(_36021_ok))) {
			(*this)._method_push_err(_35647_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35647_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1c1b398be_ImportInfo>(new( std::nothrow ) _1c1b398be_ImportInfo(_35647_decl->_field_token,_35717_path,_35647_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1da81133a_Token>(),nullptr));
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c18c86d5_SymbolBuilder::_method_build_std_import(jule::Ptr<_1da7b8e5d_UseDecl>& _38340_decl) {
	jule::Str _38417_path = _38340_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38417_path=_38417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38417_path=_20525e312_join(jule::Slice<jule::Str>({_205229b6d_PATH_STDLIB,_38417_path}));
	jule::Bool _38720_ok;
	std::tie(_38417_path,_38720_ok) = _20525e312_abs(_38417_path);
	if ((!(_38720_ok))) {
		(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1db3e1b84_Status> _39413_info = ({
		auto except = _1db3e1b84_Status::_static_method_of(_38417_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db3e1b84_Status>();});
	});
	if ((!(_39413_info->_method_is_dir()))) {
		(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _40413_ident = _38340_decl->_field_link_path.slice(_38340_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1c1b398be_ImportInfo>(new( std::nothrow ) _1c1b398be_ImportInfo(_38340_decl->_field_token,_38417_path,_38340_decl->_field_link_path,_40413_ident,_38340_decl->_field_alias,jule::Bool(),false,true,_38340_decl->_field_full,jule::Slice<_1da81133a_Token>(),jule::new_struct<_1c1b398be_Package>(new( std::nothrow ) _1c1b398be_Package(nullptr))));
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c18c86d5_SymbolBuilder::_method_build_ident_import(jule::Ptr<_1da7b8e5d_UseDecl>& _42143_decl) {
	jule::Str _42217_path = _42143_decl->_field_link_path;
	_42217_path=_42217_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_42217_path=_20525e312_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_42217_path}));
	jule::Bool _42620_ok;
	std::tie(_42217_path,_42620_ok) = _20525e312_abs(_42217_path);
	if ((!(_42620_ok))) {
		this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1db3e1b84_Status> _43213_info = ({
		auto except = _1db3e1b84_Status::_static_method_of(_42217_path);
		(except.ok()) ? (except.result) : ({{
			this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db3e1b84_Status>();});
	});
	if ((!(_43213_info->_method_is_dir()))) {
		this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _44313_ident = _42143_decl->_field_link_path.slice(_42143_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1c1b398be_ImportInfo>(new( std::nothrow ) _1c1b398be_ImportInfo(_42143_decl->_field_token,_42217_path,_42143_decl->_field_link_path,_44313_ident,_42143_decl->_field_alias,jule::Bool(),false,false,_42143_decl->_field_full,jule::Slice<_1da81133a_Token>(),jule::new_struct<_1c1b398be_Package>(new( std::nothrow ) _1c1b398be_Package(nullptr))));
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c18c86d5_SymbolBuilder::_method_build_import(jule::Ptr<_1da7b8e5d_UseDecl>& _46037_decl) {
	{
		if (_46037_decl->_field_cpp_linked) {
			_case_begin_4391587840:;
			{
				return this->self->_method_build_cpp_header_import(_46037_decl);
			}
		}
		else if (_46037_decl->_field_std) {
			_case_begin_4391587232:;
			{
				return this->self->_method_build_std_import(_46037_decl);
			}
		}
		else {
			_case_begin_4391585856:;
			{
				return this->self->_method_build_ident_import(_46037_decl);
			}
		}
		_match_end_4391585680:;
	}
}



inline jule::Bool _1c18c86d5_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_1c1b398be_ImportInfo>& _46844_pkg) {
	jule::Bool _46864_ok = jule::Bool();
	jule::Ptr<_1c1b398be_ImportInfo> _47013_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>([=](jule::Ptr<_1c1b398be_ImportInfo> _47049_spkg) mutable -> jule::Bool {
		return _46844_pkg->_field_path == _47049_spkg->_field_path;
	}));
	if (_47013_lpkg == nullptr) {
		_46864_ok = true;
		return _46864_ok;
	}
	(*this)._method_push_err(_46844_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46844_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_46864_ok = false;
	return _46864_ok;
}



inline void _1c18c86d5_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_1c1b398be_ImportInfo>& _48246_imp,jule::Ptr<_1da7b8e5d_UseDecl>& _48269_decl) {
	{
		auto &expr = _48269_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_4391604832:;
		if (it != expr.end()) {
			_1da81133a_Token _1c18c86d5_ident = *it;
			{
				if (_48246_imp->_method_exist_ident(_1c18c86d5_ident._field_kind)) {
					(*this)._method_push_err(_1c18c86d5_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1c18c86d5_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_4391604832;
				}
				_48246_imp->_field_selected = jule::alloc_for_append(_48246_imp->_field_selected,1);_48246_imp->_field_selected.push(_1c18c86d5_ident);
			}
			_iter_next_4391604832:;
			++it;
			goto _iter_begin_4391604832;
		}
		_iter_end_4391604832:;
	}
}



inline jule::Str _1c18c86d5_SymbolBuilder::_method_get_as_link_path(jule::Str _49440_path) {
	if (_49440_path.has_prefix(_205229b6d_PATH_STDLIB)) {
		_49440_path=_49440_path.slice(_205229b6d_PATH_STDLIB.len());
		return jule::Str("std", 3) + _49440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _50014_root;
	std::tie(_50014_root,std::ignore) = _20525e312_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_49440_path=_49440_path.slice(_50014_root.len());
	if (_49440_path[0LL] == 47LL) {
		_49440_path=_49440_path.slice(1LL);
	}
	return _49440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1c18c86d5_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_1c18c86d5_SymbolBuilder>& _50837_sb,jule::Str _50857_path,jule::Str& _50873_message) {
	
	jule::Str _51113_refers_to = _203741197_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50837_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50857_path))}));
	_50873_message=((_1c18c86d5_str_repeat(jule::Str(" ", 1),4LL) + _51113_refers_to) + jule::Str("\n", 1)) + _50873_message;
}



inline void _1c18c86d5_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_1c18c86d5_SymbolBuilder>& _51843_target,jule::Ptr<_1c1b398be_ImportInfo>& _51868_imp,_1da81133a_Token& _51887_error_token) {
	jule::Str _51917_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_51868_imp->_field_path,_51917_message);
	jule::Ptr<_1c18c86d5_SymbolBuilder> _52317_owner = this->self->_field_owner;
	jule::Ptr<_1c18c86d5_SymbolBuilder> _52417_old = this->self;
	while (_52317_owner->_field_owner != nullptr) {
		{
			this->self->_method_push_cycle_error(_52417_old->_field_owner,_52417_old->_field_table->_field_file->_method_dir(),_51917_message);
			if (_52317_owner->_field_owner == _51843_target) {
				this->self->_method_push_cycle_error(_51843_target,_52317_owner->_field_table->_field_file->_method_dir(),_51917_message);
				goto _iter_end_4391637280;
			}
			_52417_old=_52317_owner;
			_52317_owner=_52317_owner->_field_owner;
		}
	_iter_next_4391637280:;
	}
	_iter_end_4391637280:;
	this->self->_method_push_err(_51887_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51917_message)}));
}



inline jule::Bool _1c18c86d5_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_1c1b398be_ImportInfo> _54139_imp,jule::Ptr<_1da7b8e5d_UseDecl>& _54158_decl) {
	if (_54139_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_54158_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_54139_imp->_field_path))}));
		return false;
	}
	if (this->self->_field_owner == nullptr) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _54139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_54139_imp,_54158_decl->_field_token);
		return false;
	}
	jule::Ptr<_1c18c86d5_SymbolBuilder> _55617_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_55617_owner->_field_table->_field_file->_method_dir() == _54139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_55617_owner,_54139_imp,_54158_decl->_field_token);
		return false;
	}
	if (_55617_owner->_field_owner != nullptr) {
		_55617_owner=_55617_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1c18c86d5_SymbolBuilder::_method_import_package(jule::Ptr<_1c1b398be_ImportInfo>& _57139_imp,jule::Ptr<_1da7b8e5d_UseDecl>& _57162_decl) {
	jule::Bool _57180_ok = jule::Bool();
	if (_57139_imp->_field_cpp_linked) {
		_57180_ok = true;
		return _57180_ok;
	}
	jule::Ptr<_1c1b398be_ImportInfo> _57617_port = this->self->_field_importer.get()._method_get_import(_57139_imp->_field_path);
	if (_57617_port != nullptr) {
		_57139_imp->_field_package=_57617_port->_field_package;
		_57139_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_57139_imp,_57162_decl)))) {
			_57180_ok = false;
			return _57180_ok;
		}
		jule::Slice<jule::Ptr<_1da7635cd_Ast>> _58522_asts;
		jule::Slice<_203741197_Log> _58528_errors;
		std::tie(_58522_asts,_58528_errors) = this->self->_field_importer.get()._method_import_package(_57139_imp->_field_path);
		if (_58528_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_58528_errors);
			_57180_ok = false;
			return _57180_ok;
		}
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_4391672928:;
			if (it != expr.end()) {
				jule::Ptr<_1da7635cd_Ast> _1c18c86d5_ast = *it;
				{
					jule::Ptr<_1c2020e2b_SymbolTable> _59226_table;
					jule::Slice<_203741197_Log> _59233_errors;
					std::tie(_59226_table,_59233_errors) = _1da7ae948_build_symbols(_1c18c86d5_ast,this->self->_field_importer,this->self);
					if (_59233_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_59233_errors);
						this->self->_method_push_err_text(_57139_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_57139_imp->_field_link_path)}));
						_57180_ok = false;
						return _57180_ok;
					}
					_57139_imp->_field_package->_field_files = jule::alloc_for_append(_57139_imp->_field_package->_field_files,1);_57139_imp->_field_package->_field_files.push(_59226_table);
				}
				_iter_next_4391672928:;
				++it;
				goto _iter_begin_4391672928;
			}
			_iter_end_4391672928:;
		}
	}
	this->self->_method_impl_import_selections(_57139_imp,_57162_decl);
	_57180_ok = true;
	return _57180_ok;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c18c86d5_SymbolBuilder::_method_import_use_decl(jule::Ptr<_1da7b8e5d_UseDecl>& _61040_decl) {
	jule::Ptr<_1c1b398be_ImportInfo> _61117_imp = this->self->_method_build_import(_61040_decl);
	if (_61117_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _61717_ok = this->self->_method_check_duplicate_use_decl(_61117_imp);
	if ((!(_61717_ok))) {
		return nullptr;
	}
	_61717_ok=this->self->_method_import_package(_61117_imp,_61040_decl);
	this->self->_field_table->_field_imports = jule::alloc_for_append(this->self->_field_table->_field_imports,1);this->self->_field_table->_field_imports.push(_61117_imp);
	if (_61717_ok) {
		this->self->_field_importer.get()._method_imported(_61117_imp);
		return _61117_imp;
	}
	return nullptr;
}



inline void _1c18c86d5_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto &expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_4391690768:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_UseDecl> _1c18c86d5_decl = *it;
			{
				this->self->_method_import_use_decl(_1c18c86d5_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4391690768;
				}
			}
			_iter_next_4391690768:;
			++it;
			goto _iter_begin_4391690768;
		}
		_iter_end_4391690768:;
	}
}



inline void _1c18c86d5_SymbolBuilder::_method_append_decl(_1da7b8e5d_Node& _64235_decl) {
	{
		auto &_match_expr{ _64235_decl._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeAliasDecl>>()) {
			_case_begin_4391696032:;
			{
				jule::Ptr<_1a8ad0a37_TypeAlias> _64521_ta = _1c18c86d5_build_type_alias(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_TypeAliasDecl>());
				(*this)._field_table->_field_type_aliases = jule::alloc_for_append((*this)._field_table->_field_type_aliases,1);(*this)._field_table->_field_type_aliases.push(_64521_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_StructDecl>>()) {
			_case_begin_4391695424:;
			{
				jule::Ptr<_1db4a7e59_Struct> _64921_srct = _1c18c86d5_build_struct(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_StructDecl>());
				(*this)._field_table->_field_structs = jule::alloc_for_append((*this)._field_table->_field_structs,1);(*this)._field_table->_field_structs.push(_64921_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnDecl>>()) {
			_case_begin_4391695520:;
			{
				jule::Ptr<_1c17e2687_Fn> _65321_f = _1c18c86d5_build_fn(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_FnDecl>());
				(*this)._field_table->_field_funcs = jule::alloc_for_append((*this)._field_table->_field_funcs,1);(*this)._field_table->_field_funcs.push(_65321_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TraitDecl>>()) {
			_case_begin_4391695632:;
			{
				jule::Ptr<_1c196b2a0_Trait> _65721_t = _1c18c86d5_build_trait(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_TraitDecl>());
				(*this)._field_table->_field_traits = jule::alloc_for_append((*this)._field_table->_field_traits,1);(*this)._field_table->_field_traits.push(_65721_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VarDecl>>()) {
			_case_begin_4391697024:;
			{
				jule::Ptr<_1c1b58316_Var> _66121_v = _1c18c86d5_build_var(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_VarDecl>());
				(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_66121_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_EnumDecl>>()) {
			_case_begin_4391697120:;
			{
				jule::Ptr<_1c196c834_Enum> _66521_e = _1c18c86d5_build_enum(_64235_decl._field_data.operator jule::Ptr<_1da7b8e5d_EnumDecl>());
				(*this)._field_table->_field_enums = jule::alloc_for_append((*this)._field_table->_field_enums,1);(*this)._field_table->_field_enums.push(_66521_e);
			}
		}
		else {
			_case_begin_4391694624:;
			{
				(*this)._method_push_err(_64235_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_4391694848:;
	}
}



inline void _1c18c86d5_SymbolBuilder::_method_append_decls(void) {
	{
		auto &expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_4391702912:;
		if (it != expr.end()) {
			_1da7b8e5d_Node _1c18c86d5_decl = *it;
			{
				(*this)._method_append_decl(_1c18c86d5_decl);
			}
			_iter_next_4391702912:;
			++it;
			goto _iter_begin_4391702912;
		}
		_iter_end_4391702912:;
	}
}



inline void _1c18c86d5_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ptr<_1c1977ee3_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto &expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_4391717952:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Impl> _1c18c86d5_decl = *it;
			{
				(*this)._field_table->_field_impls = jule::alloc_for_append((*this)._field_table->_field_impls,1);(*this)._field_table->_field_impls.push(_1c18c86d5_build_impl(_1c18c86d5_decl));
			}
			_iter_next_4391717952:;
			++it;
			goto _iter_begin_4391717952;
		}
		_iter_end_4391717952:;
	}
}



inline void _1c18c86d5_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_1da7b8e5d_Directive>& _68643_d) {
	if (_68643_d->_field_args.len() == 0LL) {
		(*this)._method_push_err(_68643_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_68643_d->_field_args.len() > 1LL) {
		_1da81133a_Token _69117_arg = _68643_d->_field_args[1LL];
		(*this)._method_push_err(_69117_arg,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_1da81133a_Token _69513_arg = _68643_d->_field_args[0LL];
	if (_69513_arg._field_id != 6LLU) {
		(*this)._method_push_err(_69513_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_69513_arg._field_kind[0LL] != '\"') {
		(*this)._method_push_err(_69513_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*this)._field_table->_field_passes = jule::alloc_for_append((*this)._field_table->_field_passes,1);(*this)._field_table->_field_passes.push(_1c18c86d5_Pass(_68643_d->_field_tag,_69513_arg._field_kind.slice(1LL,_69513_arg._field_kind.len() - 1LL)));
}



inline void _1c18c86d5_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto &expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4391734304:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> _1c18c86d5_d = *it;
			{
				{
					auto &_match_expr{ _1c18c86d5_d->_field_tag._field_kind };
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_4391737856:;
						{
							(*this)._method_push_directive_pass(_1c18c86d5_d);
						}
					}
					_match_end_4391738336:;
				}
			}
			_iter_next_4391734304:;
			++it;
			goto _iter_begin_4391734304;
		}
		_iter_end_4391734304:;
	}
}



inline void _1c18c86d5_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1c2020e2b_SymbolTable>(new( std::nothrow ) _1c2020e2b_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1c18c86d5_Pass>(),jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Slice<jule::Ptr<_1db4a7e59_Struct>>(),jule::Slice<jule::Ptr<_1c17e2687_Fn>>(),jule::Slice<jule::Ptr<_1c196b2a0_Trait>>(),jule::Slice<jule::Ptr<_1c196c834_Enum>>(),jule::Slice<jule::Ptr<_1c1977ee3_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1c18c86d5_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c197a248_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c197a248_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c197a248_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c197a248_ScopeChecker::_method_find_package(jule::Str _41835_ident) {
	return (*this)._field_s->_method_find_package(_41835_ident);
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c197a248_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> _42837_selector) {
	return (*this)._field_s->_method_select_package(_42837_selector);
}



inline jule::Ptr<_1c1b58316_Var> _1c197a248_ScopeChecker::_method_find_var(jule::Str _43931_ident,jule::Bool _43943_cpp_linked) {
	
	jule::Ptr<_1c1b58316_Var> _44217_v = (*this)._field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
	if (_44217_v != nullptr) {
		return _44217_v;
	}
	jule::Ptr<_1c197a248_ScopeChecker> _44717_parent = (*this)._field_parent;
	while (_44717_parent != nullptr) {
		{
			_44217_v=_44717_parent->_field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
			if (_44217_v != nullptr) {
				return _44217_v;
			}
			_44717_parent=_44717_parent->_field_parent;
		}
	_iter_next_4391797376:;
	}
	_iter_end_4391797376:;
	return (*this)._field_s->_method_find_var(_43931_ident,_43943_cpp_linked);
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c197a248_ScopeChecker::_method_find_type_alias(jule::Str _46638_ident,jule::Bool _46650_cpp_linked) {
	
	jule::Ptr<_1a8ad0a37_TypeAlias> _46917_ta = (*this)._field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
	if (_46917_ta != nullptr) {
		return _46917_ta;
	}
	jule::Ptr<_1c197a248_ScopeChecker> _47417_parent = (*this)._field_parent;
	while (_47417_parent != nullptr) {
		{
			_46917_ta=_47417_parent->_field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
			if (_46917_ta != nullptr) {
				return _46917_ta;
			}
			_47417_parent=_47417_parent->_field_parent;
		}
	_iter_next_4391809520:;
	}
	_iter_end_4391809520:;
	return (*this)._field_s->_method_find_type_alias(_46638_ident,_46650_cpp_linked);
}



inline jule::Ptr<_1db4a7e59_Struct> _1c197a248_ScopeChecker::_method_find_struct(jule::Str _49134_ident,jule::Bool _49146_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49134_ident,_49146_cpp_linked);
}



inline jule::Ptr<_1c17e2687_Fn> _1c197a248_ScopeChecker::_method_find_fn(jule::Str _50030_ident,jule::Bool _50042_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50030_ident,_50042_cpp_linked);
}



inline jule::Ptr<_1c196b2a0_Trait> _1c197a248_ScopeChecker::_method_find_trait(jule::Str _50933_ident) {
	return (*this)._field_s->_method_find_trait(_50933_ident);
}



inline jule::Ptr<_1c196c834_Enum> _1c197a248_ScopeChecker::_method_find_enum(jule::Str _51832_ident) {
	return (*this)._field_s->_method_find_enum(_51832_ident);
}



inline jule::Bool _1c197a248_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_1c197a248_ScopeChecker> _52617_scope = this->self;
	_julec_label_iter:;
	if (_52617_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (_52617_scope->_field_parent != nullptr) {
		_52617_scope=_52617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1c197a248_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



inline jule::Bool _1c197a248_ScopeChecker::_method_is_deferred(void) {
	jule::Ptr<_1c197a248_ScopeChecker> _54717_scope = this->self;
	_julec_label_iter:;
	if (_54717_scope->_field_scope->_field_deferred) {
		return true;
	}
	if (_54717_scope->_field_parent != nullptr) {
		_54717_scope=_54717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_1c197a248_ScopeChecker> _56517_root = this->self;
	while ((_56517_root->_field_parent != nullptr) && (_56517_root->_field_owner == nullptr)) {
		{
			_56517_root=_56517_root->_field_parent;
		}
	_iter_next_4391846848:;
	}
	_iter_end_4391846848:;
	return _56517_root;
}



inline jule::Ptr<_1c197a248_Label> _1c197a248_ScopeChecker::_method_find_label(jule::Str _57529_ident) {
	{
		auto &expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4391850816:;
		if (it != expr.end()) {
			jule::Any _1c197a248_st = *it;
			{
				{
					auto &_match_expr{ _1c197a248_st };
					if (_match_expr.type_is<jule::Ptr<_1c197a248_Label>>()) {
						_case_begin_4391852240:;
						{
							jule::Ptr<_1c197a248_Label> _57925_label = _1c197a248_st.operator jule::Ptr<_1c197a248_Label>();
							if (_57925_label->_field_ident == _57529_ident) {
								return _57925_label;
							}
						}
					}
					_match_end_4391852624:;
				}
			}
			_iter_next_4391850816:;
			++it;
			goto _iter_begin_4391850816;
		}
		_iter_end_4391850816:;
	}
	return nullptr;
}



inline jule::Ptr<_1c197a248_ScopeLabel> _1c197a248_ScopeChecker::_method_find_label_scope(jule::Str _59136_ident) {
	jule::Ptr<_1c197a248_ScopeLabel> _59217_label = this->self->_method_find_label_all(_59136_ident);
	if ((_59217_label != nullptr) && (_59217_label->_field_scope == this->self)) {
		return _59217_label;
	}
	return nullptr;
}



inline jule::Ptr<_1c197a248_ScopeLabel> _1c197a248_ScopeChecker::_method_find_label_all(jule::Str _60333_ident) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4391860464:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_ScopeLabel> _1c197a248_lbl = *it;
			{
				if (_1c197a248_lbl->_field_label->_field_ident == _60333_ident) {
					return _1c197a248_lbl;
				}
			}
			_iter_next_4391860464:;
			++it;
			goto _iter_begin_4391860464;
		}
		_iter_end_4391860464:;
	}
	return nullptr;
}



inline jule::Bool _1c197a248_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _61538_itself,jule::Str _61555_ident) {
	jule::Ptr<_1c1b58316_Var> _61613_v = (*this)._method_find_var(_61555_ident,false);
	if ((_61613_v != nullptr) && (static_cast<jule::Uintptr>(_61613_v) != _61538_itself)) {
		if (_61613_v->_field_scope == nullptr) {
			return false;
		}
		return (_61613_v->_field_scope == (*this)._field_scope) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ptr<_1a8ad0a37_TypeAlias> _62413_ta = (*this)._method_find_type_alias(_61555_ident,false);
	if ((_62413_ta != nullptr) && (static_cast<jule::Uintptr>(_62413_ta) != _61538_itself)) {
		if (_62413_ta->_field_scope == nullptr) {
			return false;
		}
		return (_62413_ta->_field_scope == (*this)._field_tree) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _1c197a248_ScopeChecker::_method_check_var_decl(jule::Ptr<_1da7b8e5d_VarDecl> _63538_decl) {
	jule::Ptr<_1c1b58316_Var> _63617_v = _1c18c86d5_build_var(_63538_decl);
	_63617_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars = jule::alloc_for_append(this->self->_field_table->_field_vars,1);this->self->_field_table->_field_vars.push(_63617_v);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_63617_v));
	});
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_63617_v),_63617_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_63617_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_63617_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_var_decl(_63617_v,this->self);
	if ((!(_63617_v->_method_is_type_inferred())) && ((_63617_v->_field_kind == nullptr) || (_63617_v->_field_kind->_field_kind == nullptr))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_63617_v,this->self);
}



inline void _1c197a248_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_1da7b8e5d_TypeAliasDecl> _65745_decl) {
	jule::Ptr<_1a8ad0a37_TypeAlias> _65817_ta = _1c18c86d5_build_type_alias(_65745_decl);
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_65817_ta),_65817_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_65817_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_65817_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_type_alias_decl(_65817_ta,this->self);
	this->self->_field_table->_field_type_aliases = jule::alloc_for_append(this->self->_field_table->_field_type_aliases,1);this->self->_field_table->_field_type_aliases.push(_65817_ta);
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1c197a248_Scope>(new( std::nothrow ) _1c197a248_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1c197a248_ScopeChecker::_method_check_child_ssc(jule::Ptr<_1da7b8e5d_ScopeTree>& _67440_tree,jule::Ptr<_1c197a248_Scope>& _67463_s,jule::Ptr<_1c197a248_ScopeChecker>& _67479_ssc) {
	_67479_ssc->_field_parent=this->self;
	_67479_ssc->_method_check(_67440_tree,_67463_s);
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_check_child_sc(jule::Ptr<_1da7b8e5d_ScopeTree>& _67939_tree,jule::Ptr<_1c197a248_ScopeChecker>& _67962_ssc) {
	jule::Ptr<_1c197a248_Scope> _68017_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_67939_tree,_68017_s,_67962_ssc);
	return _68017_s;
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_check_child(jule::Ptr<_1da7b8e5d_ScopeTree>& _68536_tree) {
	jule::Ptr<_1c197a248_ScopeChecker> _68617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_68536_tree,_68617_ssc);
}



inline void _1c197a248_ScopeChecker::_method_check_anon_scope(jule::Ptr<_1da7b8e5d_ScopeTree> _69040_tree) {
	jule::Ptr<_1c197a248_Scope> _69117_s = this->self->_method_check_child(_69040_tree);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_69117_s));
}



inline void _1c197a248_ScopeChecker::_method_process_error_call(jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>& _69543_m,_1da81133a_Token _69574_err) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c197a248_ScopeChecker> _70017_root = this->self->_method_get_root();
	if ((!(_70017_root->_field_owner->_field_decl->_field_exceptional))) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_69543_m->_field_func=_70017_root->_field_owner;
}



inline void _1c197a248_ScopeChecker::_method_check_expr(jule::Ptr<_1da7b8e5d_Expr> _70834_expr) {
	jule::Ptr<_1c1ead281_Eval> _70917_eval = this->self->_field_s->_method_eval(this->self);
	_70917_eval->_field_ignored=true;
	jule::Ptr<_1c1ead281_Data> _71117_d = _70917_eval->_method_eval_expr(_70834_expr);
	if (_71117_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _71117_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>()) {
			_case_begin_4391938064:;
			{
				jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel> _71821_m = _71117_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>();
				this->self->_method_process_error_call(_71821_m,_70834_expr->_field_token);
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_FnCallExprModel>>()) {
			_case_begin_4391938160:;
			{
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
			}
		}
		else {
			_case_begin_4391937680:;
			{
				this->self->_field_s->_method_push_err(_70834_expr->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_4391937072:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_co_expr(jule::Ptr<_1da7b8e5d_CoExpr> _73737_expr) {
	jule::Ptr<_1c1ead281_Eval> _73817_eval = this->self->_field_s->_method_eval(this->self);
	_73817_eval->_field_ignored=true;
	jule::Ptr<_1c1ead281_Data> _74017_d = _73817_eval->_method_eval_expr(_73737_expr->_field_expr);
	if (_74017_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _74017_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_FnCallExprModel>>()) {
			_case_begin_4391955040:;
			{
				jule::Ptr<_1c19727a1_FnCallExprModel> _74721_model = _74017_d->_field_model.operator jule::Ptr<_1c19727a1_FnCallExprModel>();
				if (_74721_model->_field_func->_field_decl->_field_exceptional) {
					this->self->_field_s->_method_push_err(_73737_expr->_field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					this->self->_field_s->_method_push_suggestion(jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_74721_model->_field_is_co=true;
				_73817_eval->_method_check_fn_of_concurrent_call(_74721_model->_field_func,_73737_expr->_field_expr->_field_token);
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_74017_d));
			}
		}
		else {
			_case_begin_4391952656:;
			{
				this->self->_field_s->_method_push_err(_73737_expr->_field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_4391952048:;
	}
}



inline jule::Ptr<_1c197a248_If> _1c197a248_ScopeChecker::_method_check_if(jule::Ptr<_1da7b8e5d_If> _76332_i) {
	jule::Ptr<_1c197a248_Scope> _76417_s = this->self->_method_check_child(_76332_i->_field_scope);
	jule::Ptr<_1c1ead281_Data> _76617_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_76332_i->_field_expr);
	if (_76617_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_Prim> _77117_prim = _76617_d->_field_kind->_method_prim();
	if ((_77117_prim == nullptr) || (!(_77117_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_76332_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1c197a248_If>(new( std::nothrow ) _1c197a248_If(_76617_d->_field_model,_76417_s));
}



inline jule::Ptr<_1c197a248_Else> _1c197a248_ScopeChecker::_method_check_else(jule::Ptr<_1da7b8e5d_Else> _78334_e) {
	return jule::new_struct<_1c197a248_Else>(new( std::nothrow ) _1c197a248_Else(this->self->_method_check_child(_78334_e->_field_scope)));
}



inline void _1c197a248_ScopeChecker::_method_check_conditional(jule::Ptr<_1da7b8e5d_Conditional> _78941_conditional) {
	jule::Ptr<_1c197a248_Conditional> _79017_c = jule::new_struct<_1c197a248_Conditional>(new( std::nothrow ) _1c197a248_Conditional());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_79017_c));
	_79017_c->_field_elifs=jule::Slice<jule::Ptr<_1c197a248_If>>::alloc(0LL,static_cast<jule::I64>(_78941_conditional->_field_tail.len() + 1LL));
	_79017_c->_field_elifs = jule::alloc_for_append(_79017_c->_field_elifs,1);_79017_c->_field_elifs.push(this->self->_method_check_if(_78941_conditional->_field_head));
	{
		auto &expr = _78941_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_4391983312:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_If> _1c197a248_elif = *it;
			{
				_79017_c->_field_elifs = jule::alloc_for_append(_79017_c->_field_elifs,1);_79017_c->_field_elifs.push(this->self->_method_check_if(_1c197a248_elif));
			}
			_iter_next_4391983312:;
			++it;
			goto _iter_begin_4391983312;
		}
		_iter_end_4391983312:;
	}
	if (_78941_conditional->_field_default != nullptr) {
		_79017_c->_field_default=this->self->_method_check_else(_78941_conditional->_field_default);
	}
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _80539_it,jule::Ptr<_1da7b8e5d_ScopeTree> _80556_tree,jule::Ptr<_1c197a248_ScopeChecker> _80578_ssc) {
	_80578_ssc->_field_it=_80539_it;
	return this->self->_method_check_child_sc(_80556_tree,_80578_ssc);
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_check_iter_scope(jule::Uintptr _81036_it,jule::Ptr<_1da7b8e5d_ScopeTree>& _81054_tree) {
	jule::Ptr<_1c197a248_ScopeChecker> _81117_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_81036_it,_81054_tree,_81117_ssc);
}



inline void _1c197a248_ScopeChecker::_method_check_inf_iter(jule::Ptr<_1da7b8e5d_Iter>& _81539_it) {
	jule::Ptr<_1c197a248_InfIter> _81617_kind = jule::new_struct<_1c197a248_InfIter>(new( std::nothrow ) _1c197a248_InfIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_81617_kind));
	_81617_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_81617_kind),_81539_it->_field_scope);
}



inline void _1c197a248_ScopeChecker::_method_check_while_iter(jule::Ptr<_1da7b8e5d_Iter>& _82341_it) {
	jule::Ptr<_1da7b8e5d_WhileKind> _82417_wh = _82341_it->_field_kind.operator jule::Ptr<_1da7b8e5d_WhileKind>();
	if ((_82417_wh->_field_expr == nullptr) && (_82417_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_82341_it);
		return;
	}
	jule::Ptr<_1c197a248_WhileIter> _83017_kind = jule::new_struct<_1c197a248_WhileIter>(new( std::nothrow ) _1c197a248_WhileIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_83017_kind));
	_83017_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_83017_kind),_82341_it->_field_scope);
	if (_82417_wh->_field_expr != nullptr) {
		jule::Ptr<_1c1ead281_Data> _83721_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_82417_wh->_field_expr);
		if (_83721_d == nullptr) {
			return;
		}
		jule::Ptr<_1a8ad0a37_Prim> _84217_prim = _83721_d->_field_kind->_method_prim();
		if (_84217_prim == nullptr) {
			this->self->_field_s->_method_push_err(_82341_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_84217_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_82341_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_83017_kind->_field_expr=_83721_d->_field_model;
	}
	if (_82417_wh->_method_is_while_next()) {
		if ((!(_1c197a248_is_valid_ast_st_for_next_st(_82417_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_82417_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _86217_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_82417_wh->_field_next);
		if (_86217_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _86525_st = this->self->_field_scope->_field_stmts[_86217_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_86217_n);
			if ((!(_1c197a248_is_valid_st_for_next_st(_86525_st)))) {
				this->self->_field_s->_method_push_err(_82417_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_83017_kind->_field_next=_86525_st;
		}
	}
}



inline void _1c197a248_ScopeChecker::_method_check_range_iter(jule::Ptr<_1da7b8e5d_Iter>& _87641_it) {
	jule::Ptr<_1da7b8e5d_RangeKind> _87717_rang = _87641_it->_field_kind.operator jule::Ptr<_1da7b8e5d_RangeKind>();
	jule::Ptr<_1c1ead281_Data> _87917_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_87717_rang->_field_expr);
	if (_87917_d == nullptr) {
		return;
	}
	jule::Ptr<_1c197a248_RangeIter> _88417_kind = jule::new_struct<_1c197a248_RangeIter>(new( std::nothrow ) _1c197a248_RangeIter(_87917_d,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c1b58316_Var>(),jule::Ptr<_1c1b58316_Var>()));
	_1c1d617a5_RangeChecker _88817_rc = _1c1d617a5_RangeChecker(this->self,_87717_rang,_88417_kind,_87917_d);
	jule::Bool _89413_ok = _88817_rc._method_check();
	if ((!(_89413_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_88417_kind));
	jule::Ptr<_1c197a248_ScopeChecker> _90117_ssc = this->self->_method_new_child_checker();
	if (_88417_kind->_field_key_a != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88417_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_88417_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88417_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_90117_ssc->_field_table->_field_vars = jule::alloc_for_append(_90117_ssc->_field_table->_field_vars,1);_90117_ssc->_field_table->_field_vars.push(_88417_kind->_field_key_a);
	}
	if (_88417_kind->_field_key_b != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88417_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_88417_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88417_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_90117_ssc->_field_table->_field_vars = jule::alloc_for_append(_90117_ssc->_field_table->_field_vars,1);_90117_ssc->_field_table->_field_vars.push(_88417_kind->_field_key_b);
	}
	_88417_kind->_field_scope=this->self->_method_check_iter_scope_sc(static_cast<jule::Uintptr>(_88417_kind),_87641_it->_field_scope,_90117_ssc);
}



inline void _1c197a248_ScopeChecker::_method_check_iter(jule::Ptr<_1da7b8e5d_Iter> _92234_it) {
	if (_92234_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_92234_it);
		return;
	}
	{
		auto &_match_expr{ _92234_it->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_WhileKind>>()) {
			_case_begin_4392063904:;
			{
				this->self->_method_check_while_iter(_92234_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_RangeKind>>()) {
			_case_begin_4392064000:;
			{
				this->self->_method_check_range_iter(_92234_it);
			}
		}
		else {
			_case_begin_4392062272:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_4392063248:;
	}
}



inline jule::Bool _1c197a248_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _93542_it) {
	jule::Ptr<_1c197a248_ScopeChecker> _93617_scope = this->self;
	_julec_label_iter:;
	if (_93617_scope->_field_it == _93542_it) {
		return true;
	}
	if (_93617_scope->_field_parent != nullptr) {
		_93617_scope=_93617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1c197a248_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _95143_ptr) {
	jule::Ptr<_1c197a248_ScopeChecker> _95217_scope = this->self;
	_julec_label_iter:;
	if (_95217_scope->_field_it == _95143_ptr) {
		return true;
	}
	if (_95217_scope->_field_cse != 0LL) {
		jule::Uintptr _96017_mtch = static_cast<jule::Uintptr>(((_1c197a248_Case*)(_95217_scope->_field_cse))->_field_owner);
		if (_96017_mtch == _95143_ptr) {
			return true;
		}
	}
	if (_95217_scope->_field_parent != nullptr) {
		_95217_scope=_95217_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1c197a248_ContSt> _1c197a248_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_1da7b8e5d_ContSt> _97442_c) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_97442_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_97442_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1c197a248_ContSt>(new( std::nothrow ) _1c197a248_ContSt());
	}
	jule::Ptr<_1c197a248_ScopeChecker> _98417_scope = this->self;
	_julec_label_iter:;
	{
		if (((_98417_scope->_field_it == 0LL) && (_98417_scope->_field_parent != nullptr)) && (_98417_scope->_field_owner == nullptr)) {
			_case_begin_4392089440:;
			{
				_98417_scope=_98417_scope->_field_parent;
				goto _julec_label_iter;
			}
		}
		else if (_98417_scope->_field_it != 0LL) {
			_case_begin_4392089552:;
			{
				return jule::new_struct<_1c197a248_ContSt>(new( std::nothrow ) _1c197a248_ContSt(_98417_scope->_field_it));
			}
		}
		_match_end_4392089280:;
	}
	this->self->_field_s->_method_push_err(_97442_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c197a248_ScopeChecker::_method_check_cont(jule::Ptr<_1da7b8e5d_ContSt> _99930_c) {
	jule::Ptr<_1c197a248_ContSt> _100017_cont = this->self->_method_check_cont_valid_scope(_99930_c);
	if (_100017_cont == nullptr) {
		return;
	}
	if (_99930_c->_field_label._field_id != 0LLU) {
		jule::Ptr<_1c197a248_ScopeLabel> _100621_label = _1c197a248_find_label_parent(_99930_c->_field_label._field_kind,this->self->_field_parent);
		if (_100621_label == nullptr) {
			this->self->_field_s->_method_push_err(_99930_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_99930_c->_field_label._field_kind)}));
			return;
		}
		_100621_label->_field_used=true;
		if ((_100621_label->_field_pos + 1LL) >= _100621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			return;
		}
		jule::Int _101917_i = _100621_label->_field_pos + 1LL;
		if (_101917_i >= _100621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		} else {
			jule::Any _102325_st = _100621_label->_field_scope->_field_scope->_field_stmts[_101917_i];
			{
				auto &_match_expr{ _102325_st };
				if (_match_expr.type_is<jule::Ptr<_1c197a248_InfIter>>()) {
					_case_begin_4392112480:;
					{
						_100017_cont->_field_it=static_cast<jule::Uintptr>(_102325_st.operator jule::Ptr<_1c197a248_InfIter>());
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c197a248_RangeIter>>()) {
					_case_begin_4392112576:;
					{
						_100017_cont->_field_it=static_cast<jule::Uintptr>(_102325_st.operator jule::Ptr<_1c197a248_RangeIter>());
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c197a248_WhileIter>>()) {
					_case_begin_4392112672:;
					{
						_100017_cont->_field_it=static_cast<jule::Uintptr>(_102325_st.operator jule::Ptr<_1c197a248_WhileIter>());
					}
				}
				else {
					_case_begin_4392110224:;
					{
						this->self->_field_s->_method_push_err(_99930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
					}
				}
				_match_end_4392112128:;
			}
		}
	}
	if (_100017_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_100017_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_99930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_100017_cont));
}



inline void _1c197a248_ScopeChecker::_method_check_label(jule::Ptr<_1da7b8e5d_LabelSt> _104235_l) {
	if (this->self->_method_find_label(_104235_l->_field_ident) != nullptr) {
		this->self->_field_s->_method_push_err(_104235_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_104235_l->_field_ident)}));
		return;
	}
	jule::Ptr<_1c197a248_Label> _104817_label = jule::new_struct<_1c197a248_Label>(new( std::nothrow ) _1c197a248_Label(_104235_l->_field_ident));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_104817_label));
	(*(this->self->_field_labels))=jule::append((*(this->self->_field_labels)),jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>({jule::new_struct<_1c197a248_ScopeLabel>(new( std::nothrow ) _1c197a248_ScopeLabel(_104235_l->_field_token,_104817_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1c197a248_ScopeChecker::_method_push_goto(jule::Ptr<_1da7b8e5d_GotoSt> _106133_gt) {
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1c197a248_GotoSt>(new( std::nothrow ) _1c197a248_GotoSt(_106133_gt->_field_label._field_kind))));
	(*(this->self->_field_gotos))=jule::append((*(this->self->_field_gotos)),jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>({jule::new_struct<_1c197a248_ScopeGoto>(new( std::nothrow ) _1c197a248_ScopeGoto(_106133_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1c197a248_ScopeChecker::_method_check_postfix(jule::Ptr<_1da7b8e5d_AssignSt> _107337_a) {
	if (_107337_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_107337_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1da7b8e5d_Expr> _107917_expr = _107337_a->_field_left[0LL]->_field_expr;
	jule::Ptr<_1c1ead281_Data> _108017_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_107917_expr);
	if (_108017_d == nullptr) {
		return;
	}
	_1c197a248_check_assign(this->self->_field_s,_108017_d,nullptr,_107337_a->_field_setter);
	if (_108017_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1a8ad0a37_Ptr> _108821_ptr = _108017_d->_field_kind->_method_ptr();
		if (_108821_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_107337_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107337_a->_field_setter._field_kind),jule::Any(_108017_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		if ((_108017_d->_field_kind->_method_prim() == nullptr) || (!(_1a8dc9a45_is_num(_108017_d->_field_kind->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_107337_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107337_a->_field_setter._field_kind),jule::Any(_108017_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1c197a248_Postfix>(new( std::nothrow ) _1c197a248_Postfix(_108017_d->_field_model,_107337_a->_field_setter._field_kind))));
}



inline jule::Bool _1c197a248_ScopeChecker::_method_is_new_assign_ident(jule::Str _110638_ident) {
	if (_1da81133a_is_ignore_ident(_110638_ident) || (_110638_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_110638_ident,false) == nullptr;
}



inline void _1c197a248_ScopeChecker::_method_check_single_assign(jule::Ptr<_1da7b8e5d_AssignSt>& _111444_a) {
	jule::Ptr<_1c1ead281_Data> _111517_l = nullptr;
	if ((!(_1da81133a_is_ignore_ident(_111444_a->_field_left[0LL]->_field_ident)))) {
		jule::Ptr<_1da7b8e5d_Expr> _111821_expr = _111444_a->_field_left[0LL]->_field_expr;
		_111517_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_111821_expr);
		if (_111517_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_1c1ead281_Eval> _112517_eval = (((_111517_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_111517_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ptr<_1c1ead281_Data> _113017_r = _112517_eval->_method_eval_expr(_111444_a->_field_right);
	if (_113017_r == nullptr) {
		return;
	}
	if (_111517_l == nullptr) {
		if (_113017_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_111444_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_113017_r));
		return;
	}
	if ((!(_1c197a248_check_assign(this->self->_field_s,_111517_l,_113017_r,_111444_a->_field_setter)))) {
		return;
	}
	if (_113017_r->_field_kind->_method_tup() != nullptr) {
		this->self->_field_s->_method_push_err(_111444_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1c197a248_Assign>(new( std::nothrow ) _1c197a248_Assign(_111517_l->_field_model,_113017_r->_field_model,_111444_a->_field_setter._field_kind))));
	if (_111444_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_111444_a->_field_setter._field_kind=_111444_a->_field_setter._field_kind.slice(0LL,_111444_a->_field_setter._field_kind.len() - 1LL);
		_1c1ead281_BinopSolver _116221_solver = _1c1ead281_BinopSolver(jule::new_struct_ptr<_1c1ead281_Eval>(new( std::nothrow ) _1c1ead281_Eval(this->self->_field_s,this->self,jule::Ptr<_1a8ad0a37_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1c1b58316_Var>())),jule::Ptr<_1c1ead281_Data>(),jule::Ptr<_1c1ead281_Data>(),_111444_a->_field_setter);
		_113017_r=_116221_solver._method_solve_explicit(_111517_l,_113017_r);
		if (_113017_r == nullptr) {
			return;
		}
		_111444_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1c1d617a5_AssignTypeChecker _117917_checker = _1c1d617a5_AssignTypeChecker(this->self->_field_s,_111517_l->_field_kind,_113017_r,_111444_a->_field_setter);
	_117917_checker._method_check();
}



inline void _1c197a248_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_1c197a248_MultiAssign> _118857_st,jule::Ptr<_1da7b8e5d_AssignSt> _118913_a,jule::Ptr<_1da7b8e5d_AssignLeft> _118931_lexpr,jule::Ptr<_1c1ead281_Data> _118955_l,jule::Ptr<_1c1ead281_Data> _118969_r) {
	if (_1da81133a_is_ignore_ident(_118931_lexpr->_field_ident)) {
		if (_118969_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_118913_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_118857_st->_field_l = jule::alloc_for_append(_118857_st->_field_l,1);_118857_st->_field_l.push(jule::Any(nullptr));
		return;
	}
	if (_118913_a->_field_declarative && (*this)._method_is_new_assign_ident(_118931_lexpr->_field_ident)) {
		jule::Ptr<_1c1b58316_Var> _120121_v = jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var((*this)._field_scope,_118931_lexpr->_field_token,_118931_lexpr->_field_ident,jule::Bool(),jule::Bool(),_118931_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_118931_lexpr->_field_reference,jule::Str(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(_118913_a->_field_right,_118969_r)),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
		(*this)._field_s->_method_check_var(_120121_v);
		_118857_st->_field_l = jule::alloc_for_append(_118857_st->_field_l,1);_118857_st->_field_l.push(jule::Any(_120121_v));
		(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_120121_v);
		(*this)._field_scope->_field_stmts = jule::alloc_for_append((*this)._field_scope->_field_stmts,1);(*this)._field_scope->_field_stmts.push(jule::Any(_120121_v));
		return;
	}
	if (_118931_lexpr->_field_mutable || _118931_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_118931_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_118931_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1c197a248_check_assign((*this)._field_s,_118955_l,_118969_r,_118913_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_118955_l->_field_mutable,false,_118955_l->_field_kind,_118969_r,_118913_a->_field_setter);
	_1c1d617a5_AssignTypeChecker _123617_checker = _1c1d617a5_AssignTypeChecker((*this)._field_s,_118955_l->_field_kind,_118969_r,_118913_a->_field_setter);
	_123617_checker._method_check();
	_118857_st->_field_l = jule::alloc_for_append(_118857_st->_field_l,1);_118857_st->_field_l.push(_118955_l->_field_model);
}



inline void _1c197a248_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_1da7b8e5d_AssignSt>& _124747_a) {
	jule::Ptr<_1c1ead281_Data> _124817_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_124747_a->_field_right);
	if (_124817_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_1c1ead281_Data>> _125317_r = _1c197a248_get_datas_from_tuple_data(_124817_rd);
	{
		if (_124747_a->_field_left.len() > _125317_r.len()) {
			_case_begin_4392240848:;
			{
				this->self->_field_s->_method_push_err(_124747_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_124747_a->_field_left.len() < _125317_r.len()) {
			_case_begin_4392240960:;
			{
				this->self->_field_s->_method_push_err(_124747_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_4392240688:;
	}
	jule::Ptr<_1c197a248_MultiAssign> _126517_st = jule::new_struct<_1c197a248_MultiAssign>(new( std::nothrow ) _1c197a248_MultiAssign(jule::Slice<jule::Any>(),_124817_rd->_field_model));
	if (_124817_rd->_field_kind->_method_tup() == nullptr) {
		_126517_st->_field_r=jule::Any(jule::new_struct<_1c19727a1_TupleExprModel>(new( std::nothrow ) _1c19727a1_TupleExprModel(_125317_r)));
	}
	{
		auto &expr = _124747_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4392249328:;
		if (it != expr.end()) {
			jule::Int _1c197a248_i = it - expr.begin();
			{
				jule::Ptr<_1da7b8e5d_AssignLeft> _127421_lexpr = _124747_a->_field_left[_1c197a248_i];
				jule::Ptr<_1c1ead281_Data> _127521_l = nullptr;
				if ((!(_1da81133a_is_ignore_ident(_127421_lexpr->_field_ident))) && ((!(_124747_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_127421_lexpr->_field_ident))))) {
					_127521_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_127421_lexpr->_field_expr);
					if (_127521_l == nullptr) {
						goto _iter_next_4392249328;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_126517_st,_124747_a,_127421_lexpr,_127521_l,_125317_r[_1c197a248_i]);
			}
			_iter_next_4392249328:;
			++it;
			_1c197a248_i++;
			goto _iter_begin_4392249328;
		}
		_iter_end_4392249328:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_126517_st));
}



inline void _1c197a248_ScopeChecker::_method_check_multi_assign(jule::Ptr<_1da7b8e5d_AssignSt>& _129143_a) {
	{
		auto &_match_expr{ _129143_a->_field_right->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>()) {
			_case_begin_4392259568:;
			{
				this->self->_method_check_ret_multi_assign(_129143_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UnsafeExpr>>()) {
			_case_begin_4392260096:;
			{
				{
					auto &_match_expr{ _129143_a->_field_right->_field_kind.operator jule::Ptr<_1da7b8e5d_UnsafeExpr>()->_field_expr };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>()) {
						_case_begin_4392260256:;
						{
							this->self->_method_check_ret_multi_assign(_129143_a);
							return;
						}
					}
					_match_end_4392263712:;
				}
			}
		}
		_match_end_4392259968:;
	}
	jule::Slice<jule::Any> _130517_right = _1c197a248_get_expr_models(_129143_a->_field_right->_field_kind);
	{
		if (_129143_a->_field_left.len() > _130517_right.len()) {
			_case_begin_4392266416:;
			{
				this->self->_field_s->_method_push_err(_129143_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_129143_a->_field_left.len() < _130517_right.len()) {
			_case_begin_4392266512:;
			{
				this->self->_field_s->_method_push_err(_129143_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_4392266192:;
	}
	jule::Ptr<_1c19727a1_TupleExprModel> _131717_right_tuple = jule::new_struct<_1c19727a1_TupleExprModel>(new( std::nothrow ) _1c19727a1_TupleExprModel());
	jule::Ptr<_1c197a248_MultiAssign> _131917_st = jule::new_struct<_1c197a248_MultiAssign>(new( std::nothrow ) _1c197a248_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_131717_right_tuple)));
	{
		auto &expr = _129143_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4392273424:;
		if (it != expr.end()) {
			jule::Int _1c197a248_i = it - expr.begin();
			{
				jule::Ptr<_1da7b8e5d_AssignLeft> _132421_lexpr = _129143_a->_field_left[_1c197a248_i];
				jule::Ptr<_1c1ead281_Data> _132521_l = nullptr;
				if ((!(_1da81133a_is_ignore_ident(_132421_lexpr->_field_ident))) && ((!(_129143_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_132421_lexpr->_field_ident))))) {
					_132521_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_132421_lexpr->_field_expr);
					if (_132521_l == nullptr) {
						goto _iter_next_4392273424;
					}
				}
				jule::Ptr<_1da7b8e5d_Expr> _133521_expr = jule::new_struct<_1da7b8e5d_Expr>(new( std::nothrow ) _1da7b8e5d_Expr(_129143_a->_field_right->_field_token,_130517_right[_1c197a248_i]));
				jule::Ptr<_1c1ead281_Eval> _133621_eval = (((_132521_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_132521_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ptr<_1c1ead281_Data> _134121_r = _133621_eval->_method_eval_expr(_133521_expr);
				if (_134121_r == nullptr) {
					goto _iter_next_4392273424;
				}
				_131717_right_tuple->_field_datas = jule::alloc_for_append(_131717_right_tuple->_field_datas,1);_131717_right_tuple->_field_datas.push(_134121_r);
				this->self->_method___process_end_part_of_multi_assign(_131917_st,_129143_a,_132421_lexpr,_132521_l,_134121_r);
			}
			_iter_next_4392273424:;
			++it;
			_1c197a248_i++;
			goto _iter_begin_4392273424;
		}
		_iter_end_4392273424:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_131917_st));
}



inline void _1c197a248_ScopeChecker::_method_check_assign_st(jule::Ptr<_1da7b8e5d_AssignSt> _135439_a) {
	if (_1da81133a_is_postfix_op(_135439_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_135439_a);
		return;
	}
	if ((_135439_a->_field_left.len() == 1LL) && (!(_135439_a->_field_declarative))) {
		this->self->_method_check_single_assign(_135439_a);
		return;
	}
	this->self->_method_check_multi_assign(_135439_a);
}



inline jule::Ptr<_1c197a248_Scope> _1c197a248_ScopeChecker::_method_check_case_scope(jule::Ptr<_1c197a248_Case>& _136837_c,jule::Ptr<_1da7b8e5d_ScopeTree>& _136852_tree) {
	jule::Ptr<_1c197a248_ScopeChecker> _136917_ssc = this->self->_method_new_child_checker();
	_136917_ssc->_field_cse=static_cast<jule::Uintptr>(_136837_c);
	return this->self->_method_check_child_sc(_136852_tree,_136917_ssc);
}



inline jule::Ptr<_1c197a248_Case> _1c197a248_ScopeChecker::_method_check_case(jule::Ptr<_1c197a248_Match> _137434_m,jule::Int _137445_i,jule::Ptr<_1da7b8e5d_Case> _137457_c,jule::Ptr<_1c1ead281_Data> _137487_expr) {
	jule::Ptr<_1c197a248_Case> _137517__case = _137434_m->_field_cases[_137445_i];
	_137517__case->_field_exprs=jule::Slice<jule::Ptr<_1c1ead281_Data>>::alloc(0LL,static_cast<jule::I64>(_137457_c->_field_exprs.len()));
	jule::Bool _137717_generic_matched = false;
	{
		auto &expr = _137457_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4392308832:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Expr> _1c197a248_e = *it;
			{
				if (_137434_m->_field_type_match) {
					jule::Ptr<_1c1ead281_Eval> _138125_eval = jule::new_struct_ptr<_1c1ead281_Eval>(new( std::nothrow ) _1c1ead281_Eval(this->self->_field_s,this->self,jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1c1b58316_Var>()));
					jule::Ptr<_1c1ead281_Data> _138625_d = _138125_eval->_method_eval(_1c197a248_e);
					if (_138625_d != nullptr) {
						_137517__case->_field_exprs = jule::alloc_for_append(_137517__case->_field_exprs,1);_137517__case->_field_exprs.push(_138625_d);
						if (_1c197a248_count_match_type(_137434_m,_138625_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1c197a248_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_138625_d->_field_kind->_method_to_str())}));
						}
					}
					if (_137487_expr->_field_kind->_field_generic) {
						_137717_generic_matched=_137717_generic_matched || _137487_expr->_field_kind->_method_equals(_138625_d->_field_kind);
					} else {
						jule::Ptr<_1c196b2a0_Trait> _139725_trt = _137487_expr->_field_kind->_method_trt();
						if (_139725_trt != nullptr) {
							this->self->_field_s->_method_check_type_compatibility(_137487_expr->_field_kind,_138625_d->_field_kind,_1c197a248_e->_field_token);
						}
					}
					goto _iter_next_4392308832;
				}
				jule::Ptr<_1c1ead281_Data> _140621_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_1c197a248_e);
				if (_140621_d == nullptr) {
					goto _iter_next_4392308832;
				}
				_137517__case->_field_exprs = jule::alloc_for_append(_137517__case->_field_exprs,1);_137517__case->_field_exprs.push(_140621_d);
				_1c1d617a5_AssignTypeChecker _141321_checker = _1c1d617a5_AssignTypeChecker(this->self->_field_s,_137487_expr->_field_kind,_140621_d,_1c197a248_e->_field_token);
				_141321_checker._method_check();
			}
			_iter_next_4392308832:;
			++it;
			goto _iter_begin_4392308832;
		}
		_iter_end_4392308832:;
	}
	if (((!(_137434_m->_field_type_match)) || (!(_137487_expr->_field_kind->_field_generic))) || _137717_generic_matched) {
		_137517__case->_field_scope=this->self->_method_check_case_scope(_137517__case,_137457_c->_field_scope);
	}
	return _137517__case;
}



inline void _1c197a248_ScopeChecker::_method_check_cases(jule::Ptr<_1da7b8e5d_MatchCase>& _142836_m,jule::Ptr<_1c197a248_Match> _142855_rm,jule::Ptr<_1c1ead281_Data> _142871_expr) {
	_142855_rm->_field_cases=jule::Slice<jule::Ptr<_1c197a248_Case>>::alloc(static_cast<jule::I64>(_142836_m->_field_cases.len()));
	{
		auto &expr = _142836_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4392334400:;
		if (it != expr.end()) {
			jule::Int _1c197a248_i = it - expr.begin();
			{
				jule::Ptr<_1c197a248_Case> _143121__case = jule::new_struct<_1c197a248_Case>(new( std::nothrow ) _1c197a248_Case(_142855_rm,jule::Ptr<_1c197a248_Scope>(),jule::Slice<jule::Ptr<_1c1ead281_Data>>(),jule::Ptr<_1c197a248_Case>()));
				if (_1c197a248_i > 0LL) {
					_142855_rm->_field_cases[_1c197a248_i - 1LL]->_field_next=_143121__case;
				}
				_142855_rm->_field_cases[_1c197a248_i]=_143121__case;
			}
			_iter_next_4392334400:;
			++it;
			_1c197a248_i++;
			goto _iter_begin_4392334400;
		}
		_iter_end_4392334400:;
	}
	if ((_142855_rm->_field_default != nullptr) && (_142836_m->_field_cases.len() > 0LL)) {
		_142855_rm->_field_cases[_142855_rm->_field_cases.len() - 1LL]->_field_next=_142855_rm->_field_default;
	}
	{
		auto &expr = _142836_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4392341744:;
		if (it != expr.end()) {
			jule::Int _1c197a248_i = it - expr.begin();
			jule::Ptr<_1da7b8e5d_Case> _1c197a248_c = *it;
			{
				this->self->_method_check_case(_142855_rm,_1c197a248_i,_1c197a248_c,_142871_expr);
			}
			_iter_next_4392341744:;
			++it;
			_1c197a248_i++;
			goto _iter_begin_4392341744;
		}
		_iter_end_4392341744:;
	}
}



inline jule::Ptr<_1c197a248_Case> _1c197a248_ScopeChecker::_method_check_default(jule::Ptr<_1c197a248_Match> _145137_m,jule::Ptr<_1da7b8e5d_Else> _145152_d) {
	jule::Ptr<_1c197a248_Case> _145217_def = jule::new_struct<_1c197a248_Case>(new( std::nothrow ) _1c197a248_Case(_145137_m,jule::Ptr<_1c197a248_Scope>(),jule::Slice<jule::Ptr<_1c1ead281_Data>>(),jule::Ptr<_1c197a248_Case>()));
	_145217_def->_field_scope=this->self->_method_check_case_scope(_145217_def,_145152_d->_field_scope);
	return _145217_def;
}



inline void _1c197a248_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_1c197a248_Scope>& _145940_s,_1da81133a_Token _145951_error_token) {
	if (_145940_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _146413_stmt = _145940_s->_field_stmts[0LL];
	{
		auto &_match_expr{ _146413_stmt };
		if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
			_case_begin_4392352096:;
			{
				jule::Ptr<_1c1ead281_Data> _146717_d = _146413_stmt.operator jule::Ptr<_1c1ead281_Data>();
				{
					auto &_match_expr{ _146717_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>>()) {
						_case_begin_4392354304:;
						{
							jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel> _147021_m = _146717_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _147021_m->_field_expr };
								if (_match_expr.type_is<jule::Ptr<_1a8d46165_Const>>()) {
									_case_begin_4392357040:;
									{
										jule::Ptr<_1a8d46165_Const> _147325_c = _147021_m->_field_expr.operator jule::Ptr<_1a8d46165_Const>();
										if (_147325_c->_method_is_str()) {
											(*this)._field_s->_method_push_err(_145951_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_147325_c->_method_read_str())}));
										}
									}
								}
								_match_end_4392359392:;
							}
						}
					}
					_match_end_4392356560:;
				}
			}
		}
		_match_end_4392354176:;
	}
}



inline void _1c197a248_ScopeChecker::_method_push_type_match(jule::Ptr<_1c197a248_Match> _148239_tm,jule::Ptr<_1da7b8e5d_MatchCase>& _148252_m) {
	if (_148239_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto &expr = _148239_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_4392366608:;
			if (it != expr.end()) {
				jule::Int _1c197a248_i = it - expr.begin();
				jule::Ptr<_1c197a248_Case> _1c197a248_c = *it;
				{
					if (_1c197a248_c->_field_scope != nullptr) {
						_148239_tm->_field_cases=nullptr;
						_148239_tm->_field_default=_1c197a248_c;
						this->self->_method_check_comptime_panic(_1c197a248_c->_field_scope,_148252_m->_field_cases[_1c197a248_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_4392366608:;
				++it;
				_1c197a248_i++;
				goto _iter_begin_4392366608;
			}
			_iter_end_4392366608:;
		}
		if (_148239_tm->_field_default != nullptr) {
			this->self->_method_check_comptime_panic(_148239_tm->_field_default->_field_scope,_148252_m->_field_default->_field_token);
		}
		_148239_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_148239_tm));
}



inline void _1c197a248_ScopeChecker::_method_check_type_match(jule::Ptr<_1da7b8e5d_MatchCase>& _150441_m) {
	jule::Ptr<_1c1ead281_Data> _150517_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_150441_m->_field_expr);
	if (_150517_d == nullptr) {
		return;
	}
	if ((!(_150517_d->_field_kind->_field_generic)) && (!(((_150517_d->_field_kind->_method_prim() != nullptr) && _150517_d->_field_kind->_method_prim()->_method_is_any()) || (_150517_d->_field_kind->_method_trt() != nullptr)))) {
		this->self->_field_s->_method_push_err(_150441_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1c197a248_Match> _151617_tm = jule::new_struct<_1c197a248_Match>(new( std::nothrow ) _1c197a248_Match(_150517_d,true,jule::Slice<jule::Ptr<_1c197a248_Case>>(),jule::Ptr<_1c197a248_Case>()));
	if (_150441_m->_field_default != nullptr) {
		_151617_tm->_field_default=this->self->_method_check_default(_151617_tm,_150441_m->_field_default);
	}
	this->self->_method_check_cases(_150441_m,_151617_tm,_150517_d);
	this->self->_method_push_type_match(_151617_tm,_150441_m);
}



inline void _1c197a248_ScopeChecker::_method_check_common_match(jule::Ptr<_1da7b8e5d_MatchCase>& _152943_m) {
	jule::Ptr<_1c1ead281_Data> _153017_d = nullptr;
	if (_152943_m->_field_expr == nullptr) {
		_153017_d=jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a8d46165_Const::_static_method_new_bool(true)));
		_153017_d->_field_model=jule::Any(_153017_d->_field_constant);
	} else {
		_153017_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_152943_m->_field_expr);
		if (_153017_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_1c197a248_Match> _154417_mc = jule::new_struct<_1c197a248_Match>(new( std::nothrow ) _1c197a248_Match(_153017_d,jule::Bool(),jule::Slice<jule::Ptr<_1c197a248_Case>>(),jule::Ptr<_1c197a248_Case>()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_154417_mc));
	if (_152943_m->_field_default != nullptr) {
		_154417_mc->_field_default=this->self->_method_check_default(_154417_mc,_152943_m->_field_default);
	}
	this->self->_method_check_cases(_152943_m,_154417_mc,_153017_d);
}



inline void _1c197a248_ScopeChecker::_method_check_match(jule::Ptr<_1da7b8e5d_MatchCase> _155635_m) {
	if (_155635_m->_field_type_match) {
		this->self->_method_check_type_match(_155635_m);
		return;
	}
	this->self->_method_check_common_match(_155635_m);
}



inline void _1c197a248_ScopeChecker::_method_check_fall(jule::Ptr<_1da7b8e5d_FallSt> _156430_f) {
	if (((this->self->_field_cse == 0LL) || ((this->self->_field_scope->_field_stmts.len() + 1LL) < this->self->_field_scope->_field_stmts.len())) || this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_156430_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>());
		return;
	}
	_1c197a248_Case* _157217__case = ((_1c197a248_Case*)(this->self->_field_cse));
	if (_157217__case->_field_next == nullptr) {
		this->self->_field_s->_method_push_err(_156430_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_1c197a248_FallSt>(new( std::nothrow ) _1c197a248_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_157217__case->_field_next))))));
}



inline jule::Ptr<_1c197a248_BreakSt> _1c197a248_ScopeChecker::_method_check_break_with_label(jule::Ptr<_1da7b8e5d_BreakSt> _158442_b) {
	jule::Ptr<_1c197a248_BreakSt> _158517_brk = this->self->_method_check_plain_break(_158442_b);
	if (_158517_brk == nullptr) {
		return nullptr;
	}
	_158517_brk->_field_it=0LLU;
	_158517_brk->_field_mtch=0LLU;
	jule::Ptr<_1c197a248_ScopeLabel> _159517_label = _1c197a248_find_label_parent(_158442_b->_field_label._field_kind,this->self->_field_parent);
	if (_159517_label == nullptr) {
		this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_158442_b->_field_label._field_kind)}));
		return nullptr;
	}
	_159517_label->_field_used=true;
	if ((_159517_label->_field_pos + 1LL) >= _159517_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _160813_i = _159517_label->_field_pos + 1LL;
	if (_160813_i >= _159517_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
	} else {
		jule::Any _161221_st = _159517_label->_field_scope->_field_scope->_field_stmts[_160813_i];
		{
			auto &_match_expr{ _161221_st };
			if (_match_expr.type_is<jule::Ptr<_1c197a248_InfIter>>()) {
				_case_begin_4392436240:;
				{
					_158517_brk->_field_it=static_cast<jule::Uintptr>(_161221_st.operator jule::Ptr<_1c197a248_InfIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c197a248_RangeIter>>()) {
				_case_begin_4392436336:;
				{
					_158517_brk->_field_it=static_cast<jule::Uintptr>(_161221_st.operator jule::Ptr<_1c197a248_RangeIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c197a248_WhileIter>>()) {
				_case_begin_4392436432:;
				{
					_158517_brk->_field_it=static_cast<jule::Uintptr>(_161221_st.operator jule::Ptr<_1c197a248_WhileIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c197a248_Match>>()) {
				_case_begin_4392436528:;
				{
					_158517_brk->_field_mtch=static_cast<jule::Uintptr>(_161221_st.operator jule::Ptr<_1c197a248_Match>());
				}
			}
			else {
				_case_begin_4392432352:;
				{
					this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
				}
			}
			_match_end_4392435888:;
		}
	}
	if (_158517_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158517_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	if (_158517_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158517_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_158442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	return _158517_brk;
}



inline jule::Ptr<_1c197a248_BreakSt> _1c197a248_ScopeChecker::_method_check_plain_break(jule::Ptr<_1da7b8e5d_BreakSt> _163737_b) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_163737_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c197a248_ScopeChecker> _164317_scope = this->self;
	_julec_label_iter:;
	{
		if ((((_164317_scope->_field_it == 0LL) && (_164317_scope->_field_cse == 0LL)) && (_164317_scope->_field_parent != nullptr)) && (_164317_scope->_field_owner == nullptr)) {
			_case_begin_4392452640:;
			{
				_164317_scope=_164317_scope->_field_parent;
				goto _julec_label_iter;
			}
		}
		else if (_164317_scope->_field_it != 0LL) {
			_case_begin_4392452752:;
			{
				return jule::new_struct<_1c197a248_BreakSt>(new( std::nothrow ) _1c197a248_BreakSt(_164317_scope->_field_it,jule::Uintptr()));
			}
		}
		else if (_164317_scope->_field_cse != 0LL) {
			_case_begin_4392452864:;
			{
				return jule::new_struct<_1c197a248_BreakSt>(new( std::nothrow ) _1c197a248_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1c197a248_Case*)(_164317_scope->_field_cse))->_field_owner))));
			}
		}
		_match_end_4392452464:;
	}
	this->self->_field_s->_method_push_err(_163737_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c197a248_ScopeChecker::_method_check_break(jule::Ptr<_1da7b8e5d_BreakSt> _166131_b) {
	if (_166131_b->_field_label._field_id != 0LLU) {
		jule::Ptr<_1c197a248_BreakSt> _166321_brk = this->self->_method_check_break_with_label(_166131_b);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166321_brk));
		return;
	}
	jule::Ptr<_1c197a248_BreakSt> _166817_brk = this->self->_method_check_plain_break(_166131_b);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166817_brk));
}



inline void _1c197a248_ScopeChecker::_method_check_ret(jule::Ptr<_1da7b8e5d_RetSt> _167233_r) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_167233_r->_field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c197a248_RetSt> _167717_rt = jule::new_struct<_1c197a248_RetSt>(new( std::nothrow ) _1c197a248_RetSt(this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ptr<_1c1b58316_Var>>(),jule::Any()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_167717_rt));
	jule::Ptr<_1c1d617a5_RetTypeChecker> _168217_rtc = jule::new_struct<_1c1d617a5_RetTypeChecker>(new( std::nothrow ) _1c1d617a5_RetTypeChecker(this->self,_167717_rt->_field_func,jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>(),_167233_r->_field_token,jule::Any()));
	jule::Bool _168713_ok = _168217_rtc->_method_check(_167233_r->_field_expr);
	if ((!(_168713_ok))) {
		return;
	}
	if ((_167233_r->_field_expr == nullptr) && (_168217_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_167717_rt->_field_vars=_168217_rtc->_field_vars;
	if (_167233_r->_field_expr != nullptr) {
		_167717_rt->_field_expr=_168217_rtc->_field_model;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_use_expr(jule::Ptr<_1da7b8e5d_UseExpr> _170334_ue) {
	if (this->self->_field_result == nullptr) {
		this->self->_field_s->_method_push_err(_170334_ue->_field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_170334_ue->_field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((this->self->_field_i + 1LL) < this->self->_field_tree->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_170334_ue->_field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1c197a248_ScopeChecker::_method_check_node(jule::Any& _172035_node) {
	{
		auto &_match_expr{ _172035_node };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Comment>>()) {
			_case_begin_4392514560:;
			{
				goto _match_end_4392512816;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_ScopeTree>>()) {
			_case_begin_4392514080:;
			{
				this->self->_method_check_anon_scope(_172035_node.operator jule::Ptr<_1da7b8e5d_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VarDecl>>()) {
			_case_begin_4392514176:;
			{
				this->self->_method_check_var_decl(_172035_node.operator jule::Ptr<_1da7b8e5d_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeAliasDecl>>()) {
			_case_begin_4392513632:;
			{
				this->self->_method_check_type_alias_decl(_172035_node.operator jule::Ptr<_1da7b8e5d_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Expr>>()) {
			_case_begin_4392513728:;
			{
				this->self->_method_check_expr(_172035_node.operator jule::Ptr<_1da7b8e5d_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_CoExpr>>()) {
			_case_begin_4392513824:;
			{
				this->self->_method_check_co_expr(_172035_node.operator jule::Ptr<_1da7b8e5d_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Conditional>>()) {
			_case_begin_4392513920:;
			{
				this->self->_method_check_conditional(_172035_node.operator jule::Ptr<_1da7b8e5d_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Iter>>()) {
			_case_begin_4392514992:;
			{
				this->self->_method_check_iter(_172035_node.operator jule::Ptr<_1da7b8e5d_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_ContSt>>()) {
			_case_begin_4392515088:;
			{
				this->self->_method_check_cont(_172035_node.operator jule::Ptr<_1da7b8e5d_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_LabelSt>>()) {
			_case_begin_4392515184:;
			{
				this->self->_method_check_label(_172035_node.operator jule::Ptr<_1da7b8e5d_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_GotoSt>>()) {
			_case_begin_4392515280:;
			{
				this->self->_method_push_goto(_172035_node.operator jule::Ptr<_1da7b8e5d_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_AssignSt>>()) {
			_case_begin_4392515376:;
			{
				this->self->_method_check_assign_st(_172035_node.operator jule::Ptr<_1da7b8e5d_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_MatchCase>>()) {
			_case_begin_4392515472:;
			{
				this->self->_method_check_match(_172035_node.operator jule::Ptr<_1da7b8e5d_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FallSt>>()) {
			_case_begin_4392515568:;
			{
				this->self->_method_check_fall(_172035_node.operator jule::Ptr<_1da7b8e5d_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_BreakSt>>()) {
			_case_begin_4392515664:;
			{
				this->self->_method_check_break(_172035_node.operator jule::Ptr<_1da7b8e5d_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_RetSt>>()) {
			_case_begin_4392515760:;
			{
				this->self->_method_check_ret(_172035_node.operator jule::Ptr<_1da7b8e5d_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UseExpr>>()) {
			_case_begin_4392515856:;
			{
				this->self->_method_check_use_expr(_172035_node.operator jule::Ptr<_1da7b8e5d_UseExpr>());
			}
		}
		else {
			_case_begin_4392512720:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_4392512816:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_result(void) {
	jule::Any _174417_stmt = this->self->_field_tree->_field_stmts[this->self->_field_tree->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _174417_stmt };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UseExpr>>()) {
			_case_begin_4392548448:;
			{
				jule::Ptr<_1da7b8e5d_UseExpr> _174721_ue = _174417_stmt.operator jule::Ptr<_1da7b8e5d_UseExpr>();
				jule::Ptr<_1c1ead281_Data> _174821_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_174721_ue->_field_expr);
				if (_174821_d == nullptr) {
					return;
				}
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_174821_d));
				jule::Ptr<_1c1d617a5_RetTypeChecker> _175521_rtc = jule::new_struct<_1c1d617a5_RetTypeChecker>(new( std::nothrow ) _1c1d617a5_RetTypeChecker(this->self,jule::Ptr<_1c17e2687_FnIns>(),_1c1d617a5_get_result_types(this->self->_field_result),jule::Slice<jule::Ptr<_1da7b8e5d_Expr>>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>(),_174721_ue->_field_expr->_field_token,jule::Any()));
				_175521_rtc->_method_check(_174721_ue->_field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Expr>>()) {
			_case_begin_4392548544:;
			{
				jule::Ptr<_1da7b8e5d_Expr> _176321_expr = _174417_stmt.operator jule::Ptr<_1da7b8e5d_Expr>();
				jule::Ptr<_1c1ead281_Data> _176421_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_176321_expr);
				if (_176421_d == nullptr) {
					return;
				}
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_176421_d));
				{
					auto &_match_expr{ _176421_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>()) {
						_case_begin_4392560864:;
						{
							jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel> _177325_m = _176421_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>();
							this->self->_method_process_error_call(_177325_m,_176321_expr->_field_token);
						}
					}
					else {
						_case_begin_4392559584:;
						{
							return;
						}
					}
					_match_end_4392560560:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_ContSt>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_RetSt>>()) {
			_case_begin_4392547008:;
			{
				this->self->_method_check_node(_174417_stmt);
			}
		}
		else {
			_case_begin_4392545008:;
			{
				this->self->_method_check_node(_174417_stmt);
				return;
			}
		}
		_match_end_4392546720:;
	}
	this->self->_field_result=nullptr;
}



inline void _1c197a248_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			jule::Any _179821_stmt = this->self->_field_tree->_field_stmts[this->self->_field_i];
			this->self->_method_check_node(_179821_stmt);
		}
	_iter_next_4392567376:;
	}
	_iter_end_4392567376:;
	if ((this->self->_field_result != nullptr) && (this->self->_field_tree->_field_stmts.len() != 0LL)) {
		this->self->_method_check_result();
	}
}



inline void _1c197a248_ScopeChecker::_method_check_goto(jule::Ptr<_1c197a248_ScopeGoto>& _180734_gt,jule::Ptr<_1c197a248_ScopeLabel>& _180755_label) {
	jule::Ptr<_1c197a248_ScopeChecker> _180817_gtsc = _180734_gt->_field_scope;
	while ((_180817_gtsc->_field_child_index - 1LL) > _180755_label->_field_scope->_field_child_index) {
		{
			_180817_gtsc=_180817_gtsc->_field_parent;
		}
	_iter_next_4392575824:;
	}
	_iter_end_4392575824:;
	jule::Int _181317_n = 0LL;
	if (_180817_gtsc->_field_scope == _180755_label->_field_scope->_field_scope) {
		if (_180734_gt->_field_pos > _180755_label->_field_pos) {
			return;
		}
		_181317_n=_180734_gt->_field_pos;
	}
	jule::Int _182617_i = _180755_label->_field_pos - 1LL;
	if (_181317_n == 0LL) {
		{
			auto &expr = _180755_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_4392582144:;
			if (it != expr.end()) {
				jule::Int _1c197a248_j = it - expr.begin();
				jule::Any &_1c197a248_stmt = *it;
				{
					if (_1c197a248_stmt_is_goto_scope(_1c197a248_stmt,_180817_gtsc->_field_scope)) {
						_181317_n=_1c197a248_j;
						goto _iter_end_4392582144;
					}
				}
				_iter_next_4392582144:;
				++it;
				_1c197a248_j++;
				goto _iter_begin_4392582144;
			}
			_iter_end_4392582144:;
		}
	}
	for (; _182617_i >= _181317_n; (_182617_i)--) {
		{
			jule::Any _183921_stmt = _180755_label->_field_scope->_field_scope->_field_stmts[_182617_i];
			if (_1c197a248_st_is_def(_183921_stmt)) {
				(*this)._field_s->_method_push_err(_180734_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_180734_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_4392583168:;
	}
	_iter_end_4392583168:;
}



inline void _1c197a248_ScopeChecker::_method_check_gotos(void) {
	{
		auto &expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_4392589920:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_ScopeGoto> _1c197a248_gt = *it;
			{
				jule::Ptr<_1c197a248_ScopeLabel> _184921_label = (*this)._method_find_label_all(_1c197a248_gt->_field_gt->_field_label._field_kind);
				if (_184921_label == nullptr) {
					(*this)._field_s->_method_push_err(_1c197a248_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1c197a248_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4392589920;
				}
				_184921_label->_field_used=true;
				(*this)._method_check_goto(_1c197a248_gt,_184921_label);
			}
			_iter_next_4392589920:;
			++it;
			goto _iter_begin_4392589920;
		}
		_iter_end_4392589920:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_labels(void) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4392591216:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_ScopeLabel> &_1c197a248_l = *it;
			{
				if ((!(_1c197a248_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1c197a248_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1c197a248_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4392591216:;
			++it;
			goto _iter_begin_4392591216;
		}
		_iter_end_4392591216:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_vars(void) {
	{
		auto &expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_4392601360:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> &_1c197a248_v = *it;
			{
				if ((((!(_1c197a248_v->_field_used)) && (!(_1da81133a_is_ignore_ident(_1c197a248_v->_field_ident)))) && (!(_1da81133a_is_anon_ident(_1c197a248_v->_field_ident)))) && (_1c197a248_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1c197a248_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1c197a248_v->_field_ident)}));
				}
			}
			_iter_next_4392601360:;
			++it;
			goto _iter_begin_4392601360;
		}
		_iter_end_4392601360:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check_aliases(void) {
	{
		auto &expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4392607136:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeAlias> &_1c197a248_a = *it;
			{
				if (((!(_1c197a248_a->_field_used)) && (!(_1da81133a_is_ignore_ident(_1c197a248_a->_field_ident)))) && (!(_1da81133a_is_anon_ident(_1c197a248_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1c197a248_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1c197a248_a->_field_ident)}));
				}
			}
			_iter_next_4392607136:;
			++it;
			goto _iter_begin_4392607136;
		}
		_iter_end_4392607136:;
	}
}



inline void _1c197a248_ScopeChecker::_method_check(jule::Ptr<_1da7b8e5d_ScopeTree>& _188530_tree,jule::Ptr<_1c197a248_Scope>& _188553_s) {
	_188553_s->_field_deferred=_188530_tree->_field_deferred;
	_188553_s->_field_unsafety=_188530_tree->_field_unsafety;
	jule::I64 _188913_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_188530_tree;
	this->self->_field_scope=_188553_s;
	this->self->_method_check_tree();
	if (_188913_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
		if (this->self->_method_is_root()) {
			this->self->_method_check_gotos();
			this->self->_method_check_labels();
		}
	}
}



inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_1c197a248_ScopeChecker> _190917_base = _1c197a248_new_scope_checker_base(this->self->_field_s,nullptr);
	_190917_base->_field_parent=this->self;
	_190917_base->_field_labels=this->self->_field_labels;
	_190917_base->_field_gotos=this->self->_field_gotos;
	_190917_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _190917_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinErrorCallExprModel &_Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BackendEmitExprModel &_Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}



inline void _1c1b32862_DirectiveChecker::_method_check_cdef(jule::Ptr<_1da7b8e5d_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_1c17e2687_Fn>>()) {
			_case_begin_4392636576:;
			{
				if ((*this)._field_o.operator jule::Ptr<_1c17e2687_Fn>()->_field_cpp_linked) {
					goto _match_end_4392636496;
				}
				goto _case_begin_4392636400;
			}
		}
		else {
			_case_begin_4392636400:;
			{
				(*this)._field_s->_method_push_err(_1630_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_1630_d->_field_tag._field_kind)}));
			}
		}
		_match_end_4392636496:;
	}
	if (_1630_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_1630_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1c1b32862_DirectiveChecker::_method_check_typedef(jule::Ptr<_1da7b8e5d_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4392644672:;
			{
				if ((*this)._field_o.operator jule::Ptr<_1db4a7e59_Struct>()->_field_cpp_linked) {
					goto _match_end_4392644592;
				}
				goto _case_begin_4392644496;
			}
		}
		else {
			_case_begin_4392644496:;
			{
				(*this)._field_s->_method_push_err(_3233_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_3233_d->_field_tag._field_kind)}));
			}
		}
		_match_end_4392644592:;
	}
	if (_3233_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_3233_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1c1b32862_DirectiveChecker::_method_check_derive(jule::Ptr<_1da7b8e5d_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4392652768:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_1db4a7e59_Struct>()->_field_cpp_linked))) {
					goto _match_end_4392652688;
				}
				goto _case_begin_4392652592;
			}
		}
		else {
			_case_begin_4392652592:;
			{
				(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>());
			}
		}
		_match_end_4392652688:;
	}
	if (_4832_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._field_s->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if (_4832_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d->_field_args[0LL]._field_kind };
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_4392663056:;
		}
		else {
			_case_begin_4392657040:;
			{
				(*this)._field_s->_method_push_err(_4832_d->_field_args[0LL],jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_4832_d->_field_args[0LL]._field_kind)}));
			}
		}
		_match_end_4392662192:;
	}
}



inline void _1c1b32862_DirectiveChecker::_method_check_namespace(jule::Ptr<_1da7b8e5d_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4392667680:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_1db4a7e59_Struct>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c17e2687_Fn>>()) {
			_case_begin_4392668320:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_1c17e2687_Fn>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4392668416:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_1c1b58316_Var>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_4392667504:;
			{
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		_match_end_4392667600:;
	}
	if (_7439_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_7439_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_1da81133a_Token _10213_arg = _7439_d->_field_args[0LL];
	if (_10213_arg._field_id != 6LLU) {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d->_field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,_10213_arg._field_kind.len() - 1LL);
}



inline void _1c1b32862_DirectiveChecker::_method_check_deprecated(jule::Ptr<_1da7b8e5d_Directive>& _11640_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4392692000:;
			{
				if ((*this)._field_o.operator jule::Ptr<_1db4a7e59_Struct>()->_field_cpp_linked) {
					(*this)._field_s->_method_push_err(_11640_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11640_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c17e2687_Fn>>()) {
			_case_begin_4392692640:;
			{
				if ((*this)._field_o.operator jule::Ptr<_1c17e2687_Fn>()->_field_cpp_linked) {
					(*this)._field_s->_method_push_err(_11640_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11640_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4392692736:;
			{
				if ((*this)._field_o.operator jule::Ptr<_1c1b58316_Var>()->_field_cpp_linked) {
					(*this)._field_s->_method_push_err(_11640_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11640_d->_field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_4392691824:;
			{
				(*this)._field_s->_method_push_err(_11640_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11640_d->_field_tag._field_kind)}));
			}
		}
		_match_end_4392691920:;
	}
	if (_11640_d->_field_args.len() == 0LL) {
		return;
	}
	if (_11640_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_11640_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_1da81133a_Token _14413_arg = _11640_d->_field_args[0LL];
	if (_14413_arg._field_id != 6LLU) {
		(*this)._field_s->_method_push_err(_14413_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_14413_arg._field_kind[0LL] != '\"') {
		(*this)._field_s->_method_push_err(_14413_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_11640_d->_field_args[0LL]._field_kind=_14413_arg._field_kind.slice(1LL,_14413_arg._field_kind.len() - 1LL);
}



inline void _1c1b32862_DirectiveChecker::_method_check_directive(jule::Ptr<_1da7b8e5d_Directive>& _15839_d) {
	{
		auto &_match_expr{ _15839_d->_field_tag._field_kind };
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_4392716080:;
			{
				(*this)._method_check_cdef(_15839_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_4392716176:;
			{
				(*this)._method_check_typedef(_15839_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_4392716272:;
			{
				(*this)._method_check_derive(_15839_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_4392717728:;
			{
				(*this)._method_check_namespace(_15839_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_4392717824:;
			{
				(*this)._method_check_deprecated(_15839_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_4392717920:;
			{
				(*this)._field_s->_method_push_err(_15839_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_15839_d->_field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_4392715056:;
			{
				(*this)._field_s->_method_push_err(_15839_d->_field_tag,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			}
		}
		_match_end_4392715456:;
	}
}



inline void _1c1b32862_DirectiveChecker::_method_check(void) {
	{
		auto &expr = (*this)._field_d;
		auto it = expr.begin();
		_iter_begin_4392727488:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> _1c1b32862_d = *it;
			{
				(*this)._method_check_directive(_1c1b32862_d);
			}
			_iter_next_4392727488:;
			++it;
			goto _iter_begin_4392727488;
		}
		_iter_end_4392727488:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b32862_DirectiveChecker &_Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b398be_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b398be_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c1b58316_Var> _1c1b398be_Package::_method_find_var(jule::Str _27031_ident,jule::Bool _27043_cpp_linked) {
	return _1c1b398be_find_var_in_package((*this)._field_files,_27031_ident,_27043_cpp_linked);
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b398be_Package::_method_find_type_alias(jule::Str _27638_ident,jule::Bool _27650_cpp_linked) {
	return _1c1b398be_find_type_alias_in_package((*this)._field_files,_27638_ident,_27650_cpp_linked);
}



inline jule::Ptr<_1db4a7e59_Struct> _1c1b398be_Package::_method_find_struct(jule::Str _28234_ident,jule::Bool _28246_cpp_linked) {
	return _1c1b398be_find_struct_in_package((*this)._field_files,_28234_ident,_28246_cpp_linked);
}



inline jule::Ptr<_1c17e2687_Fn> _1c1b398be_Package::_method_find_fn(jule::Str _28830_ident,jule::Bool _28842_cpp_linked) {
	return _1c1b398be_find_fn_in_package((*this)._field_files,_28830_ident,_28842_cpp_linked);
}



inline jule::Ptr<_1c196b2a0_Trait> _1c1b398be_Package::_method_find_trait(jule::Str _29433_ident) {
	return _1c1b398be_find_trait_in_package((*this)._field_files,_29433_ident);
}



inline jule::Ptr<_1c196c834_Enum> _1c1b398be_Package::_method_find_enum(jule::Str _30032_ident) {
	return _1c1b398be_find_enum_in_package((*this)._field_files,_30032_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b398be_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_Sema::_method_find_package(jule::Str _33235_ident) {
	return (*this)._field_file->_method_find_package(_33235_ident);
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> _34237_selector) {
	return (*this)._field_file->_method_select_package(_34237_selector);
}



inline jule::Ptr<_1c1b58316_Var> _1c1b18a24_Sema::_method_find_var(jule::Str _35231_ident,jule::Bool _35243_cpp_linked) {
	jule::Ptr<_1c1b58316_Var> _35417_v = _1c1b398be_find_var_in_package((*this)._field_files,_35231_ident,_35243_cpp_linked);
	if (_35417_v != nullptr) {
		return _35417_v;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392802640:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_35231_ident)))) {
					goto _iter_next_4392802640;
				}
				_35417_v=_1c1b18a24_imp->_method_find_var(_35231_ident,_35243_cpp_linked);
				if ((_35417_v != nullptr) && (*this)._method_is_accessible_define(_35417_v->_field_public,_35417_v->_field_token)) {
					return _35417_v;
				}
			}
			_iter_next_4392802640:;
			++it;
			goto _iter_begin_4392802640;
		}
		_iter_end_4392802640:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b18a24_Sema::_method_find_type_alias(jule::Str _37938_ident,jule::Bool _37950_cpp_linked) {
	jule::Ptr<_1a8ad0a37_TypeAlias> _38117_ta = _1c1b398be_find_type_alias_in_package((*this)._field_files,_37938_ident,_37950_cpp_linked);
	if (_38117_ta != nullptr) {
		return _38117_ta;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392811568:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_37938_ident)))) {
					goto _iter_next_4392811568;
				}
				_38117_ta=_1c1b18a24_imp->_method_find_type_alias(_37938_ident,_37950_cpp_linked);
				if ((_38117_ta != nullptr) && (*this)._method_is_accessible_define(_38117_ta->_field_public,_38117_ta->_field_token)) {
					return _38117_ta;
				}
			}
			_iter_next_4392811568:;
			++it;
			goto _iter_begin_4392811568;
		}
		_iter_end_4392811568:;
	}
	return nullptr;
}



inline jule::Ptr<_1db4a7e59_Struct> _1c1b18a24_Sema::_method_find_struct(jule::Str _40634_ident,jule::Bool _40646_cpp_linked) {
	jule::Ptr<_1db4a7e59_Struct> _40817_s = _1c1b398be_find_struct_in_package((*this)._field_files,_40634_ident,_40646_cpp_linked);
	if (_40817_s != nullptr) {
		return _40817_s;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392819184:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_40634_ident)))) {
					goto _iter_next_4392819184;
				}
				_40817_s=_1c1b18a24_imp->_method_find_struct(_40634_ident,_40646_cpp_linked);
				if ((_40817_s != nullptr) && (*this)._method_is_accessible_define(_40817_s->_field_public,_40817_s->_field_token)) {
					return _40817_s;
				}
			}
			_iter_next_4392819184:;
			++it;
			goto _iter_begin_4392819184;
		}
		_iter_end_4392819184:;
	}
	return nullptr;
}



inline jule::Ptr<_1c17e2687_Fn> _1c1b18a24_Sema::_method_find_fn(jule::Str _43330_ident,jule::Bool _43342_cpp_linked) {
	jule::Ptr<_1c17e2687_Fn> _43517_f = _1c1b398be_find_fn_in_package((*this)._field_files,_43330_ident,_43342_cpp_linked);
	if (_43517_f != nullptr) {
		return _43517_f;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392826928:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_43330_ident)))) {
					goto _iter_next_4392826928;
				}
				_43517_f=_1c1b18a24_imp->_method_find_fn(_43330_ident,_43342_cpp_linked);
				if ((_43517_f != nullptr) && (*this)._method_is_accessible_define(_43517_f->_field_public,_43517_f->_field_token)) {
					return _43517_f;
				}
			}
			_iter_next_4392826928:;
			++it;
			goto _iter_begin_4392826928;
		}
		_iter_end_4392826928:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196b2a0_Trait> _1c1b18a24_Sema::_method_find_trait(jule::Str _46033_ident) {
	jule::Ptr<_1c196b2a0_Trait> _46217_t = _1c1b398be_find_trait_in_package((*this)._field_files,_46033_ident);
	if (_46217_t != nullptr) {
		return _46217_t;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392833168:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_46033_ident)))) {
					goto _iter_next_4392833168;
				}
				_46217_t=_1c1b18a24_imp->_method_find_trait(_46033_ident);
				if ((_46217_t != nullptr) && (*this)._method_is_accessible_define(_46217_t->_field_public,_46217_t->_field_token)) {
					return _46217_t;
				}
			}
			_iter_next_4392833168:;
			++it;
			goto _iter_begin_4392833168;
		}
		_iter_end_4392833168:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196c834_Enum> _1c1b18a24_Sema::_method_find_enum(jule::Str _48732_ident) {
	jule::Ptr<_1c196c834_Enum> _48917_e = _1c1b398be_find_enum_in_package((*this)._field_files,_48732_ident);
	if (_48917_e != nullptr) {
		return _48917_e;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392841328:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
			{
				if ((!(_1c1b18a24_imp_is_lookupable(_1c1b18a24_imp,_48732_ident)))) {
					goto _iter_next_4392841328;
				}
				_48917_e=_1c1b18a24_imp->_method_find_enum(_48732_ident);
				if ((_48917_e != nullptr) && (*this)._method_is_accessible_define(_48917_e->_field_public,_48917_e->_field_token)) {
					return _48917_e;
				}
			}
			_iter_next_4392841328:;
			++it;
			goto _iter_begin_4392841328;
		}
		_iter_end_4392841328:;
	}
	return nullptr;
}



inline jule::Bool _1c1b18a24_Sema::_method_is_flag(jule::Int _51122_flags) {
	return ((*this)._field_flags & _51122_flags) == _51122_flags;
}



inline void _1c1b18a24_Sema::_method_set_current_file(jule::Ptr<_1c2020e2b_SymbolTable> _51339_f) {
	(*this)._field_file=_51339_f;
}



inline void _1c1b18a24_Sema::_method_push_err(_1da81133a_Token _51527_token,jule::Str _51541_fmt,jule::Slice<jule::Any> _51554_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_1c1b18a24_compiler_err(_51527_token,true,_51541_fmt,_51554_args));
}



inline void _1c1b18a24_Sema::_method_push_suggestion(jule::Str _52034_fmt,jule::Slice<jule::Any> _52047_args) {
	{
		_1c1b18a24_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_52034_fmt,_52047_args);
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_is_accessible_define(jule::Bool _52535_public,_1da81133a_Token _52549_token) {
	return (_52535_public || (_52549_token._field_file == nullptr)) || ((*this)._field_file->_field_file->_method_dir() == _52549_token._field_file->_method_dir());
}



inline jule::Bool _1c1b18a24_Sema::_method_is_duplicated_ident(jule::Uintptr _53234_itself,jule::Str _53251_ident,jule::Bool _53263_cpp_linked) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4392862960:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> &_1c1b18a24_f = *it;
			{
				if (_1c1b18a24_f->_method_is_duplicated_ident(_53234_itself,_53251_ident,_53263_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1c1b18a24_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_4392867248:;
					if (it != expr.end()) {
						jule::Ptr<_1c1b398be_ImportInfo> &_1c1b18a24_imp = *it;
						{
							{
								auto &expr = _1c1b18a24_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_4392868480:;
								if (it != expr.end()) {
									_1da81133a_Token &_1c1b18a24_selected = *it;
									{
										if (_1c1b18a24_selected._field_kind == _53251_ident) {
											return true;
										}
									}
									_iter_next_4392868480:;
									++it;
									goto _iter_begin_4392868480;
								}
								_iter_end_4392868480:;
							}
						}
						_iter_next_4392867248:;
						++it;
						goto _iter_begin_4392867248;
					}
					_iter_end_4392867248:;
				}
			}
			_iter_next_4392862960:;
			++it;
			goto _iter_begin_4392862960;
		}
		_iter_end_4392862960:;
	}
	return false;
}



inline void _1c1b18a24_Sema::_method_check_directives(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>& _54941_d,jule::Any _54967_o) {
	_1c1b32862_DirectiveChecker _55017_dc = _1c1b32862_DirectiveChecker(this->self,_54941_d,_54967_o);
	_55017_dc._method_check();
}



inline jule::Bool _1c1b18a24_Sema::_method_check_generic_quantity(jule::Int _55841_required,jule::Int _55856_given,_1da81133a_Token _55868_error_token) {
	jule::Bool _55890_ok = jule::Bool();
	{
		if ((_55841_required == 0LL) && (_55856_given > 0LL)) {
			_case_begin_4392878672:;
			{
				(*this)._method_push_err(_55868_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_55890_ok = false;
				return _55890_ok;
			}
		}
		else if ((_55841_required > 0LL) && (_55856_given == 0LL)) {
			_case_begin_4392878832:;
			{
				(*this)._method_push_err(_55868_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_55890_ok = false;
				return _55890_ok;
			}
		}
		else if (_55841_required < _55856_given) {
			_case_begin_4392878944:;
			{
				(*this)._method_push_err(_55868_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_55890_ok = false;
				return _55890_ok;
			}
		}
		else if (_55841_required > _55856_given) {
			_case_begin_4392878192:;
			{
				(*this)._method_push_err(_55868_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_55890_ok = false;
				return _55890_ok;
			}
		}
		else {
			_case_begin_4392877184:;
			{
				_55890_ok = true;
				return _55890_ok;
			}
		}
		_match_end_4392877008:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_is_duplicated_import_selection(jule::Uintptr _58145_itself,jule::Str _58162_ident) {
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392888832:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> &_1c1b18a24_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_1c1b18a24_imp) == _58145_itself) {
					goto _iter_end_4392888832;
				}
				if (_1c1b18a24_imp->_method_exist_ident(_58162_ident)) {
					return true;
				}
			}
			_iter_next_4392888832:;
			++it;
			goto _iter_begin_4392888832;
		}
		_iter_end_4392888832:;
	}
	return false;
}



inline jule::Any _1c1b18a24_Sema::_method_get_import_def(jule::Str _59629_ident,jule::Ptr<_1c1b398be_ImportInfo>& _59646_imp) {
	if (_1a8c0ca10_find_package_builtin_def(_59646_imp->_field_link_path,_59629_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto &expr = _59646_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_4392896336:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				
				jule::Any _60321_def = _1c1b18a24_f->_method_def_by_ident(_59629_ident,false);
				if (_60321_def != nullptr) {
					return _60321_def;
				}
			}
			_iter_next_4392896336:;
			++it;
			goto _iter_begin_4392896336;
		}
		_iter_end_4392896336:;
	}
	return jule::Any(nullptr);
}



inline void _1c1b18a24_Sema::_method_check_import_selections(jule::Ptr<_1c1b398be_ImportInfo>& _61247_imp) {
	{
		auto &expr = _61247_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_4392900592:;
		if (it != expr.end()) {
			_1da81133a_Token &_1c1b18a24_ident = *it;
			{
				if (_1c1b18a24_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4392900592;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(_61247_imp),_1c1b18a24_ident._field_kind)) {
					(*this)._method_push_err(_1c1b18a24_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					goto _iter_next_4392900592;
				}
				jule::Any _62421_def = (*this)._method_get_import_def(_1c1b18a24_ident._field_kind,_61247_imp);
				{
					auto &_match_expr{ _62421_def };
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_4392909600:;
						{
							goto _iter_next_4392900592;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
						_case_begin_4392908976:;
						{
							jule::Ptr<_1c1b58316_Var> _63125_v = _62421_def.operator jule::Ptr<_1c1b58316_Var>();
							if ((*this)._method_is_accessible_define(_63125_v->_field_public,_63125_v->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeAlias>>()) {
						_case_begin_4392909072:;
						{
							jule::Ptr<_1a8ad0a37_TypeAlias> _63725_ta = _62421_def.operator jule::Ptr<_1a8ad0a37_TypeAlias>();
							if ((*this)._method_is_accessible_define(_63725_ta->_field_public,_63725_ta->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
						_case_begin_4392909168:;
						{
							jule::Ptr<_1db4a7e59_Struct> _64325_strct = _62421_def.operator jule::Ptr<_1db4a7e59_Struct>();
							if ((*this)._method_is_accessible_define(_64325_strct->_field_public,_64325_strct->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c196b2a0_Trait>>()) {
						_case_begin_4392910784:;
						{
							jule::Ptr<_1c196b2a0_Trait> _64925_t = _62421_def.operator jule::Ptr<_1c196b2a0_Trait>();
							if ((*this)._method_is_accessible_define(_64925_t->_field_public,_64925_t->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c196c834_Enum>>()) {
						_case_begin_4392910880:;
						{
							jule::Ptr<_1c196c834_Enum> _65525_e = _62421_def.operator jule::Ptr<_1c196c834_Enum>();
							if ((*this)._method_is_accessible_define(_65525_e->_field_public,_65525_e->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c17e2687_Fn>>()) {
						_case_begin_4392910992:;
						{
							jule::Ptr<_1c17e2687_Fn> _66125_f = _62421_def.operator jule::Ptr<_1c17e2687_Fn>();
							if ((*this)._method_is_accessible_define(_66125_f->_field_public,_66125_f->_field_token)) {
								goto _iter_next_4392900592;
							}
						}
					}
					else {
						_case_begin_4392904656:;
						{
							(*this)._method_push_err(_1c1b18a24_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_ident._field_kind)}));
							goto _iter_next_4392900592;
						}
					}
					_match_end_4392908560:;
				}
				(*this)._method_push_err(_1c1b18a24_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
			}
			_iter_next_4392900592:;
			++it;
			goto _iter_begin_4392900592;
		}
		_iter_end_4392900592:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_is_use_alias_duplication(jule::Ptr<_1c1b398be_ImportInfo>& _67644_imp) {
	if (_67644_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4392930688:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp2 = *it;
			{
				if (_1c1b18a24_imp2 == _67644_imp) {
					goto _iter_end_4392930688;
				}
				if (_1c1b18a24_imp2->_field_alias == _67644_imp->_field_alias) {
					return true;
				}
				if ((_1c1b18a24_imp2->_field_ident == _1c1b18a24_imp2->_field_link_path) && (_1c1b18a24_imp2->_field_ident == _67644_imp->_field_alias)) {
					return true;
				}
			}
			_iter_next_4392930688:;
			++it;
			goto _iter_begin_4392930688;
		}
		_iter_end_4392930688:;
	}
	return false;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_import(jule::Ptr<_1c1b398be_ImportInfo>& _69736_imp) {
	if (_69736_imp->_field_cpp_linked || (_69736_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_69736_imp)) {
		(*this)._method_push_err(_69736_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_69736_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if (_69736_imp->_field_duplicate) {
		return true;
	}
	jule::Ptr<_1c1b18a24_Sema> _71117_sema = jule::new_struct_ptr<_1c1b18a24_Sema>(new( std::nothrow ) _1c1b18a24_Sema(jule::Slice<_203741197_Log>(),jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>(),jule::Ptr<_1c2020e2b_SymbolTable>(),(*this)._field_flags));
	_71117_sema->_method_check(_69736_imp->_field_package->_field_files);
	if (_71117_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_71117_sema->_field_errors);
		_71117_sema->_field_errors=nullptr;
		return false;
	}
	(*this)._method_check_import_selections(_69736_imp);
	return true;
}



inline void _1c1b18a24_Sema::_method_check_imports(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4392948736:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_file = *it;
			{
				(*this)._method_set_current_file(_1c1b18a24_file);
				{
					auto &expr = _1c1b18a24_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_4392951296:;
					if (it != expr.end()) {
						jule::Ptr<_1c1b398be_ImportInfo> _1c1b18a24_imp = *it;
						{
							jule::Bool _73021_ok = (*this)._method_check_import(_1c1b18a24_imp);
							if ((!(_73021_ok))) {
								(*this)._method_push_err(_1c1b18a24_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4392951296:;
						++it;
						goto _iter_begin_4392951296;
					}
					_iter_end_4392951296:;
				}
			}
			_iter_next_4392948736:;
			++it;
			goto _iter_begin_4392948736;
		}
		_iter_end_4392948736:;
	}
}



inline void _1c1b18a24_Sema::_method_impl_file_impls(void) {
	{
		auto &expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_4392954288:;
		if (it != expr.end()) {
			jule::Ptr<_1c1977ee3_Impl> _1c1b18a24_imp = *it;
			{
				this->self->_method_impl_impl(_1c1b18a24_imp);
			}
			_iter_next_4392954288:;
			++it;
			goto _iter_begin_4392954288;
		}
		_iter_end_4392954288:;
	}
}



inline void _1c1b18a24_Sema::_method_impl_impls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4392959856:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_file = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4392959856:;
			++it;
			goto _iter_begin_4392959856;
		}
		_iter_end_4392959856:;
	}
}



inline void _1c1b18a24_Sema::_method_check_enums(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4392963552:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_file = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4392963552:;
			++it;
			goto _iter_begin_4392963552;
		}
		_iter_end_4392963552:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_check_type_with_refers(jule::Ptr<_1a8ad0a37_TypeSymbol>& _76347_t,jule::Trait<_1a8be79c8_Lookup> _76413_l,jule::Ptr<_1a8ad0a37_Referencer> _76428_referencer) {
	jule::Bool _76455_ok = jule::Bool();
	if (_76347_t->_method_checked()) {
		_76455_ok = true;
		return _76455_ok;
	}
	_1a8ad0a37_TypeChecker _76817_tc = _1a8ad0a37_TypeChecker(this->self,_76413_l,_76428_referencer,_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Bool(),jule::Bool());
	_76817_tc._method_check(_76347_t);
	_76455_ok = _76347_t->_method_checked();
	return _76455_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_type(jule::Ptr<_1a8ad0a37_TypeSymbol>& _77935_t,jule::Trait<_1a8be79c8_Lookup> _77955_l) {
	jule::Bool _77968_ok = jule::Bool();
	_77968_ok = this->self->_method_check_type_with_refers(_77935_t,_77955_l,nullptr);
	return _77968_ok;
}



inline jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_Sema::_method_build_type_with_generics(jule::Ptr<_1da7b8e5d_TypeDecl>& _78549_t,jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _78613_generics) {
	jule::Ptr<_1a8ad0a37_TypeChecker> _78717_tc = jule::new_struct<_1a8ad0a37_TypeChecker>(new( std::nothrow ) _1a8ad0a37_TypeChecker(this->self,this->self,jule::Ptr<_1a8ad0a37_Referencer>(),_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),_78613_generics,jule::Bool(),jule::Bool()));
	return _78717_tc->_method_check_decl(_78549_t);
}



inline jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_Sema::_method_build_type(jule::Ptr<_1da7b8e5d_TypeDecl>& _79635_t) {
	return this->self->_method_build_type_with_generics(_79635_t,nullptr);
}



inline jule::Ptr<_1c1ead281_Eval> _1c1b18a24_Sema::_method_evalpd(jule::Trait<_1a8be79c8_Lookup> _80230_l,jule::Ptr<_1a8ad0a37_TypeKind> _80245_p,jule::Ptr<_1c1b58316_Var> _80263_owner) {
	jule::Ptr<_1c1ead281_Eval> _80317_e = jule::new_struct_ptr<_1c1ead281_Eval>(new( std::nothrow ) _1c1ead281_Eval(this->self,_80230_l,jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_80263_owner));
	{
		auto &_match_expr{ _80230_l };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4393006992:;
			{
				_80317_e->_field_unsafety=_80230_l.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_is_unsafe();
			}
		}
		_match_end_4393008208:;
	}
	_80317_e->_field_prefix=_80245_p;
	return _80317_e;
}



inline jule::Ptr<_1c1ead281_Eval> _1c1b18a24_Sema::_method_evalp(jule::Trait<_1a8be79c8_Lookup> _82029_l,jule::Ptr<_1a8ad0a37_TypeKind> _82044_p) {
	return this->self->_method_evalpd(_82029_l,_82044_p,nullptr);
}



inline jule::Ptr<_1c1ead281_Eval> _1c1b18a24_Sema::_method_eval(jule::Trait<_1a8be79c8_Lookup> _82528_l) {
	return this->self->_method_evalp(_82528_l,nullptr);
}



inline void _1c1b18a24_Sema::_method_check_assign_type(jule::Bool _82937_dest_is_ref,jule::Ptr<_1a8ad0a37_TypeKind>& _82961_dest,jule::Ptr<_1c1ead281_Data>& _83014_d,_1da81133a_Token _83028_error_token) {
	if (_83014_d->_field_kind->_field_variadic) {
		this->self->_method_push_err(_83028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	if (_82937_dest_is_ref) {
		if ((!(_82961_dest->_method_equals(_83014_d->_field_kind)))) {
			this->self->_method_push_err(_83028_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82961_dest->_method_to_str()),jule::Any(_83014_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ptr<_1c1d617a5_AssignTypeChecker> _84021_atc = jule::new_struct<_1c1d617a5_AssignTypeChecker>(new( std::nothrow ) _1c1d617a5_AssignTypeChecker(this->self,_82961_dest,_83014_d,_83028_error_token));
		jule::Bool _84617_ok = _84021_atc->_method_check();
		if ((!(_84617_ok))) {
			return;
		}
	}
	if ((!(_83014_d->_method_is_const())) || (_82961_dest->_method_prim() == nullptr)) {
		return;
	}
	jule::Str _85617_kind = _82961_dest->_method_prim()->_field_kind;
	{
		if (_1a8dc9a45_is_sig_int(_85617_kind)) {
			_case_begin_4393028736:;
			{
				_83014_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_83014_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_1a8dc9a45_is_unsig_int(_85617_kind)) {
			_case_begin_4393028832:;
			{
				_83014_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_83014_d->_field_constant->_method_as_u64()));
			}
		}
		else if (_1a8dc9a45_is_float(_85617_kind)) {
			_case_begin_4393028928:;
			{
				_83014_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_83014_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_4393028512:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_check_type_compatibility(jule::Ptr<_1a8ad0a37_TypeKind>& _86549_dest,jule::Ptr<_1a8ad0a37_TypeKind>& _86614_src,_1da81133a_Token& _86635_error_token) {
	if (_86614_src == nullptr) {
		this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
		return false;
	}
	if (_86614_src->_method_tup() != nullptr) {
		this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
		return false;
	}
	_1c1d617a5_TypeCompatibilityChecker _88017_tcc = _1c1d617a5_TypeCompatibilityChecker(this->self,_86549_dest,_86614_src,_86635_error_token);
	if (_88017_tcc._method_check()) {
		return true;
	}
	this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
	return false;
}



inline jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_Sema::_method_build_non_generic_type_kind(jule::Ptr<_1da7b8e5d_TypeDecl>& _90152_ast,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>& _90214_generics) {
	jule::Ptr<_1a8ad0a37_TypeChecker> _90317_tc = jule::new_struct<_1a8ad0a37_TypeChecker>(new( std::nothrow ) _1a8ad0a37_TypeChecker(this->self,this->self,jule::Ptr<_1a8ad0a37_Referencer>(),_1da81133a_Token(),_90214_generics,jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Bool(),jule::Bool()));
	return _90317_tc->_method_check_decl(_90152_ast);
}



inline void _1c1b18a24_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_1c17e2687_FnIns>& _91156_f) {
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _91217_generics = nullptr;
	if (_91156_f->_field_decl->_method_is_method()) {
		_91217_generics=jule::append(_91156_f->_field_decl->_field_generics,_91156_f->_field_decl->_field_owner->_field_generics);
	} else {
		_91217_generics=_91156_f->_field_decl->_field_generics;
	}
	{
		auto &expr = _91156_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4393056912:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1c1b18a24_p = *it;
			{
				if ((!(_1c1b18a24_p->_field_decl->_method_is_self()))) {
					_1c1b18a24_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1c1b18a24_p->_field_decl->_field_kind->_field_decl,_91217_generics);
				}
			}
			_iter_next_4393056912:;
			++it;
			goto _iter_begin_4393056912;
		}
		_iter_end_4393056912:;
	}
	if ((!(_91156_f->_field_decl->_method_is_void()))) {
		_91156_f->_field_result=this->self->_method_build_non_generic_type_kind(_91156_f->_field_decl->_field_result->_field_kind->_field_decl,_91217_generics);
	}
}



inline jule::Ptr<_1c17e2687_FnIns> _1c1b18a24_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_1c17e2687_Fn>& _92948_f) {
	jule::Ptr<_1c17e2687_FnIns> _93017_ins = _92948_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_93017_ins);
	return _93017_ins;
}



inline jule::Bool _1c1b18a24_Sema::_method_reload_fn_ins_types(jule::Ptr<_1c17e2687_FnIns>& _93544_f) {
	jule::Bool _93557_ok = jule::Bool();
	if (_93544_f->_method_is_builtin() || _93544_f->_method_is_anon()) {
		_93557_ok = true;
		return _93557_ok;
	}
	jule::Ptr<_1c1b18a24_Sema> _94017_sema = _93544_f->_field_decl->_field_sema;
	jule::Ptr<_1c2020e2b_SymbolTable> _94217_old = _93544_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_93544_f->_field_decl->_field_sema->_method_set_current_file(_94217_old);
	});
	jule::Ptr<_1c2020e2b_SymbolTable> _94417_file = _1c1b18a24_find_file(_93544_f->_field_decl->_field_sema->_field_files,_93544_f->_field_decl->_field_token._field_file);
	if (_94417_file != nullptr) {
		_93544_f->_field_decl->_field_sema->_method_set_current_file(_94417_file);
	}
	jule::I64 _94917_size = _93544_f->_field_generics.len();
	if ((_93544_f->_field_decl != nullptr) && (_93544_f->_field_decl->_field_owner != nullptr)) {
		_94917_size+=static_cast<jule::I64>(_93544_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _95417_generics = jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>::alloc(0LL,_94917_size);
	{
		auto &expr = _93544_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4393082176:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_g = *it;
			{
				_95417_generics.push(jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1da81133a_Token(),_93544_f->_field_decl->_field_generics[_1c1b18a24_i]->_field_ident,jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_1c1b18a24_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4393082176:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393082176;
		}
		_iter_end_4393082176:;
	}
	if ((_93544_f->_field_decl != nullptr) && (_93544_f->_field_decl->_field_owner != nullptr)) {
		jule::Ptr<_1db4a7e59_StructIns> _96621_owner = _93544_f->_field_owner;
		{
			auto &expr = _96621_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4393084320:;
			if (it != expr.end()) {
				jule::Int _1c1b18a24_i = it - expr.begin();
				jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_g = *it;
				{
					_95417_generics.push(jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1da81133a_Token(),_96621_owner->_field_decl->_field_generics[_1c1b18a24_i]->_field_ident,jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_1c1b18a24_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4393084320:;
				++it;
				_1c1b18a24_i++;
				goto _iter_begin_4393084320;
			}
			_iter_end_4393084320:;
		}
	}
	_93557_ok=true;
	{
		auto &expr = _93544_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4393086992:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1c1b18a24_p = *it;
			{
				if ((!(_1c1b18a24_p->_field_decl->_method_is_self()))) {
					_1c1b18a24_p->_field_kind=_94017_sema->_method_build_type_with_generics(_1c1b18a24_p->_field_decl->_field_kind->_field_decl,_95417_generics);
					if (_1c1b18a24_p->_field_kind != nullptr) {
						_1c1b18a24_p->_field_kind->_field_variadic=_1c1b18a24_p->_field_decl->_field_variadic;
						if (_1c1b18a24_p->_field_decl->_field_reference && (!(_1a8ad0a37_is_valid_for_ref(_1c1b18a24_p->_field_kind)))) {
							this->self->_method_push_err(_1c1b18a24_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_p->_field_kind->_method_to_str())}));
						}
					} else {
						_93557_ok=false;
					}
				}
			}
			_iter_next_4393086992:;
			++it;
			goto _iter_begin_4393086992;
		}
		_iter_end_4393086992:;
	}
	if ((!(_93544_f->_field_decl->_method_is_void()))) {
		_93544_f->_field_result=_94017_sema->_method_build_type_with_generics(_93544_f->_field_decl->_field_result->_field_kind->_field_decl,_95417_generics);
		_93557_ok=(_93544_f->_field_result != nullptr) && _93557_ok;
	}
	if (_94017_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_94017_sema->_field_errors);
		_94017_sema->_field_errors=nullptr;
	}
	return _93557_ok;
}



inline void _1c1b18a24_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _100552_left_mut,jule::Ptr<_1c1ead281_Data>& _100569_d,_1da81133a_Token& _100584_error_token) {
	{
		auto &_match_expr{ _100569_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4393105536:;
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_TraitSubIdentExprModel>>()) {
			_case_begin_4393104752:;
			{
				jule::Ptr<_1c19727a1_TraitSubIdentExprModel> _101117_model = _100569_d->_field_model.operator jule::Ptr<_1c19727a1_TraitSubIdentExprModel>();
				if ((!(_1c1b18a24_is_valid_model_for_ref(_101117_model->_field_expr)))) {
					this->self->_method_push_err(_100584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_101117_model->_field_ident)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructSubIdentExprModel>>()) {
			_case_begin_4393104848:;
			{
				jule::Ptr<_1c19727a1_StructSubIdentExprModel> _101717_model = _100569_d->_field_model.operator jule::Ptr<_1c19727a1_StructSubIdentExprModel>();
				if ((!(_1c1b18a24_is_valid_model_for_ref(_101717_model->_field_expr)))) {
					this->self->_method_push_err(_100584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_101717_model->_field_field->_field_decl->_field_ident)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_CommonSubIdentExprModel>>()) {
			_case_begin_4393104960:;
			{
				this->self->_method_push_err(_100584_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_UnaryExprModel>>()) {
			_case_begin_4393105072:;
			{
				jule::Ptr<_1c19727a1_UnaryExprModel> _102717_unary = _100569_d->_field_model.operator jule::Ptr<_1c19727a1_UnaryExprModel>();
				if (_102717_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_4393104448;
				}
				goto _case_begin_4393104160;
			}
		}
		else {
			_case_begin_4393104160:;
			{
				this->self->_method_push_err(_100584_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
			}
		}
		_match_end_4393104448:;
	}
	if (_100552_left_mut && (!(_100569_d->_field_mutable))) {
		this->self->_method_push_err(_100584_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
	}
}



inline void _1c1b18a24_Sema::_method_check_validity_for_init_expr(jule::Bool _104348_left_mut,jule::Bool _104364_left_ref,jule::Ptr<_1a8ad0a37_TypeKind>& _104410_left_kind,jule::Ptr<_1c1ead281_Data>& _104437_d,_1da81133a_Token& _104452_error_token) {
	if ((_104348_left_mut && (!(_104437_d->_field_mutable))) && _104437_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_104452_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
	}
	if (_104364_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_104348_left_mut,_104437_d,_104452_error_token);
	}
	jule::Ptr<_1c1d617a5_AssignTypeChecker> _105217_atc = jule::new_struct<_1c1d617a5_AssignTypeChecker>(new( std::nothrow ) _1c1d617a5_AssignTypeChecker(this->self,jule::Ptr<_1a8ad0a37_TypeKind>(),_104437_d,_104452_error_token));
	_105217_atc->_method_check_validity();
}



inline jule::Bool _1c1b18a24_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_1a8ad0a37_TypeAlias>& _106051_ta,jule::Trait<_1a8be79c8_Lookup> _106071_l) {
	jule::Bool _106084_ok = jule::Bool();
	jule::Ptr<_1c2020e2b_SymbolTable> _106117_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_106117_old);
	});
	jule::Ptr<_1c2020e2b_SymbolTable> _106317_file = _1c1b18a24_find_file(this->self->_field_files,_106051_ta->_field_token._field_file);
	if (_106317_file != nullptr) {
		this->self->_method_set_current_file(_106317_file);
	}
	_106084_ok=this->self->_method_check_type_with_refers(_106051_ta->_field_kind,_106071_l,jule::new_struct<_1a8ad0a37_Referencer>(new( std::nothrow ) _1a8ad0a37_Referencer(_106051_ta->_field_ident,jule::Any(_106051_ta),(&(_106051_ta->_field_refers)))));
	if ((_106084_ok && (_106051_ta->_field_kind->_field_kind->_method_arr() != nullptr)) && _106051_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_106051_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106084_ok=false;
	}
	return _106084_ok;
}



inline void _1c1b18a24_Sema::_method_check_type_alias_decl(jule::Ptr<_1a8ad0a37_TypeAlias>& _108046_ta,jule::Trait<_1a8be79c8_Lookup> _108066_l) {
	if (_1da81133a_is_ignore_ident(_108046_ta->_field_ident)) {
		this->self->_method_push_err(_108046_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_108046_ta,_108066_l);
}



inline void _1c1b18a24_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_1a8ad0a37_TypeAlias>& _108850_ta) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_108850_ta),_108850_ta->_field_ident,_108850_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_108850_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_108850_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_108850_ta,this->self);
}



inline jule::Bool _1c1b18a24_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _109744_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4393155296:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b18a24_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_1c1b18a24_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_109744_ok = false;
					return _109744_ok;
				}
			}
			_iter_next_4393155296:;
			++it;
			goto _iter_begin_4393155296;
		}
		_iter_end_4393155296:;
	}
	_109744_ok = true;
	return _109744_ok;
}



inline void _1c1b18a24_Sema::_method_check_enum_items_dup(jule::Ptr<_1c196c834_Enum> _110939_e) {
	{
		auto &expr = _110939_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4393160064:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_EnumItem> &_1c1b18a24_item = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1b18a24_item->_field_ident)) {
					(*this)._method_push_err(_1c1b18a24_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110939_e->_field_items;
						auto it = expr.begin();
						_iter_begin_4393164464:;
						if (it != expr.end()) {
							jule::Ptr<_1c196c834_EnumItem> &_1c1b18a24_citem = *it;
							{
								if (_1c1b18a24_item == _1c1b18a24_citem) {
									goto _iter_end_4393164464;
								} else if (_1c1b18a24_item->_field_ident == _1c1b18a24_citem->_field_ident) {
									(*this)._method_push_err(_1c1b18a24_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_4393164464;
								}
							}
							_iter_next_4393164464:;
							++it;
							goto _iter_begin_4393164464;
						}
						_iter_end_4393164464:;
					}
				}
			}
			_iter_next_4393160064:;
			++it;
			goto _iter_begin_4393160064;
		}
		_iter_end_4393160064:;
	}
}



inline void _1c1b18a24_Sema::_method_check_enum_items_str(jule::Ptr<_1c196c834_Enum>& _112745_e) {
	{
		auto &expr = _112745_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4393165280:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_EnumItem> _1c1b18a24_item = *it;
			{
				if (_1c1b18a24_item->_method_auto_expr()) {
					_1c1b18a24_item->_field_value=jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr>(),jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a8d46165_Const::_static_method_new_str(_1c1b18a24_item->_field_ident)))));
					_1c1b18a24_item->_field_value->_field_data->_field_model=jule::Any(_1c1b18a24_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_1c1ead281_Data> _113725_d = this->self->_method_eval(this->self)->_method_eval_expr(_1c1b18a24_item->_field_value->_field_expr);
					if (_113725_d == nullptr) {
						goto _iter_next_4393165280;
					}
					if ((!(_113725_d->_method_is_const()))) {
						this->self->_method_push_err(_1c1b18a24_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_112745_e->_field_kind->_field_kind,_113725_d,_1c1b18a24_item->_field_token);
					_1c1b18a24_item->_field_value->_field_data=_113725_d;
				}
			}
			_iter_next_4393165280:;
			++it;
			goto _iter_begin_4393165280;
		}
		_iter_end_4393165280:;
	}
}



inline void _1c1b18a24_Sema::_method_check_enum_items_int(jule::Ptr<_1c196c834_Enum>& _115245_e) {
	jule::U64 _115317_max = static_cast<jule::U64>(_1a8d4e338_max(_115245_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &expr = _115245_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4393183712:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1c196c834_EnumItem> _1c1b18a24_item = *it;
			{
				if (_115317_max == 0LL) {
					this->self->_method_push_err(_1c1b18a24_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_115317_max)--;
				}
				if (_1c1b18a24_item->_method_auto_expr()) {
					_1c1b18a24_item->_field_value=jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr>(),jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a8d46165_Const::_static_method_new_u64(static_cast<jule::U64>(_115317_max - (_115317_max - static_cast<jule::U64>(_1c1b18a24_i))))))));
					_1c1b18a24_item->_field_value->_field_data->_field_model=jule::Any(_1c1b18a24_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_1c1ead281_Data> _116925_d = this->self->_method_eval(this->self)->_method_eval_expr(_1c1b18a24_item->_field_value->_field_expr);
					if (_116925_d == nullptr) {
						goto _iter_next_4393183712;
					}
					if ((!(_116925_d->_method_is_const()))) {
						this->self->_method_push_err(_1c1b18a24_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_115245_e->_field_kind->_field_kind,_116925_d,_1c1b18a24_item->_field_token);
					_1c1b18a24_item->_field_value->_field_data=_116925_d;
				}
			}
			_iter_next_4393183712:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393183712;
		}
		_iter_end_4393183712:;
	}
}



inline void _1c1b18a24_Sema::_method_check_enum_decl(jule::Ptr<_1c196c834_Enum>& _118440_e) {
	if (_1da81133a_is_ignore_ident(_118440_e->_field_ident)) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_118440_e),_118440_e->_field_ident,false)) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_118440_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_118440_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_118440_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_118440_e);
	if (_118440_e->_field_kind != nullptr) {
		if ((!(this->self->_method_check_type(_118440_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_118440_e->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_1a8ad0a37_Prim> _121117_t = _118440_e->_field_kind->_field_kind->_method_prim();
	if (_121117_t == nullptr) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		return;
	}
	{
		if (_121117_t->_method_is_str()) {
			_case_begin_4393214080:;
			{
				this->self->_method_check_enum_items_str(_118440_e);
			}
		}
		else if (_1a8dc9a45_is_int(_121117_t->_method_to_str())) {
			_case_begin_4393213344:;
			{
				this->self->_method_check_enum_items_int(_118440_e);
			}
		}
		else {
			_case_begin_4393206864:;
			{
				this->self->_method_push_err(_118440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
			}
		}
		_match_end_4393211040:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_check_enum_decls(void) {
	jule::Bool _123138_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_4393219488:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_Enum> _1c1b18a24_e = *it;
			{
				this->self->_method_check_enum_decl(_1c1b18a24_e);
				if (this->self->_field_errors.len() > 0LL) {
					_123138_ok = false;
					return _123138_ok;
				}
			}
			_iter_next_4393219488:;
			++it;
			goto _iter_begin_4393219488;
		}
		_iter_end_4393219488:;
	}
	_123138_ok = true;
	return _123138_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>& _124339_generics) {
	jule::Bool _124372_ok = jule::Bool();
	_124372_ok=true;
	{
		auto &expr = _124339_generics;
		auto it = expr.begin();
		_iter_begin_4393225760:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_g = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1b18a24_g->_field_ident)) {
					(*this)._method_push_err(_1c1b18a24_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_124372_ok=false;
					goto _iter_next_4393225760;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _124339_generics;
					auto it = expr.begin();
					_iter_begin_4393227776:;
					if (it != expr.end()) {
						jule::Int _1c1b18a24_j = it - expr.begin();
						jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_ct = *it;
						{
							{
								if (_1c1b18a24_j >= _1c1b18a24_i) {
									_case_begin_4393232320:;
									{
										goto _iter_end_4393227776;
									}
								}
								else if (_1c1b18a24_g->_field_ident == _1c1b18a24_ct->_field_ident) {
									_case_begin_4393232432:;
									{
										(*this)._method_push_err(_1c1b18a24_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_g->_field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_124372_ok=false;
										goto _iter_end_4393227776;
									}
								}
								_match_end_4393232096:;
							}
						}
						_iter_next_4393227776:;
						++it;
						_1c1b18a24_j++;
						goto _iter_begin_4393227776;
					}
					_iter_end_4393227776:;
				}
			}
			_iter_next_4393225760:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393225760;
		}
		_iter_end_4393225760:;
	}
	return _124372_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_1c17e2687_Fn>& _127144_f) {
	jule::Bool _127154_ok = jule::Bool();
	_127154_ok=true;
	_julec_label_check:;
	{
		auto &expr = _127144_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4393240784:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1c17e2687_Param> &_1c1b18a24_p = *it;
			{
				{
					auto &expr = _127144_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4393242944:;
					if (it != expr.end()) {
						jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_g = *it;
						{
							if (_1c1b18a24_p->_field_ident == _1c1b18a24_g->_field_ident) {
								_127154_ok=false;
								(*this)._method_push_err(_1c1b18a24_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_4393240784;
							}
						}
						_iter_next_4393242944:;
						++it;
						goto _iter_begin_4393242944;
					}
					_iter_end_4393242944:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _127144_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4393244816:;
					if (it != expr.end()) {
						jule::Int _1c1b18a24_j = it - expr.begin();
						jule::Ptr<_1c17e2687_Param> &_1c1b18a24_jp = *it;
						{
							{
								if (_1c1b18a24_j >= _1c1b18a24_i) {
									_case_begin_4393249744:;
									{
										goto _iter_end_4393244816;
									}
								}
								else if (_1da81133a_is_anon_ident(_1c1b18a24_p->_field_ident) || _1da81133a_is_anon_ident(_1c1b18a24_jp->_field_ident)) {
									_case_begin_4393249856:;
									{
										goto _iter_end_4393244816;
									}
								}
								else if (_1c1b18a24_p->_field_ident == _1c1b18a24_jp->_field_ident) {
									_case_begin_4393249968:;
									{
										_127154_ok=false;
										(*this)._method_push_err(_1c1b18a24_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_p->_field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_4393240784;
									}
								}
								_match_end_4393249504:;
							}
						}
						_iter_next_4393244816:;
						++it;
						_1c1b18a24_j++;
						goto _iter_begin_4393244816;
					}
					_iter_end_4393244816:;
				}
			}
			_iter_next_4393240784:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393240784;
		}
		_iter_end_4393240784:;
	}
	return _127154_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_1c17e2687_Fn>& _130744_f) {
	jule::Bool _130754_ok = jule::Bool();
	_130754_ok=true;
	if (_130744_f->_method_is_void()) {
		return _130754_ok;
	}
	{
		auto &expr = _130744_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4393260080:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			_1da81133a_Token &_1c1b18a24_v = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1b18a24_v._field_kind)) {
					goto _iter_next_4393260080;
				}
				{
					auto &expr = _130744_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4393262128:;
					if (it != expr.end()) {
						jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_g = *it;
						{
							if (_1c1b18a24_v._field_kind == _1c1b18a24_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4393262128:;
						++it;
						goto _iter_begin_4393262128;
					}
					_iter_end_4393262128:;
				}
				{
					auto &expr = _130744_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4393265904:;
					if (it != expr.end()) {
						jule::Ptr<_1c17e2687_Param> &_1c1b18a24_p = *it;
						{
							if (_1c1b18a24_v._field_kind == _1c1b18a24_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4393265904:;
						++it;
						goto _iter_begin_4393265904;
					}
					_iter_end_4393265904:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _130744_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_4393269680:;
					if (it != expr.end()) {
						jule::Int _1c1b18a24_j = it - expr.begin();
						_1da81133a_Token &_1c1b18a24_jv = *it;
						{
							{
								if (_1c1b18a24_j >= _1c1b18a24_i) {
									_case_begin_4393271968:;
									{
										goto _iter_end_4393269680;
									}
								}
								else if (_1c1b18a24_jv._field_kind == _1c1b18a24_v._field_kind) {
									_case_begin_4393272080:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_4393271744:;
							}
						}
						_iter_next_4393269680:;
						++it;
						_1c1b18a24_j++;
						goto _iter_begin_4393269680;
					}
					_iter_end_4393269680:;
				}
				goto _iter_next_4393260080;
				_julec_label_exist:;
				(*this)._method_push_err(_1c1b18a24_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_130754_ok=false;
			}
			_iter_next_4393260080:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393260080;
		}
		_iter_end_4393260080:;
	}
	return _130754_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_decl_types(jule::Ptr<_1c17e2687_Fn>& _135644_f) {
	jule::Bool _135654_ok = jule::Bool();
	_135654_ok=true;
	jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>> _135917_generics = _135644_f->_field_generics;
	if (_135644_f->_field_owner != nullptr) {
		_135917_generics=jule::append(_135917_generics,_135644_f->_field_owner->_field_generics);
	}
	{
		auto &expr = _135644_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4393282480:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Param> _1c1b18a24_p = *it;
			{
				if ((!(_1c1b18a24_p->_method_is_self()))) {
					jule::Ptr<_1a8ad0a37_TypeKind> _136625_kind = this->self->_method_build_non_generic_type_kind(_1c1b18a24_p->_field_kind->_field_decl,_135917_generics);
					_135654_ok=(_136625_kind != nullptr) && _135654_ok;
					_1c1b18a24_p->_field_kind->_field_kind=_136625_kind;
				}
			}
			_iter_next_4393282480:;
			++it;
			goto _iter_begin_4393282480;
		}
		_iter_end_4393282480:;
	}
	if ((!(_135644_f->_method_is_void()))) {
		jule::Ptr<_1a8ad0a37_TypeKind> _137321_kind = this->self->_method_build_non_generic_type_kind(_135644_f->_field_result->_field_kind->_field_decl,_135917_generics);
		_135654_ok=(_137321_kind != nullptr) && _135654_ok;
		_135644_f->_field_result->_field_kind->_field_kind=_137321_kind;
	}
	return _135654_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_decl_prototype(jule::Ptr<_1c17e2687_Fn>& _138348_f) {
	jule::Bool _138358_ok = jule::Bool();
	if (_138348_f->_field_exceptional && _138348_f->_field_cpp_linked) {
		this->self->_method_push_err(_138348_f->_field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		_138358_ok = false;
		return _138358_ok;
	}
	if (_138348_f->_field_exceptional) {
		if (_138348_f->_method_is_entry_point()) {
			this->self->_method_push_err(_138348_f->_field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_138348_f->_method_is_init()) {
			this->self->_method_push_err(_138348_f->_field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		if ((!(this->self->_method_check_decl_generics(_138348_f->_field_generics)))) {
			_case_begin_4393300752:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_params_dup(_138348_f)))) {
			_case_begin_4393300912:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_result_dup(_138348_f)))) {
			_case_begin_4393301008:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_types(_138348_f)))) {
			_case_begin_4393300272:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else {
			_case_begin_4393293280:;
			{
				_138358_ok = true;
				return _138358_ok;
			}
		}
		_match_end_4393293072:;
	}
}



inline void _1c1b18a24_Sema::_method_check_trait_decl_method(jule::Ptr<_1c17e2687_Fn>& _140648_f) {
	if (_1da81133a_is_ignore_ident(_140648_f->_field_ident)) {
		this->self->_method_push_err(_140648_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_fn_decl_prototype(_140648_f);
	_140648_f->_field_sema=this->self;
}



inline void _1c1b18a24_Sema::_method_check_trait_decl_methods(jule::Ptr<_1c196b2a0_Trait>& _141549_t) {
	{
		auto &expr = _141549_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4393312240:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_f = *it;
			{
				this->self->_method_check_trait_decl_method(_1c1b18a24_f);
				_141549_t->_field_mutable=_141549_t->_field_mutable || _1c1b18a24_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _141549_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_4393317264:;
					if (it != expr.end()) {
						jule::Int _1c1b18a24_j = it - expr.begin();
						jule::Ptr<_1c17e2687_Fn> &_1c1b18a24_jf = *it;
						{
							{
								if (_1c1b18a24_j >= _1c1b18a24_i) {
									_case_begin_4393319920:;
									{
										goto _iter_end_4393317264;
									}
								}
								else if (_1c1b18a24_f->_field_ident == _1c1b18a24_jf->_field_ident) {
									_case_begin_4393320032:;
									{
										this->self->_method_push_err(_1c1b18a24_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_f->_field_ident)}));
										this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_4393317264;
									}
								}
								_match_end_4393319696:;
							}
						}
						_iter_next_4393317264:;
						++it;
						_1c1b18a24_j++;
						goto _iter_begin_4393317264;
					}
					_iter_end_4393317264:;
				}
			}
			_iter_next_4393312240:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4393312240;
		}
		_iter_end_4393312240:;
	}
}



inline void _1c1b18a24_Sema::_method_check_trait_decl(jule::Ptr<_1c196b2a0_Trait>& _144741_t) {
	if (_1da81133a_is_ignore_ident(_144741_t->_field_ident)) {
		this->self->_method_push_err(_144741_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_144741_t),_144741_t->_field_ident,false)) {
		this->self->_method_push_err(_144741_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_144741_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_trait_decl_methods(_144741_t);
}



inline jule::Bool _1c1b18a24_Sema::_method_check_trait_decls(void) {
	jule::Bool _145939_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_4393334928:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> _1c1b18a24_t = *it;
			{
				this->self->_method_check_trait_decl(_1c1b18a24_t);
				if (this->self->_field_errors.len() > 0LL) {
					_145939_ok = false;
					return _145939_ok;
				}
			}
			_iter_next_4393334928:;
			++it;
			goto _iter_begin_4393334928;
		}
		_iter_end_4393334928:;
	}
	_145939_ok = true;
	return _145939_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_trait_impl_methods(jule::Ptr<_1c196b2a0_Trait>& _147148_base,jule::Ptr<_1c1977ee3_Impl>& _147163_ipl) {
	jule::Bool _147177_ok = jule::Bool();
	_147177_ok=true;
	{
		auto &expr = _147163_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4393341280:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> &_1c1b18a24_f = *it;
			{
				if (_147148_base->_method_find_method(_1c1b18a24_f->_field_ident) == nullptr) {
					(*this)._method_push_err(_1c1b18a24_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_147148_base->_field_ident),jule::Any(_1c1b18a24_f->_field_ident)}));
					_147177_ok=false;
				}
			}
			_iter_next_4393341280:;
			++it;
			goto _iter_begin_4393341280;
		}
		_iter_end_4393341280:;
	}
	return _147177_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_impl_to_struct(jule::Ptr<_1db4a7e59_Struct>& _148239_dest,jule::Ptr<_1c1977ee3_Impl>& _148259_ipl) {
	jule::Bool _148273_ok = jule::Bool();
	_148273_ok=true;
	{
		auto &expr = _148259_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4393349056:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_f = *it;
			{
				if ((_148239_dest->_method_find_method(_1c1b18a24_f->_field_ident,_1c1b18a24_f->_field_statically) != nullptr) || (_148239_dest->_method_find_field(_1c1b18a24_f->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1c1b18a24_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_148239_dest->_field_ident),jule::Any(_1c1b18a24_f->_field_ident)}));
					_148273_ok=false;
					goto _iter_next_4393349056;
				}
				if ((_148239_dest->_field_generics.len() > 0LL) && (_1c1b18a24_f->_field_generics.len() > 0LL)) {
					{
						auto &expr = _1c1b18a24_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_4393354992:;
						if (it != expr.end()) {
							jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_fg = *it;
							{
								{
									auto &expr = _148239_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_4393357376:;
									if (it != expr.end()) {
										jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1b18a24_dg = *it;
										{
											if (_1c1b18a24_fg->_field_ident == _1c1b18a24_dg->_field_ident) {
												this->self->_method_push_err(_1c1b18a24_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_148273_ok=false;
											}
										}
										_iter_next_4393357376:;
										++it;
										goto _iter_begin_4393357376;
									}
									_iter_end_4393357376:;
								}
							}
							_iter_next_4393354992:;
							++it;
							goto _iter_begin_4393354992;
						}
						_iter_end_4393354992:;
					}
				}
				this->self->_method_check_directives(_1c1b18a24_f->_field_directives,jule::Any(_1c1b18a24_f));
				_1c1b18a24_f->_field_sema=this->self;
				_1c1b18a24_f->_field_owner=_148239_dest;
				_148239_dest->_field_methods = jule::alloc_for_append(_148239_dest->_field_methods,1);_148239_dest->_field_methods.push(_1c1b18a24_f);
			}
			_iter_next_4393349056:;
			++it;
			goto _iter_begin_4393349056;
		}
		_iter_end_4393349056:;
	}
	{
		auto &expr = _148259_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_4393359232:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1c1b18a24_v = *it;
			{
				
				if ((_148239_dest->_method_find_method(_1c1b18a24_v->_field_ident,true) != nullptr) || (_148239_dest->_method_find_static(_1c1b18a24_v->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1c1b18a24_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_148239_dest->_field_ident),jule::Any(_1c1b18a24_v->_field_ident)}));
					_148273_ok=false;
					goto _iter_next_4393359232;
				}
				this->self->_method_check_var_decl(_1c1b18a24_v,this->self);
				this->self->_method_check_type_var(_1c1b18a24_v,this->self);
				_148239_dest->_field_statics = jule::alloc_for_append(_148239_dest->_field_statics,1);_148239_dest->_field_statics.push(_1c1b18a24_v);
			}
			_iter_next_4393359232:;
			++it;
			goto _iter_begin_4393359232;
		}
		_iter_end_4393359232:;
	}
	return _148273_ok;
}



inline void _1c1b18a24_Sema::_method_impl_trait(jule::Ptr<_1c1977ee3_Impl>& _152735_decl) {
	jule::Ptr<_1c196b2a0_Trait> _152817_base = this->self->_method_find_trait(_152735_decl->_field_base._field_kind);
	if (_152817_base == nullptr) {
		_152817_base=_1a8c0ca10_find_builtin_trait(_152735_decl->_field_base._field_kind);
	}
	if (_152817_base == nullptr) {
		this->self->_method_push_err(_152735_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_152735_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ptr<_1db4a7e59_Struct> _154117_dest = this->self->_method_find_struct(_152735_decl->_field_dest._field_kind,false);
	if (_154117_dest == nullptr) {
		this->self->_method_push_err(_152735_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152735_decl->_field_dest._field_kind)}));
		return;
	}
	if (_154117_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152735_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_152817_base->_field_implemented = jule::alloc_for_append(_152817_base->_field_implemented,1);_152817_base->_field_implemented.push(_154117_dest);
	_154117_dest->_field_implements = jule::alloc_for_append(_154117_dest->_field_implements,1);_154117_dest->_field_implements.push(_152817_base);
	if (_152735_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_152735_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		if ((!(this->self->_method_check_trait_impl_methods(_152817_base,_152735_decl)))) {
			_case_begin_4393384064:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_impl_to_struct(_154117_dest,_152735_decl)))) {
			_case_begin_4393385248:;
			{
				return;
			}
		}
		_match_end_4393382032:;
	}
}



inline void _1c1b18a24_Sema::_method_impl_struct(jule::Ptr<_1c1977ee3_Impl>& _156536_decl) {
	
	jule::Ptr<_1db4a7e59_Struct> _157017_dest = this->self->_method_find_struct(_156536_decl->_field_dest._field_kind,false);
	if (_157017_dest == nullptr) {
		this->self->_method_push_err(_156536_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_156536_decl->_field_dest._field_kind)}));
		return;
	}
	if (_157017_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_156536_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		if ((!(this->self->_method_impl_to_struct(_157017_dest,_156536_decl)))) {
			_case_begin_4393392416:;
			{
				return;
			}
		}
		_match_end_4393397056:;
	}
}



inline void _1c1b18a24_Sema::_method_impl_impl(jule::Ptr<_1c1977ee3_Impl>& _158834_decl) {
	{
		if (_158834_decl->_method_is_trait_impl()) {
			_case_begin_4393399984:;
			{
				this->self->_method_impl_trait(_158834_decl);
			}
		}
		else if (_158834_decl->_method_is_struct_impl()) {
			_case_begin_4393400096:;
			{
				this->self->_method_impl_struct(_158834_decl);
			}
		}
		_match_end_4393399760:;
	}
}



inline void _1c1b18a24_Sema::_method_check_var_decl(jule::Ptr<_1c1b58316_Var>& _159739_decl,jule::Trait<_1a8be79c8_Lookup> _159755_l) {
	if (_1da81133a_is_ignore_ident(_159739_decl->_field_ident)) {
		this->self->_method_push_err(_159739_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_159739_decl->_method_is_type_inferred()) {
		if ((!(_159739_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_159739_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_check_type(_159739_decl->_field_kind,_159755_l);
	}
	if (_159739_decl->_field_constant && _159739_decl->_field_reference) {
		this->self->_method_push_err(_159739_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_159739_decl->_method_is_initialized()))) {
		if (_159739_decl->_field_constant) {
			this->self->_method_push_err(_159739_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>());
		}
		if (_159739_decl->_field_statically) {
			this->self->_method_push_err(_159739_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_159739_decl->_field_reference) {
			this->self->_method_push_err(_159739_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1c1b18a24_Sema::_method_check_global_var_decl(jule::Ptr<_1c1b58316_Var>& _163146_decl) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_163146_decl),_163146_decl->_field_ident,_163146_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_163146_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_163146_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_163146_decl->_field_cpp_linked && _163146_decl->_field_constant) {
		this->self->_method_push_err(_163146_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>());
	}
	if (((!(_163146_decl->_field_cpp_linked)) && (!(_163146_decl->_field_constant))) && (!(_163146_decl->_field_statically))) {
		this->self->_method_push_err(_163146_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_163146_decl->_field_directives,jule::Any(_163146_decl));
	this->self->_method_check_var_decl(_163146_decl,this->self);
}



inline jule::Bool _1c1b18a24_Sema::_method_check_global_decls(void) {
	jule::Bool _165040_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4393432816:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1c1b18a24_decl = *it;
			{
				this->self->_method_check_global_var_decl(_1c1b18a24_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_165040_ok = false;
					return _165040_ok;
				}
			}
			_iter_next_4393432816:;
			++it;
			goto _iter_begin_4393432816;
		}
		_iter_end_4393432816:;
	}
	_165040_ok = true;
	return _165040_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_trait_impl(jule::Ptr<_1db4a7e59_Struct>& _166248_strct,jule::Ptr<_1c196b2a0_Trait>& _166269_trt) {
	jule::Bool _166284_ok = jule::Bool();
	{
		auto &expr = _166269_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_4393437216:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_tf = *it;
			{
				jule::Bool _166421_exist = false;
				jule::Ptr<_1c17e2687_Fn> _166521_sf = _166248_strct->_method_find_method(_1c1b18a24_tf->_field_ident,_1c1b18a24_tf->_field_statically);
				jule::Ptr<_1c17e2687_FnIns> _166617_tf_k = this->self->_method_get_trait_check_fn_kind(_1c1b18a24_tf);
				if (_166521_sf != nullptr) {
					jule::Ptr<_1c17e2687_FnIns> _166825_sf_k = this->self->_method_get_trait_check_fn_kind(_166521_sf);
					_166421_exist=((_166617_tf_k->_field_decl->_field_public == _166825_sf_k->_field_decl->_field_public) && (_166617_tf_k->_field_decl->_field_ident == _166825_sf_k->_field_decl->_field_ident)) && _166617_tf_k->_method_equals(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_166825_sf_k)));
				}
				if (_166421_exist) {
					jule::Ptr<_1da7b8e5d_Directive> _167621_d = _1c1ead281_find_directive(_166521_sf->_field_directives,jule::Str("deprecated", 10));
					if (_167621_d != nullptr) {
						this->self->_method_push_err(_167621_d->_field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_166284_ok=false;
				} else {
					
					jule::Str _168325_s = _166617_tf_k->_method_get_kind_str(true);
					if (_1c1b18a24_tf->_field_public) {
						_168325_s=jule::Str("pub ", 4) + _168325_s;
					}
					this->self->_method_push_err(_166248_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_166269_trt->_field_ident),jule::Any(_168325_s)}));
					_166284_ok=false;
				}
			}
			_iter_next_4393437216:;
			++it;
			goto _iter_begin_4393437216;
		}
		_iter_end_4393437216:;
	}
	return _166284_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_impls(jule::Ptr<_1db4a7e59_Struct>& _169443_s) {
	jule::Bool _169457_ok = jule::Bool();
	_169457_ok=true;
	{
		auto &expr = _169443_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4393458320:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> _1c1b18a24_trt = *it;
			{
				_169457_ok=this->self->_method_check_struct_trait_impl(_169443_s,_1c1b18a24_trt) && _169457_ok;
			}
			_iter_next_4393458320:;
			++it;
			goto _iter_begin_4393458320;
		}
		_iter_end_4393458320:;
	}
	return _169457_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_fields(jule::Ptr<_1db4a7e59_Struct>& _170244_st) {
	jule::Bool _170259_ok = jule::Bool();
	_170259_ok=true;
	jule::Ptr<_1a8ad0a37_TypeChecker> _170517_tc = jule::new_struct<_1a8ad0a37_TypeChecker>(new( std::nothrow ) _1a8ad0a37_TypeChecker(this->self,this->self,jule::new_struct<_1a8ad0a37_Referencer>(new( std::nothrow ) _1a8ad0a37_Referencer(_170244_st->_field_ident,jule::Any(_170244_st),nullptr)),_1da81133a_Token(),_170244_st->_field_generics,jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Bool(),jule::Bool()));
	jule::I64 _171513_n = _170244_st->_field_instances.len();
	{
		auto &expr = _170244_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4393466560:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Field> _1c1b18a24_f = *it;
			{
				_1c1b18a24_f->_field_owner=_170244_st;
				_1c1b18a24_f->_field_kind->_field_kind=_170517_tc->_method_check_decl(_1c1b18a24_f->_field_kind->_field_decl);
				_170259_ok=(_1c1b18a24_f->_field_kind->_field_kind != nullptr) && _170259_ok;
				{
					auto &expr = _170244_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_4393468032:;
					if (it != expr.end()) {
						jule::Ptr<_1db4a7e59_Field> &_1c1b18a24_cf = *it;
						{
							if (_1c1b18a24_f == _1c1b18a24_cf) {
								goto _iter_end_4393468032;
							} else if (_1c1b18a24_f->_field_ident == _1c1b18a24_cf->_field_ident) {
								this->self->_method_push_err(_1c1b18a24_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_170259_ok=false;
							}
						}
						_iter_next_4393468032:;
						++it;
						goto _iter_begin_4393468032;
					}
					_iter_end_4393468032:;
				}
			}
			_iter_next_4393466560:;
			++it;
			goto _iter_begin_4393466560;
		}
		_iter_end_4393466560:;
	}
	if (_170259_ok && (_171513_n != _170244_st->_field_instances.len())) {
		_170517_tc->_field_referencer=nullptr;
		_170244_st->_field_instances=_170244_st->_field_instances.slice(0LL,_171513_n);
		{
			auto &expr = _170244_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_4393467184:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_Field> _1c1b18a24_f = *it;
				{
					_1c1b18a24_f->_field_kind->_field_kind=_170517_tc->_method_check_decl(_1c1b18a24_f->_field_kind->_field_decl);
				}
				_iter_next_4393467184:;
				++it;
				goto _iter_begin_4393467184;
			}
			_iter_end_4393467184:;
		}
	}
	return _170259_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_decl_methods(jule::Ptr<_1db4a7e59_Struct>& _174450_s) {
	jule::Bool _174464_ok = jule::Bool();
	{
		auto &expr = _174450_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4393480256:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1c1b18a24_m)))) {
					_174464_ok = false;
					return _174464_ok;
				}
			}
			_iter_next_4393480256:;
			++it;
			goto _iter_begin_4393480256;
		}
		_iter_end_4393480256:;
	}
	_174464_ok = true;
	return _174464_ok;
}



inline void _1c1b18a24_Sema::_method_check_struct_decl(jule::Ptr<_1db4a7e59_Struct>& _175342_s) {
	if (_1da81133a_is_ignore_ident(_175342_s->_field_ident)) {
		this->self->_method_push_err(_175342_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_175342_s),_175342_s->_field_ident,_175342_s->_field_cpp_linked)) {
		this->self->_method_push_err(_175342_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_175342_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_175342_s->_field_directives,jule::Any(_175342_s));
	_175342_s->_field_sema=this->self;
	{
		if ((!(this->self->_method_check_decl_generics(_175342_s->_field_generics)))) {
			_case_begin_4393491360:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_fields(_175342_s)))) {
			_case_begin_4393491472:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_decl_methods(_175342_s)))) {
			_case_begin_4393491584:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_impls(_175342_s)))) {
			_case_begin_4393491696:;
			{
				return;
			}
		}
		_match_end_4393488688:;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_decls(void) {
	jule::Bool _177340_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4393498256:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c1b18a24_s = *it;
			{
				this->self->_method_check_struct_decl(_1c1b18a24_s);
				if (this->self->_field_errors.len() > 0LL) {
					_177340_ok = false;
					return _177340_ok;
				}
			}
			_iter_next_4393498256:;
			++it;
			goto _iter_begin_4393498256;
		}
		_iter_end_4393498256:;
	}
	_177340_ok = true;
	return _177340_ok;
}



inline void _1c1b18a24_Sema::_method_check_fn_decl(jule::Ptr<_1c17e2687_Fn>& _178638_f) {
	if (_1da81133a_is_ignore_ident(_178638_f->_field_ident)) {
		this->self->_method_push_err(_178638_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_178638_f),_178638_f->_field_ident,_178638_f->_field_cpp_linked)) {
		this->self->_method_push_err(_178638_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_178638_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_178638_f->_field_directives,jule::Any(_178638_f));
	_178638_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_178638_f);
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_decls(void) {
	jule::Bool _180136_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4393512368:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_f = *it;
			{
				this->self->_method_check_fn_decl(_1c1b18a24_f);
				if (this->self->_field_errors.len() > 0LL) {
					_180136_ok = false;
					return _180136_ok;
				}
			}
			_iter_next_4393512368:;
			++it;
			goto _iter_begin_4393512368;
		}
		_iter_end_4393512368:;
	}
	_180136_ok = true;
	return _180136_ok;
}



inline void _1c1b18a24_Sema::_method_push_cycle_error(jule::Ptr<_1db4a7e59_Struct>& _181332_st1,jule::Ptr<_1db4a7e59_Struct>& _181347_st2,jule::Str& _181366_message) {
	
	jule::Str _181613_refers_to = _203741197_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_181332_st1->_field_ident),jule::Any(_181347_st2->_field_ident)}));
	_181366_message=((_1c18c86d5_str_repeat(jule::Str(" ", 1),4LL) + _181613_refers_to) + jule::Str("\n", 1)) + _181366_message;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_cross_cycle(jule::Ptr<_1db4a7e59_Struct>& _182033_st1,jule::Ptr<_1db4a7e59_Struct>& _182048_st2,jule::Str& _182067_message) {
	{
		auto &expr = _182048_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_4393525440:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> &_1c1b18a24_u = *it;
			{
				if (_1c1b18a24_u == _182033_st1) {
					(*this)._method_push_cycle_error(_182048_st2,_1c1b18a24_u,_182067_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_182033_st1,_1c1b18a24_u,_182067_message)))) {
					(*this)._method_push_cycle_error(_182048_st2,_1c1b18a24_u,_182067_message);
					return false;
				}
			}
			_iter_next_4393525440:;
			++it;
			goto _iter_begin_4393525440;
		}
		_iter_end_4393525440:;
	}
	return true;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _183653_derive,jule::Ptr<_1db4a7e59_Struct>& _183667_st1,jule::Ptr<_1a8ad0a37_TypeKind>& _183686_k) {
	jule::Bool _1836102_ok = jule::Bool();
	jule::Ptr<_1db4a7e59_Struct> _183717_st2 = _1a8ad0a37_get_struct_from_kind(_183686_k);
	if (_183717_st2 == nullptr) {
		_1836102_ok = true;
		return _1836102_ok;
	}
	if (_183667_st1 == _183717_st2) {
		(*this)._method_push_err(_183667_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_183653_derive),jule::Any(_183667_st1->_field_ident)}));
		_1836102_ok = false;
		return _1836102_ok;
	}
	jule::Str _184917_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_183667_st1,_183717_st2,_184917_message)))) {
		jule::Str _185221_err_msg = _184917_message;
		_184917_message=jule::Str();
		(*this)._method_push_cycle_error(_183667_st1,_183717_st2,_184917_message);
		_185221_err_msg=_185221_err_msg + _184917_message;
		(*this)._method_push_err(_183667_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_183653_derive),jule::Any(_185221_err_msg)}));
		_1836102_ok = false;
		return _1836102_ok;
	}
	_1836102_ok = true;
	return _1836102_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_1db4a7e59_StructIns> _186352_st) {
	jule::Bool _186370_ok = jule::Bool();
	if ((!(_186352_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_186370_ok = true;
		return _186370_ok;
	}
	{
		auto &expr = _186352_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4393563952:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_FieldIns> _1c1b18a24_f = *it;
			{
				if ((_1c1b18a24_f->_field_kind == nullptr) || (!(_1c1b18a24_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4393563952;
				}
				if ((!(_1c1b18a24_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_186352_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1c1b18a24_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_186370_ok = false;
					return _186370_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_186352_st->_field_decl,_1c1b18a24_f->_field_kind)))) {
					_186370_ok = false;
					return _186370_ok;
				}
			}
			_iter_next_4393563952:;
			++it;
			goto _iter_begin_4393563952;
		}
		_iter_end_4393563952:;
	}
	_186370_ok = true;
	return _186370_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_struct_derive_clone(jule::Ptr<_1db4a7e59_Struct>& _188649_st) {
	jule::Bool _188664_ok = jule::Bool();
	_188664_ok = (*this)._method_check_struct_ins_derive_clone(_188649_st->_method_instance());
	return _188664_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_file_derives(void) {
	jule::Bool _189039_ok = jule::Bool();
	{
		auto &expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4393577008:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c1b18a24_st = *it;
			{
				_189039_ok=(*this)._method_check_struct_derive_clone(_1c1b18a24_st);
				if ((!(_189039_ok))) {
					goto _iter_end_4393577008;
				}
			}
			_iter_next_4393577008:;
			++it;
			goto _iter_begin_4393577008;
		}
		_iter_end_4393577008:;
	}
	return _189039_ok;
}



inline void _1c1b18a24_Sema::_method_check_package_derives(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4393580224:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				(*this)._method_set_current_file(_1c1b18a24_f);
				jule::Bool _190517_ok = (*this)._method_check_file_derives();
				if ((!(_190517_ok))) {
					return;
				}
			}
			_iter_next_4393580224:;
			++it;
			goto _iter_begin_4393580224;
		}
		_iter_end_4393580224:;
	}
}



inline void _1c1b18a24_Sema::_method_check_package_decls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393584912:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4393584912:;
			++it;
			goto _iter_begin_4393584912;
		}
		_iter_end_4393584912:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393587968:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4393587968:;
			++it;
			goto _iter_begin_4393587968;
		}
		_iter_end_4393587968:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393590656:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4393590656:;
			++it;
			goto _iter_begin_4393590656;
		}
		_iter_end_4393590656:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393593296:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4393593296:;
			++it;
			goto _iter_begin_4393593296;
		}
		_iter_end_4393593296:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393595872:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4393595872:;
			++it;
			goto _iter_begin_4393595872;
		}
		_iter_end_4393595872:;
	}
	this->self->_method_check_package_derives();
}



inline void _1c1b18a24_Sema::_method_check_data_for_type_inference(jule::Ptr<_1c1ead281_Data>& _195349_d,_1da81133a_Token& _195360_err_token) {
	{
		if (_195349_d->_method_is_nil()) {
			_case_begin_4393601792:;
			{
				(*this)._method_push_err(_195360_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_195349_d->_method_is_void()) {
			_case_begin_4393601904:;
			{
				(*this)._method_push_err(_195360_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_195349_d->_field_kind->_field_variadic) {
			_case_begin_4393602016:;
			{
				(*this)._method_push_err(_195360_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_4393601584:;
	}
}



inline void _1c1b18a24_Sema::_method_check_var(jule::Ptr<_1c1b58316_Var>& _196634_v) {
	if (_196634_v->_field_cpp_linked) {
		return;
	}
	if (_196634_v->_method_is_type_inferred()) {
		_196634_v->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_196634_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_196634_v->_field_value->_field_data,_196634_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ptr<_1a8ad0a37_Arr> _197821_arr = _196634_v->_field_kind->_field_kind->_method_arr();
		if (_197821_arr != nullptr) {
			if (_197821_arr->_field_auto) {
				jule::Ptr<_1a8ad0a37_Arr> _198125_data_arr = _196634_v->_field_value->_field_data->_field_kind->_method_arr();
				if (_198125_data_arr != nullptr) {
					_197821_arr->_field_n=_198125_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_196634_v->_field_reference,_196634_v->_field_kind->_field_kind,_196634_v->_field_value->_field_data,_196634_v->_field_value->_field_expr->_field_token);
	}
	if (_196634_v->_field_reference && (!(_1a8ad0a37_is_valid_for_ref(_196634_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_196634_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_196634_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_196634_v->_field_mutable,_196634_v->_field_reference,_196634_v->_field_kind->_field_kind,_196634_v->_field_value->_field_data,_196634_v->_field_value->_field_expr->_field_token);
	if (_196634_v->_field_constant) {
		if ((!(_196634_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_196634_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_196634_v->_field_value->_field_data->_field_constant=nullptr;
	}
	if (_196634_v->_field_kind->_field_kind->_method_tup() != nullptr) {
		_196634_v->_field_kind->_field_kind=nullptr;
	}
}



inline void _1c1b18a24_Sema::_method_check_type_var(jule::Ptr<_1c1b58316_Var>& _201639_decl,jule::Trait<_1a8be79c8_Lookup> _201655_l) {
	if (_201639_decl->_field_cpp_linked || (!(_201639_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ptr<_1c1ead281_Eval> _202117_eval = (((_201639_decl->_field_kind != nullptr)) ? (this->self->_method_evalpd(_201655_l,_201639_decl->_field_kind->_field_kind,_201639_decl)) : (this->self->_method_evalpd(_201655_l,nullptr,_201639_decl)));
	_202117_eval->_field_immutable=(!(_201639_decl->_field_mutable));
	_201639_decl->_field_value->_field_data=_202117_eval->_method_eval_expr(_201639_decl->_field_value->_field_expr);
	if (_201639_decl->_field_value->_field_data == nullptr) {
		return;
	}
	this->self->_method_check_var(_201639_decl);
}



inline void _1c1b18a24_Sema::_method_check_global_types(void) {
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4393637408:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1c1b18a24_decl = *it;
			{
				if ((_1c1b18a24_decl->_method_is_initialized() && (_1c1b18a24_decl->_field_value->_field_data == nullptr)) || (_1c1b18a24_decl->_method_is_type_inferred() && (_1c1b18a24_decl->_field_kind->_field_kind == nullptr))) {
					this->self->_method_check_type_var(_1c1b18a24_decl,this->self);
				}
			}
			_iter_next_4393637408:;
			++it;
			goto _iter_begin_4393637408;
		}
		_iter_end_4393637408:;
	}
}



inline void _1c1b18a24_Sema::_method_check_type_method(jule::Ptr<_1db4a7e59_StructIns>& _204542_strct,jule::Ptr<_1c17e2687_Fn>& _204566_f) {
	if (_204566_f->_field_cpp_linked) {
		return;
	}
	if (_204566_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_204566_f->_field_instances.len() == 0LL) {
		jule::Ptr<_1c17e2687_FnIns> _205621_ins = _204566_f->_method_instance();
		_205621_ins->_field_owner=_204542_strct;
		_204566_f->_method_append_instance(_205621_ins);
		this->self->_method_reload_fn_ins_types(_205621_ins);
		_205621_ins->_field_reloaded=true;
	}
	{
		auto &expr = _204566_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4393646272:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_FnIns> _1c1b18a24_ins = *it;
			{
				if (_1c1b18a24_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4393646272;
				}
				this->self->_method_check_fn_ins(_1c1b18a24_ins);
			}
			_iter_next_4393646272:;
			++it;
			goto _iter_begin_4393646272;
		}
		_iter_end_4393646272:;
	}
}



inline void _1c1b18a24_Sema::_method_check_type_struct(jule::Ptr<_1db4a7e59_Struct>& _207242_strct) {
	if (_207242_strct->_field_cpp_linked) {
		return;
	}
	if (_207242_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_207242_strct->_field_instances.len() == 0LL) {
		jule::Ptr<_1db4a7e59_StructIns> _208321_ins = _207242_strct->_method_instance();
		_208321_ins->_field_checked=true;
		_207242_strct->_method_append_instance(_208321_ins);
	}
	{
		auto &expr = _207242_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_4393659248:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_StructIns> _1c1b18a24_ins = *it;
			{
				{
					auto &expr = _1c1b18a24_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_4393660256:;
					if (it != expr.end()) {
						jule::Ptr<_1c17e2687_Fn> _1c1b18a24_f = *it;
						{
							this->self->_method_check_type_method(_1c1b18a24_ins,_1c1b18a24_f);
						}
						_iter_next_4393660256:;
						++it;
						goto _iter_begin_4393660256;
					}
					_iter_end_4393660256:;
				}
			}
			_iter_next_4393659248:;
			++it;
			goto _iter_begin_4393659248;
		}
		_iter_end_4393659248:;
	}
}



inline void _1c1b18a24_Sema::_method_check_struct_types(void) {
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4393661616:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c1b18a24_s = *it;
			{
				this->self->_method_check_type_struct(_1c1b18a24_s);
			}
			_iter_next_4393661616:;
			++it;
			goto _iter_begin_4393661616;
		}
		_iter_end_4393661616:;
	}
}



inline void _1c1b18a24_Sema::_method_check_rets(jule::Ptr<_1c17e2687_FnIns>& _210134_f) {
	if (_210134_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _210613_ok = _1c1b18a24_has_ret(_210134_f->_field_scope);
	if ((!(_210613_ok))) {
		(*this)._method_push_err(_210134_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1c1b18a24_Sema::_method_check_fn_ins_sc(jule::Ptr<_1c17e2687_FnIns>& _211239_f,jule::Ptr<_1c197a248_ScopeChecker>& _211255_sc) {
	if (_211239_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _211717_vars = _1c1b18a24_build_ret_vars(_211239_f);
	_211255_sc->_field_table->_field_vars=jule::append(_211255_sc->_field_table->_field_vars,_211717_vars);
	_211255_sc->_field_table->_field_vars=jule::append(_211255_sc->_field_table->_field_vars,_1c1b18a24_build_param_vars(_211239_f));
	_211255_sc->_field_table->_field_type_aliases=jule::append(_211255_sc->_field_table->_field_type_aliases,_1c1b18a24_build_generic_type_aliases(_211239_f));
	_211255_sc->_method_check(_211239_f->_field_decl->_field_scope,_211239_f->_field_scope);
	if (_211717_vars.len() > 0LL) {
		jule::Slice<jule::Any> _212721_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_211239_f->_field_scope->_field_stmts.len() + _211717_vars.len()));
		{
			auto &expr = _211717_vars;
			auto it = expr.begin();
			_iter_begin_4393681216:;
			if (it != expr.end()) {
				jule::Ptr<_1c1b58316_Var> _1c1b18a24_v = *it;
				{
					_212721_stmts.push(jule::Any(_1c1b18a24_v));
				}
				_iter_next_4393681216:;
				++it;
				goto _iter_begin_4393681216;
			}
			_iter_end_4393681216:;
		}
		_212721_stmts=jule::append(_212721_stmts,_211239_f->_field_scope->_field_stmts);
		_211239_f->_field_scope->_field_stmts=_212721_stmts;
	}
	(*this)._method_check_rets(_211239_f);
}



inline void _1c1b18a24_Sema::_method_check_fn_ins(jule::Ptr<_1c17e2687_FnIns>& _213937_f) {
	if (_213937_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ptr<_1c2020e2b_SymbolTable> _214417_old = _213937_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_213937_f->_field_decl->_field_sema->_method_set_current_file(_214417_old);
	});
	jule::Ptr<_1c2020e2b_SymbolTable> _214617_file = _1c1b18a24_find_file(_213937_f->_field_decl->_field_sema->_field_files,_213937_f->_field_decl->_field_token._field_file);
	if (_214617_file != nullptr) {
		_213937_f->_field_decl->_field_sema->_method_set_current_file(_214617_file);
	}
	jule::Ptr<_1c197a248_ScopeChecker> _215117_sc = _1c197a248_new_scope_checker(_213937_f->_field_decl->_field_sema,_213937_f);
	this->self->_method_check_fn_ins_sc(_213937_f,_215117_sc);
	if (_213937_f->_field_decl->_field_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_213937_f->_field_decl->_field_sema->_field_errors);
		_213937_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _1c1b18a24_Sema::_method_check_type_fn(jule::Ptr<_1c17e2687_Fn>& _216038_f) {
	if (_216038_f->_field_cpp_linked) {
		return;
	}
	if (_216038_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &expr = _216038_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4393697424:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_FnIns> _1c1b18a24_ins = *it;
			{
				this->self->_method_check_fn_ins(_1c1b18a24_ins);
			}
			_iter_next_4393697424:;
			++it;
			goto _iter_begin_4393697424;
		}
		_iter_end_4393697424:;
	}
}



inline void _1c1b18a24_Sema::_method_precheck_type_fn(jule::Ptr<_1c17e2687_Fn>& _217541_f) {
	if (_217541_f->_field_cpp_linked) {
		return;
	}
	if (_217541_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_217541_f->_field_instances.len() == 0LL) {
		jule::Ptr<_1c17e2687_FnIns> _218621_ins = _217541_f->_method_instance();
		_217541_f->_field_instances = jule::alloc_for_append(_217541_f->_field_instances,1);_217541_f->_field_instances.push(_218621_ins);
		this->self->_method_reload_fn_ins_types(_218621_ins);
		_218621_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1c1b18a24_Sema::_method_precheck_fn_types(void) {
	jule::Bool _219439_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4393709312:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_decl = *it;
			{
				this->self->_method_precheck_type_fn(_1c1b18a24_decl);
			}
			_iter_next_4393709312:;
			++it;
			goto _iter_begin_4393709312;
		}
		_iter_end_4393709312:;
	}
	_219439_ok = true;
	return _219439_ok;
}



inline jule::Bool _1c1b18a24_Sema::_method_check_fn_types(void) {
	jule::Bool _220236_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4393713408:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_decl = *it;
			{
				this->self->_method_check_type_fn(_1c1b18a24_decl);
			}
			_iter_next_4393713408:;
			++it;
			goto _iter_begin_4393713408;
		}
		_iter_end_4393713408:;
	}
	_220236_ok = true;
	return _220236_ok;
}



inline void _1c1b18a24_Sema::_method_check_package_types(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393716512:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4393716512:;
			++it;
			goto _iter_begin_4393716512;
		}
		_iter_end_4393716512:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393717088:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4393717088:;
			++it;
			goto _iter_begin_4393717088;
		}
		_iter_end_4393717088:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393719680:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4393719680:;
			++it;
			goto _iter_begin_4393719680;
		}
		_iter_end_4393719680:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393721792:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_f = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4393721792:;
			++it;
			goto _iter_begin_4393721792;
		}
		_iter_end_4393721792:;
	}
}



inline void _1c1b18a24_Sema::_method_set_file_sema_fields(void) {
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4393727184:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c1b18a24_f = *it;
			{
				_1c1b18a24_f->_field_sema=this->self;
			}
			_iter_next_4393727184:;
			++it;
			goto _iter_begin_4393727184;
		}
		_iter_end_4393727184:;
	}
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4393728336:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c1b18a24_st = *it;
			{
				_1c1b18a24_st->_field_sema=this->self;
			}
			_iter_next_4393728336:;
			++it;
			goto _iter_begin_4393728336;
		}
		_iter_end_4393728336:;
	}
}



inline void _1c1b18a24_Sema::_method_set_sema_fields(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4393730800:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_file = *it;
			{
				this->self->_method_set_current_file(_1c1b18a24_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4393730800:;
			++it;
			goto _iter_begin_4393730800;
		}
		_iter_end_4393730800:;
	}
}



inline void _1c1b18a24_Sema::_method_check(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _225030_files) {
	this->self->_field_files=_225030_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b18a24_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b58316_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b58316_Var> _1c1d617a5_RangeChecker::_method_build_var(jule::Ptr<_1da7b8e5d_VarDecl>& _90129_decl) {
	jule::Ptr<_1c1b58316_Var> _90217_v = _1c18c86d5_build_var(_90129_decl);
	return _90217_v;
}



inline void _1c1d617a5_RangeChecker::_method_set_size_key(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))))));
	{
		auto &_match_expr{ (*this)._field_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4394135312:;
			{
				(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_1c1b58316_IterRelation>(new( std::nothrow ) _1c1b58316_IterRelation((*this)._field_d->_field_model.operator jule::Ptr<_1c1b58316_Var>()));
			}
		}
		_match_end_4394137392:;
	}
}



inline void _1c1d617a5_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_1c1ead281_Data>& _93249_d,jule::Ptr<_1c1b58316_Var>& _93260_key,jule::Ptr<_1a8ad0a37_TypeKind>& _93276_k) {
	jule::Bool _93317__mut = _93260_key->_field_mutable;
	if (_93317__mut && (!(_93276_k->_method_mutable()))) {
		_93317__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_93317__mut,_93260_key->_field_reference,_93260_key->_field_kind->_field_kind,_93249_d,(*this)._field_rang->_field_in_token);
}



inline void _1c1d617a5_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1a8ad0a37_Slc> _95117_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_95117_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_95117_slc->_field_elem);
}



inline void _1c1d617a5_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1a8ad0a37_Arr> _96417_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_96417_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_96417_arr->_field_elem);
}



inline void _1c1d617a5_RangeChecker::_method_check_map_key_a(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ptr<_1a8ad0a37_Map> _97617_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_97617_m->_field_key));
	jule::Ptr<_1c1ead281_Data> _98017_d = jule::new_ptr<_1c1ead281_Data>((*((*this)._field_d)));
	_98017_d->_field_kind=_97617_m->_field_key;
	(*this)._method_check_range_expr_validity(_98017_d,(*this)._field_kind->_field_key_a,_97617_m->_field_key);
}



inline void _1c1d617a5_RangeChecker::_method_check_map_key_b(void) {
	if (((*this)._field_rang->_field_key_b == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_1a8ad0a37_Map> _99117_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_99117_m->_field_val));
	jule::Ptr<_1c1ead281_Data> _99517_d = jule::new_ptr<_1c1ead281_Data>((*((*this)._field_d)));
	_99517_d->_field_kind=_99117_m->_field_val;
	(*this)._method_check_range_expr_validity(_99517_d,(*this)._field_kind->_field_key_b,_99117_m->_field_val);
}



inline void _1c1d617a5_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1c1d617a5_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _1da81133a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1c1d617a5_RangeChecker::_method_check(void) {
	{
		if ((*this)._field_d->_field_kind->_field_variadic) {
			_case_begin_4394192112:;
		}
		else if ((*this)._field_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_4394193264:;
			{
				(*this)._method_check_slice();
				return true;
			}
		}
		else if ((*this)._field_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_4394193360:;
			{
				(*this)._method_check_array();
				return true;
			}
		}
		else if ((*this)._field_d->_field_kind->_method_map() != nullptr) {
			_case_begin_4394191744:;
			{
				(*this)._method_check_map();
				return true;
			}
		}
		else {
			_case_begin_4394189184:;
			{
				jule::Ptr<_1a8ad0a37_Prim> _103817_prim = (*this)._field_d->_field_kind->_method_prim();
				if ((_103817_prim != nullptr) && _103817_prim->_method_is_str()) {
					(*this)._method_check_str();
					return true;
				}
			}
		}
		_match_end_4394189040:;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c2020e2b_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4394255648:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c2020e2b_pkg = *it;
			{
				if (_1c2020e2b_pkg->_field_ident == _2535_ident) {
					return _1c2020e2b_pkg;
				}
			}
			_iter_next_4394255648:;
			++it;
			goto _iter_begin_4394255648;
		}
		_iter_end_4394255648:;
	}
	return nullptr;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c2020e2b_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4394259440:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c2020e2b_pkg = *it;
			{
				if (_3737_selector(_1c2020e2b_pkg)) {
					return _1c2020e2b_pkg;
				}
			}
			_iter_next_4394259440:;
			++it;
			goto _iter_begin_4394259440;
		}
		_iter_end_4394259440:;
	}
	return nullptr;
}



inline jule::Ptr<_1c1b58316_Var> _1c2020e2b_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c2020e2b_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1db4a7e59_Struct> _1c2020e2b_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4394267712:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c2020e2b_s = *it;
			{
				if ((_1c2020e2b_s->_field_ident == _6434_ident) && (_1c2020e2b_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1c2020e2b_s;
				}
			}
			_iter_next_4394267712:;
			++it;
			goto _iter_begin_4394267712;
		}
		_iter_end_4394267712:;
	}
	return nullptr;
}



inline jule::Ptr<_1c17e2687_Fn> _1c2020e2b_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4394271472:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c2020e2b_f = *it;
			{
				if ((_1c2020e2b_f->_field_ident == _7530_ident) && (_1c2020e2b_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1c2020e2b_f;
				}
			}
			_iter_next_4394271472:;
			++it;
			goto _iter_begin_4394271472;
		}
		_iter_end_4394271472:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196b2a0_Trait> _1c2020e2b_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4394273408:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> _1c2020e2b_t = *it;
			{
				if (_1c2020e2b_t->_field_ident == _8633_ident) {
					return _1c2020e2b_t;
				}
			}
			_iter_next_4394273408:;
			++it;
			goto _iter_begin_4394273408;
		}
		_iter_end_4394273408:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196c834_Enum> _1c2020e2b_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4394276176:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_Enum> _1c2020e2b_e = *it;
			{
				if (_1c2020e2b_e->_field_ident == _9732_ident) {
					return _1c2020e2b_e;
				}
			}
			_iter_next_4394276176:;
			++it;
			goto _iter_begin_4394276176;
		}
		_iter_end_4394276176:;
	}
	return nullptr;
}



inline jule::Ptr<_1c1b58316_Var> _1c2020e2b_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_1c1b58316_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4394283488:;
		}
		_iter_end_4394283488:;
	} else {
		{
			auto &expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_4394282016:;
			if (it != expr.end()) {
				jule::Ptr<_1c1b58316_Var> _1c2020e2b_v = *it;
				{
					if ((_1c2020e2b_v->_field_ident == _10829_ident) && (_1c2020e2b_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1c2020e2b_v;
					}
				}
				_iter_next_4394282016:;
				++it;
				goto _iter_begin_4394282016;
			}
			_iter_end_4394282016:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c2020e2b_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_1a8ad0a37_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4394292080:;
		}
		_iter_end_4394292080:;
	} else {
		{
			auto &expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_4394290768:;
			if (it != expr.end()) {
				jule::Ptr<_1a8ad0a37_TypeAlias> _1c2020e2b_ta = *it;
				{
					if ((_1c2020e2b_ta->_field_ident == _12736_ident) && (_1c2020e2b_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1c2020e2b_ta;
					}
				}
				_iter_next_4394290768:;
				++it;
				goto _iter_begin_4394290768;
			}
			_iter_end_4394290768:;
		}
	}
	return nullptr;
}



inline jule::Any _1c2020e2b_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4394292480:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1c2020e2b_v = *it;
			{
				if ((_1c2020e2b_v->_field_ident == _14831_ident) && (_1c2020e2b_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1c2020e2b_v);
				}
			}
			_iter_next_4394292480:;
			++it;
			goto _iter_begin_4394292480;
		}
		_iter_end_4394292480:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4394300656:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeAlias> _1c2020e2b_ta = *it;
			{
				if ((_1c2020e2b_ta->_field_ident == _14831_ident) && (_1c2020e2b_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1c2020e2b_ta);
				}
			}
			_iter_next_4394300656:;
			++it;
			goto _iter_begin_4394300656;
		}
		_iter_end_4394300656:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4394302688:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1c2020e2b_s = *it;
			{
				if ((_1c2020e2b_s->_field_ident == _14831_ident) && (_1c2020e2b_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1c2020e2b_s);
				}
			}
			_iter_next_4394302688:;
			++it;
			goto _iter_begin_4394302688;
		}
		_iter_end_4394302688:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4394304784:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c2020e2b_f = *it;
			{
				if ((_1c2020e2b_f->_field_ident == _14831_ident) && (_1c2020e2b_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1c2020e2b_f);
				}
			}
			_iter_next_4394304784:;
			++it;
			goto _iter_begin_4394304784;
		}
		_iter_end_4394304784:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4394306112:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> _1c2020e2b_t = *it;
			{
				if (_1c2020e2b_t->_field_ident == _14831_ident) {
					return jule::Any(_1c2020e2b_t);
				}
			}
			_iter_next_4394306112:;
			++it;
			goto _iter_begin_4394306112;
		}
		_iter_end_4394306112:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4394309856:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_Enum> _1c2020e2b_e = *it;
			{
				if (_1c2020e2b_e->_field_ident == _14831_ident) {
					return jule::Any(_1c2020e2b_e);
				}
			}
			_iter_next_4394309856:;
			++it;
			goto _iter_begin_4394309856;
		}
		_iter_end_4394309856:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1c2020e2b_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4394313232:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> &_1c2020e2b_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_1c2020e2b_v) != _19534_itself) && (_1c2020e2b_v->_field_ident == _19551_ident)) && (_1c2020e2b_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4394313232:;
			++it;
			goto _iter_begin_4394313232;
		}
		_iter_end_4394313232:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4394316144:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeAlias> &_1c2020e2b_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_1c2020e2b_ta) != _19534_itself) && (_1c2020e2b_ta->_field_ident == _19551_ident)) && (_1c2020e2b_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4394316144:;
			++it;
			goto _iter_begin_4394316144;
		}
		_iter_end_4394316144:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4394315776:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> &_1c2020e2b_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_1c2020e2b_s) != _19534_itself) && (_1c2020e2b_s->_field_ident == _19551_ident)) && (_1c2020e2b_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4394315776:;
			++it;
			goto _iter_begin_4394315776;
		}
		_iter_end_4394315776:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4394313488:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> &_1c2020e2b_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_1c2020e2b_f) != _19534_itself) && (_1c2020e2b_f->_field_ident == _19551_ident)) && (_1c2020e2b_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4394313488:;
			++it;
			goto _iter_begin_4394313488;
		}
		_iter_end_4394313488:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4394324496:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> &_1c2020e2b_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_1c2020e2b_t) != _19534_itself) && (_1c2020e2b_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4394324496:;
			++it;
			goto _iter_begin_4394324496;
		}
		_iter_end_4394324496:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4394325632:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_Enum> &_1c2020e2b_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_1c2020e2b_e) != _19534_itself) && (_1c2020e2b_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4394325632:;
			++it;
			goto _iter_begin_4394325632;
		}
		_iter_end_4394325632:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c2020e2b_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1ead281_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1c1ead281_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1c1ead281_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}



inline jule::Bool _1c1ead281_Data::_method_good_operand(jule::Ptr<_1c1ead281_Data>& _28336_other) {
	return (((_28336_other->_field_kind->_method_prim() == nullptr) || (!(_28336_other->_field_kind->_method_prim()->_method_is_any()))) && (_28336_other->_field_kind->_method_trt() == nullptr)) && (!((*this)._field_kind->_method_is_nil()));
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1ead281_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1ead281_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1c1ead281_Eval::_method_push_err(_1da81133a_Token _30927_token,jule::Str _30941_fmt,jule::Slice<jule::Any> _30954_args) {
	(*this)._field_s->_method_push_err(_30927_token,_30941_fmt,_30954_args);
}



inline void _1c1ead281_Eval::_method_push_suggestion(jule::Str _31434_fmt,jule::Slice<jule::Any> _31447_args) {
	(*this)._field_s->_method_push_suggestion(_31434_fmt,_31447_args);
}



inline void _1c1ead281_Eval::_method_allow_builtin(void) {
	(*this)._field_dis_builtin=false;
}



inline void _1c1ead281_Eval::_method_disallow_builtin(void) {
	(*this)._field_dis_builtin=true;
}



inline jule::Bool _1c1ead281_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1c1ead281_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c1b18a24_Sema>>()) {
			_case_begin_4394349376:;
			{
				return true;
			}
		}
		else {
			_case_begin_4394347488:;
			{
				return false;
			}
		}
		_match_end_4394347680:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_nil(void) {
	jule::Ptr<_1a8d46165_Const> _33617_constant = _1a8d46165_Const::_static_method_new_nil();
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_33617_constant),false,_33617_constant));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_str(jule::Ptr<_1da7b8e5d_LitExpr>& _34723_l) {
	jule::Str _34817_s = _34723_l->_field_value.slice(1LL,_34723_l->_field_value.len() - 1LL);
	if (_1da81133a_is_raw_str(_34723_l->_field_value)) {
		_34817_s=_1a8e7e6ee_to_raw_str(static_cast<jule::Slice<jule::U8>>(_34817_s));
	} else {
		_34817_s=_1a8e7e6ee_to_str(static_cast<jule::Slice<jule::U8>>(_34817_s));
	}
	jule::Ptr<_1a8d46165_Const> _35417_constant = _1a8d46165_Const::_static_method_new_str(_34817_s);
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_35417_constant),false,_35417_constant));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_bool(jule::Ptr<_1da7b8e5d_LitExpr>& _36824_l) {
	jule::Ptr<_1a8d46165_Const> _36917_constant = _1a8d46165_Const::_static_method_new_bool(_36824_l->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_36917_constant),false,_36917_constant));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_rune(jule::Ptr<_1da7b8e5d_LitExpr>& _38224_l) {
	
	
	jule::Str _38613_lt = _38224_l->_field_value.slice(1LL,_38224_l->_field_value.len() - 1LL);
	jule::I32 _38713_r = _1a8e7e6ee_to_rune(static_cast<jule::Slice<jule::U8>>(_38613_lt));
	jule::Ptr<_1c1ead281_Data> _38817_data = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,_1a8d46165_Const::_static_method_new_i64(static_cast<jule::I64>(_38713_r))));
	jule::Bool _39513_is_ascii = _1a8e7e6ee_is_ascii(_38713_r);
	if (_39513_is_ascii) {
		_38817_data->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u8", 2))));
	} else {
		_38817_data->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i32", 3))));
	}
	_38817_data->_field_model=jule::Any(jule::new_struct<_1c19727a1_RuneExprModel>(new( std::nothrow ) _1c19727a1_RuneExprModel(_38713_r)));
	_38817_data->_field_is_rune=true;
	return _38817_data;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_float(jule::Ptr<_1da7b8e5d_LitExpr>& _41125_l) {
	
	jule::F64 _41414_f;
	std::tie(_41414_f,std::ignore) = _1d9e31c58_parse_float(_41125_l->_field_value,64LL);
	jule::Ptr<_1a8d46165_Const> _41517_constant = _1a8d46165_Const::_static_method_new_f64(_41414_f);
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_41517_constant),false,_41517_constant));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_int(jule::Ptr<_1da7b8e5d_LitExpr>& _42927_l) {
	
	jule::Str _43217_lit = _42927_l->_field_value;
	jule::Int _43317_base = 0LL;
	{
		if (_43217_lit.has_prefix(jule::Str("0x", 2))) {
			_case_begin_4394391568:;
			{
				_43217_lit=_43217_lit.slice(2LL);
				_43317_base=16LL;
			}
		}
		else if (_43217_lit.has_prefix(jule::Str("0b", 2))) {
			_case_begin_4394391904:;
			{
				_43217_lit=_43217_lit.slice(2LL);
				_43317_base=2LL;
			}
		}
		else if (_43217_lit.has_prefix(jule::Str("0o", 2))) {
			_case_begin_4394391072:;
			{
				_43217_lit=_43217_lit.slice(2LL);
				_43317_base=8LL;
			}
		}
		else if ((_43217_lit[0LL] == '0') && (_43217_lit.len() > 1LL)) {
			_case_begin_4394391168:;
			{
				_43217_lit=_43217_lit.slice(1LL);
				_43317_base=8LL;
			}
		}
		else {
			_case_begin_4394390768:;
			{
				_43317_base=10LL;
			}
		}
		_match_end_4394390672:;
	}
	jule::Ptr<_1c1ead281_Data> _45617_d = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a8d46165_Const>()));
	jule::Any _46217_value = jule::Any(nullptr);
	jule::I64 _46314_sig;
	jule::Int _46319_err;
	std::tie(_46314_sig,_46319_err) = _20385580b_parse_int(_43217_lit,_43317_base,64LL);
	if (_46319_err == 0LLU) {
		_46217_value=jule::Any(_46314_sig);
		_45617_d->_field_constant=_1a8d46165_Const::_static_method_new_i64(_46314_sig);
	} else {
		jule::U64 _46818_unsig;
		jule::Int _46825_err;
		std::tie(_46818_unsig,_46825_err) = _20385580b_parse_uint(_43217_lit,_43317_base,64LL);
		if (_46825_err != 0LLU) {
			(*this)._method_push_err(_42927_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
		}
		_45617_d->_field_constant=_1a8d46165_Const::_static_method_new_u64(_46818_unsig);
		_46217_value=jule::Any(_46818_unsig);
	}
	_45617_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(_1c1ead281_kind_by_bitsize(_46217_value))));
	_1c1ead281_normalize_bitsize(_45617_d);
	_45617_d->_field_model=jule::Any(_45617_d->_field_constant);
	return _45617_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_lit_num(jule::Ptr<_1da7b8e5d_LitExpr>& _48727_l) {
	{
		if (_1da81133a_is_float(_48727_l->_field_value)) {
			_case_begin_4394417760:;
			{
				return (*this)._method_lit_float(_48727_l);
			}
		}
		else {
			_case_begin_4394415776:;
			{
				return (*this)._method_lit_int(_48727_l);
			}
		}
		_match_end_4394415600:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_lit(jule::Ptr<_1da7b8e5d_LitExpr> _49427_lit) {
	{
		if (_49427_lit->_method_is_nil()) {
			_case_begin_4394422512:;
			{
				return (*this)._method_lit_nil();
			}
		}
		else if (_1da81133a_is_str(_49427_lit->_field_value)) {
			_case_begin_4394422608:;
			{
				return (*this)._method_lit_str(_49427_lit);
			}
		}
		else if (_1da81133a_is_bool(_49427_lit->_field_value)) {
			_case_begin_4394421952:;
			{
				return (*this)._method_lit_bool(_49427_lit);
			}
		}
		else if (_1da81133a_is_rune(_49427_lit->_field_value)) {
			_case_begin_4394422048:;
			{
				return (*this)._method_lit_rune(_49427_lit);
			}
		}
		else if (_1da81133a_is_num(_49427_lit->_field_value)) {
			_case_begin_4394422144:;
			{
				return (*this)._method_lit_num(_49427_lit);
			}
		}
		else {
			_case_begin_4394420944:;
			{
				return nullptr;
			}
		}
		_match_end_4394420768:;
	}
}



inline jule::Any _1c1ead281_Eval::_method_find_builtins(jule::Str _50532_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c1b398be_ImportInfo>>()) {
			_case_begin_4394430784:;
			{
				jule::Any _50821_def = _1c1ead281_find_builtins_import(_50532_ident,(*this)._field_lookup.operator jule::Ptr<_1c1b398be_ImportInfo>());
				if (_50821_def != nullptr) {
					return _50821_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b18a24_Sema>>()) {
			_case_begin_4394431296:;
			{
				jule::Any _51421_def = _1c1ead281_find_builtins_sema(_50532_ident,(*this)._field_lookup.operator jule::Ptr<_1c1b18a24_Sema>());
				if (_51421_def != nullptr) {
					return _51421_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394431392:;
			{
				jule::Any _52021_def = _1c1ead281_find_builtins_sema(_50532_ident,(*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_field_s);
				if (_52021_def != nullptr) {
					return _52021_def;
				}
			}
		}
		_match_end_4394430880:;
	}
	return ((jule::Any((*this)._field_dis_builtin)) ? (jule::Any(nullptr)) : (_1a8c0ca10_find_builtin_def(_50532_ident)));
}



inline jule::Any _1c1ead281_Eval::_method_get_def(jule::Str _52926_ident,jule::Bool _52938_cpp_linked) {
	if ((!(_52938_cpp_linked))) {
		jule::Ptr<_1c196c834_Enum> _53121_enm = (*this)._field_lookup.get()._method_find_enum(_52926_ident);
		if (_53121_enm != nullptr) {
			return jule::Any(_53121_enm);
		}
	}
	jule::Ptr<_1c1b58316_Var> _53717_v = (*this)._field_lookup.get()._method_find_var(_52926_ident,_52938_cpp_linked);
	if (_53717_v != nullptr) {
		return jule::Any(_53717_v);
	}
	jule::Ptr<_1c17e2687_Fn> _54217_f = (*this)._field_lookup.get()._method_find_fn(_52926_ident,_52938_cpp_linked);
	if (_54217_f != nullptr) {
		return jule::Any(_54217_f);
	}
	jule::Ptr<_1db4a7e59_Struct> _54717_s = (*this)._field_lookup.get()._method_find_struct(_52926_ident,_52938_cpp_linked);
	if (_54717_s != nullptr) {
		return jule::Any(_54717_s);
	}
	jule::Ptr<_1a8ad0a37_TypeAlias> _55217_ta = (*this)._field_lookup.get()._method_find_type_alias(_52926_ident,_52938_cpp_linked);
	if (_55217_ta != nullptr) {
		return jule::Any(_55217_ta);
	}
	return (*this)._method_find_builtins(_52926_ident);
}



inline void _1c1ead281_Eval::_method_push_reference(jule::Ptr<_1c18c86d5_ReferenceStack>& _56038_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394464224:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _56321_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_get_root();
				if ((!(_56038_references->_method_exist_1(_56321_sc->_field_owner)))) {
					_56038_references->_method_push(jule::Any(_56321_sc->_field_owner));
				}
			}
		}
		else {
			_case_begin_4394462224:;
			{
				if (((*this)._field_owner != nullptr) && (!(_56038_references->_method_exist_0((*this)._field_owner)))) {
					_56038_references->_method_push(jule::Any((*this)._field_owner));
				}
			}
		}
		_match_end_4394462320:;
	}
}



inline void _1c1ead281_Eval::_method_push_reference_to_fn(jule::Ptr<_1c17e2687_FnIns>& _57544_f) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394475456:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _57821_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_get_root();
				if (_57821_sc->_field_owner->_field_decl->_method_is_init() && (!(_57821_sc->_field_owner->_field_references->_method_exist_1(_57544_f)))) {
					_57821_sc->_field_owner->_field_refers->_method_push(jule::Any(_57544_f));
				}
			}
		}
		_match_end_4394475552:;
	}
	(*this)._method_push_reference(_57544_f->_field_references);
}



inline void _1c1ead281_Eval::_method_push_reference_to_var(jule::Ptr<_1c1b58316_Var>& _58645_v) {
	if (_58645_v->_field_references == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394489504:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _59321_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_get_root();
				if (_59321_sc->_field_owner->_field_decl->_method_is_init() && (!(_59321_sc->_field_owner->_field_references->_method_exist_0(_58645_v)))) {
					_59321_sc->_field_owner->_field_refers->_method_push(jule::Any(_58645_v));
				}
			}
		}
		_match_end_4394488704:;
	}
	(*this)._method_push_reference(_58645_v->_field_references);
}



inline void _1c1ead281_Eval::_method_push_reference_to_struct(jule::Ptr<_1db4a7e59_StructIns>& _60248_s) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394498320:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _60521_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_get_root();
				if (_60521_sc->_field_owner->_field_decl->_method_is_init() && (!(_60521_sc->_field_owner->_field_references->_method_exist_2(_60248_s)))) {
					_60521_sc->_field_owner->_field_refers->_method_push(jule::Any(_60248_s));
				}
			}
		}
		_match_end_4394498416:;
	}
	(*this)._method_push_reference(_60248_s->_field_references);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method___eval_enum(jule::Ptr<_1c196c834_Enum> _61330_enm) {
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_61330_enm)),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_enum(jule::Ptr<_1c196c834_Enum> _62532_enm,_1da81133a_Token _62544_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_62532_enm->_field_public,_62532_enm->_field_token)))) {
		(*this)._method_push_err(_62544_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_62532_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_enum(_62532_enm);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method___eval_struct(jule::Ptr<_1db4a7e59_StructIns> _63532_s) {
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_63532_s)),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_63532_s),true,nullptr));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_struct(jule::Ptr<_1db4a7e59_StructIns> _64834_s,_1da81133a_Token _64849_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_64834_s->_field_decl->_field_public,_64834_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_64849_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_64834_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated(_64834_s->_field_decl->_field_directives,_64849_error_token);
	return (*this)._method___eval_struct(_64834_s);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_fn_ins(jule::Ptr<_1c17e2687_FnIns> _66030_f) {
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_66030_f)),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_66030_f),false,nullptr));
}



inline void _1c1ead281_Eval::_method_check_deprecated(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>& _67340_directives,_1da81133a_Token _67382_tok) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	jule::Ptr<_1da7b8e5d_Directive> _67813_d = _1c1ead281_find_directive(_67340_directives,jule::Str("deprecated", 10));
	if (_67813_d != nullptr) {
		if (_67813_d->_field_args.len() == 0LL) {
			(*this)._method_push_err(_67382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			(*this)._method_push_err(_67382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_67813_d->_field_args[0LL]._field_kind)}));
		}
		(*this)._method_push_suggestion(jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_fn(jule::Ptr<_1c17e2687_Fn> _68930_f,_1da81133a_Token _68938_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_68930_f->_field_public,_68930_f->_field_token)))) {
		(*this)._method_push_err(_68938_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_68930_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated(_68930_f->_field_directives,_68938_error_token);
	jule::Ptr<_1c17e2687_FnIns> _69817_ins = _68930_f->_method_instance();
	(*this)._method_push_reference_to_fn(_69817_ins);
	return (*this)._method_eval_fn_ins(_69817_ins);
}



inline void _1c1ead281_Eval::_method_push_illegal_cycle_error(jule::Ptr<_1c1b58316_Var>& _70344_v1,jule::Ptr<_1c1b58316_Var>& _70355_v2,jule::Str& _70370_message) {
	
	jule::Str _70613_refers_to = _203741197_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_70344_v1->_field_ident),jule::Any(_70355_v2->_field_ident)}));
	_70370_message=((_1c18c86d5_str_repeat(jule::Str(" ", 1),4LL) + _70613_refers_to) + jule::Str("\n", 1)) + _70370_message;
}



inline jule::Bool _1c1ead281_Eval::_method_check_cross_cycle(jule::Ptr<_1c1b58316_Var>& _71037_v,jule::Str& _71051_message) {
	{
		auto &expr = _71037_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_4394562528:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> &_1c1ead281_d = *it;
			{
				if (_1c1ead281_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_71037_v,_1c1ead281_d,_71051_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1c1ead281_d,_71051_message)))) {
					(*this)._method_push_illegal_cycle_error(_71037_v,_1c1ead281_d,_71051_message);
					return false;
				}
			}
			_iter_next_4394562528:;
			++it;
			goto _iter_begin_4394562528;
		}
		_iter_end_4394562528:;
	}
	return true;
}



inline jule::Bool _1c1ead281_Eval::_method_check_illegal_cycles(jule::Ptr<_1c1b58316_Var>& _72944_v,_1da81133a_Token _72953_decl_token) {
	jule::Bool _72974_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_72974_ok = true;
		return _72974_ok;
	}
	if ((*this)._field_owner == _72944_v) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_72974_ok = false;
		return _72974_ok;
	}
	jule::Str _74117_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_72944_v,_74117_message)))) {
		jule::Str _74421_err_msg = _74117_message;
		_74117_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_72944_v,_74117_message);
		_74421_err_msg=_74421_err_msg + _74117_message;
		(*this)._method_push_err(_72953_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_74421_err_msg)}));
		_72974_ok = false;
		return _72974_ok;
	}
	(*this)._field_owner->_field_depends = jule::alloc_for_append((*this)._field_owner->_field_depends,1);(*this)._field_owner->_field_depends.push(_72944_v);
	_72974_ok = true;
	return _72974_ok;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_var(jule::Ptr<_1c1b58316_Var> _75631_v,_1da81133a_Token _75640_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_75631_v->_field_public,_75631_v->_field_token)))) {
		(*this)._method_push_err(_75640_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_75631_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated(_75631_v->_field_directives,_75640_error_token);
	_75631_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c1b18a24_Sema>>()) {
			_case_begin_4394602880:;
			{
				jule::Bool _77017_ok = (*this)._method_check_illegal_cycles(_75631_v,_75640_error_token);
				if ((!(_77017_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4394604352:;
			{
				if ((!(_75631_v->_field_reference)) || (*this)._method_is_unsafe()) {
					goto _match_end_4394603952;
				}
				jule::Ptr<_1c197a248_ScopeChecker> _78021_s = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>();
				while ((_78021_s->_field_owner == nullptr) && (_78021_s->_field_parent != nullptr)) {
					{
						_78021_s=_78021_s->_field_parent;
					}
				_iter_next_4394608560:;
				}
				_iter_end_4394608560:;
				if (((_78021_s->_field_owner != nullptr) && _78021_s->_field_owner->_field_anon) && (_75631_v->_field_scope != _78021_s->_field_owner->_field_scope)) {
					(*this)._method_push_err(_75640_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_75631_v->_field_ident)}));
				}
			}
		}
		_match_end_4394603952:;
	}
	(*this)._method_push_reference_to_var(_75631_v);
	if ((!(_75631_v->_field_cpp_linked)) && ((_75631_v->_field_value == nullptr) || (_75631_v->_field_value->_field_data == nullptr))) {
		if (_75631_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_75631_v,(*this)._field_s);
			if (_75631_v->_field_value->_field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if ((_75631_v->_field_kind == nullptr) || (_75631_v->_field_kind->_field_kind == nullptr)) {
		if (_75631_v->_field_scope != nullptr) {
			return nullptr;
		}
		(*this)._field_s->_method_check_type_var(_75631_v,(*this)._field_lookup);
		if ((_75631_v->_field_kind == nullptr) || (_75631_v->_field_kind->_field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1c1ead281_Data> _82017_d = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(_75631_v->_field_kind->_field_kind,jule::Ptr<_1a8ad0a37_TypeKind>(),_75631_v->_field_mutable,_75631_v->_field_reference,(!(_75631_v->_field_constant)),jule::Bool(),jule::Any(_75631_v),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
	if (((!(_75631_v->_field_cpp_linked)) && _75631_v->_method_is_initialized()) && (_75631_v->_field_value->_field_data != nullptr)) {
		_82017_d->_field_is_rune=_75631_v->_field_value->_field_data->_field_is_rune;
	}
	if (_75631_v->_field_constant && (_75631_v->_field_value->_field_data->_field_constant != nullptr)) {
		_82017_d->_field_constant=jule::new_ptr<_1a8d46165_Const>((*(_75631_v->_field_value->_field_data->_field_constant)));
		_82017_d->_field_model=jule::Any(_82017_d->_field_constant);
	}
	if (_82017_d->_field_kind->_method_fnc() != nullptr) {
		jule::Ptr<_1c17e2687_FnIns> _83821_f = _82017_d->_field_kind->_method_fnc();
		if (_83821_f->_field_decl != nullptr) {
			_83821_f->_field_decl->_field_ident=_75631_v->_field_ident;
		}
	}
	return _82017_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_type_alias(jule::Ptr<_1a8ad0a37_TypeAlias> _84938_ta,_1da81133a_Token _84954_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_84938_ta->_field_public,_84938_ta->_field_token)))) {
		(*this)._method_push_err(_84954_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_84938_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_84938_ta->_field_used=true;
	jule::Trait<_1a8ad0a37_Kind> _85817_kind = _84938_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _85817_kind };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_StructIns>>()) {
			_case_begin_4394640096:;
			{
				return (*this)._method___eval_struct(_85817_kind.operator jule::Ptr<_1db4a7e59_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c196c834_Enum>>()) {
			_case_begin_4394639280:;
			{
				return (*this)._method___eval_enum(_85817_kind.operator jule::Ptr<_1c196c834_Enum>());
			}
		}
		else {
			_case_begin_4394637664:;
			{
				jule::Ptr<_1c1ead281_Data> _86721_d = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(((_84938_ta->_field_cpp_linked) ? (_84938_ta->_field_ident) : (_84938_ta->_field_kind->_field_kind->_field_cpp_ident)),_84938_ta->_field_generic,jule::Bool(),_84938_ta->_field_kind->_field_kind->_field_kind)),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1a8d46165_Const>()));
				_86721_d->_field_model=jule::Any(_86721_d->_field_kind);
				return _86721_d;
			}
		}
		_match_end_4394638928:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_def(jule::Any _88131_def,_1da81133a_Token _88141_ident) {
	{
		auto &_match_expr{ _88131_def };
		if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4394649728:;
			{
				return (*this)._method_eval_var(_88131_def.operator jule::Ptr<_1c1b58316_Var>(),_88141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c196c834_Enum>>()) {
			_case_begin_4394651392:;
			{
				return (*this)._method_eval_enum(_88131_def.operator jule::Ptr<_1c196c834_Enum>(),_88141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4394651488:;
			{
				return (*this)._method_eval_struct(_88131_def.operator jule::Ptr<_1db4a7e59_Struct>()->_method_instance(),_88141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c17e2687_Fn>>()) {
			_case_begin_4394650928:;
			{
				return (*this)._method_eval_fn(_88131_def.operator jule::Ptr<_1c17e2687_Fn>(),_88141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4394651024:;
			{
				return (*this)._method_eval_fn_ins(_88131_def.operator jule::Ptr<_1c17e2687_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeAlias>>()) {
			_case_begin_4394649008:;
			{
				return (*this)._method_eval_type_alias(_88131_def.operator jule::Ptr<_1a8ad0a37_TypeAlias>(),_88141_ident);
			}
		}
		else {
			_case_begin_4394648432:;
			{
				(*this)._method_push_err(_88141_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_88141_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4394648528:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_ident(jule::Ptr<_1da7b8e5d_IdentExpr> _90729_ident) {
	jule::Any _90817_def = (*this)._method_get_def(_90729_ident->_field_ident,_90729_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_90817_def,_90729_ident->_field_token);
}



inline void _1c1ead281_Eval::_method_eval_unary_minus(jule::Ptr<_1c1ead281_Data>& _91236_d) {
	jule::Ptr<_1a8ad0a37_Prim> _91313_t = _91236_d->_field_kind->_method_prim();
	if ((_91313_t == nullptr) || (!(_1a8dc9a45_is_num(_91313_t->_method_to_str())))) {
		_91236_d=nullptr;
		return;
	}
	if (_91236_d->_method_is_const()) {
		{
			if (_91236_d->_field_constant->_method_is_f64()) {
				_case_begin_4394671200:;
				{
					_91236_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_91236_d->_field_constant->_method_read_f64()))));
				}
			}
			else if (_91236_d->_field_constant->_method_is_i64()) {
				_case_begin_4394671312:;
				{
					_91236_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_91236_d->_field_constant->_method_as_f64()))));
				}
			}
			else if (_91236_d->_field_constant->_method_is_u64()) {
				_case_begin_4394671424:;
				{
					_91236_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_91236_d->_field_constant->_method_as_f64()))));
				}
			}
			_match_end_4394670960:;
		}
		_1c1ead281_normalize_type(_91236_d);
	}
	_91236_d->_field_lvalue=false;
	_91236_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_91236_d->_field_model,jule::Str("-", 1))));
}



inline void _1c1ead281_Eval::_method_eval_unary_plus(jule::Ptr<_1c1ead281_Data>& _93535_d) {
	jule::Ptr<_1a8ad0a37_Prim> _93613_t = _93535_d->_field_kind->_method_prim();
	if ((_93613_t == nullptr) || (!(_1a8dc9a45_is_num(_93613_t->_method_to_str())))) {
		_93535_d=nullptr;
		return;
	}
	if (_93535_d->_method_is_const()) {
		{
			if (_93535_d->_field_constant->_method_is_f64()) {
				_case_begin_4394685136:;
				{
					_93535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_93535_d->_field_constant->_method_read_f64()))));
				}
			}
			else if (_93535_d->_field_constant->_method_is_i64()) {
				_case_begin_4394685248:;
				{
					_93535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_93535_d->_field_constant->_method_as_f64()))));
				}
			}
			else if (_93535_d->_field_constant->_method_is_u64()) {
				_case_begin_4394685360:;
				{
					_93535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_93535_d->_field_constant->_method_as_f64()))));
				}
			}
			_match_end_4394684928:;
		}
		_1c1ead281_normalize_type(_93535_d);
	}
	_93535_d->_field_lvalue=false;
	_93535_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_93535_d->_field_model,jule::Str("+", 1))));
}



inline void _1c1ead281_Eval::_method_eval_unary_caret(jule::Ptr<_1c1ead281_Data>& _95836_d) {
	jule::Ptr<_1a8ad0a37_Prim> _95913_t = _95836_d->_field_kind->_method_prim();
	if ((_95913_t == nullptr) || (!(_1a8dc9a45_is_int(_95913_t->_method_to_str())))) {
		_95836_d=nullptr;
		return;
	}
	if (_95836_d->_method_is_const()) {
		{
			if (_95836_d->_field_constant->_method_is_i64()) {
				_case_begin_4394699152:;
				{
					_95836_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_95836_d->_field_constant->_method_read_i64()))));
				}
			}
			else if (_95836_d->_field_constant->_method_is_u64()) {
				_case_begin_4394699264:;
				{
					_95836_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_95836_d->_field_constant->_method_read_u64()))));
				}
			}
			_match_end_4394698928:;
		}
	}
	_95836_d->_field_lvalue=false;
	_95836_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_95836_d->_field_model,jule::Str("^", 1))));
}



inline void _1c1ead281_Eval::_method_eval_unary_excl(jule::Ptr<_1c1ead281_Data>& _98235_d) {
	jule::Ptr<_1a8ad0a37_Prim> _98313_t = _98235_d->_field_kind->_method_prim();
	if ((_98313_t == nullptr) || (!(_98313_t->_method_is_bool()))) {
		_98235_d=nullptr;
		return;
	}
	if (_98235_d->_method_is_const()) {
		{
			if (_98235_d->_field_constant->_method_is_bool()) {
				_case_begin_4394710432:;
				{
					_98235_d->_field_constant->_method_set_bool((!(_98235_d->_field_constant->_method_read_bool())));
				}
			}
			_match_end_4394710224:;
		}
	}
	_98235_d->_field_lvalue=false;
	_98235_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_98235_d->_field_model,jule::Str("!", 1))));
}



inline void _1c1ead281_Eval::_method_eval_unary_star(jule::Ptr<_1c1ead281_Data>& _100339_d,_1da81133a_Token& _100350_op) {
	{
		if (_100339_d->_field_kind->_method_ptr() != nullptr) {
			_case_begin_4394717280:;
			{
				if ((!((*this)._method_is_unsafe()))) {
					(*this)._method_push_err(_100350_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1a8ad0a37_Ptr> _101021_t = _100339_d->_field_kind->_method_ptr();
				if (_101021_t->_method_is_unsafe()) {
					_100339_d=nullptr;
					return;
				}
				_100339_d->_field_kind=_101021_t->_field_elem;
			}
		}
		else if (_100339_d->_field_kind->_method_sptr() != nullptr) {
			_case_begin_4394717376:;
			{
				_100339_d->_field_kind=_100339_d->_field_kind->_method_sptr()->_field_elem;
			}
		}
		else {
			_case_begin_4394716256:;
			{
				_100339_d=nullptr;
				return;
			}
		}
		_match_end_4394716112:;
	}
	_100339_d->_field_constant=nullptr;
	_100339_d->_field_lvalue=true;
	_100339_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_100339_d->_field_model,jule::Str("*", 1))));
}



inline void _1c1ead281_Eval::_method_eval_unary_amper(jule::Ptr<_1c1ead281_Data>& _103336_d) {
	{
		auto &_match_expr{ _103336_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructLitExprModel>>()) {
			_case_begin_4394730384:;
			{
				jule::Ptr<_1c19727a1_StructLitExprModel> _103621_lit = _103336_d->_field_model.operator jule::Ptr<_1c19727a1_StructLitExprModel>();
				_1c1ead281_make_struct_lit_alloc(_103336_d,_103621_lit);
			}
		}
		else {
			_case_begin_4394727760:;
			{
				{
					if (_1a8ad0a37_can_get_ptr(_103336_d)) {
						_case_begin_4394730192:;
						{
							_103336_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Ptr>(new( std::nothrow ) _1a8ad0a37_Ptr(_103336_d->_field_kind))));
							_103336_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_UnaryExprModel>(new( std::nothrow ) _1c19727a1_UnaryExprModel(_103336_d->_field_model,jule::Str("&", 1))));
						}
					}
					else {
						_case_begin_4394729360:;
						{
							_103336_d=nullptr;
						}
					}
					_match_end_4394729184:;
				}
			}
		}
		_match_end_4394727984:;
	}
	if (_103336_d != nullptr) {
		_103336_d->_field_constant=nullptr;
		_103336_d->_field_lvalue=false;
		_103336_d->_field_mutable=true;
	}
}



inline void _1c1ead281_Eval::_method_eval_unary_type_decl(jule::Ptr<_1c1ead281_Data>& _106244_d,jule::Ptr<_1da7b8e5d_UnaryExpr>& _106259_u) {
	_1a8ad0a37_TypeChecker _106317_tc = _1a8ad0a37_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_1a8ad0a37_Referencer>(),_106259_u->_field_op,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Bool(),jule::Bool());
	{
		auto &_match_expr{ _106259_u->_field_op._field_kind };
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_4394741632:;
			{
				_106244_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_106317_tc._method_build_ptr_from_type(_106244_d->_field_kind)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_4394743200:;
			{
				_106244_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_106317_tc._method_build_sptr_from_type(_106244_d->_field_kind)));
			}
		}
		else {
			_case_begin_4394739088:;
			{
				(*this)._method_push_err(_106259_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_106259_u->_field_op._field_kind)}));
				_106244_d=nullptr;
				return;
			}
		}
		_match_end_4394740512:;
	}
	_106244_d->_field_decl=true;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_unary(jule::Ptr<_1da7b8e5d_UnaryExpr> _108534_u) {
	jule::Ptr<_1a8ad0a37_TypeKind> _108617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_108617_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _109017_d = this->self->_method_eval_expr_kind(_108534_u->_field_expr);
	if (_109017_d == nullptr) {
		return nullptr;
	}
	if (_109017_d->_field_decl) {
		this->self->_method_eval_unary_type_decl(_109017_d,_108534_u);
		return _109017_d;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _110017_cast_kind = _109017_d->_field_cast_kind;
	{
		auto &_match_expr{ _108534_u->_field_op._field_kind };
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_4394757888:;
			{
				this->self->_method_eval_unary_minus(_109017_d);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_4394757984:;
			{
				this->self->_method_eval_unary_plus(_109017_d);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_4394758080:;
			{
				this->self->_method_eval_unary_caret(_109017_d);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_4394757216:;
			{
				this->self->_method_eval_unary_excl(_109017_d);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_4394757312:;
			{
				this->self->_method_eval_unary_star(_109017_d,_108534_u->_field_op);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_4394757408:;
			{
				this->self->_method_eval_unary_amper(_109017_d);
			}
		}
		else {
			_case_begin_4394753312:;
			{
				_109017_d=nullptr;
			}
		}
		_match_end_4394756928:;
	}
	if (_109017_d == nullptr) {
		this->self->_method_push_err(_108534_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_108534_u->_field_op._field_kind)}));
	} else if (_109017_d->_method_is_const()) {
		_109017_d->_field_model=jule::Any(_109017_d->_field_constant);
	} else if (_110017_cast_kind != nullptr) {
		_109017_d->_field_cast_kind=_110017_cast_kind;
		_1c1ead281_apply_cast_kind(_109017_d);
	}
	return _109017_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_variadic(jule::Ptr<_1da7b8e5d_VariadicExpr> _112337_v) {
	if (_112337_v->_field_expr == nullptr) {
		this->self->_method_push_err(_112337_v->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _112917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_112917_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _113317_d = this->self->_method_eval_expr_kind(_112337_v->_field_expr);
	if (_113317_d == nullptr) {
		return nullptr;
	}
	if ((!(_113317_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_112337_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_113317_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_Slc> _114313_slc = _113317_d->_field_kind->_method_slc();
	_113317_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(_114313_slc->_field_elem->_field_cpp_ident,_114313_slc->_field_elem->_field_generic,true,_114313_slc->_field_elem->_field_kind));
	return _113317_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_unsafe(jule::Ptr<_1da7b8e5d_UnsafeExpr> _115335_u) {
	jule::Bool _115413_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ptr<_1c1ead281_Data> _115717_d = this->self->_method_eval_expr_kind(_115335_u->_field_expr);
	this->self->_field_unsafety=_115413_unsafety;
	return _115717_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_arr(jule::Ptr<_1da7b8e5d_SliceExpr> _116432_s) {
	jule::Ptr<_1a8ad0a37_Arr> _116617_pt = this->self->_field_prefix->_method_arr();
	jule::Ptr<_1a8ad0a37_Arr> _116817_arr = jule::new_struct_ptr<_1a8ad0a37_Arr>(new( std::nothrow ) _1a8ad0a37_Arr(false,0LL,_116617_pt->_field_elem));
	jule::Bool _117417_filled = false;
	if (_116432_s->_field_elems.len() == 2LL) {
		{
			auto &_match_expr{ _116432_s->_field_elems[1LL] };
			if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VariadicExpr>>()) {
				_case_begin_4394795600:;
				{
					if (_116432_s->_field_elems[1LL].operator jule::Ptr<_1da7b8e5d_VariadicExpr>()->_field_expr != nullptr) {
						goto _match_end_4394796448;
					}
					if (_116617_pt->_field_auto) {
						this->self->_method_push_err(_116432_s->_field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_117417_filled=true;
					_116432_s->_field_elems=_116432_s->_field_elems.slice(0LL,1LL);
				}
			}
			_match_end_4394796448:;
		}
	}
	_116817_arr->_field_n=static_cast<jule::I64>(_116432_s->_field_elems.len());
	if ((!(_116617_pt->_field_auto))) {
		if (_116817_arr->_field_n > _116617_pt->_field_n) {
			this->self->_method_push_err(_116432_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_116817_arr->_field_n < _116617_pt->_field_n) {
			_116817_arr->_field_n=_116617_pt->_field_n;
		}
	}
	jule::Ptr<_1c19727a1_ArrayExprModel> _120317_model = jule::new_struct<_1c19727a1_ArrayExprModel>(new( std::nothrow ) _1c19727a1_ArrayExprModel(_116817_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(((_117417_filled) ? (2LL) : (static_cast<jule::I64>(_116432_s->_field_elems.len())))))));
	jule::Ptr<_1a8ad0a37_TypeKind> _120817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_116817_arr->_field_elem;
	{
		auto &expr = _116432_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4394809232:;
		if (it != expr.end()) {
			jule::Any _1c1ead281_elem = *it;
			{
				jule::Ptr<_1c1ead281_Data> _121121_d = this->self->_method_eval_expr_kind(_1c1ead281_elem);
				if (_121121_d == nullptr) {
					goto _iter_next_4394809232;
				}
				this->self->_field_s->_method_check_assign_type(false,_116817_arr->_field_elem,_121121_d,_116432_s->_field_token);
				_120317_model->_field_elems = jule::alloc_for_append(_120317_model->_field_elems,1);_120317_model->_field_elems.push(_121121_d->_field_model);
			}
			_iter_next_4394809232:;
			++it;
			goto _iter_begin_4394809232;
		}
		_iter_end_4394809232:;
	}
	this->self->_field_prefix=_120817_prefix;
	if (_117417_filled) {
		_120317_model->_field_elems = jule::alloc_for_append(_120317_model->_field_elems,1);_120317_model->_field_elems.push(jule::Any(nullptr));
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_116817_arr)),jule::Ptr<_1a8ad0a37_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_120317_model),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_exp_slc(jule::Ptr<_1da7b8e5d_SliceExpr> _123336_s,jule::Ptr<_1a8ad0a37_TypeKind> _123355_elem_type) {
	jule::Ptr<_1a8ad0a37_Slc> _123417_slc = jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_123355_elem_type));
	jule::Ptr<_1c19727a1_SliceExprModel> _123817_model = jule::new_struct<_1c19727a1_SliceExprModel>(new( std::nothrow ) _1c19727a1_SliceExprModel(_123355_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_123336_s->_field_elems.len()))));
	jule::Ptr<_1a8ad0a37_TypeKind> _124317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_123417_slc->_field_elem;
	{
		auto &expr = _123336_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4394823776:;
		if (it != expr.end()) {
			jule::Any _1c1ead281_elem = *it;
			{
				jule::Ptr<_1c1ead281_Data> _124621_d = this->self->_method_eval_expr_kind(_1c1ead281_elem);
				if (_124621_d == nullptr) {
					goto _iter_next_4394823776;
				}
				this->self->_field_s->_method_check_assign_type(false,_123417_slc->_field_elem,_124621_d,_123336_s->_field_token);
				_123817_model->_field_elems = jule::alloc_for_append(_123817_model->_field_elems,1);_123817_model->_field_elems.push(_124621_d->_field_model);
			}
			_iter_next_4394823776:;
			++it;
			goto _iter_begin_4394823776;
		}
		_iter_end_4394823776:;
	}
	this->self->_field_prefix=_124317_prefix;
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_123417_slc)),jule::Ptr<_1a8ad0a37_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_123817_model),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_slice_expr(jule::Ptr<_1da7b8e5d_SliceExpr> _126339_s) {
	if (this->self->_field_prefix != nullptr) {
		{
			if (this->self->_field_prefix->_method_arr() != nullptr) {
				_case_begin_4394833072:;
				{
					return this->self->_method_eval_arr(_126339_s);
				}
			}
			else if (this->self->_field_prefix->_method_slc() != nullptr) {
				_case_begin_4394833184:;
				{
					jule::Ptr<_1a8ad0a37_Slc> _127025_pt = this->self->_field_prefix->_method_slc();
					return this->self->_method_eval_exp_slc(_126339_s,_127025_pt->_field_elem);
				}
			}
			_match_end_4394832848:;
		}
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _127517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	if (_126339_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_126339_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _128317_first_elem = this->self->_method_eval_expr_kind(_126339_s->_field_elems[0LL]);
	if (_128317_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _128817_d = this->self->_method_eval_exp_slc(_126339_s,_128317_first_elem->_field_kind);
	this->self->_field_prefix=_127517_prefix;
	return _128817_d;
}



inline void _1c1ead281_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_1c1ead281_Data>& _129454_d,_1da81133a_Token _129464_token) {
	jule::Str _129513_err_key = _1c1ead281_check_data_for_integer_indexing(_129454_d);
	{
		auto &_match_expr{ _129513_err_key };
		if (_match_expr == jule::Str()) {
			_case_begin_4394848832:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type \"@\" is invalid for indexing", 32)) {
			_case_begin_4394848064:;
			{
				(*this)._method_push_err(_129464_token,_129513_err_key,jule::Slice<jule::Any>({jule::Any(_129454_d->_field_kind->_method_to_str())}));
			}
		}
		else {
			_case_begin_4394846768:;
			{
				(*this)._method_push_err(_129464_token,_129513_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_4394847776:;
	}
}



inline void _1c1ead281_Eval::_method_indexing_ptr(jule::Ptr<_1c1ead281_Data>& _130836_d,jule::Ptr<_1c1ead281_Data>& _130851_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _130866_i) {
	(*this)._method_check_integer_indexing_by_data(_130851_index,_130866_i->_field_token);
	jule::Ptr<_1a8ad0a37_Ptr> _131117_ptr = _130836_d->_field_kind->_method_ptr();
	{
		if (_131117_ptr->_method_is_unsafe()) {
			_case_begin_4394857664:;
			{
				(*this)._method_push_err(_130866_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!((*this)._method_is_unsafe()))) {
			_case_begin_4394857760:;
			{
				(*this)._method_push_err(_130866_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_4394857424:;
	}
	_130836_d->_field_kind=_131117_ptr->_field_elem;
}



inline void _1c1ead281_Eval::_method_indexing_arr(jule::Ptr<_1c1ead281_Data>& _132436_d,jule::Ptr<_1c1ead281_Data>& _132451_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _132466_i) {
	jule::Ptr<_1a8ad0a37_Arr> _132517_arr = _132436_d->_field_kind->_method_arr();
	_132436_d->_field_kind=_132517_arr->_field_elem;
	(*this)._method_check_integer_indexing_by_data(_132451_index,_132466_i->_field_token);
	if (_132451_index->_method_is_const() && (_132451_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_132517_arr->_field_n))) {
		(*this)._method_push_err(_132466_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1c1ead281_Eval::_method_indexing_slc(jule::Ptr<_1c1ead281_Data>& _133336_d,jule::Ptr<_1c1ead281_Data>& _133351_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _133366_i) {
	jule::Ptr<_1a8ad0a37_Slc> _133417_slc = _133336_d->_field_kind->_method_slc();
	_133336_d->_field_kind=_133417_slc->_field_elem;
	(*this)._method_check_integer_indexing_by_data(_133351_index,_133366_i->_field_token);
	if ((!(_133351_index->_method_is_const()))) {
		return;
	}
	{
		auto &_match_expr{ _133336_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_SliceExprModel>>()) {
			_case_begin_4394877536:;
			{
				jule::Ptr<_1c19727a1_SliceExprModel> _134421_m = _133336_d->_field_model.operator jule::Ptr<_1c19727a1_SliceExprModel>();
				jule::F64 _134517_indx = _133351_index->_field_constant->_method_as_f64();
				if (_134517_indx >= static_cast<jule::F64>(_134421_m->_field_elems.len())) {
					(*this)._method_push_err(_133366_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_133336_d->_field_model=_134421_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_134517_indx))];
					_133336_d->_field_decl=true;
				}
			}
		}
		_match_end_4394877776:;
	}
}



inline void _1c1ead281_Eval::_method_indexing_map(jule::Ptr<_1c1ead281_Data>& _135536_d,jule::Ptr<_1c1ead281_Data>& _135551_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _135570_i) {
	if (_135551_index == nullptr) {
		return;
	}
	jule::Ptr<_1a8ad0a37_Map> _136017_m = _135536_d->_field_kind->_method_map();
	_1c1d617a5_AssignTypeChecker _136117_atc = _1c1d617a5_AssignTypeChecker((*this)._field_s,_136017_m->_field_key,_135551_index,_135570_i->_field_token);
	_136117_atc._method_check();
	_135536_d->_field_kind=_136017_m->_field_val;
}



inline void _1c1ead281_Eval::_method_indexing_str(jule::Ptr<_1c1ead281_Data>& _137236_d,jule::Ptr<_1c1ead281_Data>& _137251_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _137266_i) {
	
	_137236_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u8", 2))));
	if (_137251_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_137251_index,_137266_i->_field_token);
	if ((!(_137251_index->_method_is_const()))) {
		_137236_d->_field_constant=nullptr;
		return;
	}
	if (_137236_d->_method_is_const()) {
		_1da81133a_Token _138817_error_token = _137266_i->_field_token;
		jule::I64 _138917_j = _137251_index->_field_constant->_method_as_i64();
		jule::Str _139017_s = _137236_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_138917_j) >= _139017_s.len()) {
			(*this)._method_push_err(_138817_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_137236_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_139017_s[_138917_j]));
		}
	}
}



inline void _1c1ead281_Eval::_method_to_indexing(jule::Ptr<_1c1ead281_Data>& _139935_d,jule::Ptr<_1c1ead281_Data>& _139950_index,jule::Ptr<_1da7b8e5d_IndexingExpr>& _139969_i) {
	{
		if (_139935_d->_field_kind->_method_ptr() != nullptr) {
			_case_begin_4394911856:;
			{
				(*this)._method_indexing_ptr(_139935_d,_139950_index,_139969_i);
				return;
			}
		}
		else if (_139935_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_4394911968:;
			{
				(*this)._method_indexing_arr(_139935_d,_139950_index,_139969_i);
				return;
			}
		}
		else if (_139935_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_4394912080:;
			{
				(*this)._method_indexing_slc(_139935_d,_139950_index,_139969_i);
				return;
			}
		}
		else if (_139935_d->_field_kind->_method_map() != nullptr) {
			_case_begin_4394912192:;
			{
				(*this)._method_indexing_map(_139935_d,_139950_index,_139969_i);
				return;
			}
		}
		else if (_139935_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_4394912304:;
			{
				jule::Ptr<_1a8ad0a37_Prim> _141817_prim = _139935_d->_field_kind->_method_prim();
				{
					if (_141817_prim->_method_is_str()) {
						_case_begin_4394923680:;
						{
							(*this)._method_indexing_str(_139935_d,_139950_index,_139969_i);
							return;
						}
					}
					_match_end_4394923536:;
				}
			}
		}
		_match_end_4394911584:;
	}
	(*this)._method_push_err(_139969_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_139935_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_1da7b8e5d_IndexingExpr>& _142954_i) {
	{
		auto &_match_expr{ _142954_i->_field_expr };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
			_case_begin_4394931456:;
		}
		else {
			_case_begin_4394928784:;
			{
				this->self->_method_push_err(_142954_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4394929008:;
	}
	jule::Ptr<_1da7b8e5d_IdentTypeDecl> _143717_decl = jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_1da81133a_Token(),_142954_i->_field_expr.operator jule::Ptr<_1da7b8e5d_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>()));
	{
		auto &_match_expr{ _142954_i->_field_index };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UnaryExpr>>()) {
			_case_begin_4394935552:;
			{
				jule::Ptr<_1c1ead281_Data> _144521_d = this->self->_method_eval_unary(_142954_i->_field_index.operator jule::Ptr<_1da7b8e5d_UnaryExpr>());
				if ((!(_144521_d->_field_decl))) {
					this->self->_method_push_err(_142954_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
				_143717_decl->_field_generics = jule::alloc_for_append(_143717_decl->_field_generics,1);_143717_decl->_field_generics.push(jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1da81133a_Token(),jule::Any(_144521_d->_field_kind))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeDecl>>()) {
			_case_begin_4394935744:;
			{
				_143717_decl->_field_generics = jule::alloc_for_append(_143717_decl->_field_generics,1);_143717_decl->_field_generics.push(_142954_i->_field_index.operator jule::Ptr<_1da7b8e5d_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
			_case_begin_4394935840:;
			{
				_143717_decl->_field_generics = jule::alloc_for_append(_143717_decl->_field_generics,1);_143717_decl->_field_generics.push(jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1da81133a_Token(),jule::Any(jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_1da81133a_Token(),_142954_i->_field_index.operator jule::Ptr<_1da7b8e5d_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>()))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TupleExpr>>()) {
			_case_begin_4394935280:;
			{
				{
					auto &expr = _142954_i->_field_index.operator jule::Ptr<_1da7b8e5d_TupleExpr>()->_field_expr;
					auto it = expr.begin();
					_iter_begin_4394944368:;
					if (it != expr.end()) {
						jule::Ptr<_1da7b8e5d_Expr> _1c1ead281_expr = *it;
						{
							{
								auto &_match_expr{ _1c1ead281_expr->_field_kind };
								if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeDecl>>()) {
									_case_begin_4394947280:;
									{
										_143717_decl->_field_generics = jule::alloc_for_append(_143717_decl->_field_generics,1);_143717_decl->_field_generics.push(_1c1ead281_expr->_field_kind.operator jule::Ptr<_1da7b8e5d_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
									_case_begin_4394947824:;
									{
										_143717_decl->_field_generics = jule::alloc_for_append(_143717_decl->_field_generics,1);_143717_decl->_field_generics.push(jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1da81133a_Token(),jule::Any(jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_1da81133a_Token(),_1c1ead281_expr->_field_kind.operator jule::Ptr<_1da7b8e5d_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1da7b8e5d_TypeDecl>>()))))));
									}
								}
								_match_end_4394947376:;
							}
						}
						_iter_next_4394944368:;
						++it;
						goto _iter_begin_4394944368;
					}
					_iter_end_4394944368:;
				}
			}
		}
		else {
			_case_begin_4394929776:;
			{
				this->self->_method_push_err(_142954_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4394933216:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_1da81133a_Token(),jule::Any(_143717_decl))));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_indexing(jule::Ptr<_1da7b8e5d_IndexingExpr> _148137_i) {
	jule::Ptr<_1a8ad0a37_TypeKind> _148217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_148217_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _148617_d = this->self->_method_eval_expr_kind(_148137_i->_field_expr);
	if (_148617_d == nullptr) {
		return nullptr;
	}
	if (_148617_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_148137_i);
	}
	_1c1ead281_Data _149617_old_d = (*(_148617_d));
	jule::Ptr<_1c1ead281_Data> _149817_index = this->self->_method_eval_expr_kind(_148137_i->_field_index);
	if (_149817_index == nullptr) {
		return nullptr;
	}
	_148617_d->_field_decl=false;
	this->self->_method_to_indexing(_148617_d,_149817_index,_148137_i);
	if (_148617_d->_method_is_const()) {
		_148617_d->_field_decl=false;
		_148617_d->_field_model=jule::Any(_148617_d->_field_constant);
	} else if (_148617_d->_field_decl) {
		_148617_d->_field_decl=false;
	} else {
		_148617_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_IndexigExprModel>(new( std::nothrow ) _1c19727a1_IndexigExprModel(jule::new_ptr<_1c1ead281_Data>(_149617_old_d),_149817_index)));
	}
	return _148617_d;
}



inline std::tuple<jule::Ptr<_1c1ead281_Data>,jule::Ptr<_1c1ead281_Data>> _1c1ead281_Eval::_method_eval_slicing_exprs(jule::Ptr<_1da7b8e5d_SlicingExpr>& _152843_s) {
	jule::Ptr<_1a8ad0a37_TypeKind> _152917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_152917_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _153317_l = nullptr;
	jule::Ptr<_1c1ead281_Data> _153417_r = nullptr;
	if (_152843_s->_field_start != nullptr) {
		_153317_l=this->self->_method_eval_expr_kind(_152843_s->_field_start);
		if (_153317_l != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_153317_l,_152843_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_153317_l=jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a8d46165_Const::_static_method_new_i64(0LL)));
		_153317_l->_field_model=jule::Any(_153317_l->_field_constant);
	}
	if (_152843_s->_field_to != nullptr) {
		_153417_r=this->self->_method_eval_expr_kind(_152843_s->_field_to);
		if (_153417_r != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_153417_r,_152843_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_153317_l,_153417_r);
}



inline void _1c1ead281_Eval::_method_slicing_arr(jule::Ptr<_1c1ead281_Data>& _156331_d) {
	jule::Ptr<_1a8ad0a37_TypeKind> _156417_elem_type = _156331_d->_field_kind->_method_arr()->_field_elem;
	_156331_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_156417_elem_type))));
	_156331_d->_field_lvalue=false;
	_156331_d->_field_mutable=_156331_d->_field_mutable || (!(_156417_elem_type->_method_mutable()));
}



inline void _1c1ead281_Eval::_method_slicing_slc(jule::Ptr<_1c1ead281_Data>& _157431_d) {
	_157431_d->_field_lvalue=false;
}



inline void _1c1ead281_Eval::_method_slicing_str(jule::Ptr<_1c1ead281_Data>& _157831_d,jule::Ptr<_1c1ead281_Data>& _157842_l,jule::Ptr<_1c1ead281_Data>& _157853_r) {
	_157831_d->_field_lvalue=false;
	_157831_d->_field_mutable=true;
	if ((!(_157831_d->_method_is_const()))) {
		return;
	}
	if ((_157842_l == nullptr) || (_157853_r == nullptr)) {
		_157831_d->_field_constant=nullptr;
		return;
	}
	if (_157842_l->_method_is_const() && _157853_r->_method_is_const()) {
		jule::I64 _159117_left = _157842_l->_field_constant->_method_as_i64();
		if (_159117_left < 0LL) {
			return;
		}
		jule::Str _159617_s = _157831_d->_field_constant->_method_read_str();
		jule::I64 _159721_right = 0LL;
		if (_157853_r == nullptr) {
			_159721_right=static_cast<jule::I64>(_159617_s.len());
		} else {
			_159721_right=static_cast<jule::I64>(_157853_r->_field_constant->_method_as_i64());
		}
		if (_159117_left > _159721_right) {
			return;
		}
		_157831_d->_field_constant->_method_set_str(_159617_s.slice(_159117_left,_159721_right));
		_157831_d->_field_decl=true;
	} else {
		_157831_d->_field_constant=nullptr;
	}
}



inline void _1c1ead281_Eval::_method_check_slicing(jule::Ptr<_1c1ead281_Data>& _161437_d,jule::Ptr<_1c1ead281_Data>& _161448_l,jule::Ptr<_1c1ead281_Data>& _161459_r,jule::Ptr<_1da7b8e5d_SlicingExpr>& _161470_s) {
	{
		if (_161437_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_4395009360:;
			{
				(*this)._method_slicing_arr(_161437_d);
				return;
			}
		}
		else if (_161437_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_4395009472:;
			{
				(*this)._method_slicing_slc(_161437_d);
				return;
			}
		}
		else if (_161437_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_4395009584:;
			{
				jule::Ptr<_1a8ad0a37_Prim> _162517_prim = _161437_d->_field_kind->_method_prim();
				{
					if (_162517_prim->_method_is_str()) {
						_case_begin_4395016736:;
						{
							(*this)._method_slicing_str(_161437_d,_161448_l,_161459_r);
							return;
						}
					}
					_match_end_4395016592:;
				}
			}
		}
		_match_end_4395009184:;
	}
	(*this)._method_push_err(_161470_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_161437_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_slicing(jule::Ptr<_1da7b8e5d_SlicingExpr> _163636_s) {
	jule::Ptr<_1c1ead281_Data> _163717_d = this->self->_method_eval_expr_kind(_163636_s->_field_expr);
	if (_163717_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _164218_l;
	jule::Ptr<_1c1ead281_Data> _164225_r;
	std::tie(_164218_l,_164225_r) = this->self->_method_eval_slicing_exprs(_163636_s);
	if (_164218_l == nullptr) {
		return _163717_d;
	}
	_163717_d->_field_decl=false;
	this->self->_method_check_slicing(_163717_d,_164218_l,_164225_r,_163636_s);
	_163717_d->_field_cast_kind=nullptr;
	if (_163717_d->_method_is_const()) {
		_163717_d->_field_decl=false;
		_163717_d->_field_model=jule::Any(_163717_d->_field_constant);
	} else if (_163717_d->_field_decl) {
		_163717_d->_field_decl=false;
	} else {
		jule::Ptr<_1c19727a1_SlicingExprModel> _166121_model = jule::new_struct<_1c19727a1_SlicingExprModel>(new( std::nothrow ) _1c19727a1_SlicingExprModel(_163717_d->_field_model,_164218_l->_field_model,jule::Any()));
		if (_164225_r != nullptr) {
			_166121_model->_field_right=_164225_r->_field_model;
		}
		_163717_d->_field_model=jule::Any(_166121_model);
	}
	return _163717_d;
}



inline void _1c1ead281_Eval::_method_cast_ptr(jule::Ptr<_1a8ad0a37_TypeKind> _167631_t,jule::Ptr<_1c1ead281_Data> _167649_d,_1da81133a_Token _167659_error_token) {
	jule::Ptr<_1a8ad0a37_Sptr> _167713_sptr = _167649_d->_field_kind->_method_sptr();
	if (_167713_sptr != nullptr) {
		if ((!(_167631_t->_method_ptr()->_field_elem->_method_equals(_167713_sptr->_field_elem)))) {
			(*this)._method_push_err(_167659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167649_d->_field_kind->_method_to_str()),jule::Any(_167631_t->_method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_167659_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a8ad0a37_Prim> _169013_prim = _167649_d->_field_kind->_method_prim();
	if ((_167649_d->_field_kind->_method_ptr() == nullptr) && ((_169013_prim == nullptr) || (!(_1a8dc9a45_is_int(_169013_prim->_method_to_str()))))) {
		(*this)._method_push_err(_167659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167649_d->_field_kind->_method_to_str()),jule::Any(_167631_t->_method_to_str())}));
	}
	_167649_d->_field_constant=nullptr;
}



inline void _1c1ead281_Eval::_method_cast_struct(jule::Ptr<_1a8ad0a37_TypeKind> _169834_t,jule::Ptr<_1c1ead281_Data> _169852_d,_1da81133a_Token _169862_error_token) {
	jule::Ptr<_1c196b2a0_Trait> _169917_tr = _169852_d->_field_kind->_method_trt();
	if (_169917_tr == nullptr) {
		(*this)._method_push_err(_169862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_169852_d->_field_kind->_method_to_str()),jule::Any(_169834_t->_method_to_str())}));
		return;
	}
	jule::Ptr<_1db4a7e59_StructIns> _170517_s = _169834_t->_method_strct();
	(*this)._method_push_reference_to_struct(_170517_s);
	if ((!(_170517_s->_field_decl->_method_is_implements(_169917_tr)))) {
		(*this)._method_push_err(_169862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_169852_d->_field_kind->_method_to_str()),jule::Any(_169834_t->_method_to_str())}));
	}
}



inline void _1c1ead281_Eval::_method_cast_ref(jule::Ptr<_1a8ad0a37_TypeKind> _171331_t,jule::Ptr<_1c1ead281_Data> _171349_d,_1da81133a_Token _171359_error_token) {
	jule::Ptr<_1a8ad0a37_Sptr> _171417_sptr = _171331_t->_method_sptr();
	jule::Ptr<_1a8ad0a37_Ptr> _171617_ptr = _171349_d->_field_kind->_method_ptr();
	if ((_171617_ptr != nullptr) && _171417_sptr->_field_elem->_method_equals(_171617_ptr->_field_elem)) {
		if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_171359_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_171417_sptr->_field_elem->_method_strct() != nullptr) {
		(*this)._method_cast_struct(_171417_sptr->_field_elem,_171349_d,_171359_error_token);
		return;
	}
	(*this)._method_push_err(_171359_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_171349_d->_field_kind->_method_to_str()),jule::Any(_171331_t->_method_to_str())}));
}



inline void _1c1ead281_Eval::_method_cast_slc(jule::Ptr<_1a8ad0a37_TypeKind> _173531_t,jule::Ptr<_1c1ead281_Data> _173549_d,_1da81133a_Token _173559_error_token) {
	if (_173549_d->_field_kind->_method_enm() != nullptr) {
		if ((_173549_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_173549_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_173559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_173549_d->_field_kind->_method_to_str()),jule::Any(_173531_t->_method_to_str())}));
			return;
		}
	} else if ((_173549_d->_field_kind->_method_prim() == nullptr) || (!(_173549_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_173559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_173549_d->_field_kind->_method_to_str()),jule::Any(_173531_t->_method_to_str())}));
		return;
	}
	_173531_t=_173531_t->_method_slc()->_field_elem;
	jule::Ptr<_1a8ad0a37_Prim> _174713_prim = _173531_t->_method_prim();
	if ((_174713_prim == nullptr) || ((!(_174713_prim->_method_is_u8())) && (!(_174713_prim->_method_is_i32())))) {
		(*this)._method_push_err(_173559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_173549_d->_field_kind->_method_to_str()),jule::Any(_173531_t->_method_to_str())}));
	}
}



inline void _1c1ead281_Eval::_method_cast_str(jule::Ptr<_1c1ead281_Data> _175331_d,_1da81133a_Token _175341_error_token) {
	if (_175331_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1c196c834_Enum> _175521_e = _175331_d->_field_kind->_method_enm();
		if ((_175521_e->_field_kind->_field_kind->_method_prim() != nullptr) && _175521_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (_175331_d->_field_kind->_method_prim() != nullptr) {
		jule::Ptr<_1a8ad0a37_Prim> _176217_prim = _175331_d->_field_kind->_method_prim();
		if ((!(_176217_prim->_method_is_u8())) && (!(_176217_prim->_method_is_i32()))) {
			(*this)._method_push_err(_175341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_175331_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if (_175331_d->_field_kind->_method_slc() == nullptr) {
		(*this)._method_push_err(_175341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_175331_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _177417_t = _175331_d->_field_kind->_method_slc()->_field_elem;
	jule::Ptr<_1a8ad0a37_Prim> _177513_prim = _177417_t->_method_prim();
	if ((_177513_prim == nullptr) || ((!(_177513_prim->_method_is_u8())) && (!(_177513_prim->_method_is_i32())))) {
		(*this)._method_push_err(_175341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_175331_d->_field_kind->_method_to_str())}));
	}
}



inline void _1c1ead281_Eval::_method_cast_int(jule::Ptr<_1a8ad0a37_TypeKind> _178131_t,jule::Ptr<_1c1ead281_Data> _178149_d,_1da81133a_Token _178159_error_token) {
	if (_178149_d->_method_is_const()) {
		jule::Ptr<_1a8ad0a37_Prim> _178317_prim = _178131_t->_method_prim();
		{
			if (_1a8dc9a45_is_sig_int(_178317_prim->_field_kind)) {
				_case_begin_4395119408:;
				{
					_178149_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_178149_d->_field_constant->_method_as_i64()));
				}
			}
			else if (_1a8dc9a45_is_unsig_int(_178317_prim->_field_kind)) {
				_case_begin_4395119520:;
				{
					_178149_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_178149_d->_field_constant->_method_as_u64()));
				}
			}
			_match_end_4395119248:;
		}
	}
	if (_178149_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1c196c834_Enum> _179417_e = _178149_d->_field_kind->_method_enm();
		if (_1a8dc9a45_is_num(_179417_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (_178149_d->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_1a8ad0a37_Prim> _180117_prim = _178131_t->_method_prim();
		if ((!(_180117_prim->_method_is_uintptr()))) {
			(*this)._method_push_err(_178159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_178149_d->_field_kind->_method_to_str()),jule::Any(_178131_t->_method_to_str())}));
		}
		return;
	}
	if (_178149_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1a8ad0a37_Prim> _180817_prim = _178131_t->_method_prim();
		if (_180817_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_178159_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_180817_prim->_method_is_i32())) && (!(_180817_prim->_method_is_i64()))) && (!(_180817_prim->_method_is_u16()))) && (!(_180817_prim->_method_is_u32()))) && (!(_180817_prim->_method_is_u64()))) {
			(*this)._method_push_err(_178159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_178149_d->_field_kind->_method_to_str()),jule::Any(_178131_t->_method_to_str())}));
		}
		return;
	}
	jule::Ptr<_1a8ad0a37_Prim> _181913_prim = _178149_d->_field_kind->_method_prim();
	if ((_181913_prim != nullptr) && _1a8dc9a45_is_num(_181913_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_178159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_178149_d->_field_kind->_method_to_str()),jule::Any(_178131_t->_method_to_str())}));
}



inline void _1c1ead281_Eval::_method_cast_num(jule::Ptr<_1a8ad0a37_TypeKind> _182731_t,jule::Ptr<_1c1ead281_Data> _182749_d,_1da81133a_Token _182759_error_token) {
	if (_182749_d->_method_is_const()) {
		jule::Ptr<_1a8ad0a37_Prim> _182917_prim = _182731_t->_method_prim();
		{
			if (_1a8dc9a45_is_float(_182917_prim->_field_kind)) {
				_case_begin_4395155472:;
				{
					_182749_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_182749_d->_field_constant->_method_as_f64()));
				}
			}
			else if (_1a8dc9a45_is_sig_int(_182917_prim->_field_kind)) {
				_case_begin_4395155568:;
				{
					_182749_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_182749_d->_field_constant->_method_as_i64()));
				}
			}
			else if (_1a8dc9a45_is_unsig_int(_182917_prim->_field_kind)) {
				_case_begin_4395155664:;
				{
					_182749_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_182749_d->_field_constant->_method_as_u64()));
				}
			}
			_match_end_4393809792:;
		}
	}
	if (_182749_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_1c196c834_Enum> _184317_e = _182749_d->_field_kind->_method_enm();
		if (_1a8dc9a45_is_num(_184317_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ptr<_1a8ad0a37_Prim> _184913_prim = _182749_d->_field_kind->_method_prim();
	if ((_184913_prim != nullptr) && _1a8dc9a45_is_num(_184913_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_182759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_182749_d->_field_kind->_method_to_str()),jule::Any(_182731_t->_method_to_str())}));
}



inline void _1c1ead281_Eval::_method_cast_prim(jule::Ptr<_1a8ad0a37_TypeKind> _185732_t,jule::Ptr<_1c1ead281_Data> _185750_d,_1da81133a_Token _185760_error_token) {
	jule::Ptr<_1a8ad0a37_Prim> _185813_prim = _185732_t->_method_prim();
	{
		if (_185813_prim->_method_is_any()) {
			_case_begin_4395174960:;
		}
		else if (_185813_prim->_method_is_str()) {
			_case_begin_4395174464:;
			{
				(*this)._method_cast_str(_185750_d,_185760_error_token);
			}
		}
		else if (_1a8dc9a45_is_int(_185813_prim->_method_to_str())) {
			_case_begin_4395174560:;
			{
				(*this)._method_cast_int(_185732_t,_185750_d,_185760_error_token);
			}
		}
		else if (_1a8dc9a45_is_num(_185813_prim->_method_to_str())) {
			_case_begin_4395174656:;
			{
				(*this)._method_cast_num(_185732_t,_185750_d,_185760_error_token);
			}
		}
		else {
			_case_begin_4395174160:;
			{
				(*this)._method_push_err(_185760_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_185732_t->_method_to_str())}));
			}
		}
		_match_end_4395174048:;
	}
}



inline void _1c1ead281_Eval::_method_cast_constant(jule::Ptr<_1a8ad0a37_TypeKind>& _187737_t,jule::Ptr<_1c1ead281_Data>& _187756_d) {
	jule::Ptr<_1a8ad0a37_Prim> _187813_prim = _187737_t->_method_prim();
	if ((_187813_prim == nullptr) || (!(_187756_d->_method_is_const()))) {
		return;
	}
	{
		if (_1a8dc9a45_is_sig_int(_187813_prim->_field_kind)) {
			_case_begin_4395187776:;
			{
				_187756_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_187756_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_1a8dc9a45_is_unsig_int(_187813_prim->_field_kind)) {
			_case_begin_4395187872:;
			{
				_187756_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_187756_d->_field_constant->_method_as_u64()));
			}
		}
		else if (_1a8dc9a45_is_float(_187813_prim->_field_kind)) {
			_case_begin_4395187968:;
			{
				_187756_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_187756_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_4395186544:;
	}
	_187756_d->_field_model=jule::Any(_187756_d->_field_constant);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_1a8ad0a37_TypeKind> _189747_t,jule::Ptr<_1c1ead281_Data> _189765_d,_1da81133a_Token _189775_error_token) {
	if ((_189765_d != nullptr) && _189765_d->_field_decl) {
		(*this)._method_push_err(_189775_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		if ((_189765_d->_field_kind->_method_prim() != nullptr) && _189765_d->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_4395202784:;
			{
				if (_189747_t->_method_enm() != nullptr) {
					(*this)._method_push_err(_189775_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if (_189747_t->_method_ptr() != nullptr) {
			_case_begin_4395202880:;
			{
				(*this)._method_cast_ptr(_189747_t,_189765_d,_189775_error_token);
			}
		}
		else if (_189747_t->_method_sptr() != nullptr) {
			_case_begin_4395200704:;
			{
				(*this)._method_cast_ref(_189747_t,_189765_d,_189775_error_token);
			}
		}
		else if (_189747_t->_method_slc() != nullptr) {
			_case_begin_4395200800:;
			{
				(*this)._method_cast_slc(_189747_t,_189765_d,_189775_error_token);
			}
		}
		else if (_189747_t->_method_strct() != nullptr) {
			_case_begin_4395200896:;
			{
				(*this)._method_cast_struct(_189747_t,_189765_d,_189775_error_token);
			}
		}
		else if (_189747_t->_method_prim() != nullptr) {
			_case_begin_4395200992:;
			{
				(*this)._method_cast_prim(_189747_t,_189765_d,_189775_error_token);
			}
		}
		else {
			_case_begin_4395198224:;
			{
				(*this)._method_push_err(_189775_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_189747_t->_method_to_str())}));
				_189765_d=nullptr;
			}
		}
		_match_end_4395200080:;
	}
	if (_189765_d == nullptr) {
		return nullptr;
	}
	_189765_d->_field_mutable=_189765_d->_field_mutable || ((!(_189765_d->_field_kind->_method_mutable())) && _189747_t->_method_mutable());
	_189765_d->_field_lvalue=false;
	_189765_d->_field_decl=false;
	(*this)._method_cast_constant(_189747_t,_189765_d);
	if ((_189765_d->_field_kind->_method_enm() == nullptr) || (!(_189765_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_equals(_189747_t)))) {
		_189765_d->_field_cast_kind=_189747_t;
	} else {
		_189765_d->_field_kind=_189747_t;
	}
	return _189765_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_cast(jule::Ptr<_1da7b8e5d_CastExpr> _195233_c) {
	jule::Ptr<_1a8ad0a37_TypeSymbol> _195317_t = _1c18c86d5_build_type(_195233_c->_field_kind);
	jule::Bool _195413_ok = this->self->_field_s->_method_check_type(_195317_t,this->self->_field_lookup);
	if ((!(_195413_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _195917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_195917_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _196317_d = this->self->_method_eval_expr_kind(_195233_c->_field_expr);
	if (_196317_d == nullptr) {
		return nullptr;
	}
	return this->self->_method_eval_cast_by_type_n_data(_195317_t->_field_kind,_196317_d,_195233_c->_field_kind->_field_token);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_ns_selection(jule::Ptr<_1da7b8e5d_NsSelectionExpr> _197136_s) {
	jule::Str _197213_path = _1a8ad0a37_build_link_path_by_tokens(_197136_s->_field_ns);
	jule::Ptr<_1c1b398be_ImportInfo> _197317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>([=](jule::Ptr<_1c1b398be_ImportInfo> _197353_imp) mutable -> jule::Bool {
		if ((_197136_s->_field_ns.len() == 1LL) && (_197353_imp->_field_alias == _197213_path)) {
			return true;
		}
		return (_197353_imp->_field_link_path == _197213_path) && _197353_imp->_method_is_accessible_via_selection();
	}));
	if (_197317_imp == nullptr) {
		(*this)._method_push_err(_197136_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_197213_path)}));
		return nullptr;
	}
	jule::Trait<_1a8be79c8_Lookup> _198517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_197317_imp;
	
	(*this)._method_disallow_builtin();
	jule::Any _199017_def = (*this)._method_get_def(_197136_s->_field_ident._field_kind,false);
	(*this)._method_allow_builtin();
	(*this)._field_lookup=_198517_lookup;
	jule::Ptr<_1c1ead281_Data> _199417_d = (*this)._method_eval_def(_199017_def,_197136_s->_field_ident);
	return _199417_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_1db4a7e59_StructIns> _199948_s,jule::Slice<jule::Any> _200013_exprs,_1da81133a_Token _200036_error_token) {
	jule::Bool _200113_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_199948_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_199948_s->_field_generics.len()),_200036_error_token);
	if ((!(_200113_ok))) {
		return nullptr;
	}
	this->self->_method_push_reference_to_struct(_199948_s);
	this->self->_method_check_deprecated(_199948_s->_field_decl->_field_directives,_200036_error_token);
	_1c1d617a5_StructLitChecker _201017_slc = _1c1d617a5_StructLitChecker(this->self,_200036_error_token,_199948_s,jule::Slice<jule::Ptr<_1c19727a1_StructArgExprModel>>());
	_201017_slc._method_check(_200013_exprs);
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_199948_s)),jule::Ptr<_1a8ad0a37_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_StructLitExprModel>(new( std::nothrow ) _1c19727a1_StructLitExprModel(_199948_s,_201017_slc._field_args))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_struct_lit(jule::Ptr<_1da7b8e5d_StructLit> _202739_lit) {
	jule::Ptr<_1a8ad0a37_TypeSymbol> _202817_t = _1c18c86d5_build_type(_202739_lit->_field_kind);
	jule::Bool _202913_ok = this->self->_field_s->_method_check_type(_202817_t,this->self->_field_lookup);
	if ((!(_202913_ok))) {
		return nullptr;
	}
	jule::Ptr<_1db4a7e59_StructIns> _203417_s = _202817_t->_field_kind->_method_strct();
	if (_203417_s == nullptr) {
		if (_202817_t->_field_kind->_method_sptr() != nullptr) {
			_203417_s=_202817_t->_field_kind->_method_sptr()->_field_elem->_method_strct();
			if (_203417_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_202739_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1c1ead281_Data> _204717_d = this->self->_method_eval_struct_lit_explicit(_203417_s,_202739_lit->_field_exprs,_202739_lit->_field_kind->_field_token);
	if (_202817_t->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_1c19727a1_StructLitExprModel> _204921_model = _204717_d->_field_model.operator jule::Ptr<_1c19727a1_StructLitExprModel>();
		_1c1ead281_make_struct_lit_alloc(_204717_d,_204921_model);
	}
	return _204717_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_type(jule::Ptr<_1da7b8e5d_TypeDecl> _205532_t) {
	jule::Ptr<_1a8ad0a37_TypeSymbol> _205617_tk = _1c18c86d5_build_type(_205532_t);
	jule::Bool _205713_ok = (*this)._field_s->_method_check_type(_205617_tk,(*this)._field_lookup);
	if ((!(_205713_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(_205617_tk->_field_kind,jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_205617_tk->_field_kind),true,jule::Ptr<_1a8d46165_Const>()));
}



inline void _1c1ead281_Eval::_method_call_type_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>& _206937_fc,jule::Ptr<_1c1ead281_Data>& _206959_d) {
	if (_206937_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_206937_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_206959_d->_field_kind->_method_to_str())}));
	} else if (_206937_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_206937_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_206937_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_206937_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	if (_206937_fc->_field_args.len() > 0LL) {
		jule::Ptr<_1c1ead281_Data> _207921_arg = this->self->_method_eval_expr_kind(_206937_fc->_field_args[0LL]->_field_kind);
		if (_207921_arg != nullptr) {
			_206959_d=this->self->_method_eval_cast_by_type_n_data(_206959_d->_field_kind,_207921_arg,_206937_fc->_field_args[0LL]->_field_token);
		}
	}
	if (_206959_d != nullptr) {
		_206959_d->_field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1c1ead281_Eval::_method_check_fn_call_generics(jule::Ptr<_1c17e2687_FnIns> _209145_f,jule::Ptr<_1da7b8e5d_FnCallExpr> _209213_fc) {
	jule::Bool _209232_ok = jule::Bool();
	jule::Bool _209242_dynamic_annotation = jule::Bool();
	{
		if (((_209145_f->_field_decl->_field_generics.len() > 0LL) && (_209213_fc->_field_generics.len() == 0LL)) && (_209145_f->_field_params.len() > 0LL)) {
			_case_begin_4395317232:;
			{
				_209242_dynamic_annotation=true;
				_209145_f->_field_generics=jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>::alloc(static_cast<jule::I64>(_209145_f->_field_decl->_field_generics.len()));
				_209232_ok = true;
				_209242_dynamic_annotation = true;
				return std::make_tuple(_209232_ok,_209242_dynamic_annotation);
			}
		}
		else if ((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_209145_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_209213_fc->_field_generics.len()),_209213_fc->_field_token)))) {
			_case_begin_4395317328:;
			{
				_209232_ok = false;
				_209242_dynamic_annotation = false;
				return std::make_tuple(_209232_ok,_209242_dynamic_annotation);
			}
		}
		else {
			_case_begin_4395307808:;
			{
				_209145_f->_field_generics=jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_209145_f->_field_decl->_field_generics.len()));
				{
					auto &expr = _209213_fc->_field_generics;
					auto it = expr.begin();
					_iter_begin_4395309360:;
					if (it != expr.end()) {
						jule::Ptr<_1da7b8e5d_TypeDecl> _1c1ead281_g = *it;
						{
							jule::Ptr<_1a8ad0a37_TypeSymbol> _210725_k = _1c18c86d5_build_type(_1c1ead281_g);
							_209232_ok=(*this)._field_s->_method_check_type(_210725_k,(*this)._field_lookup);
							if ((!(_209232_ok))) {
								_209232_ok = false;
								_209242_dynamic_annotation = false;
								return std::make_tuple(_209232_ok,_209242_dynamic_annotation);
							}
							_209145_f->_field_generics = jule::alloc_for_append(_209145_f->_field_generics,1);_209145_f->_field_generics.push(_210725_k->_field_kind);
						}
						_iter_next_4395309360:;
						++it;
						goto _iter_begin_4395309360;
					}
					_iter_end_4395309360:;
				}
				_209232_ok = true;
				_209242_dynamic_annotation = false;
				return std::make_tuple(_209232_ok,_209242_dynamic_annotation);
			}
		}
		_match_end_4395307664:;
	}
}



inline void _1c1ead281_Eval::_method_call_builtin_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>& _211940_fc,jule::Ptr<_1c1ead281_Data>& _211962_d) {
	_211962_d=_1a8c0ca10_find_builtin_caller(_211962_d->_field_kind->_method_fnc()->_field_caller)(this->self,_211940_fc,_211962_d);
	if (_211962_d == nullptr) {
		return;
	}
	_211962_d->_field_mutable=true;
}



inline void _1c1ead281_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_1c17e2687_FnIns>& _212847_f,_1da81133a_Token _212858_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &expr = _212847_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4395330640:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> &_1c1ead281_p = *it;
			{
				if (_1c1ead281_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_212858_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_4395330640:;
			++it;
			goto _iter_begin_4395330640;
		}
		_iter_end_4395330640:;
	}
}



inline void _1c1ead281_Eval::_method_process_exceptional_handler(jule::Ptr<_1c17e2687_FnIns>& _214151_f,jule::Ptr<_1da7b8e5d_FnCallExpr>& _214167_fc,jule::Ptr<_1c1ead281_Data>& _214189_d) {
	jule::Bool _214213_result_needed = (!(_214151_f->_field_decl->_method_is_void())) && (!((*this)._field_ignored));
	jule::Ptr<_1c197a248_ScopeChecker> _214317_csc = nullptr;
	jule::Ptr<_1c197a248_Scope> _214417_ch = nullptr;
	jule::Ptr<_1c19727a1_FnCallExprModel> _214617_model = _214189_d->_field_model.operator jule::Ptr<_1c19727a1_FnCallExprModel>();
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c1b18a24_Sema>>()) {
			_case_begin_4395340864:;
			{
				jule::Ptr<_1c1b18a24_Sema> _215021_s = (*this)._field_lookup.operator jule::Ptr<_1c1b18a24_Sema>();
				_214317_csc=_1c197a248_new_scope_checker(_215021_s,nullptr);
				if (_214213_result_needed) {
					_214317_csc->_field_result=_214151_f->_field_result;
				}
				_214417_ch=jule::new_struct<_1c197a248_Scope>(new( std::nothrow ) _1c197a248_Scope());
				_214317_csc->_field_table->_field_vars = jule::alloc_for_append(_214317_csc->_field_table->_field_vars,1);_214317_csc->_field_table->_field_vars.push(_1c1ead281_build_error_var(_214417_ch,_214167_fc));
				_214317_csc->_method_check(_214167_fc->_field_exception,_214417_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4395341920:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _216021_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>();
				_214317_csc=_216021_sc->_method_new_child_checker();
				if (_214213_result_needed) {
					_214317_csc->_field_result=_214151_f->_field_result;
				}
				_214417_ch=_216021_sc->_method_get_child();
				_214317_csc->_field_table->_field_vars = jule::alloc_for_append(_214317_csc->_field_table->_field_vars,1);_214317_csc->_field_table->_field_vars.push(_1c1ead281_build_error_var(_214417_ch,_214167_fc));
				_216021_sc->_method_check_child_ssc(_214167_fc->_field_exception,_214417_ch,_214317_csc);
			}
		}
		_match_end_4395341648:;
	}
	_214617_model->_field_assigned=_214213_result_needed;
	_214617_model->_field_except=_214417_ch;
	if (_214213_result_needed && (_214317_csc->_field_result != nullptr)) {
		(*this)._method_push_err(_214167_fc->_field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1c1ead281_Eval::_method_call_fn(jule::Ptr<_1da7b8e5d_FnCallExpr>& _217832_fc,jule::Ptr<_1c1ead281_Data>& _217854_d) {
	jule::Ptr<_1c17e2687_FnIns> _217917_f = _217854_d->_field_kind->_method_fnc();
	if (_217917_f->_method_is_builtin()) {
		this->self->_method_call_builtin_fn(_217832_fc,_217854_d);
		return;
	}
	if ((((!(_217854_d->_field_mutable)) && _217917_f->_field_decl->_method_is_method()) && (!(_217917_f->_field_decl->_field_statically))) && _217917_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_217832_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	} else if ((!(this->self->_method_is_unsafe())) && _217917_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_217832_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _219118_ok;
	jule::Bool _219122_dynamic_annotation;
	std::tie(_219118_ok,_219122_dynamic_annotation) = this->self->_method_check_fn_call_generics(_217917_f,_217832_fc);
	if ((!(_219118_ok))) {
		_217854_d=nullptr;
		return;
	}
	jule::Ptr<_1c1b18a24_Sema> _219717_old = this->self->_field_s;
	if (_217917_f->_field_decl->_field_owner != nullptr) {
		this->self->_field_s=_217917_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (_219717_old != this->self->_field_s) {
			_219717_old->_field_errors=jule::append(_219717_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_219717_old;
	});
	if ((!(_219122_dynamic_annotation))) {
		if ((!(_217917_f->_field_reloaded))) {
			_219118_ok=this->self->_field_s->_method_reload_fn_ins_types(_217917_f);
			if ((!(_219118_ok))) {
				_217854_d=nullptr;
				return;
			}
			_217917_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_217917_f);
	}
	_1c1d617a5_FnCallArgChecker _222317_fcac = _1c1d617a5_FnCallArgChecker(this->self,_217832_fc->_field_args,_217832_fc->_field_token,_217917_f,_219122_dynamic_annotation,jule::Slice<jule::Any>());
	if (_217917_f->_field_decl->_field_owner != nullptr) {
		std::tie(_219717_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_219717_old);
		_219118_ok=_222317_fcac._method_check();
		std::tie(_219717_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_219717_old);
	} else {
		_219118_ok=_222317_fcac._method_check();
	}
	if ((!(_219118_ok)) && _219122_dynamic_annotation) {
		_217854_d=nullptr;
		return;
	}
	jule::Bool _224314_is_unique_ins;
	jule::Int _224329_pos;
	std::tie(_224314_is_unique_ins,_224329_pos) = _217917_f->_field_decl->_method_append_instance(_217917_f);
	if ((!(_224314_is_unique_ins))) {
		_217917_f=_217917_f->_field_decl->_field_instances[_224329_pos];
	}
	jule::Any _224817_call_model = _217854_d->_field_model;
	if (_217917_f->_field_decl->_method_is_void()) {
		_217854_d=_1c1ead281_build_void_data();
	} else {
		if (_219122_dynamic_annotation) {
			_219118_ok=this->self->_field_s->_method_reload_fn_ins_types(_217917_f);
			if ((!(_219118_ok))) {
				_217854_d=nullptr;
				return;
			}
			_217917_f->_field_reloaded=true;
		}
		_217854_d->_field_kind=_217917_f->_field_result;
		_217854_d->_field_lvalue=false;
	}
	_217854_d->_field_mutable=true;
	_217854_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_FnCallExprModel>(new( std::nothrow ) _1c19727a1_FnCallExprModel(_217832_fc->_field_token,_217917_f,jule::Bool(),_224817_call_model,_222317_fcac._field_arg_models,jule::Ptr<_1c197a248_Scope>(),jule::Bool())));
	if (_217917_f->_field_decl->_field_exceptional) {
		{
			if (_217832_fc->_method_unhandled()) {
				_case_begin_4395393856:;
				{
					this->self->_method_push_err(_217832_fc->_field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					this->self->_method_push_suggestion(jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_217832_fc->_method_ignored()) {
				_case_begin_4395393360:;
			}
			else {
				_case_begin_4395393056:;
				{
					this->self->_method_process_exceptional_handler(_217917_f,_217832_fc,_217854_d);
				}
			}
			_match_end_4395392880:;
		}
	} else if ((!(_217832_fc->_method_unhandled()))) {
		this->self->_method_push_err(_217832_fc->_field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_217917_f->_field_generics.len() > 0LL) && _224314_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_217917_f);
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_fn_call(jule::Ptr<_1da7b8e5d_FnCallExpr> _229636_fc) {
	jule::Ptr<_1a8ad0a37_TypeKind> _229717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_229717_prefix;
	});
	{
		auto &_match_expr{ _229636_fc->_field_expr->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
			_case_begin_4395404896:;
			{
				if (_229636_fc->_field_expr->_field_token._field_kind == jule::Str("error", 5)) {
					return _1a8c0ca10_builtin_caller_error(this->self,_229636_fc);
				}
			}
		}
		_match_end_4395403776:;
	}
	jule::Ptr<_1c1ead281_Data> _231017_d = this->self->_method_eval_expr_kind(_229636_fc->_field_expr->_field_kind);
	if (_231017_d == nullptr) {
		return nullptr;
	}
	if (_231017_d->_field_decl) {
		this->self->_method_call_type_fn(_229636_fc,_231017_d);
		return _231017_d;
	}
	if (_231017_d->_field_kind->_method_fnc() == nullptr) {
		this->self->_method_push_err(_229636_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	this->self->_method_call_fn(_229636_fc,_231017_d);
	return _231017_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_enum_static(jule::Ptr<_1c196c834_Enum> _232939_enm,_1da81133a_Token _232951_ident) {
	jule::Ptr<_1c1ead281_Data> _233017_d = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_232939_enm)),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a8d46165_Const>()));
	jule::Ptr<_1c196c834_EnumItem> _233717_item = _232939_enm->_method_find_item(_232951_ident._field_kind);
	if (_233717_item == nullptr) {
		(*this)._method_push_err(_232951_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_232951_ident._field_kind)}));
	} else {
		_233017_d->_field_constant=jule::new_ptr<_1a8d46165_Const>((*(_233717_item->_field_value->_field_data->_field_constant)));
		_233017_d->_field_model=jule::Any(_233017_d->_field_constant);
	}
	return _233017_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_struct_static(jule::Ptr<_1db4a7e59_StructIns> _234841_s,_1da81133a_Token _234856_ident) {
	jule::Ptr<_1c1ead281_Data> _234917_d = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a8d46165_Const>()));
	
	jule::Ptr<_1c17e2687_Fn> _235717_method = _234841_s->_method_find_method(_234856_ident._field_kind,true);
	if (_235717_method != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_235717_method->_field_public,_235717_method->_field_token)))) {
			(*this)._method_push_err(_234856_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_234856_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1c17e2687_FnIns> _236421_ins = _235717_method->_method_instance();
		_236421_ins->_field_owner=_234841_s;
		(*this)._method_push_reference_to_fn(_236421_ins);
		_234917_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_StructStaticIdentExprModel>(new( std::nothrow ) _1c19727a1_StructStaticIdentExprModel(_234841_s,_234917_d->_field_model,_236421_ins)));
		_234917_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_236421_ins));
		return _234917_d;
	}
	jule::Ptr<_1c1b58316_Var> _237617_sttc = _234841_s->_field_decl->_method_find_static(_234856_ident._field_kind);
	if (_237617_sttc != nullptr) {
		return (*this)._method_eval_var(_237617_sttc,_234856_ident);
	}
	(*this)._method_push_err(_234856_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_234856_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_trait_sub_ident(jule::Ptr<_1c1ead281_Data> _238543_d,jule::Ptr<_1c196b2a0_Trait> _238557_trt,_1da81133a_Token _238570_ident) {
	jule::Ptr<_1c17e2687_Fn> _238617_f = _238557_trt->_method_find_method(_238570_ident._field_kind);
	if (_238617_f == nullptr) {
		(*this)._method_push_err(_238570_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_238570_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_238617_f->_method_instance())),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_TraitSubIdentExprModel>(new( std::nothrow ) _1c19727a1_TraitSubIdentExprModel(_238543_d->_field_model,_238570_ident._field_kind))),false,jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_struct_sub_ident(jule::Ptr<_1c1ead281_Data> _240444_d,jule::Ptr<_1db4a7e59_StructIns> _240458_s,jule::Ptr<_1da7b8e5d_SubIdentExpr> _240473_si,jule::Bool _240492_ref) {
	jule::Ptr<_1db4a7e59_FieldIns> _240517_f = _240458_s->_method_find_field(_240473_si->_field_ident._field_kind);
	if (_240517_f != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_240517_f->_field_decl->_field_public,_240517_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_240473_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_240517_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1c19727a1_StructSubIdentExprModel> _241221_model = jule::new_struct<_1c19727a1_StructSubIdentExprModel>(new( std::nothrow ) _1c19727a1_StructSubIdentExprModel(_240444_d->_field_model,_240444_d->_field_kind,jule::Ptr<_1c17e2687_FnIns>(),_240517_f));
		_240444_d->_field_model=jule::Any(_241221_model);
		_240444_d->_field_kind=_240517_f->_field_kind;
		_240444_d->_field_lvalue=true;
		if (_240517_f->_field_decl->_field_mutable && (!(_240444_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
					_case_begin_4395464960:;
					{
						jule::Ptr<_1c197a248_ScopeChecker> _242525_scope = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>()->_method_get_root();
						_240444_d->_field_mutable=(_242525_scope->_field_owner != nullptr) && (_242525_scope->_field_owner->_field_owner == _240458_s);
						if (_240444_d->_field_mutable) {
							jule::Ptr<_1c1b58316_Var> _242833_field = _241221_model->_field_expr.operator jule::Ptr<_1c1b58316_Var>();
							jule::Ptr<_1c1b58316_Var> _242933_v = jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(_242833_field->_field_scope,_242833_field->_field_token,_242833_field->_field_ident,_242833_field->_field_cpp_linked,_242833_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_242833_field->_field_kind,_242833_field->_field_value,jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
							_242933_v->_field_mutable=true;
							_241221_model->_field_expr=jule::Any(_242933_v);
						}
					}
				}
				_match_end_4395465120:;
			}
		}
		return _240444_d;
	}
	
	jule::Ptr<_1c17e2687_Fn> _244817_m = _240458_s->_method_find_method(_240473_si->_field_ident._field_kind,false);
	if (_244817_m == nullptr) {
		(*this)._method_push_err(_240473_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_240473_si->_field_ident._field_kind)}));
		return nullptr;
	}
	if (_244817_m->_field_params[0LL]->_method_is_ref() && (!(_240492_ref))) {
		(*this)._method_push_err(_240473_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	(*this)._method_check_deprecated(_244817_m->_field_directives,_240473_si->_field_ident);
	jule::Ptr<_1c17e2687_FnIns> _246017_ins = _244817_m->_method_instance();
	_246017_ins->_field_owner=_240458_s;
	(*this)._method_push_reference_to_fn(_246017_ins);
	_240444_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_StructSubIdentExprModel>(new( std::nothrow ) _1c19727a1_StructSubIdentExprModel(_240444_d->_field_model,_240444_d->_field_kind,_246017_ins,jule::Ptr<_1db4a7e59_FieldIns>())));
	_240444_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_246017_ins));
	return _240444_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_slice_sub_ident(jule::Ptr<_1c1ead281_Data> _247243_d,_1da81133a_Token _247253_ident) {
	{
		auto &_match_expr{ _247253_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_4395490272:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_247243_d->_field_kind,_247243_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_4395490464:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_247243_d->_field_kind,_247243_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_4395490560:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("i", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))))),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("j", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3))))))}),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_247243_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_247243_d->_field_kind,_247243_d->_field_model,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4395487312:;
			{
				(*this)._method_push_err(_247253_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_247253_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395487632:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_array_sub_ident(jule::Ptr<_1c1ead281_Data> _253143_d,_1da81133a_Token _253153_ident) {
	{
		auto &_match_expr{ _253153_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_4395506752:;
			{
				jule::Ptr<_1a8d46165_Const> _253421_c = _1a8d46165_Const::_static_method_new_i64(static_cast<jule::I64>(_253143_d->_field_kind->_method_arr()->_field_n));
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_253421_c),jule::Bool(),_253421_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_4395506944:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("i", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))))),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("j", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3))))))}),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_253143_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_253143_d->_field_kind,_253143_d->_field_model,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4395503792:;
			{
				(*this)._method_push_err(_253153_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_253153_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395504112:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_map_sub_ident(jule::Ptr<_1c1ead281_Data> _257741_d,_1da81133a_Token _257751_ident) {
	jule::Ptr<_1a8ad0a37_Map> _257817_map_kind = _257741_d->_field_kind->_method_map();
	{
		auto &_match_expr{ _257751_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_4395519920:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_4395520016:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_257741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_4395520112:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_257817_map_kind->_field_key)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_257741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_4395520208:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_257817_map_kind->_field_val)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_257741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_4394801472:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("key", 3))),_257817_map_kind->_field_key))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_257741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_4394801568:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("key", 3))),_257817_map_kind->_field_key))}),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),_257741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_257741_d->_field_kind,_257741_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4395518656:;
			{
				(*this)._method_push_err(_257751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_257751_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395519632:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_str_sub_ident(jule::Ptr<_1c1ead281_Data> _270041_d,_1da81133a_Token _270051_ident) {
	jule::Ptr<_1a8ad0a37_TypeKind> _270117_str_kind = jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("str", 3))));
	{
		auto &_match_expr{ _270051_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_4395547360:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has_prefix", 10)) {
			_case_begin_4395549152:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has_suffix", 10)) {
			_case_begin_4395548880:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("find", 4)) {
			_case_begin_4395548976:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("rfind", 5)) {
			_case_begin_4395546928:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("trim", 4)) {
			_case_begin_4395547024:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("bytes", 5))),_270117_str_kind))}),_270117_str_kind,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("ltrim", 5)) {
			_case_begin_4395547120:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("bytes", 5))),_270117_str_kind))}),_270117_str_kind,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("rtrim", 5)) {
			_case_begin_4395547216:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("bytes", 5))),_270117_str_kind))}),_270117_str_kind,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("split", 5)) {
			_case_begin_4395549568:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind)),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_270117_str_kind)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("replace", 7)) {
			_case_begin_4395549664:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("sub", 3))),_270117_str_kind)),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("new", 3))),_270117_str_kind)),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))))))}),_270117_str_kind,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_CommonSubIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonSubIdentExprModel(_270041_d->_field_kind,_270041_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4395545136:;
			{
				(*this)._method_push_err(_270051_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_270051_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395546560:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_int_type_static(_1da81133a_Token _294939_ident) {
	
	{
		auto &_match_expr{ _294939_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395596016:;
			{
				jule::Ptr<_1a8d46165_Const> _295421_c = _1a8d46165_Const::_static_method_new_i64(static_cast<jule::I64>(_1a8d4e338_max(jule::Str("int", 3))));
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295421_c),jule::Bool(),_295421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395596112:;
			{
				jule::Ptr<_1a8d46165_Const> _296221_c = _1a8d46165_Const::_static_method_new_i64(static_cast<jule::I64>(_1a8d4e338_min(jule::Str("int", 3))));
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_296221_c),jule::Bool(),_296221_c));
			}
		}
		else {
			_case_begin_4395592272:;
			{
				(*this)._method_push_err(_294939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_294939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395593008:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_uint_type_static(_1da81133a_Token _297540_ident) {
	
	{
		auto &_match_expr{ _297540_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395608400:;
			{
				jule::Ptr<_1a8d46165_Const> _298021_c = _1a8d46165_Const::_static_method_new_u64(static_cast<jule::U64>(_1a8d4e338_max(jule::Str("uint", 4))));
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298021_c),jule::Bool(),_298021_c));
			}
		}
		else {
			_case_begin_4395604656:;
			{
				(*this)._method_push_err(_297540_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_297540_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395605392:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_i8_type_static(_1da81133a_Token _299338_ident) {
	
	
	
	{
		auto &_match_expr{ _299338_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395619248:;
			{
				jule::Ptr<_1a8d46165_Const> _300021_c = _1a8d46165_Const::_static_method_new_i64(127LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_300021_c),jule::Bool(),_300021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395619344:;
			{
				jule::Ptr<_1a8d46165_Const> _300821_c = _1a8d46165_Const::_static_method_new_i64(-128LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_300821_c),jule::Bool(),_300821_c));
			}
		}
		else {
			_case_begin_4395614944:;
			{
				(*this)._method_push_err(_299338_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_299338_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395616224:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_i16_type_static(_1da81133a_Token _302139_ident) {
	
	
	
	{
		auto &_match_expr{ _302139_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395649008:;
			{
				jule::Ptr<_1a8d46165_Const> _302821_c = _1a8d46165_Const::_static_method_new_i64(32767LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302821_c),jule::Bool(),_302821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395649104:;
			{
				jule::Ptr<_1a8d46165_Const> _303621_c = _1a8d46165_Const::_static_method_new_i64(-32768LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_303621_c),jule::Bool(),_303621_c));
			}
		}
		else {
			_case_begin_4395628192:;
			{
				(*this)._method_push_err(_302139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_302139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395629472:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_i32_type_static(_1da81133a_Token _304939_ident) {
	
	
	
	{
		auto &_match_expr{ _304939_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395662896:;
			{
				jule::Ptr<_1a8d46165_Const> _305621_c = _1a8d46165_Const::_static_method_new_i64(2147483647LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_305621_c),jule::Bool(),_305621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395662992:;
			{
				jule::Ptr<_1a8d46165_Const> _306421_c = _1a8d46165_Const::_static_method_new_i64(-2147483648LL);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_306421_c),jule::Bool(),_306421_c));
			}
		}
		else {
			_case_begin_4395659744:;
			{
				(*this)._method_push_err(_304939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_304939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395659888:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_i64_type_static(_1da81133a_Token _307739_ident) {
	
	
	
	{
		auto &_match_expr{ _307739_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395676016:;
			{
				jule::Ptr<_1a8d46165_Const> _308421_c = _1a8d46165_Const::_static_method_new_i64(jule::MAX_I64);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_308421_c),jule::Bool(),_308421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395676112:;
			{
				jule::Ptr<_1a8d46165_Const> _309221_c = _1a8d46165_Const::_static_method_new_i64(jule::MIN_I64);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_309221_c),jule::Bool(),_309221_c));
			}
		}
		else {
			_case_begin_4395672864:;
			{
				(*this)._method_push_err(_307739_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_307739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395673008:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_u8_type_static(_1da81133a_Token _310538_ident) {
	
	
	{
		auto &_match_expr{ _310538_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395688288:;
			{
				jule::Ptr<_1a8d46165_Const> _311121_c = _1a8d46165_Const::_static_method_new_u64(255LLU);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_311121_c),jule::Bool(),_311121_c));
			}
		}
		else {
			_case_begin_4395683904:;
			{
				(*this)._method_push_err(_310538_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_310538_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395685200:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_u16_type_static(_1da81133a_Token _312439_ident) {
	
	
	{
		auto &_match_expr{ _312439_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395697616:;
			{
				jule::Ptr<_1a8d46165_Const> _313021_c = _1a8d46165_Const::_static_method_new_u64(65535LLU);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_313021_c),jule::Bool(),_313021_c));
			}
		}
		else {
			_case_begin_4395693232:;
			{
				(*this)._method_push_err(_312439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_312439_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395694528:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_u32_type_static(_1da81133a_Token _314339_ident) {
	
	
	{
		auto &_match_expr{ _314339_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395706944:;
			{
				jule::Ptr<_1a8d46165_Const> _314921_c = _1a8d46165_Const::_static_method_new_u64(4294967295LLU);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_314921_c),jule::Bool(),_314921_c));
			}
		}
		else {
			_case_begin_4395702560:;
			{
				(*this)._method_push_err(_314339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_314339_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395703856:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_u64_type_static(_1da81133a_Token _316239_ident) {
	
	
	{
		auto &_match_expr{ _316239_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395716208:;
			{
				jule::Ptr<_1a8d46165_Const> _316821_c = _1a8d46165_Const::_static_method_new_u64(jule::MAX_U64);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_316821_c),jule::Bool(),_316821_c));
			}
		}
		else {
			_case_begin_4395711888:;
			{
				(*this)._method_push_err(_316239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_316239_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395713120:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_f32_type_tatic(_1da81133a_Token _318138_ident) {
	
	
	
	{
		auto &_match_expr{ _318138_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395726320:;
			{
				jule::Ptr<_1a8d46165_Const> _318821_c = _1a8d46165_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_318821_c),jule::Bool(),_318821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395726416:;
			{
				jule::Ptr<_1a8d46165_Const> _319621_c = _1a8d46165_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_319621_c),jule::Bool(),_319621_c));
			}
		}
		else {
			_case_begin_4395722192:;
			{
				(*this)._method_push_err(_318138_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_318138_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395723296:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_f64_type_static(_1da81133a_Token _320939_ident) {
	
	
	
	{
		auto &_match_expr{ _320939_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_4395739120:;
			{
				jule::Ptr<_1a8d46165_Const> _321621_c = _1a8d46165_Const::_static_method_new_f64(jule::MAX_F64);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_321621_c),jule::Bool(),_321621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_4395739216:;
			{
				jule::Ptr<_1a8d46165_Const> _322421_c = _1a8d46165_Const::_static_method_new_f64(jule::MIN_F64);
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_322421_c),jule::Bool(),_322421_c));
			}
		}
		else {
			_case_begin_4395735968:;
			{
				(*this)._method_push_err(_320939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_320939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395736112:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_prim_static(jule::Str _323735_kind,_1da81133a_Token _323746_ident) {
	{
		auto &_match_expr{ _323735_kind };
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_4395750112:;
			{
				return (*this)._method_eval_int_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_4395750208:;
			{
				return (*this)._method_eval_uint_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_4395749728:;
			{
				return (*this)._method_eval_i8_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_4395749824:;
			{
				return (*this)._method_eval_i16_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_4395749920:;
			{
				return (*this)._method_eval_i32_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_4395747552:;
			{
				return (*this)._method_eval_i64_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_4395747648:;
			{
				return (*this)._method_eval_u8_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_4395747744:;
			{
				return (*this)._method_eval_u16_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_4395747840:;
			{
				return (*this)._method_eval_u32_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_4395750336:;
			{
				return (*this)._method_eval_u64_type_static(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_4395750432:;
			{
				return (*this)._method_eval_f32_type_tatic(_323746_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_4395750528:;
			{
				return (*this)._method_eval_f64_type_static(_323746_ident);
			}
		}
		else {
			_case_begin_4395746960:;
			{
				(*this)._method_push_err(_323746_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_323735_kind),jule::Any(_323746_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4395747056:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_type_static(jule::Ptr<_1c1ead281_Data> _325739_d,jule::Ptr<_1da7b8e5d_SubIdentExpr> _325753_si) {
	{
		if (_325739_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_4395767904:;
			{
				return (*this)._method_eval_prim_static(_325739_d->_field_kind->_method_prim()->_method_to_str(),_325753_si->_field_ident);
			}
		}
		else if (_325739_d->_field_kind->_method_enm() != nullptr) {
			_case_begin_4395770688:;
			{
				return (*this)._method_eval_enum_static(_325739_d->_field_kind->_method_enm(),_325753_si->_field_ident);
			}
		}
		else if (_325739_d->_field_kind->_method_strct() != nullptr) {
			_case_begin_4395770784:;
			{
				return (*this)._method_eval_struct_static(_325739_d->_field_kind->_method_strct(),_325753_si->_field_ident);
			}
		}
		else {
			_case_begin_4395767104:;
			{
				(*this)._method_push_err(_325753_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_325739_d->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4395766960:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_obj_sub_ident(jule::Ptr<_1c1ead281_Data> _327441_d,jule::Ptr<_1da7b8e5d_SubIdentExpr> _327455_si) {
	jule::Ptr<_1a8ad0a37_TypeKind> _327517_kind = _327441_d->_field_kind;
	if (_327441_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_1a8ad0a37_Ptr> _327717_ptr = _327441_d->_field_kind->_method_ptr();
		if ((!(_327717_ptr->_method_is_unsafe()))) {
			if ((!(_327455_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_327455_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			_327517_kind=_327441_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (_327441_d->_field_kind->_method_sptr() != nullptr) {
		_327517_kind=_327441_d->_field_kind->_method_sptr()->_field_elem;
	}
	{
		if (_327441_d->_field_kind->_method_trt() != nullptr) {
			_case_begin_4395788336:;
			{
				return (*this)._method_eval_trait_sub_ident(_327441_d,_327441_d->_field_kind->_method_trt(),_327455_si->_field_ident);
			}
		}
		else if (_327517_kind->_method_strct() != nullptr) {
			_case_begin_4395788432:;
			{
				jule::Ptr<_1db4a7e59_StructIns> _329317_s = _327517_kind->_method_strct();
				if (_1c1ead281_is_instanced_struct(_329317_s)) {
					jule::Bool _329525_used_reference_elem = _327441_d->_field_kind->_method_sptr() != nullptr;
					return (*this)._method_eval_struct_sub_ident(_327441_d,_327517_kind->_method_strct(),_327455_si,_329525_used_reference_elem);
				}
			}
		}
		else if (_327517_kind->_method_slc() != nullptr) {
			_case_begin_4395788528:;
			{
				return (*this)._method_eval_slice_sub_ident(_327441_d,_327455_si->_field_ident);
			}
		}
		else if (_327517_kind->_method_arr() != nullptr) {
			_case_begin_4395788624:;
			{
				return (*this)._method_eval_array_sub_ident(_327441_d,_327455_si->_field_ident);
			}
		}
		else if (_327517_kind->_method_map() != nullptr) {
			_case_begin_4395788720:;
			{
				return (*this)._method_eval_map_sub_ident(_327441_d,_327455_si->_field_ident);
			}
		}
		else if (_327517_kind->_method_prim() != nullptr) {
			_case_begin_4395788816:;
			{
				jule::Ptr<_1a8ad0a37_Prim> _330917_p = _327517_kind->_method_prim();
				{
					auto &_match_expr{ _330917_p->_field_kind };
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_4395798912:;
						{
							return (*this)._method_eval_str_sub_ident(_327441_d,_327455_si->_field_ident);
						}
					}
					_match_end_4395804304:;
				}
			}
		}
		_match_end_4395788048:;
	}
	(*this)._method_push_err(_327455_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_327441_d->_field_kind->_method_to_str())}));
	return nullptr;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_sub_ident(jule::Ptr<_1da7b8e5d_SubIdentExpr> _332038_si) {
	jule::Ptr<_1a8ad0a37_TypeKind> _332117_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_332117_prefix;
	});
	jule::Ptr<_1c1ead281_Data> _332517_d = this->self->_method_eval_expr_kind(_332038_si->_field_expr);
	if (_332517_d == nullptr) {
		return nullptr;
	}
	if (_332517_d->_field_decl) {
		return this->self->_method_eval_type_static(_332517_d,_332038_si);
	}
	return this->self->_method_eval_obj_sub_ident(_332517_d,_332038_si);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_tuple(jule::Ptr<_1da7b8e5d_TupleExpr> _333734_tup) {
	jule::Ptr<_1a8ad0a37_Tuple> _333817_tup_t = jule::new_struct_ptr<_1a8ad0a37_Tuple>(new( std::nothrow ) _1a8ad0a37_Tuple());
	_333817_tup_t->_field_types=jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_333734_tup->_field_expr.len()));
	jule::Ptr<_1c19727a1_TupleExprModel> _334117_model = jule::new_struct<_1c19727a1_TupleExprModel>(new( std::nothrow ) _1c19727a1_TupleExprModel(jule::Slice<jule::Ptr<_1c1ead281_Data>>::alloc(0LL,static_cast<jule::I64>(_333734_tup->_field_expr.len()))));
	jule::Bool _334517_ok = true;
	{
		auto &expr = _333734_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_4395822352:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Expr> _1c1ead281_expr = *it;
			{
				jule::Ptr<_1c1ead281_Data> _334721_d = this->self->_method_eval_expr_kind(_1c1ead281_expr->_field_kind);
				if (_334721_d == nullptr) {
					_334517_ok=false;
					goto _iter_next_4395822352;
				}
				_333817_tup_t->_field_types = jule::alloc_for_append(_333817_tup_t->_field_types,1);_333817_tup_t->_field_types.push(_334721_d->_field_kind);
				_334117_model->_field_datas = jule::alloc_for_append(_334117_model->_field_datas,1);_334117_model->_field_datas.push(_334721_d);
			}
			_iter_next_4395822352:;
			++it;
			goto _iter_begin_4395822352;
		}
		_iter_end_4395822352:;
	}
	if ((!(_334517_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_333817_tup_t)),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_334117_model),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_map(jule::Ptr<_1a8ad0a37_Map> _336632_m,jule::Ptr<_1da7b8e5d_BraceLit> _336645_lit) {
	jule::Ptr<_1c19727a1_MapExprModel> _336717_model = jule::new_struct<_1c19727a1_MapExprModel>(new( std::nothrow ) _1c19727a1_MapExprModel(_336632_m->_field_key,_336632_m->_field_val,jule::Slice<jule::Ptr<_1c19727a1_KeyValPairExprModel>>()));
	{
		auto &expr = _336645_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4395832768:;
		if (it != expr.end()) {
			jule::Any _1c1ead281_expr = *it;
			{
				{
					auto &_match_expr{ _1c1ead281_expr };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_KeyValPair>>()) {
						_case_begin_4395835344:;
					}
					else {
						_case_begin_4395833984:;
						{
							this->self->_method_push_err(_336645_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_4395834304:;
				}
				jule::Ptr<_1da7b8e5d_KeyValPair> _338221_pair = _1c1ead281_expr.operator jule::Ptr<_1da7b8e5d_KeyValPair>();
				jule::Ptr<_1c1ead281_Data> _338421_key = this->self->_method_eval_expr_kind(_338221_pair->_field_key);
				if (_338421_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_1c1ead281_Data> _338921_val = this->self->_method_eval_expr_kind(_338221_pair->_field_val);
				if (_338921_val == nullptr) {
					return nullptr;
				}
				this->self->_field_s->_method_check_assign_type(false,_336632_m->_field_key,_338421_key,_338221_pair->_field_colon);
				this->self->_field_s->_method_check_assign_type(false,_336632_m->_field_val,_338921_val,_338221_pair->_field_colon);
				_336717_model->_field_entries = jule::alloc_for_append(_336717_model->_field_entries,1);_336717_model->_field_entries.push(jule::new_struct<_1c19727a1_KeyValPairExprModel>(new( std::nothrow ) _1c19727a1_KeyValPairExprModel(_338421_key->_field_model,_338921_val->_field_model)));
			}
			_iter_next_4395832768:;
			++it;
			goto _iter_begin_4395832768;
		}
		_iter_end_4395832768:;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_336632_m)),jule::Ptr<_1a8ad0a37_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_336717_model),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_brace_lit(jule::Ptr<_1da7b8e5d_BraceLit> _341038_lit) {
	{
		if (this->self->_field_prefix == nullptr) {
			_case_begin_4395850240:;
			{
				this->self->_method_push_err(_341038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if (this->self->_field_prefix->_method_map() != nullptr) {
			_case_begin_4395850432:;
			{
				return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_341038_lit);
			}
		}
		else if (this->self->_field_prefix->_method_strct() != nullptr) {
			_case_begin_4395850528:;
			{
				return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_341038_lit->_field_exprs,_341038_lit->_field_token);
			}
		}
		else {
			_case_begin_4395847840:;
			{
				this->self->_method_push_err(_341038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4395847664:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_anon_fn(jule::Ptr<_1da7b8e5d_FnDecl> _342835_decl) {
	_1a8ad0a37_TypeChecker _342917_tc = _1a8ad0a37_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_1a8ad0a37_Referencer>(),_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>(),jule::Bool(),jule::Bool());
	jule::Ptr<_1c17e2687_FnIns> _343317_ins = _342917_tc._method_build_fn(_342835_decl);
	_343317_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_ScopeChecker>>()) {
			_case_begin_4395862800:;
			{
				jule::Ptr<_1c197a248_ScopeChecker> _343821_sc = (*this)._field_lookup.operator jule::Ptr<_1c197a248_ScopeChecker>();
				jule::Ptr<_1c197a248_ScopeChecker> _343921_scc = _343821_sc->_method_new_child_checker();
				_343921_scc->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>>(nullptr);
				_343921_scc->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>>(nullptr);
				_343921_scc->_field_owner=nullptr;
				_343921_scc->_field_child_index=0LL;
				_343921_scc->_field_it=0LLU;
				_343921_scc->_field_cse=0LLU;
				_343921_scc->_field_owner=_343317_ins;
				(*this)._field_s->_method_check_fn_ins_sc(_343317_ins,_343921_scc);
			}
		}
		else {
			_case_begin_4395859488:;
			{
				(*this)._field_s->_method_check_fn_ins(_343317_ins);
			}
		}
		_match_end_4395862192:;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_343317_ins)),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_AnonFnExprModel>(new( std::nothrow ) _1c19727a1_AnonFnExprModel(_343317_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_binop(jule::Ptr<_1da7b8e5d_BinopExpr> _346234_op) {
	jule::Ptr<_1a8ad0a37_TypeKind> _346317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_346317_prefix;
	});
	_1c1ead281_BinopSolver _346717_bs = _1c1ead281_BinopSolver(this->self,jule::Ptr<_1c1ead281_Data>(),jule::Ptr<_1c1ead281_Data>(),_1da81133a_Token());
	return _346717_bs._method_solve(_346234_op);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_ternary(jule::Ptr<_1da7b8e5d_TernaryExpr> _347336_ter) {
	jule::Ptr<_1c1ead281_Data> _347417_d = this->self->_method_eval_expr_kind(_347336_ter->_field_condition);
	if (_347417_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_Prim> _347913_prim = _347417_d->_field_kind->_method_prim();
	if ((_347913_prim == nullptr) || (!(_347913_prim->_method_is_bool()))) {
		this->self->_method_push_err(_347336_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _348517_td = this->self->_method_eval_expr_kind(_347336_ter->_field_true_expr);
	if (_348517_td == nullptr) {
		return nullptr;
	}
	if (_348517_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_347336_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _349517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_348517_td->_field_kind;
	jule::Ptr<_1c1ead281_Data> _349817_fd = this->self->_method_eval_expr_kind(_347336_ter->_field_false_expr);
	this->self->_field_prefix=_349517_prefix;
	if (_349817_fd == nullptr) {
		return nullptr;
	}
	_1c1d617a5_AssignTypeChecker _350517_ac = _1c1d617a5_AssignTypeChecker(this->self->_field_s,jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c1ead281_Data>(),_347336_ter->_field_token);
	if (_348517_td->_method_is_const() && (!(_349817_fd->_method_is_const()))) {
		_350517_ac._field_dest=_349817_fd->_field_kind;
		_350517_ac._field_d=_348517_td;
	} else {
		_350517_ac._field_dest=_348517_td->_field_kind;
		_350517_ac._field_d=_349817_fd;
	}
	if ((!(_350517_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_347417_d->_method_is_const()) {
		if (_347417_d->_field_constant->_method_read_bool()) {
			return _348517_td;
		}
		return _349817_fd;
	}
	jule::Ptr<_1c1ead281_Data> _352717_r = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data());
	_352717_r->_field_kind=_350517_ac._field_dest;
	_352717_r->_field_lvalue=false;
	_352717_r->_field_mutable=_352717_r->_field_kind->_method_mutable();
	_352717_r->_field_model=jule::Any(jule::new_struct<_1c19727a1_TernaryExprModel>(new( std::nothrow ) _1c19727a1_TernaryExprModel(_347417_d->_field_model,_348517_td->_field_model,_349817_fd->_field_model)));
	return _352717_r;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_expr_kind(jule::Any _353938_kind) {
	jule::Ptr<_1c1ead281_Data> _354017_d = nullptr;
	{
		auto &_match_expr{ _353938_kind };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_LitExpr>>()) {
			_case_begin_4395906336:;
			{
				_354017_d=this->self->_method_eval_lit(_353938_kind.operator jule::Ptr<_1da7b8e5d_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
			_case_begin_4395907344:;
			{
				_354017_d=this->self->_method_eval_ident(_353938_kind.operator jule::Ptr<_1da7b8e5d_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UnaryExpr>>()) {
			_case_begin_4395907440:;
			{
				_354017_d=this->self->_method_eval_unary(_353938_kind.operator jule::Ptr<_1da7b8e5d_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VariadicExpr>>()) {
			_case_begin_4395907536:;
			{
				_354017_d=this->self->_method_eval_variadic(_353938_kind.operator jule::Ptr<_1da7b8e5d_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UnsafeExpr>>()) {
			_case_begin_4395907648:;
			{
				_354017_d=this->self->_method_eval_unsafe(_353938_kind.operator jule::Ptr<_1da7b8e5d_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_SliceExpr>>()) {
			_case_begin_4395907760:;
			{
				_354017_d=this->self->_method_eval_slice_expr(_353938_kind.operator jule::Ptr<_1da7b8e5d_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IndexingExpr>>()) {
			_case_begin_4395907872:;
			{
				_354017_d=this->self->_method_eval_indexing(_353938_kind.operator jule::Ptr<_1da7b8e5d_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_SlicingExpr>>()) {
			_case_begin_4395907984:;
			{
				_354017_d=this->self->_method_eval_slicing(_353938_kind.operator jule::Ptr<_1da7b8e5d_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_CastExpr>>()) {
			_case_begin_4395908096:;
			{
				_354017_d=this->self->_method_eval_cast(_353938_kind.operator jule::Ptr<_1da7b8e5d_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_NsSelectionExpr>>()) {
			_case_begin_4395908208:;
			{
				_354017_d=this->self->_method_eval_ns_selection(_353938_kind.operator jule::Ptr<_1da7b8e5d_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_StructLit>>()) {
			_case_begin_4395908320:;
			{
				_354017_d=this->self->_method_eval_struct_lit(_353938_kind.operator jule::Ptr<_1da7b8e5d_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeDecl>>()) {
			_case_begin_4395908432:;
			{
				_354017_d=this->self->_method_eval_type(_353938_kind.operator jule::Ptr<_1da7b8e5d_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>()) {
			_case_begin_4395908544:;
			{
				_354017_d=this->self->_method_eval_fn_call(_353938_kind.operator jule::Ptr<_1da7b8e5d_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_SubIdentExpr>>()) {
			_case_begin_4395908656:;
			{
				_354017_d=this->self->_method_eval_sub_ident(_353938_kind.operator jule::Ptr<_1da7b8e5d_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TupleExpr>>()) {
			_case_begin_4395908768:;
			{
				_354017_d=this->self->_method_eval_tuple(_353938_kind.operator jule::Ptr<_1da7b8e5d_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_BraceLit>>()) {
			_case_begin_4395908880:;
			{
				_354017_d=this->self->_method_eval_brace_lit(_353938_kind.operator jule::Ptr<_1da7b8e5d_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnDecl>>()) {
			_case_begin_4395908992:;
			{
				_354017_d=this->self->_method_eval_anon_fn(_353938_kind.operator jule::Ptr<_1da7b8e5d_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_BinopExpr>>()) {
			_case_begin_4395909104:;
			{
				_354017_d=this->self->_method_eval_binop(_353938_kind.operator jule::Ptr<_1da7b8e5d_BinopExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TernaryExpr>>()) {
			_case_begin_4395909216:;
			{
				_354017_d=this->self->_method_eval_ternary(_353938_kind.operator jule::Ptr<_1da7b8e5d_TernaryExpr>());
			}
		}
		_match_end_4395906896:;
	}
	if (_354017_d == nullptr) {
		return nullptr;
	}
	if (_354017_d->_field_kind == nullptr) {
		return _354017_d;
	}
	if (((_354017_d->_field_cast_kind == nullptr) && _354017_d->_method_is_const()) && (_354017_d->_field_kind->_method_prim() != nullptr)) {
		if ((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) {
			jule::Str _357521_pk = this->self->_field_prefix->_method_prim()->_field_kind;
			{
				if (_1a8dc9a45_is_float(_357521_pk)) {
					_case_begin_4395943104:;
					{
						_354017_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),this->self->_field_prefix->_field_kind));
						_354017_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_354017_d->_field_constant->_method_as_f64()));
					}
				}
				else if (_1a8dc9a45_is_sig_int(_357521_pk)) {
					_case_begin_4395943216:;
					{
						if ((!(_1c1d617a5_int_assignable(_357521_pk,_354017_d)))) {
							goto _match_end_4395942928;
						}
						_354017_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),this->self->_field_prefix->_field_kind));
						_354017_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_354017_d->_field_constant->_method_as_i64()));
					}
				}
				else if (_1a8dc9a45_is_unsig_int(_357521_pk)) {
					_case_begin_4395943328:;
					{
						if ((!(_1c1d617a5_int_assignable(_357521_pk,_354017_d)))) {
							goto _match_end_4395942928;
						}
						_354017_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),this->self->_field_prefix->_field_kind));
						_354017_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_354017_d->_field_constant->_method_as_u64()));
					}
				}
				_match_end_4395942928:;
			}
		} else if ((!(_354017_d->_field_is_rune))) {
			{
				if (_354017_d->_field_constant->_method_is_i64()) {
					_case_begin_4395953696:;
					{
						if (_1c1d617a5_int_assignable(jule::Str("int", 3),_354017_d)) {
							_354017_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))));
							_354017_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_354017_d->_field_constant->_method_as_i64()));
						}
					}
				}
				else if (_354017_d->_field_constant->_method_is_u64()) {
					_case_begin_4395953792:;
					{
						if (_1c1d617a5_int_assignable(jule::Str("uint", 4),_354017_d)) {
							_354017_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("uint", 4))));
							_354017_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_354017_d->_field_constant->_method_as_u64()));
						}
					}
				}
				_match_end_4395951872:;
			}
		}
	}
	if ((!(_354017_d->_field_decl))) {
		if ((((((((!(_354017_d->_field_kind->_method_cpp_linked())) && (this->self->_field_prefix != nullptr)) && (_354017_d->_field_cast_kind == nullptr)) && (!(_354017_d->_field_kind->_field_variadic))) && (!(_354017_d->_field_lvalue))) && (!(_354017_d->_method_is_const()))) && (_354017_d->_field_kind->_method_prim() != nullptr)) && _1a8dc9a45_is_num(_354017_d->_field_kind->_method_prim()->_field_kind)) {
			_354017_d->_field_cast_kind=_354017_d->_field_kind;
		}
		_1c1ead281_apply_cast_kind(_354017_d);
		if ((_354017_d->_field_kind->_method_prim() == nullptr) || (!(_354017_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_354017_d->_field_cast_kind=this->self->_field_prefix;
				_1c1ead281_apply_cast_kind_model(_354017_d);
				_354017_d->_field_cast_kind=nullptr;
			}
		}
	}
	return _354017_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval(jule::Ptr<_1da7b8e5d_Expr> _364028_expr) {
	jule::Ptr<_1c1ead281_Data> _364117_d = this->self->_method_eval_expr_kind(_364028_expr->_field_kind);
	if ((_364117_d == nullptr) || (_364117_d->_field_kind == nullptr)) {
		return nullptr;
	}
	{
		if (_364117_d->_field_kind->_method_fnc() != nullptr) {
			_case_begin_4395975712:;
			{
				jule::Ptr<_1c17e2687_FnIns> _364821_f = _364117_d->_field_kind->_method_fnc();
				if (_364821_f->_method_is_builtin()) {
					goto _match_end_4395976240;
				}
				if (_364821_f->_field_generics.len() != _364821_f->_field_decl->_field_generics.len()) {
					this->self->_field_s->_method_push_err(_364028_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_364821_f->_field_decl->_method_is_method()) {
					this->self->_field_s->_method_push_err(_364028_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_4395976240:;
	}
	return _364117_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_Eval::_method_eval_expr(jule::Ptr<_1da7b8e5d_Expr> _366833_expr) {
	jule::Ptr<_1c1ead281_Data> _366917_d = this->self->_method_eval(_366833_expr);
	{
		if (_366917_d == nullptr) {
			_case_begin_4395987872:;
			{
				return nullptr;
			}
		}
		else if (_366917_d->_field_decl) {
			_case_begin_4395987968:;
			{
				this->self->_method_push_err(_366833_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_4395986512:;
			{
				return _366917_d;
			}
		}
		_match_end_4395986432:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1ead281_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4);
		_6517_kind+=(*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _8122_other) {
	if (this->self->_method_is_nil()) {
		return _8122_other->_method_is_nil();
	}
	if (this->self->_method_cpp_linked()) {
		return _8122_other->_method_cpp_linked() && (this->self->_field_cpp_ident == _8122_other->_field_cpp_ident);
	}
	return this->self->_field_kind.get()._method_equals(_8122_other);
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_void(void) {
	jule::Ptr<_1a8ad0a37_Prim> _10413_prim = (*this)._method_prim();
	return (_10413_prim != nullptr) && (_10413_prim->_field_kind == jule::Str("void", 4));
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_mutable(void) {
	{
		_1a8ad0a37_TypeKind* _11121__self = (&((*this)));
		if (_11121__self->_method_strct() != nullptr) {
			return _11121__self->_method_strct()->_field_mutable;
		}
		if (_11121__self->_method_trt() != nullptr) {
			return _11121__self->_method_trt()->_field_mutable;
		}
		if (_11121__self->_method_prim() != nullptr) {
			jule::Ptr<_1a8ad0a37_Prim> _12021_p = _11121__self->_method_prim();
			return _12021_p->_method_is_any();
		}
		if (_11121__self->_method_arr() != nullptr) {
			return _11121__self->_method_arr()->_field_elem->_method_mutable();
		}
		return ((_11121__self->_method_slc() != nullptr) || (_11121__self->_method_ptr() != nullptr)) || (_11121__self->_method_sptr() != nullptr);
	}
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_nil_compatible(void) {
	{
		_1a8ad0a37_TypeKind* _13521__self = (&((*this)));
		jule::Ptr<_1a8ad0a37_Prim> _13717_prim = _13521__self->_method_prim();
		if ((_13717_prim != nullptr) && _13717_prim->_method_is_any()) {
			return true;
		}
		return (((((_13521__self->_method_is_nil() || (_13521__self->_method_fnc() != nullptr)) || (_13521__self->_method_sptr() != nullptr)) || (_13521__self->_method_ptr() != nullptr)) || (_13521__self->_method_trt() != nullptr)) || (_13521__self->_method_slc() != nullptr)) || (_13521__self->_method_map() != nullptr);
	}
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_supports_cloning(void) {
	{
		_1a8ad0a37_TypeKind* _15521__self = (&((*this)));
		{
			if (_15521__self->_method_prim() != nullptr) {
				_case_begin_4396372672:;
				{
					return (!(_15521__self->_method_prim()->_method_is_any()));
				}
			}
			else if (_15521__self->_method_enm() != nullptr) {
				_case_begin_4396371216:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_fnc() != nullptr) {
				_case_begin_4396371312:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_ptr() != nullptr) {
				_case_begin_4396371424:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_slc() != nullptr) {
				_case_begin_4396371536:;
				{
					return _15521__self->_method_slc()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_map() != nullptr) {
				_case_begin_4396371936:;
				{
					jule::Ptr<_1a8ad0a37_Map> _16921_m = _15521__self->_method_map();
					return _16921_m->_field_key->_method_supports_cloning() && _16921_m->_field_val->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_arr() != nullptr) {
				_case_begin_4396372048:;
				{
					return _15521__self->_method_arr()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_sptr() != nullptr) {
				_case_begin_4396372160:;
				{
					return _15521__self->_method_sptr()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_strct() != nullptr) {
				_case_begin_4396372272:;
				{
					jule::Ptr<_1db4a7e59_StructIns> _17925_s = _15521__self->_method_strct();
					if ((!(_17925_s->_field_mutable))) {
						return true;
					}
					if (((_17925_s->_field_decl == nullptr) || _17925_s->_field_decl->_field_cpp_linked) || (!(_17925_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
						return false;
					}
					return true;
				}
			}
			else {
				_case_begin_4396370912:;
				{
					return false;
				}
			}
			_match_end_4396370800:;
		}
	}
}



inline jule::Bool _1a8ad0a37_TypeKind::_method_variadicable(void) {
	{
		_1a8ad0a37_TypeKind* _19921__self = (&((*this)));
		return _19921__self->_method_slc() != nullptr;
	}
}



inline jule::Ptr<_1a8ad0a37_Prim> _1a8ad0a37_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Prim>>()) {
			_case_begin_4396394624:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Prim>();
			}
		}
		else {
			_case_begin_4396392864:;
			{
				return nullptr;
			}
		}
		_match_end_4396350160:;
	}
}



inline jule::Ptr<_1a8ad0a37_Sptr> _1a8ad0a37_TypeKind::_method_sptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Sptr>>()) {
			_case_begin_4396397312:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Sptr>();
			}
		}
		else {
			_case_begin_4396394416:;
			{
				return nullptr;
			}
		}
		_match_end_4396395232:;
	}
}



inline jule::Ptr<_1a8ad0a37_Ptr> _1a8ad0a37_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Ptr>>()) {
			_case_begin_4396400000:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Ptr>();
			}
		}
		else {
			_case_begin_4396397104:;
			{
				return nullptr;
			}
		}
		_match_end_4396397920:;
	}
}



inline jule::Ptr<_1c196c834_Enum> _1a8ad0a37_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1c196c834_Enum>>()) {
			_case_begin_4396402688:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1c196c834_Enum>();
			}
		}
		else {
			_case_begin_4396399792:;
			{
				return nullptr;
			}
		}
		_match_end_4396400608:;
	}
}



inline jule::Ptr<_1a8ad0a37_Arr> _1a8ad0a37_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Arr>>()) {
			_case_begin_4396405472:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Arr>();
			}
		}
		else {
			_case_begin_4396404496:;
			{
				return nullptr;
			}
		}
		_match_end_4396403312:;
	}
}



inline jule::Ptr<_1a8ad0a37_Slc> _1a8ad0a37_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Slc>>()) {
			_case_begin_4396408128:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Slc>();
			}
		}
		else {
			_case_begin_4396405232:;
			{
				return nullptr;
			}
		}
		_match_end_4396406048:;
	}
}



inline jule::Ptr<_1c17e2687_FnIns> _1a8ad0a37_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4396410944:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1c17e2687_FnIns>();
			}
		}
		else {
			_case_begin_4396407872:;
			{
				return nullptr;
			}
		}
		_match_end_4396409072:;
	}
}



inline jule::Ptr<_1db4a7e59_StructIns> _1a8ad0a37_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_StructIns>>()) {
			_case_begin_4396413632:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1db4a7e59_StructIns>();
			}
		}
		else {
			_case_begin_4396410736:;
			{
				return nullptr;
			}
		}
		_match_end_4396411552:;
	}
}



inline jule::Ptr<_1c196b2a0_Trait> _1a8ad0a37_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1c196b2a0_Trait>>()) {
			_case_begin_4396416416:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1c196b2a0_Trait>();
			}
		}
		else {
			_case_begin_4396415440:;
			{
				return nullptr;
			}
		}
		_match_end_4396414256:;
	}
}



inline jule::Ptr<_1a8ad0a37_Map> _1a8ad0a37_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Map>>()) {
			_case_begin_4396419168:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Map>();
			}
		}
		else {
			_case_begin_4396418160:;
			{
				return nullptr;
			}
		}
		_match_end_4396416192:;
	}
}



inline jule::Ptr<_1a8ad0a37_Tuple> _1a8ad0a37_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_Tuple>>()) {
			_case_begin_4396421920:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a8ad0a37_Tuple>();
			}
		}
		else {
			_case_begin_4396418928:;
			{
				return nullptr;
			}
		}
		_match_end_4396420016:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8ad0a37_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



inline void _1a8ad0a37_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1a8ad0a37_Prim::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _31822_other) {
	jule::Ptr<_1a8ad0a37_Prim> _31913_prim = _31822_other->_method_prim();
	if (_31913_prim == nullptr) {
		return false;
	}
	return _1a8d48c4a_real_kind_of(this->self->_field_kind) == _1a8d48c4a_real_kind_of(_31913_prim->_field_kind);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1a8ad0a37_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1a8ad0a37_Sptr::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _38722_other) {
	jule::Ptr<_1a8ad0a37_Sptr> _38813_sptr = _38722_other->_method_sptr();
	if (_38813_sptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_38813_sptr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Sptr &_Src) {
	_Stream << "Sptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1a8ad0a37_Slc::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _40622_other) {
	jule::Ptr<_1a8ad0a37_Slc> _40713_slc = _40622_other->_method_slc();
	if (_40713_slc == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_40713_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Tuple::_method_to_str(void) {
	jule::Str _42317_s = jule::Str("(", 1);
	_42317_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4396469744:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeKind> &_1a8ad0a37_t = *it;
			{
				_42317_s+=jule::Str(",", 1);
				_42317_s+=_1a8ad0a37_t->_method_to_str();
			}
			_iter_next_4396469744:;
			++it;
			goto _iter_begin_4396469744;
		}
		_iter_end_4396469744:;
	}
	_42317_s+=jule::Str(")", 1);
	return _42317_s;
}



inline jule::Bool _1a8ad0a37_Tuple::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _43422_other) {
	jule::Ptr<_1a8ad0a37_Tuple> _43513_tup = _43422_other->_method_tup();
	if (_43513_tup == nullptr) {
		return false;
	}
	if (this->self->_field_types.len() != _43513_tup->_field_types.len()) {
		return false;
	}
	jule::Int _44417_i = 0LL;
	for (; _44417_i < this->self->_field_types.len(); (_44417_i)++) {
		{
			if ((!(this->self->_field_types[_44417_i]->_method_equals(_43513_tup->_field_types[_44417_i])))) {
				return false;
			}
		}
	_iter_next_4396477088:;
	}
	_iter_end_4396477088:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Map::_method_to_str(void) {
	jule::Str _46417_s = jule::Str("[", 1);
	_46417_s+=(*this)._field_key->_method_to_str();
	_46417_s+=jule::Str(":", 1);
	_46417_s+=(*this)._field_val->_method_to_str();
	_46417_s+=jule::Str("]", 1);
	return _46417_s;
}



inline jule::Bool _1a8ad0a37_Map::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _47322_other) {
	jule::Ptr<_1a8ad0a37_Map> _47413_map = _47322_other->_method_map();
	if (_47413_map == nullptr) {
		return false;
	}
	return this->self->_field_key->_method_equals(_47413_map->_field_key) && this->self->_field_val->_method_equals(_47413_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Arr::_method_to_str(void) {
	jule::Str _49217_s = jule::Str("[", 1);
	_49217_s+=_1da106db7_itoa((*this)._field_n);
	_49217_s+=jule::Str("]", 1);
	_49217_s+=(*this)._field_elem->_method_to_str();
	return _49217_s;
}



inline jule::Bool _1a8ad0a37_Arr::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _50022_other) {
	jule::Ptr<_1a8ad0a37_Arr> _50113_arr = _50022_other->_method_arr();
	if (_50113_arr == nullptr) {
		return false;
	}
	return (this->self->_field_n == _50113_arr->_field_n) && this->self->_field_elem->_method_equals(_50113_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ad0a37_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1a8ad0a37_Ptr::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _52422_other) {
	jule::Ptr<_1a8ad0a37_Ptr> _52513_ptr = _52422_other->_method_ptr();
	if (_52513_ptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_52513_ptr->_field_elem);
}



inline jule::Bool _1a8ad0a37_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1da76219d_DirectiveEval::_method_push_err(_1da81133a_Token _2027_t,jule::Str _2037_fmt,jule::Slice<jule::Any> _2050_args) {
	(*this)._field_logs = jule::alloc_for_append((*this)._field_logs,1);(*this)._field_logs.push(_203741197_Log(1LLU,_2027_t._field_row,_2027_t._field_column,_2027_t._field_file->_method_path(),_203741197_logf(_2037_fmt,_2050_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_1da81133a_Token>> _1da76219d_DirectiveEval::_method_split_operans(jule::Str _3232_op,jule::Slice<_1da81133a_Token>& _3252_tokens) {
	jule::Slice<jule::Slice<_1da81133a_Token>> _3317_parts = jule::Slice<jule::Slice<_1da81133a_Token>>::alloc(0LL,10LL);
	jule::Int _3517_i = 0LL;
	jule::Int _3617_range_n = 0LL;
	jule::Int _3717_last = 0LL;
	for (; _3517_i < (_3252_tokens.len() - 1LL); (_3517_i)++) {
		{
			_1da81133a_Token _3917_b = _3252_tokens[_3517_i];
			if (_3917_b._field_id == 3LLU) {
				{
					auto &_match_expr{ _3917_b._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_4396972896:;
						{
							(_3617_range_n)++;
							goto _iter_next_4396969488;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_4396973168:;
						{
							(_3617_range_n)--;
						}
					}
					_match_end_4396972752:;
				}
			}
			if ((_3617_range_n > 0LL) || (_3917_b._field_id != 7LLU)) {
				goto _iter_next_4396969488;
			}
			if (_3917_b._field_kind == _3232_op) {
				_3317_parts.push(_3252_tokens.slice(_3717_last,_3517_i));
				_3717_last=static_cast<jule::Int>(_3517_i + 1LL);
			}
		}
	_iter_next_4396969488:;
	}
	_iter_end_4396969488:;
	if (_3717_last < _3252_tokens.len()) {
		_3317_parts.push(_3252_tokens.slice(_3717_last));
	} else {
		(*this)._method_push_err(_3252_tokens[_3717_last - 1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3317_parts;
}



inline jule::Bool _1da76219d_DirectiveEval::_method_eval_directive_ident(jule::Str _7335_ident) {
	if (_7335_ident == jule::Str()) {
		return false;
	}
	{
		auto &expr = _1da78aaab_FLAGS;
		auto it = expr.begin();
		_iter_begin_4396982576:;
		if (it != expr.end()) {
			jule::Str &_1da76219d_flag = *it;
			{
				if (_1da76219d_flag == _7335_ident) {
					return true;
				}
			}
			_iter_next_4396982576:;
			++it;
			goto _iter_begin_4396982576;
		}
		_iter_end_4396982576:;
	}
	return false;
}



inline jule::Bool _1da76219d_DirectiveEval::_method_eval_directive_part(jule::Slice<_1da81133a_Token> _8942_part) {
	jule::Bool _9013_logical_not = (_8942_part[0LL]._field_id == 7LLU) && (_8942_part[0LL]._field_kind == jule::Str("!", 1));
	if (_9013_logical_not) {
		_8942_part=_8942_part.slice(1LL);
	}
	if (_8942_part.len() > 1LL) {
		(*this)._method_push_err(_8942_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _10017_result = (*this)._method_eval_directive_ident(_8942_part[0LL]._field_kind);
	if (_9013_logical_not) {
		_10017_result=(!(_10017_result));
	}
	return _10017_result;
}



inline jule::Bool _1da76219d_DirectiveEval::_method_eval(void) {
	if ((*this)._field_d->_field_args.len() == 0LL) {
		(*this)._method_push_err((*this)._field_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11317_result = false;
	jule::Slice<jule::Slice<_1da81133a_Token>> _11517_logical_or_parts = (*this)._method_split_operans(jule::Str("||", 2),(*this)._field_d->_field_args);
	if (_11517_logical_or_parts == nullptr) {
		return false;
	}
	{
		auto &expr = _11517_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_4396998816:;
		if (it != expr.end()) {
			jule::Slice<_1da81133a_Token> _1da76219d_part = *it;
			{
				jule::Bool _12121_and = true;
				jule::Slice<jule::Slice<_1da81133a_Token>> _12221_logical_and_parts = (*this)._method_split_operans(jule::Str("&&", 2),_1da76219d_part);
				if (_12221_logical_and_parts == nullptr) {
					return false;
				}
				{
					auto &expr = _12221_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_4397003200:;
					if (it != expr.end()) {
						jule::Slice<_1da81133a_Token> _1da76219d_and_part = *it;
						{
							_1da81133a_Token _12821_first = _1da76219d_and_part[0LL];
							if ((_12821_first._field_id == 3LLU) && (_12821_first._field_kind == jule::Str("(", 1))) {
								_1da81133a_Token _13025_end = _1da76219d_and_part[_1da76219d_and_part.len() - 1LL];
								if ((_13025_end._field_id != 3LLU) || (_13025_end._field_kind != jule::Str(")", 1))) {
									(*this)._method_push_err(_12821_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1da76219d_and_part=_1da76219d_and_part.slice(1LL,_1da76219d_and_part.len() - 1LL);
							}
							_12121_and=_12121_and && (*this)._method_eval_directive_part(_1da76219d_and_part);
						}
						_iter_next_4397003200:;
						++it;
						goto _iter_begin_4397003200;
					}
					_iter_end_4397003200:;
				}
				_11317_result=_11317_result || _12121_and;
			}
			_iter_next_4396998816:;
			++it;
			goto _iter_begin_4396998816;
		}
		_iter_end_4396998816:;
	}
	return _11317_result;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da76219d_DirectiveEval &_Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1da7889cc_PlainImporter::_method_get_import(jule::Str _9333_path) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4397014976:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1da7889cc_p = *it;
			{
				if (_1da7889cc_p->_field_path == _9333_path) {
					return _1da7889cc_p;
				}
			}
			_iter_next_4397014976:;
			++it;
			goto _iter_begin_4397014976;
		}
		_iter_end_4397014976:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1da7635cd_Ast>>,jule::Slice<_203741197_Log>> _1da7889cc_PlainImporter::_method_import_package(jule::Str _10337_path) {
	jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>> _10413_dirents = ({
		auto except = _1da7889cc_read_package_dirents(_10337_path);
		(except.ok()) ? (except.result) : ({{
			jule::Slice<_203741197_Log> _10521_errors = jule::Slice<_203741197_Log>({_1da7889cc_flat_compiler_err(except.error.operator jule::Str())});
			return std::make_tuple(nullptr,_10521_errors);
			return std::make_tuple(nullptr,_10521_errors);
		} jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>();});
	});
	jule::Slice<jule::Ptr<_1da7635cd_Ast>> _10917_asts = jule::Slice<jule::Ptr<_1da7635cd_Ast>>::alloc(0LL,static_cast<jule::I64>(_10413_dirents.len()));
	{
		auto &expr = _10413_dirents;
		auto it = expr.begin();
		_iter_begin_4397025904:;
		if (it != expr.end()) {
			jule::Ptr<_1db3db7e9_DirEntry> &_1da7889cc_dirent = *it;
			{
				jule::Str _11117__path = _20525e312_join(jule::Slice<jule::Str>({_10337_path,_1da7889cc_dirent->_field_name}));
				jule::Ptr<_1da7bba21_File> _11221_file = _1da7bba21_new_file_set(_11117__path);
				_11221_file->_method_fill(_1da7889cc_read_buff(_11221_file->_method_path()));
				jule::Slice<_203741197_Log> _11421_errors = _1da7bd281_lex(_11221_file);
				if (_11421_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11421_errors);
				}
				jule::Ptr<_1db4a8399_FileInfo> _11921_finfo = _1db4a8399_parse_file(_11221_file);
				if (_11921_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11921_finfo->_field_errors);
				}
				if ((!(_1da7590b8_is_pass_file_annotation(_1da7889cc_dirent->_field_name)))) {
					goto _iter_next_4397025904;
				}
				jule::Bool _12918_r;
				jule::Slice<_203741197_Log> _12925_logs;
				std::tie(_12918_r,_12925_logs) = _1da7889cc_is_pass_build_directives(_11921_finfo->_field_ast);
				if (_12925_logs.len() > 0LL) {
					return std::make_tuple(nullptr,_12925_logs);
				}
				if ((!(_12918_r))) {
					goto _iter_next_4397025904;
				}
				_10917_asts.push(_11921_finfo->_field_ast);
			}
			_iter_next_4397025904:;
			++it;
			goto _iter_begin_4397025904;
		}
		_iter_end_4397025904:;
	}
	return std::make_tuple(_10917_asts,nullptr);
}



inline void _1da7889cc_PlainImporter::_method_imported(jule::Ptr<_1c1b398be_ImportInfo> _14535_imp) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4397041936:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> &_1da7889cc_p = *it;
			{
				if ((_1da7889cc_p->_field_cpp_linked == _14535_imp->_field_cpp_linked) && (_1da7889cc_p->_field_link_path == _14535_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4397041936:;
			++it;
			goto _iter_begin_4397041936;
		}
		_iter_end_4397041936:;
	}
	(*this)._field_all_packages = jule::alloc_for_append((*this)._field_all_packages,1);(*this)._field_all_packages.push(_14535_imp);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7889cc_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da73db6e_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da73db6e_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1c1b58316_Var>>& _1837_s,jule::Ptr<_1c1b58316_Var> _1846_t) {
	jule::Ptr<_1c1b58316_Var>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_1c1b58316_Var>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4397147072:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> &_1da73db6e_tt = *it;
			{
				{
					if (_1da73db6e_tt == _1846_t) {
						goto _iter_end_4397147072;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_1da73db6e_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4397147072:;
			++it;
			goto _iter_begin_4397147072;
		}
		_iter_end_4397147072:;
	}
	return false;
}

inline jule::Bool _1da73db6e_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _1837_s,jule::Ptr<_1db4a7e59_Struct> _1846_t) {
	jule::Ptr<_1db4a7e59_Struct>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_1db4a7e59_Struct>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4397170784:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> &_1da73db6e_tt = *it;
			{
				{
					if (_1da73db6e_tt == _1846_t) {
						goto _iter_end_4397170784;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_1da73db6e_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4397170784:;
			++it;
			goto _iter_begin_4397170784;
		}
		_iter_end_4397170784:;
	}
	return false;
}



inline void _1da73db6e_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_1c1b58316_Var>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4397130448:;
		if (it != expr.end()) {
			jule::Int _1da73db6e_j = it - expr.begin();
			jule::Ptr<_1c1b58316_Var> _1da73db6e_t = *it;
			{
				if (_1da73db6e_t->_field_cpp_linked || (_1da73db6e_t->_field_depends.len() == 0LL)) {
					_3940_s.swap(_4017_i,_1da73db6e_j);
					(_4017_i)++;
				}
			}
			_iter_next_4397130448:;
			++it;
			_1da73db6e_j++;
			goto _iter_begin_4397130448;
		}
		_iter_end_4397130448:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_1da73db6e_DefineOrderer::_static_method_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::Int>(_5021_k + 1LL));
					}
				}
			_iter_next_4397136416:;
			}
			_iter_end_4397136416:;
		}
	_iter_next_4397128944:;
	}
	_iter_end_4397128944:;
}

inline void _1da73db6e_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4397154224:;
		if (it != expr.end()) {
			jule::Int _1da73db6e_j = it - expr.begin();
			jule::Ptr<_1db4a7e59_Struct> _1da73db6e_t = *it;
			{
				if (_1da73db6e_t->_field_cpp_linked || (_1da73db6e_t->_field_depends.len() == 0LL)) {
					_3940_s.swap(_4017_i,_1da73db6e_j);
					(_4017_i)++;
				}
			}
			_iter_next_4397154224:;
			++it;
			_1da73db6e_j++;
			goto _iter_begin_4397154224;
		}
		_iter_end_4397154224:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_1da73db6e_DefineOrderer::_static_method_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::Int>(_5021_k + 1LL));
					}
				}
			_iter_next_4397160192:;
			}
			_iter_end_4397160192:;
		}
	_iter_next_4397149152:;
	}
	_iter_end_4397149152:;
}



inline void _1da73db6e_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ptr<_1c1b58316_Var>>& _6140_vars) {
	_1da73db6e_DefineOrderer::_static_method_order_common_0(_6140_vars);
}



inline void _1da73db6e_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _6741_structs) {
	_1da73db6e_DefineOrderer::_static_method_order_common_1(_6741_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da73db6e_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1da7303ad_ScopeDeadCode::_method_optimize_child(jule::Ptr<_1c197a248_Scope>& _2339_s) {
	jule::Ptr<_1da7303ad_ScopeDeadCode> _2417_sdc = jule::new_struct_ptr<_1da7303ad_ScopeDeadCode>(new( std::nothrow ) _1da7303ad_ScopeDeadCode(this->self,_2339_s,(&(_2339_s->_field_stmts)),jule::Int()));
	{
		_2417_sdc->_method_optimize_stmts();
	}
}



inline void _1da7303ad_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_1da7303ad_ScopeDeadCode> _3417_parent = (*this)._field_parent;
	while (_3417_parent != nullptr) {
		{
			(*(_3417_parent->_field_stmts))=(*(_3417_parent->_field_stmts)).slice(0LL,_3417_parent->_field_i + 1LL);
			_3417_parent=_3417_parent->_field_parent;
		}
	_iter_next_4397330640:;
	}
	_iter_end_4397330640:;
}



inline void _1da7303ad_ScopeDeadCode::_method_optimize_stmt(jule::Any _4144_st) {
	{
		auto &_match_expr{ _4144_st };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_Scope>>()) {
			_case_begin_4397335312:;
			{
				jule::Ptr<_1c197a248_Scope> _4421_scope = _4144_st.operator jule::Ptr<_1c197a248_Scope>();
				if (_4421_scope->_field_deferred) {
					_1da7303ad_eliminate_dead_code_of_scope(_4421_scope);
				} else {
					this->self->_method_optimize_child(_4421_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
			_case_begin_4397335552:;
			{
				{
					auto &_match_expr{ _4144_st.operator jule::Ptr<_1c1ead281_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>>()) {
						_case_begin_4397340912:;
						{
							this->self->_method_eliminate_followed();
						}
					}
					_match_end_4397341200:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_RetSt>>()) {
			_case_begin_4397335648:;
			{
				this->self->_method_eliminate_followed();
			}
		}
		_match_end_4397335408:;
	}
}



inline void _1da7303ad_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_4397345120:;
	}
	_iter_end_4397345120:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7303ad_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a93d0c71_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::unsafe_div(_5617_m,12LL);
		_5617_m = jule::unsafe_mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LLU;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1a93d0c71_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1a93d0c71_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93d0c71_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a93d0c71_Time _1a93d0c71_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1a93d0c71_Time(_8924_sec);
}



inline _1a93d0c71_Time _1a93d0c71_Time::_static_method_now(void) {
	return _1a93d0c71_Time::_static_method_unix(static_cast<jule::U64>(_1a93d0c71_unix()));
}



inline jule::U64 _1a93d0c71_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1a93d0c71_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



inline jule::Uint _1a93d0c71_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



inline jule::Uint _1a93d0c71_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



inline jule::Uint _1a93d0c71_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



inline jule::Uint _1a93d0c71_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



inline jule::Uint _1a93d0c71_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



inline _1a93d0c71_AbsTime _1a93d0c71_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::unsafe_div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::unsafe_mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LLU;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::unsafe_div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::unsafe_mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LLU;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::unsafe_div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::unsafe_div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::unsafe_div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::U8 _15813_leap = static_cast<jule::U8>(((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LLU) : (0LLU)));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::U8>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1a93d0c71_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1a93d0c71_MDAYS[_16417_months];
		}
	_iter_next_4397448544:;
	}
	_iter_end_4397448544:;
	_1a93d0c71_AbsTime _16917_t = _1a93d0c71_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LLU;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LLU;
	_16917_t._field_year+=1900LLU;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::unsafe_mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LLU;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::unsafe_div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::unsafe_mod(jule::unsafe_div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::unsafe_mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93d0c71_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1a93d0c71_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1a93d0c71_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1a93d0c71_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1a93d0c71_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1a93d0c71_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1a93d0c71_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93d0c71_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d9d8c4cc_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1d9d8c4cc_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



inline void _1d9d8c4cc_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1d9d8c4cc_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9d8c4cc_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1d9d8c4cc_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



inline void _1d9d8c4cc_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1d9d8c4cc_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9d8c4cc_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1d9d8c4cc_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



inline void _1d9d8c4cc_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1d9d8c4cc_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9d8c4cc_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1d9d8c4cc_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



inline void _1d9d8c4cc_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1d9d8c4cc_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9d8c4cc_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1d9d8c4cc_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



inline void _1d9d8c4cc_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1d9d8c4cc_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d9d8c4cc_FlagSet> _1d9d8c4cc_FlagSet::_static_method_new(void) {
	return jule::new_struct<_1d9d8c4cc_FlagSet>(new( std::nothrow ) _1d9d8c4cc_FlagSet(jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1d9d8c4cc_CommonFlag> _1d9d8c4cc_FlagSet::_method_find_flag(jule::Str _6632_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4374442976:;
		if (it != expr.end()) {
			jule::Trait<_1d9d8c4cc_CommonFlag> _1d9d8c4cc_flag = *it;
			{
				if (_1d9d8c4cc_flag.get()._method_name() == _6632_name) {
					return _1d9d8c4cc_flag;
				}
			}
			_iter_next_4374442976:;
			++it;
			goto _iter_begin_4374442976;
		}
		_iter_end_4374442976:;
	}
	return nullptr;
}



inline jule::Trait<_1d9d8c4cc_CommonFlag> _1d9d8c4cc_FlagSet::_method_find_flag_short(jule::I32 _7638_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4374691616:;
		if (it != expr.end()) {
			jule::Trait<_1d9d8c4cc_CommonFlag> _1d9d8c4cc_flag = *it;
			{
				if (_1d9d8c4cc_flag.get()._method_short() == _7638_name) {
					return _1d9d8c4cc_flag;
				}
			}
			_iter_next_4374691616:;
			++it;
			goto _iter_begin_4374691616;
		}
		_iter_end_4374691616:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1d9d8c4cc_CommonFlag>> _1d9d8c4cc_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1d9d8c4cc_FlagSet::_method_parse(jule::Slice<jule::Str> _11028_args) {
	_1d9d8c4cc_ArgParser _11117_ap = _1d9d8c4cc_ArgParser((*this),_11028_args,jule::Slice<jule::Str>(),jule::Int());
	({
		auto except = _11117_ap._method_parse();
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional(jule::Any(),_11117_ap._field_content);
}



inline void _1d9d8c4cc_FlagSet::_method_reset(void) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4374707856:;
		if (it != expr.end()) {
			jule::Trait<_1d9d8c4cc_CommonFlag> &_1d9d8c4cc_f = *it;
			{
				_1d9d8c4cc_f.get()._method_reset();
			}
			_iter_next_4374707856:;
			++it;
			goto _iter_begin_4374707856;
		}
		_iter_end_4374707856:;
	}
}



inline jule::Ptr<_1d9d8c4cc_Flag_3> _1d9d8c4cc_FlagSet::_method_add_flag_common_0(jule::Str _12641_name,jule::I32 _12652_short,jule::Str _12665_what) {
	
	if ((*this)._method_find_flag(_12641_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12641_name + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:136:13"));;
	}
	if ((_12652_short != 0LL) && ((*this)._method_find_flag_short(_12652_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12652_short) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:140:13"));;
	}
	jule::Ptr<_1d9d8c4cc_Flag_3> _14317_flag = jule::new_struct<_1d9d8c4cc_Flag_3>(new( std::nothrow ) _1d9d8c4cc_Flag_3(_12641_name,_12652_short,jule::Bool(),_12665_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14317_flag);
	return _14317_flag;
}

inline jule::Ptr<_1d9d8c4cc_Flag_4> _1d9d8c4cc_FlagSet::_method_add_flag_common_1(jule::Str _12641_name,jule::I32 _12652_short,jule::Str _12665_what) {
	
	if ((*this)._method_find_flag(_12641_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12641_name + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:136:13"));;
	}
	if ((_12652_short != 0LL) && ((*this)._method_find_flag_short(_12652_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12652_short) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:140:13"));;
	}
	jule::Ptr<_1d9d8c4cc_Flag_4> _14317_flag = jule::new_struct<_1d9d8c4cc_Flag_4>(new( std::nothrow ) _1d9d8c4cc_Flag_4(_12641_name,_12652_short,jule::Str(),_12665_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14317_flag);
	return _14317_flag;
}





inline void _1d9d8c4cc_FlagSet::_method_add_var_0(jule::Ptr<jule::Bool> _17037_var,jule::Str _17046_name,jule::I32 _17057_short,jule::Str _17070_what) {
	jule::Ptr<_1d9d8c4cc_Flag_3> _17117_flag = (*this)._method_add_flag_common_0(_17046_name,_17057_short,_17070_what);
	_17117_flag->_field__default=(*(_17037_var));
	_17117_flag->_field__data=_17037_var;
}

inline void _1d9d8c4cc_FlagSet::_method_add_var_1(jule::Ptr<jule::Str> _17037_var,jule::Str _17046_name,jule::I32 _17057_short,jule::Str _17070_what) {
	jule::Ptr<_1d9d8c4cc_Flag_4> _17117_flag = (*this)._method_add_flag_common_1(_17046_name,_17057_short,_17070_what);
	_17117_flag->_field__default=(*(_17037_var));
	_17117_flag->_field__data=_17037_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1da7b8e5d_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_UseExpr &_Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_CoExpr &_Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c152a326_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c19727a1_BuiltinAssertCallExprModel &_Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1db4a7e59_FieldIns> _1db4a7e59_Field::_method_instance(void) {
	return jule::new_struct<_1db4a7e59_FieldIns>(new( std::nothrow ) _1db4a7e59_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a7e59_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1db4a7e59_StructIns> _1db4a7e59_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ptr<_1db4a7e59_StructIns> _6717_ins = jule::new_struct_ptr<_1db4a7e59_StructIns>(new( std::nothrow ) _1db4a7e59_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1db4a7e59_FieldIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ptr<_1c17e2687_Fn>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_1c18c86d5_ReferenceStack::_static_method_new()));
	{
		auto &expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_4391277360:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Field> _1db4a7e59_f = *it;
			{
				_6717_ins->_field_fields = jule::alloc_for_append(_6717_ins->_field_fields,1);_6717_ins->_field_fields.push(_1db4a7e59_f->_method_instance());
				if ((_1db4a7e59_f->_field_kind->_field_kind != nullptr) && _1db4a7e59_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4391277360:;
			++it;
			goto _iter_begin_4391277360;
		}
		_iter_end_4391277360:;
	}
	{
		auto &expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_4391279504:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1db4a7e59_f = *it;
			{
				jule::Ptr<_1c17e2687_Fn> _8221_fins = jule::new_struct_ptr<_1c17e2687_Fn>(new( std::nothrow ) _1c17e2687_Fn(_1db4a7e59_f->_field_sema,_1db4a7e59_f->_field_token,_1db4a7e59_f->_field_global,_1db4a7e59_f->_field_unsafety,_1db4a7e59_f->_field_public,_1db4a7e59_f->_field_cpp_linked,_1db4a7e59_f->_field_statically,_1db4a7e59_f->_field_exceptional,_1db4a7e59_f->_field_ident,_1db4a7e59_f->_field_directives,_1db4a7e59_f->_field_doc,_1db4a7e59_f->_field_scope,_1db4a7e59_f->_field_generics,_1db4a7e59_f->_field_result,_1db4a7e59_f->_field_params,_1db4a7e59_f->_field_owner,nullptr));
				_6717_ins->_field_methods = jule::alloc_for_append(_6717_ins->_field_methods,1);_6717_ins->_field_methods.push(_8221_fins);
			}
			_iter_next_4391279504:;
			++it;
			goto _iter_begin_4391279504;
		}
		_iter_end_4391279504:;
	}
	return _6717_ins;
}



inline jule::Ptr<_1db4a7e59_StructIns> _1db4a7e59_Struct::_method_append_instance(jule::Ptr<_1db4a7e59_StructIns>& _10939_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4391289328:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_StructIns> _1db4a7e59_ains = *it;
			{
				if (_1db4a7e59_ains->_method_same(_10939_ins)) {
					return _1db4a7e59_ains;
				}
			}
			_iter_next_4391289328:;
			++it;
			goto _iter_begin_4391289328;
		}
		_iter_end_4391289328:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_10939_ins);
	return nullptr;
}



inline jule::Ptr<_1c17e2687_Fn> _1db4a7e59_Struct::_method_find_method(jule::Str _12734_ident,jule::Bool _12746_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4391297712:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1db4a7e59_f = *it;
			{
				if ((_1db4a7e59_f->_field_statically == _12746_statically) && (_1db4a7e59_f->_field_ident == _12734_ident)) {
					return _1db4a7e59_f;
				}
			}
			_iter_next_4391297712:;
			++it;
			goto _iter_begin_4391297712;
		}
		_iter_end_4391297712:;
	}
	return nullptr;
}



inline jule::Ptr<_1c1b58316_Var> _1db4a7e59_Struct::_method_find_static(jule::Str _13834_ident) {
	{
		auto &expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_4391301856:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1db4a7e59_v = *it;
			{
				if (_1db4a7e59_v->_field_ident == _13834_ident) {
					return _1db4a7e59_v;
				}
			}
			_iter_next_4391301856:;
			++it;
			goto _iter_begin_4391301856;
		}
		_iter_end_4391301856:;
	}
	return nullptr;
}



inline jule::Ptr<_1db4a7e59_Field> _1db4a7e59_Struct::_method_find_field(jule::Str _14933_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4391305824:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Field> _1db4a7e59_f = *it;
			{
				if (_1db4a7e59_f->_field_ident == _14933_ident) {
					return _1db4a7e59_f;
				}
			}
			_iter_next_4391305824:;
			++it;
			goto _iter_begin_4391305824;
		}
		_iter_end_4391305824:;
	}
	return nullptr;
}



inline jule::Bool _1db4a7e59_Struct::_method_is_implements(jule::Ptr<_1c196b2a0_Trait> _15932_t) {
	{
		auto &expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_4391309792:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> &_1db4a7e59_it = *it;
			{
				if (_15932_t == _1db4a7e59_it) {
					return true;
				}
			}
			_iter_next_4391309792:;
			++it;
			goto _iter_begin_4391309792;
		}
		_iter_end_4391309792:;
	}
	return false;
}



inline jule::Bool _1db4a7e59_Struct::_method_is_derives(jule::Str _16929_ident) {
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4391311536:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> &_1db4a7e59_d = *it;
			{
				if (_1db4a7e59_d->_field_tag._field_kind == jule::Str("derive", 6)) {
					if ((_1db4a7e59_d->_field_args.len() == 1LL) && (_1db4a7e59_d->_field_args[0LL]._field_kind == _16929_ident)) {
						return true;
					}
				}
			}
			_iter_next_4391311536:;
			++it;
			goto _iter_begin_4391311536;
		}
		_iter_end_4391311536:;
	}
	return false;
}



inline jule::Bool _1db4a7e59_Struct::_method_is_uses(jule::Ptr<_1db4a7e59_Struct> _18126_s) {
	{
		auto &expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_4391318496:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> &_1db4a7e59_u = *it;
			{
				while (_18126_s == _1db4a7e59_u) {
					{
						return true;
					}
				_iter_next_4391319808:;
				}
				_iter_end_4391319808:;
			}
			_iter_next_4391318496:;
			++it;
			goto _iter_begin_4391318496;
		}
		_iter_end_4391318496:;
	}
	return false;
}



inline jule::Bool _1db4a7e59_Struct::_method_has_ref_accessible(void) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4391320176:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> &_1db4a7e59_m = *it;
			{
				if ((_1db4a7e59_m->_field_params.len() > 0LL) && _1db4a7e59_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_4391320176:;
			++it;
			goto _iter_begin_4391320176;
		}
		_iter_end_4391320176:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db4a7e59_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c17e2687_ParamIns> _1c17e2687_Param::_method_instance(void) {
	return jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(this->self,jule::Ptr<_1a8ad0a37_TypeKind>()));
}



inline jule::Bool _1c17e2687_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1c17e2687_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1c17e2687_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c17e2687_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



inline jule::Bool _1c17e2687_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



inline jule::Bool _1c17e2687_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1c17e2687_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1c17e2687_Fn::_method_is_anon(void) {
	return _1da81133a_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1c17e2687_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1c17e2687_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_4391374208:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Param> &_1c17e2687_p = *it;
			{
				if (_1c17e2687_parameter_uses_generics(_1c17e2687_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4391374208:;
			++it;
			goto _iter_begin_4391374208;
		}
		_iter_end_4391374208:;
	}
	return false;
}



inline jule::Bool _1c17e2687_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*this)._field_result->_field_kind == nullptr) || ((*this)._field_result->_field_kind->_field_kind == nullptr)) {
		return false;
	}
	return _1c17e2687_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ptr<_1c17e2687_FnIns> _1c17e2687_Fn::_method_instance_force(void) {
	jule::Ptr<_1c17e2687_FnIns> _11117_ins = jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),this->self,jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::new_struct<_1c197a248_Scope>(new( std::nothrow ) _1c197a248_Scope()),_1c18c86d5_ReferenceStack::_static_method_new(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::U8(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11117_ins->_field_refers=_1c18c86d5_ReferenceStack::_static_method_new();
	}
	_11117_ins->_field_params=jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto &expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_4391387664:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Param> _1c17e2687_p = *it;
			{
				_11117_ins->_field_params = jule::alloc_for_append(_11117_ins->_field_params,1);_11117_ins->_field_params.push(_1c17e2687_p->_method_instance());
			}
			_iter_next_4391387664:;
			++it;
			goto _iter_begin_4391387664;
		}
		_iter_end_4391387664:;
	}
	if (_11117_ins->_field_decl->_field_result != nullptr) {
		_11117_ins->_field_result=_11117_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11117_ins;
}



inline jule::Ptr<_1c17e2687_FnIns> _1c17e2687_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1c17e2687_Fn::_method_append_instance(jule::Ptr<_1c17e2687_FnIns>& _14239_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4391403728:;
		if (it != expr.end()) {
			jule::Int _1c17e2687_j = it - expr.begin();
			jule::Ptr<_1c17e2687_FnIns> &_1c17e2687_ains = *it;
			{
				if (_1c17e2687_ains->_method_same(_14239_ins)) {
					return std::make_tuple(false,_1c17e2687_j);
				}
			}
			_iter_next_4391403728:;
			++it;
			_1c17e2687_j++;
			goto _iter_begin_4391403728;
		}
		_iter_end_4391403728:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c17e2687_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b398be_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c1b398be_ImportInfo> _1c1b398be_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c1b58316_Var> _1c1b398be_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b398be_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ptr<_1db4a7e59_Struct> _1c1b398be_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ptr<_1c17e2687_Fn> _1c1b398be_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ptr<_1c196b2a0_Trait> _1c1b398be_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ptr<_1c196c834_Enum> _1c1b398be_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return nullptr;
	}
	return _1c1b398be_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1c1b398be_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if (((*this)._field_alias.len() != 0LL) || (*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1c1b398be_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto &expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_4392766192:;
		if (it != expr.end()) {
			_1da81133a_Token &_1c1b398be_sident = *it;
			{
				if (_1c1b398be_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4392766192:;
			++it;
			goto _iter_begin_4392766192;
		}
		_iter_end_4392766192:;
	}
	return false;
}



inline jule::Bool _1c1b398be_ImportInfo::_method_is_accessible_via_selection(void) {
	return ((*this)._field_import_all || ((*this)._field_selected.len() == 0LL)) || (*this)._method_exist_ident(jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b398be_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_FnCallExpr::_method_unhandled(void) {
	return (*this)._field_exception == nullptr;
}



inline jule::Bool _1da7b8e5d_FnCallExpr::_method_ignored(void) {
	return ((*this)._field_exception != nullptr) && (*this)._field_exception->_field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c18c86d5_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1b58316_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



inline jule::Bool _1c1b58316_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*this)._field_kind->_field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1b58316_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_TypeCompatibilityChecker::_method_push_err(jule::Str _13527_fmt,jule::Slice<jule::Any> _13540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13527_fmt,_13540_args);
}



inline jule::Bool _1c1d617a5_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _13932_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_13932_ok = true;
		return _13932_ok;
	}
	jule::Ptr<_1c196b2a0_Trait> _14413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14517_ref = false;
	{
		if ((*this)._field_src->_method_sptr() != nullptr) {
			_case_begin_4393756064:;
			{
				_14517_ref=true;
				(*this)._field_src=(*this)._field_src->_method_sptr()->_field_elem;
				if ((*this)._field_src->_method_strct() == nullptr) {
					_13932_ok = false;
					return _13932_ok;
				}
				goto _case_begin_4393756240;
			}
		}
		else if ((*this)._field_src->_method_strct() != nullptr) {
			_case_begin_4393756240:;
			{
				jule::Ptr<_1db4a7e59_StructIns> _15617_s = (*this)._field_src->_method_strct();
				if ((!(_15617_s->_field_decl->_method_is_implements(_14413_trt)))) {
					_13932_ok = false;
					return _13932_ok;
				}
				if ((!(_14517_ref)) && _1c1d617a5_trait_has_reference_receiver(_14413_trt)) {
					(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13932_ok = false;
					return _13932_ok;
				}
				_13932_ok = true;
				return _13932_ok;
			}
		}
		else if ((*this)._field_src->_method_trt() != nullptr) {
			_case_begin_4393756336:;
			{
				_13932_ok = _14413_trt == (*this)._field_src->_method_trt();
				return _13932_ok;
			}
		}
		else {
			_case_begin_4393754592:;
			{
				_13932_ok = false;
				return _13932_ok;
			}
		}
		_match_end_4393754480:;
	}
}



inline jule::Bool _1c1d617a5_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _17630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_17630_ok = true;
		return _17630_ok;
	}
	jule::Ptr<_1a8ad0a37_Ptr> _18117_dest = (*this)._field_dest->_method_ptr();
	if (_18117_dest->_method_is_unsafe()) {
		_17630_ok = true;
		return _17630_ok;
	}
	_17630_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _17630_ok;
}



inline jule::Bool _1c1d617a5_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _19031_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_Prim> _19113_prim = (*this)._field_dest->_method_prim();
	if ((_19113_prim != nullptr) && _19113_prim->_method_is_any()) {
		_19031_ok = true;
		return _19031_ok;
	}
	_19031_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _19031_ok;
}



inline jule::Bool _1c1d617a5_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _19826_ok = jule::Bool();
	if ((*this)._field_dest->_method_ptr() != nullptr) {
		_19826_ok = (*this)._method_check_ptr();
		return _19826_ok;
	}
	if ((*this)._field_dest->_method_nil_compatible()) {
		if ((*this)._field_src->_method_is_nil()) {
			_19826_ok = true;
			return _19826_ok;
		}
	}
	{
		if ((*this)._field_dest->_method_prim() != nullptr) {
			_case_begin_4393784944:;
			{
				_19826_ok = (*this)._method_check_prim();
				return _19826_ok;
			}
		}
		else if ((*this)._field_dest->_method_trt() != nullptr) {
			_case_begin_4393784192:;
			{
				_19826_ok = (*this)._method_check_trait();
				return _19826_ok;
			}
		}
		else {
			_case_begin_4393782848:;
			{
				_19826_ok = (*this)._field_dest->_method_equals((*this)._field_src);
				return _19826_ok;
			}
		}
		_match_end_4393782608:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_AssignTypeChecker::_method_push_err(jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _1c1d617a5_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _23017_valid = true;
	{
		if ((*this)._field_d->_field_kind->_method_fnc() != nullptr) {
			_case_begin_4393792992:;
			{
				jule::Ptr<_1c17e2687_FnIns> _23417_f = (*this)._field_d->_field_kind->_method_fnc();
				{
					if (_23417_f->_method_is_builtin()) {
						_case_begin_4393796784:;
						{
							(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_field_cpp_linked) {
						_case_begin_4393796896:;
						{
							(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_method_is_method()) {
						_case_begin_4393797008:;
						{
							(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_field_generics.len() > 0LL) {
						_case_begin_4393797120:;
						{
							(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					_match_end_4393796592:;
				}
			}
		}
		else if ((*this)._field_d->_field_kind->_method_tup() != nullptr) {
			_case_begin_4393793104:;
			{
				(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23017_valid=false;
			}
		}
		_match_end_4393792832:;
	}
	return _23017_valid;
}



inline jule::Bool _1c1d617a5_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || ((*this)._field_dest->_method_prim() == nullptr)) || ((*this)._field_d->_field_kind->_method_prim() == nullptr)) || (!(_1a8dc9a45_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _26913_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (_1a8dc9a45_is_float(_26913_kind)) {
			_case_begin_4393814608:;
			{
				if ((!(_1c1d617a5_float_assignable(_26913_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1a8dc9a45_is_int(_26913_kind)) {
			_case_begin_4393814704:;
			{
				if ((!(_1c1d617a5_int_assignable(_26913_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_4393813024:;
			{
				return false;
			}
		}
		_match_end_4393812784:;
	}
	return true;
}



inline jule::Bool _1c1d617a5_AssignTypeChecker::_method_is_prim(void) {
	if ((*this)._field_dest->_field_variadic || (*this)._field_d->_field_kind->_field_variadic) {
		return false;
	}
	if ((*this)._field_dest->_method_cpp_linked() || (*this)._field_d->_field_kind->_method_cpp_linked()) {
		return false;
	}
	return ((*this)._field_dest->_method_prim() != nullptr) && ((*this)._field_d->_field_kind->_method_prim() != nullptr);
}



inline jule::Bool _1c1d617a5_AssignTypeChecker::_method_check(void) {
	{
		if ((*this)._field_d == nullptr) {
			_case_begin_4393824560:;
			{
				return false;
			}
		}
		else if ((!((*this)._method_check_validity()))) {
			_case_begin_4393826800:;
			{
				return false;
			}
		}
		else if ((*this)._method_check_const()) {
			_case_begin_4393826896:;
			{
				return true;
			}
		}
		else if ((*this)._field_d->_field_kind->_method_enm() != nullptr) {
			_case_begin_4393826992:;
			{
				jule::Ptr<_1a8ad0a37_TypeKind> _31821_dkind = (*this)._field_dest;
				if ((*this)._field_dest->_method_enm() != nullptr) {
					_31821_dkind=(*this)._field_dest->_method_enm()->_field_kind->_field_kind;
				} else if ((*this)._field_dest->_method_prim() == nullptr) {
					goto _match_end_4393824304;
				}
				if (_1a8d4a39a_types_are_compatible((*this)._field_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_field_kind,_31821_dkind->_method_prim()->_field_kind)) {
					return true;
				}
			}
		}
		else if ((*this)._method_is_prim()) {
			_case_begin_4393827104:;
			{
				jule::Ptr<_1a8ad0a37_Prim> _33017_dest = (*this)._field_dest->_method_prim();
				if (_33017_dest->_method_is_any()) {
					return true;
				}
				jule::Ptr<_1a8ad0a37_Prim> _33421_src = (*this)._field_d->_field_kind->_method_prim();
				if (_1a8d4a39a_types_are_compatible(_33017_dest->_field_kind,_33421_src->_field_kind)) {
					return true;
				}
			}
		}
		_match_end_4393824304:;
	}
	return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_1a8ad0a37_TypeKind>& _35336_k,jule::Int _35350_i) {
	(*this)._field_f->_field_generics[_35350_i]=_35336_k;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_1a8ad0a37_TypeKind>& _35744_k) {
	jule::Bool _35760_ok = jule::Bool();
	jule::Str _35813_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4393855984:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1d617a5_g = *it;
			{
				if (_35813_kind != _1c1d617a5_g->_field_ident) {
					goto _iter_next_4393855984;
				}
				jule::Ptr<_1a8ad0a37_TypeKind> _36417_t = (*this)._field_f->_field_generics[_1c1d617a5_i];
				{
					if (_36417_t == nullptr) {
						_case_begin_4393860304:;
						{
							(*this)._method_push_generic(_35744_k,_1c1d617a5_i);
						}
					}
					else if ((!(_36417_t->_method_equals(_35744_k)))) {
						_case_begin_4393860400:;
						{
							_35760_ok = false;
							return _35760_ok;
						}
					}
					_match_end_4393860064:;
				}
				(*((*this)._field_k))->_field_kind=_35744_k->_field_kind;
				_35760_ok = true;
				return _35760_ok;
			}
			_iter_next_4393855984:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4393855984;
		}
		_iter_end_4393855984:;
	}
	_35760_ok = false;
	return _35760_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_1a8ad0a37_TypeKind>& _38143_k) {
	jule::Bool _38159_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_Slc> _38217_pslc = (*((*this)._field_k))->_method_slc();
	if (_38217_pslc == nullptr) {
		_38159_ok = false;
		return _38159_ok;
	}
	jule::Ptr<_1a8ad0a37_Slc> _38717_slc = _38143_k->_method_slc();
	(*this)._field_k=(&(_38217_pslc->_field_elem));
	_38159_ok = (*this)._method_annotate_kind(_38717_slc->_field_elem);
	return _38159_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_1a8ad0a37_TypeKind>* _39243_k,jule::Ptr<_1a8ad0a37_TypeKind>& _39263_ck) {
	jule::Bool _39280_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_TypeKind>* _39317_old = (*this)._field_k;
	(*this)._field_k=_39243_k;
	_39280_ok=(*this)._method_annotate_kind(_39263_ck);
	(*this)._field_k=_39317_old;
	return _39280_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_1a8ad0a37_TypeKind>& _40043_k) {
	jule::Bool _40059_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_Map> _40117_pmap = (*((*this)._field_k))->_method_map();
	if (_40117_pmap == nullptr) {
		_40059_ok = false;
		return _40059_ok;
	}
	jule::Ptr<_1a8ad0a37_Map> _40617_m = _40043_k->_method_map();
	_40059_ok = (*this)._method_check_map_key((&(_40117_pmap->_field_key)),_40617_m->_field_key) && (*this)._method_check_map_key((&(_40117_pmap->_field_val)),_40617_m->_field_val);
	return _40059_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_1a8ad0a37_TypeKind>& _41242_k) {
	jule::Bool _41258_ok = jule::Bool();
	jule::Ptr<_1c17e2687_FnIns> _41317_pf = (*((*this)._field_k))->_method_fnc();
	if (_41317_pf == nullptr) {
		_41258_ok = false;
		return _41258_ok;
	}
	jule::Ptr<_1c17e2687_FnIns> _41717_f = _41242_k->_method_fnc();
	{
		if (_41317_pf->_field_params.len() != _41717_f->_field_params.len()) {
			_case_begin_4393890048:;
			{
				_41258_ok = false;
				return _41258_ok;
			}
		}
		else if (_41317_pf->_field_decl->_method_is_void() != _41717_f->_field_decl->_method_is_void()) {
			_case_begin_4393890160:;
			{
				_41258_ok = false;
				return _41258_ok;
			}
		}
		_match_end_4393889888:;
	}
	_41258_ok=true;
	jule::Ptr<_1a8ad0a37_TypeKind>* _42717_old = (*this)._field_k;
	{
		auto &expr = _41717_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4393893680:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Ptr<_1c17e2687_ParamIns> _1c1d617a5_fp = *it;
			{
				(*this)._field_k=(&(_41317_pf->_field_params[_1c1d617a5_i]->_field_kind));
				_41258_ok=(*this)._method_annotate_kind(_1c1d617a5_fp->_field_kind) && _41258_ok;
			}
			_iter_next_4393893680:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4393893680;
		}
		_iter_end_4393893680:;
	}
	if ((!(_41317_pf->_field_decl->_method_is_void()))) {
		(*this)._field_k=(&(_41317_pf->_field_result));
		_41258_ok=(*this)._method_annotate_kind(_41717_f->_field_result) && _41258_ok;
	}
	(*this)._field_k=_42717_old;
	return _41258_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_1a8ad0a37_TypeKind>& _44243_k) {
	jule::Bool _44259_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_Ptr> _44317_pptr = (*((*this)._field_k))->_method_ptr();
	if (_44317_pptr == nullptr) {
		_44259_ok = false;
		return _44259_ok;
	}
	jule::Ptr<_1a8ad0a37_Ptr> _44817_ptr = _44243_k->_method_ptr();
	(*this)._field_k=(&(_44317_pptr->_field_elem));
	_44259_ok = (*this)._method_annotate_kind(_44817_ptr->_field_elem);
	return _44259_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_1a8ad0a37_TypeKind>& _45344_k) {
	jule::Bool _45360_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_Sptr> _45417_ssptr = (*((*this)._field_k))->_method_sptr();
	if (_45417_ssptr == nullptr) {
		_45360_ok = false;
		return _45360_ok;
	}
	jule::Ptr<_1a8ad0a37_Sptr> _45917_sptr = _45344_k->_method_sptr();
	(*this)._field_k=(&(_45417_ssptr->_field_elem));
	_45360_ok = (*this)._method_annotate_kind(_45917_sptr->_field_elem);
	return _45360_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_1a8ad0a37_TypeKind>& _46443_k) {
	jule::Bool _46459_ok = jule::Bool();
	jule::Str _46513_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4393917232:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Ptr<_1da7b8e5d_GenericDecl> &_1c1d617a5_g = *it;
			{
				if (_46513_kind != _1c1d617a5_g->_field_ident) {
					goto _iter_next_4393917232;
				}
				jule::Ptr<_1a8ad0a37_TypeKind> _47117_t = (*this)._field_f->_field_generics[_1c1d617a5_i];
				{
					if (_47117_t == nullptr) {
						_case_begin_4393921568:;
						{
							(*this)._method_push_generic(_46443_k,_1c1d617a5_i);
						}
					}
					else if ((!(_47117_t->_method_equals(_46443_k)))) {
						_case_begin_4393921664:;
						{
							_46459_ok = false;
							return _46459_ok;
						}
					}
					_match_end_4393921328:;
				}
				(*((*this)._field_k))->_field_kind=_46443_k->_field_kind;
				_46459_ok = true;
				return _46459_ok;
			}
			_iter_next_4393917232:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4393917232;
		}
		_iter_end_4393917232:;
	}
	_46459_ok = false;
	return _46459_ok;
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_1a8ad0a37_TypeKind>& _48844_k) {
	jule::Bool _48860_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _48860_ok;
	}
	{
		if ((*this)._method_annotate_any(_48844_k)) {
			_case_begin_4393929328:;
			{
				_48860_ok = true;
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_prim() != nullptr) {
			_case_begin_4393929424:;
			{
				_48860_ok = (*this)._method_annotate_prim(_48844_k);
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_slc() != nullptr) {
			_case_begin_4393928688:;
			{
				_48860_ok = (*this)._method_annotate_slc(_48844_k);
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_map() != nullptr) {
			_case_begin_4393928784:;
			{
				_48860_ok = (*this)._method_annotate_map(_48844_k);
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_fnc() != nullptr) {
			_case_begin_4393928880:;
			{
				_48860_ok = (*this)._method_annotate_fn(_48844_k);
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_ptr() != nullptr) {
			_case_begin_4393928112:;
			{
				_48860_ok = (*this)._method_annotate_ptr(_48844_k);
				return _48860_ok;
			}
		}
		else if (_48844_k->_method_sptr() != nullptr) {
			_case_begin_4393928208:;
			{
				_48860_ok = (*this)._method_annotate_sptr(_48844_k);
				return _48860_ok;
			}
		}
		else {
			_case_begin_4393926336:;
			{
				_48860_ok = false;
				return _48860_ok;
			}
		}
		_match_end_4393927744:;
	}
}



inline jule::Bool _1c1d617a5_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _50536_ok = jule::Bool();
	(*this)._field_k=(&((*this)._field_p->_field_kind));
	_50536_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _50536_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_FnCallArgChecker::_method_push_err_token(_1da81133a_Token _52133_token,jule::Str _52147_fmt,jule::Slice<jule::Any> _52160_args) {
	(*this)._field_e->_field_s->_method_push_err(_52133_token,_52147_fmt,_52160_args);
}



inline void _1c1d617a5_FnCallArgChecker::_method_push_err(jule::Str _52527_fmt,jule::Slice<jule::Any> _52540_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_52527_fmt,_52540_args);
}



inline jule::Slice<jule::Ptr<_1c17e2687_ParamIns>> _1c1d617a5_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && ((*this)._field_f->_field_params[0LL]->_field_decl != nullptr)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>& _53832_params) {
	jule::Bool _53855_ok = jule::Bool();
	jule::I64 _53917_n = _53832_params.len();
	if ((_53917_n > 0LL) && _53832_params[0LL]->_field_decl->_method_is_self()) {
		(_53917_n)--;
	}
	jule::I64 _54417_diff = _53917_n - (*this)._field_args.len();
	{
		if (_54417_diff == 0LL) {
			_case_begin_4393963632:;
			{
				_53855_ok = true;
				return _53855_ok;
			}
		}
		else if ((_53917_n > 0LL) && _53832_params[_53917_n - 1LL]->_field_decl->_field_variadic) {
			_case_begin_4393963728:;
			{
				_53855_ok = true;
				return _53855_ok;
			}
		}
		else if ((_54417_diff < 0LL) || (_54417_diff > _53832_params.len())) {
			_case_begin_4393963840:;
			{
				(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
				_53855_ok = false;
				return _53855_ok;
			}
		}
		_match_end_4393963472:;
	}
	jule::Str _55717_idents = jule::Str();
	for (; _54417_diff > 0LL; (_54417_diff)--) {
		{
			_55717_idents+=jule::Str(", ", 2) + _53832_params[_53917_n - _54417_diff]->_field_decl->_field_ident;
		}
	_iter_next_4393969520:;
	}
	_iter_end_4393969520:;
	_55717_idents=_55717_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_55717_idents)}));
	_53855_ok = false;
	return _53855_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_check_arg(jule::Ptr<_1c17e2687_ParamIns>& _56733_p,jule::Ptr<_1c1ead281_Data>& _56752_arg,_1da81133a_Token& _56769_error_token) {
	jule::Bool _56791_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1c17e2687_parameter_uses_generics(_56733_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1c1d617a5_DynamicTypeAnnotation _56921_dta = _1c1d617a5_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_56733_p,_56752_arg,_56769_error_token,nullptr);
		_56791_ok=_56921_dta._method_annotate();
		if ((!(_56791_ok))) {
			(*this)._method_push_err_token(_56769_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_56791_ok = false;
			return _56791_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_56733_p->_field_decl->_field_mutable,_56733_p->_field_decl->_field_reference,_56733_p->_field_kind,_56752_arg,_56769_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_56733_p->_field_decl->_field_reference,_56733_p->_field_kind,_56752_arg,_56769_error_token);
	_56791_ok = true;
	return _56791_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_push(jule::Ptr<_1c17e2687_ParamIns>& _58928_p,jule::Ptr<_1da7b8e5d_Expr> _58946_arg) {
	jule::Bool _58960_ok = jule::Bool();
	jule::Ptr<_1a8ad0a37_TypeKind> _59017_old = (*this)._field_e->_field_prefix;
	jule::Bool _59113_old_immut = (*this)._field_e->_field_immutable;
	jule::Ptr<_1c1ead281_Data> _59217_d = nullptr;
	(*this)._field_e->_field_immutable=(!(_58928_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_58928_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_58928_p->_field_kind;
	} else {
		(*this)._field_e->_field_prefix=nullptr;
	}
	_59217_d=(*this)._field_e->_method_eval_expr_kind(_58946_arg->_field_kind);
	(*this)._field_e->_field_prefix=_59017_old;
	(*this)._field_e->_field_immutable=_59113_old_immut;
	if (_59217_d == nullptr) {
		_58960_ok = false;
		return _58960_ok;
	}
	(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_59217_d->_field_model);
	_58960_ok = (*this)._method_check_arg(_58928_p,_59217_d,_58946_arg->_field_token);
	return _58960_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_push_variadic(jule::Ptr<_1c17e2687_ParamIns>& _61337_p,jule::Int _61355_i) {
	jule::Bool _61365_ok = jule::Bool();
	_61365_ok=true;
	jule::Bool _61517_variadiced = false;
	jule::Bool _61613_more = (_61355_i + 1LL) < (*this)._field_args.len();
	jule::Ptr<_1c19727a1_SliceExprModel> _61717_model = jule::new_struct<_1c19727a1_SliceExprModel>(new( std::nothrow ) _1c19727a1_SliceExprModel(_61337_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1a8ad0a37_TypeKind> _62117_old = (*this)._field_e->_field_prefix;
	for (; _61355_i < (*this)._field_args.len(); (_61355_i)++) {
		{
			jule::Ptr<_1da7b8e5d_Expr> _62321_arg = (*this)._field_args[_61355_i];
			{
				auto &_match_expr{ _62321_arg->_field_kind };
				if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_VariadicExpr>>()) {
					_case_begin_4394008928:;
					{
						(*this)._field_e->_field_prefix=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_61337_p->_field_kind))));
					}
				}
				else {
					_case_begin_4394006448:;
					{
						(*this)._field_e->_field_prefix=_61337_p->_field_kind;
					}
				}
				_match_end_4394007520:;
			}
			jule::Ptr<_1c1ead281_Data> _63321_d = (*this)._field_e->_method_eval(_62321_arg);
			if (_63321_d == nullptr) {
				_61365_ok=false;
				goto _iter_next_4394005088;
			}
			if (_63321_d->_field_kind->_field_variadic) {
				_61517_variadiced=true;
				jule::Bool _64221_pold = _61337_p->_field_kind->_field_variadic;
				jule::Bool _64321_dold = _63321_d->_field_kind->_field_variadic;
				_61337_p->_field_kind->_field_variadic=false;
				_63321_d->_field_kind->_field_variadic=false;
				__JULE_DEFER({
					_61337_p->_field_kind->_field_variadic=_64221_pold;
					_63321_d->_field_kind->_field_variadic=_64321_dold;
				});
				{
					auto &_match_expr{ _63321_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_SliceExprModel>>()) {
						_case_begin_4394017600:;
						{
							_61717_model=_63321_d->_field_model.operator jule::Ptr<_1c19727a1_SliceExprModel>();
							_61717_model->_field_elem_kind=_61337_p->_field_kind;
						}
					}
					else {
						_case_begin_4394013968:;
						{
							_61717_model=nullptr;
							(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_63321_d->_field_model);
						}
					}
					_match_end_4394015216:;
				}
				_61365_ok=_61365_ok && (*this)._method_check_arg(_61337_p,_63321_d,_62321_arg->_field_token);
				goto _iter_next_4394005088;
			}
			_61717_model->_field_elems = jule::alloc_for_append(_61717_model->_field_elems,1);_61717_model->_field_elems.push(_63321_d->_field_model);
			_61365_ok=_61365_ok && (*this)._method_check_arg(_61337_p,_63321_d,_62321_arg->_field_token);
		}
	_iter_next_4394005088:;
	}
	_iter_end_4394005088:;
	(*this)._field_e->_field_prefix=_62117_old;
	if (_61517_variadiced && _61613_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if (_61717_model != nullptr) {
		(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(jule::Any(_61717_model));
	}
	return _61365_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>& _68034_params) {
	jule::Bool _68057_ok = jule::Bool();
	_68057_ok=true;
	jule::Int _68217_i = 0LL;
	_julec_label_iter:;
	while (_68217_i < _68034_params.len()) {
		{
			jule::Ptr<_1c17e2687_ParamIns> _68521_p = _68034_params[_68217_i];
			{
				if (_68521_p->_field_decl->_method_is_self()) {
					_case_begin_4394032064:;
				}
				else if (_68521_p->_field_decl->_field_variadic) {
					_case_begin_4394031792:;
					{
						_68057_ok=(*this)._method_push_variadic(_68521_p,_68217_i) && _68057_ok;
						goto _iter_end_4394027440;
					}
				}
				else if ((*this)._field_args.len() <= _68217_i) {
					_case_begin_4394033456:;
					{
						_68057_ok=false;
						goto _iter_end_4394027440;
					}
				}
				else {
					_case_begin_4394030992:;
					{
						_68057_ok=(*this)._method_push(_68521_p,(*this)._field_args[_68217_i]) && _68057_ok;
					}
				}
				_match_end_4394030880:;
			}
			(_68217_i)++;
		}
	_iter_next_4394027440:;
	}
	_iter_end_4394027440:;
	return _68057_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _70750_ok = jule::Bool();
	{
		auto &expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4394038768:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeKind> &_1c1d617a5_g = *it;
			{
				if (_1c1d617a5_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_70750_ok = false;
					return _70750_ok;
				}
			}
			_iter_next_4394038768:;
			++it;
			goto _iter_begin_4394038768;
		}
		_iter_end_4394038768:;
	}
	_70750_ok = true;
	return _70750_ok;
}



inline jule::Bool _1c1d617a5_FnCallArgChecker::_method_check(void) {
	jule::Bool _71726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1c17e2687_ParamIns>> _71817_params = (*this)._method_get_params();
	_71726_ok=(*this)._method_check_counts(_71817_params);
	if ((!(_71726_ok))) {
		_71726_ok = false;
		return _71726_ok;
	}
	_71726_ok=(*this)._method_check_args(_71817_params);
	if (_71726_ok && (*this)._field_dynamic_annotation) {
		_71726_ok=(*this)._method_check_dynamic_type_annotation();
	}
	return _71726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_StructLitChecker::_method_push_err(_1da81133a_Token _74127_token,jule::Str _74141_fmt,jule::Slice<jule::Any> _74154_args) {
	(*this)._field_e->_method_push_err(_74127_token,_74141_fmt,_74154_args);
}



inline void _1c1d617a5_StructLitChecker::_method_push_suggestion(jule::Str _74634_fmt,jule::Slice<jule::Any> _74647_args) {
	(*this)._field_e->_method_push_suggestion(_74634_fmt,_74647_args);
}



inline void _1c1d617a5_StructLitChecker::_method_push_match(jule::Ptr<_1db4a7e59_FieldIns>& _75034_f,jule::Ptr<_1c1ead281_Data>& _75053_d,_1da81133a_Token& _75068_error_token) {
	(*this)._field_args = jule::alloc_for_append((*this)._field_args,1);(*this)._field_args.push(jule::new_struct<_1c19727a1_StructArgExprModel>(new( std::nothrow ) _1c19727a1_StructArgExprModel(_75034_f,_75053_d->_field_model)));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_75034_f->_field_kind,_75053_d,_75068_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_75034_f->_field_kind,_75053_d,_75068_error_token);
}



inline void _1c1d617a5_StructLitChecker::_method_check_pair(jule::Ptr<_1da7b8e5d_FieldExprPair>& _76134_pair,jule::Slice<jule::Any>& _76161_exprs) {
	jule::Ptr<_1db4a7e59_FieldIns> _76317_f = (*this)._field_s->_method_find_field(_76134_pair->_field_field._field_kind);
	if (_76317_f == nullptr) {
		(*this)._method_push_err(_76134_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_76134_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_76317_f->_field_decl->_field_public,_76317_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_76134_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_76134_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _76161_exprs;
		auto it = expr.begin();
		_iter_begin_4394077712:;
		if (it != expr.end()) {
			jule::Any _1c1d617a5_expr = *it;
			{
				{
					auto &_match_expr{ _1c1d617a5_expr };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FieldExprPair>>()) {
						_case_begin_4394078928:;
						{
							jule::Ptr<_1da7b8e5d_FieldExprPair> _77925_dpair = _1c1d617a5_expr.operator jule::Ptr<_1da7b8e5d_FieldExprPair>();
							{
								if (_76134_pair == _77925_dpair) {
									_case_begin_4394082048:;
									{
										goto _iter_end_4394077712;
									}
								}
								else if (_76134_pair->_field_field._field_kind == _77925_dpair->_field_field._field_kind) {
									_case_begin_4394082160:;
									{
										(*this)._method_push_err(_76134_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_76134_pair->_field_field._field_kind)}));
										goto _iter_end_4394077712;
									}
								}
								_match_end_4394081904:;
							}
						}
					}
					_match_end_4394079312:;
				}
			}
			_iter_next_4394077712:;
			++it;
			goto _iter_begin_4394077712;
		}
		_iter_end_4394077712:;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _79117_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_79117_prefix;
	});
	(*this)._field_e->_field_prefix=_76317_f->_field_kind;
	jule::Ptr<_1c1ead281_Data> _79517_d = (*this)._field_e->_method_eval_expr_kind(_76134_pair->_field_expr);
	if (_79517_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_76317_f,_79517_d,_76134_pair->_field_field);
}



inline jule::Bool _1c1d617a5_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _80235_exprs) {
	jule::Bool _80317_ok = true;
	{
		auto &expr = _80235_exprs;
		auto it = expr.begin();
		_iter_begin_4394092736:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Any _1c1d617a5_expr = *it;
			{
				{
					auto &_match_expr{ _1c1d617a5_expr };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_KeyValPair>>()) {
						_case_begin_4394094656:;
						{
							jule::Ptr<_1da7b8e5d_KeyValPair> _80725_pair = _1c1d617a5_expr.operator jule::Ptr<_1da7b8e5d_KeyValPair>();
							{
								auto &_match_expr{ _80725_pair->_field_key };
								if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentExpr>>()) {
									_case_begin_4394098816:;
								}
								else {
									_case_begin_4394095136:;
									{
										(*this)._method_push_err(_80725_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_80317_ok=false;
										goto _iter_next_4394092736;
									}
								}
								_match_end_4394097392:;
							}
							_80235_exprs.__at(_1c1d617a5_i)=jule::Any(jule::new_struct<_1da7b8e5d_FieldExprPair>(new( std::nothrow ) _1da7b8e5d_FieldExprPair(_80725_pair->_field_key.operator jule::Ptr<_1da7b8e5d_IdentExpr>()->_field_token,_80725_pair->_field_val)));
						}
					}
					_match_end_4394095040:;
				}
			}
			_iter_next_4394092736:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4394092736;
		}
		_iter_end_4394092736:;
	}
	return _80317_ok;
}



inline void _1c1d617a5_StructLitChecker::_method_check(jule::Slice<jule::Any>& _82829_exprs) {
	if (_82829_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_82829_exprs)))) {
		return;
	}
	jule::Bool _83717_paired = false;
	{
		auto &expr = _82829_exprs;
		auto it = expr.begin();
		_iter_begin_4394105520:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Any _1c1d617a5_expr = *it;
			{
				{
					auto &_match_expr{ _1c1d617a5_expr };
					if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FieldExprPair>>()) {
						_case_begin_4394107344:;
						{
							jule::Ptr<_1da7b8e5d_FieldExprPair> _84125_pair = _1c1d617a5_expr.operator jule::Ptr<_1da7b8e5d_FieldExprPair>();
							if ((_1c1d617a5_i > 0LL) && (!(_83717_paired))) {
								(*this)._method_push_err(_84125_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_83717_paired=true;
							(*this)._method_check_pair(_84125_pair,_82829_exprs);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Expr>>()) {
						_case_begin_4394107808:;
						{
							jule::Ptr<_1da7b8e5d_Expr> _84925_e = _1c1d617a5_expr.operator jule::Ptr<_1da7b8e5d_Expr>();
							if (_83717_paired) {
								(*this)._method_push_err(_84925_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1c1d617a5_i >= (*this)._field_s->_field_fields.len()) {
								(*this)._method_push_err(_84925_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
								goto _iter_next_4394105520;
							}
							jule::Ptr<_1db4a7e59_FieldIns> _85825_field = (*this)._field_s->_field_fields[_1c1d617a5_i];
							jule::Ptr<_1a8ad0a37_TypeKind> _86025_prefix = (*this)._field_e->_field_prefix;
							__JULE_DEFER({
								(*this)._field_e->_field_prefix=_86025_prefix;
							});
							(*this)._field_e->_field_prefix=_85825_field->_field_kind;
							jule::Ptr<_1c1ead281_Data> _86425_d = (*this)._field_e->_method_eval_expr_kind(_84925_e->_field_kind);
							if (_86425_d == nullptr) {
								goto _iter_next_4394105520;
							}
							(*this)._method_push_match(_85825_field,_86425_d,_84925_e->_field_token);
						}
					}
					_match_end_4394107728:;
				}
			}
			_iter_next_4394105520:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4394105520;
		}
		_iter_end_4394105520:;
	}
	if ((!(_83717_paired))) {
		jule::I64 _87517_n = (*this)._field_s->_field_fields.len();
		jule::I64 _87621_diff = _87517_n - _82829_exprs.len();
		{
			if (_87621_diff <= 0LL) {
				_case_begin_4394125904:;
				{
					return;
				}
			}
			_match_end_4394125456:;
		}
		jule::Str _88221_idents = jule::Str();
		for (; _87621_diff > 0LL; (_87621_diff)--) {
			{
				_88221_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_87517_n - _87621_diff]->_field_decl->_field_ident;
			}
		_iter_next_4394124240:;
		}
		_iter_end_4394124240:;
		_88221_idents=_88221_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_88221_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_TypeDecl>>()) {
			_case_begin_4386751984:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386750096:;
			{
				return false;
			}
		}
		_match_end_4386750432:;
	}
}



inline jule::Bool _1da7b8e5d_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Comment>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_CommentGroup>>()) {
			_case_begin_4386767712:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386765872:;
			{
				return false;
			}
		}
		_match_end_4386766160:;
	}
}



inline jule::Bool _1da7b8e5d_Node::_method_is_directive(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Directive>>()) {
			_case_begin_4386771104:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386769264:;
			{
				return false;
			}
		}
		_match_end_4386769552:;
	}
}



inline jule::Bool _1da7b8e5d_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_Impl>>()) {
			_case_begin_4386774112:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386772272:;
			{
				return false;
			}
		}
		_match_end_4386772560:;
	}
}



inline jule::Bool _1da7b8e5d_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_UseDecl>>()) {
			_case_begin_4386777120:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386775280:;
			{
				return false;
			}
		}
		_match_end_4386775568:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1c1d617a5_RetTypeChecker::_method_prepare_types(void) {
	if ((*this)._field_f != nullptr) {
		(*this)._field_types=_1c1d617a5_get_result_types((*this)._field_f->_field_result);
	}
}



inline void _1c1d617a5_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_1da7b8e5d_Expr>& _106837_e) {
	if (_106837_e == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _106837_e->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TupleExpr>>()) {
			_case_begin_4394207760:;
			{
				(*this)._field_exprs=_106837_e->_field_kind.operator jule::Ptr<_1da7b8e5d_TupleExpr>()->_field_expr;
			}
		}
		else {
			_case_begin_4394206912:;
			{
				(*this)._field_exprs = jule::alloc_for_append((*this)._field_exprs,1);(*this)._field_exprs.push(_106837_e);
			}
		}
		_match_end_4394205936:;
	}
}



inline void _1c1d617a5_RetTypeChecker::_method_ret_vars(void) {
	if (((*this)._field_f == nullptr) || (*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_1c1b58316_Var>>::alloc(0LL,static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ptr<_1c197a248_ScopeChecker> _108817_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _109017_j = 0LL;
	{
		auto &expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4394215584:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			_1da81133a_Token &_1c1d617a5_ident = *it;
			{
				if ((!(_1da81133a_is_ignore_ident(_1c1d617a5_ident._field_kind)))) {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(_108817_root_scope->_field_table->_field_vars[_109017_j]);
					(_109017_j)++;
				} else {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(jule::Ptr<_1c197a248_Scope>(),_1da81133a_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),(*this)._field_types[_1c1d617a5_i])),jule::Ptr<_1c1ead281_Value>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>())));
				}
			}
			_iter_next_4394215584:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4394215584;
		}
		_iter_end_4394215584:;
	}
	if (_109017_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1c1d617a5_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1c1ead281_Data>> _111417_datas = jule::Slice<jule::Ptr<_1c1ead281_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto &expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_4394225040:;
		if (it != expr.end()) {
			jule::Int _1c1d617a5_i = it - expr.begin();
			jule::Ptr<_1da7b8e5d_Expr> _1c1d617a5_expr = *it;
			{
				if (_1c1d617a5_i >= (*this)._field_types.len()) {
					goto _iter_end_4394225040;
				}
				jule::Ptr<_1a8ad0a37_TypeKind> _112121_t = (*this)._field_types[_1c1d617a5_i];
				jule::Ptr<_1c1ead281_Data> _112321_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_112121_t)->_method_eval_expr(_1c1d617a5_expr);
				if (_112321_d == nullptr) {
					goto _iter_next_4394225040;
				}
				_111417_datas.push(_112321_d);
				if ((!(_112321_d->_field_mutable)) && _112321_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1c1d617a5_AssignTypeChecker _113521_ac = _1c1d617a5_AssignTypeChecker((*this)._field_sc->_field_s,_112121_t,_112321_d,(*this)._field_error_token);
				_113521_ac._method_check();
			}
			_iter_next_4394225040:;
			++it;
			_1c1d617a5_i++;
			goto _iter_begin_4394225040;
		}
		_iter_end_4394225040:;
	}
	if (_111417_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1c19727a1_TupleExprModel>(new( std::nothrow ) _1c19727a1_TupleExprModel(_111417_datas)));
	} else if (_111417_datas.len() == 1LL) {
		(*this)._field_model=_111417_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1c1d617a5_RetTypeChecker::_method_check(jule::Ptr<_1da7b8e5d_Expr>& _115429_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_115429_e);
	(*this)._method_ret_vars();
	jule::I64 _115913_n = (*this)._field_exprs.len();
	if ((_115913_n == 0LL) && ((*this)._field_types.len() > 0LL)) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_115913_n > 0LL) && ((*this)._field_f != nullptr)) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_115913_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_115913_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>());
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1d617a5_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c196b2a0_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1c196b2a0_Trait::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _2522_other) {
	jule::Ptr<_1c196b2a0_Trait> _2613_trt = _2522_other->_method_trt();
	return this->self == _2613_trt;
}



inline jule::Bool _1c196b2a0_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ptr<_1c17e2687_Fn> _1c196b2a0_Trait::_method_find_method(jule::Str _3734_ident) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4391755632:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1c196b2a0_f = *it;
			{
				if (_1c196b2a0_f->_field_ident == _3734_ident) {
					return _1c196b2a0_f;
				}
			}
			_iter_next_4391755632:;
			++it;
			goto _iter_begin_4391755632;
		}
		_iter_end_4391755632:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c196b2a0_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c196c834_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c196c834_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c196c834_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1c196c834_Enum::_method_equals(jule::Ptr<_1a8ad0a37_TypeKind> _3522_other) {
	jule::Ptr<_1c196c834_Enum> _3613_enm = _3522_other->_method_enm();
	return this->self == _3613_enm;
}



inline jule::Ptr<_1c196c834_EnumItem> _1c196c834_Enum::_method_find_item(jule::Str _4432_ident) {
	{
		auto &expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_4391766704:;
		if (it != expr.end()) {
			jule::Ptr<_1c196c834_EnumItem> _1c196c834_item = *it;
			{
				if (_1c196c834_item->_field_ident == _4432_ident) {
					return _1c196c834_item;
				}
			}
			_iter_next_4391766704:;
			++it;
			goto _iter_begin_4391766704;
		}
		_iter_end_4391766704:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c196c834_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1977ee3_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1c1977ee3_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1977ee3_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1ead281_BinopSolver::_method_check_type_compatibility(void) {
	return (*this)._field_e->_field_s->_method_check_type_compatibility((*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396000496:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4395994576:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_4395997664:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_enum(void) {
	jule::Ptr<_1c196c834_Enum> _372017_enm = (*this)._field_l->_field_kind->_method_enm();
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396004528:;
			{
				jule::Ptr<_1a8ad0a37_TypeKind> _372421_rkind = (*this)._field_r->_field_kind;
				if ((*this)._field_r->_field_kind->_method_enm() != nullptr) {
					_372421_rkind=(*this)._field_r->_field_kind->_method_enm()->_field_kind->_field_kind;
				}
				if ((!((*this)._field_e->_field_s->_method_check_type_compatibility(_372017_enm->_field_kind->_field_kind,_372421_rkind,(*this)._field_op)))) {
					return nullptr;
				}
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		_match_end_4396004448:;
	}
	if (((*this)._field_r->_field_kind->_method_enm() == nullptr) || (_372017_enm != (*this)._field_r->_field_kind->_method_enm())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_372017_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_4396018432:;
			{
				if ((!(_1a8dc9a45_is_num(_372017_enm->_field_kind->_field_kind->_method_to_str())))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_372017_enm->_field_ident)}));
					return nullptr;
				}
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1)) {
			_case_begin_4396017968:;
			{
				if ((_372017_enm->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_1a8dc9a45_is_int(_372017_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_372017_enm->_field_ident)}));
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_4396010192:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_372017_enm->_field_ident)}));
				return nullptr;
			}
		}
		_match_end_4396015168:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396034304:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396030752:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396030640:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_4396040608:;
			{
				if ((!((*this)._method_check_type_compatibility()))) {
					return nullptr;
				}
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_4396040800:;
			{
				if ((*this)._field_l->_field_kind->_method_ptr() == nullptr) {
					std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				}
				if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				}
				if ((!(_1c1ead281_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_4396031424:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396037072:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396056912:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396056096:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396056000:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396066864:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396063712:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396062384:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396074112:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396070960:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396069632:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396081360:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396078208:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396076880:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396086032:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396085456:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396084240:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396092336:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396085664:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_4396091504:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_4396101968:;
			{
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_4396098816:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_4396097488:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_str(void) {
	jule::Str _396317_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_396317_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_396317_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_4396111216:;
			{
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_4396111408:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		else {
			_case_begin_4396108512:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_4396108256:;
	}
}



inline void _1c1ead281_BinopSolver::_method_set_type_to_greater(void) {
	if ((*this)._field_l->_method_is_const()) {
		if ((!((*this)._field_r->_method_is_const()))) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_r->_method_is_const()) {
		return;
	}
	if (_1a8d4a39a_is_greater((*this)._field_r->_field_kind->_method_prim()->_field_kind,(*this)._field_l->_field_kind->_method_prim()->_field_kind)) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
	}
}



inline void _1c1ead281_BinopSolver::_method_check_mod_data(jule::Ptr<_1c1ead281_Data>& _400338_d) {
	if ((!(_400338_d->_method_is_const()))) {
		if ((_400338_d->_field_kind->_method_prim() == nullptr) || (!(_1a8dc9a45_is_int(_400338_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		if (_1c1d617a5_sig_assignable(jule::Str("i64", 3),_400338_d)) {
			_case_begin_4396122464:;
			{
				_400338_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_400338_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_1c1d617a5_unsig_assignable(jule::Str("u64", 3),_400338_d)) {
			_case_begin_4396127952:;
			{
				_400338_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_400338_d->_field_constant->_method_as_u64()));
			}
		}
		else {
			_case_begin_4396122080:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_4396122000:;
	}
}



inline void _1c1ead281_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1c1ead281_BinopSolver::_method_numbers_are_compatibile(jule::Str& _402839_lk,jule::Str& _402849_rk) {
	if ((!(_1a8dc9a45_is_num(_402849_rk)))) {
		return false;
	}
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_402839_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _402849_rk == jule::Str("f32", 3);
	}
	if (_402839_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _402849_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		{
			auto &_match_expr{ (*this)._field_r->_field_model };
			if (_match_expr.type_is<jule::Ptr<_1c19727a1_RuneExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d46165_Const>>()) {
				_case_begin_4396144576:;
				{
					if (_1a8dc9a45_is_sig_int(_402839_lk)) {
						return _1c1d617a5_int_assignable(jule::Str("int", 3),(*this)._field_r);
					}
					return _1c1d617a5_int_assignable(jule::Str("uint", 4),(*this)._field_r);
				}
			}
			_match_end_4396137776:;
		}
	}
	return _1a8dc9a45_is_sig_int(_402839_lk) == _1a8dc9a45_is_sig_int(_402849_rk);
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_float(void) {
	jule::Str _406713_lk = (*this)._field_l->_field_kind->_method_prim()->_field_kind;
	jule::Str _406813_rk = (*this)._field_r->_field_kind->_method_prim()->_field_kind;
	if ((!((*this)._method_numbers_are_compatibile(_406713_lk,_406813_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_406713_lk),jule::Any(_406813_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_4396152624:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		_match_end_4396153008:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_4396160832:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_4396161024:;
			{
				if ((!(_1a8dc9a45_is_int(_406813_rk)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_406713_lk),jule::Any(_406813_rk)}));
					return nullptr;
				}
				(*this)._method_mod();
				return (*this)._field_r;
			}
		}
		else {
			_case_begin_4396153200:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4396158896:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_int(void) {
	jule::Str _411313_lk = (*this)._field_l->_field_kind->_method_prim()->_field_kind;
	jule::Str _411413_rk = (*this)._field_r->_field_kind->_method_prim()->_field_kind;
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_4396168800:;
			{
				if ((!(_1a8dc9a45_is_int(_411313_lk))) || (!(_1a8dc9a45_is_int(_411413_rk)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_411313_lk),jule::Any(_411413_rk)}));
					return nullptr;
				}
				if ((!(_1c1ead281_is_ok_for_shifting((*this)._field_r)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				if ((*this)._field_l->_method_is_const() && (!((*this)._field_r->_method_is_const()))) {
					(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
				}
				return (*this)._field_l;
			}
		}
		_match_end_4396170448:;
	}
	if ((!((*this)._method_numbers_are_compatibile(_411313_lk,_411413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_411313_lk),jule::Any(_411413_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_4396181696:;
			{
				return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
			}
		}
		_match_end_4396181616:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_4396188016:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_4396188160:;
			{
				(*this)._method_mod();
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_4396181904:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_4396186160:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval_prim(void) {
	jule::Ptr<_1a8ad0a37_Prim> _417913_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (_417913_prim->_method_is_bool()) {
			_case_begin_4396195248:;
			{
				return (*this)._method_eval_bool();
			}
		}
		else if (_417913_prim->_method_is_str()) {
			_case_begin_4396195360:;
			{
				return (*this)._method_eval_str();
			}
		}
		_match_end_4396195088:;
	}
	if ((*this)._field_r->_field_kind->_method_prim() == nullptr) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_417913_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		if (_1a8dc9a45_is_float(_417913_prim->_field_kind)) {
			_case_begin_4396203232:;
			{
				return (*this)._method_eval_float();
			}
		}
		else if (_1a8dc9a45_is_int(_417913_prim->_field_kind)) {
			_case_begin_4396203376:;
			{
				return (*this)._method_eval_int();
			}
		}
		else {
			_case_begin_4396196400:;
			{
				return nullptr;
			}
		}
		_match_end_4396201904:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_eval(void) {
	{
		if ((*this)._field_l->_field_kind->_method_void()) {
			_case_begin_4396208272:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((*this)._field_r->_field_kind->_method_prim() != nullptr) && (*this)._field_r->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_4396208464:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_4396208560;
			}
		}
		else if (((*this)._field_l->_field_kind->_method_prim() != nullptr) && (*this)._field_l->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_4396208560:;
			{
				return (*this)._method_eval_any();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_is_nil()) {
			_case_begin_4396207200:;
			{
				return (*this)._method_eval_nil();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_enm() != nullptr) {
			_case_begin_4396207296:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_4396207392;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_enm() != nullptr) {
			_case_begin_4396207392:;
			{
				return (*this)._method_eval_enum();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_sptr() != nullptr) {
			_case_begin_4396207488:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_4396208688;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_sptr() != nullptr) {
			_case_begin_4396208688:;
			{
				return (*this)._method_eval_sptr();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_ptr() != nullptr) {
			_case_begin_4396208784:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_4396208880;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_ptr() != nullptr) {
			_case_begin_4396208880:;
			{
				return (*this)._method_eval_ptr();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_arr() != nullptr) {
			_case_begin_4396208976:;
			{
				return (*this)._method_eval_arr();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_slc() != nullptr) {
			_case_begin_4396209072:;
			{
				return (*this)._method_eval_slc();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_fnc() != nullptr) {
			_case_begin_4396209168:;
			{
				return (*this)._method_eval_fn();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_trt() != nullptr) {
			_case_begin_4396209264:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_4396209376;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_trt() != nullptr) {
			_case_begin_4396209376:;
			{
				return (*this)._method_eval_trait();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_strct() != nullptr) {
			_case_begin_4396209488:;
			{
				return (*this)._method_eval_struct();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_prim() != nullptr) {
			_case_begin_4396209600:;
			{
				return (*this)._method_eval_prim();
			}
		}
		else {
			_case_begin_4396206896:;
			{
				return nullptr;
			}
		}
		_match_end_4396206720:;
	}
}



inline void _1c1ead281_BinopSolver::_method_solve_const(jule::Ptr<_1c1ead281_Data>& _425735_d) {
	{
		if (_425735_d == nullptr) {
			_case_begin_4396245680:;
			{
				return;
			}
		}
		else if ((!((*this)._field_l->_method_is_const())) || (!((*this)._field_r->_method_is_const()))) {
			_case_begin_4396245792:;
			{
				_425735_d->_field_constant=nullptr;
				return;
			}
		}
		_match_end_4396245456:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_4396248912:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_4396248656:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))))));
			}
		}
		else if (_match_expr == jule::Str("::", 2)) {
			_case_begin_4396249408:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_4396249504:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_4396249600:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_4396249696:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_4396249808:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_4396249920:;
			{
				_425735_d->_field_constant=_1a8d46165_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_4396250032:;
			{
				(*this)._field_l->_field_constant->_method_add((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_4396250144:;
			{
				(*this)._field_l->_field_constant->_method_sub((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_4396250256:;
			{
				(*this)._field_l->_field_constant->_method_mul((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_4396250368:;
			{
				jule::Bool _431017_ok = (*this)._field_l->_field_constant->_method_div((*((*this)._field_r->_field_constant)));
				if ((!(_431017_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_4396250480:;
			{
				jule::Bool _431717_ok = (*this)._field_l->_field_constant->_method_mod((*((*this)._field_r->_field_constant)));
				if ((!(_431717_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_4396250592:;
			{
				(*this)._field_l->_field_constant->_method_bitwise_or((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_4396250704:;
			{
				(*this)._field_l->_field_constant->_method_bitwise_and((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_4396250816:;
			{
				(*this)._field_l->_field_constant->_method_xor((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_4396250928:;
			{
				(*this)._field_l->_field_constant->_method_lshift((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_4396251040:;
			{
				(*this)._field_l->_field_constant->_method_rshift((*((*this)._field_r->_field_constant)));
				_425735_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		_match_end_4396248272:;
	}
	_425735_d->_field_model=jule::Any(_425735_d->_field_constant);
}



inline void _1c1ead281_BinopSolver::_method_post_const(jule::Ptr<_1c1ead281_Data>& _434730_d) {
	if (_434730_d == nullptr) {
		return;
	}
	_1c1ead281_normalize_bitsize(_434730_d);
}



inline void _1c1ead281_BinopSolver::_method_check_data(jule::Ptr<_1c1ead281_Data>& _435534_d) {
	jule::Ptr<_1c17e2687_FnIns> _435613_f = _435534_d->_field_kind->_method_fnc();
	if (((_435613_f != nullptr) && (_435613_f->_field_decl != nullptr)) && _435613_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1c1ead281_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline void _1c1ead281_BinopSolver::_method_set_model(jule::Ptr<_1c1ead281_Data>& _436733_d) {
	if (_436733_d->_method_is_const()) {
		return;
	}
	jule::Ptr<_1c1ead281_Data> _437218_l = (*this)._field_l;
	jule::Ptr<_1c1ead281_Data> _437225_r = (*this)._field_r;
	std::tie(_437218_l,_437225_r) = std::make_tuple((*this)._field_l,(*this)._field_r);
	if ((!(_437218_l->_method_good_operand(_437225_r)))) {
		std::tie(_437218_l,_437225_r) = std::make_tuple(_437225_r,_437218_l);
	}
	_436733_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BinopExprModel>(new( std::nothrow ) _1c19727a1_BinopExprModel(_437218_l->_field_model,_437225_r->_field_model,(*this)._field_op._field_kind)));
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_solve_explicit(jule::Ptr<_1c1ead281_Data>& _438438_l,jule::Ptr<_1c1ead281_Data>& _438453_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_438438_l,_438453_r);
	(*this)._method_check_datas();
	jule::Ptr<_1c1ead281_Data> _438917_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_438438_l,_438453_r);
	(*this)._method_solve_const(_438917_d);
	(*this)._method_post_const(_438917_d);
	if (_438917_d != nullptr) {
		_438917_d->_field_lvalue=false;
		(*this)._method_set_model(_438917_d);
	}
	return _438917_d;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_BinopSolver::_method_solve(jule::Ptr<_1da7b8e5d_BinopExpr>& _440429_op) {
	if (_440429_op->_field_op._field_kind == jule::Str("=", 1)) {
		(*this)._field_e->_method_push_err(_440429_op->_field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		(*this)._field_e->_method_push_suggestion(jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _441117_l = (*this)._field_e->_method_eval_expr_kind(_440429_op->_field_left);
	if ((_441117_l == nullptr) || (_441117_l->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _441617_r = (*this)._field_e->_method_eval_expr_kind(_440429_op->_field_right);
	if ((_441617_r == nullptr) || (_441617_r->_field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=_440429_op->_field_op;
	jule::Ptr<_1c1ead281_Data> _442317_d = (*this)._method_solve_explicit(_441117_l,_441617_r);
	if (((_442317_d != nullptr) && _441117_l->_field_is_rune) && _441617_r->_field_is_rune) {
		_442317_d->_field_is_rune=true;
	}
	return _442317_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c1ead281_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a8ad0a37_TypeChecker::_method_push_err(_1da81133a_Token _67327_token,jule::Str _67341_fmt,jule::Slice<jule::Any> _67354_args) {
	(*this)._field_s->_method_push_err(_67327_token,_67341_fmt,_67354_args);
}



inline void _1a8ad0a37_TypeChecker::_method_allow_builtin(void) {
	(*this)._field_dis_builtin=false;
}



inline void _1a8ad0a37_TypeChecker::_method_disallow_builtin(void) {
	(*this)._field_dis_builtin=true;
}



inline jule::Ptr<_1a8ad0a37_Prim> _1a8ad0a37_TypeChecker::_method_build_prim(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _68030_decl) {
	if ((!(_1a8ad0a37_is_prim(_68030_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_68030_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_68030_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_68030_decl->_field_ident)}));
		return nullptr;
	}
	return _1a8ad0a37_build_prim_type(_68030_decl->_field_ident);
}



inline void _1a8ad0a37_TypeChecker::_method_push_cycle_error(jule::Any _69431_def1,jule::Any _69442_def2,jule::Str& _69458_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _69713_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _69729_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _69729_def };
			if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeAlias>>()) {
				_case_begin_4396531776:;
				{
					return _69729_def.operator jule::Ptr<_1a8ad0a37_TypeAlias>()->_field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
				_case_begin_4396531968:;
				{
					return _69729_def.operator jule::Ptr<_1db4a7e59_Struct>()->_field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c196c834_Enum>>()) {
				_case_begin_4396532064:;
				{
					return _69729_def.operator jule::Ptr<_1c196c834_Enum>()->_field_ident;
				}
			}
			else {
				_case_begin_4396530144:;
				{
					return jule::Str();
				}
			}
			_match_end_4396530320:;
		}
	});
	jule::Str _70613_def1_ident = _69713_get_ident(_69431_def1);
	jule::Str _70713_def2_ident = _69713_get_ident(_69442_def2);
	jule::Str _70813_refers_to = _203741197_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_70613_def1_ident),jule::Any(_70713_def2_ident)}));
	_69458_message=((_1c18c86d5_str_repeat(jule::Str(" ", 1),4LL) + _70813_refers_to) + jule::Str("\n", 1)) + _69458_message;
}



inline jule::Bool _1a8ad0a37_TypeChecker::_method_check_cross_cycle(jule::Any _71232_decl,jule::Str& _71248_message) {
	{
		auto &_match_expr{ _71232_decl };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeAlias>>()) {
			_case_begin_4396540752:;
			{
				jule::Ptr<_1a8ad0a37_TypeAlias> _71517_ta = _71232_decl.operator jule::Ptr<_1a8ad0a37_TypeAlias>();
				{
					auto &expr = _71517_ta->_field_refers;
					auto it = expr.begin();
					_iter_begin_4396543488:;
					if (it != expr.end()) {
						jule::Any &_1a8ad0a37_d = *it;
						{
							if (_1a8ad0a37_d == (*this)._field_referencer->_field_owner) {
								(*this)._method_push_cycle_error(jule::Any(_71517_ta),_1a8ad0a37_d,_71248_message);
								return false;
							}
							if ((!((*this)._method_check_cross_cycle(_1a8ad0a37_d,_71248_message)))) {
								(*this)._method_push_cycle_error(jule::Any(_71517_ta),_1a8ad0a37_d,_71248_message);
								return false;
							}
						}
						_iter_next_4396543488:;
						++it;
						goto _iter_begin_4396543488;
					}
					_iter_end_4396543488:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4396541072:;
			{
				jule::Ptr<_1db4a7e59_Struct> _72917_s = _71232_decl.operator jule::Ptr<_1db4a7e59_Struct>();
				{
					auto &expr = _72917_s->_field_depends;
					auto it = expr.begin();
					_iter_begin_4396549760:;
					if (it != expr.end()) {
						jule::Ptr<_1db4a7e59_Struct> &_1a8ad0a37_d = *it;
						{
							if ((*this)._field_referencer->_field_owner == _1a8ad0a37_d) {
								(*this)._method_push_cycle_error(jule::Any(_72917_s),jule::Any(_1a8ad0a37_d),_71248_message);
								return false;
							}
							if ((!((*this)._method_check_cross_cycle(jule::Any(_1a8ad0a37_d),_71248_message)))) {
								(*this)._method_push_cycle_error(jule::Any(_72917_s),jule::Any(_1a8ad0a37_d),_71248_message);
								return false;
							}
						}
						_iter_next_4396549760:;
						++it;
						goto _iter_begin_4396549760;
					}
					_iter_end_4396549760:;
				}
			}
		}
		_match_end_4396540848:;
	}
	return true;
}



inline jule::Bool _1a8ad0a37_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _75040_ident,jule::Any _75067_decl) {
	jule::Bool _75080_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_75080_ok = true;
		return _75080_ok;
	}
	{
		auto &_match_expr{ _75067_decl };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4396558944:;
			{
				if ((*this)._field_not_plain) {
					_75080_ok = true;
					return _75080_ok;
				}
			}
		}
		_match_end_4396558544:;
	}
	if (_75067_decl == (*this)._field_referencer->_field_owner) {
		(*this)._method_push_err(_75040_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_75080_ok = false;
		return _75080_ok;
	}
	jule::Str _76917_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_75067_decl,_76917_message)))) {
		jule::Str _77221_err_msg = _76917_message;
		_76917_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_75067_decl,_76917_message);
		_77221_err_msg=_77221_err_msg + _76917_message;
		(*this)._method_push_err(_75040_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_77221_err_msg)}));
		_75080_ok = false;
		return _75080_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeAlias>>()) {
			_case_begin_4396564800:;
			{
				{
					(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_75067_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4396563616:;
			{
				{
					auto &_match_expr{ _75067_decl };
					if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
						_case_begin_4396570496:;
						{
							jule::Ptr<_1db4a7e59_Struct> _78725_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_1db4a7e59_Struct>();
							_78725_s->_field_depends = jule::alloc_for_append(_78725_s->_field_depends,1);_78725_s->_field_depends.push(_75067_decl.operator jule::Ptr<_1db4a7e59_Struct>());
						}
					}
					_match_end_4396569360:;
				}
			}
		}
		_match_end_4396568160:;
	}
	_75080_ok = true;
	return _75080_ok;
}



inline jule::Trait<_1a8ad0a37_Kind> _1a8ad0a37_TypeChecker::_method_from_type_alias(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _79535_decl,jule::Ptr<_1a8ad0a37_TypeAlias>& _79562_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_79562_ta->_field_public,_79562_ta->_field_token)))) {
		(*this)._method_push_err(_79535_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_79535_decl->_field_ident)}));
		return nullptr;
	}
	_79562_ta->_field_used=true;
	if (_79535_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_79535_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_79535_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _80817_ok = (*this)._method_check_illegal_cycles(_79535_decl,jule::Any(_79562_ta));
	if ((!(_80817_ok))) {
		return nullptr;
	}
	_80817_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_79562_ta,(*this)._field_lookup);
	if ((!(_80817_ok))) {
		return nullptr;
	}
	return jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(((_79562_ta->_field_cpp_linked) ? (_79562_ta->_field_ident) : (_79562_ta->_field_kind->_field_kind->_field_cpp_ident)),_79562_ta->_field_generic,jule::Bool(),_79562_ta->_field_kind->_field_kind->_field_kind));
}



inline jule::Ptr<_1c196c834_Enum> _1a8ad0a37_TypeChecker::_method_from_enum(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _82629_decl,jule::Ptr<_1c196c834_Enum>& _82656_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82656_e->_field_public,_82656_e->_field_token)))) {
		(*this)._method_push_err(_82629_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82629_decl->_field_ident)}));
		return nullptr;
	}
	if (_82629_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82629_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82629_decl->_field_ident)}));
		return nullptr;
	}
	return _82656_e;
}



inline jule::Bool _1a8ad0a37_TypeChecker::_method_check_struct_ins(jule::Ptr<_1db4a7e59_StructIns>& _84040_ins,_1da81133a_Token& _84058_error_token) {
	jule::Bool _84080_ok = jule::Bool();
	if (_84040_ins->_field_checked) {
		_84080_ok = true;
		return _84080_ok;
	}
	_84040_ins->_field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*this)._field_referencer->_field_owner == _84040_ins->_field_decl)) {
		_84080_ok = true;
		return _84080_ok;
	}
	jule::Ptr<_1c2020e2b_SymbolTable> _85417_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_85417_old_file);
	});
	jule::Ptr<_1c2020e2b_SymbolTable> _85717_file = _1c1b18a24_find_file((*this)._field_s->_field_files,_84040_ins->_field_decl->_field_token._field_file);
	if (_85717_file != nullptr) {
		(*this)._field_s->_method_set_current_file(_85717_file);
	}
	jule::Ptr<_1a8ad0a37_Referencer> _86217_referencer = jule::new_struct<_1a8ad0a37_Referencer>(new( std::nothrow ) _1a8ad0a37_Referencer(_84040_ins->_field_decl->_field_ident,jule::Any(_84040_ins->_field_decl),nullptr));
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _86717_generics = jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_84040_ins->_field_generics.len()));
	{
		auto &expr = _84040_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_4396608512:;
		if (it != expr.end()) {
			jule::Int _1a8ad0a37_i = it - expr.begin();
			jule::Ptr<_1a8ad0a37_TypeKind> _1a8ad0a37_g = *it;
			{
				_86717_generics.push(jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1da81133a_Token(),_84040_ins->_field_decl->_field_generics[_1a8ad0a37_i]->_field_ident,jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_1a8ad0a37_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4396608512:;
			++it;
			_1a8ad0a37_i++;
			goto _iter_begin_4396608512;
		}
		_iter_end_4396608512:;
	}
	jule::Ptr<_1c2020e2b_SymbolTable> _87717_old_sema_file = _84040_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_84040_ins->_field_decl->_field_sema->_method_set_current_file(_87717_old_sema_file);
	});
	_1a8ad0a37_TypeChecker _88017_tc = _1a8ad0a37_TypeChecker(_84040_ins->_field_decl->_field_sema,_84040_ins->_field_decl->_field_sema,_86217_referencer,_1da81133a_Token(),jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>(),_86717_generics,jule::Bool(),jule::Bool());
	{
		auto &expr = _84040_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_4396615872:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_FieldIns> _1a8ad0a37_field = *it;
			{
				jule::Ptr<_1a8ad0a37_TypeKind> _88921_kind = _88017_tc._method_check_decl(_1a8ad0a37_field->_field_decl->_field_kind->_field_decl);
				_84080_ok=_88921_kind != nullptr;
				if (((_84040_ins->_field_decl->_field_sema != nullptr) && ((*this)._field_s != _84040_ins->_field_decl->_field_sema)) && (_84040_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_84040_ins->_field_decl->_field_sema->_field_errors);
					_84040_ins->_field_decl->_field_sema->_field_errors=nullptr;
				}
				if ((!(_84080_ok))) {
					_84080_ok = false;
					return _84080_ok;
				}
				_1a8ad0a37_field->_field_kind=_88921_kind;
				if (_1a8ad0a37_field->_field_kind->_method_mutable()) {
					_84040_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_84040_ins);
				}
			}
			_iter_next_4396615872:;
			++it;
			goto _iter_begin_4396615872;
		}
		_iter_end_4396615872:;
	}
	if (_84040_ins->_field_generics.len() > 0LL) {
		{
			auto &expr = _84040_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_4396604304:;
			if (it != expr.end()) {
				jule::Ptr<_1c17e2687_Fn> _1a8ad0a37_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_84040_ins,_1a8ad0a37_m);
				}
				_iter_next_4396604304:;
				++it;
				goto _iter_begin_4396604304;
			}
			_iter_end_4396604304:;
		}
	}
	_84080_ok = true;
	return _84080_ok;
}



inline void _1a8ad0a37_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_1db4a7e59_Struct>& _91752_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4396629056:;
			{
				jule::Ptr<_1db4a7e59_Struct> _92421_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_1db4a7e59_Struct>();
				if ((!(_92421_ref_s->_method_is_uses(_91752_s)))) {
					_92421_ref_s->_field_uses = jule::alloc_for_append(_92421_ref_s->_field_uses,1);_92421_ref_s->_field_uses.push(_91752_s);
				}
			}
		}
		_match_end_4396629392:;
	}
}



inline jule::Ptr<_1db4a7e59_StructIns> _1a8ad0a37_TypeChecker::_method_from_struct(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _93135_decl,jule::Ptr<_1db4a7e59_Struct>& _93162_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_93162_s->_field_public,_93162_s->_field_token)))) {
		(*this)._method_push_err(_93135_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_93135_decl->_field_ident)}));
		return nullptr;
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return nullptr;
	}
	jule::Bool _94217_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_93135_decl,jule::Any(_93162_s));
	if ((!(_94217_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_93162_s);
	jule::Ptr<_1db4a7e59_StructIns> _94817_ins = _93162_s->_method_instance();
	_94817_ins->_field_generics=jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_93135_decl->_field_generics.len()));
	jule::Ptr<_1a8ad0a37_Referencer> _95017_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	{
		auto &expr = _93135_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4396643136:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_TypeDecl> _1a8ad0a37_g = *it;
			{
				jule::Ptr<_1a8ad0a37_TypeKind> _95321_kind = (*this)._method_build(_1a8ad0a37_g->_field_kind);
				if (_95321_kind == nullptr) {
					_94217_ok=false;
					goto _iter_next_4396643136;
				}
				_94817_ins->_field_generics = jule::alloc_for_append(_94817_ins->_field_generics,1);_94817_ins->_field_generics.push(_95321_kind);
			}
			_iter_next_4396643136:;
			++it;
			goto _iter_begin_4396643136;
		}
		_iter_end_4396643136:;
	}
	(*this)._field_referencer=_95017_referencer;
	if ((!(_94217_ok))) {
		return nullptr;
	}
	_94217_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_94817_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_94817_ins->_field_generics.len()),_93135_decl->_field_token);
	if ((!(_94217_ok))) {
		return nullptr;
	}
	jule::Ptr<_1db4a7e59_StructIns> _97217_exist_instance = _93162_s->_method_append_instance(_94817_ins);
	if (_97217_exist_instance != nullptr) {
		return _97217_exist_instance;
	}
	_94217_ok=(*this)._method_check_struct_ins(_94817_ins,_93135_decl->_field_token);
	if ((!(_94217_ok))) {
		return nullptr;
	}
	return _94817_ins;
}



inline jule::Trait<_1a8ad0a37_Kind> _1a8ad0a37_TypeChecker::_method_get_def(jule::Ptr<_1da7b8e5d_IdentTypeDecl>& _98731_decl) {
	{
		auto &expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_4396658576:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_GenericDecl> &_1a8ad0a37_g = *it;
			{
				if (_1a8ad0a37_g->_field_ident == _98731_decl->_field_ident) {
					return _1a8ad0a37_build_prim_type(_1a8ad0a37_g->_field_ident);
				}
			}
			_iter_next_4396658576:;
			++it;
			goto _iter_begin_4396658576;
		}
		_iter_end_4396658576:;
	}
	{
		auto &expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_4396661728:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeAlias> _1a8ad0a37_g = *it;
			{
				if (_1a8ad0a37_g->_field_ident == _98731_decl->_field_ident) {
					jule::Ptr<_1db4a7e59_StructIns> _99625_st = _1a8ad0a37_g->_field_kind->_field_kind->_method_strct();
					if (_99625_st != nullptr) {
						jule::Bool _99825_ok = (*this)._method_check_illegal_cycles(_98731_decl,jule::Any(_99625_st->_field_decl));
						if ((!(_99825_ok))) {
							return nullptr;
						}
					}
					return _1a8ad0a37_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4396661728:;
			++it;
			goto _iter_begin_4396661728;
		}
		_iter_end_4396661728:;
	}
	if ((!(_98731_decl->_field_cpp_linked))) {
		jule::Ptr<_1c196c834_Enum> _100821_e = (*this)._field_lookup.get()._method_find_enum(_98731_decl->_field_ident);
		if (_100821_e != nullptr) {
			return (*this)._method_from_enum(_98731_decl,_100821_e);
		}
		jule::Ptr<_1c196b2a0_Trait> _101321_t = (*this)._field_lookup.get()._method_find_trait(_98731_decl->_field_ident);
		if ((_101321_t == nullptr) && (!((*this)._field_dis_builtin))) {
			_101321_t=_1a8c0ca10_find_builtin_trait(_98731_decl->_field_ident);
		}
		if (_101321_t != nullptr) {
			if ((!((*this)._field_s->_method_is_accessible_define(_101321_t->_field_public,_101321_t->_field_token)))) {
				(*this)._method_push_err(_98731_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98731_decl->_field_ident)}));
				return nullptr;
			}
			if (_98731_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_98731_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_98731_decl->_field_ident)}));
				return nullptr;
			}
			return _101321_t;
		}
	}
	jule::Ptr<_1db4a7e59_Struct> _103117_s = (*this)._field_lookup.get()._method_find_struct(_98731_decl->_field_ident,_98731_decl->_field_cpp_linked);
	if (_103117_s != nullptr) {
		return (*this)._method_from_struct(_98731_decl,_103117_s);
	}
	jule::Ptr<_1a8ad0a37_TypeAlias> _103617_ta = (*this)._field_lookup.get()._method_find_type_alias(_98731_decl->_field_ident,_98731_decl->_field_cpp_linked);
	if ((_103617_ta == nullptr) && (!((*this)._field_dis_builtin))) {
		_103617_ta=_1a8c0ca10_find_builtin_type_alias(_98731_decl->_field_ident);
	}
	if (_103617_ta != nullptr) {
		return (*this)._method_from_type_alias(_98731_decl,_103617_ta);
	}
	(*this)._method_push_err(_98731_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98731_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a8ad0a37_Kind> _1a8ad0a37_TypeChecker::_method_build_ident(jule::Ptr<_1da7b8e5d_IdentTypeDecl> _104834_decl) {
	{
		if (_1a8ad0a37_is_prim(_104834_decl->_field_ident)) {
			_case_begin_4396707440:;
			{
				return (*this)._method_build_prim(_104834_decl);
			}
		}
		else {
			_case_begin_4396705456:;
			{
				return (*this)._method_get_def(_104834_decl);
			}
		}
		_match_end_4396705280:;
	}
}



inline jule::Ptr<_1a8ad0a37_Sptr> _1a8ad0a37_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_1a8ad0a37_TypeKind>& _105544_elem) {
	{
		if (_105544_elem == nullptr) {
			_case_begin_4396709504:;
			{
				return nullptr;
			}
		}
		else if (_105544_elem->_method_strct() != nullptr) {
			_case_begin_4396709600:;
			{
				jule::Ptr<_1db4a7e59_StructIns> _106217_s = _105544_elem->_method_strct();
				if ((_106217_s->_field_decl != nullptr) && _106217_s->_field_decl->_field_cpp_linked) {
					(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_105544_elem->_method_arr() != nullptr) && _105544_elem->_method_arr()->_field_auto) {
			_case_begin_4396709696:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4396708064:;
	}
	return jule::new_struct_ptr<_1a8ad0a37_Sptr>(new( std::nothrow ) _1a8ad0a37_Sptr(_105544_elem));
}



inline jule::Ptr<_1a8ad0a37_Sptr> _1a8ad0a37_TypeChecker::_method_build_sptr(jule::Ptr<_1da7b8e5d_SptrTypeDecl> _107833_decl) {
	jule::Bool _107913_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_107913_not_plain;
	});
	jule::Ptr<_1a8ad0a37_TypeKind> _108317_elem = (*this)._method_check_decl(_107833_decl->_field_elem);
	return (*this)._method_build_sptr_from_type(_108317_elem);
}



inline jule::Ptr<_1a8ad0a37_Ptr> _1a8ad0a37_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_1a8ad0a37_TypeKind>& _108743_elem) {
	{
		if (_108743_elem == nullptr) {
			_case_begin_4396724896:;
			{
				return nullptr;
			}
		}
		else if ((_108743_elem->_method_arr() != nullptr) && _108743_elem->_method_arr()->_field_auto) {
			_case_begin_4396725008:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a8ad0a37_Ptr>();
			}
		}
		_match_end_4396724672:;
	}
	return jule::new_struct_ptr<_1a8ad0a37_Ptr>(new( std::nothrow ) _1a8ad0a37_Ptr(_108743_elem));
}



inline jule::Ptr<_1a8ad0a37_Ptr> _1a8ad0a37_TypeChecker::_method_build_ptr(jule::Ptr<_1da7b8e5d_PtrTypeDecl> _110332_decl) {
	jule::Bool _110413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_110413_not_plain;
	});
	jule::Ptr<_1a8ad0a37_TypeKind> _110817_elem = nullptr;
	if ((!(_110332_decl->_method_is_unsafe()))) {
		_110817_elem=(*this)._method_check_decl(_110332_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_110817_elem);
	}
	return jule::new_struct_ptr<_1a8ad0a37_Ptr>(new( std::nothrow ) _1a8ad0a37_Ptr(_110817_elem));
}



inline jule::Ptr<_1a8ad0a37_Slc> _1a8ad0a37_TypeChecker::_method_build_slc(jule::Ptr<_1da7b8e5d_SlcTypeDecl> _112032_decl) {
	jule::Bool _112113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112113_not_plain;
	});
	jule::Ptr<_1a8ad0a37_TypeKind> _112517_elem = (*this)._method_check_decl(_112032_decl->_field_elem);
	{
		if (_112517_elem == nullptr) {
			_case_begin_4396741808:;
			{
				return nullptr;
			}
		}
		else if ((_112517_elem->_method_arr() != nullptr) && _112517_elem->_method_arr()->_field_auto) {
			_case_begin_4396741904:;
			{
				(*this)._method_push_err(_112032_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4396741088:;
	}
	return jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(_112517_elem));
}



inline jule::Ptr<_1a8ad0a37_Arr> _1a8ad0a37_TypeChecker::_method_build_arr(jule::Ptr<_1da7b8e5d_ArrTypeDecl> _114232_decl) {
	jule::Bool _114313_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_114313_not_plain;
	});
	jule::Int _114717_n = 0LL;
	if ((!(_114232_decl->_method_auto_sized()))) {
		jule::Ptr<_1c1ead281_Data> _115021_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_114232_decl->_field_size);
		if (_115021_size == nullptr) {
			return nullptr;
		}
		if ((!(_115021_size->_method_is_const()))) {
			(*this)._method_push_err(_114232_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_115021_size->_field_kind->_method_prim() == nullptr) || (!(_1a8dc9a45_is_int(_115021_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_114232_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_114717_n=static_cast<jule::Int>(_115021_size->_field_constant->_method_as_i64());
		if (_114717_n < 0LL) {
			(*this)._method_push_err(_114232_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _117017_elem = (*this)._method_check_decl(_114232_decl->_field_elem);
	{
		if (_117017_elem == nullptr) {
			_case_begin_4396763712:;
			{
				return nullptr;
			}
		}
		else if ((_117017_elem->_method_arr() != nullptr) && _117017_elem->_method_arr()->_field_auto) {
			_case_begin_4396763808:;
			{
				(*this)._method_push_err(_114232_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4396751440:;
	}
	return jule::new_struct_ptr<_1a8ad0a37_Arr>(new( std::nothrow ) _1a8ad0a37_Arr(_114232_decl->_method_auto_sized(),_114717_n,_117017_elem));
}



inline jule::Ptr<_1a8ad0a37_Map> _1a8ad0a37_TypeChecker::_method_build_map(jule::Ptr<_1da7b8e5d_MapTypeDecl> _118932_decl) {
	jule::Bool _119013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119013_not_plain;
	});
	jule::Ptr<_1a8ad0a37_TypeKind> _119417_key = (*this)._method_check_decl(_118932_decl->_field_key);
	if (_119417_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _119917_val = (*this)._method_check_decl(_118932_decl->_field_val);
	if (_119917_val == nullptr) {
		return nullptr;
	}
	if (_119917_val->_method_enm() != nullptr) {
		(*this)._method_push_err(_118932_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_struct_ptr<_1a8ad0a37_Map>(new( std::nothrow ) _1a8ad0a37_Map(_119417_key,_119917_val));
}



inline jule::Ptr<_1a8ad0a37_Tuple> _1a8ad0a37_TypeChecker::_method_build_tuple(jule::Ptr<_1da7b8e5d_TupleTypeDecl> _121334_decl) {
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _121417_types = jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_121334_decl->_field_types.len()));
	{
		auto &expr = _121334_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_4396781312:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_TypeDecl> _1a8ad0a37_t = *it;
			{
				jule::Ptr<_1a8ad0a37_TypeKind> _121621_kind = (*this)._method_check_decl(_1a8ad0a37_t);
				if (_121621_kind == nullptr) {
					return nullptr;
				}
				_121417_types.push(_121621_kind);
			}
			_iter_next_4396781312:;
			++it;
			goto _iter_begin_4396781312;
		}
		_iter_end_4396781312:;
	}
	return jule::new_struct_ptr<_1a8ad0a37_Tuple>(new( std::nothrow ) _1a8ad0a37_Tuple(_121417_types));
}



inline jule::Bool _1a8ad0a37_TypeChecker::_method_check_fn_types(jule::Ptr<_1c17e2687_FnIns>& _122638_f) {
	jule::Bool _122651_ok = jule::Bool();
	{
		auto &expr = _122638_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4396788720:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1a8ad0a37_p = *it;
			{
				_1a8ad0a37_p->_field_kind=(*this)._method_build(_1a8ad0a37_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_122651_ok=_1a8ad0a37_p->_field_kind != nullptr;
				if ((!(_122651_ok))) {
					_122651_ok = false;
					return _122651_ok;
				}
			}
			_iter_next_4396788720:;
			++it;
			goto _iter_begin_4396788720;
		}
		_iter_end_4396788720:;
	}
	if ((!(_122638_f->_field_decl->_method_is_void()))) {
		_122638_f->_field_result=(*this)._method_build(_122638_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_122651_ok = _122638_f->_field_result != nullptr;
		return _122651_ok;
	}
	_122651_ok = true;
	return _122651_ok;
}



inline jule::Ptr<_1c17e2687_FnIns> _1a8ad0a37_TypeChecker::_method_build_fn(jule::Ptr<_1da7b8e5d_FnDecl> _124331_decl) {
	if (_124331_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_124331_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c17e2687_Fn> _124917_f = _1c18c86d5_build_fn(_124331_decl);
	jule::Ptr<_1c17e2687_FnIns> _125017_ins = _124917_f->_method_instance_force();
	_125017_ins->_field_anon=true;
	jule::Bool _125313_ok = (*this)._method_check_fn_types(_125017_ins);
	if ((!(_125313_ok))) {
		return nullptr;
	}
	return _125017_ins;
}



inline jule::Trait<_1a8ad0a37_Kind> _1a8ad0a37_TypeChecker::_method_build_by_namespace(jule::Ptr<_1da7b8e5d_NamespaceTypeDecl> _126141_decl) {
	jule::Str _126213_path = _1a8ad0a37_build_link_path_by_tokens(_126141_decl->_field_idents);
	jule::Ptr<_1c1b398be_ImportInfo> _126317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c1b398be_ImportInfo>)>([=](jule::Ptr<_1c1b398be_ImportInfo> _126353_imp) mutable -> jule::Bool {
		if ((_126141_decl->_field_idents.len() == 1LL) && (_126353_imp->_field_alias == _126213_path)) {
			return true;
		}
		return (_126353_imp->_field_link_path == _126213_path) && _126353_imp->_method_is_accessible_via_selection();
	}));
	if ((_126317_imp == nullptr) || (!(_126317_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_126141_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_126213_path)}));
		return nullptr;
	}
	jule::Trait<_1a8be79c8_Lookup> _127517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_126317_imp;
	(*this)._method_disallow_builtin();
	jule::Trait<_1a8ad0a37_Kind> _127917_kind = (*this)._method_build_ident(_126141_decl->_field_kind);
	(*this)._method_allow_builtin();
	(*this)._field_lookup=_127517_lookup;
	return _127917_kind;
}



inline jule::Ptr<_1a8ad0a37_TypeKind> _1a8ad0a37_TypeChecker::_method_build(jule::Any& _128729_decl_kind) {
	jule::Trait<_1a8ad0a37_Kind> _128817_kind = nullptr;
	{
		auto &_match_expr{ _128729_decl_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeKind>>()) {
			_case_begin_4396822384:;
			{
				_128817_kind=_128729_decl_kind.operator jule::Ptr<_1a8ad0a37_TypeKind>();
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_IdentTypeDecl>>()) {
			_case_begin_4396822128:;
			{
				jule::Trait<_1a8ad0a37_Kind> _129521_t = (*this)._method_build_ident(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_IdentTypeDecl>());
				if (_129521_t != nullptr) {
					_128817_kind=_129521_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_SptrTypeDecl>>()) {
			_case_begin_4396822224:;
			{
				jule::Ptr<_1a8ad0a37_Sptr> _130121_t = (*this)._method_build_sptr(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_SptrTypeDecl>());
				if (_130121_t != nullptr) {
					_128817_kind=_130121_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_PtrTypeDecl>>()) {
			_case_begin_4396820448:;
			{
				jule::Ptr<_1a8ad0a37_Ptr> _130721_t = (*this)._method_build_ptr(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_PtrTypeDecl>());
				if (_130721_t != nullptr) {
					_128817_kind=_130721_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_SlcTypeDecl>>()) {
			_case_begin_4396820544:;
			{
				jule::Ptr<_1a8ad0a37_Slc> _131321_t = (*this)._method_build_slc(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_SlcTypeDecl>());
				if (_131321_t != nullptr) {
					_128817_kind=_131321_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_ArrTypeDecl>>()) {
			_case_begin_4396820640:;
			{
				jule::Ptr<_1a8ad0a37_Arr> _131921_t = (*this)._method_build_arr(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_ArrTypeDecl>());
				if (_131921_t != nullptr) {
					_128817_kind=_131921_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_MapTypeDecl>>()) {
			_case_begin_4396820736:;
			{
				jule::Ptr<_1a8ad0a37_Map> _132521_t = (*this)._method_build_map(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_MapTypeDecl>());
				if (_132521_t != nullptr) {
					_128817_kind=_132521_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TupleTypeDecl>>()) {
			_case_begin_4396820832:;
			{
				jule::Ptr<_1a8ad0a37_Tuple> _133121_t = (*this)._method_build_tuple(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_TupleTypeDecl>());
				if (_133121_t != nullptr) {
					_128817_kind=_133121_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnDecl>>()) {
			_case_begin_4396822800:;
			{
				jule::Ptr<_1c17e2687_FnIns> _133721_t = (*this)._method_build_fn(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_FnDecl>());
				if (_133721_t != nullptr) {
					_128817_kind=_133721_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_NamespaceTypeDecl>>()) {
			_case_begin_4396822896:;
			{
				jule::Trait<_1a8ad0a37_Kind> _134321_t = (*this)._method_build_by_namespace(_128729_decl_kind.operator jule::Ptr<_1da7b8e5d_NamespaceTypeDecl>());
				if (_134321_t != nullptr) {
					_128817_kind=_134321_t;
				}
			}
		}
		else {
			_case_begin_4396819552:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_4396820048:;
	}
	if (_128817_kind == nullptr) {
		return nullptr;
	}
	{
		auto &_match_expr{ _128817_kind };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeKind>>()) {
			_case_begin_4396850912:;
			{
				return _128817_kind.operator jule::Ptr<_1a8ad0a37_TypeKind>();
			}
		}
		else {
			_case_begin_4396848080:;
			{
				return jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_128817_kind));
			}
		}
		_match_end_4396823328:;
	}
}



inline jule::Ptr<_1a8ad0a37_TypeKind> _1a8ad0a37_TypeChecker::_method_check_decl(jule::Ptr<_1da7b8e5d_TypeDecl>& _136834_decl) {
	_1da81133a_Token _137017_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_136834_decl->_field_token;
	jule::Ptr<_1a8ad0a37_TypeKind> _137317_kind = (*this)._method_build(_136834_decl->_field_kind);
	(*this)._field_error_token=_137017_error_token;
	return _137317_kind;
}



inline void _1a8ad0a37_TypeChecker::_method_check(jule::Ptr<_1a8ad0a37_TypeSymbol>& _137929_t) {
	if (_137929_t->_field_decl == nullptr) {
		return;
	}
	jule::Ptr<_1a8ad0a37_TypeKind> _138417_kind = (*this)._method_check_decl(_137929_t->_field_decl);
	if (_138417_kind == nullptr) {
		_137929_t->_method_remove_kind();
		return;
	}
	_137929_t->_field_kind=_138417_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8ad0a37_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1da73e9b6_IR>,jule::Slice<_203741197_Log>> _1da73e9b6_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ptr<_1da7889cc_PlainImporter> _2617_importer = jule::new_struct<_1da7889cc_PlainImporter>(new( std::nothrow ) _1da7889cc_PlainImporter());
	jule::Slice<jule::Ptr<_1da7635cd_Ast>> _2718_files;
	jule::Slice<_203741197_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1c1b398be_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1da7ae948_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	jule::Ptr<_1da73e9b6_IR> _4117_ir = jule::new_struct<_1da73e9b6_IR>(new( std::nothrow ) _1da73e9b6_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1da73db6e_OrderedDefines()));
	_4117_ir->_field_passes=_1da73e9b6_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1da73e9b6_IR::_method_append_structs(jule::Ptr<_1c1b398be_Package>& _5234_p,jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _5258_buffer) {
	{
		auto &expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4397092192:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1da73e9b6_f = *it;
			{
				{
					auto &expr = _1da73e9b6_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_4397093472:;
					if (it != expr.end()) {
						jule::Ptr<_1db4a7e59_Struct> _1da73e9b6_s = *it;
						{
							if ((!(_1da73e9b6_s->_field_cpp_linked))) {
								_5258_buffer.push(_1da73e9b6_s);
							}
						}
						_iter_next_4397093472:;
						++it;
						goto _iter_begin_4397093472;
					}
					_iter_end_4397093472:;
				}
			}
			_iter_next_4397092192:;
			++it;
			goto _iter_begin_4397092192;
		}
		_iter_end_4397092192:;
	}
}



inline jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _1da73e9b6_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_1db4a7e59_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4397098368:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1da73e9b6_u = *it;
			{
				if ((!(_1da73e9b6_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1da73e9b6_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4397098368:;
			++it;
			goto _iter_begin_4397098368;
		}
		_iter_end_4397098368:;
	}
	return _6517_buffer;
}



inline void _1da73e9b6_IR::_method_append_vars(jule::Ptr<_1c1b398be_Package>& _7831_p,jule::Slice<jule::Ptr<_1c1b58316_Var>>& _7855_buffer) {
	{
		auto &expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4397103552:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1da73e9b6_f = *it;
			{
				{
					auto &expr = _1da73e9b6_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_4397104832:;
					if (it != expr.end()) {
						jule::Ptr<_1c1b58316_Var> _1da73e9b6_v = *it;
						{
							if ((!(_1da73e9b6_v->_field_cpp_linked)) && (!(_1da73e9b6_v->_field_constant))) {
								_7855_buffer.push(_1da73e9b6_v);
							}
						}
						_iter_next_4397104832:;
						++it;
						goto _iter_begin_4397104832;
					}
					_iter_end_4397104832:;
				}
			}
			_iter_next_4397103552:;
			++it;
			goto _iter_begin_4397103552;
		}
		_iter_end_4397103552:;
	}
}



inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1da73e9b6_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4397109760:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1da73e9b6_u = *it;
			{
				if ((!(_1da73e9b6_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1da73e9b6_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4397109760:;
			++it;
			goto _iter_begin_4397109760;
		}
		_iter_end_4397109760:;
	}
	return _9117_buffer;
}



inline void _1da73e9b6_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1da73db6e_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1da73db6e_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da73e9b6_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1da7b8e5d_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c197a248_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da7b8e5d_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da7b8e5d_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Bool> _1d9d8c4cc_ArgParser::_method_parse_integer_0(jule::Str& _18532_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18540_parser) {
	jule::Int _18584_x = jule::Int();
	jule::Bool _18590_ok = jule::Bool();
	{
		if (_18532_s == jule::Str()) {
			_case_begin_4374739056:;
			{
				_18584_x = 0LL;
				_18590_ok = false;
				return std::make_tuple(_18584_x,_18590_ok);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0x", 2))) {
			_case_begin_4374740208:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),16LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0b", 2))) {
			_case_begin_4374740304:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),2LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0o", 2))) {
			_case_begin_4374740400:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),8LL);
			}
		}
		else if (_18532_s[0LL] == '0') {
			_case_begin_4374738560:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_4374738256:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s,10LL);
			}
		}
		_match_end_4374738080:;
	}
	return std::make_tuple(_18584_x,_18590_ok);
}

inline std::tuple<jule::Uint,jule::Bool> _1d9d8c4cc_ArgParser::_method_parse_integer_1(jule::Str& _18532_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18540_parser) {
	jule::Uint _18584_x = jule::Uint();
	jule::Bool _18590_ok = jule::Bool();
	{
		if (_18532_s == jule::Str()) {
			_case_begin_4374767664:;
			{
				_18584_x = 0LLU;
				_18590_ok = false;
				return std::make_tuple(_18584_x,_18590_ok);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0x", 2))) {
			_case_begin_4374768816:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),16LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0b", 2))) {
			_case_begin_4374768912:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),2LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0o", 2))) {
			_case_begin_4374769008:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),8LL);
			}
		}
		else if (_18532_s[0LL] == '0') {
			_case_begin_4374767168:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_4374766864:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s,10LL);
			}
		}
		_match_end_4374766688:;
	}
	return std::make_tuple(_18584_x,_18590_ok);
}



inline jule::Str _1d9d8c4cc_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



inline jule::VoidExceptional _1d9d8c4cc_ArgParser::_method_process_flag(jule::Trait<_1d9d8c4cc_CommonFlag>& _21636_flag) {
	{
		auto &_match_expr{ _21636_flag };
		if (_match_expr.type_is<jule::Ptr<_1d9d8c4cc_Flag_3>>()) {
			_case_begin_4374715072:;
			{
				jule::Ptr<_1d9d8c4cc_Flag_3> _21921_bf = _21636_flag.operator jule::Ptr<_1d9d8c4cc_Flag_3>();
				(*(_21921_bf->_field__data))=(!(_21921_bf->_field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_4374715360:;
	}
	jule::Str _22413_data = (*this)._method_get_data();
	if (_22413_data == jule::Str()) {
		return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression missing", 20));
	}
	{
		auto &_match_expr{ _21636_flag };
		if (_match_expr.type_is<jule::Ptr<_1d9d8c4cc_Flag_0>>()) {
			_case_begin_4374719424:;
			{
				jule::Ptr<_1d9d8c4cc_Flag_0> _23121_intf = _21636_flag.operator jule::Ptr<_1d9d8c4cc_Flag_0>();
				jule::Bool _23233_ok;
				std::tie((*(_23121_intf->_field__data)),_23233_ok) = (*this)._method_parse_integer_0(_22413_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23272_s,jule::Int _23280_base) mutable -> std::tuple<jule::Int,jule::Bool> {
					jule::I64 _23322_x;
					jule::Int _23325_err;
					std::tie(_23322_x,_23325_err) = _20385580b_parse_int(_23272_s,_23280_base,64LL);
					return std::make_tuple(_23322_x,_23325_err == 0LLU);
				}));
				if ((!(_23233_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9d8c4cc_Flag_1>>()) {
			_case_begin_4374719024:;
			{
				jule::Ptr<_1d9d8c4cc_Flag_1> _24121_uintf = _21636_flag.operator jule::Ptr<_1d9d8c4cc_Flag_1>();
				jule::Bool _24234_ok;
				std::tie((*(_24121_uintf->_field__data)),_24234_ok) = (*this)._method_parse_integer_1(_22413_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24274_s,jule::Int _24282_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
					jule::U64 _24322_x;
					jule::Int _24325_err;
					std::tie(_24322_x,_24325_err) = _20385580b_parse_uint(_24274_s,_24282_base,64LL);
					return std::make_tuple(_24322_x,_24325_err == 0LLU);
				}));
				if ((!(_24234_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9d8c4cc_Flag_2>>()) {
			_case_begin_4374719120:;
			{
				jule::Ptr<_1d9d8c4cc_Flag_2> _25121_ff = _21636_flag.operator jule::Ptr<_1d9d8c4cc_Flag_2>();
				jule::Int _25231_err;
				std::tie((*(_25121_ff->_field__data)),_25231_err) = _1d9e31c58_parse_float(_22413_data,64LL);
				if (_25231_err != 0LLU) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9d8c4cc_Flag_4>>()) {
			_case_begin_4374720896:;
			{
				(*(_21636_flag.operator jule::Ptr<_1d9d8c4cc_Flag_4>()->_field__data))=_22413_data;
			}
		}
		_match_end_4374718864:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1d9d8c4cc_ArgParser::_method_single_dash(jule::Str& _26231_arg) {
	jule::Slice<jule::I32> _26313_rarg = static_cast<jule::Slice<jule::I32>>(_26231_arg).slice(1LL);
	{
		auto &expr = _26313_rarg;
		auto it = expr.begin();
		_iter_begin_4374787120:;
		if (it != expr.end()) {
			jule::I32 &_1d9d8c4cc_r = *it;
			{
				jule::Trait<_1d9d8c4cc_CommonFlag> _26521_flag = (*this)._field_set._method_find_flag_short(_1d9d8c4cc_r);
				if (_26521_flag == nullptr) {
					return jule::VoidExceptional((_26231_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1d9d8c4cc_r));
				}
				({
					auto except = (*this)._method_process_flag(_26521_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_4374787120:;
			++it;
			goto _iter_begin_4374787120;
		}
		_iter_end_4374787120:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1d9d8c4cc_ArgParser::_method_double_dash(jule::Str& _27431_arg) {
	jule::Trait<_1d9d8c4cc_CommonFlag> _27517_flag = (*this)._field_set._method_find_flag(_27431_arg.slice(2LL));
	if (_27517_flag == nullptr) {
		return jule::VoidExceptional(_27431_arg + jule::Str(": flag is not exist", 19));
	}
	({
		auto except = (*this)._method_process_flag(_27517_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1d9d8c4cc_ArgParser::_method_try_arg(void) {
	jule::Str _28413_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return jule::VoidExceptional();
	}
	if (_28413_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28413_arg[1LL] == '-')) {
			({
				auto except = (*this)._method_double_dash(_28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = (*this)._method_single_dash(_28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*this)._field_content = jule::alloc_for_append((*this)._field_content,1);(*this)._field_content.push(_28413_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1d9d8c4cc_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			({
				auto except = (*this)._method_try_arg();
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_4374810752:;
	}
	_iter_end_4374810752:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _1d9d8c4cc_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2037d0ea1_free(void* _5124_ptr) {
	free(_5124_ptr);
}



inline jule::Str _2037d15bc_byte_ptr_to_str(jule::U8* _7431_s) {
	if (_7431_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7431_s);
}



inline jule::Int _2052c4982_get_last_errno(void) {
	return errno;
}



inline jule::Int _2052c5444_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _2052c5444_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _2052c5444_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _2052c5444_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _2052c5444_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _2052c5444_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _2052c5444_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _2052c5444_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _2052c5444_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _203797660_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _203797660_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _203797660_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _203797660_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _203797660_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _2052ae6b4_get_last_os_error(void) {
	jule::Int _309_err = _2052c4982_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		if (_match_expr == 13LL) {
			_case_begin_4377546080:;
			{
				return 0LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_4377546176:;
			{
				return 1LLU;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_4377546272:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_4377546656:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_4377546752:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_4377546848:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_4377545568:;
			{
				return 6LLU;
			}
		}
		else {
			_case_begin_4377544128:;
			{
				return 1LLU;
			}
		}
		_match_end_4377544992:;
	}
}



inline jule::Slice<jule::Str> _2052b1331_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2052b1331_working_dir(void) {
	return jule::Exceptional(jule::Any(),({
		auto except = _2052bb8be___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _2052bb8be___getwd(void) {
	jule::U8* _1113_buff = _2052c5444_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return jule::Exceptional<jule::Str>(_2052ae6b4_get_last_os_error());
	}
	jule::Str _159_pwd = _2037d15bc_byte_ptr_to_str(_1113_buff);
	{
		_2037d0ea1_free(_1113_buff);
	}
	return jule::Exceptional(jule::Any(),_159_pwd);
}



inline jule::Str _20525e312_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _205260d2a_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _205260d2a_is_path_sep(_1089_original_path[0LL])) && _205260d2a_is_path_sep(_1089_original_path[1LL])) {
			return _20525e312_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _205260d2a_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_20525e312_LazyBuff _12613_out = _20525e312_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (_205260d2a_is_path_sep(_10718_path[_13114_r])) {
					_case_begin_4377613472:;
					{
						(_13114_r)++;
					}
				}
				else if ((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _205260d2a_is_path_sep(_10718_path[_13114_r + 1LL]))) {
					_case_begin_4377618816:;
					{
						(_13114_r)++;
					}
				}
				else if (((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _205260d2a_is_path_sep(_10718_path[_13114_r + 2LL]))) {
					_case_begin_4377617232:;
					{
						_13114_r+=2LL;
						{
							if (_12613_out._field_w > _13121_dotdot) {
								_case_begin_4377625440:;
								{
									(_12613_out._field_w)--;
									while ((_12613_out._field_w > _13121_dotdot) && (!(_205260d2a_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
										{
											(_12613_out._field_w)--;
										}
									_iter_next_4377625968:;
									}
									_iter_end_4377625968:;
								}
							}
							else if ((!(_1189_rooted))) {
								_case_begin_4377625536:;
								{
									if (_12613_out._field_w > 0LL) {
										_12613_out._method_append(47LLU);
									}
									_12613_out._method_append('.');
									_12613_out._method_append('.');
									_13121_dotdot=_12613_out._field_w;
								}
							}
							_match_end_4377625360:;
						}
					}
				}
				else {
					_case_begin_4377607472:;
					{
						if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
							_12613_out._method_append(47LLU);
						}
						if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
							jule::Int _17425_i = _13114_r;
							for (; (_17425_i < _1259_n) && (!(_205260d2a_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
								{
									if (_10718_path[_17425_i] == ':') {
										_12613_out._method_append('.');
										_12613_out._method_append(47LLU);
										goto _iter_end_4377610592;
									}
								}
							_iter_next_4377610592:;
							}
							_iter_end_4377610592:;
						}
						for (; (_13114_r < _1259_n) && (!(_205260d2a_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
							{
								_12613_out._method_append(_10718_path[_13114_r]);
							}
						_iter_next_4377611152:;
						}
						_iter_end_4377611152:;
					}
				}
				_match_end_4377607296:;
			}
		}
	_iter_next_4377606288:;
	}
	_iter_end_4377606288:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _20525e312_from_slash(_12613_out._method_string());
}



inline jule::Str _20525e312_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _20525e312_join(jule::Slice<jule::Str> _22413_elem) {
	return _205260d2a___join(_22413_elem);
}



inline jule::Str _20525e312_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_205260d2a_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_4377642864:;
	}
	_iter_end_4377642864:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _20525e312_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _205260d2a___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _20525e312_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _205260d2a_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_4377650656:;
	}
	_iter_end_4377650656:;
	_25317_path=_25317_path.slice(_20525e312_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_205260d2a_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4377654544:;
	}
	_iter_end_4377654544:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _20525e312_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _20525e312_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_205260d2a_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4377656496:;
	}
	_iter_end_4377656496:;
	jule::Str _2909_dir = _20525e312_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _20525e312_volume_name(jule::Str _30220_path) {
	return _20525e312_from_slash(_30220_path.slice(0LL,_205260d2a_volume_name_len(_30220_path)));
}



inline jule::Bool _205260d2a_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _205260d2a_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _205260d2a_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _205260d2a___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_205260d2a_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_20525e312_clean(_5810_path),_5828_ok);
	}
	jule::Str _629_wd = ({
		auto except = _2052b1331_working_dir();
		(except.ok()) ? (except.result) : ({{
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
		} jule::Str();});
	});
	_5828_ok = true;
	return std::make_tuple(_205260d2a___join(jule::Slice<jule::Str>({_629_wd,_5810_path})),_5828_ok);
}



inline jule::Str _205260d2a_str_join(jule::Slice<jule::Str> _6813_elems,jule::Str _6827_sep) {
	{
		auto _match_expr{ _6813_elems.len() };
		if (_match_expr == 0LL) {
			_case_begin_4377679312:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_4377679408:;
			{
				return _6813_elems[0LL];
			}
		}
		_match_end_4377678832:;
	}
	jule::Str _7413_s = _6813_elems[0LL];
	{
		auto expr = _6813_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4377682592:;
		if (it != expr.end()) {
			jule::Str &_205260d2a_elem = *it;
			{
				_7413_s+=_6827_sep + _205260d2a_elem;
			}
			_iter_next_4377682592:;
			++it;
			goto _iter_begin_4377682592;
		}
		_iter_end_4377682592:;
	}
	return _7413_s;
}



inline jule::Str _205260d2a___join(jule::Slice<jule::Str> _8111_elem) {
	{
		auto &expr = _8111_elem;
		auto it = expr.begin();
		_iter_begin_4377683760:;
		if (it != expr.end()) {
			jule::Int _205260d2a_i = it - expr.begin();
			jule::Str &_205260d2a_e = *it;
			{
				if (_205260d2a_e != jule::Str()) {
					return _20525e312_clean(_205260d2a_str_join(_8111_elem.slice(_205260d2a_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4377683760:;
			++it;
			_205260d2a_i++;
			goto _iter_begin_4377683760;
		}
		_iter_end_4377683760:;
	}
	return jule::Str();
}



inline jule::Int _20379c05a_get_last_process_error(void) {
	jule::Int _419_err = _2052c4982_get_last_errno();
	{
		auto &_match_expr{ _419_err };
		if (_match_expr == 13LL) {
			_case_begin_4377719696:;
			{
				return 0LLU;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_4377719408:;
			{
				return 1LLU;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_4377719504:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_4377718832:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_4377718928:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_4377719024:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_4377718320:;
			{
				return 6LLU;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_4377718416:;
			{
				return 7LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_4377718512:;
			{
				return 9LLU;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_4377718608:;
			{
				return 10LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_4377719840:;
			{
				return 11LLU;
			}
		}
		else {
			_case_begin_4377716976:;
			{
				return 0LLU;
			}
		}
		_match_end_4377717744:;
	}
}



inline void _2038538d6_exit(jule::Int _1213_code) {
	_203797660_exit(_1213_code);
}



inline jule::Str _2038538d6_executable(void) {
	return jule::executable();
}



inline jule::Bool _20374065d_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



inline jule::Bool _20374065d_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _20374065d_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_4377921424:;
		if (it != expr.end()) {
			jule::Str &_20374065d_valid_ext = *it;
			{
				if (_3128_ext == _20374065d_valid_ext) {
					return true;
				}
			}
			_iter_next_4377921424:;
			++it;
			goto _iter_begin_4377921424;
		}
		_iter_end_4377921424:;
	}
	return false;
}



inline jule::Bool _20374065d_is_valid_cpp_ext(jule::Str _4225_ext) {
	if (_4225_ext == jule::Str(".c", 2)) {
		return true;
	}
	{
		auto &expr = _20374065d_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4377922256:;
		if (it != expr.end()) {
			jule::Str &_20374065d_e = *it;
			{
				if (_4225_ext == _20374065d_e) {
					return true;
				}
			}
			_iter_next_4377922256:;
			++it;
			goto _iter_begin_4377922256;
		}
		_iter_end_4377922256:;
	}
	{
		auto &expr = _20374065d_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4377920208:;
		if (it != expr.end()) {
			jule::Str &_20374065d_e = *it;
			{
				if (_4225_ext == _20374065d_e) {
					return true;
				}
			}
			_iter_next_4377920208:;
			++it;
			goto _iter_begin_4377920208;
		}
		_iter_end_4377920208:;
	}
	return false;
}



inline jule::Str _203741197_logf(jule::Str _28113_fmt,jule::Slice<jule::Any> _28126_args) {
	return _203741197_apply_fmt(_28113_fmt,_28126_args);
}



inline jule::Str _203741197_arg_to_str(jule::Any _28515_arg) {
	{
		auto &_match_expr{ _28515_arg };
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_4377930944:;
			{
				return _28515_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_4377931200:;
			{
				return static_cast<jule::Str>(_28515_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_4377931296:;
			{
				return static_cast<jule::Str>(_28515_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_4377928880:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_4377929248:;
	}
}



inline jule::Int _203741197_find_next_fmt(jule::Str _29418_fmt) {
	{
		auto &expr = _29418_fmt;
		auto it = expr.begin();
		_iter_begin_4377934192:;
		if (it != expr.end()) {
			jule::Int _203741197_i = it - expr.begin();
			jule::U8 &_203741197_b = *it;
			{
				if (_203741197_b == '@') {
					return _203741197_i;
				}
			}
			_iter_next_4377934192:;
			++it;
			_203741197_i++;
			goto _iter_begin_4377934192;
		}
		_iter_end_4377934192:;
	}
	return -1LL;
}



inline jule::Str _203741197_apply_fmt(jule::Str _30318_fmt,jule::Slice<jule::Any> _30328_args) {
	jule::Str _30413_s = jule::Str();
	{
		auto &expr = _30328_args;
		auto it = expr.begin();
		_iter_begin_4377938544:;
		if (it != expr.end()) {
			jule::Any &_203741197_arg = *it;
			{
				jule::Int _30713_i = _203741197_find_next_fmt(_30318_fmt);
				if (_30713_i == -1LL) {
					goto _iter_end_4377938544;
				}
				_30413_s+=_30318_fmt.slice(0LL,_30713_i);
				_30413_s+=_203741197_arg_to_str(_203741197_arg);
				_30318_fmt=_30318_fmt.slice(_30713_i + 1LL);
			}
			_iter_next_4377938544:;
			++it;
			goto _iter_begin_4377938544;
		}
		_iter_end_4377938544:;
	}
	_30413_s+=_30318_fmt;
	return _30413_s;
}



inline jule::Bool _2052172ed_is_top_directive(jule::Str _2725_directive) {
	return (_2725_directive == jule::Str("pass", 4)) || (_2725_directive == jule::Str("build", 5));
}



inline jule::Bool _2052120b7_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _2052120b7_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _2052120b7_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _2052120b7_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _2052120b7_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _2052120b7_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _2052120b7_is_unix(jule::Str _6316_os) {
	return _2052120b7_is_darwin(_6316_os) || _2052120b7_is_linux(_6316_os);
}



inline jule::Bool _2052120b7_is_32bit(jule::Str _6517_arch) {
	return _2052120b7_is_i386(_6517_arch);
}



inline jule::Bool _2052120b7_is_64bit(jule::Str _6717_arch) {
	return _2052120b7_is_amd64(_6717_arch) || _2052120b7_is_arm64(_6717_arch);
}



inline void _205229b6d_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_2038538d6_exit(1LL);
}



inline void _205229b6d_init(void) {
	jule::Str _2413_path = _2038538d6_executable();
	if (_2413_path == jule::Str()) {
		_205229b6d_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _299_pwd = ({
		auto except = _2052b1331_working_dir();
		(except.ok()) ? (except.result) : ({{
			_205229b6d_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
			return;
			return;
		} jule::Str();});
	});
	jule::Str _349_path_exec = _20525e312_dir(_2413_path);
	_2413_path=_20525e312_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		_205229b6d_PATH_WD=_299_pwd;
		_205229b6d_PATH_EXEC=_349_path_exec;
		_205229b6d_PATH_STDLIB=_20525e312_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		_205229b6d_PATH_API=_20525e312_join(jule::Slice<jule::Str>({_205229b6d_PATH_EXEC,jule::Str("..", 2)}));
		_205229b6d_PATH_API=_20525e312_join(jule::Slice<jule::Str>({_205229b6d_PATH_API,jule::Str("api", 3)}));
		_205229b6d_PATH_API=_20525e312_join(jule::Slice<jule::Str>({_205229b6d_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _1da64d3ca_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1da64d3ca_len64(_6124_x));
}



inline jule::Int _1da64d3ca_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1da64d3ca_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1da64d3ca_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1da64d3ca_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1da64d3ca_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1da64d3ca_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1da64d3ca_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1da64d3ca_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1da64d3ca_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1da64d3ca_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1da64d3ca_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1da1885db_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1da1885db_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1da1885db_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1da1885db_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1da23ca58_nan(void) {
	return static_cast<jule::F64>(_1da1885db_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1da23ca58_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1da23ca58_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1da1885db_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1da1885db_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1da23ca58_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _1da2cb047_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1da1885db_f64_from_bits(static_cast<jule::U64>(_1da1885db_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _1da327538_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1da2cb047_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4379116064:;
		}
		_iter_end_4379116064:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _2037c5759_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_2037c5759_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _2037c5759_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_2037c5759_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (_match_expr == 32LL) {
			_case_begin_4380466928:;
			{
				_8313_bits=static_cast<jule::U64>(_1da1885db_f32_bits(static_cast<jule::F32>(_8234_val)));
				_8413_flt=(&(_2037c5759_F32_INFO));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_4380466432:;
			{
				_8313_bits=static_cast<jule::U64>(_1da1885db_f64_bits(_8234_val));
				_8413_flt=(&(_2037c5759_F64_INFO));
			}
		}
		else {
			_case_begin_4380464640:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_4380465088:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & static_cast<jule::Int>((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (_match_expr == static_cast<jule::Int>((1LL << _8413_flt->_field_expbits) - 1LL)) {
			_case_begin_4380465168:;
			{
				jule::Str _10317_s = jule::Str();
				{
					if (_9813_mant != 0LL) {
						_case_begin_4380479888:;
						{
							_10317_s=jule::Str("nan", 3);
						}
					}
					else if (_969_neg) {
						_case_begin_4380480496:;
						{
							_10317_s=jule::Str("-inf", 4);
						}
					}
					else {
						_case_begin_4380479088:;
						{
							_10317_s=jule::Str("+inf", 4);
						}
					}
					_match_end_4380478976:;
				}
				return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_4380476736:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_4380471888:;
			{
				_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
			}
		}
		_match_end_4380474480:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _2037c5759_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _2037c5759_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _2037c5759_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_2037c5759_DecimalSlice _13413_digs = _2037c5759_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		_13413_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1d9e3ae71_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_4380493312:;
				{
					_8259_prec=static_cast<jule::Int>(_2037c5759_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_4380492864:;
				{
					_8259_prec=static_cast<jule::Int>(_2037c5759_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_4380493408:;
				{
					_8259_prec=_13413_digs._field_nd;
				}
			}
			_match_end_4380492608:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15417_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_4380499888:;
				{
					(_15417_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_4380500032:;
				{
					if (_8259_prec == 0LL) {
						_8259_prec=1LL;
					}
					_15417_digits=_8259_prec;
				}
			}
			else {
				_case_begin_4380498112:;
				{
					_15417_digits=1LL;
				}
			}
			_match_end_4380499136:;
		}
		if ((_8270_bit_size == 32LL) && (_15417_digits <= 9LL)) {
			_13413_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1d9e3ae71_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15417_digits);
			_13513_ok=true;
		} else if (_15417_digits <= 18LL) {
			_13413_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1d9e3ae71_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15417_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _2037c5759_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _2037c5759_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _2037c5759_big_ftoa(jule::Slice<jule::U8> _18417_dst,jule::Int _18434_prec,jule::U8 _18445_fmt,jule::Bool _18456_neg,jule::U64 _18513_mant,jule::Int _18524_exp,_2037c5759_FloatInfo& _18535_flt) {
	_1da102588_Decimal _18613_d = _1da102588_Decimal();
	_18613_d._method_assign(_18513_mant);
	_18613_d._method_shift(static_cast<jule::Int>(_18524_exp - static_cast<jule::Int>(_18535_flt._field_mantbits)));
	_2037c5759_DecimalSlice _18913_digs = _2037c5759_DecimalSlice();
	jule::Bool _1909_shortest = _18434_prec < 0LL;
	if (_1909_shortest) {
		_2037c5759_round_shortest(_18613_d,_18513_mant,_18524_exp,_18535_flt);
		_18913_digs=_2037c5759_DecimalSlice(_18613_d._field_d.slice(0LL),_18613_d._field_nd,_18613_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18445_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_4380521968:;
				{
					_18434_prec=static_cast<jule::Int>(_18913_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_4380522864:;
				{
					_18434_prec=static_cast<jule::Int>(_2037c5759_max(static_cast<jule::Int>(_18913_digs._field_nd - _18913_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_4380523152:;
				{
					_18434_prec=_18913_digs._field_nd;
				}
			}
			_match_end_4380523056:;
		}
	} else {
		{
			auto &_match_expr{ _18445_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_4380527296:;
				{
					_18613_d._method_round(static_cast<jule::Int>(_18434_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_4380527392:;
				{
					_18613_d._method_round(static_cast<jule::Int>(_18613_d._field_dp + _18434_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_4380527488:;
				{
					if (_18434_prec == 0LL) {
						_18434_prec=1LL;
					}
					_18613_d._method_round(_18434_prec);
				}
			}
			_match_end_4380527168:;
		}
		_18913_digs=_2037c5759_DecimalSlice(_18613_d._field_d.slice(0LL),_18613_d._field_nd,_18613_d._field_dp,jule::Bool());
	}
	return _2037c5759_fmt_digits(_18417_dst,_1909_shortest,_18456_neg,_18913_digs,_18434_prec,_18445_fmt);
}



inline jule::Slice<jule::U8> _2037c5759_fmt_digits(jule::Slice<jule::U8> _22119_dst,jule::Bool _22132_shortest,jule::Bool _22148_neg,_2037c5759_DecimalSlice _22213_digs,jule::Int _22237_prec,jule::U8 _22248_fmt) {
	{
		auto &_match_expr{ _22248_fmt };
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_4380539008:;
			{
				return _2037c5759_fmt_e(_22119_dst,_22148_neg,_22213_digs,_22237_prec,_22248_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_4380539104:;
			{
				return _2037c5759_fmt_f(_22119_dst,_22148_neg,_22213_digs,_22237_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_4380539216:;
			{
				jule::Int _23017_eprec = _22237_prec;
				if ((_23017_eprec > _22213_digs._field_nd) && (_22213_digs._field_nd >= _22213_digs._field_dp)) {
					_23017_eprec=_22213_digs._field_nd;
				}
				if (_22132_shortest) {
					_23017_eprec=6LL;
				}
				jule::Int _24013_exp = _22213_digs._field_dp - 1LL;
				if ((_24013_exp < -4LL) || (_24013_exp >= _23017_eprec)) {
					if (_22237_prec > _22213_digs._field_nd) {
						_22237_prec=_22213_digs._field_nd;
					}
					return _2037c5759_fmt_e(_22119_dst,_22148_neg,_22213_digs,static_cast<jule::Int>(_22237_prec - 1LL),static_cast<jule::U8>((_22248_fmt + 'e') - 'g'));
				}
				if (_22237_prec > _22213_digs._field_dp) {
					_22237_prec=_22213_digs._field_nd;
				}
				return _2037c5759_fmt_f(_22119_dst,_22148_neg,_22213_digs,static_cast<jule::Int>(_2037c5759_max(static_cast<jule::Int>(_22237_prec - _22213_digs._field_dp),0LL)));
			}
		}
		_match_end_4380538896:;
	}
	return jule::append(_22119_dst,jule::Slice<jule::U8>({'%',_22248_fmt}));
}



inline void _2037c5759_round_shortest(_1da102588_Decimal& _25924_d,jule::U64 _25936_mant,jule::Int _25947_exp,_2037c5759_FloatInfo& _25958_flt) {
	if (_25936_mant == 0LL) {
		_25924_d._field_nd=0LL;
		return;
	}
	jule::Int _2809_minexp = _25958_flt._field_bias + 1LL;
	if ((_25947_exp > _2809_minexp) && ((332LL * (_25924_d._field_dp - _25924_d._field_nd)) >= (100LL * (_25947_exp - static_cast<jule::Int>(_25958_flt._field_mantbits))))) {
		return;
	}
	_1da102588_Decimal _28913_upper = _1da102588_Decimal();
	_28913_upper._method_assign(static_cast<jule::U64>((_25936_mant * 2LL) + 1LL));
	_28913_upper._method_shift(static_cast<jule::Int>((_25947_exp - static_cast<jule::Int>(_25958_flt._field_mantbits)) - 1LL));
	jule::U64 _29913_mantlo = 0LLU;
	jule::Int _30013_explo = 0LL;
	if ((_25936_mant > (1LL << _25958_flt._field_mantbits)) || (_25947_exp == _2809_minexp)) {
		_29913_mantlo=static_cast<jule::U64>(_25936_mant - 1LL);
		_30013_explo=_25947_exp;
	} else {
		_29913_mantlo=static_cast<jule::U64>((_25936_mant * 2LL) - 1LL);
		_30013_explo=static_cast<jule::Int>(_25947_exp - 1LL);
	}
	_1da102588_Decimal _30813_lower = _1da102588_Decimal();
	_30813_lower._method_assign(static_cast<jule::U64>((_29913_mantlo * 2LL) + 1LL));
	_30813_lower._method_shift(static_cast<jule::Int>((_30013_explo - static_cast<jule::Int>(_25958_flt._field_mantbits)) - 1LL));
	jule::Bool _3159_inclusive = jule::unsafe_mod(_25936_mant,2LL) == 0LL;
	jule::U8 _32813_upperdelta = 0LLU;
	jule::Int _33213_ui = 0LL;
	for (; ; (_33213_ui)++) {
		{
			jule::Int _33713_mi = (_33213_ui - _28913_upper._field_dp) + _25924_d._field_dp;
			if (_33713_mi >= _25924_d._field_nd) {
				goto _iter_end_4380561696;
			}
			jule::Int _34113_li = (_33213_ui - _28913_upper._field_dp) + _30813_lower._field_dp;
			jule::U8 _34217_l = static_cast<jule::U8>(48LLU);
			if ((_34113_li >= 0LL) && (_34113_li < _30813_lower._field_nd)) {
				_34217_l=_30813_lower._field_d[_34113_li];
			}
			jule::U8 _34617_m = static_cast<jule::U8>(48LLU);
			if (_33713_mi >= 0LL) {
				_34617_m=_25924_d._field_d[_33713_mi];
			}
			jule::U8 _35017_u = static_cast<jule::U8>(48LLU);
			if (_33213_ui < _28913_upper._field_nd) {
				_35017_u=_28913_upper._field_d[_33213_ui];
			}
			jule::Bool _35813_okdown = (_34217_l != _34617_m) || (_3159_inclusive && ((_34113_li + 1LL) == _30813_lower._field_nd));
			{
				if ((_32813_upperdelta == 0LL) && ((_34617_m + 1LL) < _35017_u)) {
					_case_begin_4380584512:;
					{
						_32813_upperdelta=2LLU;
					}
				}
				else if ((_32813_upperdelta == 0LL) && (_34617_m != _35017_u)) {
					_case_begin_4380584608:;
					{
						_32813_upperdelta=1LLU;
					}
				}
				else if ((_32813_upperdelta == 1LL) && ((_34617_m != '9') || (_35017_u != '0'))) {
					_case_begin_4380584704:;
					{
						_32813_upperdelta=2LLU;
					}
				}
				_match_end_4380584144:;
			}
			jule::Bool _37913_okup = (_32813_upperdelta > 0LL) && ((_3159_inclusive || (_32813_upperdelta > 1LL)) || ((_33213_ui + 1LL) < _28913_upper._field_nd));
			{
				if (_35813_okdown && _37913_okup) {
					_case_begin_4380590976:;
					{
						_25924_d._method_round(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				else if (_35813_okdown) {
					_case_begin_4380591072:;
					{
						_25924_d._method_round_down(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				else if (_37913_okup) {
					_case_begin_4380591168:;
					{
						_25924_d._method_round_up(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				_match_end_4380576736:;
			}
		}
	_iter_next_4380561696:;
	}
	_iter_end_4380561696:;
}



inline jule::Slice<jule::U8> _2037c5759_fmt_e(jule::Slice<jule::U8> _39814_dst,jule::Bool _39827_neg,_2037c5759_DecimalSlice _39838_d,jule::Int _39855_prec,jule::U8 _39866_fmt) {
	if (_39827_neg) {
		_39814_dst.push('-');
	}
	jule::U8 _40513_ch = '0';
	if (_39838_d._field_nd != 0LL) {
		_40513_ch=_39838_d._field_d[0LL];
	}
	_39814_dst.push(_40513_ch);
	if (_39855_prec > 0LL) {
		_39814_dst.push('.');
		jule::Int _41417_i = 1LL;
		jule::Int _41513_m = _2037c5759_min(_39838_d._field_nd,static_cast<jule::Int>(_39855_prec + 1LL));
		if (_41417_i < _41513_m) {
			_39814_dst=jule::append(_39814_dst,_39838_d._field_d.slice(_41417_i,_41513_m));
			_41417_i=_41513_m;
		}
		for (; _41417_i <= _39855_prec; (_41417_i)++) {
			{
				_39814_dst.push('0');
			}
		_iter_next_4380607232:;
		}
		_iter_end_4380607232:;
	}
	_39814_dst.push(_39866_fmt);
	jule::Int _42713_exp = _39838_d._field_dp - 1LL;
	if (_39838_d._field_nd == 0LL) {
		_42713_exp=0LL;
	}
	if (_42713_exp < 0LL) {
		_40513_ch='-';
		_42713_exp=static_cast<jule::Int>((-(_42713_exp)));
	} else {
		_40513_ch='+';
	}
	_39814_dst.push(_40513_ch);
	{
		if (_42713_exp < 10LL) {
			_case_begin_4380612032:;
			{
				_39814_dst.push('0');_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(_42713_exp) + '0'));
			}
		}
		else if (_42713_exp < 100LL) {
			_case_begin_4380615728:;
			{
				_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,10LL)) + '0'));_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42713_exp,10LL)) + '0'));
			}
		}
		else {
			_case_begin_4380610464:;
			{
				_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,100LL)) + '0'));_39814_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,10LL)),10LL) + '0'));_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42713_exp,10LL)) + '0'));
			}
		}
		_match_end_4380610384:;
	}
	return _39814_dst;
}



inline jule::Slice<jule::U8> _2037c5759_fmt_f(jule::Slice<jule::U8> _45314_dst,jule::Bool _45327_neg,_2037c5759_DecimalSlice _45338_d,jule::Int _45355_prec) {
	if (_45327_neg) {
		_45314_dst.push('-');
	}
	if (_45338_d._field_dp > 0LL) {
		jule::Int _46117_m = _2037c5759_min(_45338_d._field_nd,_45338_d._field_dp);
		_45314_dst=jule::append(_45314_dst,_45338_d._field_d.slice(0LL,_46117_m));
		for (; _46117_m < _45338_d._field_dp; (_46117_m)++) {
			{
				_45314_dst.push('0');
			}
		_iter_next_4380621552:;
		}
		_iter_end_4380621552:;
	} else {
		_45314_dst.push('0');
	}
	if (_45355_prec > 0LL) {
		_45314_dst.push('.');
		jule::Int _47217_i = 0LL;
		for (; _47217_i < _45355_prec; (_47217_i)++) {
			{
				jule::U8 _47421_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47517_j = _45338_d._field_dp + _47217_i;
				if ((0LL <= _47517_j) && (_47517_j < _45338_d._field_nd)) {
					_47421_ch=_45338_d._field_d[_47517_j];
				}
				_45314_dst.push(_47421_ch);
			}
		_iter_next_4380625360:;
		}
		_iter_end_4380625360:;
	}
	return _45314_dst;
}



inline jule::Slice<jule::U8> _2037c5759_fmt_b(jule::Slice<jule::U8> _48614_dst,jule::Bool _48627_neg,jule::U64 _48638_mant,jule::Int _48653_exp,_2037c5759_FloatInfo& _48664_flt) {
	if (_48627_neg) {
		_48614_dst.push('-');
	}
	std::tie(_48614_dst,std::ignore) = _1da106db7_fmt_bits(_48614_dst,_48638_mant,10LL,false,true);
	_48614_dst.push('p');
	_48653_exp-=static_cast<jule::Int>(_48664_flt._field_mantbits);
	if (_48653_exp >= 0LL) {
		_48614_dst.push('+');
	}
	std::tie(_48614_dst,std::ignore) = _1da106db7_fmt_bits(_48614_dst,static_cast<jule::U64>(_48653_exp),10LL,_48653_exp < 0LL,true);
	return _48614_dst;
}



inline jule::Slice<jule::U8> _2037c5759_fmt_x(jule::Slice<jule::U8> _50814_dst,jule::Int _50827_prec,jule::U8 _50838_fmt,jule::Bool _50849_neg,jule::U64 _50913_mant,jule::Int _50928_exp,_2037c5759_FloatInfo& _50939_flt) {
	if (_50913_mant == 0LL) {
		_50928_exp=0LL;
	}
	_50913_mant<<=static_cast<jule::Uint>(60LL - _50939_flt._field_mantbits);
	while ((_50913_mant != 0LL) && ((_50913_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_50913_mant<<=1LLU;
			(_50928_exp)--;
		}
	_iter_next_4380643056:;
	}
	_iter_end_4380643056:;
	if ((_50827_prec >= 0LL) && (_50827_prec < 15LL)) {
		jule::Uint _52313_shift = static_cast<jule::Uint>(_50827_prec * 4LL);
		jule::U64 _52413_extra = (_50913_mant << _52313_shift) & 1152921504606846975LLU;
		_50913_mant>>=static_cast<jule::Uint>(60LL - _52313_shift);
		if ((_52413_extra | (_50913_mant & 1LL)) > 576460752303423488LLU) {
			(_50913_mant)++;
		}
		_50913_mant<<=static_cast<jule::Uint>(60LL - _52313_shift);
		if ((_50913_mant & 2305843009213693952LLU) != 0LL) {
			_50913_mant>>=1LLU;
			(_50928_exp)++;
		}
	}
	jule::Str _53713_hex = jule::Str("0123456789abcdef", 16);
	if (_50838_fmt == 'X') {
		_53713_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_50849_neg) {
		_50814_dst.push('-');
	}
	_50814_dst.push('0');_50814_dst.push(_50838_fmt);_50814_dst.push(static_cast<jule::U8>('0' + static_cast<jule::U8>((_50913_mant >> 60LL) & 1LL)));
	_50913_mant<<=4LLU;
	if ((_50827_prec < 0LL) && (_50913_mant != 0LL)) {
		_50814_dst.push('.');
		while (_50913_mant != 0LL) {
			{
				_50814_dst.push(_53713_hex[static_cast<jule::Int>((_50913_mant >> 60LL) & 15LL)]);
				_50913_mant<<=4LLU;
			}
		_iter_next_4380652192:;
		}
		_iter_end_4380652192:;
	} else if (_50827_prec > 0LL) {
		_50814_dst.push('.');
		jule::Int _55817_i = 0LL;
		for (; _55817_i < _50827_prec; (_55817_i)++) {
			{
				_50814_dst.push(_53713_hex[static_cast<jule::Int>((_50913_mant >> 60LL) & 15LL)]);
				_50913_mant<<=4LLU;
			}
		_iter_next_4380655984:;
		}
		_iter_end_4380655984:;
	}
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);
	if (_50838_fmt == _20385580b_lower(_50838_fmt)) {
		_56613_ch='p';
	}
	_50814_dst.push(_56613_ch);
	if (_50928_exp < 0LL) {
		_56613_ch='-';
		_50928_exp=static_cast<jule::Int>((-(_50928_exp)));
	} else {
		_56613_ch='+';
	}
	_50814_dst.push(_56613_ch);
	{
		if (_50928_exp < 100LL) {
			_case_begin_4380666160:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		else if (_50928_exp < 1000LL) {
			_case_begin_4380666256:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,100LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_50928_exp,10LL),10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		else {
			_case_begin_4380651280:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,1000LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,100LL)),10LL) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_50928_exp,10LL),10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		_match_end_4380651200:;
	}
	return _50814_dst;
}



inline jule::Int _2037c5759_min(jule::Int _5918_a,jule::Int _59116_b) {
	if (_5918_a < _59116_b) {
		return _5918_a;
	}
	return _59116_b;
}



inline jule::Int _2037c5759_max(jule::Int _5988_a,jule::Int _59816_b) {
	if (_5988_a > _59816_b) {
		return _5988_a;
	}
	return _59816_b;
}



inline jule::U8 _20385580b_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _20385580b_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LLU,2LLU);
	}
	{
		if ((2LL <= _5435_base) && (_5435_base <= 36LL)) {
			_case_begin_4380683056:;
		}
		else if (_5435_base == 0LL) {
			_case_begin_4380682400:;
			{
				_5435_base=10LL;
				if (_5423_s[0LL] == '0') {
					{
						if ((_5423_s.len() >= 3LL) && (_20385580b_lower(_5423_s[1LL]) == 'b')) {
							_case_begin_4380687136:;
							{
								_5435_base=2LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_20385580b_lower(_5423_s[1LL]) == 'o')) {
							_case_begin_4380687968:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_20385580b_lower(_5423_s[1LL]) == 'x')) {
							_case_begin_4380686640:;
							{
								_5435_base=16LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else {
							_case_begin_4380686336:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(1LL);
							}
						}
						_match_end_4380686160:;
					}
				}
			}
		}
		else {
			_case_begin_4380679904:;
			{
				return std::make_tuple(0LLU,3LLU);
			}
		}
		_match_end_4380680288:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LLU,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (_match_expr == 10LL) {
			_case_begin_4380696992:;
			{
				_9313_cutoff=1844674407370955264LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_4380698240:;
			{
				_9313_cutoff=1152921504606846976LLU;
			}
		}
		else {
			_case_begin_4380691456:;
			{
				_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
			}
		}
		_match_end_4380684752:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (_match_expr == 32LL) {
			_case_begin_4380694192:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_4380701216:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_4380699312:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_4380703984:;
		if (it != expr.end()) {
			jule::U8 &_20385580b_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (('0' <= _20385580b_c) && (_20385580b_c <= '9')) {
						_case_begin_4380708128:;
						{
							_11417_d=static_cast<jule::U8>(_20385580b_c - '0');
						}
					}
					else if (('a' <= _20385580b_lower(_20385580b_c)) && (_20385580b_lower(_20385580b_c) <= 'z')) {
						_case_begin_4380707472:;
						{
							_11417_d=static_cast<jule::U8>((_20385580b_lower(_20385580b_c) - 'a') + 10LL);
						}
					}
					else {
						_case_begin_4380706464:;
						{
							return std::make_tuple(0LLU,2LLU);
						}
					}
					_match_end_4380706352:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LLU,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4380703984:;
			++it;
			goto _iter_begin_4380703984;
		}
		_iter_end_4380703984:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _20385580b_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _20385580b_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1d9e17a41_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1da1885db_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1da64d3ca_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1da64d3ca_mul64(_4123_man,_1d9e17a41_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(1LL));
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1da64d3ca_mul64(_4123_man,_1d9e17a41_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(0LL));
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LLU;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1da1885db_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d9e17a41_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1da1885db_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1da64d3ca_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1da64d3ca_mul64(_11023_man,_1d9e17a41_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(1LL));
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1da64d3ca_mul64(_11023_man,_1d9e17a41_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(0LL));
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LLU;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1da1885db_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1d9e31c58_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LLU;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_4380802960:;
	}
	_iter_end_4380802960:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1d9e31c58_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_4380814544:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				_6816_s=_6816_s.slice(1LL);
				goto _case_begin_4380814640;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_4380814640:;
			{
				jule::Int _8317_case_n = _1d9e31c58_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1da23ca58_inf(_7213_sign));
					_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_4380814736:;
			{
				if (_1d9e31c58_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
					_6826_f = static_cast<jule::F64>(_1da23ca58_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_4380814464:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d9e31c58_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (_10315_s[_10449_i] == '+') {
			_case_begin_4380832080:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_4380832192:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_4380831936:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_20385580b_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LLU;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (_13413_c == '.') {
					_case_begin_4380848272:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_4380831152;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_4380848368:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_4380831152;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_4380831152;
					}
				}
				else if (((_11813_base == 16LL) && ('a' <= _20385580b_lower(_13413_c))) && (_20385580b_lower(_13413_c) <= 'f')) {
					_case_begin_4380848464:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>((_20385580b_lower(_13413_c) - 'a') + 10LL);
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_4380831152;
					}
				}
				_match_end_4380848192:;
			}
			goto _iter_end_4380831152;
		}
	_iter_next_4380831152:;
	}
	_iter_end_4380831152:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_20385580b_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_4380868144:;
		}
		_iter_end_4380868144:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1d9e31c58_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _2037c5759_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (_47235_exp == 0LL) {
			_case_begin_4380895568:;
			{
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		else if ((_47235_exp > 0LL) && (_47235_exp <= 37LL)) {
			_case_begin_4380895664:;
			{
				if (_47235_exp > 22LL) {
					_47258_f*=_1d9e31c58_F64_POW10[_47235_exp - 22LL];
					_47235_exp=22LL;
				}
				if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
					return std::make_tuple(_47258_f,_47266_ok);
				}
				_47258_f = static_cast<jule::F64>(_47258_f * _1d9e31c58_F64_POW10[_47235_exp]);
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		else if ((_47235_exp < 0LL) && (_47235_exp >= -22LL)) {
			_case_begin_4380895760:;
			{
				_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1d9e31c58_F64_POW10[(-(_47235_exp))]));
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		_match_end_4380894128:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d9e31c58_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _2037c5759_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (_50635_exp == 0LL) {
			_case_begin_4380909136:;
			{
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		else if ((_50635_exp > 0LL) && (_50635_exp <= 17LL)) {
			_case_begin_4380909232:;
			{
				if (_50635_exp > 10LL) {
					_50662_f*=_1d9e31c58_F32_POW10[_50635_exp - 10LL];
					_50635_exp=10LL;
				}
				if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
					return std::make_tuple(_50662_f,_50670_ok);
				}
				_50662_f = static_cast<jule::F32>(_50662_f * _1d9e31c58_F32_POW10[_50635_exp]);
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		else if ((_50635_exp < 0LL) && (_50635_exp >= -10LL)) {
			_case_begin_4380909328:;
			{
				_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1d9e31c58_F32_POW10[(-(_50635_exp))]));
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		_match_end_4380907728:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1d9e31c58_atof_hex(jule::Str _54213_s,_2037c5759_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = (static_cast<jule::Int>(1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LLU;
			(_54261_exp)--;
		}
	_iter_next_4380923584:;
	}
	_iter_end_4380923584:;
	if (_54282_trunc) {
		_54242_mantissa|=1LLU;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4380924368:;
	}
	_iter_end_4380924368:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4380927072:;
	}
	_iter_end_4380927072:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LLU;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LLU;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & static_cast<jule::Int>((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Uint>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _2037c5759_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1da1885db_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1da1885db_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1d9e31c58_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1d9e31c58_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1d9e31c58_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1d9e31c58_atof_hex(_60711_s.slice(0LL,_60729_n),_2037c5759_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1d9e31c58_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1d9e17a41_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1d9e17a41_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1da102588_Decimal _65313_d = _1da102588_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_2037c5759_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1da1885db_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1d9e31c58_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1d9e31c58_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1d9e31c58_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1d9e31c58_atof_hex(_66511_s.slice(0LL,_66529_n),_2037c5759_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1d9e31c58_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1d9e17a41_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1d9e17a41_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1da102588_Decimal _71013_d = _1da102588_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_2037c5759_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1da1885db_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1d9e31c58_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1d9e31c58_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1d9e31c58_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1d9e31c58_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1d9e31c58_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1d9e3ae71_ryu_ftoa_fixed32(_2037c5759_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:51:9"));;
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:54:9"));;
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1da64d3ca_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1d9e3ae71_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1d9e3ae71_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1d9e3ae71_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1d9e3ae71_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1d9e3ae71_ryu_ftoa_fixed64(_2037c5759_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:125:9"));;
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1da64d3ca_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1d9e3ae71_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1d9e3ae71_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1d9e3ae71_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1d9e3ae71_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1d9e3ae71_format_decimal(_2037c5759_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1d9e3ae71_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::unsafe_div(_20445_m,10LL);
			jule::U64 _20817_b = jule::unsafe_mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::unsafe_div(_20445_m,10LL),jule::unsafe_mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4381093248:;
	}
	_iter_end_4381093248:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::unsafe_div(_20445_m,10LLU);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::unsafe_mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(_23513_v,100LL)),static_cast<jule::U64>(jule::unsafe_mod(_23513_v,100LL)));
			}
			_23313_n-=2LLU;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4381100592:;
	}
	_iter_end_4381100592:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4381117008:;
	}
	_iter_end_4381117008:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1d9e3ae71_ryu_ftoa_shortest(_2037c5759_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_2037c5759_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1da64d3ca_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1d9e3ae71_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1d9e3ae71_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1d9e3ae71_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1d9e3ae71_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _2037c5759_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1d9e3ae71_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1d9e3ae71_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1d9e3ae71_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1d9e3ae71_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1d9e3ae71_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1d9e3ae71_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:307:9"));;
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1d9e3ae71_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1d9e3ae71_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1d9e3ae71_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1d9e3ae71_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1d9e3ae71_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1d9e3ae71_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d9e3ae71_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_2037c5759_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1d9e3ae71_ryu_digits(_2037c5759_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1d9e3ae71_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1d9e3ae71_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1d9e3ae71_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1d9e3ae71_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1d9e3ae71_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::unsafe_div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::unsafe_mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::unsafe_div(_43517_v,10LL),jule::unsafe_mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4381199984:;
		}
		_iter_end_4381199984:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1d9e3ae71_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4381200576:;
	}
	_iter_end_4381200576:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4381196256:;
	}
	_iter_end_4381196256:;
}



inline void _1d9e3ae71_ryu_digits32(_2037c5759_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::unsafe_div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::unsafe_div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::unsafe_mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::unsafe_div(_46059_central,10LL),jule::unsafe_mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::unsafe_div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4381214624;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LLU;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4381214624:;
	}
	_iter_end_4381214624:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::unsafe_div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::unsafe_mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::unsafe_div(_51713_v,100LL),jule::unsafe_mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4381217392:;
	}
	_iter_end_4381217392:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1d9e3ae71_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _1d9e17a41_DETAILED_POWS_OF_TEN[_54241_q - -348LL].__at(1LL);
	if (_54241_q < 0LL) {
		_55113_pow+=1LLU;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1da64d3ca_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1d9e3ae71_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1d9e3ae71_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _1d9e17a41_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow.__at(0LL)+=1LLU;
	}
	_57033_e2+=static_cast<jule::Int>((_1d9e3ae71_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1da64d3ca_mul64(_57021_m,_57913_pow.__at(0LL));
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1da64d3ca_mul64(_57021_m,_57913_pow.__at(1LL));
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1da64d3ca_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1d9e3ae71_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::unsafe_mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::unsafe_div(_59426_m,5LLU);
		}
	_iter_next_4381271984:;
	}
	_iter_end_4381271984:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1d9e3ae71_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::unsafe_div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::unsafe_mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1da64d3ca_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline void _1da102588_trim(_1da102588_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4381282416:;
	}
	_iter_end_4381282416:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1da102588_right_shift(_1da102588_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4381291520:;
				}
				_iter_end_4381291520:;
				goto _iter_end_4381286576;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4381286576:;
	}
	_iter_end_4381286576:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4381295312:;
	}
	_iter_end_4381295312:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4381300704:;
	}
	_iter_end_4381300704:;
	_28521_a._field_nd=_28713_w;
	_1da102588_trim(_28521_a);
}



inline jule::Bool _1da102588_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::Int _33938_end,jule::Str _33948_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33948_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_4381306976:;
	}
	_iter_end_4381306976:;
	return false;
}



inline void _1da102588_left_shift(_1da102588_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1da102588_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1da102588_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_1da102588_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4381317056:;
	}
	_iter_end_4381317056:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4381323408:;
	}
	_iter_end_4381323408:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1da102588_trim(_35320_a);
}



inline jule::Bool _1da102588_should_round_up(_1da102588_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::unsafe_mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _1da106db7_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1da106db7_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1da106db7_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1da106db7_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1da106db7_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1da106db7_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1da106db7_itoa(jule::Int _8213_i) {
	return _1da106db7_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1da106db7_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



inline jule::Bool _1da106db7_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1da106db7_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/itoa.jule:101:9"));;
	}
	jule::Slice<jule::U8> _10513_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _10613_i = _10513_a.len();
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::unsafe_div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::unsafe_mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::unsafe_div(_12625_us,100LLU);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4381363600:;
					}
					_iter_end_4381363600:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4381359936:;
			}
			_iter_end_4381359936:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::unsafe_mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::unsafe_div(_14717_us,100LLU);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4381363936:;
		}
		_iter_end_4381363936:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1da106db7_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1da64d3ca_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4381383648:;
		}
		_iter_end_4381383648:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4381385600:;
		}
		_iter_end_4381385600:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1d9d89b4a_push_opt_level(jule::Int _3223_level) {
	_1d9d89b4a_OPT_COPY=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_DEADCODE=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_APPEND=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_MATH=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_ACCESS=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_INLINE=_3223_level >= 1LLU;
	_1d9d89b4a_OPT_PTR=_3223_level >= 1LLU;
}



inline jule::Bool _1da85a4b6_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1da92365b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1db2d9c36_is_excluding_latin(_1da92365b_LETTER,_7618_r);
}



inline jule::Bool _1db2d9c36_is16(jule::Slice<_1db2d9c36_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_4385558864:;
			if (it != expr.end()) {
				jule::Int _1db2d9c36_i = it - expr.begin();
				{
					_1db2d9c36_Range16* _19417_range = (&(_1919_ranges.__at(_1db2d9c36_i)));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4385558864:;
				++it;
				_1db2d9c36_i++;
				goto _iter_begin_4385558864;
			}
			_iter_end_4385558864:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::unsafe_div(_20913_hi - _20813_lo,2LL);
			_1db2d9c36_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_4385554208:;
	}
	_iter_end_4385554208:;
	return false;
}



inline jule::Bool _1db2d9c36_is32(jule::Slice<_1db2d9c36_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_4385569648:;
			if (it != expr.end()) {
				jule::Int _1db2d9c36_i = it - expr.begin();
				{
					_1db2d9c36_Range32* _23117_range = (&(_2289_ranges.__at(_1db2d9c36_i)));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4385569648:;
				++it;
				_1db2d9c36_i++;
				goto _iter_begin_4385569648;
			}
			_iter_end_4385569648:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::unsafe_div(_24613_hi - _24513_lo,2LL);
			_1db2d9c36_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_4385567216:;
	}
	_iter_end_4385567216:;
	return false;
}



inline jule::Bool _1db2d9c36_is_excluding_latin(jule::Ptr<_1db2d9c36_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1db2d9c36_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _1db2d9c36_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1db2d9c36_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1db2d9c36_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1da91c952_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1da91c952_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1da91c952_accept_range _1969_accept = _1da91c952_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline jule::Slice<jule::U8> _1da91c952_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1da91c952_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1da91c952_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (_4079_i <= 2047LLU) {
			_case_begin_4385814528:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		else if (_4079_i > 1114111LL || (55296LL <= _4079_i) && (_4079_i <= 57343LL)) {
			_case_begin_4385814192:;
			{
				_40545_r=65533LL;
				goto _case_begin_4385814288;
			}
		}
		else if (_4079_i <= 65535LLU) {
			_case_begin_4385814288:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		else {
			_case_begin_4385808160:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		_match_end_4385808048:;
	}
}



inline jule::Int _1db3c5ea9_get_last_fs_error(void) {
	jule::Int _729_err = _2052c4982_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		if (_match_expr == 13LL) {
			_case_begin_4385937984:;
			{
				return 0LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_4385938080:;
			{
				return 1LLU;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_4385937616:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_4385937712:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_4385937808:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_4385938192:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_4385938288:;
			{
				return 6LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_4385938384:;
			{
				return 7LLU;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_4385937104:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_4385937200:;
			{
				return 9LLU;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_4385937296:;
			{
				return 10LLU;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_4385937392:;
			{
				return 11LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_4385939072:;
			{
				return 12LLU;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_4385939168:;
			{
				return 13LLU;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_4385939280:;
			{
				return 14LLU;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_4385939392:;
			{
				return 15LLU;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_4385939504:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_4385939616:;
			{
				return 17LLU;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_4385939728:;
			{
				return 18LLU;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_4385939840:;
			{
				return 19LLU;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_4385939952:;
			{
				return 20LLU;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_4385940064:;
			{
				return 21LLU;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_4385940176:;
			{
				return 22LLU;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_4385940288:;
			{
				return 23LLU;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_4385940400:;
			{
				return 24LLU;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_4385940512:;
			{
				return 25LLU;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_4385940624:;
			{
				return 26LLU;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_4385940736:;
			{
				return 27LLU;
			}
		}
		else {
			_case_begin_4385935696:;
			{
				return 1LLU;
			}
		}
		_match_end_4385936528:;
	}
}



inline jule::Bool _1da81133a_is_unary_op(jule::Str _31720_kind) {
	{
		auto &expr = _1da81133a_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_4386249360:;
		if (it != expr.end()) {
			jule::Str &_1da81133a_op = *it;
			{
				if (_31720_kind == _1da81133a_op) {
					return true;
				}
			}
			_iter_next_4386249360:;
			++it;
			goto _iter_begin_4386249360;
		}
		_iter_end_4386249360:;
	}
	return false;
}



inline jule::Bool _1da81133a_is_bin_op(jule::Str _32818_kind) {
	{
		auto &expr = _1da81133a_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_4386252496:;
		if (it != expr.end()) {
			jule::Str &_1da81133a_op = *it;
			{
				if (_32818_kind == _1da81133a_op) {
					return true;
				}
			}
			_iter_next_4386252496:;
			++it;
			goto _iter_begin_4386252496;
		}
		_iter_end_4386252496:;
	}
	return false;
}



inline jule::Bool _1da81133a_is_str(jule::Str _35015_k) {
	return (_35015_k != jule::Str()) && ((_35015_k[0LL] == '\"') || _1da81133a_is_raw_str(_35015_k));
}



inline jule::Bool _1da81133a_is_raw_str(jule::Str _35219_k) {
	return (_35219_k != jule::Str()) && (_35219_k[0LL] == '`');
}



inline jule::Bool _1da81133a_is_rune(jule::Str _35516_k) {
	return (_35516_k != jule::Str()) && (_35516_k[0LL] == '\'');
}



inline jule::Bool _1da81133a_is_bool(jule::Str _35916_k) {
	return (_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5));
}



inline jule::Bool _1da81133a_contains_any(jule::Str _36117_s,jule::Str _36125_bytes) {
	{
		auto &expr = _36125_bytes;
		auto it = expr.begin();
		_iter_begin_4386263840:;
		if (it != expr.end()) {
			jule::U8 &_1da81133a_b = *it;
			{
				jule::Int _36313_i = _36117_s.find(static_cast<jule::Str>(_1da81133a_b));
				if (_36313_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4386263840:;
			++it;
			goto _iter_begin_4386263840;
		}
		_iter_end_4386263840:;
	}
	return false;
}



inline jule::Bool _1da81133a_is_float(jule::Str _37317_k) {
	if (_37317_k.has_prefix(jule::Str("0x", 2))) {
		return _1da81133a_contains_any(_37317_k,jule::Str(".pP", 3));
	}
	return _1da81133a_contains_any(_37317_k,jule::Str(".eE", 3));
}



inline jule::Bool _1da81133a_is_num(jule::Str _38215_k) {
	if (_38215_k == jule::Str()) {
		return false;
	}
	jule::U8 _3879_b = _38215_k[0LL];
	return (_3879_b == '.') || (('0' <= _3879_b) && (_3879_b <= '9'));
}



inline jule::Bool _1da81133a_is_ignore_ident(jule::Str _39724_ident) {
	return _39724_ident == jule::Str("_", 1);
}



inline jule::Bool _1da81133a_is_anon_ident(jule::Str _39922_ident) {
	return _39922_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1da81133a_is_space(jule::I32 _41317_r) {
	{
		auto &expr = _1da81133a_SPACES;
		auto it = expr.begin();
		_iter_begin_4386283312:;
		if (it != expr.end()) {
			jule::I32 &_1da81133a_cr = *it;
			{
				if (_41317_r == _1da81133a_cr) {
					return true;
				}
			}
			_iter_next_4386283312:;
			++it;
			goto _iter_begin_4386283312;
		}
		_iter_end_4386283312:;
	}
	return false;
}



inline jule::Bool _1da81133a_is_letter(jule::I32 _42418_r) {
	return _1da85a4b6_is_letter(_42418_r);
}



inline jule::Bool _1da81133a_is_decimal(jule::U8 _44619_b) {
	return ('0' <= _44619_b) && (_44619_b <= '9');
}



inline jule::Bool _1da81133a_is_binary(jule::U8 _44818_b) {
	return (_44818_b == '0') || (_44818_b == '1');
}



inline jule::Bool _1da81133a_is_octal(jule::U8 _45017_b) {
	return ('0' <= _45017_b) && (_45017_b <= '7');
}



inline jule::Bool _1da81133a_is_hex(jule::U8 _45315_b) {
	{
		if (('0' <= _45315_b) && (_45315_b <= '9')) {
			_case_begin_4386295744:;
			{
				return true;
			}
		}
		else if (('a' <= _45315_b) && (_45315_b <= 'f')) {
			_case_begin_4386295840:;
			{
				return true;
			}
		}
		else if (('A' <= _45315_b) && (_45315_b <= 'F')) {
			_case_begin_4386294528:;
			{
				return true;
			}
		}
		else {
			_case_begin_4386289184:;
			{
				return false;
			}
		}
		_match_end_4386292464:;
	}
}



inline jule::Bool _1da81133a_is_assign(jule::Uint _46518_id) {
	return ((((((_46518_id == 2LLU) || (_46518_id == 31LLU)) || (_46518_id == 34LLU)) || (_46518_id == 20LLU)) || (_46518_id == 28LLU)) || (_46518_id == 3LLU)) || (_46518_id == 7LLU);
}



inline jule::Bool _1da81133a_is_postfix_op(jule::Str _47822_kind) {
	{
		auto &expr = _1da81133a_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_4386301136:;
		if (it != expr.end()) {
			jule::Str &_1da81133a_op = *it;
			{
				if (_47822_kind == _1da81133a_op) {
					return true;
				}
			}
			_iter_next_4386301136:;
			++it;
			goto _iter_begin_4386301136;
		}
		_iter_end_4386301136:;
	}
	return false;
}



inline jule::Bool _1da81133a_is_assign_op(jule::Str _48921_kind) {
	if (_1da81133a_is_postfix_op(_48921_kind)) {
		return true;
	}
	{
		auto &expr = _1da81133a_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_4386302896:;
		if (it != expr.end()) {
			jule::Str &_1da81133a_op = *it;
			{
				if (_48921_kind == _1da81133a_op) {
					return true;
				}
			}
			_iter_next_4386302896:;
			++it;
			goto _iter_begin_4386302896;
		}
		_iter_end_4386302896:;
	}
	return false;
}



inline jule::Ptr<_1da7bba21_File> _1da7bba21_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1da7bba21_File>(new( std::nothrow ) _1da7bba21_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1da81133a_Token>()));
}



inline _203741197_Log _1da7bd281_make_err(jule::Int _10513_row,jule::Int _10523_col,jule::Ptr<_1da7bba21_File>& _10534_f,jule::Str _10544_fmt,jule::Slice<jule::Any> _10557_args) {
	return _203741197_Log(1LLU,_10513_row,_10523_col,_10534_f->_method_path(),_203741197_logf(_10544_fmt,_10557_args),jule::Str(),jule::Str());
}



inline jule::Bool _1da7bd281_bytes_has_prefix(jule::Slice<jule::U8>& _11522_bytes,jule::Str _11537_prefix) {
	if (_11522_bytes.len() < _11537_prefix.len()) {
		return false;
	}
	{
		auto &expr = _11537_prefix;
		auto it = expr.begin();
		_iter_begin_4386310544:;
		if (it != expr.end()) {
			jule::Int _1da7bd281_i = it - expr.begin();
			{
				if (_11522_bytes[_1da7bd281_i] != _11537_prefix.__at(_1da7bd281_i)) {
					return false;
				}
			}
			_iter_next_4386310544:;
			++it;
			_1da7bd281_i++;
			goto _iter_begin_4386310544;
		}
		_iter_end_4386310544:;
	}
	return true;
}



inline jule::Str _1da7bd281_float_fmt_e(jule::Slice<jule::U8>& _12717_txt,jule::Int _12734_i) {
	jule::Str _12744_lit = jule::Str();
	(_12734_i)++;
	if (_12734_i >= _12717_txt.len()) {
		return _12744_lit;
	}
	jule::U8 _13313_b = _12717_txt[_12734_i];
	if ((_13313_b == '+') || (_13313_b == '-')) {
		(_12734_i)++;
		if (_12734_i >= _12717_txt.len()) {
			return _12744_lit;
		}
	}
	jule::Int _1419_first = _12734_i;
	for (; _12734_i < _12717_txt.len(); (_12734_i)++) {
		{
			_13313_b=_12717_txt[_12734_i];
			if ((!(_1da81133a_is_decimal(_13313_b)))) {
				goto _iter_end_4386321824;
			}
		}
	_iter_next_4386321824:;
	}
	_iter_end_4386321824:;
	if (_12734_i == _1419_first) {
		_12744_lit = jule::Str();
		return _12744_lit;
	}
	_12744_lit = static_cast<jule::Str>(_12717_txt.slice(0LL,_12734_i));
	return _12744_lit;
}



inline jule::Str _1da7bd281_float_fmt_p(jule::Slice<jule::U8>& _15517_txt,jule::Int _15530_i) {
	return _1da7bd281_float_fmt_e(_15517_txt,_15530_i);
}



inline jule::Str _1da7bd281_float_fmt_dotnp(jule::Slice<jule::U8>& _15721_txt,jule::Int _15738_i) {
	if (_15721_txt[_15738_i] != '.') {
		return jule::Str();
	}
	(_15738_i)++;
	_julec_label_loop:;
	for (; _15738_i < _15721_txt.len(); (_15738_i)++) {
		{
			jule::U8 _16513_b = _15721_txt[_15738_i];
			{
				if (_1da81133a_is_decimal(_16513_b)) {
					_case_begin_4386332032:;
					{
						goto _iter_next_4386325424;
					}
				}
				else if (_1da7bd281_is_float_fmt_p(_16513_b,_15738_i)) {
					_case_begin_4386332128:;
					{
						return _1da7bd281_float_fmt_p(_15721_txt,_15738_i);
					}
				}
				else {
					_case_begin_4386331680:;
					{
						goto _iter_end_4386325424;
					}
				}
				_match_end_4386331568:;
			}
		}
	_iter_next_4386325424:;
	}
	_iter_end_4386325424:;
	return jule::Str();
}



inline jule::Str _1da7bd281_float_fmt_dotfp(jule::Slice<jule::U8>& _17521_txt,jule::Int _17538_i) {
	_17538_i+=2LL;
	return _1da7bd281_float_fmt_e(_17521_txt,_17538_i);
}



inline jule::Str _1da7bd281_float_fmt_dotp(jule::Slice<jule::U8>& _18220_txt,jule::Int _18237_i) {
	(_18237_i)++;
	return _1da7bd281_float_fmt_e(_18220_txt,_18237_i);
}



inline jule::Str _1da7bd281_float_num(jule::Slice<jule::U8>& _18915_txt,jule::Int _18932_i) {
	jule::Str _18942_lit = jule::Str();
	(_18932_i)++;
	for (; _18932_i < _18915_txt.len(); (_18932_i)++) {
		{
			jule::U8 _19213_b = _18915_txt[_18932_i];
			if ((_18932_i > 1LL) && ((_19213_b == 'e') || (_19213_b == 'E'))) {
				_18942_lit = _1da7bd281_float_fmt_e(_18915_txt,_18932_i);
				return _18942_lit;
			}
			if ((!(_1da81133a_is_decimal(_19213_b)))) {
				goto _iter_end_4386339952;
			}
		}
	_iter_next_4386339952:;
	}
	_iter_end_4386339952:;
	if (_18932_i == 1LL) {
		return _18942_lit;
	}
	_18942_lit = static_cast<jule::Str>(_18915_txt.slice(0LL,_18932_i));
	return _18942_lit;
}



inline jule::Str _1da7bd281_common_num(jule::Slice<jule::U8>& _20716_txt) {
	jule::Str _20731_lit = jule::Str();
	jule::Int _20813_i = 0LL;
	_julec_label_loop:;
	for (; _20813_i < _20716_txt.len(); (_20813_i)++) {
		{
			jule::U8 _21113_b = _20716_txt[_20813_i];
			{
				if (_21113_b == '.') {
					_case_begin_4386349792:;
					{
						_20731_lit = _1da7bd281_float_num(_20716_txt,_20813_i);
						return _20731_lit;
					}
				}
				else if (_1da7bd281_is_float_fmt_e(_21113_b,_20813_i)) {
					_case_begin_4386349904:;
					{
						_20731_lit = _1da7bd281_float_fmt_e(_20716_txt,_20813_i);
						return _20731_lit;
					}
				}
				else if ((!(_1da81133a_is_decimal(_21113_b)))) {
					_case_begin_4386350016:;
					{
						goto _iter_end_4386347408;
					}
				}
				_match_end_4386349616:;
			}
		}
	_iter_next_4386347408:;
	}
	_iter_end_4386347408:;
	if (_20813_i == 0LL) {
		return _20731_lit;
	}
	_20731_lit = static_cast<jule::Str>(_20716_txt.slice(0LL,_20813_i));
	return _20731_lit;
}



inline jule::Str _1da7bd281_binary_num(jule::Slice<jule::U8>& _22516_txt) {
	jule::Str _22531_lit = jule::Str();
	if ((!(_1da7bd281_bytes_has_prefix(_22516_txt,jule::Str("0b", 2))))) {
		_22531_lit = jule::Str();
		return _22531_lit;
	}
	if (_22516_txt.len() < 2LL) {
		return _22531_lit;
	}
	
	jule::Int _23413_i = 2LL;
	for (; _23413_i < _22516_txt.len(); (_23413_i)++) {
		{
			if ((!(_1da81133a_is_binary(_22516_txt[_23413_i])))) {
				goto _iter_end_4386356240;
			}
		}
	_iter_next_4386356240:;
	}
	_iter_end_4386356240:;
	if (_23413_i == 2LL) {
		return _22531_lit;
	}
	_22531_lit = static_cast<jule::Str>(_22516_txt.slice(0LL,_23413_i));
	return _22531_lit;
}



inline jule::Bool _1da7bd281_is_float_fmt_e(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'e') || (_24719_b == 'E'));
}



inline jule::Bool _1da7bd281_is_float_fmt_p(jule::U8 _24819_b,jule::Int _24828_i) {
	return (_24828_i > 0LL) && ((_24819_b == 'p') || (_24819_b == 'P'));
}



inline jule::Bool _1da7bd281_is_float_fmt_dotnp(jule::Slice<jule::U8>& _25024_txt,jule::Int _25041_i) {
	if (_25024_txt[_25041_i] != '.') {
		return false;
	}
	(_25041_i)++;
	_julec_label_loop:;
	for (; _25041_i < _25024_txt.len(); (_25041_i)++) {
		{
			jule::U8 _25813_b = _25024_txt[_25041_i];
			{
				if (_1da81133a_is_decimal(_25813_b)) {
					_case_begin_4386371536:;
					{
						goto _iter_next_4386365488;
					}
				}
				else if (_1da7bd281_is_float_fmt_p(_25813_b,_25041_i)) {
					_case_begin_4386371632:;
					{
						return true;
					}
				}
				else {
					_case_begin_4386371184:;
					{
						goto _iter_end_4386365488;
					}
				}
				_match_end_4386371072:;
			}
		}
	_iter_next_4386365488:;
	}
	_iter_end_4386365488:;
	return false;
}



inline jule::Bool _1da7bd281_is_float_fmt_dotp(jule::Slice<jule::U8>& _26923_txt,jule::Int _26936_i) {
	{
		if (_26923_txt.len() < 3LL) {
			_case_begin_4386377104:;
			{
				goto _case_begin_4386377200;
			}
		}
		else if (_26923_txt[_26936_i] != '.') {
			_case_begin_4386377200:;
			{
				goto _case_begin_4386375744;
			}
		}
		else if ((_26923_txt[_26936_i + 1LL] != 'p') && (_26923_txt[_26936_i + 1LL] != 'P')) {
			_case_begin_4386375744:;
			{
				return false;
			}
		}
		else {
			_case_begin_4386375440:;
			{
				return true;
			}
		}
		_match_end_4386375264:;
	}
}



inline jule::Bool _1da7bd281_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27824_txt,jule::Int _27837_i) {
	{
		if (_27824_txt.len() < 4LL) {
			_case_begin_4386383056:;
			{
				goto _case_begin_4386383152;
			}
		}
		else if (_27824_txt[_27837_i] != '.') {
			_case_begin_4386383152:;
			{
				goto _case_begin_4386381696;
			}
		}
		else if ((_27824_txt[_27837_i + 1LL] != 'f') && (_27824_txt[_27837_i + 1LL] != 'F')) {
			_case_begin_4386381696:;
			{
				goto _case_begin_4386381808;
			}
		}
		else if ((_27824_txt[_27837_i + 2LL] != 'p') && (_27824_txt[_27837_i + 1LL] != 'P')) {
			_case_begin_4386381808:;
			{
				return false;
			}
		}
		else {
			_case_begin_4386381376:;
			{
				return true;
			}
		}
		_match_end_4386381200:;
	}
}



inline jule::Str _1da7bd281_octal_num(jule::Slice<jule::U8>& _28815_txt) {
	jule::Str _28830_lit = jule::Str();
	if (_28815_txt[0LL] != '0') {
		_28830_lit = jule::Str();
		return _28830_lit;
	}
	if (_28815_txt.len() < 2LL) {
		return _28830_lit;
	}
	jule::Int _29613_octal_start = 1LL;
	if (_28815_txt[1LL] == 'o') {
		if (_28815_txt.len() < 3LL) {
			return _28830_lit;
		}
		(_29613_octal_start)++;
	}
	jule::Int _30513_i = _29613_octal_start;
	for (; _30513_i < _28815_txt.len(); (_30513_i)++) {
		{
			jule::U8 _30713_b = _28815_txt[_30513_i];
			if (_1da7bd281_is_float_fmt_e(_30713_b,_30513_i)) {
				_28830_lit = _1da7bd281_float_fmt_e(_28815_txt,_30513_i);
				return _28830_lit;
			}
			if ((!(_1da81133a_is_octal(_30713_b)))) {
				goto _iter_end_4386392304;
			}
		}
	_iter_next_4386392304:;
	}
	_iter_end_4386392304:;
	if (_30513_i == _29613_octal_start) {
		return _28830_lit;
	}
	_28830_lit = static_cast<jule::Str>(_28815_txt.slice(0LL,_30513_i));
	return _28830_lit;
}



inline jule::Str _1da7bd281_hex_num(jule::Slice<jule::U8>& _32213_txt) {
	jule::Str _32228_lit = jule::Str();
	if (_32213_txt.len() < 3LL) {
		return _32228_lit;
	}
	if ((_32213_txt[0LL] != '0') || ((_32213_txt[1LL] != 'x') && (_32213_txt[1LL] != 'X'))) {
		return _32228_lit;
	}
	
	jule::Int _33113_i = 2LL;
	_julec_label_loop:;
	for (; _33113_i < _32213_txt.len(); (_33113_i)++) {
		{
			jule::U8 _33413_b = _32213_txt[_33113_i];
			{
				if (_1da7bd281_is_float_fmt_dotp(_32213_txt,_33113_i)) {
					_case_begin_4386408016:;
					{
						_32228_lit = _1da7bd281_float_fmt_dotp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_1da7bd281_is_float_fmt_dotfp(_32213_txt,_33113_i)) {
					_case_begin_4386408128:;
					{
						_32228_lit = _1da7bd281_float_fmt_dotfp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_1da7bd281_is_float_fmt_p(_33413_b,_33113_i)) {
					_case_begin_4386408240:;
					{
						_32228_lit = _1da7bd281_float_fmt_p(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_1da7bd281_is_float_fmt_dotnp(_32213_txt,_33113_i)) {
					_case_begin_4386408352:;
					{
						_32228_lit = _1da7bd281_float_fmt_dotnp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if ((!(_1da81133a_is_hex(_33413_b)))) {
					_case_begin_4386408464:;
					{
						goto _iter_end_4386405648;
					}
				}
				_match_end_4386407808:;
			}
		}
	_iter_next_4386405648:;
	}
	_iter_end_4386405648:;
	if (_33113_i == 2LL) {
		return _32228_lit;
	}
	_32228_lit = static_cast<jule::Str>(_32213_txt.slice(0LL,_33113_i));
	return _32228_lit;
}



inline jule::Str _1da7bd281_hex_escape(jule::Slice<jule::U8>& _35916_txt,jule::Int _35929_n) {
	jule::Str _35939_seq = jule::Str();
	if (_35916_txt.len() < _35929_n) {
		return _35939_seq;
	}
	
	jule::Int _36513_i = 2LL;
	for (; _36513_i < _35929_n; (_36513_i)++) {
		{
			if ((!(_1da81133a_is_hex(_35916_txt[_36513_i])))) {
				return _35939_seq;
			}
		}
	_iter_next_4386416544:;
	}
	_iter_end_4386416544:;
	_35939_seq=static_cast<jule::Str>(_35916_txt.slice(0LL,_35929_n));
	return _35939_seq;
}



inline jule::Str _1da7bd281_big_unicode_point_escape(jule::Slice<jule::U8>& _37730_txt) {
	return _1da7bd281_hex_escape(_37730_txt,10LL);
}



inline jule::Str _1da7bd281_little_unicode_point_escape(jule::Slice<jule::U8>& _37933_txt) {
	return _1da7bd281_hex_escape(_37933_txt,6LL);
}



inline jule::Str _1da7bd281_hex_byte_escape(jule::Slice<jule::U8>& _38121_txt) {
	return _1da7bd281_hex_escape(_38121_txt,4LL);
}



inline jule::Str _1da7bd281_byte_escape(jule::Slice<jule::U8>& _38417_txt) {
	jule::Str _38432_seq = jule::Str();
	if (_38417_txt.len() < 4LL) {
		return _38432_seq;
	}
	if (((!(_1da81133a_is_octal(_38417_txt[1LL]))) || (!(_1da81133a_is_octal(_38417_txt[2LL])))) || (!(_1da81133a_is_octal(_38417_txt[3LL])))) {
		return _38432_seq;
	}
	_38432_seq = static_cast<jule::Str>(_38417_txt.slice(0LL,4LL));
	return _38432_seq;
}



inline jule::Slice<_203741197_Log> _1da7bd281_lex(jule::Ptr<_1da7bba21_File> _78016_f) {
	if (_78016_f == nullptr) {
		return nullptr;
	}
	_1da7bd281_Lex _78513_lex = _1da7bd281_Lex(jule::Slice<_1da81133a_Token>(),_78016_f,0LL,jule::Int(),-1LL,jule::Slice<_203741197_Log>());
	_78513_lex._method_new_line();
	_78513_lex._method_lex();
	if (_78513_lex._field_errors.len() > 0LL) {
		return _78513_lex._field_errors;
	}
	_78016_f->_field__tokens=_78513_lex._field_tokens;
	return nullptr;
}



inline jule::Ptr<_1db4a8399_FileInfo> _1db4a8399_parse_file(jule::Ptr<_1da7bba21_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1db4a8399_FileInfo> _2713_finf = jule::new_struct<_1db4a8399_FileInfo>(new( std::nothrow ) _1db4a8399_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1db4a8399_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		_2713_finf->_field_ast=nullptr;
	}
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1da7635cd_Ast>,jule::Slice<_203741197_Log>> _1db4a8399_parse_fileset(jule::Ptr<_1da7bba21_File> _5822_f) {
	jule::Ptr<_1c1526124_Parser> _5913_p = jule::new_struct_ptr<_1c1526124_Parser>(new( std::nothrow ) _1c1526124_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ptr<_1da7b8e5d_ScopeTree> _1db4a8553_new_scope(void) {
	return jule::new_struct<_1da7b8e5d_ScopeTree>(new( std::nothrow ) _1da7b8e5d_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1db4a8553_is_st(_1da81133a_Token _4610_current,_1da81133a_Token _4626_prev) {
	jule::Bool _4641_ok = jule::Bool();
	jule::Bool _4651_terminated = jule::Bool();
	_4641_ok=(_4610_current._field_id == 5LLU) || (_4626_prev._field_row < _4610_current._field_row);
	_4651_terminated=_4610_current._field_id == 5LLU;
	return std::make_tuple(_4641_ok,_4651_terminated);
}



inline jule::Bool _1db4a8553_prev_is_incomplete_expr(jule::Slice<_1da81133a_Token>& _5229_tokens,jule::Int& _5247_i) {
	if ((_5247_i > 1LL) && (_5229_tokens[_5247_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_1da81133a_Token* _5913_prev = (&(_5229_tokens[_5247_i - 1LL]));
		return (_5913_prev->_field_id == 20LLU) || (((_5913_prev->_field_id == 7LLU) && _1da81133a_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5229_tokens[_5247_i]._field_row));
	}
}



inline std::tuple<jule::Int,jule::Bool> _1db4a8553_next_st_pos(jule::Slice<_1da81133a_Token>& _6817_tokens,jule::Int _6834_start) {
	jule::Int _6913_brace_n = 0LL;
	jule::Int _7013_i = _6834_start;
	for (; _7013_i < _6817_tokens.len(); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_1da81133a_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				if (_match_expr == 3LLU) {
					_case_begin_4387059936:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_4387065872:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_1db4a8553_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1db4a8553_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_4387060032:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len())) {
										std::tie(_7217_ok,_7317_terminated) = _1db4a8553_is_st(_6817_tokens[_7013_i + 1LL],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_4387060272:;
						}
						goto _iter_next_4387055504;
					}
				}
				_match_end_4387059856:;
			}
			if (_6913_brace_n != 0LL) {
				goto _iter_next_4387055504;
			}
			if (_7013_i > _6834_start) {
				if (_1db4a8553_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_4387055504;
				}
				std::tie(_7217_ok,_7317_terminated) = _1db4a8553_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1db4a8553_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_4387055504;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_4387055504:;
	}
	_iter_end_4387055504:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Bool> _1db4a8553_skip_st(jule::Int& _13117_i,jule::Slice<_1da81133a_Token> _13129_tokens) {
	jule::Int _1329_start = _13117_i;
	jule::Bool _13313_terminated = false;
	std::tie(_13117_i,_13313_terminated) = _1db4a8553_next_st_pos(_13129_tokens,_1329_start);
	jule::Slice<_1da81133a_Token> _13513_st_tokens = _13129_tokens.slice(_1329_start,_13117_i);
	if (_13313_terminated) {
		if (_13513_st_tokens.len() == 1LL) {
			std::tie(_13513_st_tokens,_13313_terminated) = _1db4a8553_skip_st(_13117_i,_13129_tokens);
			return std::make_tuple(_13513_st_tokens,_13313_terminated);
		}
		_13513_st_tokens=_13513_st_tokens.slice(0LL,_13513_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13513_st_tokens,_13313_terminated);
}



inline jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _1db4a8553_split_stmts(jule::Slice<_1da81133a_Token>& _15321_tokens) {
	jule::Slice<jule::Ptr<_1db4a8553_Stmt>> _15413_stms = nullptr;
	jule::Int _15513_pos = 0LL;
	while (_15513_pos < _15321_tokens.len()) {
		{
			jule::Slice<_1da81133a_Token> _15718_tokens;
			jule::Bool _15726_terminated;
			std::tie(_15718_tokens,_15726_terminated) = _1db4a8553_skip_st(_15513_pos,_15321_tokens);
			_15413_stms.push(jule::new_struct<_1db4a8553_Stmt>(new( std::nothrow ) _1db4a8553_Stmt(_15718_tokens,_15726_terminated)));
		}
	_iter_next_4387085952:;
	}
	_iter_end_4387085952:;
	return _15413_stms;
}



inline jule::Ptr<_1db4ca7d9_CallData> _1db4ca7d9_get_call_data(jule::Slice<_1da81133a_Token>& _4523_tokens) {
	jule::Ptr<_1db4ca7d9_CallData> _4613_data = jule::new_struct<_1db4ca7d9_CallData>(new( std::nothrow ) _1db4ca7d9_CallData());
	std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_args_tokens) = _1c1526124_range_last(_4523_tokens);
	if (_4613_data->_field_expr_tokens.len() == 0LL) {
		return _4613_data;
	}
	_1da81133a_Token _539_token = _4613_data->_field_expr_tokens[_4613_data->_field_expr_tokens.len() - 1LL];
	if ((_539_token._field_id == 3LLU) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_generics_tokens) = _1c1526124_range_last(_4613_data->_field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_1da81133a_Token> _1db4ca7d9_get_block_expr(jule::Slice<_1da81133a_Token>& _6124_tokens) {
	jule::Int _6213_brace_n = 0LL;
	jule::Int _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_4387102608:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_tok = *it;
			{
				{
					auto &_match_expr{ _1db4ca7d9_tok._field_id };
					if (_match_expr == 16LLU || _match_expr == 17LLU || _match_expr == 35LLU) {
						_case_begin_4387104992:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == 3LLU) {
						_case_begin_4387105104:;
						{
							{
								auto &_match_expr{ _1db4ca7d9_tok._field_kind };
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_4387108576:;
									{
										if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
											if (_6313_skip_to_next_brace_close > 0LL) {
												(_6313_skip_to_next_brace_close)--;
											}
											(_6213_brace_n)++;
											goto _match_end_4387107280;
										}
										return _6124_tokens.slice(0LL,_1db4ca7d9_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_4387109056:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_4387105264:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_4387107280:;
							}
						}
					}
					_match_end_4387104528:;
				}
			}
			_iter_next_4387102608:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_4387102608;
		}
		_iter_end_4387102608:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Slice<_1da81133a_Token>> _1db4ca7d9_split_colon(jule::Slice<_1da81133a_Token>& _9521_tokens) {
	jule::Int _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_4387104064:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_token = *it;
			{
				{
					auto &_match_expr{ _1db4ca7d9_token._field_id };
					if (_match_expr == 3LLU) {
						_case_begin_4387114448:;
						{
							{
								auto &_match_expr{ _1db4ca7d9_token._field_kind };
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_4387116848:;
									{
										(_9613_range_n)++;
										goto _iter_next_4387104064;
									}
								}
								else {
									_case_begin_4387114672:;
									{
										(_9613_range_n)--;
									}
								}
								_match_end_4387114928:;
							}
						}
					}
					else if (_match_expr == 11LLU) {
						_case_begin_4387114560:;
						{
							if (_9613_range_n < 1LL) {
								jule::Slice<_1da81133a_Token> _11325_l = _9521_tokens.slice(0LL,_1db4ca7d9_i);
								jule::Slice<_1da81133a_Token> _11425_r = _9521_tokens.slice(_1db4ca7d9_i + 1LL);
								return std::make_tuple(_11325_l,_11425_r);
							}
						}
					}
					_match_end_4387113984:;
				}
			}
			_iter_next_4387104064:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_4387104064;
		}
		_iter_end_4387104064:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1da81133a_Token> _1db4ca7d9_eliminate_comments(jule::Slice<_1da81133a_Token>& _12228_tokens) {
	jule::Slice<_1da81133a_Token> _12313_cutted = nullptr;
	{
		auto &expr = _12228_tokens;
		auto it = expr.begin();
		_iter_begin_4387113776:;
		if (it != expr.end()) {
			_1da81133a_Token _1db4ca7d9_token = *it;
			{
				if (_1db4ca7d9_token._field_id != 18LLU) {
					_12313_cutted.push(_1db4ca7d9_token);
				}
			}
			_iter_next_4387113776:;
			++it;
			goto _iter_begin_4387113776;
		}
		_iter_end_4387113776:;
	}
	return _12313_cutted;
}



inline jule::Int _1db4ca7d9_find_lowest_prec_op(jule::Slice<_1da81133a_Token>& _13425_tokens) {
	jule::U8 _13913_prec = 255LLU;
	jule::Int _14013_prec_pos = -1LL;
	jule::Int _14213_brace_n = 0LL;
	jule::Bool _14313_skip_to_next_brace_open = false;
	{
		auto &expr = _13425_tokens;
		auto it = expr.begin();
		_iter_begin_4387128336:;
		if (it != expr.end()) {
			jule::Int _1db4ca7d9_i = it - expr.begin();
			_1da81133a_Token &_1db4ca7d9_token = *it;
			{
				{
					if (_1db4ca7d9_token._field_id == 3LLU) {
						_case_begin_4387130864:;
						{
							{
								auto &_match_expr{ _1db4ca7d9_token._field_kind };
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_4387134608:;
									{
										_14313_skip_to_next_brace_open=false;
										goto _case_begin_4387134704;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_4387134704:;
									{
										(_14213_brace_n)++;
									}
								}
								else {
									_case_begin_4387131584:;
									{
										(_14213_brace_n)--;
									}
								}
								_match_end_4387132352:;
							}
							goto _iter_next_4387128336;
						}
					}
					else if (_14313_skip_to_next_brace_open) {
						_case_begin_4387130976:;
						{
							goto _iter_next_4387128336;
						}
					}
					else if (_1db4ca7d9_token._field_id == 16LLU) {
						_case_begin_4387131088:;
						{
							_14313_skip_to_next_brace_open=true;
							goto _iter_next_4387128336;
						}
					}
					else if (_1db4ca7d9_i == 0LL) {
						_case_begin_4387131200:;
						{
							goto _iter_next_4387128336;
						}
					}
					else if (_1db4ca7d9_token._field_id != 7LLU) {
						_case_begin_4387131312:;
						{
							goto _iter_next_4387128336;
						}
					}
					else if (_14213_brace_n > 0LL) {
						_case_begin_4387131424:;
						{
							goto _iter_next_4387128336;
						}
					}
					_match_end_4387130576:;
				}
				_1da81133a_Token _17813_left = _13425_tokens[_1db4ca7d9_i - 1LL];
				if ((_17813_left._field_id == 7LLU) || (_17813_left._field_id == 11LLU)) {
					goto _iter_next_4387128336;
				}
				if (((_1db4ca7d9_i > 1LL) && (_17813_left._field_id == 3LLU)) && (_17813_left._field_kind == jule::Str("]", 1))) {
					_1da81133a_Token _18617_lleft = _13425_tokens[_1db4ca7d9_i - 2LL];
					if ((_18617_lleft._field_id == 3LLU) && (_18617_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1db4ca7d9_token._field_kind == jule::Str("&", 1)) || (_1db4ca7d9_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4387128336;
						}
					}
				}
				jule::U8 _19513_p = _1db4ca7d9_token._method_prec();
				if ((_19513_p != 0LL) && (_19513_p <= _13913_prec)) {
					_13913_prec=_19513_p;
					_14013_prec_pos=_1db4ca7d9_i;
				}
			}
			_iter_next_4387128336:;
			++it;
			_1db4ca7d9_i++;
			goto _iter_begin_4387128336;
		}
		_iter_end_4387128336:;
	}
	return _14013_prec_pos;
}



inline jule::Ptr<_1da7b8e5d_IdentExpr> _1db4ca7d9_build_ident_expr(_1da81133a_Token& _20526_token) {
	return jule::new_struct<_1da7b8e5d_IdentExpr>(new( std::nothrow ) _1da7b8e5d_IdentExpr(_20526_token,_20526_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Int> _1db4ca7d9_get_range_expr_tokens(jule::Slice<_1da81133a_Token>& _21331_tokens) {
	jule::Int _21413_range_n = 0LL;
	jule::I64 _21513_i = _21331_tokens.len() - 1LL;
	for (; _21513_i >= 0LL; (_21513_i)--) {
		{
			_1da81133a_Token _21713_tok = _21331_tokens[_21513_i];
			if (_21713_tok._field_id == 3LLU) {
				{
					auto &_match_expr{ _21713_tok._field_kind };
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_4387155088:;
						{
							(_21413_range_n)++;
						}
					}
					else {
						_case_begin_4387153328:;
						{
							(_21413_range_n)--;
						}
					}
					_match_end_4387153424:;
				}
			}
			if (_21413_range_n == 0LL) {
				return std::make_tuple(_21331_tokens.slice(0LL,_21513_i),_21413_range_n);
			}
		}
	_iter_next_4387146912:;
	}
	_iter_end_4387146912:;
	return std::make_tuple(nullptr,_21413_range_n);
}



inline jule::Bool _1c152a326_check_assign_tokens(jule::Slice<_1da81133a_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1da81133a_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_4387160048:;
		if (it != expr.end()) {
			_1da81133a_Token &_1c152a326_t = *it;
			{
				if (_1c152a326_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _1c152a326_t._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_4387164000:;
							{
								(_2113_brace_n)++;
							}
						}
						else {
							_case_begin_4387162224:;
							{
								(_2113_brace_n)--;
							}
						}
						_match_end_4387162320:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4387160048;
				} else if ((_1c152a326_t._field_id == 7LLU) && _1da81133a_is_assign_op(_1c152a326_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4387160048:;
			++it;
			goto _iter_begin_4387160048;
		}
		_iter_end_4387160048:;
	}
	return false;
}



inline _203741197_Log _1c1526124_make_err(jule::Int _5013_row,jule::Int _5023_col,jule::Ptr<_1da7bba21_File>& _5034_f,jule::Str _5044_fmt,jule::Slice<jule::Any> _5057_args) {
	return _203741197_Log(1LLU,_5013_row,_5023_col,_5034_f->_method_path(),_203741197_logf(_5044_fmt,_5057_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1da81133a_Token> _1c1526124_range(jule::Int& _6915_i,jule::Str _6923_open,jule::Str _6940_close,jule::Slice<_1da81133a_Token>& _6963_tokens) {
	if (_6915_i >= _6963_tokens.len()) {
		return nullptr;
	}
	_1da81133a_Token _749_tok = _6963_tokens[_6915_i];
	if ((_749_tok._field_id != 3LLU) || (_749_tok._field_kind != _6923_open)) {
		return nullptr;
	}
	(_6915_i)++;
	jule::Int _8013_range_n = 1LL;
	jule::Int _819_start = _6915_i;
	for (; (_8013_range_n != 0LL) && (_6915_i < _6963_tokens.len()); (_6915_i)++) {
		{
			_1da81133a_Token _8313_token = _6963_tokens[_6915_i];
			if (_8313_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _8313_token._field_kind };
					if (_match_expr == _6923_open) {
						_case_begin_4387179920:;
						{
							(_8013_range_n)++;
						}
					}
					else if (_match_expr == _6940_close) {
						_case_begin_4387180032:;
						{
							(_8013_range_n)--;
						}
					}
					_match_end_4387179824:;
				}
			}
		}
	_iter_next_4387176640:;
	}
	_iter_end_4387176640:;
	return _6963_tokens.slice(_819_start,_6915_i - 1LL);
}



inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Slice<_1da81133a_Token>> _1c1526124_range_last(jule::Slice<_1da81133a_Token>& _10220_tokens) {
	jule::Slice<_1da81133a_Token> _10239_cutted = jule::Slice<_1da81133a_Token>();
	jule::Slice<_1da81133a_Token> _10256_cut = jule::Slice<_1da81133a_Token>();
	if (_10220_tokens.len() == 0LL) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	} else if (_10220_tokens[_10220_tokens.len() - 1LL]._field_id != 3LLU) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	}
	jule::Int _10913_brace_n = 0LL;
	jule::I64 _11013_i = _10220_tokens.len() - 1LL;
	for (; _11013_i >= 0LL; (_11013_i)--) {
		{
			_1da81133a_Token _11213_token = _10220_tokens[_11013_i];
			if (_11213_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _11213_token._field_kind };
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_4387192176:;
						{
							(_10913_brace_n)++;
							goto _iter_next_4387169168;
						}
					}
					else {
						_case_begin_4387190416:;
						{
							(_10913_brace_n)--;
						}
					}
					_match_end_4387190512:;
				}
			}
			if (_10913_brace_n == 0LL) {
				_10239_cutted = _10220_tokens.slice(0LL,_11013_i);
				_10256_cut = _10220_tokens.slice(_11013_i);
				return std::make_tuple(_10239_cutted,_10256_cut);
			}
		}
	_iter_next_4387169168:;
	}
	_iter_end_4387169168:;
	_10239_cutted = _10220_tokens;
	_10256_cut = nullptr;
	return std::make_tuple(_10239_cutted,_10256_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1da81133a_Token>>,jule::Slice<_203741197_Log>> _1c1526124_parts(jule::Slice<_1da81133a_Token>& _14015_tokens,jule::Uint _14032_id,jule::Bool _14045_expr_must) {
	if (_14015_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1da81133a_Token>> _14513_parts = nullptr;
	jule::Slice<_203741197_Log> _14613_errors = nullptr;
	jule::Int _14813_range_n = 0LL;
	jule::Int _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_4387200752:;
		if (it != expr.end()) {
			jule::Int _1c1526124_i = it - expr.begin();
			_1da81133a_Token &_1c1526124_token = *it;
			{
				if (_1c1526124_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _1c1526124_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_4387205376:;
							{
								(_14813_range_n)++;
								goto _iter_next_4387200752;
							}
						}
						else {
							_case_begin_4387203600:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_4387203696:;
					}
				}
				if (_14813_range_n > 0LL) {
					goto _iter_next_4387200752;
				}
				if (_1c1526124_token._field_id == _14032_id) {
					if (_14045_expr_must && ((_1c1526124_i - _14913_last) <= 0LL)) {
						_203741197_Log _16921_err = _1c1526124_make_err(_1c1526124_token._field_row,_1c1526124_token._field_column,_1c1526124_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors.push(_16921_err);
					}
					_14513_parts.push(_14015_tokens.slice(_14913_last,_1c1526124_i));
					_14913_last=static_cast<jule::Int>(_1c1526124_i + 1LL);
				}
			}
			_iter_next_4387200752:;
			++it;
			_1c1526124_i++;
			goto _iter_begin_4387200752;
		}
		_iter_end_4387200752:;
	}
	if (_14913_last < _14015_tokens.len()) {
		_14513_parts.push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14045_expr_must))) {
		_14513_parts.push(jule::Slice<_1da81133a_Token>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1c1526124_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_4387214432:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_4387214624:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_4387214720:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_4387202176:;
			{
				return jule::Str();
			}
		}
		_match_end_4387202272:;
	}
}



inline _203741197_Log _1c1526124_compiler_err(_1da81133a_Token& _19518_token,jule::Str& _19533_fmt,jule::Slice<jule::Any> _19546_args) {
	return _203741197_Log(1LLU,_19518_token._field_row,_19518_token._field_column,_19518_token._field_file->_method_path(),_203741197_logf(_19533_fmt,_19546_args),_19518_token._field_file->_method_get_row(_19518_token._field_row),jule::Str());
}



inline void _1c1526124_push_suggestion(_203741197_Log* _20631_log,jule::Str _20642_fmt,jule::Slice<jule::Any> _20655_args) {
	_20631_log->_field_suggestion=_203741197_logf(_20642_fmt,_20655_args);
}



inline jule::Ptr<_1da7b8e5d_Comment> _1c1526124_build_comment(_1da81133a_Token& _21023_token) {
	_21023_token._field_kind=_21023_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1da7b8e5d_Comment>(new( std::nothrow ) _1da7b8e5d_Comment(_21023_token,_21023_token._field_kind));
}



inline jule::Str _1c1526124_tokstoa(jule::Slice<_1da81133a_Token>& _21913_tokens) {
	jule::Str _22013_s = jule::Str();
	{
		auto &expr = _21913_tokens;
		auto it = expr.begin();
		_iter_begin_4387226912:;
		if (it != expr.end()) {
			_1da81133a_Token &_1c1526124_token = *it;
			{
				_22013_s+=_1c1526124_token._field_kind;
			}
			_iter_next_4387226912:;
			++it;
			goto _iter_begin_4387226912;
		}
		_iter_end_4387226912:;
	}
	return _22013_s;
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_build_void_type(void) {
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl());
}



inline jule::Ptr<_1da7b8e5d_TypeDecl> _1c163edb9_build_prim_type(_1da81133a_Token _2024_token) {
	return jule::new_struct<_1da7b8e5d_TypeDecl>(new( std::nothrow ) _1da7b8e5d_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1da7b8e5d_IdentTypeDecl>(new( std::nothrow ) _1da7b8e5d_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1da81133a_Token>,jule::Int> _1c163edb9_split_map_range(jule::Slice<_1da81133a_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1da81133a_Token> _3557_range_tokens = jule::Slice<_1da81133a_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_1da81133a_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_4387238784:;
						{
							(_3713_range_n)++;
							goto _iter_next_4387233072;
						}
					}
					else {
						_case_begin_4387237040:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_4387237488:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_4387233072;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4387233072;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4387233072:;
	}
	_iter_end_4387233072:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1a8d46165_lshift_unsig(_1a8d46165_Const& _55822_c,_1a8d46165_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _1a8d46165_rshift_unsig(_1a8d46165_Const& _56422_c,_1a8d46165_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Str _1a8d48c4a_real_kind_of(jule::Str _2421_kind) {
	{
		auto &_match_expr{ _2421_kind };
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_4389261008:;
			{
				return jule::Str("i64", 3);
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_4389261104:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_4389246496:;
			{
				return _2421_kind;
			}
		}
		_match_end_4389248176:;
	}
}



inline jule::Int _1a8d48c4a_bitsize_of(jule::Str _4019_k) {
	{
		auto &_match_expr{ _4019_k };
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_4389266144:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_4389266400:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_4389266496:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_4389266592:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_4389265680:;
			{
				return 64LL;
			}
		}
		else {
			_case_begin_4389263520:;
			{
				return -1LL;
			}
		}
		_match_end_4389264464:;
	}
}



inline jule::Str _1a8d48c4a_int_from_bits(jule::U64 _7222_bits) {
	{
		auto &_match_expr{ _7222_bits };
		if (_match_expr == 8LL) {
			_case_begin_4389273488:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_4389273584:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_4389273680:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_4389272864:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_4389271936:;
			{
				return jule::Str();
			}
		}
		_match_end_4389271664:;
	}
}



inline jule::Str _1a8d48c4a_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto &_match_expr{ _8523_bits };
		if (_match_expr == 8LL) {
			_case_begin_4389278080:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_4389278176:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_4389278272:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_4389277456:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_4389275952:;
			{
				return jule::Str();
			}
		}
		_match_end_4389276096:;
	}
}



inline jule::Str _1a8d48c4a_float_from_bits(jule::U64 _9824_bits) {
	{
		auto &_match_expr{ _9824_bits };
		if (_match_expr == 32LL) {
			_case_begin_4389282464:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_4389282672:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_4389280544:;
			{
				return jule::Str();
			}
		}
		_match_end_4389280688:;
	}
}



inline jule::Bool _1a8d48c4a_check_bit_float(jule::Str _12324_val,jule::Int _12334_bit) {
	jule::Int _12413_err;
	std::tie(std::ignore,_12413_err) = _1d9e31c58_parse_float(_12324_val,_12334_bit);
	return _12413_err == 0LLU;
}



inline jule::U64 _1a8d48c4a_bitsize_of_float(jule::F64 _13325_x) {
	{
		if ((-340282346638528860000000000000000000000.0 <= _13325_x) && (_13325_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_4389302416:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_4389300752:;
			{
				return 64LLU;
			}
		}
		_match_end_4389300576:;
	}
}



inline jule::U64 _1a8d48c4a_bitsize_of_int(jule::I64 _14723_x) {
	{
		if ((-128LL <= _14723_x) && (_14723_x <= 127LL)) {
			_case_begin_4389305296:;
			{
				return 8LLU;
			}
		}
		else if ((-32768LL <= _14723_x) && (_14723_x <= 32767LL)) {
			_case_begin_4389305392:;
			{
				return 16LLU;
			}
		}
		else if ((-2147483648LL <= _14723_x) && (_14723_x <= 2147483647LL)) {
			_case_begin_4389305568:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_4389303392:;
			{
				return 64LLU;
			}
		}
		_match_end_4389303216:;
	}
}



inline jule::U64 _1a8d48c4a_bitsize_of_uint(jule::U64 _16324_x) {
	{
		if (_16324_x <= 255LL) {
			_case_begin_4389310832:;
			{
				return 8LLU;
			}
		}
		else if (_16324_x <= 65535LL) {
			_case_begin_4389310928:;
			{
				return 16LLU;
			}
		}
		else if (_16324_x <= 4294967295LL) {
			_case_begin_4389311104:;
			{
				return 32LLU;
			}
		}
		else {
			_case_begin_4389309008:;
			{
				return 64LLU;
			}
		}
		_match_end_4389308832:;
	}
}



inline jule::F64 _1a8d4e338_min(jule::Str _4316_k) {
	_4316_k=_1a8d48c4a_real_kind_of(_4316_k);
	{
		auto &_match_expr{ _4316_k };
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_4389315904:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_4389316000:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_4389316096:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_4389314928:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_4389315024:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_4389315120:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_4389312720:;
			{
				return 0LL;
			}
		}
		_match_end_4389313024:;
	}
}



inline jule::F64 _1a8d4e338_max(jule::Str _5816_k) {
	_5816_k=_1a8d48c4a_real_kind_of(_5816_k);
	{
		auto &_match_expr{ _5816_k };
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_4389322592:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_4389321328:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_4389321424:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_4389321520:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_4389321616:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_4389321712:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_4389321808:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_4389321920:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_4389322032:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_4389322144:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_4389319264:;
			{
				return 0LL;
			}
		}
		_match_end_4389318576:;
	}
}



inline jule::Bool _1a8d4a39a_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1a8d48c4a_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1a8d4a39a_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1a8d48c4a_real_kind_of(_1230_k);
	return (_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3));
}



inline jule::Bool _1a8d4a39a_is_i32_compatible(jule::Str _1930_k) {
	_1930_k=_1a8d48c4a_real_kind_of(_1930_k);
	return (((_1930_k == jule::Str("i8", 2)) || (_1930_k == jule::Str("i16", 3))) || (_1930_k == jule::Str("i32", 3))) || (_1930_k == jule::Str("u8", 2));
}



inline jule::Bool _1a8d4a39a_is_i64_compatible(jule::Str _2830_k) {
	_2830_k=_1a8d48c4a_real_kind_of(_2830_k);
	return (((_2830_k == jule::Str("i8", 2)) || (_2830_k == jule::Str("i16", 3))) || (_2830_k == jule::Str("i32", 3))) || (_2830_k == jule::Str("i64", 3));
}



inline jule::Bool _1a8d4a39a_is_u8_compatible(jule::Str _3729_k) {
	_3729_k=_1a8d48c4a_real_kind_of(_3729_k);
	return _3729_k == jule::Str("u8", 2);
}



inline jule::Bool _1a8d4a39a_is_u16_compatible(jule::Str _4330_k) {
	_4330_k=_1a8d48c4a_real_kind_of(_4330_k);
	return (_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3));
}



inline jule::Bool _1a8d4a39a_is_u32_compatible(jule::Str _4930_k) {
	_4930_k=_1a8d48c4a_real_kind_of(_4930_k);
	return ((_4930_k == jule::Str("u8", 2)) || (_4930_k == jule::Str("u16", 3))) || (_4930_k == jule::Str("u32", 3));
}



inline jule::Bool _1a8d4a39a_is_u64_compatible(jule::Str _5730_k) {
	_5730_k=_1a8d48c4a_real_kind_of(_5730_k);
	return (((_5730_k == jule::Str("u8", 2)) || (_5730_k == jule::Str("u16", 3))) || (_5730_k == jule::Str("u32", 3))) || (_5730_k == jule::Str("u64", 3));
}



inline jule::Bool _1a8d4a39a_is_f32_compatible(jule::Str _6630_k) {
	_6630_k=_1a8d48c4a_real_kind_of(_6630_k);
	return _6630_k == jule::Str("f32", 3);
}



inline jule::Bool _1a8d4a39a_is_f64_compatible(jule::Str _7230_k) {
	_7230_k=_1a8d48c4a_real_kind_of(_7230_k);
	return _7230_k == jule::Str("f64", 3);
}



inline jule::Bool _1a8d4a39a_types_are_compatible(jule::Str _8033_k1,jule::Str _8042_k2) {
	_8033_k1=_1a8d48c4a_real_kind_of(_8033_k1);
	{
		auto &_match_expr{ _8033_k1 };
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_4389364880:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_4389364976:;
			{
				return _1a8d4a39a_is_i8_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_4389365072:;
			{
				return _1a8d4a39a_is_i16_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_4389365168:;
			{
				return _1a8d4a39a_is_i32_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_4389365360:;
			{
				return _1a8d4a39a_is_i64_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_4389365456:;
			{
				return _1a8d4a39a_is_u8_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_4389365552:;
			{
				return _1a8d4a39a_is_u16_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_4389365664:;
			{
				return _1a8d4a39a_is_u32_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_4389365776:;
			{
				return _1a8d4a39a_is_u64_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_4389366224:;
			{
				return _1a8d4a39a_is_f32_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_4389366336:;
			{
				return _1a8d4a39a_is_f64_compatible(_8042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_4389366448:;
			{
				return _8042_k2 == jule::Str("bool", 4);
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_4389366560:;
			{
				return _8042_k2 == jule::Str("str", 3);
			}
		}
		else {
			_case_begin_4389363952:;
			{
				return false;
			}
		}
		_match_end_4389363840:;
	}
}



inline jule::Bool _1a8d4a39a_is_i16_greater(jule::Str _10127_k) {
	_10127_k=_1a8d48c4a_real_kind_of(_10127_k);
	return _10127_k == jule::Str("i8", 2);
}



inline jule::Bool _1a8d4a39a_is_i32_greater(jule::Str _10727_k) {
	_10727_k=_1a8d48c4a_real_kind_of(_10727_k);
	return (_10727_k == jule::Str("i8", 2)) || (_10727_k == jule::Str("i16", 3));
}



inline jule::Bool _1a8d4a39a_is_i64_greater(jule::Str _11327_k) {
	_11327_k=_1a8d48c4a_real_kind_of(_11327_k);
	return ((_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3))) || (_11327_k == jule::Str("i32", 3));
}



inline jule::Bool _1a8d4a39a_is_u16_greater(jule::Str _12127_k) {
	_12127_k=_1a8d48c4a_real_kind_of(_12127_k);
	return _12127_k == jule::Str("u8", 2);
}



inline jule::Bool _1a8d4a39a_is_u32_greater(jule::Str _12727_k) {
	_12727_k=_1a8d48c4a_real_kind_of(_12727_k);
	return (_12727_k == jule::Str("u8", 2)) || (_12727_k == jule::Str("u16", 3));
}



inline jule::Bool _1a8d4a39a_is_u64_greater(jule::Str _13427_k) {
	_13427_k=_1a8d48c4a_real_kind_of(_13427_k);
	return ((_13427_k == jule::Str("u8", 2)) || (_13427_k == jule::Str("u16", 3))) || (_13427_k == jule::Str("u32", 3));
}



inline jule::Bool _1a8d4a39a_is_f32_greater(jule::Str _14223_k) {
	return _14223_k != jule::Str("f64", 3);
}



inline jule::Bool _1a8d4a39a_is_f64_greater(jule::Str _14423_k) {
	return true;
}



inline jule::Bool _1a8d4a39a_is_greater(jule::Str _14723_k1,jule::Str _14732_k2) {
	_14723_k1=_1a8d48c4a_real_kind_of(_14723_k1);
	{
		auto &_match_expr{ _14723_k1 };
		if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_4389392912:;
			{
				return _1a8d4a39a_is_i16_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_4389391696:;
			{
				return _1a8d4a39a_is_i32_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_4389391792:;
			{
				return _1a8d4a39a_is_i64_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_4389391888:;
			{
				return _1a8d4a39a_is_u16_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_4389391984:;
			{
				return _1a8d4a39a_is_u32_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_4389392176:;
			{
				return _1a8d4a39a_is_u64_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_4389392288:;
			{
				return _1a8d4a39a_is_f32_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_4389392400:;
			{
				return _1a8d4a39a_is_f64_greater(_14732_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_4389392512:;
			{
				return true;
			}
		}
		else {
			_case_begin_4389388976:;
			{
				return false;
			}
		}
		_match_end_4389388160:;
	}
}



inline jule::Bool _1a8dc9a45_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1a8d48c4a_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1a8dc9a45_is_unsig_int(jule::Str _3625_k) {
	_3625_k=_1a8d48c4a_real_kind_of(_3625_k);
	return (((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3));
}



inline jule::Bool _1a8dc9a45_is_int(jule::Str _4515_k) {
	return _1a8dc9a45_is_sig_int(_4515_k) || _1a8dc9a45_is_unsig_int(_4515_k);
}



inline jule::Bool _1a8dc9a45_is_float(jule::Str _5017_k) {
	return (_5017_k == jule::Str("f32", 3)) || (_5017_k == jule::Str("f64", 3));
}



inline jule::Bool _1a8dc9a45_is_num(jule::Str _5515_k) {
	return _1a8dc9a45_is_int(_5515_k) || _1a8dc9a45_is_float(_5515_k);
}



inline jule::Bool _1a8e7e6ee_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



inline jule::I32 _1a8e7e6ee_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a8e7e6ee_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1da91c952_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1a8e7e6ee_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a8e7e6ee_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a8e7e6ee_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _1da91c952_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1da91c952_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4389429904:;
	}
	_iter_end_4389429904:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a8e7e6ee_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		if (_match_expr == '\\') {
			_case_begin_4389443120:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_4389443840:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_4389444336:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_4389444432:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_4389444528:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_4389444624:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_4389444736:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_4389444848:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_4389444960:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_4389445072:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_4389443760:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a8e7e6ee_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1a8e7e6ee_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		if (_match_expr == 'u') {
			_case_begin_4389461920:;
			{
				
				jule::U64 _9514_rc;
				std::tie(_9514_rc,std::ignore) = _20385580b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
				_8442_i+=5LL;
				jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
				return _9713_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_4389462048:;
			{
				
				jule::U64 _10214_rc;
				std::tie(_10214_rc,std::ignore) = _20385580b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
				_8442_i+=9LL;
				jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
				return _10413_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_4389462144:;
			{
				
				jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11114_b;
				std::tie(_11114_b,std::ignore) = _20385580b_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
				return static_cast<jule::I32>(_11114_b);
			}
		}
		else {
			_case_begin_4389457376:;
			{
				
				jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11814_b;
				std::tie(_11814_b,std::ignore) = _20385580b_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
				return static_cast<jule::I32>(_11814_b);
			}
		}
		_match_end_4389456912:;
	}
}



inline jule::Slice<jule::U8> _1a8e7e6ee_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1a8e7e6ee_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Bool _1c17e2687_kind_uses_generics(jule::Ptr<_1a8ad0a37_TypeKind> _39923_k,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>& _39938_generics) {
	jule::Str _4009_pk = _39923_k->_method_to_str();
	{
		auto &expr = _39938_generics;
		auto it = expr.begin();
		_iter_begin_4390326176:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_GenericDecl> &_1c17e2687_g = *it;
			{
				if (_4009_pk.find(_1c17e2687_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4390326176:;
			++it;
			goto _iter_begin_4390326176;
		}
		_iter_end_4390326176:;
	}
	return false;
}



inline jule::Bool _1c17e2687_parameter_uses_generics(jule::Ptr<_1c17e2687_Param>& _40929_p,jule::Slice<jule::Ptr<_1da7b8e5d_GenericDecl>>& _40941_generics) {
	if (_40929_p->_method_is_self()) {
		return false;
	}
	return _1c17e2687_kind_uses_generics(_40929_p->_field_kind->_field_kind,_40941_generics);
}



inline jule::Str _1c18c86d5_str_repeat(jule::Str _8415_sub,jule::Int _8429_n) {
	if (_8429_n == 0LL) {
		return jule::Str();
	}
	jule::Str _8913_s = jule::Str();
	for (; _8429_n > 0LL; (_8429_n)--) {
		{
			_8913_s+=_8415_sub;
		}
	_iter_next_4390334944:;
	}
	_iter_end_4390334944:;
	return _8913_s;
}



inline jule::Str _1c18c86d5_build_doc(jule::Ptr<_1da7b8e5d_CommentGroup> _9618_cg) {
	if (_9618_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _10113_doc = jule::Str();
	{
		auto &expr = _9618_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_4390337424:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Comment> &_1c18c86d5_c = *it;
			{
				_10113_doc+=_1c18c86d5_c->_field_text;
				_10113_doc+=jule::Str(" ", 1);
			}
			_iter_next_4390337424:;
			++it;
			goto _iter_begin_4390337424;
		}
		_iter_end_4390337424:;
	}
	return _10113_doc;
}



inline jule::Ptr<_1a8ad0a37_TypeSymbol> _1c18c86d5_build_type(jule::Ptr<_1da7b8e5d_TypeDecl> _10919_t) {
	if (_10919_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(_10919_t,jule::Ptr<_1a8ad0a37_TypeKind>()));
}



inline jule::Ptr<_1c1ead281_Value> _1c18c86d5_build_expr(jule::Ptr<_1da7b8e5d_Expr> _11819_expr) {
	if (_11819_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(_11819_expr,jule::Ptr<_1c1ead281_Data>()));
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c18c86d5_build_type_alias(jule::Ptr<_1da7b8e5d_TypeAliasDecl> _12825_decl) {
	return jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(_12825_decl->_field_scope,_12825_decl->_field_public,_12825_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_12825_decl->_field_token,_12825_decl->_field_ident,_1c18c86d5_build_type(_12825_decl->_field_kind),_1c18c86d5_build_doc(_12825_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ptr<_1db4a7e59_Field> _1c18c86d5_build_field(jule::Ptr<_1da7b8e5d_FieldDecl> _14020_decl) {
	return jule::new_struct_ptr<_1db4a7e59_Field>(new( std::nothrow ) _1db4a7e59_Field(jule::Ptr<_1db4a7e59_Struct>(),_14020_decl->_field_token,_14020_decl->_field_public,_14020_decl->_field_mutable,_14020_decl->_field_ident,_1c18c86d5_build_type(_14020_decl->_field_kind)));
}



inline jule::Slice<jule::Ptr<_1db4a7e59_Field>> _1c18c86d5_build_fields(jule::Slice<jule::Ptr<_1da7b8e5d_FieldDecl>>& _15022_decls) {
	jule::Slice<jule::Ptr<_1db4a7e59_Field>> _15113_fields = jule::Slice<jule::Ptr<_1db4a7e59_Field>>::alloc(0LL,static_cast<jule::I64>(_15022_decls.len()));
	{
		auto &expr = _15022_decls;
		auto it = expr.begin();
		_iter_begin_4390350160:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_FieldDecl> _1c18c86d5_decl = *it;
			{
				_15113_fields.push(_1c18c86d5_build_field(_1c18c86d5_decl));
			}
			_iter_next_4390350160:;
			++it;
			goto _iter_begin_4390350160;
		}
		_iter_end_4390350160:;
	}
	return _15113_fields;
}



inline jule::Ptr<_1db4a7e59_Struct> _1c18c86d5_build_struct(jule::Ptr<_1da7b8e5d_StructDecl> _15821_decl) {
	return jule::new_struct_ptr<_1db4a7e59_Struct>(new( std::nothrow ) _1db4a7e59_Struct(jule::Ptr<_1c1b18a24_Sema>(),jule::Slice<jule::Ptr<_1db4a7e59_Struct>>(),jule::Slice<jule::Ptr<_1db4a7e59_Struct>>(),_15821_decl->_field_token,_15821_decl->_field_ident,_1c18c86d5_build_fields(_15821_decl->_field_fields),jule::Slice<jule::Ptr<_1c17e2687_Fn>>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>(),_15821_decl->_field_public,_15821_decl->_field_cpp_linked,_15821_decl->_field_directives,_1c18c86d5_build_doc(_15821_decl->_field_doc_comments),_15821_decl->_field_generics,jule::Slice<jule::Ptr<_1c196b2a0_Trait>>(),jule::Slice<jule::Ptr<_1db4a7e59_StructIns>>()));
}



inline jule::Ptr<_1c17e2687_Param> _1c18c86d5_build_param(jule::Ptr<_1da7b8e5d_ParamDecl> _17120_decl) {
	return jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_17120_decl->_field_token,_17120_decl->_field_mutable,_17120_decl->_field_variadic,_17120_decl->_field_reference,_1c18c86d5_build_type(_17120_decl->_field_kind),_17120_decl->_field_ident));
}



inline jule::Slice<jule::Ptr<_1c17e2687_Param>> _1c18c86d5_build_params(jule::Slice<jule::Ptr<_1da7b8e5d_ParamDecl>>& _18222_decls) {
	jule::Slice<jule::Ptr<_1c17e2687_Param>> _18313_params = jule::Slice<jule::Ptr<_1c17e2687_Param>>::alloc(0LL,static_cast<jule::I64>(_18222_decls.len()));
	{
		auto &expr = _18222_decls;
		auto it = expr.begin();
		_iter_begin_4390359712:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_ParamDecl> _1c18c86d5_decl = *it;
			{
				_18313_params.push(_1c18c86d5_build_param(_1c18c86d5_decl));
			}
			_iter_next_4390359712:;
			++it;
			goto _iter_begin_4390359712;
		}
		_iter_end_4390359712:;
	}
	return _18313_params;
}



inline jule::Ptr<_1c17e2687_RetType> _1c18c86d5_build_ret_type(jule::Ptr<_1da7b8e5d_RetTypeDecl> _19023_decl) {
	if ((_19023_decl->_field_idents == nullptr) && (_19023_decl->_field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_1c17e2687_RetType>(new( std::nothrow ) _1c17e2687_RetType(_1c18c86d5_build_type(_19023_decl->_field_kind),_19023_decl->_field_idents));
}



inline jule::Ptr<_1c17e2687_Fn> _1c18c86d5_build_fn(jule::Ptr<_1da7b8e5d_FnDecl> _20017_decl) {
	return jule::new_struct_ptr<_1c17e2687_Fn>(new( std::nothrow ) _1c17e2687_Fn(jule::Ptr<_1c1b18a24_Sema>(),_20017_decl->_field_token,_20017_decl->_field_global,_20017_decl->_field_unsafety,_20017_decl->_field_public,_20017_decl->_field_cpp_linked,_20017_decl->_field_statically,_20017_decl->_field_exceptional,_20017_decl->_field_ident,_20017_decl->_field_directives,_1c18c86d5_build_doc(_20017_decl->_field_doc_comments),_20017_decl->_field_scope,_20017_decl->_field_generics,_1c18c86d5_build_ret_type(_20017_decl->_field_result),_1c18c86d5_build_params(_20017_decl->_field_params),jule::Ptr<_1db4a7e59_Struct>(),jule::Slice<jule::Ptr<_1c17e2687_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1c17e2687_Fn>> _1c18c86d5_build_methods(jule::Slice<jule::Ptr<_1da7b8e5d_FnDecl>>& _21923_decls) {
	jule::Slice<jule::Ptr<_1c17e2687_Fn>> _22013_methods = jule::Slice<jule::Ptr<_1c17e2687_Fn>>::alloc(0LL,static_cast<jule::I64>(_21923_decls.len()));
	{
		auto &expr = _21923_decls;
		auto it = expr.begin();
		_iter_begin_4390370752:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_FnDecl> _1c18c86d5_decl = *it;
			{
				_22013_methods.push(_1c18c86d5_build_fn(_1c18c86d5_decl));
			}
			_iter_next_4390370752:;
			++it;
			goto _iter_begin_4390370752;
		}
		_iter_end_4390370752:;
	}
	return _22013_methods;
}



inline jule::Ptr<_1c196b2a0_Trait> _1c18c86d5_build_trait(jule::Ptr<_1da7b8e5d_TraitDecl> _22720_decl) {
	return jule::new_struct_ptr<_1c196b2a0_Trait>(new( std::nothrow ) _1c196b2a0_Trait(_22720_decl->_field_token,_22720_decl->_field_ident,_22720_decl->_field_public,jule::Bool(),_1c18c86d5_build_doc(_22720_decl->_field_doc_comments),_1c18c86d5_build_methods(_22720_decl->_field_methods),jule::Slice<jule::Ptr<_1db4a7e59_Struct>>()));
}



inline jule::Ptr<_1c196c834_EnumItem> _1c18c86d5_build_enum_item(jule::Ptr<_1da7b8e5d_EnumItemDecl> _23724_decl) {
	return jule::new_struct<_1c196c834_EnumItem>(new( std::nothrow ) _1c196c834_EnumItem(_23724_decl->_field_token,_23724_decl->_field_ident,_1c18c86d5_build_expr(_23724_decl->_field_expr)));
}



inline jule::Slice<jule::Ptr<_1c196c834_EnumItem>> _1c18c86d5_build_enum_items(jule::Slice<jule::Ptr<_1da7b8e5d_EnumItemDecl>>& _24526_decls) {
	jule::Slice<jule::Ptr<_1c196c834_EnumItem>> _24613_items = jule::Slice<jule::Ptr<_1c196c834_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_24526_decls.len()));
	{
		auto &expr = _24526_decls;
		auto it = expr.begin();
		_iter_begin_4390379072:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_EnumItemDecl> _1c18c86d5_decl = *it;
			{
				_24613_items.push(_1c18c86d5_build_enum_item(_1c18c86d5_decl));
			}
			_iter_next_4390379072:;
			++it;
			goto _iter_begin_4390379072;
		}
		_iter_end_4390379072:;
	}
	return _24613_items;
}



inline jule::Ptr<_1c196c834_Enum> _1c18c86d5_build_enum(jule::Ptr<_1da7b8e5d_EnumDecl> _25319_decl) {
	return jule::new_struct_ptr<_1c196c834_Enum>(new( std::nothrow ) _1c196c834_Enum(_25319_decl->_field_token,_25319_decl->_field_public,_25319_decl->_field_ident,_1c18c86d5_build_type(_25319_decl->_field_kind),_1c18c86d5_build_enum_items(_25319_decl->_field_items),_1c18c86d5_build_doc(_25319_decl->_field_doc_comments)));
}



inline jule::Ptr<_1c1b58316_Var> _1c18c86d5_build_var(jule::Ptr<_1da7b8e5d_VarDecl> _26418_decl) {
	return jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(jule::Ptr<_1c197a248_Scope>(),_26418_decl->_field_token,_26418_decl->_field_ident,_26418_decl->_field_cpp_linked,_26418_decl->_field_constant,_26418_decl->_field_mutable,_26418_decl->_field_public,jule::Bool(),_26418_decl->_field_statically,_26418_decl->_field_reference,_1c18c86d5_build_doc(_26418_decl->_field_doc_comments),_1c18c86d5_build_type(_26418_decl->_field_kind),_1c18c86d5_build_expr(_26418_decl->_field_expr),_1c18c86d5_ReferenceStack::_static_method_new(),_26418_decl->_field_directives,jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
}



inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c18c86d5_build_vars(jule::Slice<jule::Ptr<_1da7b8e5d_VarDecl>> _28219_decls) {
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _28313_vars = jule::Slice<jule::Ptr<_1c1b58316_Var>>::alloc(0LL,static_cast<jule::I64>(_28219_decls.len()));
	{
		auto &expr = _28219_decls;
		auto it = expr.begin();
		_iter_begin_4390407648:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_VarDecl> _1c18c86d5_decl = *it;
			{
				_28313_vars.push(_1c18c86d5_build_var(_1c18c86d5_decl));
			}
			_iter_next_4390407648:;
			++it;
			goto _iter_begin_4390407648;
		}
		_iter_end_4390407648:;
	}
	return _28313_vars;
}



inline jule::Ptr<_1c1977ee3_Impl> _1c18c86d5_build_impl(jule::Ptr<_1da7b8e5d_Impl> _29019_decl) {
	return jule::new_struct<_1c1977ee3_Impl>(new( std::nothrow ) _1c1977ee3_Impl(_29019_decl->_field_base,_29019_decl->_field_dest,_1c18c86d5_build_methods(_29019_decl->_field_methods),_1c18c86d5_build_vars(_29019_decl->_field_statics)));
}



inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_new_scope_checker_base(jule::Ptr<_1c1b18a24_Sema>& _4132_s,jule::Ptr<_1c17e2687_FnIns> _4146_owner) {
	return jule::new_struct_ptr<_1c197a248_ScopeChecker>(new( std::nothrow ) _1c197a248_ScopeChecker(_4132_s,_4146_owner,jule::Ptr<_1c197a248_ScopeChecker>(),jule::Int(),jule::new_struct<_1c2020e2b_SymbolTable>(new( std::nothrow ) _1c2020e2b_SymbolTable()),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1da7b8e5d_ScopeTree>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ptr<_1c197a248_ScopeChecker> _1c197a248_new_scope_checker(jule::Ptr<_1c1b18a24_Sema>& _4927_s,jule::Ptr<_1c17e2687_FnIns> _4941_owner) {
	jule::Ptr<_1c197a248_ScopeChecker> _5013_base = _1c197a248_new_scope_checker_base(_4927_s,_4941_owner);
	_5013_base->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeLabel>>>(nullptr);
	_5013_base->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c197a248_ScopeGoto>>>(nullptr);
	return _5013_base;
}



inline jule::Ptr<_1c197a248_ScopeLabel> _1c197a248_find_label_parent(jule::Str _5922_ident,jule::Ptr<_1c197a248_ScopeChecker> _5938_scope) {
	jule::Ptr<_1c197a248_ScopeLabel> _6013_label = _5938_scope->_method_find_label_scope(_5922_ident);
	while (_6013_label == nullptr) {
		{
			if ((_5938_scope->_field_parent == nullptr) || (_5938_scope->_field_owner != nullptr)) {
				return nullptr;
			}
			_5938_scope=_5938_scope->_field_parent;
			_6013_label=_5938_scope->_method_find_label_scope(_5922_ident);
		}
	_iter_next_4390416288:;
	}
	_iter_end_4390416288:;
	return _6013_label;
}



inline jule::Bool _1c197a248_stmt_is_goto_scope(jule::Any& _7324_stmt,jule::Ptr<_1c197a248_Scope>& _7336_sc) {
	{
		auto &_match_expr{ _7324_stmt };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_Scope>>()) {
			_case_begin_4390426032:;
			{
				return _7324_stmt.operator jule::Ptr<_1c197a248_Scope>() == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_InfIter>>()) {
			_case_begin_4390424816:;
			{
				return _7324_stmt.operator jule::Ptr<_1c197a248_InfIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_RangeIter>>()) {
			_case_begin_4390424912:;
			{
				return _7324_stmt.operator jule::Ptr<_1c197a248_RangeIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_WhileIter>>()) {
			_case_begin_4390425008:;
			{
				return _7324_stmt.operator jule::Ptr<_1c197a248_WhileIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Match>>()) {
			_case_begin_4390425104:;
			{
				jule::Ptr<_1c197a248_Match> _8813_m = _7324_stmt.operator jule::Ptr<_1c197a248_Match>();
				{
					auto &expr = _8813_m->_field_cases;
					auto it = expr.begin();
					_iter_begin_4390434896:;
					if (it != expr.end()) {
						jule::Ptr<_1c197a248_Case> &_1c197a248_c = *it;
						{
							if (_1c197a248_c->_field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_4390434896:;
						++it;
						goto _iter_begin_4390434896;
					}
					_iter_end_4390434896:;
				}
				return (_8813_m->_field_default != nullptr) && (_8813_m->_field_default->_field_scope == _7336_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Conditional>>()) {
			_case_begin_4390425328:;
			{
				jule::Ptr<_1c197a248_Conditional> _9713_c = _7324_stmt.operator jule::Ptr<_1c197a248_Conditional>();
				{
					auto &expr = _9713_c->_field_elifs;
					auto it = expr.begin();
					_iter_begin_4390438992:;
					if (it != expr.end()) {
						jule::Ptr<_1c197a248_If> &_1c197a248_elif = *it;
						{
							if (_1c197a248_elif->_field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_4390438992:;
						++it;
						goto _iter_begin_4390438992;
					}
					_iter_end_4390438992:;
				}
				return (_9713_c->_field_default != nullptr) && (_9713_c->_field_default->_field_scope == _7336_sc);
			}
		}
		else {
			_case_begin_4390420944:;
			{
				return false;
			}
		}
		_match_end_4390424288:;
	}
}



inline jule::Int _1c197a248_count_match_type(jule::Ptr<_1c197a248_Match>& _11022_m,jule::Ptr<_1a8ad0a37_TypeKind>& _11034_t) {
	jule::Int _11113_n = 0LL;
	jule::Str _1129_kind = _11034_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &expr = _11022_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4390444240:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_Case> &_1c197a248_c = *it;
			{
				if (_1c197a248_c == nullptr) {
					goto _iter_next_4390444240;
				}
				{
					auto &expr = _1c197a248_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_4390445664:;
					if (it != expr.end()) {
						jule::Ptr<_1c1ead281_Data> &_1c197a248_expr = *it;
						{
							if (_1c197a248_expr == nullptr) {
								goto _iter_end_4390444240;
							}
							if (_1129_kind == _1c197a248_expr->_field_model.operator jule::Ptr<_1a8ad0a37_TypeKind>()->_method_to_str()) {
								(_11113_n)++;
							}
						}
						_iter_next_4390445664:;
						++it;
						goto _iter_begin_4390445664;
					}
					_iter_end_4390445664:;
				}
			}
			_iter_next_4390444240:;
			++it;
			goto _iter_begin_4390444240;
		}
		_iter_end_4390444240:;
	}
	return _11113_n;
}



inline jule::Slice<jule::Ptr<_1c1ead281_Data>> _1c197a248_get_datas_from_tuple_data(jule::Ptr<_1c1ead281_Data>& _13435_d) {
	if (_13435_d->_field_kind->_method_tup() != nullptr) {
		{
			auto &_match_expr{ _13435_d->_field_model };
			if (_match_expr.type_is<jule::Ptr<_1c19727a1_TupleExprModel>>()) {
				_case_begin_4390459808:;
				{
					return _13435_d->_field_model.operator jule::Ptr<_1c19727a1_TupleExprModel>()->_field_datas;
				}
			}
			else {
				_case_begin_4390450784:;
				{
					jule::Ptr<_1a8ad0a37_Tuple> _14121_t = _13435_d->_field_kind->_method_tup();
					jule::Slice<jule::Ptr<_1c1ead281_Data>> _14221_r = jule::Slice<jule::Ptr<_1c1ead281_Data>>::alloc(0LL,static_cast<jule::I64>(_14121_t->_field_types.len()));
					{
						auto &expr = _14121_t->_field_types;
						auto it = expr.begin();
						_iter_begin_4390455856:;
						if (it != expr.end()) {
							jule::Ptr<_1a8ad0a37_TypeKind> _1c197a248_kind = *it;
							{
								_14221_r.push(jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(_1c197a248_kind,jule::Ptr<_1a8ad0a37_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>())));
							}
							_iter_next_4390455856:;
							++it;
							goto _iter_begin_4390455856;
						}
						_iter_end_4390455856:;
					}
					return _14221_r;
				}
			}
			_match_end_4390451136:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1c1ead281_Data>>({_13435_d});
	}
}



inline jule::Slice<jule::Any> _1c197a248_get_expr_models(jule::Any& _15625_m) {
	{
		auto &_match_expr{ _15625_m };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_TupleExpr>>()) {
			_case_begin_4390458192:;
			{
				jule::Ptr<_1da7b8e5d_TupleExpr> _15917_tup = _15625_m.operator jule::Ptr<_1da7b8e5d_TupleExpr>();
				jule::Slice<jule::Any> _16017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15917_tup->_field_expr.len()));
				{
					auto &expr = _15917_tup->_field_expr;
					auto it = expr.begin();
					_iter_begin_4390463392:;
					if (it != expr.end()) {
						jule::Ptr<_1da7b8e5d_Expr> _1c197a248_expr = *it;
						{
							_16017_models.push(_1c197a248_expr->_field_kind);
						}
						_iter_next_4390463392:;
						++it;
						goto _iter_begin_4390463392;
					}
					_iter_end_4390463392:;
				}
				return _16017_models;
			}
		}
		else {
			_case_begin_4390445152:;
			{
				return jule::Slice<jule::Any>({_15625_m});
			}
		}
		_match_end_4390461200:;
	}
}



inline jule::Bool _1c197a248_check_mut(jule::Ptr<_1c1b18a24_Sema>& _17119_s,jule::Ptr<_1c1ead281_Data>& _17130_left,jule::Ptr<_1c1ead281_Data> _17147_right,_1da81133a_Token _17161_error_token) {
	jule::Bool _17183_ok = jule::Bool();
	{
		if ((!(_17130_left->_field_mutable))) {
			_case_begin_4390470464:;
			{
				_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>());
				_17183_ok = false;
				return _17183_ok;
			}
		}
		else if (((_17147_right != nullptr) && (!(_17147_right->_field_mutable))) && _17147_right->_field_kind->_method_mutable()) {
			_case_begin_4390470656:;
			{
				_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
				_17183_ok = false;
				return _17183_ok;
			}
		}
		else {
			_case_begin_4390469008:;
			{
				_17183_ok = true;
				return _17183_ok;
			}
		}
		_match_end_4390468832:;
	}
}



inline jule::Bool _1c197a248_check_assign(jule::Ptr<_1c1b18a24_Sema>& _18622_s,jule::Ptr<_1c1ead281_Data>& _18637_left,jule::Ptr<_1c1ead281_Data> _18654_right,_1da81133a_Token _18668_error_token) {
	jule::Bool _18690_ok = jule::Bool();
	jule::Ptr<_1c17e2687_FnIns> _1879_f = _18637_left->_field_kind->_method_fnc();
	if (((_1879_f != nullptr) && (_1879_f->_field_decl != nullptr)) && _1879_f->_field_decl->_field_global) {
		_18622_s->_method_push_err(_18668_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18690_ok = false;
		return _18690_ok;
	}
	{
		if (_18637_left->_method_is_const()) {
			_case_begin_4390484944:;
			{
				_18622_s->_method_push_err(_18668_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_18622_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else if ((!(_18637_left->_field_lvalue))) {
			_case_begin_4390485120:;
			{
				_18622_s->_method_push_err(_18668_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>());
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else if ((!(_1c197a248_check_mut(_18622_s,_18637_left,_18654_right,_18668_error_token)))) {
			_case_begin_4390485216:;
			{
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else {
			_case_begin_4390481136:;
			{
				_18690_ok = true;
				return _18690_ok;
			}
		}
		_match_end_4390483328:;
	}
}



inline jule::Bool _1c197a248_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_AssignSt>>()) {
			_case_begin_4390493888:;
			{
				return (!(_21137_n.operator jule::Ptr<_1da7b8e5d_AssignSt>()->_field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1da7b8e5d_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1da7b8e5d_Expr>>()) {
			_case_begin_4390493984:;
			{
				return true;
			}
		}
		else {
			_case_begin_4390478560:;
			{
				return false;
			}
		}
		_match_end_4390486032:;
	}
}



inline jule::Bool _1c197a248_is_valid_st_for_next_st(jule::Any& _22529_st) {
	{
		auto &_match_expr{ _22529_st };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c197a248_Postfix>>() || _match_expr.type_is<jule::Ptr<_1c197a248_Assign>>() || _match_expr.type_is<jule::Ptr<_1c197a248_MultiAssign>>()) {
			_case_begin_4390497712:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
			_case_begin_4390497808:;
			{
				{
					auto &_match_expr{ _22529_st.operator jule::Ptr<_1c1ead281_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_FnCallExprModel>>()) {
						_case_begin_4390506032:;
						{
							return true;
						}
					}
					else {
						_case_begin_4390503792:;
						{
							return false;
						}
					}
					_match_end_4390504448:;
				}
			}
		}
		else {
			_case_begin_4390494352:;
			{
				return false;
			}
		}
		_match_end_4390496448:;
	}
}



inline jule::Bool _1c197a248_st_is_def(jule::Any& _24415_st) {
	{
		auto &_match_expr{ _24415_st };
		if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4390506624:;
			{
				return true;
			}
		}
		else {
			_case_begin_4390503472:;
			{
				return false;
			}
		}
		_match_end_4390505728:;
	}
}



inline jule::Ptr<_1c1b58316_Var> _1c1b398be_find_var_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto &expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_4390509104:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_f = *it;
			{
				jule::Ptr<_1c1b58316_Var> _2917_v = _1c1b398be_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (_2917_v != nullptr) {
					return _2917_v;
				}
			}
			_iter_next_4390509104:;
			++it;
			goto _iter_begin_4390509104;
		}
		_iter_end_4390509104:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1c1b398be_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto &expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_4390513568:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_f = *it;
			{
				jule::Ptr<_1a8ad0a37_TypeAlias> _4117_ta = _1c1b398be_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (_4117_ta != nullptr) {
					return _4117_ta;
				}
			}
			_iter_next_4390513568:;
			++it;
			goto _iter_begin_4390513568;
		}
		_iter_end_4390513568:;
	}
	return nullptr;
}



inline jule::Ptr<_1db4a7e59_Struct> _1c1b398be_find_struct_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto &expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_4390519184:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_f = *it;
			{
				jule::Ptr<_1db4a7e59_Struct> _5317_s = _1c1b398be_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (_5317_s != nullptr) {
					return _5317_s;
				}
			}
			_iter_next_4390519184:;
			++it;
			goto _iter_begin_4390519184;
		}
		_iter_end_4390519184:;
	}
	return nullptr;
}



inline jule::Ptr<_1c17e2687_Fn> _1c1b398be_find_fn_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto &expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_4390524800:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_file = *it;
			{
				jule::Ptr<_1c17e2687_Fn> _6517_f = _1c1b398be_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (_6517_f != nullptr) {
					return _6517_f;
				}
			}
			_iter_next_4390524800:;
			++it;
			goto _iter_begin_4390524800;
		}
		_iter_end_4390524800:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196b2a0_Trait> _1c1b398be_find_trait_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto &expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_4390531488:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_f = *it;
			{
				jule::Ptr<_1c196b2a0_Trait> _7717_t = _1c1b398be_f->_method_find_trait(_7554_ident);
				if (_7717_t != nullptr) {
					return _7717_t;
				}
			}
			_iter_next_4390531488:;
			++it;
			goto _iter_begin_4390531488;
		}
		_iter_end_4390531488:;
	}
	return nullptr;
}



inline jule::Ptr<_1c196c834_Enum> _1c1b398be_find_enum_in_package(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto &expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_4390532144:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b398be_f = *it;
			{
				jule::Ptr<_1c196c834_Enum> _8917_e = _1c1b398be_f->_method_find_enum(_8753_ident);
				if (_8917_e != nullptr) {
					return _8917_e;
				}
			}
			_iter_next_4390532144:;
			++it;
			goto _iter_begin_4390532144;
		}
		_iter_end_4390532144:;
	}
	return nullptr;
}



inline jule::Bool _1c1b18a24_is_valid_model_for_ref(jule::Any _1127_m) {
	{
		auto &_match_expr{ _1127_m };
		if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4390541632:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructSubIdentExprModel>>()) {
			_case_begin_4390541728:;
			{
				jule::Ptr<_1c19727a1_StructSubIdentExprModel> _1713_model = _1127_m.operator jule::Ptr<_1c19727a1_StructSubIdentExprModel>();
				return _1c1b18a24_is_valid_model_for_ref(_1713_model->_field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_TraitSubIdentExprModel>>()) {
			_case_begin_4390541888:;
			{
				jule::Ptr<_1c19727a1_TraitSubIdentExprModel> _2113_model = _1127_m.operator jule::Ptr<_1c19727a1_TraitSubIdentExprModel>();
				return _1c1b18a24_is_valid_model_for_ref(_2113_model->_field_expr);
			}
		}
		else {
			_case_begin_4390540864:;
			{
				return false;
			}
		}
		_match_end_4390535200:;
	}
}



inline _203741197_Log _1c1b18a24_compiler_err(_1da81133a_Token& _2918_token,jule::Bool _2932_line,jule::Str _2944_fmt,jule::Slice<jule::Any> _2957_args) {
	_203741197_Log _3013_log = _203741197_Log(1LLU,_2918_token._field_row,_2918_token._field_column,_2918_token._field_file->_method_path(),_203741197_logf(_2944_fmt,_2957_args),jule::Str(),jule::Str());
	if (_2932_line) {
		_3013_log._field_line=_2918_token._field_file->_method_get_row(_2918_token._field_row);
	}
	return _3013_log;
}



inline jule::Bool _1c1b18a24_imp_is_lookupable(jule::Ptr<_1c1b398be_ImportInfo>& _4323_i,jule::Str _4339_ident) {
	if (_4323_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4323_i->_field_import_all))) {
		if (_4323_i->_field_selected.len() > 0LL) {
			return _4323_i->_method_exist_ident(_4339_ident);
		}
	}
	return _4323_i->_field_import_all;
}



inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c1b18a24_build_ret_vars(jule::Ptr<_1c17e2687_FnIns>& _5624_f) {
	if (_5624_f->_field_decl->_method_is_void() || (_5624_f->_field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _6113_vars = nullptr;
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _6213_types = _1c1d617a5_get_result_types(_5624_f->_field_result);
	{
		auto &expr = _5624_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4390564912:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			_1da81133a_Token _1c1b18a24_ident = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1b18a24_ident._field_kind)) {
					goto _iter_next_4390564912;
				}
				jule::Ptr<_1c1b58316_Var> _6817_v = jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(_5624_f->_field_scope,_1c1b18a24_ident,_1c1b18a24_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_6213_types[_1c1b18a24_i])),jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr>(),jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data()))),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
				_6113_vars.push(_6817_v);
			}
			_iter_next_4390564912:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4390564912;
		}
		_iter_end_4390564912:;
	}
	return _6113_vars;
}



inline jule::Slice<jule::Ptr<_1c1b58316_Var>> _1c1b18a24_build_param_vars(jule::Ptr<_1c17e2687_FnIns>& _8526_f) {
	if (_8526_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1c1b58316_Var>> _9013_vars = jule::Slice<jule::Ptr<_1c1b58316_Var>>::alloc(0LL,static_cast<jule::I64>(_8526_f->_field_params.len()));
	{
		auto &expr = _8526_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4390573792:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1c1b18a24_p = *it;
			{
				jule::Ptr<_1c1b58316_Var> _9217_v = jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(_8526_f->_field_scope,_1c1b18a24_p->_field_decl->_field_token,_1c1b18a24_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1c1b18a24_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),_1c1b18a24_p->_field_decl->_field_reference,jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol()),jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr>(),jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data()))),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
				{
					if (_1c1b18a24_p->_field_decl->_method_is_self()) {
						_case_begin_4390579904:;
						{
							_9217_v->_field_kind->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_8526_f->_field_owner));
							_9217_v->_field_reference=true;
							if (_1c1b18a24_p->_field_decl->_method_is_ref()) {
								_9217_v->_field_ident=_9217_v->_field_ident.slice(1LL);
								_9217_v->_field_kind->_field_kind->_field_kind=jule::new_struct_ptr<_1a8ad0a37_Sptr>(new( std::nothrow ) _1a8ad0a37_Sptr(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(_9217_v->_field_kind->_field_kind->_field_cpp_ident,jule::Bool(),jule::Bool(),_9217_v->_field_kind->_field_kind->_field_kind))));
							}
						}
					}
					else if (_1c1b18a24_p->_field_decl->_field_variadic) {
						_case_begin_4390580864:;
						{
							_9217_v->_field_kind->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Slc>(new( std::nothrow ) _1a8ad0a37_Slc(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(_1c1b18a24_p->_field_kind->_field_cpp_ident,jule::Bool(),jule::Bool(),_1c1b18a24_p->_field_kind->_field_kind))))));
						}
					}
					else {
						_case_begin_4390579104:;
						{
							_9217_v->_field_kind->_field_kind=_1c1b18a24_p->_field_kind;
						}
					}
					_match_end_4390578992:;
				}
				_9013_vars.push(_9217_v);
			}
			_iter_next_4390573792:;
			++it;
			goto _iter_begin_4390573792;
		}
		_iter_end_4390573792:;
	}
	return _9013_vars;
}



inline jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _1c1b18a24_build_generic_type_aliases(jule::Ptr<_1c17e2687_FnIns>& _14036_f) {
	jule::I64 _14113_size = _14036_f->_field_generics.len();
	if (_14036_f->_field_decl->_field_owner != nullptr) {
		_14113_size+=static_cast<jule::I64>(_14036_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_14113_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>> _15013_aliases = jule::Slice<jule::Ptr<_1a8ad0a37_TypeAlias>>::alloc(0LL,_14113_size);
	{
		auto &expr = _14036_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4390593056:;
		if (it != expr.end()) {
			jule::Int _1c1b18a24_i = it - expr.begin();
			jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_g = *it;
			{
				jule::Ptr<_1da7b8e5d_GenericDecl> _15317_decl = _14036_f->_field_decl->_field_generics[_1c1b18a24_i];
				_15013_aliases.push(jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(_14036_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15317_decl->_field_token,_15317_decl->_field_ident,jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_1c1b18a24_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4390593056:;
			++it;
			_1c1b18a24_i++;
			goto _iter_begin_4390593056;
		}
		_iter_end_4390593056:;
	}
	if (_14036_f->_field_decl->_field_owner != nullptr) {
		jule::Ptr<_1db4a7e59_StructIns> _16517_owner = _14036_f->_field_owner;
		{
			auto &expr = _16517_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4390596672:;
			if (it != expr.end()) {
				jule::Int _1c1b18a24_i = it - expr.begin();
				jule::Ptr<_1a8ad0a37_TypeKind> _1c1b18a24_g = *it;
				{
					jule::Ptr<_1da7b8e5d_GenericDecl> _16721_decl = _16517_owner->_field_decl->_field_generics[_1c1b18a24_i];
					_15013_aliases.push(jule::new_struct<_1a8ad0a37_TypeAlias>(new( std::nothrow ) _1a8ad0a37_TypeAlias(_14036_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16721_decl->_field_token,_16721_decl->_field_ident,jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),_1c1b18a24_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4390596672:;
				++it;
				_1c1b18a24_i++;
				goto _iter_begin_4390596672;
			}
			_iter_end_4390596672:;
		}
	}
	return _15013_aliases;
}



inline jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_find_file(jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>& _18219_files,jule::Ptr<_1da7bba21_File>& _18243_handler) {
	{
		auto &expr = _18219_files;
		auto it = expr.begin();
		_iter_begin_4390602800:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1c1b18a24_fl = *it;
			{
				if (_1c1b18a24_fl->_field_file == _18243_handler) {
					return _1c1b18a24_fl;
				}
			}
			_iter_next_4390602800:;
			++it;
			goto _iter_begin_4390602800;
		}
		_iter_end_4390602800:;
	}
	return nullptr;
}



inline std::tuple<jule::Bool,jule::Bool> _1c1b18a24_conditional_has_ret(jule::Ptr<_1c197a248_Conditional> _19128_c) {
	jule::Bool _19147_ok = jule::Bool();
	jule::Bool _19157_breaking = jule::Bool();
	jule::Bool _19213_breaked = false;
	{
		auto &expr = _19128_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_4390608784:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_If> _1c1b18a24_elif = *it;
			{
				if (_1c1b18a24_elif == nullptr) {
					_19147_ok = false;
					_19157_breaking = false;
					return std::make_tuple(_19147_ok,_19157_breaking);
				}
				std::tie(_19147_ok,std::ignore,_19157_breaking) = _1c1b18a24___has_ret(_1c1b18a24_elif->_field_scope);
				_19213_breaked=_19213_breaked || _19157_breaking;
				if ((!(_19147_ok))) {
					_19147_ok = false;
					_19157_breaking = _19213_breaked;
					return std::make_tuple(_19147_ok,_19157_breaking);
				}
			}
			_iter_next_4390608784:;
			++it;
			goto _iter_begin_4390608784;
		}
		_iter_end_4390608784:;
	}
	if (_19128_c->_field_default == nullptr) {
		_19147_ok = false;
		_19157_breaking = _19213_breaked;
		return std::make_tuple(_19147_ok,_19157_breaking);
	}
	std::tie(_19147_ok,std::ignore,_19157_breaking) = _1c1b18a24___has_ret(_19128_c->_field_default->_field_scope);
	_19213_breaked=_19213_breaked || _19157_breaking;
	_19157_breaking = _19213_breaked;
	return std::make_tuple(_19147_ok,_19157_breaking);
}



inline jule::Bool _1c1b18a24_match_has_ret(jule::Ptr<_1c197a248_Match> _21322_m) {
	if (_21322_m->_field_default == nullptr) {
		return false;
	}
	jule::Bool _21813_ok = true;
	jule::Bool _21913_falled = false;
	jule::Bool _22013_breaked = false;
	{
		auto &expr = _21322_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4390620272:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_Case> _1c1b18a24_c = *it;
			{
				if (_1c1b18a24_c == nullptr) {
					return false;
				}
				std::tie(_21813_ok,_21913_falled,_22013_breaked) = _1c1b18a24___has_ret(_1c1b18a24_c->_field_scope);
				if (((!(_21813_ok)) && (!(_21913_falled))) || _22013_breaked) {
					return false;
				}
				{
					if ((!(_21813_ok))) {
						_case_begin_4390624352:;
						{
							if ((!(_21913_falled))) {
								return false;
							}
							goto _case_begin_4390624448;
						}
					}
					else if (_21913_falled) {
						_case_begin_4390624448:;
						{
							if (_1c1b18a24_c->_field_next == nullptr) {
								return false;
							}
							goto _iter_next_4390620272;
						}
					}
					_match_end_4390624224:;
				}
				_21913_falled=false;
			}
			_iter_next_4390620272:;
			++it;
			goto _iter_begin_4390620272;
		}
		_iter_end_4390620272:;
	}
	return _1c1b18a24_has_ret(_21322_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1c1b18a24___has_ret(jule::Ptr<_1c197a248_Scope> _24918_s) {
	jule::Bool _24931_ok = jule::Bool();
	jule::Bool _24941_falled = jule::Bool();
	jule::Bool _24955_breaked = jule::Bool();
	if (_24918_s == nullptr) {
		_24931_ok = false;
		_24941_falled = false;
		_24955_breaked = false;
		return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
	}
	{
		auto &expr = _24918_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4390630512:;
		if (it != expr.end()) {
			jule::Any _1c1b18a24_st = *it;
			{
				{
					auto &_match_expr{ _1c1b18a24_st };
					if (_match_expr.type_is<jule::Ptr<_1c197a248_FallSt>>()) {
						_case_begin_4390632720:;
						{
							_24941_falled=true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_BreakSt>>()) {
						_case_begin_4390633360:;
						{
							_24931_ok = false;
							_24941_falled = false;
							_24955_breaked = true;
							return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_ContSt>>()) {
						_case_begin_4390633456:;
						{
							_24931_ok = false;
							_24941_falled = false;
							_24955_breaked = true;
							return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_InfIter>>()) {
						_case_begin_4390633552:;
						{
							_24931_ok=_1c1b18a24_has_ret(_1c1b18a24_st.operator jule::Ptr<_1c197a248_InfIter>()->_field_scope);
							if (_24931_ok) {
								_24931_ok = true;
								_24941_falled = false;
								_24955_breaked = false;
								return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_RetSt>>()) {
						_case_begin_4390633648:;
						{
							_24931_ok = true;
							return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_Scope>>()) {
						_case_begin_4390633744:;
						{
							_24931_ok=_1c1b18a24_has_ret(_1c1b18a24_st.operator jule::Ptr<_1c197a248_Scope>());
							if (_24931_ok) {
								_24931_ok = true;
								_24941_falled = false;
								_24955_breaked = false;
								return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
						_case_begin_4390633840:;
						{
							{
								auto &_match_expr{ _1c1b18a24_st.operator jule::Ptr<_1c1ead281_Data>()->_field_model };
								if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>()) {
									_case_begin_4390644432:;
									{
										_24931_ok = true;
										return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
									}
								}
								_match_end_4390650048:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_Conditional>>()) {
						_case_begin_4390633936:;
						{
							std::tie(_24931_ok,_24955_breaked) = _1c1b18a24_conditional_has_ret(_1c1b18a24_st.operator jule::Ptr<_1c197a248_Conditional>());
							if (_24931_ok) {
								_24931_ok = true;
								_24941_falled = false;
								_24955_breaked = false;
								return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
							}
							if (_24955_breaked) {
								_24931_ok = false;
								_24941_falled = false;
								return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c197a248_Match>>()) {
						_case_begin_4390634048:;
						{
							_24931_ok=_1c1b18a24_match_has_ret(_1c1b18a24_st.operator jule::Ptr<_1c197a248_Match>());
							if (_24931_ok) {
								_24931_ok = true;
								_24941_falled = false;
								_24955_breaked = false;
								return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
							}
						}
					}
					_match_end_4390633088:;
				}
			}
			_iter_next_4390630512:;
			++it;
			goto _iter_begin_4390630512;
		}
		_iter_end_4390630512:;
	}
	_24931_ok = false;
	return std::make_tuple(_24931_ok,_24941_falled,_24955_breaked);
}



inline jule::Bool _1c1b18a24_has_ret(jule::Ptr<_1c197a248_Scope> _30816_s) {
	jule::Bool _30910_ok;
	std::tie(_30910_ok,std::ignore,std::ignore) = _1c1b18a24___has_ret(_30816_s);
	return _30910_ok;
}



inline void _1c1b18a24_push_suggestion(_203741197_Log* _31331_log,jule::Str _31342_fmt,jule::Slice<jule::Any> _31355_args) {
	_31331_log->_field_suggestion=_203741197_logf(_31342_fmt,_31355_args);
}



inline jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>> _1c1d617a5_get_result_types(jule::Ptr<_1a8ad0a37_TypeKind>& _2626_result) {
	{
		if (_2626_result == nullptr) {
			_case_begin_4390666768:;
			{
				return nullptr;
			}
		}
		else if (_2626_result->_method_tup() == nullptr) {
			_case_begin_4390666400:;
			{
				return jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_4390665392:;
			{
				return _2626_result->_method_tup()->_field_types;
			}
		}
		_match_end_4390663920:;
	}
}



inline jule::Bool _1c1d617a5_trait_has_reference_receiver(jule::Ptr<_1c196b2a0_Trait>& _3934_t) {
	{
		auto &expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4390668624:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> &_1c1d617a5_f = *it;
			{
				if (_1c1d617a5_f->_field_statically) {
					goto _iter_next_4390668624;
				}
				jule::Ptr<_1c17e2687_Param> _4613_p = _1c1d617a5_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4390668624:;
			++it;
			goto _iter_begin_4390668624;
		}
		_iter_end_4390668624:;
	}
	return false;
}



inline jule::Bool _1c1d617a5_float_assignable(jule::Str _5421_kind,jule::Ptr<_1c1ead281_Data>& _5433_d) {
	jule::Str _559_value = _2037c5759_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1a8d48c4a_check_bit_float(_559_value,static_cast<jule::Int>(_1a8d48c4a_bitsize_of(_5421_kind)));
}



inline jule::Bool _1c1d617a5_sig_assignable(jule::Str _5919_kind,jule::Ptr<_1c1ead281_Data>& _5931_d) {
	jule::F64 _609_min = _1a8d4e338_min(_5919_kind);
	jule::F64 _619_max = _1a8d4e338_max(_5919_kind);
	{
		if (_5931_d->_field_constant->_method_is_f64()) {
			_case_begin_4390680848:;
			{
				jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
				jule::F64 _6614_i;
				jule::F64 _6617_frac;
				std::tie(_6614_i,_6617_frac) = _1da327538_modf(_6513_x);
				if (_6617_frac != 0LL) {
					return false;
				}
				return (_6614_i >= _609_min) && (_6614_i <= _619_max);
			}
		}
		else if (_5931_d->_field_constant->_method_is_u64()) {
			_case_begin_4390680944:;
			{
				jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
				if (_7313_x <= _619_max) {
					return true;
				}
			}
		}
		else if (_5931_d->_field_constant->_method_is_i64()) {
			_case_begin_4390681040:;
			{
				jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
				return (_609_min <= _7913_x) && (_7913_x <= _619_max);
			}
		}
		_match_end_4390680544:;
	}
	return false;
}



inline jule::Bool _1c1d617a5_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_1c1ead281_Data>& _8633_d) {
	jule::F64 _879_max = _1a8d4e338_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1a8e7e6ee_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (_8633_d->_field_constant->_method_is_f64()) {
			_case_begin_4390694320:;
			{
				jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
				if (_9413_x < 0LL) {
					return false;
				}
				jule::F64 _9914_i;
				jule::F64 _9917_frac;
				std::tie(_9914_i,_9917_frac) = _1da327538_modf(_9413_x);
				if (_9917_frac != 0LL) {
					return false;
				}
				return _9914_i <= _879_max;
			}
		}
		else if (_8633_d->_field_constant->_method_is_u64()) {
			_case_begin_4390694416:;
			{
				jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
				if (_10613_x <= _879_max) {
					return true;
				}
			}
		}
		else if (_8633_d->_field_constant->_method_is_i64()) {
			_case_begin_4390694512:;
			{
				jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
				return (0LL <= _11213_x) && (_11213_x <= _879_max);
			}
		}
		_match_end_4390695296:;
	}
	return false;
}



inline jule::Bool _1c1d617a5_int_assignable(jule::Str _11919_kind,jule::Ptr<_1c1ead281_Data>& _11931_d) {
	{
		if (_1a8dc9a45_is_sig_int(_11919_kind)) {
			_case_begin_4390710336:;
			{
				return _1c1d617a5_sig_assignable(_11919_kind,_11931_d);
			}
		}
		else if (_1a8dc9a45_is_unsig_int(_11919_kind)) {
			_case_begin_4390710432:;
			{
				return _1c1d617a5_unsig_assignable(_11919_kind,_11931_d);
			}
		}
		else {
			_case_begin_4390708208:;
			{
				return false;
			}
		}
		_match_end_4390708064:;
	}
}



inline jule::Ptr<_1da7b8e5d_Directive> _1c1ead281_find_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>& _4824_directives,jule::Str _4866_d) {
	{
		auto &expr = _4824_directives;
		auto it = expr.begin();
		_iter_begin_4390712816:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> _1c1ead281_dr = *it;
			{
				if (_1c1ead281_dr->_field_tag._field_kind == _4866_d) {
					return _1c1ead281_dr;
				}
			}
			_iter_next_4390712816:;
			++it;
			goto _iter_begin_4390712816;
		}
		_iter_end_4390712816:;
	}
	return nullptr;
}



inline jule::Any _1c1ead281_find_builtins_import(jule::Str _5725_ident,jule::Ptr<_1c1b398be_ImportInfo> _5737_imp) {
	return _1a8c0ca10_find_package_builtin_def(_5737_imp->_field_link_path,_5725_ident);
}



inline void _1c1ead281_make_struct_lit_alloc(jule::Ptr<_1c1ead281_Data>& _6131_d,jule::Ptr<_1c19727a1_StructLitExprModel>& _6146_lit) {
	_6131_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Sptr>(new( std::nothrow ) _1a8ad0a37_Sptr(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_6146_lit->_field_strct))))));
	_6131_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_AllocStructLitExprModel>(new( std::nothrow ) _1c19727a1_AllocStructLitExprModel(_6146_lit)));
}



inline jule::Ptr<_1c1b58316_Var> _1c1ead281_build_error_var(jule::Ptr<_1c197a248_Scope>& _7325_s,jule::Ptr<_1da7b8e5d_FnCallExpr>& _7341_fc) {
	return jule::new_struct<_1c1b58316_Var>(new( std::nothrow ) _1c1b58316_Var(_7325_s,_7341_fc->_field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::Str(),jule::new_struct<_1a8ad0a37_TypeSymbol>(new( std::nothrow ) _1a8ad0a37_TypeSymbol(jule::Ptr<_1da7b8e5d_TypeDecl>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("any", 3)))))),jule::new_struct<_1c1ead281_Value>(new( std::nothrow ) _1c1ead281_Value(jule::Ptr<_1da7b8e5d_Expr>(),jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data()))),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>(),jule::Ptr<_1c1b58316_IterRelation>(),jule::Slice<jule::Ptr<_1c1b58316_Var>>()));
}



inline jule::Any _1c1ead281_find_builtins_sema(jule::Str _9223_ident,jule::Ptr<_1c1b18a24_Sema> _9239_s) {
	{
		auto &expr = _9239_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4390725168:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1c1ead281_imp = *it;
			{
				if (_1c1ead281_imp->_field_import_all || _1c1ead281_imp->_method_exist_ident(_9223_ident)) {
					jule::Any _9521_def = _1c1ead281_find_builtins_import(_9223_ident,_1c1ead281_imp);
					if (_9521_def != nullptr) {
						return _9521_def;
					}
				}
			}
			_iter_next_4390725168:;
			++it;
			goto _iter_begin_4390725168;
		}
		_iter_end_4390725168:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1c1ead281_is_ok_for_shifting(jule::Ptr<_1c1ead281_Data>& _10428_d) {
	jule::Ptr<_1a8ad0a37_Prim> _1059_prim = _10428_d->_field_kind->_method_prim();
	if ((_1059_prim == nullptr) || (!(_1a8dc9a45_is_int(_1059_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_10428_d->_method_is_const()))) {
		return true;
	}
	{
		if (_10428_d->_field_constant->_method_is_i64()) {
			_case_begin_4390736928:;
			{
				return _10428_d->_field_constant->_method_read_i64() >= 0LL;
			}
		}
		else if (_10428_d->_field_constant->_method_is_u64()) {
			_case_begin_4390737024:;
			{
				return true;
			}
		}
		else {
			_case_begin_4390734960:;
			{
				return false;
			}
		}
		_match_end_4390734736:;
	}
}



inline jule::Bool _1c1ead281_is_instanced_struct(jule::Ptr<_1db4a7e59_StructIns> _12124_s) {
	return _12124_s->_field_decl->_field_generics.len() == _12124_s->_field_generics.len();
}



inline jule::Bool _1c1ead281_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c1ead281_Data>& _12542_d) {
	if (_12542_d->_method_is_const()) {
		return _1c1d617a5_int_assignable(jule::Str("int", 3),_12542_d);
	}
	_1c1d617a5_TypeCompatibilityChecker _12913_tcc = _1c1d617a5_TypeCompatibilityChecker(jule::Ptr<_1c1b18a24_Sema>(),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),_12542_d->_field_kind,_1da81133a_Token());
	return _12913_tcc._method_check();
}



inline void _1c1ead281_normalize_bitsize(jule::Ptr<_1c1ead281_Data>& _13627_d) {
	if ((!(_13627_d->_method_is_const()))) {
		return;
	}
	jule::Str _14113_kind = jule::Str();
	{
		if (_13627_d->_field_constant->_method_is_i64()) {
			_case_begin_4390752000:;
			{
				jule::I64 _14413_x = _13627_d->_field_constant->_method_read_i64();
				_14113_kind=_1a8d48c4a_int_from_bits(static_cast<jule::U64>(_1a8d48c4a_bitsize_of_int(_14413_x)));
			}
		}
		else if (_13627_d->_field_constant->_method_is_u64()) {
			_case_begin_4390752096:;
			{
				jule::U64 _14813_x = _13627_d->_field_constant->_method_read_u64();
				_14113_kind=_1a8d48c4a_uint_from_bits(static_cast<jule::U64>(_1a8d48c4a_bitsize_of_uint(_14813_x)));
			}
		}
		else {
			_case_begin_4390751008:;
			{
				return;
			}
		}
		_match_end_4390750768:;
	}
	if (_13627_d->_field_kind->_method_enm() != nullptr) {
		return;
	}
	_13627_d->_field_kind->_field_kind=_1a8ad0a37_build_prim_type(_14113_kind);
}



inline void _1c1ead281_normalize_type(jule::Ptr<_1c1ead281_Data>& _16324_d) {
	{
		if (_1c1d617a5_int_assignable(jule::Str("int", 3),_16324_d)) {
			_case_begin_4390760896:;
			{
				_16324_d->_field_kind->_field_kind=_1a8ad0a37_build_prim_type(jule::Str("int", 3));
				_16324_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_16324_d->_field_constant->_method_as_f64()));
			}
		}
		else if (_1c1d617a5_int_assignable(jule::Str("uint", 4),_16324_d)) {
			_case_begin_4390761008:;
			{
				_16324_d->_field_kind->_field_kind=_1a8ad0a37_build_prim_type(jule::Str("uint", 4));
				_16324_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_16324_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_4390760384:;
	}
}



inline void _1c1ead281_apply_cast_kind_model(jule::Ptr<_1c1ead281_Data>& _17531_d) {
	_17531_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_CastingExprModel>(new( std::nothrow ) _1c19727a1_CastingExprModel(_17531_d->_field_model,_17531_d->_field_cast_kind,_17531_d->_field_kind)));
}



inline void _1c1ead281_apply_cast_kind(jule::Ptr<_1c1ead281_Data>& _18325_d) {
	if (_18325_d->_field_cast_kind == nullptr) {
		return;
	}
	_1c1ead281_apply_cast_kind_model(_18325_d);
	_18325_d->_field_kind=_18325_d->_field_cast_kind;
	_18325_d->_field_cast_kind=nullptr;
}



inline jule::Ptr<_1c1ead281_Data> _1c1ead281_build_void_data(void) {
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Str _1c1ead281_kind_by_bitsize(jule::Any _20420_expr) {
	{
		auto &_match_expr{ _20420_expr };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_4390776336:;
			{
				jule::F64 _20713_x = _20420_expr.operator jule::F64();
				return _1a8d48c4a_float_from_bits(static_cast<jule::U64>(_1a8d48c4a_bitsize_of_float(_20713_x)));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_4390776528:;
			{
				jule::I64 _21113_x = _20420_expr.operator jule::I64();
				return _1a8d48c4a_int_from_bits(static_cast<jule::U64>(_1a8d48c4a_bitsize_of_int(_21113_x)));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_4390776624:;
			{
				jule::U64 _21513_x = _20420_expr.operator jule::U64();
				return _1a8d48c4a_uint_from_bits(static_cast<jule::U64>(_1a8d48c4a_bitsize_of_uint(_21513_x)));
			}
		}
		else {
			_case_begin_4390771472:;
			{
				return jule::Str();
			}
		}
		_match_end_4390772704:;
	}
}



inline jule::Str _1c1ead281_check_data_for_integer_indexing(jule::Ptr<_1c1ead281_Data>& _22341_d) {
	jule::Str _22353_err_fmt = jule::Str();
	if (_22341_d == nullptr) {
		_22353_err_fmt = jule::Str();
		return _22353_err_fmt;
	}
	{
		if (_22341_d->_field_kind->_method_prim() == nullptr) {
			_case_begin_4390784864:;
			{
				_22353_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
				return _22353_err_fmt;
			}
		}
		else if ((!(_1a8dc9a45_is_int(_22341_d->_field_kind->_method_prim()->_method_to_str())))) {
			_case_begin_4390785424:;
			{
				_22353_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
				return _22353_err_fmt;
			}
		}
		else if (_22341_d->_method_is_const()) {
			_case_begin_4390785520:;
			{
				if (_22341_d->_field_constant->_method_as_f64() < 0LL) {
					_22353_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _22353_err_fmt;
				}
			}
		}
		else if (_22341_d->_field_kind->_method_prim() == nullptr || _22341_d->_method_is_const() || _1a8d48c4a_real_kind_of(_22341_d->_field_kind->_method_prim()->_method_to_str()) != _1a8d48c4a_real_kind_of(jule::Str("int", 3))) {
			_case_begin_4390785616:;
			{
				_22341_d->_field_cast_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3))));
				_1c1ead281_apply_cast_kind(_22341_d);
			}
		}
		_match_end_4390785280:;
	}
	_22353_err_fmt = jule::Str();
	return _22353_err_fmt;
}



inline jule::Bool _1a8ad0a37_can_get_ptr(jule::Ptr<_1c1ead281_Data>& _53821_d) {
	if ((!(_53821_d->_field_lvalue)) || _53821_d->_method_is_const()) {
		return false;
	}
	{
		if ((_53821_d->_field_kind->_method_fnc() != nullptr) || (_53821_d->_field_kind->_method_enm() != nullptr)) {
			_case_begin_4390799040:;
			{
				return false;
			}
		}
		else {
			_case_begin_4390797104:;
			{
				return true;
			}
		}
		_match_end_4390796608:;
	}
}



inline jule::Bool _1a8ad0a37_is_valid_for_sptr_type(jule::Ptr<_1a8ad0a37_TypeKind>& _55332_t) {
	jule::Ptr<_1db4a7e59_StructIns> _55413_s = _55332_t->_method_strct();
	if (((_55413_s != nullptr) && (_55413_s->_field_decl != nullptr)) && _55413_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1a8ad0a37_is_valid_for_ref(jule::Ptr<_1a8ad0a37_TypeKind>& _56226_t) {
	return _56226_t->_method_fnc() == nullptr;
}



inline jule::Bool _1a8ad0a37_is_builtin_str_convertable(jule::Ptr<_1a8ad0a37_TypeKind>& _56536_t) {
	return ((!(_56536_t->_method_void())) && (_56536_t->_method_fnc() == nullptr)) && (_56536_t->_method_tup() == nullptr);
}



inline jule::Str _1a8ad0a37_build_link_path_by_tokens(jule::Slice<_1da81133a_Token>& _56931_tokens) {
	jule::Str _57013_s = _56931_tokens[0LL]._field_kind;
	{
		auto expr = _56931_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4390810176:;
		if (it != expr.end()) {
			_1da81133a_Token &_1a8ad0a37_token = *it;
			{
				_57013_s+=jule::Str("::", 2);
				_57013_s+=_1a8ad0a37_token._field_kind;
			}
			_iter_next_4390810176:;
			++it;
			goto _iter_begin_4390810176;
		}
		_iter_end_4390810176:;
	}
	return _57013_s;
}



inline jule::Ptr<_1a8ad0a37_Prim> _1a8ad0a37_build_prim_type(jule::Str _57820_kind) {
	return jule::new_struct_ptr<_1a8ad0a37_Prim>(new( std::nothrow ) _1a8ad0a37_Prim(_57820_kind));
}



inline jule::Ptr<_1db4a7e59_Struct> _1a8ad0a37_get_struct_from_kind(jule::Ptr<_1a8ad0a37_TypeKind> _58429_k) {
	{
		if (_58429_k == nullptr) {
			_case_begin_4390815216:;
			{
				return nullptr;
			}
		}
		else if (_58429_k->_method_strct() != nullptr) {
			_case_begin_4390815312:;
			{
				return _58429_k->_method_strct()->_field_decl;
			}
		}
		else if (_58429_k->_method_sptr() != nullptr) {
			_case_begin_4390814656:;
			{
				return _1a8ad0a37_get_struct_from_kind(_58429_k->_method_sptr()->_field_elem);
			}
		}
		else if (_58429_k->_method_slc() != nullptr) {
			_case_begin_4390814752:;
			{
				return _1a8ad0a37_get_struct_from_kind(_58429_k->_method_slc()->_field_elem);
			}
		}
		else if (_58429_k->_method_arr() != nullptr) {
			_case_begin_4390814848:;
			{
				return _1a8ad0a37_get_struct_from_kind(_58429_k->_method_arr()->_field_elem);
			}
		}
		else if (_58429_k->_method_ptr() != nullptr) {
			_case_begin_4390813984:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_4390813680:;
			{
				return nullptr;
			}
		}
		_match_end_4390812704:;
	}
}



inline jule::Bool _1a8ad0a37_is_prim(jule::Str _61312_kind) {
	return (((((((((((((((_61312_kind == jule::Str("i8", 2)) || (_61312_kind == jule::Str("i16", 3))) || (_61312_kind == jule::Str("i32", 3))) || (_61312_kind == jule::Str("i64", 3))) || (_61312_kind == jule::Str("u8", 2))) || (_61312_kind == jule::Str("u16", 3))) || (_61312_kind == jule::Str("u32", 3))) || (_61312_kind == jule::Str("u64", 3))) || (_61312_kind == jule::Str("f32", 3))) || (_61312_kind == jule::Str("f64", 3))) || (_61312_kind == jule::Str("int", 3))) || (_61312_kind == jule::Str("uint", 4))) || (_61312_kind == jule::Str("uintptr", 7))) || (_61312_kind == jule::Str("bool", 4))) || (_61312_kind == jule::Str("str", 3))) || (_61312_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ptr<_1c2020e2b_SymbolTable>,jule::Slice<_203741197_Log>> _1da7ae948_build_symbols(jule::Ptr<_1da7635cd_Ast>& _1523_ast,jule::Trait<_1c1b398be_Importer>& _1539_importer,jule::Ptr<_1c18c86d5_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1c18c86d5_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_1c18c86d5_SymbolBuilder>(new( std::nothrow ) _1c18c86d5_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_203741197_Log>(),_1523_ast,jule::Ptr<_1c2020e2b_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb->_field_errors);
}



inline std::tuple<jule::Ptr<_1c1b398be_Package>,jule::Slice<_203741197_Log>> _1da7ae948___analyze_package(jule::Slice<jule::Ptr<_1da7635cd_Ast>>& _2927_files,jule::Trait<_1c1b398be_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_4390841808:;
		if (it != expr.end()) {
			jule::Ptr<_1da7635cd_Ast> _1da7ae948_f = *it;
			{
				jule::Ptr<_1c2020e2b_SymbolTable> _3318_table;
				jule::Slice<_203741197_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1da7ae948_build_symbols(_1da7ae948_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables.push(_3318_table);
			}
			_iter_next_4390841808:;
			++it;
			goto _iter_begin_4390841808;
		}
		_iter_end_4390841808:;
	}
	jule::Ptr<_1c1b18a24_Sema> _4013_sema = jule::new_struct_ptr<_1c1b18a24_Sema>(new( std::nothrow ) _1c1b18a24_Sema(jule::Slice<_203741197_Log>(),jule::Slice<jule::Ptr<_1c2020e2b_SymbolTable>>(),jule::Ptr<_1c2020e2b_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_4013_sema->_field_errors);
	}
	jule::Ptr<_1c1b398be_Package> _4813_pkg = jule::new_struct<_1c1b398be_Package>(new( std::nothrow ) _1c1b398be_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1c1b398be_Package>,jule::Slice<_203741197_Log>> _1da7ae948_analyze_package(jule::Slice<jule::Ptr<_1da7635cd_Ast>> _7228_files,jule::Trait<_1c1b398be_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1c1b398be_Package> _7714_package;
	jule::Slice<_203741197_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1da7ae948___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)> _1a8c0ca10_find_builtin_caller(jule::U8 _7824_c) {
	{
		auto &_match_expr{ _7824_c };
		if (_match_expr == 1LLU) {
			_case_begin_4390867248:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_common);
			}
		}
		else if (_match_expr == 2LLU) {
			_case_begin_4390867376:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_common_mut);
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_4390868256:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_common_plain);
			}
		}
		else if (_match_expr == 4LLU) {
			_case_begin_4390867808:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_out);
			}
		}
		else if (_match_expr == 5LLU) {
			_case_begin_4390867904:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_outln);
			}
		}
		else if (_match_expr == 6LLU) {
			_case_begin_4390867552:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_new);
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_4390867648:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_panic);
			}
		}
		else if (_match_expr == 8LLU) {
			_case_begin_4390868768:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_copy);
			}
		}
		else if (_match_expr == 9LLU) {
			_case_begin_4390868864:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_make);
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_4390868960:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_append);
			}
		}
		else if (_match_expr == 11LLU) {
			_case_begin_4390869056:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_clone);
			}
		}
		else if (_match_expr == 12LLU) {
			_case_begin_4390869152:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_assert);
			}
		}
		else if (_match_expr == 13LLU) {
			_case_begin_4390869248:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_mem_size_of);
			}
		}
		else if (_match_expr == 14LLU) {
			_case_begin_4390869344:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_mem_align_of);
			}
		}
		else if (_match_expr == 15LLU) {
			_case_begin_4390869440:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_jule_integrated_to_str);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_4390869536:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_jule_integrated_inline);
			}
		}
		else if (_match_expr == 17LLU) {
			_case_begin_4390869648:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_debug_out);
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_4390869760:;
			{
				return jule::Fn<jule::Ptr<_1c1ead281_Data>(jule::Ptr<_1c1ead281_Eval>&,jule::Ptr<_1da7b8e5d_FnCallExpr>&,jule::Ptr<_1c1ead281_Data>&)>(_1a8c0ca10_builtin_caller_std_debug_outln);
			}
		}
		else {
			_case_begin_4390865488:;
			{
				jule::panic(jule::Str("builtin caller not exist", 24) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/jule/sema/builtin.jule:135:9"));;
			}
		}
		_match_end_4390865840:;
	}
}



inline jule::Ptr<_1c17e2687_FnIns> _1a8c0ca10_find_builtin_fn(jule::Str _13920_ident) {
	{
		auto &_match_expr{ _13920_ident };
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_4390886368:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),4LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_4390886464:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),5LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_4390885808:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),6LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_4390885904:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),7LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_4390886000:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),9LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_4390881520:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),10LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_4390881616:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),8LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_4390881712:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),11LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_4390881808:;
			{
				return jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),12LLU,jule::Bool()));
			}
		}
		else {
			_case_begin_4390885312:;
			{
				return nullptr;
			}
		}
		_match_end_4390885616:;
	}
}



inline jule::Ptr<_1a8ad0a37_TypeAlias> _1a8c0ca10_find_builtin_type_alias(jule::Str _15428_ident) {
	{
		auto &_match_expr{ _15428_ident };
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_4390895760:;
			{
				return _1a8c0ca10_BUILTIN_TYPE_ALIAS_BYTE;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_4390897408:;
			{
				return _1a8c0ca10_BUILTIN_TYPE_ALIAS_RUNE;
			}
		}
		else {
			_case_begin_4390887232:;
			{
				return nullptr;
			}
		}
		_match_end_4390886640:;
	}
}



inline jule::Ptr<_1c196b2a0_Trait> _1a8c0ca10_find_builtin_trait(jule::Str _16223_ident) {
	{
		auto &_match_expr{ _16223_ident };
		if (_match_expr == jule::Str("Dispose", 7)) {
			_case_begin_4390900208:;
			{
				return _1a8c0ca10_BUILTIN_TRAIT_DISPOSE;
			}
		}
		else {
			_case_begin_4390899056:;
			{
				return nullptr;
			}
		}
		_match_end_4390898416:;
	}
}



inline jule::Any _1a8c0ca10_find_builtin_def(jule::Str _16921_ident) {
	jule::Ptr<_1c17e2687_FnIns> _17013_f = _1a8c0ca10_find_builtin_fn(_16921_ident);
	if (_17013_f != nullptr) {
		return jule::Any(_17013_f);
	}
	jule::Ptr<_1a8ad0a37_TypeAlias> _17513_ta = _1a8c0ca10_find_builtin_type_alias(_16921_ident);
	if (_17513_ta != nullptr) {
		return jule::Any(_17513_ta);
	}
	jule::Ptr<_1c196b2a0_Trait> _18013_t = _1a8c0ca10_find_builtin_trait(_16921_ident);
	if (_18013_t != nullptr) {
		return jule::Any(_18013_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1a8c0ca10_find_builtin_def_std_debug(jule::Str _18831_ident) {
	{
		auto &_match_expr{ _18831_ident };
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_4390908720:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),17LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_4390908352:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),18LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_4390902208:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_4390906736:;
	}
}



inline jule::Any _1a8c0ca10_find_builtin_def_std_mem(jule::Str _19629_ident) {
	{
		auto &_match_expr{ _19629_ident };
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_4390913056:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),13LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_4390912688:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),14LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_4390912160:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_4390910976:;
	}
}



inline jule::Any _1a8c0ca10_find_builtin_def_std_jule_integrated(jule::Str _20441_ident) {
	{
		auto &_match_expr{ _20441_ident };
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_4390917328:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),15LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("inline", 6)) {
			_case_begin_4390916960:;
			{
				return jule::Any(jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>(),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),16LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_4390912784:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_4390916432:;
	}
}



inline jule::Any _1a8c0ca10_find_package_builtin_def(jule::Str _21229_link_path,jule::Str _21245_ident) {
	{
		auto &_match_expr{ _21229_link_path };
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_4390922128:;
			{
				return _1a8c0ca10_find_builtin_def_std_debug(_21245_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_4390921760:;
			{
				return _1a8c0ca10_find_builtin_def_std_mem(_21245_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_4390921856:;
			{
				return _1a8c0ca10_find_builtin_def_std_jule_integrated(_21245_ident);
			}
		}
		else {
			_case_begin_4390920704:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_4390916560:;
	}
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common_plain(jule::Ptr<_1c1ead281_Eval>& _22137_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _22152_fc,jule::Ptr<_1c1ead281_Data>& _22174_d) {
	jule::Ptr<_1c17e2687_FnIns> _22213_f = _22174_d->_field_kind->_method_fnc();
	_1c1d617a5_FnCallArgChecker _22413_fcac = _1c1d617a5_FnCallArgChecker(_22137_e,_22152_fc->_field_args,_22152_fc->_field_token,_22213_f,false,jule::Slice<jule::Any>());
	_22413_fcac._method_check();
	jule::Ptr<_1c19727a1_FnCallExprModel> _23313_model = jule::new_struct<_1c19727a1_FnCallExprModel>(new( std::nothrow ) _1c19727a1_FnCallExprModel(_1da81133a_Token(),_22213_f,jule::Bool(),_22174_d->_field_model,_22413_fcac._field_arg_models,jule::Ptr<_1c197a248_Scope>(),jule::Bool()));
	if (_22213_f->_field_result == nullptr) {
		_22174_d=_1c1ead281_build_void_data();
	} else {
		_22174_d=jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(_22213_f->_field_result,jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
	}
	_22174_d->_field_model=jule::Any(_23313_model);
	return _22174_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common(jule::Ptr<_1c1ead281_Eval>& _25131_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _25146_fc,jule::Ptr<_1c1ead281_Data>& _25168_d) {
	if (_25146_fc->_field_generics.len() > 0LL) {
		_25131_e->_method_push_err(_25146_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1a8c0ca10_builtin_caller_common_plain(_25131_e,_25146_fc,_25168_d);
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_common_mut(jule::Ptr<_1c1ead281_Eval>& _25935_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _25950_fc,jule::Ptr<_1c1ead281_Data>& _25972_d) {
	if ((!(_25972_d->_field_mutable))) {
		_25935_e->_method_push_err(_25950_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	return _1a8c0ca10_builtin_caller_common(_25935_e,_25950_fc,_25972_d);
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_error(jule::Ptr<_1c1ead281_Eval>& _26630_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _26645_fc) {
	if (_26645_fc->_field_generics.len() > 0LL) {
		_26630_e->_method_push_err(_26645_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_26645_fc->_field_args.len() < 1LL) {
		_26630_e->_method_push_err(_26645_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if (_26645_fc->_field_args.len() > 1LL) {
		_26630_e->_method_push_err(_26645_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _27713_expr = _26630_e->_method_eval_expr(_26645_fc->_field_args[0LL]);
	if (_27713_expr == nullptr) {
		return nullptr;
	}
	if (_27713_expr->_method_is_nil()) {
		_26630_e->_method_push_err(_26645_fc->_field_args[0LL]->_field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _28613_d = _1c1ead281_build_void_data();
	_28613_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinErrorCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinErrorCallExprModel(jule::Ptr<_1c17e2687_FnIns>(),_27713_expr->_field_model)));
	return _28613_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_out(jule::Ptr<_1c1ead281_Eval>& _29428_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _29443_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_29443_fc->_field_generics.len() > 0LL) {
		_29428_e->_method_push_err(_29443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_29443_fc->_field_args.len() < 1LL) {
		_29428_e->_method_push_err(_29443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if (_29443_fc->_field_args.len() > 1LL) {
		_29428_e->_method_push_err(_29443_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _30613_expr = _29428_e->_method_eval_expr(_29443_fc->_field_args[0LL]);
	if (_30613_expr == nullptr) {
		return nullptr;
	}
	if ((!(_1a8ad0a37_is_builtin_str_convertable(_30613_expr->_field_kind)))) {
		_29428_e->_method_push_err(_29443_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _31613_d = _1c1ead281_build_void_data();
	_31613_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinOutCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinOutCallExprModel(_30613_expr->_field_model,jule::Bool())));
	return _31613_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_outln(jule::Ptr<_1c1ead281_Eval>& _32130_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _32145_fc,jule::Ptr<_1c1ead281_Data>& _32167_d) {
	_32167_d=_1a8c0ca10_builtin_caller_out(_32130_e,_32145_fc,_32167_d);
	if (_32167_d == nullptr) {
		return nullptr;
	}
	_32167_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinOutlnCallExprModel(_32167_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>()->_field_expr,jule::Bool())));
	return _32167_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_new(jule::Ptr<_1c1ead281_Eval>& _33328_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _33343_fc,jule::Ptr<_1c1ead281_Data>& _33365_d) {
	if (_33343_fc->_field_generics.len() > 0LL) {
		_33328_e->_method_push_err(_33343_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_33343_fc->_field_args.len() < 1LL) {
		_33328_e->_method_push_err(_33343_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if (_33343_fc->_field_args.len() > 2LL) {
		_33328_e->_method_push_err(_33343_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _34513_t = _33328_e->_method_eval_expr_kind(_33343_fc->_field_args[0LL]->_field_kind);
	if (_34513_t == nullptr) {
		return nullptr;
	}
	if ((!(_34513_t->_field_decl))) {
		_33328_e->_method_push_err(_33343_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1a8ad0a37_is_valid_for_sptr_type(_34513_t->_field_kind)))) {
		jule::Ptr<_1db4a7e59_StructIns> _35617_s = _34513_t->_field_kind->_method_strct();
		if (((_35617_s != nullptr) && (_35617_s->_field_decl != nullptr)) && _35617_s->_field_decl->_field_cpp_linked) {
			_33328_e->_method_push_err(_33343_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_33365_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a8ad0a37_Sptr>(new( std::nothrow ) _1a8ad0a37_Sptr(_34513_t->_field_kind))));
	if (_33343_fc->_field_args.len() == 2LL) {
		jule::Ptr<_1a8ad0a37_TypeKind> _36617_old = _33328_e->_field_prefix;
		_33328_e->_field_prefix=_34513_t->_field_kind;
		jule::Ptr<_1c1ead281_Data> _36917_init = _33328_e->_method_eval_expr(_33343_fc->_field_args[1LL]);
		_33328_e->_field_prefix=_36617_old;
		if (_36917_init != nullptr) {
			_1da81133a_Token _37421_token = _33343_fc->_field_args[1LL]->_field_token;
			
			_33328_e->_field_s->_method_check_validity_for_init_expr((!(_33328_e->_field_immutable)),false,_34513_t->_field_kind,_36917_init,_37421_token);
			_33328_e->_field_s->_method_check_assign_type(false,_34513_t->_field_kind,_36917_init,_37421_token);
			_33365_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinNewCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinNewCallExprModel(_34513_t->_field_kind,_36917_init->_field_model)));
		}
	} else {
		_33365_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinNewCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinNewCallExprModel(_34513_t->_field_kind,jule::Any())));
	}
	return _33365_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_panic(jule::Ptr<_1c1ead281_Eval>& _39230_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _39245_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_39245_fc->_field_generics.len() > 0LL) {
		_39230_e->_method_push_err(_39245_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_39245_fc->_field_args.len() < 1LL) {
		_39230_e->_method_push_err(_39245_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if (_39245_fc->_field_args.len() > 1LL) {
		_39230_e->_method_push_err(_39245_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _40413_expr = _39230_e->_method_eval_expr(_39245_fc->_field_args[0LL]);
	if (_40413_expr == nullptr) {
		return nullptr;
	}
	if ((_40413_expr->_field_kind->_method_prim() == nullptr) || (!(_40413_expr->_field_kind->_method_prim()->_method_is_str()))) {
		_39230_e->_method_push_err(_39245_fc->_field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _41313_d = _1c1ead281_build_void_data();
	_41313_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinPanicCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinPanicCallExprModel(_39245_fc->_field_token,_40413_expr->_field_model)));
	return _41313_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_make(jule::Ptr<_1c1ead281_Eval>& _42129_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _42144_fc,jule::Ptr<_1c1ead281_Data>& _42166_d) {
	if (_42144_fc->_field_generics.len() > 0LL) {
		_42129_e->_method_push_err(_42144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_42144_fc->_field_args.len() < 2LL) {
		if (_42144_fc->_field_args.len() == 1LL) {
			_42129_e->_method_push_err(_42144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_42129_e->_method_push_err(_42144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if (_42144_fc->_field_args.len() > 3LL) {
		_42129_e->_method_push_err(_42144_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _43713_t = _42129_e->_method_eval_expr_kind(_42144_fc->_field_args[0LL]->_field_kind);
	if (_43713_t == nullptr) {
		return nullptr;
	}
	if ((!(_43713_t->_field_decl)) || (_43713_t->_field_kind->_method_slc() == nullptr)) {
		_42129_e->_method_push_err(_42144_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_42166_d->_field_kind=_43713_t->_field_kind;
	jule::Ptr<_1c1ead281_Data> _44913_len = _42129_e->_field_s->_method_evalp(_42129_e->_field_lookup,_43713_t->_field_kind)->_method_eval_expr(_42144_fc->_field_args[1LL]);
	if (_44913_len == nullptr) {
		return _42166_d;
	}
	_42129_e->_method_check_integer_indexing_by_data(_44913_len,_42144_fc->_field_args[1LL]->_field_token);
	if (_42144_fc->_field_args.len() == 3LL) {
		jule::Ptr<_1c1ead281_Data> _45717_cap = _42129_e->_field_s->_method_evalp(_42129_e->_field_lookup,_43713_t->_field_kind)->_method_eval_expr(_42144_fc->_field_args[2LL]);
		if (_45717_cap == nullptr) {
			return _42166_d;
		}
		_42129_e->_method_check_integer_indexing_by_data(_45717_cap,_42144_fc->_field_args[2LL]->_field_token);
		_42166_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinMakeCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinMakeCallExprModel(_43713_t->_field_kind,_44913_len->_field_model,_45717_cap->_field_model)));
	} else {
		_42166_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinMakeCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinMakeCallExprModel(_43713_t->_field_kind,_44913_len->_field_model,jule::Any())));
	}
	return _42166_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_append(jule::Ptr<_1c1ead281_Eval>& _47831_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _47846_fc,jule::Ptr<_1c1ead281_Data>& _47868_d) {
	if (_47846_fc->_field_generics.len() > 0LL) {
		_47831_e->_method_push_err(_47846_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_47846_fc->_field_args.len() < 2LL) {
		if (_47846_fc->_field_args.len() == 1LL) {
			_47831_e->_method_push_err(_47846_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_47831_e->_method_push_err(_47846_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _49113_t = _47831_e->_method_eval_expr(_47846_fc->_field_args[0LL]);
	if (_49113_t == nullptr) {
		return nullptr;
	}
	if (_49113_t->_field_kind->_method_slc() == nullptr) {
		_47831_e->_method_push_err(_47846_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c17e2687_FnIns> _50113_f = jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str())),_49113_t->_field_kind)),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),true,true,jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str())),_49113_t->_field_kind->_method_slc()->_field_elem))}),_49113_t->_field_kind,jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),3LLU,jule::Bool()));
	_47868_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_50113_f));
	_47868_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_CommonIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonIdentExprModel(jule::Str("append", 6))));
	_47868_d=_1a8c0ca10_builtin_caller_common_plain(_47831_e,_47846_fc,_47868_d);
	if (_47868_d != nullptr) {
		jule::Ptr<_1c19727a1_FnCallExprModel> _52517_model = _47868_d->_field_model.operator jule::Ptr<_1c19727a1_FnCallExprModel>();
		_47868_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinAppendCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinAppendCallExprModel(_52517_model->_field_args[0LL],_52517_model->_field_args[1LL])));
	}
	return _47868_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_copy(jule::Ptr<_1c1ead281_Eval>& _53429_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _53444_fc,jule::Ptr<_1c1ead281_Data>& _53466_d) {
	if (_53444_fc->_field_generics.len() > 0LL) {
		_53429_e->_method_push_err(_53444_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_53444_fc->_field_args.len() < 2LL) {
		if (_53444_fc->_field_args.len() == 1LL) {
			_53429_e->_method_push_err(_53444_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_53429_e->_method_push_err(_53444_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if (_53444_fc->_field_args.len() > 2LL) {
		_53429_e->_method_push_err(_53444_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _55013_t = _53429_e->_method_eval_expr(_53444_fc->_field_args[0LL]);
	if (_55013_t == nullptr) {
		return nullptr;
	}
	if (_55013_t->_field_kind->_method_slc() == nullptr) {
		_53429_e->_method_push_err(_53444_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_55013_t->_field_mutable))) {
		_53429_e->_method_push_err(_53444_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c17e2687_FnIns> _56413_f = jule::new_struct_ptr<_1c17e2687_FnIns>(new( std::nothrow ) _1c17e2687_FnIns(jule::Ptr<_1db4a7e59_StructIns>(),jule::Ptr<_1c17e2687_Fn>(),jule::Slice<jule::Ptr<_1a8ad0a37_TypeKind>>(),jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>({jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param()),_55013_t->_field_kind)),jule::new_struct<_1c17e2687_ParamIns>(new( std::nothrow ) _1c17e2687_ParamIns(jule::new_struct_ptr<_1c17e2687_Param>(new( std::nothrow ) _1c17e2687_Param(_1da81133a_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a8ad0a37_TypeSymbol>(),jule::Str())),_55013_t->_field_kind))}),jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1c197a248_Scope>(),jule::Ptr<_1c18c86d5_ReferenceStack>(),jule::Bool(),jule::Ptr<_1c18c86d5_ReferenceStack>(),3LLU,jule::Bool()));
	_53466_d->_field_kind=jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_56413_f));
	_53466_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_CommonIdentExprModel>(new( std::nothrow ) _1c19727a1_CommonIdentExprModel(jule::Str("copy", 4))));
	_53466_d=_1a8c0ca10_builtin_caller_common_plain(_53429_e,_53444_fc,_53466_d);
	return _53466_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_clone(jule::Ptr<_1c1ead281_Eval>& _58830_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _58845_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_58845_fc->_field_generics.len() > 0LL) {
		_58830_e->_method_push_err(_58845_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_58845_fc->_field_args.len() < 1LL) {
		_58830_e->_method_push_err(_58845_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_58845_fc->_field_args.len() > 1LL) {
		_58830_e->_method_push_err(_58845_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _60113_d = _58830_e->_method_eval_expr_kind(_58845_fc->_field_args[0LL]->_field_kind);
	if (_60113_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_1a8ad0a37_TypeKind>)> _6069_check_kind = jule::Fn<void(jule::Ptr<_1a8ad0a37_TypeKind>)>([=](jule::Ptr<_1a8ad0a37_TypeKind> _60629_k) mutable -> void {
		{
			if (_60629_k->_method_slc() != nullptr) {
				_case_begin_4391132112:;
				{
					if ((!(_60629_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60629_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_60629_k->_method_map() != nullptr) {
				_case_begin_4391132208:;
				{
					jule::Ptr<_1a8ad0a37_Map> _61717_m = _60629_k->_method_map();
					if ((!(_61717_m->_field_key->_method_supports_cloning())) || (!(_61717_m->_field_val->_method_supports_cloning()))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60629_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_60629_k->_method_arr() != nullptr) {
				_case_begin_4391132304:;
				{
					if ((!(_60629_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60629_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_60629_k->_method_sptr() != nullptr) {
				_case_begin_4391132400:;
				{
					if ((!(_60629_k->_method_sptr()->_field_elem->_method_supports_cloning()))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60629_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_60629_k->_method_strct() != nullptr) {
				_case_begin_4391132608:;
				{
					jule::Ptr<_1db4a7e59_StructIns> _64217_s = _60113_d->_field_kind->_method_strct();
					if ((!(_64217_s->_field_mutable))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_60113_d->_field_kind->_method_to_str())}));
						}
					}
					if (((_64217_s->_field_decl == nullptr) || _64217_s->_field_decl->_field_cpp_linked) || (!(_64217_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
						{
							_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_60113_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
						}
					}
				}
			}
			else {
				_case_begin_4391131808:;
				{
					{
						_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_60113_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_4391131632:;
		}
	});
	{
		if ((!(_60113_d->_field_lvalue))) {
			_case_begin_4391159360:;
			{
				_58830_e->_method_push_err(_58845_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>());
			}
		}
		else if ((!(_60113_d->_field_kind->_method_supports_cloning()))) {
			_case_begin_4391157216:;
			{
				_6069_check_kind(_60113_d->_field_kind);
			}
		}
		_match_end_4391159280:;
	}
	_60113_d->_field_mutable=true;
	_60113_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinCloneCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinCloneCallExprModel(_60113_d->_field_model)));
	return _60113_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_assert(jule::Ptr<_1c1ead281_Eval>& _67931_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _67946_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_67946_fc->_field_generics.len() > 0LL) {
		_67931_e->_method_push_err(_67946_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_67946_fc->_field_args.len() < 1LL) {
		_67931_e->_method_push_err(_67946_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_67946_fc->_field_args.len() > 1LL) {
		_67931_e->_method_push_err(_67946_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _69113_expr = _67931_e->_method_eval_expr(_67946_fc->_field_args[0LL]);
	if (_69113_expr == nullptr) {
		return nullptr;
	}
	if ((_69113_expr->_field_kind->_method_prim() == nullptr) || (!(_69113_expr->_field_kind->_method_prim()->_method_is_bool()))) {
		_67931_e->_method_push_err(_67946_fc->_field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _70013_d = _1c1ead281_build_void_data();
	_70013_d->_field_model=jule::Any(jule::new_struct<_1c19727a1_BuiltinAssertCallExprModel>(new( std::nothrow ) _1c19727a1_BuiltinAssertCallExprModel(_67946_fc->_field_token,_69113_expr->_field_model)));
	return _70013_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_mem_size_of(jule::Ptr<_1c1ead281_Eval>& _70840_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _70855_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_70855_fc->_field_generics.len() > 0LL) {
		_70840_e->_method_push_err(_70855_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _71213_result = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
	if (_70855_fc->_field_args.len() < 1LL) {
		_70840_e->_method_push_err(_70855_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _71213_result;
	}
	if (_70855_fc->_field_args.len() > 1LL) {
		_70840_e->_method_push_err(_70855_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _72413_d = _70840_e->_method_eval_expr_kind(_70855_fc->_field_args[0LL]->_field_kind);
	if (_72413_d == nullptr) {
		return _71213_result;
	}
	_71213_result->_field_model=jule::Any(jule::new_struct<_1c19727a1_SizeofExprModel>(new( std::nothrow ) _1c19727a1_SizeofExprModel(_72413_d->_field_model)));
	return _71213_result;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_mem_align_of(jule::Ptr<_1c1ead281_Eval>& _73341_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _73356_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_73356_fc->_field_generics.len() > 0LL) {
		_73341_e->_method_push_err(_73356_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _73713_result = jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
	if (_73356_fc->_field_args.len() < 1LL) {
		_73341_e->_method_push_err(_73356_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _73713_result;
	}
	if (_73356_fc->_field_args.len() > 1LL) {
		_73341_e->_method_push_err(_73356_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _74913_d = _73341_e->_method_eval_expr_kind(_73356_fc->_field_args[0LL]->_field_kind);
	if (_74913_d == nullptr) {
		return _73713_result;
	}
	_73713_result->_field_model=jule::Any(jule::new_struct<_1c19727a1_AlignofExprModel>(new( std::nothrow ) _1c19727a1_AlignofExprModel(_74913_d->_field_model)));
	return _73713_result;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c1ead281_Eval>& _75851_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _75866_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if (_75866_fc->_field_generics.len() > 0LL) {
		_75851_e->_method_push_err(_75866_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_75866_fc->_field_args.len() < 1LL) {
		_75851_e->_method_push_err(_75866_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_75866_fc->_field_args.len() > 1LL) {
		_75851_e->_method_push_err(_75866_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _77113_d = _75851_e->_method_eval_expr_kind(_75866_fc->_field_args[0LL]->_field_kind);
	if (_77113_d == nullptr) {
		return nullptr;
	}
	if ((!(_1a8ad0a37_is_builtin_str_convertable(_77113_d->_field_kind)))) {
		_75851_e->_method_push_err(_75866_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1c1ead281_Data>(new( std::nothrow ) _1c1ead281_Data(jule::new_struct_ptr<_1a8ad0a37_TypeKind>(new( std::nothrow ) _1a8ad0a37_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a8ad0a37_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1a8ad0a37_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1c19727a1_IntegratedToStrExprModel>(new( std::nothrow ) _1c19727a1_IntegratedToStrExprModel(_77113_d->_field_model))),jule::Bool(),jule::Ptr<_1a8d46165_Const>()));
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_jule_integrated_inline(jule::Ptr<_1c1ead281_Eval>& _78951_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _78966_fc,jule::Ptr<_1c1ead281_Data>& ) {
	if ((!(_78951_e->_method_is_unsafe()))) {
		_78951_e->_method_push_err(_78966_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if (_78966_fc->_field_args.len() < 1LL) {
		_78951_e->_method_push_err(_78966_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	if (_78966_fc->_field_args.len() > 1LL) {
		_78951_e->_method_push_err(_78966_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1c1ead281_Data> _80213_d = _78951_e->_method_eval_expr(_78966_fc->_field_args[0LL]);
	if (_80213_d == nullptr) {
		return nullptr;
	}
	if ((_80213_d->_field_kind->_method_prim() == nullptr) || (!(_80213_d->_field_kind->_method_prim()->_method_is_str()))) {
		_78951_e->_method_push_err(_78966_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_80213_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	if ((!(_80213_d->_method_is_const())) || (!(_80213_d->_field_constant->_method_is_str()))) {
		_78951_e->_method_push_err(_78966_fc->_field_args[0LL]->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1c1ead281_Data> _81713_r = _1c1ead281_build_void_data();
	if (_78966_fc->_field_generics.len() != 0LL) {
		if ((!(_78951_e->_field_s->_method_check_generic_quantity(1LL,static_cast<jule::I64>(_78966_fc->_field_generics.len()),_78966_fc->_field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1a8ad0a37_TypeSymbol> _82317_k = _1c18c86d5_build_type(_78966_fc->_field_generics[0LL]);
		if ((!(_78951_e->_field_s->_method_check_type(_82317_k,_78951_e->_field_lookup)))) {
			return nullptr;
		}
		_81713_r->_field_kind=_82317_k->_field_kind;
	}
	_81713_r->_field_model=jule::Any(jule::new_struct<_1c19727a1_BackendEmitExprModel>(new( std::nothrow ) _1c19727a1_BackendEmitExprModel(_80213_d->_field_constant->_method_read_str())));
	return _81713_r;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_debug_out(jule::Ptr<_1c1ead281_Eval>& _83638_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _83653_fc,jule::Ptr<_1c1ead281_Data>& _83675_d) {
	_83675_d=_1a8c0ca10_builtin_caller_out(_83638_e,_83653_fc,_83675_d);
	if (_83675_d == nullptr) {
		return nullptr;
	}
	_83675_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>()->_field_debug=true;
	return _83675_d;
}



inline jule::Ptr<_1c1ead281_Data> _1a8c0ca10_builtin_caller_std_debug_outln(jule::Ptr<_1c1ead281_Eval>& _84640_e,jule::Ptr<_1da7b8e5d_FnCallExpr>& _84655_fc,jule::Ptr<_1c1ead281_Data>& _84677_d) {
	_84677_d=_1a8c0ca10_builtin_caller_outln(_84640_e,_84655_fc,_84677_d);
	if (_84677_d == nullptr) {
		return nullptr;
	}
	_84677_d->_field_model.operator jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel>()->_field_debug=true;
	return _84677_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1da7590b8_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto &_match_expr{ _1013_arg };
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_4396882736:;
			{
				_1025_ok=_2052120b7_is_windows(_2037a1d84_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_4396882832:;
			{
				_1025_ok=_2052120b7_is_darwin(_2037a1d84_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_4396881632:;
			{
				_1025_ok=_2052120b7_is_linux(_2037a1d84_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_4396881728:;
			{
				_1025_ok=_2052120b7_is_unix(_2037a1d84_OS);
			}
		}
		else {
			_case_begin_4396881040:;
			{
				_1025_ok=true;
				_1035_exist=false;
			}
		}
		_match_end_4396880592:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1da7590b8_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto &_match_expr{ _2715_arg };
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_4396890208:;
			{
				_2727_ok=_2052120b7_is_i386(_2037a1d84_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_4396890304:;
			{
				_2727_ok=_2052120b7_is_amd64(_2037a1d84_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_4396889104:;
			{
				_2727_ok=_2052120b7_is_arm64(_2037a1d84_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_4396889200:;
			{
				_2727_ok=_2052120b7_is_64bit(_2037a1d84_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_4396889296:;
			{
				_2727_ok=_2052120b7_is_32bit(_2037a1d84_ARCH);
			}
		}
		else {
			_case_begin_4396888512:;
			{
				_2727_ok=true;
				_2737_exist=false;
			}
		}
		_match_end_4396888064:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _1da7590b8_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_20525e312_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _20525e312_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1da7590b8_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1da7590b8_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1da7590b8_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1da7590b8_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1da7590b8_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1da7590b8_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1da7590b8_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline void _1da78aaab_set_os_flags(void) {
	{
		auto &_match_expr{ _2037a1d84_OS };
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_4396918176:;
			{
				_1da78aaab_FLAGS.push(jule::Str("windows", 7));
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_4396915184:;
			{
				_1da78aaab_FLAGS.push(jule::Str("linux", 5));
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_4396915280:;
			{
				_1da78aaab_FLAGS.push(jule::Str("darwin", 6));
			}
		}
		_match_end_4396914512:;
	}
	if (_2052120b7_is_unix(_2037a1d84_OS)) {
		_1da78aaab_FLAGS.push(jule::Str("unix", 4));
	}
}



inline void _1da78aaab_set_arch_flags(void) {
	{
		auto &_match_expr{ _2037a1d84_ARCH };
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_4396924112:;
			{
				_1da78aaab_FLAGS.push(jule::Str("i386", 4));
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_4396922896:;
			{
				_1da78aaab_FLAGS.push(jule::Str("amd64", 5));
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_4396922992:;
			{
				_1da78aaab_FLAGS.push(jule::Str("arm64", 5));
			}
		}
		_match_end_4396924032:;
	}
	if (_2052120b7_is_64bit(_2037a1d84_ARCH)) {
		_1da78aaab_FLAGS.push(jule::Str("x64", 3));
	}
	if (_2052120b7_is_32bit(_2037a1d84_ARCH)) {
		_1da78aaab_FLAGS.push(jule::Str("x32", 3));
	}
}



inline void _1da78aaab_init_flags(void) {
	_1da78aaab_set_os_flags();
	_1da78aaab_set_arch_flags();
	if (_1d9d89b4a_PRODUCTION) {
		_1da78aaab_FLAGS.push(jule::Str("production", 10));
	}
}



inline void _1da7889cc_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_2038538d6_exit(1LL);
}



inline jule::Slice<jule::U8> _1da7889cc_read_buff(jule::Str _3014_path) {
	return ({
		auto except = _1db3ddeb1_File::_static_method_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			_1da7889cc_exit_err(jule::Str("error: file cannot read", 23));
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _203741197_Log _1da7889cc_flat_compiler_err(jule::Str _3922_text) {
	return _203741197_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_3922_text,jule::Str(),jule::Str());
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>> _1da7889cc_read_package_dirents(jule::Str _4725_path) {
	jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>> _4813_dirents = ({
		auto except = _1db3db7e9_Directory::_static_method_read(_4725_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>>(jule::Str("connot read package directory: ", 31) + _4725_path);
			return jule::Exceptional<jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>>(jule::Str("connot read package directory: ", 31) + _4725_path);
		} jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>>();});
	});
	jule::Slice<jule::Ptr<_1db3db7e9_DirEntry>> _5113_passed_dirents = nullptr;
	{
		auto &expr = _4813_dirents;
		auto it = expr.begin();
		_iter_begin_4396939424:;
		if (it != expr.end()) {
			jule::Ptr<_1db3db7e9_DirEntry> _1da7889cc_dirent = *it;
			{
				jule::Str _5313_name = _1da7889cc_dirent->_field_name;
				if (_1da7889cc_dirent->_field_stat->_method_is_dir() || (!(_5313_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4396939424;
				}
				_5113_passed_dirents.push(_1da7889cc_dirent);
			}
			_iter_next_4396939424:;
			++it;
			goto _iter_begin_4396939424;
		}
		_iter_end_4396939424:;
	}
	return jule::Exceptional(jule::Any(),_5113_passed_dirents);
}



inline std::tuple<jule::Bool,jule::Slice<_203741197_Log>> _1da7889cc_is_pass_build_directives(jule::Ptr<_1da7635cd_Ast>& _6734_file) {
	{
		auto &expr = _6734_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4396947456:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> _1da7889cc_td = *it;
			{
				if (_1da7889cc_td->_field_tag._field_kind != jule::Str("build", 5)) {
					goto _iter_next_4396947456;
				}
				_1da76219d_DirectiveEval _7317_de = _1da76219d_DirectiveEval(jule::Slice<_203741197_Log>(),_1da7889cc_td);
				jule::Bool _7613_result = _7317_de._method_eval();
				if (_7317_de._field_logs.len() > 0LL) {
					return std::make_tuple(false,_7317_de._field_logs);
				}
				if ((!(_7613_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_4396947456:;
			++it;
			goto _iter_begin_4396947456;
		}
		_iter_end_4396947456:;
	}
	return std::make_tuple(true,nullptr);
}



inline void _1da73e9b6_push_passes(jule::Ptr<_1c1b398be_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto &expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4397064096:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1da73e9b6_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1da73e9b6_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_4397066192:;
					if (it != expr.end()) {
						_1c18c86d5_Pass &_1da73e9b6_pass = *it;
						{
							if (_1da73e9b6_pass._field_text == jule::Str()) {
								goto _iter_next_4397066192;
							}
							{
								auto &expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_4397068512:;
								if (it != expr.end()) {
									jule::Str &_1da73e9b6_cpass = *it;
									{
										if (_1da73e9b6_cpass == _1da73e9b6_pass._field_text) {
											goto _iter_next_4397066192;
										}
									}
									_iter_next_4397068512:;
									++it;
									goto _iter_begin_4397068512;
								}
								_iter_end_4397068512:;
							}
							_11345_passes.push(_1da73e9b6_pass._field_text);
						}
						_iter_next_4397066192:;
						++it;
						goto _iter_begin_4397066192;
					}
					_iter_end_4397066192:;
				}
			}
			_iter_next_4397064096:;
			++it;
			goto _iter_begin_4397064096;
		}
		_iter_end_4397064096:;
	}
}



inline jule::Slice<jule::Str> _1da73e9b6_get_all_unique_passes(jule::Ptr<_1c1b398be_Package>& _13031_pkg,jule::Slice<jule::Ptr<_1c1b398be_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1da73e9b6_push_passes(_13031_pkg,_13113_passes);
	{
		auto &expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_4397073392:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1da73e9b6_u = *it;
			{
				if ((!(_1da73e9b6_u->_field_cpp_linked))) {
					_1da73e9b6_push_passes(_1da73e9b6_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4397073392:;
			++it;
			goto _iter_begin_4397073392;
		}
		_iter_end_4397073392:;
	}
	return _13113_passes;
}



inline jule::Bool _1d9d8a321_is_exist(jule::Slice<jule::Any> _3013_arr,jule::Any _3025_t) {
	{
		auto &expr = _3013_arr;
		auto it = expr.begin();
		_iter_begin_4397204464:;
		if (it != expr.end()) {
			jule::Any &_1d9d8a321_ref = *it;
			{
				if (_3025_t == _1d9d8a321_ref) {
					return true;
				}
			}
			_iter_next_4397204464:;
			++it;
			goto _iter_begin_4397204464;
		}
		_iter_end_4397204464:;
	}
	return false;
}



inline jule::Bool _1d9d8a321_is_dead(jule::Any _4016_ref) {
	jule::Bool _4028_dead = jule::Bool();
	if (_1d9d8a321_is_exist(_1d9d8a321_deads,_4016_ref)) {
		_4028_dead = true;
		return _4028_dead;
	}
	{
		auto &_match_expr{ _4016_ref };
		if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4397212080:;
			{
				if (_4016_ref.operator jule::Ptr<_1c17e2687_FnIns>()->_field_decl->_method_is_init()) {
					goto _match_end_4397206160;
				}
				goto _case_begin_4397208592;
			}
		}
		else {
			_case_begin_4397208592:;
			{
				if ((_1d9d8a321_current == _4016_ref) || (_1d9d8a321_main_current == _4016_ref)) {
					_4028_dead = true;
					return _4028_dead;
				}
				if (_1d9d8a321_is_exist(_1d9d8a321_checking,_4016_ref)) {
					_4028_dead = true;
					return _4028_dead;
				}
			}
		}
		_match_end_4397206160:;
	}
	jule::Any _6113_old = _1d9d8a321_current;
	_1d9d8a321_current=_4016_ref;
	jule::I64 _639_len = _1d9d8a321_checking.len();
	_1d9d8a321_checking.push(_4016_ref);
	__JULE_DEFER({
		_1d9d8a321_current=_6113_old;
		_1d9d8a321_drop_ref(_1d9d8a321_checking,_639_len);
	});
	{
		auto &_match_expr{ _4016_ref };
		if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4397217696:;
			{
				_4028_dead = _1d9d8a321_is_fn_dead(_4016_ref.operator jule::Ptr<_1c17e2687_FnIns>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4397217856:;
			{
				_4028_dead = _1d9d8a321_is_var_dead(_4016_ref.operator jule::Ptr<_1c1b58316_Var>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_StructIns>>()) {
			_case_begin_4397217952:;
			{
				_4028_dead = _1d9d8a321_is_struct_dead(_4016_ref.operator jule::Ptr<_1db4a7e59_StructIns>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c196b2a0_Trait>>()) {
			_case_begin_4397216912:;
			{
				_4028_dead = _1d9d8a321_is_trait_dead(_4016_ref.operator jule::Ptr<_1c196b2a0_Trait>());
				return _4028_dead;
			}
		}
		else {
			_case_begin_4397211744:;
			{
				_4028_dead = false;
				return _4028_dead;
			}
		}
		_match_end_4397214976:;
	}
}



inline void _1d9d8a321_drop_ref(jule::Slice<jule::Any>& _9218_refs,jule::Int _9231_pos) {
	_9218_refs=_9218_refs.slice(0LL,_9231_pos);
}



inline jule::Bool _1d9d8a321_is_all_references_are_dead(jule::Ptr<_1c18c86d5_ReferenceStack> _10035_references) {
	jule::Int _10113_i = 0LL;
	for (; _10113_i < _10035_references->_method_len(); (_10113_i)++) {
		{
			jule::Any _10317_ref = _10035_references->_method_at(_10113_i);
			if (_10317_ref == _1d9d8a321_current) {
				goto _iter_next_4397221888;
			}
			if (_10317_ref == _1d9d8a321_main_current) {
				goto _iter_next_4397221888;
			}
			if ((!(_1d9d8a321_is_dead(_10317_ref)))) {
				return false;
			}
		}
	_iter_next_4397221888:;
	}
	_iter_end_4397221888:;
	return true;
}



inline jule::Bool _1d9d8a321_is_fn_dead(jule::Ptr<_1c17e2687_FnIns> _11719_f) {
	if (_11719_f->_field_decl->_field_cpp_linked || _11719_f->_field_anon) {
		return false;
	}
	if (_11719_f->_field_decl->_method_is_entry_point() || _11719_f->_field_decl->_method_is_init()) {
		return (!(_11719_f->_field_decl->_field_statically));
	}
	if (_11719_f->_field_owner != nullptr) {
		if (_1d9d8a321_is_exist(_1d9d8a321_checking,jule::Any(_11719_f->_field_owner))) {
			return true;
		}
		return _1d9d8a321_is_dead(jule::Any(_11719_f->_field_owner));
	}
	return _1d9d8a321_is_all_references_are_dead(_11719_f->_field_references);
}



inline jule::Bool _1d9d8a321_is_var_dead(jule::Ptr<_1c1b58316_Var> _14320_v) {
	if (_14320_v->_field_constant) {
		return true;
	}
	if (_14320_v->_field_cpp_linked) {
		return false;
	}
	return _1d9d8a321_is_all_references_are_dead(_14320_v->_field_references);
}



inline jule::Bool _1d9d8a321_is_struct_dead(jule::Ptr<_1db4a7e59_StructIns> _19323_s) {
	return false;
}



inline jule::Bool _1d9d8a321_is_trait_dead(jule::Ptr<_1c196b2a0_Trait> _21022_t) {
	return false;
}



inline void _1d9d8a321_eliminate_dead_functions(jule::Slice<jule::Ptr<_1c17e2687_Fn>>& _22834_funcs) {
	jule::Int _22913_i = 0LL;
	while (_22913_i < _22834_funcs.len()) {
		{
			jule::Ptr<_1c17e2687_Fn> _23117_f = _22834_funcs[_22913_i];
			jule::Int _23217_j = 0LL;
			while (_23217_j < _23117_f->_field_instances.len()) {
				{
					jule::Ptr<_1c17e2687_FnIns> _23421_ins = _23117_f->_field_instances[_23217_j];
					_1d9d8a321_main_current=jule::Any(_23421_ins);
					if (_1d9d8a321_is_fn_dead(_23421_ins)) {
						_1d9d8a321_deads.push(jule::Any(_23421_ins));
						_23117_f->_field_instances=jule::append(_23117_f->_field_instances.slice(0LL,_23217_j),_23117_f->_field_instances.slice(_23217_j + 1LL));
						goto _iter_next_4397267536;
					}
					_1da7303ad_eliminate_dead_code_of_scope(_23421_ins->_field_scope);
					(_23217_j)++;
				}
			_iter_next_4397267536:;
			}
			_iter_end_4397267536:;
			if (_23117_f->_field_instances.len() == 0LL) {
				_22834_funcs=jule::append(_22834_funcs.slice(0LL,_22913_i),_22834_funcs.slice(_22913_i + 1LL));
				goto _iter_next_4397260288;
			}
			(_22913_i)++;
		}
	_iter_next_4397260288:;
	}
	_iter_end_4397260288:;
}



inline void _1d9d8a321_eliminate_dead_globals(jule::Ptr<_1c1b398be_Package>& _25432_pkg) {
	{
		auto &expr = _25432_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4397268432:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1d9d8a321_f = *it;
			{
				jule::Int _25617_i = 0LL;
				while (_25617_i < _1d9d8a321_f->_field_vars.len()) {
					{
						jule::Ptr<_1c1b58316_Var> _25821_v = _1d9d8a321_f->_field_vars[_25617_i];
						_1d9d8a321_main_current=jule::Any(_25821_v);
						if (_1d9d8a321_is_var_dead(_25821_v)) {
							_1d9d8a321_deads.push(jule::Any(_25821_v));
							_1d9d8a321_f->_field_vars=jule::append(_1d9d8a321_f->_field_vars.slice(0LL,_25617_i),_1d9d8a321_f->_field_vars.slice(_25617_i + 1LL));
						} else {
							(_25617_i)++;
						}
					}
				_iter_next_4397272224:;
				}
				_iter_end_4397272224:;
			}
			_iter_next_4397268432:;
			++it;
			goto _iter_begin_4397268432;
		}
		_iter_end_4397268432:;
	}
}



inline void _1d9d8a321_eliminate_dead_functions_package(jule::Ptr<_1c1b398be_Package>& _27042_pkg) {
	{
		auto &expr = _27042_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4397279216:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1d9d8a321_f = *it;
			{
				_1d9d8a321_eliminate_dead_functions(_1d9d8a321_f->_field_funcs);
			}
			_iter_next_4397279216:;
			++it;
			goto _iter_begin_4397279216;
		}
		_iter_end_4397279216:;
	}
}



inline void _1d9d8a321_catch_alive_init(jule::Ptr<_1c1b398be_Package>& _31826_pkg) {
	
	
	jule::Ptr<_1c17e2687_Fn> _32113_f = _31826_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_32113_f == nullptr) {
		return;
	}
	jule::I64 _3269_n = _1d9d8a321_deads.len();
	__JULE_DEFER({
		_1d9d8a321_deads=_1d9d8a321_deads.slice(0LL,_3269_n);
		_1d9d8a321_checking=nullptr;
		_1d9d8a321_current=jule::Any(nullptr);
	});
	jule::Ptr<_1c17e2687_FnIns> _33413_ins = _32113_f->_field_instances[0LL];
	jule::Int _33513_i = 0LL;
	for (; _33513_i < _33413_ins->_field_refers->_method_len(); (_33513_i)++) {
		{
			if ((!(_1d9d8a321_is_dead(_33413_ins->_field_refers->_method_at(_33513_i))))) {
				_32113_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4397308672:;
	}
	_iter_end_4397308672:;
}



inline void _1d9d8a321_eliminate_package(jule::Ptr<_1c1b398be_Package>& _34427_pkg) {
	_1d9d8a321_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1d9d8a321_catch_alive_init(_34427_pkg);
	_1d9d8a321_eliminate_dead_globals(_34427_pkg);
	_1d9d8a321_eliminate_dead_functions_package(_34427_pkg);
}



inline void _1d9d8a321_eliminate(jule::Ptr<_1da73e9b6_IR>& _35523_ir) {
	jule::I64 _35613_i = _35523_ir->_field_used.len() - 1LL;
	for (; _35613_i >= 0LL; (_35613_i)--) {
		{
			jule::Ptr<_1c1b398be_ImportInfo> _35817_u = _35523_ir->_field_used[_35613_i];
			if ((!(_35817_u->_field_cpp_linked))) {
				_1d9d8a321_eliminate_package(_35817_u->_field_package);
			}
		}
	_iter_next_4397314592:;
	}
	_iter_end_4397314592:;
	_1d9d8a321_eliminate_package(_35523_ir->_field_main);
	_1d9d8a321_deads=nullptr;
	_1d9d8a321_checking=nullptr;
	_1d9d8a321_current=jule::Any(nullptr);
}



inline void _1da7303ad_eliminate_dead_code_of_scope(jule::Ptr<_1c197a248_Scope> _7537_s) {
	jule::Ptr<_1da7303ad_ScopeDeadCode> _7613_sdc = jule::new_struct_ptr<_1da7303ad_ScopeDeadCode>(new( std::nothrow ) _1da7303ad_ScopeDeadCode(jule::Ptr<_1da7303ad_ScopeDeadCode>(),_7537_s,(&(_7537_s->_field_stmts)),jule::Int()));
	{
		_7613_sdc->_method_optimize_stmts();
	}
}



inline jule::U64 _1a93d0c71_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _1a93d0c71_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::unsafe_div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::unsafe_mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LLU;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LLU;
		_26713_leaps=0LLU;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LLU;
				_27013_rem-=300LLU;
			} else {
				_26813_centuries=2LLU;
				_27013_rem-=200LLU;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LLU;
				_27013_rem-=100LLU;
			} else {
				_26813_centuries=0LLU;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LLU;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::unsafe_div(_27013_rem,4LL));
			_27013_rem = jule::unsafe_mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _1a93d0c71_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		if (_match_expr == 1LL) {
			_case_begin_4397385584:;
			{
				_31613_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_4397394480:;
			{
				_31613_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_4397394832:;
			{
				_31613_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_4397394928:;
			{
				_31613_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_4397395024:;
			{
				_31613_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_4397395120:;
			{
				_31613_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_4397395216:;
			{
				_31613_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_4397395312:;
			{
				_31613_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_4397395408:;
			{
				_31613_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_4397395504:;
			{
				_31613_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_4397395600:;
			{
				_31613_t=28857600LLU;
			}
		}
		_match_end_4397394400:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LLU;
	}
	return _31613_t;
}



inline jule::Bool _1c1ed6320_iter_expr_is_copy_optimizable(jule::Ptr<_1c1ead281_Data>& _3835_expr,jule::Ptr<_1c1b58316_Var>& _3849_v) {
	return ((!(_3835_expr->_field_lvalue)) && (!(_3835_expr->_field_kind->_method_mutable()))) || (!(_3849_v->_field_mutable));
}



inline jule::Str _1c1ed6320_gen_range_index_iter(jule::Ptr<_1c197a248_RangeIter>& _4230_it) {
	jule::Str _439_begin = _1a926bc61_iter_begin_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _449_next = _1a926bc61_iter_next_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _4613_obj = jule::Str("{\n", 2);
	_1a92bc4dc_add_indent();
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("auto ", 5);
	if (_1d9d89b4a_OPT_COPY && _4230_it->_field_expr->_field_lvalue) {
		_4613_obj+=jule::Str("&", 1);
	}
	_4613_obj+=jule::Str("expr = ", 7);
	_4613_obj+=_1c200553c_gen_expr_model(_4230_it->_field_expr->_field_model);
	_4613_obj+=jule::Str(";\n", 2);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a92bc4dc_add_indent();
	_4613_obj+=_1a92bc4dc_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_1a92bc4dc_gen_var_init_expr(_4230_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_1a92bc4dc_indent();
	}
	if (_4230_it->_field_key_b != nullptr) {
		if (_1d9d89b4a_OPT_COPY) {
			_4230_it->_field_key_b->_field_reference=_1c1ed6320_iter_expr_is_copy_optimizable(_4230_it->_field_expr,_4230_it->_field_key_b);
		}
		_4613_obj+=_1a92bc4dc_gen_var_init_expr(_4230_it->_field_key_b,jule::Str("*it", 3));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_1a92bc4dc_indent();
	}
	_4613_obj+=_1c1ed6320_gen_scope(_4230_it->_field_scope);
	_4613_obj+=jule::Str("\n", 1);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=_449_next;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("++it;\n", 6);
	_4613_obj+=_1a92bc4dc_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_1a926bc61_var_out_ident(_4230_it->_field_key_a);
		_4613_obj+=jule::Str("++;\n", 4);
		_4613_obj+=_1a92bc4dc_indent();
	}
	_4613_obj+=jule::Str("goto ", 5);
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(";\n", 2);
	_1a92bc4dc_done_indent();
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("}\n", 2);
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=_1a926bc61_iter_end_label_ident(static_cast<jule::Uintptr>(_4230_it));
	_4613_obj+=jule::Str(":;\n", 3);
	_1a92bc4dc_done_indent();
	_4613_obj+=_1a92bc4dc_indent();
	_4613_obj+=jule::Str("}", 1);
	return _4613_obj;
}



inline jule::Str _1c1ed6320_gen_range_hashmap_iter(jule::Ptr<_1c197a248_RangeIter>& _11232_it) {
	jule::Str _1139_begin = _1a926bc61_iter_begin_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _1149_next = _1a926bc61_iter_next_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _11613_obj = jule::Str("{\n", 2);
	_1a92bc4dc_add_indent();
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("auto ", 5);
	if (_1d9d89b4a_OPT_COPY && _11232_it->_field_expr->_field_lvalue) {
		_11613_obj+=jule::Str("&", 1);
	}
	_11613_obj+=jule::Str("expr = ", 7);
	_11613_obj+=_1c200553c_gen_expr_model(_11232_it->_field_expr->_field_model);
	_11613_obj+=jule::Str(";\n", 2);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a92bc4dc_add_indent();
	_11613_obj+=_1a92bc4dc_indent();
	if (_11232_it->_field_key_a != nullptr) {
		if (_1d9d89b4a_OPT_COPY) {
			_11232_it->_field_key_a->_field_reference=_1c1ed6320_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_a);
		}
		_11613_obj+=_1a92bc4dc_gen_var_init_expr(_11232_it->_field_key_a,jule::Str("it->first", 9));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_1a92bc4dc_indent();
	}
	if (_11232_it->_field_key_b != nullptr) {
		if (_1d9d89b4a_OPT_COPY) {
			_11232_it->_field_key_b->_field_reference=_1c1ed6320_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_b);
		}
		_11613_obj+=_1a92bc4dc_gen_var_init_expr(_11232_it->_field_key_b,jule::Str("it->second", 10));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_1a92bc4dc_indent();
	}
	_11613_obj+=_1c1ed6320_gen_scope(_11232_it->_field_scope);
	_11613_obj+=jule::Str("\n", 1);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=_1149_next;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("++it;\n", 6);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("goto ", 5);
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(";\n", 2);
	_1a92bc4dc_done_indent();
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("}\n", 2);
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=_1a926bc61_iter_end_label_ident(static_cast<jule::Uintptr>(_11232_it));
	_11613_obj+=jule::Str(":;\n", 3);
	_1a92bc4dc_done_indent();
	_11613_obj+=_1a92bc4dc_indent();
	_11613_obj+=jule::Str("}", 1);
	return _11613_obj;
}



inline jule::Str _1c1ed6320_gen_if(jule::Ptr<_1c197a248_If> _18015_i) {
	jule::Str _18113_obj = jule::Str("if (", 4);
	_18113_obj+=_1c200553c_gen_expr(_18015_i->_field_expr);
	_18113_obj+=jule::Str(") ", 2);
	_18113_obj+=_1c1ed6320_gen_scope(_18015_i->_field_scope);
	return _18113_obj;
}



inline jule::Str _1c1ed6320_gen_conditional(jule::Ptr<_1c197a248_Conditional> _18824_c) {
	jule::Str _18913_obj = _1c1ed6320_gen_if(_18824_c->_field_elifs[0LL]);
	{
		auto expr = _18824_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4388039616:;
		if (it != expr.end()) {
			jule::Ptr<_1c197a248_If> _1c1ed6320_elif = *it;
			{
				_18913_obj+=jule::Str(" else ", 6);
				_18913_obj+=_1c1ed6320_gen_if(_1c1ed6320_elif);
			}
			_iter_next_4388039616:;
			++it;
			goto _iter_begin_4388039616;
		}
		_iter_end_4388039616:;
	}
	if (_18824_c->_field_default != nullptr) {
		_18913_obj+=jule::Str(" else ", 6);
		_18913_obj+=_1c1ed6320_gen_scope(_18824_c->_field_default->_field_scope);
	}
	return _18913_obj;
}



inline jule::Str _1c1ed6320_gen_inf_iter(jule::Ptr<_1c197a248_InfIter> _20421_it) {
	jule::Str _20513_obj = jule::Str("for (;;) {\n", 11);
	_1a92bc4dc_add_indent();
	_20513_obj+=_1a92bc4dc_indent();
	_20513_obj+=_1c1ed6320_gen_scope(_20421_it->_field_scope);
	_1a92bc4dc_done_indent();
	jule::Str _2129_indent = _1a92bc4dc_indent();
	_20513_obj+=jule::Str("\n", 1);
	_20513_obj+=_2129_indent;
	_20513_obj+=_1a926bc61_iter_next_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;\n", 3);
	_20513_obj+=_2129_indent;
	_20513_obj+=jule::Str("}\n", 2);
	_20513_obj+=_2129_indent;
	_20513_obj+=_1a926bc61_iter_end_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;", 2);
	return _20513_obj;
}



inline jule::Str _1c1ed6320_gen_while_iter(jule::Ptr<_1c197a248_WhileIter> _22723_it) {
	jule::Str _22813_obj = jule::Str();
	if ((_22723_it->_field_expr != nullptr) && (_22723_it->_field_next == nullptr)) {
		_22813_obj+=jule::Str("while (", 7);
		_22813_obj+=_1c200553c_gen_expr(_22723_it->_field_expr);
		_22813_obj+=jule::Str(") {\n", 4);
	} else {
		_22813_obj+=jule::Str("for (; ", 7);
		if (_22723_it->_field_expr != nullptr) {
			_22813_obj+=_1c200553c_gen_expr(_22723_it->_field_expr);
		}
		_22813_obj+=jule::Str("; ", 2);
		if (_22723_it->_field_next != nullptr) {
			jule::Str _24017_st = _1c1ed6320_gen_st(_22723_it->_field_next);
			_22813_obj+=_24017_st.slice(0LL,_24017_st.len() - 1LL);
		}
		_22813_obj+=jule::Str(") {\n", 4);
	}
	_1a92bc4dc_add_indent();
	_22813_obj+=_1a92bc4dc_indent();
	_22813_obj+=_1c1ed6320_gen_scope(_22723_it->_field_scope);
	_22813_obj+=jule::Str("\n", 1);
	_1a92bc4dc_done_indent();
	_22813_obj+=_1a92bc4dc_indent();
	_22813_obj+=_1a926bc61_iter_next_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;\n", 3);
	_22813_obj+=_1a92bc4dc_indent();
	_22813_obj+=jule::Str("}\n", 2);
	_22813_obj+=_1a92bc4dc_indent();
	_22813_obj+=_1a926bc61_iter_end_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;", 2);
	return _22813_obj;
}



inline jule::Str _1c1ed6320_gen_range_iter(jule::Ptr<_1c197a248_RangeIter> _26323_it) {
	{
		if (_26323_it->_field_expr->_field_kind->_method_slc() != nullptr) {
			_case_begin_4388065888:;
			{
				return _1c1ed6320_gen_range_index_iter(_26323_it);
			}
		}
		else if (_26323_it->_field_expr->_field_kind->_method_arr() != nullptr) {
			_case_begin_4388066192:;
			{
				return _1c1ed6320_gen_range_index_iter(_26323_it);
			}
		}
		else if (_26323_it->_field_expr->_field_kind->_method_map() != nullptr) {
			_case_begin_4388066624:;
			{
				return _1c1ed6320_gen_range_hashmap_iter(_26323_it);
			}
		}
		else {
			_case_begin_4388060496:;
			{
				return _1c1ed6320_gen_range_index_iter(_26323_it);
			}
		}
		_match_end_4388060384:;
	}
}



inline jule::Str _1c1ed6320_gen_cont(jule::Ptr<_1c197a248_ContSt> _27213_c) {
	jule::Str _27313_obj = jule::Str("goto ", 5);
	_27313_obj+=_1a926bc61_iter_next_label_ident(_27213_c->_field_it);
	_27313_obj+=jule::Str(";", 1);
	return _27313_obj;
}



inline jule::Str _1c1ed6320_gen_label(jule::Ptr<_1c197a248_Label> _27914_l) {
	return _1a926bc61_label_ident(_27914_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1c1ed6320_gen_goto(jule::Ptr<_1c197a248_GotoSt> _28313_gt) {
	jule::Str _28413_obj = jule::Str("goto ", 5);
	_28413_obj+=_1a926bc61_label_ident(_28313_gt->_field_ident);
	_28413_obj+=jule::Str(";", 1);
	return _28413_obj;
}



inline jule::Str _1c1ed6320_gen_postfix(jule::Ptr<_1c197a248_Postfix> _29020_p) {
	jule::Str _29113_obj = jule::Str("(", 1);
	_29113_obj+=_1c200553c_gen_expr(_29020_p->_field_expr);
	_29113_obj+=jule::Str(")", 1);
	_29113_obj+=_29020_p->_field_op;
	_29113_obj+=jule::Str(";", 1);
	return _29113_obj;
}



inline jule::Str _1c1ed6320_gen_div_by_zero_assign(jule::Ptr<_1c197a248_Assign> _29931_a) {
	jule::Str _30013_obj = _1c200553c_gen_expr(_29931_a->_field_l);
	_30013_obj+=jule::Str(" = ", 3);
	_30013_obj+=_1c200553c_gen_div_by_zero_binop_expr_model(_29931_a->_field_op.slice(0LL,1LL),_29931_a->_field_l,_29931_a->_field_r);
	_30013_obj+=jule::Str(";", 1);
	return _30013_obj;
}



inline jule::Str _1c1ed6320_gen_assign(jule::Ptr<_1c197a248_Assign> _30719_a) {
	{
		auto &_match_expr{ _30719_a->_field_op };
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_4388084688:;
			{
				return _1c1ed6320_gen_div_by_zero_assign(_30719_a);
			}
		}
		_match_end_4388084608:;
	}
	jule::Str _31413_obj = _1c200553c_gen_expr(_30719_a->_field_l);
	_31413_obj+=_30719_a->_field_op;
	if (_1d9d89b4a_OPT_APPEND) {
		{
			auto &_match_expr{ _30719_a->_field_r };
			if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>>()) {
				_case_begin_4388089408:;
				{
					jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel> _31921_model = _30719_a->_field_r.operator jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>();
					jule::Str _32018_expr;
					jule::Bool _32024_optimized;
					std::tie(_32018_expr,_32024_optimized) = _1c200553c_gen_builtin_append_call_expr_model_assign(_30719_a->_field_l,_31921_model);
					if (_32024_optimized) {
						return _32018_expr;
					}
					_31413_obj+=_32018_expr;
				}
			}
			else {
				_case_begin_4388086096:;
				{
					_31413_obj+=_1c200553c_gen_expr(_30719_a->_field_r);
				}
			}
			_match_end_4388088624:;
		}
	} else {
		_31413_obj+=_1c200553c_gen_expr(_30719_a->_field_r);
	}
	_31413_obj+=jule::Str(";", 1);
	return _31413_obj;
}



inline jule::Str _1c1ed6320_gen_multi_assign(jule::Ptr<_1c197a248_MultiAssign> _33625_a) {
	jule::Str _33713_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _33625_a->_field_l;
		auto it = expr.begin();
		_iter_begin_4388095904:;
		if (it != expr.end()) {
			jule::Any _1c1ed6320_l = *it;
			{
				if (_1c1ed6320_l == nullptr) {
					_33713_obj+=jule::Str("std::ignore", 11);
					_33713_obj+=jule::Str(",", 1);
				} else {
					_33713_obj+=_1c200553c_gen_expr(_1c1ed6320_l);
					_33713_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4388095904:;
			++it;
			goto _iter_begin_4388095904;
		}
		_iter_end_4388095904:;
	}
	_33713_obj=_33713_obj.slice(0LL,_33713_obj.len() - 1LL);
	_33713_obj+=jule::Str(") = ", 4);
	_33713_obj+=_1c200553c_gen_expr(_33625_a->_field_r);
	_33713_obj+=jule::Str(";", 1);
	return _33713_obj;
}



inline jule::Str _1c1ed6320_get_case_match_expr(jule::Ptr<_1c197a248_Match>& _35829_m) {
	if ((!(_35829_m->_field_expr->_method_is_const()))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_35829_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35829_m->_field_expr->_field_constant->_method_read_bool()))) {
		return _1c200553c_gen_expr_model(_35829_m->_field_expr->_field_model);
	}
	return jule::Str();
}



inline jule::Str _1c1ed6320_gen_case(jule::Ptr<_1c197a248_Match> _36817_m,jule::Ptr<_1c197a248_Case> _36832_c) {
	jule::Str _36913_obj = jule::Str();
	if ((_36832_c->_field_exprs.len() != 0LL) && (!(_36817_m->_method_is_generic_type_match()))) {
		if ((_36817_m->_field_cases.len() > 0LL) && (_36817_m->_field_cases[0LL] == _36832_c)) {
			_36913_obj+=jule::Str("if (", 4);
		} else {
			_36913_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _36832_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_4388111024:;
			if (it != expr.end()) {
				jule::Int _1c1ed6320_i = it - expr.begin();
				jule::Ptr<_1c1ead281_Data> _1c1ed6320_expr = *it;
				{
					{
						if ((!(_36817_m->_field_type_match))) {
							_case_begin_4388113184:;
							{
								jule::Str _38021_case_expr = _1c1ed6320_get_case_match_expr(_36817_m);
								if (_36817_m->_field_expr->_method_good_operand(_1c1ed6320_expr)) {
									if (_38021_case_expr.len() != 0LL) {
										_36913_obj+=_38021_case_expr;
										_36913_obj+=jule::Str(" == ", 4);
									}
									_36913_obj+=_1c200553c_gen_expr(_1c1ed6320_expr->_field_model);
								} else {
									_36913_obj+=_1c200553c_gen_expr(_1c1ed6320_expr->_field_model);
									if (_38021_case_expr.len() != 0LL) {
										_36913_obj+=jule::Str(" == ", 4);
										_36913_obj+=_38021_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_4388112384:;
							{
								_36913_obj+=jule::Str("_match_expr", 11);
								_36913_obj+=jule::Str(".type_is<", 9);
								_36913_obj+=_1c200553c_gen_expr(_1c1ed6320_expr->_field_model);
								_36913_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_4388112208:;
					}
					if ((_1c1ed6320_i + 1LL) < _36832_c->_field_exprs.len()) {
						_36913_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4388111024:;
				++it;
				_1c1ed6320_i++;
				goto _iter_begin_4388111024;
			}
			_iter_end_4388111024:;
		}
		_36913_obj+=jule::Str(") ", 2);
	} else if ((_36817_m->_field_default == _36832_c) && (_36817_m->_field_cases.len() != 0LL)) {
		_36913_obj+=_1a92bc4dc_indent();
		_36913_obj+=jule::Str("else ", 5);
	} else {
		_36913_obj+=_1a92bc4dc_indent();
	}
	_1a92bc4dc_add_indent();
	_36913_obj+=jule::Str("{\n", 2);
	_36913_obj+=_1a92bc4dc_indent();
	_36913_obj+=_1a926bc61_case_begin_label_ident(static_cast<jule::Uintptr>(_36832_c));
	_36913_obj+=jule::Str(":;\n", 3);
	if (_36832_c->_field_scope->_field_stmts.len() > 0LL) {
		_36913_obj+=_1a92bc4dc_indent();
		_36913_obj+=_1c1ed6320_gen_scope(_36832_c->_field_scope);
		_36913_obj+=jule::Str("\n", 1);
	}
	_1a92bc4dc_done_indent();
	_36913_obj+=_1a92bc4dc_indent();
	_36913_obj+=jule::Str("}", 1);
	return _36913_obj;
}



inline jule::Str _1c1ed6320_gen_match(jule::Ptr<_1c197a248_Match> _43518_m) {
	if ((_43518_m->_field_cases.len() == 0LL) && (_43518_m->_field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _4409_generic_type_match = _43518_m->_method_is_generic_type_match();
	if (_4409_generic_type_match && ((_43518_m->_field_default == nullptr) || (_43518_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _44513_obj = jule::Str("{\n", 2);
	_1a92bc4dc_add_indent();
	_44513_obj+=_1a92bc4dc_indent();
	if ((!(_4409_generic_type_match)) && (!(_43518_m->_field_expr->_method_is_const()))) {
		if (_43518_m->_field_expr->_field_lvalue && _1d9d89b4a_OPT_COPY) {
			_44513_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_44513_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_44513_obj+=_1c200553c_gen_expr(_43518_m->_field_expr->_field_model);
		_44513_obj+=jule::Str(" };\n", 4);
		_44513_obj+=_1a92bc4dc_indent();
	}
	if (_43518_m->_field_cases.len() > 0LL) {
		_44513_obj+=_1c1ed6320_gen_case(_43518_m,_43518_m->_field_cases[0LL]);
		{
			auto expr = _43518_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_4388140112:;
			if (it != expr.end()) {
				jule::Ptr<_1c197a248_Case> _1c1ed6320_c = *it;
				{
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_1a92bc4dc_indent();
					_44513_obj+=_1c1ed6320_gen_case(_43518_m,_1c1ed6320_c);
				}
				_iter_next_4388140112:;
				++it;
				goto _iter_begin_4388140112;
			}
			_iter_end_4388140112:;
		}
	}
	if (_43518_m->_field_default != nullptr) {
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_1c1ed6320_gen_case(_43518_m,_43518_m->_field_default);
	}
	_44513_obj+=jule::Str("\n", 1);
	_44513_obj+=_1a92bc4dc_indent();
	_44513_obj+=_1a926bc61_match_end_label_ident(static_cast<jule::Uintptr>(_43518_m));
	_44513_obj+=jule::Str(":;", 2);
	_44513_obj+=jule::Str("\n", 1);
	_1a92bc4dc_done_indent();
	_44513_obj+=_1a92bc4dc_indent();
	_44513_obj+=jule::Str("}", 1);
	return _44513_obj;
}



inline jule::Str _1c1ed6320_gen_fall_st(jule::Ptr<_1c197a248_FallSt> _49116_f) {
	jule::Str _49213_obj = jule::Str("goto ", 5);
	_49213_obj+=_1a926bc61_case_begin_label_ident(_49116_f->_field_dest_case);
	_49213_obj+=jule::Str(";", 1);
	return _49213_obj;
}



inline jule::Str _1c1ed6320_gen_break_st(jule::Ptr<_1c197a248_BreakSt> _49817_b) {
	jule::Str _49913_obj = jule::Str("goto ", 5);
	if (_49817_b->_field_it != 0LL) {
		_49913_obj+=_1a926bc61_iter_end_label_ident(_49817_b->_field_it);
	} else {
		_49913_obj+=_1a926bc61_match_end_label_ident(_49817_b->_field_mtch);
	}
	_49913_obj+=jule::Str(";", 1);
	return _49913_obj;
}



inline jule::Str _1c1ed6320_gen_ret_vars(jule::Ptr<_1c197a248_RetSt> _51021_r) {
	jule::Str _51113_obj = jule::Str();
	{
		auto &expr = _51021_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4388154112:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1c1ed6320_v = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1ed6320_v->_field_ident)) {
					_51113_obj+=_1c200553c_get_init_expr(_1c1ed6320_v->_field_kind->_field_kind);
				} else {
					_51113_obj+=_1a926bc61_var_out_ident(_1c1ed6320_v);
				}
				_51113_obj+=jule::Str(",", 1);
			}
			_iter_next_4388154112:;
			++it;
			goto _iter_begin_4388154112;
		}
		_iter_end_4388154112:;
	}
	_51113_obj=_51113_obj.slice(0LL,_51113_obj.len() - 1LL);
	jule::Str _52313_oobj = jule::Str("return ", 7);
	if (_51021_r->_field_func->_field_decl->_field_exceptional) {
		_52313_oobj+=jule::Str("jule::Exceptional(jule::Any(),", 30);
	}
	if (_51021_r->_field_vars.len() > 1LL) {
		_52313_oobj+=jule::Str("std::make_tuple(", 16);
		_52313_oobj+=_51113_obj;
		_52313_oobj+=jule::Str(")", 1);
	} else {
		_52313_oobj+=_51113_obj;
	}
	if (_51021_r->_field_func->_field_decl->_field_exceptional) {
		_52313_oobj+=jule::Str(")", 1);
	}
	_52313_oobj+=jule::Str(";", 1);
	return _52313_oobj;
}



inline jule::Str _1c1ed6320_gen_ret_expr_tuple(jule::Ptr<_1c197a248_RetSt> _54527_r) {
	jule::Slice<jule::Ptr<_1c1ead281_Data>> _54613_datas = _54527_r->_field_expr.operator jule::Ptr<_1c19727a1_TupleExprModel>()->_field_datas;
	jule::Str _54713_obj = jule::Str();
	{
		auto &expr = _54527_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4388165264:;
		if (it != expr.end()) {
			jule::Int _1c1ed6320_i = it - expr.begin();
			jule::Ptr<_1c1b58316_Var> _1c1ed6320_v = *it;
			{
				if (_1da81133a_is_ignore_ident(_1c1ed6320_v->_field_ident)) {
					goto _iter_next_4388165264;
				}
				jule::Any _55317_model = _54613_datas[_1c1ed6320_i]->_field_model;
				if (_55317_model == _1c1ed6320_v) {
					goto _iter_next_4388165264;
				}
				jule::Str _55813_ident = _1a926bc61_var_out_ident(_1c1ed6320_v);
				_54713_obj+=_55813_ident;
				_54713_obj+=jule::Str(" = ", 3);
				_54713_obj+=_1c200553c_gen_expr(_55317_model);
				_54713_obj+=jule::Str(";\n", 2);
				_54713_obj+=_1a92bc4dc_indent();
			}
			_iter_next_4388165264:;
			++it;
			_1c1ed6320_i++;
			goto _iter_begin_4388165264;
		}
		_iter_end_4388165264:;
	}
	jule::Str _56613_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _54613_datas;
		auto it = expr.begin();
		_iter_begin_4388173136:;
		if (it != expr.end()) {
			jule::Int _1c1ed6320_i = it - expr.begin();
			jule::Ptr<_1c1ead281_Data> _1c1ed6320_d = *it;
			{
				jule::Ptr<_1c1b58316_Var> _56817_v = _54527_r->_field_vars[_1c1ed6320_i];
				if (_1da81133a_is_ignore_ident(_56817_v->_field_ident)) {
					_56613_oobj+=_1c200553c_gen_expr(_1c1ed6320_d->_field_model);
				} else {
					_56613_oobj+=_1a926bc61_var_out_ident(_56817_v);
				}
				_56613_oobj+=jule::Str(",", 1);
			}
			_iter_next_4388173136:;
			++it;
			_1c1ed6320_i++;
			goto _iter_begin_4388173136;
		}
		_iter_end_4388173136:;
	}
	_56613_oobj=_56613_oobj.slice(0LL,_56613_oobj.len() - 1LL);
	_56613_oobj+=jule::Str(")", 1);
	if (_54527_r->_field_func->_field_decl->_field_exceptional) {
		_54713_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_54713_obj+=_56613_oobj;
		_54713_obj+=jule::Str(")", 1);
	} else {
		_54713_obj+=jule::Str("return ", 7);
		_54713_obj+=_56613_oobj;
	}
	_54713_obj+=jule::Str(";", 1);
	return _54713_obj;
}



inline jule::Str _1c1ed6320_gen_ret_expr(jule::Ptr<_1c197a248_RetSt> _59321_r) {
	if (_59321_r->_field_vars.len() > 1LL) {
		return _1c1ed6320_gen_ret_expr_tuple(_59321_r);
	}
	if (_59321_r->_field_vars.len() > 0LL) {
		jule::Ptr<_1c1b58316_Var> _60017_v = _59321_r->_field_vars[0LL];
		if ((!(_1da81133a_is_ignore_ident(_60017_v->_field_ident))) && (_59321_r->_field_expr != _60017_v)) {
			jule::Str _60217_ident = _1a926bc61_var_out_ident(_60017_v);
			jule::Str _60321_obj = _60217_ident;
			_60321_obj+=jule::Str(" = ", 3);
			_60321_obj+=_1c200553c_gen_expr(_59321_r->_field_expr);
			_60321_obj+=jule::Str(";\n", 2);
			_60321_obj+=_1a92bc4dc_indent();
			if (_59321_r->_field_func->_field_decl->_field_exceptional) {
				_60321_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
				_60321_obj+=_60217_ident;
				_60321_obj+=jule::Str(")", 1);
			} else {
				_60321_obj+=jule::Str("return ", 7);
				_60321_obj+=_60217_ident;
			}
			_60321_obj+=jule::Str(";", 1);
			return _60321_obj;
		}
	}
	if (_59321_r->_field_func->_field_decl->_field_exceptional) {
		jule::Str _62217_obj = jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_62217_obj+=_1c200553c_gen_expr(_59321_r->_field_expr);
		_62217_obj+=jule::Str(")", 1);
		_62217_obj+=jule::Str(";", 1);
		return _62217_obj;
	}
	jule::Str _62913_obj = jule::Str("return ", 7);
	_62913_obj+=_1c200553c_gen_expr(_59321_r->_field_expr);
	_62913_obj+=jule::Str(";", 1);
	return _62913_obj;
}



inline jule::Str _1c1ed6320_gen_ret_st(jule::Ptr<_1c197a248_RetSt> _63519_r) {
	if ((_63519_r->_field_expr == nullptr) && (_63519_r->_field_vars.len() == 0LL)) {
		if (_63519_r->_field_func->_field_decl->_field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_63519_r->_field_expr == nullptr) {
		return _1c1ed6320_gen_ret_vars(_63519_r);
	}
	return _1c1ed6320_gen_ret_expr(_63519_r);
}



inline jule::Str _1c1ed6320_gen_data_expr(jule::Ptr<_1c1ead281_Data> _66822_d) {
	return _1c200553c_gen_expr(_66822_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1c1ed6320_gen_scope_var(jule::Ptr<_1c1b58316_Var> _67222_v) {
	if (_67222_v->_field_constant) {
		return jule::Str();
	}
	return _1a92bc4dc_gen_var(_67222_v);
}



inline jule::Str _1c1ed6320_gen_st(jule::Any _68015_st) {
	{
		auto &_match_expr{ _68015_st };
		if (_match_expr.type_is<jule::Ptr<_1c197a248_Scope>>()) {
			_case_begin_4388210528:;
			{
				return _1c1ed6320_gen_scope(_68015_st.operator jule::Ptr<_1c197a248_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4388210624:;
			{
				return _1c1ed6320_gen_scope_var(_68015_st.operator jule::Ptr<_1c1b58316_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
			_case_begin_4388210160:;
			{
				return _1c1ed6320_gen_data_expr(_68015_st.operator jule::Ptr<_1c1ead281_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Conditional>>()) {
			_case_begin_4388210256:;
			{
				return _1c1ed6320_gen_conditional(_68015_st.operator jule::Ptr<_1c197a248_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_InfIter>>()) {
			_case_begin_4388210368:;
			{
				return _1c1ed6320_gen_inf_iter(_68015_st.operator jule::Ptr<_1c197a248_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_WhileIter>>()) {
			_case_begin_4388209680:;
			{
				return _1c1ed6320_gen_while_iter(_68015_st.operator jule::Ptr<_1c197a248_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_RangeIter>>()) {
			_case_begin_4388209776:;
			{
				return _1c1ed6320_gen_range_iter(_68015_st.operator jule::Ptr<_1c197a248_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_ContSt>>()) {
			_case_begin_4388209872:;
			{
				return _1c1ed6320_gen_cont(_68015_st.operator jule::Ptr<_1c197a248_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Label>>()) {
			_case_begin_4388211072:;
			{
				return _1c1ed6320_gen_label(_68015_st.operator jule::Ptr<_1c197a248_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_GotoSt>>()) {
			_case_begin_4388211168:;
			{
				return _1c1ed6320_gen_goto(_68015_st.operator jule::Ptr<_1c197a248_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Postfix>>()) {
			_case_begin_4388211264:;
			{
				return _1c1ed6320_gen_postfix(_68015_st.operator jule::Ptr<_1c197a248_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Assign>>()) {
			_case_begin_4388211360:;
			{
				return _1c1ed6320_gen_assign(_68015_st.operator jule::Ptr<_1c197a248_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_MultiAssign>>()) {
			_case_begin_4388211456:;
			{
				return _1c1ed6320_gen_multi_assign(_68015_st.operator jule::Ptr<_1c197a248_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_Match>>()) {
			_case_begin_4388211552:;
			{
				return _1c1ed6320_gen_match(_68015_st.operator jule::Ptr<_1c197a248_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_FallSt>>()) {
			_case_begin_4388211664:;
			{
				return _1c1ed6320_gen_fall_st(_68015_st.operator jule::Ptr<_1c197a248_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_BreakSt>>()) {
			_case_begin_4388211776:;
			{
				return _1c1ed6320_gen_break_st(_68015_st.operator jule::Ptr<_1c197a248_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c197a248_RetSt>>()) {
			_case_begin_4388211888:;
			{
				return _1c1ed6320_gen_ret_st(_68015_st.operator jule::Ptr<_1c197a248_RetSt>());
			}
		}
		else {
			_case_begin_4388205392:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_4388209232:;
	}
}



inline jule::Str _1c1ed6320_gen_scope(jule::Ptr<_1c197a248_Scope> _70418_s) {
	jule::Str _70513_obj = jule::Str("{\n", 2);
	_1a92bc4dc_add_indent();
	{
		auto &expr = _70418_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4388238416:;
		if (it != expr.end()) {
			jule::Any _1c1ed6320_st = *it;
			{
				_70513_obj+=_1a92bc4dc_indent();
				_70513_obj+=_1c1ed6320_gen_st(_1c1ed6320_st);
				_70513_obj+=jule::Str("\n", 1);
			}
			_iter_next_4388238416:;
			++it;
			goto _iter_begin_4388238416;
		}
		_iter_end_4388238416:;
	}
	_1a92bc4dc_done_indent();
	_70513_obj+=_1a92bc4dc_indent();
	_70513_obj+=jule::Str("}", 1);
	if (_70418_s->_field_deferred) {
		_70513_obj=(jule::Str("__JULE_DEFER(", 13) + _70513_obj) + jule::Str(");", 2);
	}
	return _70513_obj;
}



inline jule::Str _1c1ed6320_gen_fn_scope(jule::Ptr<_1c17e2687_FnIns> _72621_f) {
	jule::Str _72713_obj = (((_72621_f->_field_owner != nullptr)) ? (_1c1ed6320_gen_method_scope(_72621_f)) : (_1c1ed6320_gen_scope(_72621_f->_field_scope)));
	if (_72621_f->_field_decl->_field_exceptional && _72621_f->_field_decl->_method_is_void()) {
		_72713_obj=_72713_obj.slice(0LL,_72713_obj.len() - 2LL) + jule::Str(" return jule::VoidExceptional(); }", 34);
	}
	return _72713_obj;
}



inline jule::Str _1c1ed6320_gen_method_scope(jule::Ptr<_1c17e2687_FnIns> _73925_f) {
	return _1c1ed6320_gen_scope(_73925_f->_field_scope);
}



inline jule::Str _1c200553c_concat_all_parts(jule::Slice<_1da81133a_Token> _8021_parts) {
	jule::Str _8113_s = jule::Str();
	{
		auto &expr = _8021_parts;
		auto it = expr.begin();
		_iter_begin_4388249760:;
		if (it != expr.end()) {
			_1da81133a_Token &_1c200553c_part = *it;
			{
				_8113_s+=_1c200553c_part._field_kind;
			}
			_iter_next_4388249760:;
			++it;
			goto _iter_begin_4388249760;
		}
		_iter_end_4388249760:;
	}
	return _8113_s;
}



inline jule::Str _1c200553c_get_accessor(jule::Ptr<_1a8ad0a37_TypeKind>& _8822_t) {
	if ((_8822_t->_method_sptr() != nullptr) || (_8822_t->_method_ptr() != nullptr)) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1c200553c_decompose_common_esq(jule::U8 _9525_b) {
	{
		auto &_match_expr{ _9525_b };
		if (_match_expr == '\\') {
			_case_begin_4388256000:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_4388255568:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_4388255200:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_4388255296:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_4388255392:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_4388254624:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_4388254720:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_4388254816:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_4388254912:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_4388256112:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_4388252784:;
			{
				return jule::Str();
			}
		}
		_match_end_4388254064:;
	}
}



inline jule::Str _1c200553c_sbtoa(jule::U8 _11110_b) {
	if (_11110_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11110_b <= 127LL) {
		jule::Str _11713_seq = _1c200553c_decompose_common_esq(_11110_b);
		if (_11713_seq != jule::Str()) {
			return _11713_seq;
		}
		if ((32LL <= _11110_b) && (_11110_b <= 126LL)) {
			return static_cast<jule::Str>(_11110_b);
		}
	}
	jule::Str _1279_seq = _1da106db7_fmt_uint(static_cast<jule::U64>(_11110_b),8LL);
	if (_1279_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1279_seq;
	}
	return jule::Str("\\", 1) + _1279_seq;
}



inline jule::Str _1c200553c_get_cstr_model(jule::Slice<jule::U8> _13419_bytes) {
	jule::Str _13513_lit = jule::Str();
	{
		auto &expr = _13419_bytes;
		auto it = expr.begin();
		_iter_begin_4388272160:;
		if (it != expr.end()) {
			jule::U8 &_1c200553c_b = *it;
			{
				_13513_lit+=_1c200553c_sbtoa(_1c200553c_b);
			}
			_iter_next_4388272160:;
			++it;
			goto _iter_begin_4388272160;
		}
		_iter_end_4388272160:;
	}
	return (jule::Str("\"", 1) + _13513_lit) + jule::Str("\"", 1);
}



inline jule::Str _1c200553c_get_str_model(jule::Ptr<_1a8d46165_Const>& _14319_c) {
	jule::Str _1449_content = _14319_c->_method_read_str();
	if (_1449_content.len() == 0LL) {
		return _1a926bc61_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	jule::Slice<jule::U8> _1499_bytes = static_cast<jule::Slice<jule::U8>>(_1449_content);
	jule::Str _1509_len = _1da106db7_fmt_int(static_cast<jule::I64>(_1499_bytes.len()),10LL);
	jule::Str _1519_lit = _1c200553c_get_cstr_model(_1499_bytes);
	return ((((_1a926bc61_as_jt(jule::Str("str", 3)) + jule::Str("(", 1)) + _1519_lit) + jule::Str(", ", 2)) + _1509_len) + jule::Str(")", 1);
}



inline jule::Str _1c200553c_get_bool_model(jule::Ptr<_1a8d46165_Const>& _15520_c) {
	if (_15520_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1c200553c_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1c200553c_gen_float_special_cases(jule::F64& _16429_x) {
	{
		if (_1da23ca58_is_nan(_16429_x)) {
			_case_begin_4388286768:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1da23ca58_is_inf(_16429_x,1LL)) {
			_case_begin_4388286960:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1da23ca58_is_inf(_16429_x,-1LL)) {
			_case_begin_4388287056:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_4388285328:;
			{
				return jule::Str();
			}
		}
		_match_end_4388285152:;
	}
}



inline jule::Str _1c200553c_ftoa(jule::F64 _1739_f,jule::Int _17317_bitsize) {
	if (_17317_bitsize != 32LL) {
		if (_1739_f == static_cast<jule::F64>(static_cast<jule::I64>(_1739_f))) {
			return _1c200553c_i64toa(static_cast<jule::I64>(_1739_f));
		}
		if (_1739_f == static_cast<jule::F64>(static_cast<jule::U64>(_1739_f))) {
			return _1c200553c_u64toa(static_cast<jule::U64>(_1739_f));
		}
	}
	jule::Str _18313_m = _2037c5759_fmt_float(_1739_f,'f',-1LL,_17317_bitsize);
	if (_18313_m.find(jule::Str(".", 1)) == -1LL) {
		_18313_m+=jule::Str(".0", 2);
	}
	return _18313_m;
}



inline jule::Str _1c200553c_get_f32_model(jule::Ptr<_1a8d46165_Const>& _19019_c) {
	jule::F64 _1919_x = _19019_c->_method_as_f64();
	jule::Str _1949_f = _1c200553c_gen_float_special_cases(_1919_x);
	if (_1949_f != jule::Str()) {
		return _1949_f;
	}
	{
		if (_1919_x == 340282346638528860000000000000000000000.0) {
			_case_begin_4397754544:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if (_1919_x == -340282346638528860000000000000000000000.0) {
			_case_begin_4397754640:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		_match_end_4397754880:;
	}
	return _1c200553c_ftoa(_1919_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1c200553c_get_f64_model(jule::Ptr<_1a8d46165_Const>& _20719_c) {
	jule::F64 _2089_x = _20719_c->_method_as_f64();
	jule::Str _2119_f = _1c200553c_gen_float_special_cases(_2089_x);
	if (_2119_f != jule::Str()) {
		return _2119_f;
	}
	{
		if (_2089_x == jule::MAX_F64) {
			_case_begin_4397761024:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if (_2089_x == jule::MIN_F64) {
			_case_begin_4397761120:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		_match_end_4397761728:;
	}
	return _1c200553c_ftoa(_2089_x,64LL);
}



inline jule::Str _1c200553c_get_float_model(jule::Ptr<_1c1ead281_Data>& _22425_d) {
	{
		if (_22425_d->_field_kind->_method_prim()->_method_is_f32()) {
			_case_begin_4397767120:;
			{
				return _1c200553c_get_f32_model(_22425_d->_field_constant);
			}
		}
		else {
			_case_begin_4397764816:;
			{
				return _1c200553c_get_f64_model(_22425_d->_field_constant);
			}
		}
		_match_end_4397764320:;
	}
}



inline jule::Str _1c200553c_i64toa(jule::I64 _23111_x) {
	{
		if (_23111_x == jule::MAX_I64) {
			_case_begin_4397767536:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if (_23111_x == jule::MIN_I64) {
			_case_begin_4397767632:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_4397768464:;
	}
	jule::Str _2379_fmt = _1da106db7_fmt_int(_23111_x,10LL);
	if (_2052120b7_is_64bit(jule::Str("arm64", 5))) {
		return _2379_fmt + jule::Str("LL", 2);
	}
	return _2379_fmt + jule::Str("L", 1);
}



inline jule::Str _1c200553c_get_i64_model(jule::Ptr<_1a8d46165_Const>& _24419_c) {
	return _1c200553c_i64toa(static_cast<jule::I64>(_24419_c->_method_read_i64()));
}



inline jule::Str _1c200553c_u64toa(jule::U64 _24811_x) {
	{
		if (_24811_x == jule::MAX_U64) {
			_case_begin_4397772416:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_4397774880:;
	}
	jule::Str _2549_fmt = _1da106db7_fmt_uint(_24811_x,10LL);
	if (_2052120b7_is_64bit(jule::Str("arm64", 5))) {
		return _2549_fmt + jule::Str("LLU", 3);
	}
	return _2549_fmt + jule::Str("LU", 2);
}



inline jule::Str _1c200553c_get_u64_model(jule::Ptr<_1a8d46165_Const> _26118_c) {
	return _1c200553c_u64toa(static_cast<jule::U64>(_26118_c->_method_read_u64()));
}



inline jule::Str _1c200553c_gen_const_expr(jule::Ptr<_1c1ead281_Data> _26523_d) {
	{
		if (_26523_d->_field_constant->_method_is_str()) {
			_case_begin_4397784432:;
			{
				return _1c200553c_get_str_model(_26523_d->_field_constant);
			}
		}
		else if (_26523_d->_field_constant->_method_is_bool()) {
			_case_begin_4397784528:;
			{
				return _1c200553c_get_bool_model(_26523_d->_field_constant);
			}
		}
		else if (_26523_d->_field_constant->_method_is_f64()) {
			_case_begin_4397784624:;
			{
				return _1c200553c_get_float_model(_26523_d);
			}
		}
		else if (_26523_d->_field_constant->_method_is_i64()) {
			_case_begin_4397783808:;
			{
				return _1c200553c_get_i64_model(_26523_d->_field_constant);
			}
		}
		else if (_26523_d->_field_constant->_method_is_u64()) {
			_case_begin_4397783904:;
			{
				return _1c200553c_get_u64_model(_26523_d->_field_constant);
			}
		}
		else if (_26523_d->_field_constant->_method_is_nil()) {
			_case_begin_4397784000:;
			{
				return _1c200553c_get_nil_model();
			}
		}
		else {
			_case_begin_4397778928:;
			{
				return jule::Str();
			}
		}
		_match_end_4397780928:;
	}
}



inline jule::Str _1c200553c_gen_const_expr_model(jule::Ptr<_1a8d46165_Const> _27725_m) {
	{
		if (_27725_m->_method_is_str()) {
			_case_begin_4397795136:;
			{
				return _1c200553c_get_str_model(_27725_m);
			}
		}
		else if (_27725_m->_method_is_bool()) {
			_case_begin_4397795232:;
			{
				return _1c200553c_get_bool_model(_27725_m);
			}
		}
		else if (_27725_m->_method_is_f64()) {
			_case_begin_4397795328:;
			{
				return _1c200553c_get_f64_model(_27725_m);
			}
		}
		else if (_27725_m->_method_is_i64()) {
			_case_begin_4397794512:;
			{
				return _1c200553c_get_i64_model(_27725_m);
			}
		}
		else if (_27725_m->_method_is_u64()) {
			_case_begin_4397794608:;
			{
				return _1c200553c_get_u64_model(_27725_m);
			}
		}
		else if (_27725_m->_method_is_nil()) {
			_case_begin_4397794704:;
			{
				return _1c200553c_get_nil_model();
			}
		}
		else {
			_case_begin_4397785344:;
			{
				return jule::Str();
			}
		}
		_match_end_4397793600:;
	}
}



inline jule::Str _1c200553c_gen_div_by_zero_binop_expr_model(jule::Str _28937_op,jule::Any _28950_l,jule::Any _28968_r) {
	jule::Str _29013_op_func = jule::Str();
	{
		auto &_match_expr{ _28937_op };
		if (_match_expr == jule::Str("/", 1)) {
			_case_begin_4397804512:;
			{
				_29013_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_4397804608:;
			{
				_29013_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_4397804352:;
	}
	if (_1d9d89b4a_OPT_MATH) {
		{
			auto &_match_expr{ _28968_r };
			if (_match_expr.type_is<jule::Ptr<_1a8d46165_Const>>()) {
				_case_begin_4397805712:;
				{
					_29013_op_func=jule::Str("unsafe_", 7) + _29013_op_func;
				}
			}
			_match_end_4397807328:;
		}
	}
	jule::Str _30313_obj = jule::Str("jule::", 6);
	_30313_obj+=_29013_op_func;
	_30313_obj+=jule::Str("(", 1);
	_30313_obj+=_1c200553c_gen_expr(_28950_l);
	_30313_obj+=jule::Str(",", 1);
	_30313_obj+=_1c200553c_gen_expr(_28968_r);
	_30313_obj+=jule::Str(")", 1);
	return _30313_obj;
}



inline jule::Str _1c200553c_gen_binop_expr_model(jule::Ptr<_1c19727a1_BinopExprModel> _31329_m) {
	{
		auto &_match_expr{ _31329_m->_field_op };
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_4397811360:;
			{
				return _1c200553c_gen_div_by_zero_binop_expr_model(_31329_m->_field_op,_31329_m->_field_left,_31329_m->_field_right);
			}
		}
		_match_end_4397811280:;
	}
	jule::Str _32013_obj = jule::Str("(", 1);
	_32013_obj+=_1c200553c_gen_expr_model(_31329_m->_field_left);
	_32013_obj+=jule::Str(" ", 1);
	_32013_obj+=_31329_m->_field_op;
	_32013_obj+=jule::Str(" ", 1);
	_32013_obj+=_1c200553c_gen_expr_model(_31329_m->_field_right);
	_32013_obj+=jule::Str(")", 1);
	return _32013_obj;
}



inline jule::Str _1c200553c_gen_var_expr_model(jule::Ptr<_1c1b58316_Var> _33027_m) {
	if (_33027_m->_field_cpp_linked) {
		jule::Ptr<_1da7b8e5d_Directive> _33213_d = _1a9294b13_find_directive(_33027_m->_field_directives,jule::Str("namespace", 9));
		if (_33213_d != nullptr) {
			jule::Str _33421_obj = _1c200553c_concat_all_parts(_33213_d->_field_args);
			_33421_obj+=jule::Str("::", 2);
			_33421_obj+=_1a926bc61_var_out_ident(_33027_m);
			return _33421_obj;
		}
	}
	return _1a926bc61_var_out_ident(_33027_m);
}



inline jule::Str _1c200553c_gen_struct_expr_model(jule::Ptr<_1db4a7e59_Struct> _34326_m) {
	return _1a9294b13_gen_struct_kind(_34326_m);
}



inline jule::Str _1c200553c_gen_struct_ins_expr_model(jule::Ptr<_1db4a7e59_StructIns> _34734_m) {
	return _1a9294b13_gen_struct_kind_ins(_34734_m);
}



inline jule::Str _1c200553c_gen_unary_expr_model(jule::Ptr<_1c19727a1_UnaryExprModel> _35129_m) {
	if (_1d9d89b4a_OPT_PTR && (_35129_m->_field_op == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _35129_m->_field_expr };
			if (_match_expr.type_is<jule::Ptr<_1c19727a1_UnaryExprModel>>()) {
				_case_begin_4397824192:;
				{
					jule::Ptr<_1c19727a1_UnaryExprModel> _35521_um = _35129_m->_field_expr.operator jule::Ptr<_1c19727a1_UnaryExprModel>();
					if (_35521_um->_field_op == jule::Str("&", 1)) {
						return _1c200553c_gen_expr_model(_35521_um->_field_expr);
					}
				}
			}
			_match_end_4397825200:;
		}
	}
	{
		auto &_match_expr{ _35129_m->_field_op };
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_4397830432:;
			{
				jule::Str _36417_obj = jule::Str("(~(", 3);
				_36417_obj+=_1c200553c_gen_expr(_35129_m->_field_expr);
				_36417_obj+=jule::Str("))", 2);
				return _36417_obj;
			}
		}
		else {
			_case_begin_4397829008:;
			{
				jule::Str _37017_obj = jule::Str("(", 1);
				_37017_obj+=_35129_m->_field_op;
				_37017_obj+=jule::Str("(", 1);
				_37017_obj+=_1c200553c_gen_expr(_35129_m->_field_expr);
				_37017_obj+=jule::Str("))", 2);
				return _37017_obj;
			}
		}
		_match_end_4397828736:;
	}
}



inline jule::Str _1c200553c_gen_cpp_struct_lit_expr_model(jule::Ptr<_1c19727a1_StructLitExprModel> _37938_m) {
	jule::Str _38013_obj = jule::Str("(", 1) + _1a9294b13_gen_struct_kind_ins(_37938_m->_field_strct);
	_38013_obj+=jule::Str("){", 2);
	if (_37938_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _37938_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4397837104:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> _1c200553c_f = *it;
				{
					if (_37938_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &expr = _37938_m->_field_args;
							auto it = expr.begin();
							_iter_begin_4397839552:;
							if (it != expr.end()) {
								jule::Ptr<_1c19727a1_StructArgExprModel> _1c200553c_arg = *it;
								{
									if (_1c200553c_arg->_field_field == _1c200553c_f) {
										_38013_obj+=jule::Str(".", 1);
										_38013_obj+=_1a926bc61_field_out_ident(_1c200553c_f->_field_decl);
										_38013_obj+=jule::Str("=", 1);
										_38013_obj+=_1c200553c_gen_expr(_1c200553c_arg->_field_expr);
										_38013_obj+=jule::Str(",", 1);
										goto _iter_next_4397837104;
									}
								}
								_iter_next_4397839552:;
								++it;
								goto _iter_begin_4397839552;
							}
							_iter_end_4397839552:;
						}
						goto _iter_next_4397837104;
					}
					_38013_obj+=_1a926bc61_field_out_ident(_1c200553c_f->_field_decl);
					_38013_obj+=jule::Str(": ", 2);
					{
						auto &expr = _37938_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4397840320:;
						if (it != expr.end()) {
							jule::Ptr<_1c19727a1_StructArgExprModel> _1c200553c_arg = *it;
							{
								if (_1c200553c_arg->_field_field == _1c200553c_f) {
									_38013_obj+=_1c200553c_gen_expr(_1c200553c_arg->_field_expr);
									_38013_obj+=jule::Str(",", 1);
									goto _iter_next_4397837104;
								}
							}
							_iter_next_4397840320:;
							++it;
							goto _iter_begin_4397840320;
						}
						_iter_end_4397840320:;
					}
					_38013_obj+=_1c200553c_get_init_expr(_1c200553c_f->_field_kind);
					_38013_obj+=jule::Str(",", 1);
				}
				_iter_next_4397837104:;
				++it;
				goto _iter_begin_4397837104;
			}
			_iter_end_4397837104:;
		}
		_38013_obj=_38013_obj.slice(0LL,_38013_obj.len() - 1LL);
	}
	_38013_obj+=jule::Str("}", 1);
	return _38013_obj;
}



inline jule::Str _1c200553c_gen_struct_lit_expr_model(jule::Ptr<_1c19727a1_StructLitExprModel> _41734_m) {
	if (_41734_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1c200553c_gen_cpp_struct_lit_expr_model(_41734_m);
	}
	jule::Str _42213_obj = _1a926bc61_struct_ins_out_ident(_41734_m->_field_strct);
	_42213_obj+=jule::Str("(", 1);
	if (_41734_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _41734_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4397852560:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> _1c200553c_f = *it;
				{
					{
						auto &expr = _41734_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4397854080:;
						if (it != expr.end()) {
							jule::Ptr<_1c19727a1_StructArgExprModel> _1c200553c_arg = *it;
							{
								if (_1c200553c_arg->_field_field == _1c200553c_f) {
									_42213_obj+=_1c200553c_gen_expr(_1c200553c_arg->_field_expr);
									_42213_obj+=jule::Str(",", 1);
									goto _iter_next_4397852560;
								}
							}
							_iter_next_4397854080:;
							++it;
							goto _iter_begin_4397854080;
						}
						_iter_end_4397854080:;
					}
					_42213_obj+=_1c200553c_get_init_expr(_1c200553c_f->_field_kind);
					_42213_obj+=jule::Str(",", 1);
				}
				_iter_next_4397852560:;
				++it;
				goto _iter_begin_4397852560;
			}
			_iter_end_4397852560:;
		}
		_42213_obj=_42213_obj.slice(0LL,_42213_obj.len() - 1LL);
	}
	_42213_obj+=jule::Str(")", 1);
	return _42213_obj;
}



inline jule::Str _1c200553c_gen_alloc_struct_lit_expr_model(jule::Ptr<_1c19727a1_AllocStructLitExprModel> _44340_m) {
	jule::Str _44413_obj = jule::Str("jule::new_struct", 16);
	if (_44340_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_44413_obj+=jule::Str("_ptr", 4);
	}
	_44413_obj+=jule::Str("<", 1);
	_44413_obj+=_1a926bc61_struct_ins_out_ident(_44340_m->_field_lit->_field_strct);
	_44413_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_44413_obj+=_1c200553c_gen_struct_lit_expr_model(_44340_m->_field_lit);
	_44413_obj+=jule::Str(")", 1);
	return _44413_obj;
}



inline jule::Str _1c200553c_gen_casting_expr_model(jule::Ptr<_1c19727a1_CastingExprModel> _45631_m) {
	jule::Str _45713_obj = jule::Str();
	{
		if ((_45631_m->_field_kind->_method_prim() != nullptr) && _45631_m->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_4397866160:;
			{
				_45713_obj+=_1a9294b13_gen_type_kind(_45631_m->_field_kind);
				_45713_obj+=jule::Str("(", 1);
				_45713_obj+=_1c200553c_gen_expr_model(_45631_m->_field_expr);
				_45713_obj+=jule::Str(")", 1);
			}
		}
		else if (_45631_m->_field_expr_kind->_method_ptr() != nullptr || _45631_m->_field_kind->_method_ptr() != nullptr) {
			_case_begin_4397868352:;
			{
				_45713_obj+=jule::Str("((", 2);
				_45713_obj+=_1a9294b13_gen_type_kind(_45631_m->_field_kind);
				_45713_obj+=jule::Str(")(", 2);
				_45713_obj+=_1c200553c_gen_expr(_45631_m->_field_expr);
				_45713_obj+=jule::Str("))", 2);
			}
		}
		else if (_45631_m->_field_expr_kind->_method_trt() != nullptr || (_45631_m->_field_expr_kind->_method_prim() != nullptr) && _45631_m->_field_expr_kind->_method_prim()->_method_is_any()) {
			_case_begin_4397868448:;
			{
				_45713_obj+=_1c200553c_gen_expr_model(_45631_m->_field_expr);
				_45713_obj+=_1c200553c_get_accessor(_45631_m->_field_expr_kind);
				_45713_obj+=jule::Str("operator ", 9);
				_45713_obj+=_1a9294b13_gen_type_kind(_45631_m->_field_kind);
				_45713_obj+=jule::Str("()", 2);
			}
		}
		else {
			_case_begin_4397865360:;
			{
				_45713_obj+=jule::Str("static_cast<", 12);
				_45713_obj+=_1a9294b13_gen_type_kind(_45631_m->_field_kind);
				_45713_obj+=jule::Str(">(", 2);
				_45713_obj+=_1c200553c_gen_expr(_45631_m->_field_expr);
				_45713_obj+=jule::Str(")", 1);
			}
		}
		_match_end_4397865248:;
	}
	return _45713_obj;
}



inline jule::Str _1c200553c_gen_arg_expr_models(jule::Slice<jule::Any> _49128_models) {
	if (_49128_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _49613_obj = jule::Str();
	{
		auto &expr = _49128_models;
		auto it = expr.begin();
		_iter_begin_4397882080:;
		if (it != expr.end()) {
			jule::Any _1c200553c_m = *it;
			{
				_49613_obj+=_1c200553c_gen_expr(_1c200553c_m);
				_49613_obj+=jule::Str(",", 1);
			}
			_iter_next_4397882080:;
			++it;
			goto _iter_begin_4397882080;
		}
		_iter_end_4397882080:;
	}
	_49613_obj=_49613_obj.slice(0LL,_49613_obj.len() - 1LL);
	return _49613_obj;
}



inline jule::Str _1c200553c_gen_expr_model_for_call(jule::Any _50532_expr) {
	{
		auto &_match_expr{ _50532_expr };
		if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4388103552:;
			{
				return _1c200553c_gen_fn_ins_expr_model(_50532_expr.operator jule::Ptr<_1c17e2687_FnIns>());
			}
		}
		else {
			_case_begin_4397884544:;
			{
				return _1c200553c_gen_expr_model(_50532_expr);
			}
		}
		_match_end_4397883392:;
	}
}



inline jule::Str _1c200553c_gen_pure_fn_call_expr_model(jule::Ptr<_1c19727a1_FnCallExprModel>& _51237_m) {
	jule::Str _51313_obj = _1c200553c_gen_expr_model_for_call(_51237_m->_field_expr);
	if ((!(_51237_m->_field_func->_method_is_builtin()))) {
		if (_51237_m->_field_func->_field_decl->_field_cpp_linked && (_51237_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1a9294b13_has_directive(_51237_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_51313_obj+=jule::Str("<", 1);
				{
					auto &expr = _51237_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_4397892240:;
					if (it != expr.end()) {
						jule::Ptr<_1a8ad0a37_TypeKind> _1c200553c_g = *it;
						{
							_51313_obj+=_1a9294b13_gen_type_kind(_1c200553c_g);
							_51313_obj+=jule::Str(",", 1);
						}
						_iter_next_4397892240:;
						++it;
						goto _iter_begin_4397892240;
					}
					_iter_end_4397892240:;
				}
				_51313_obj=_51313_obj.slice(0LL,_51313_obj.len() - 1LL);
				_51313_obj+=jule::Str(">", 1);
			}
		}
	}
	_51313_obj+=jule::Str("(", 1);
	_51313_obj+=_1c200553c_gen_arg_expr_models(_51237_m->_field_args);
	_51313_obj+=jule::Str(")", 1);
	if (_51237_m->_field_is_co) {
		_51313_obj=jule::Str("__JULE_CO(", 10) + _51313_obj;
		_51313_obj+=jule::Str(")", 1);
	}
	return _51313_obj;
}



inline jule::Bool _1c200553c_is_forwarded(jule::Ptr<_1c197a248_Scope>& _53918_s) {
	jule::Any _5409_last = _53918_s->_field_stmts[_53918_s->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _5409_last };
		if (_match_expr.type_is<jule::Ptr<_1c1ead281_Data>>()) {
			_case_begin_4397901360:;
			{
				{
					auto &_match_expr{ _5409_last.operator jule::Ptr<_1c1ead281_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>()) {
						_case_begin_4397903728:;
						{
							return true;
						}
					}
					else {
						_case_begin_4397901488:;
						{
							return false;
						}
					}
					_match_end_4397902192:;
				}
			}
		}
		else {
			_case_begin_4397898400:;
			{
				return true;
			}
		}
		_match_end_4397899824:;
	}
}



inline jule::Bool _1c200553c_is_std_package(jule::Str _55619_f,jule::Str _55627_p) {
	return _55619_f.has_prefix(_20525e312_join(jule::Slice<jule::Str>({_205229b6d_PATH_STDLIB,_55627_p})));
}



inline jule::Str _1c200553c_gen_fn_call_expr_model(jule::Ptr<_1c19727a1_FnCallExprModel> _56031_m) {
	if (_1d9d89b4a_PRODUCTION) {
		if ((!(_56031_m->_field_func->_method_is_builtin())) && _1c200553c_is_std_package(_56031_m->_field_func->_field_decl->_field_token._field_file->_method_path(),jule::Str("debug", 5))) {
			return jule::Str();
		}
	}
	if ((_56031_m->_field_func->_method_is_builtin() || (!(_56031_m->_field_func->_field_decl->_field_exceptional))) || ((_56031_m->_field_except != nullptr) && (_56031_m->_field_except->_field_stmts.len() == 0LL))) {
		return _1c200553c_gen_pure_fn_call_expr_model(_56031_m);
	}
	jule::Str _57513_obj = jule::Str("({\n", 3);
	_1a92bc4dc_add_indent();
	_57513_obj+=_1a92bc4dc_indent();
	_57513_obj+=jule::Str("auto except = ", 14);
	_57513_obj+=_1c200553c_gen_pure_fn_call_expr_model(_56031_m);
	_57513_obj+=jule::Str(";\n", 2);
	_57513_obj+=_1a92bc4dc_indent();
	if (_56031_m->_field_except != nullptr) {
		if ((_56031_m->_field_func->_field_result == nullptr) || (!(_56031_m->_field_assigned))) {
			_57513_obj+=jule::Str("if (!except.ok()) ", 18);
			_57513_obj+=_1c1ed6320_gen_scope(_56031_m->_field_except);
			_57513_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _58817_forwarded = _1c200553c_is_forwarded(_56031_m->_field_except);
			_57513_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_58817_forwarded) {
				_57513_obj+=jule::Str("{", 1);
			}
			_57513_obj+=_1c1ed6320_gen_scope(_56031_m->_field_except);
			if (_58817_forwarded) {
				_57513_obj+=jule::Str(" ", 1);
				_57513_obj+=_1c200553c_get_init_expr(_56031_m->_field_func->_field_result);
				_57513_obj+=jule::Str(";}", 2);
			}
			_57513_obj+=jule::Str(");\n", 3);
		}
		_1a92bc4dc_done_indent();
	} else {
		jule::Str _60317_path = _1c200553c_get_cstr_model(static_cast<jule::Slice<jule::U8>>(_56031_m->_field_token._field_file->_method_path()));
		_60317_path=_60317_path.slice(1LL,_60317_path.len() - 1LL);
		_57513_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_57513_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_57513_obj+=_60317_path;
		_57513_obj+=jule::Str(":", 1);
		_57513_obj+=_1da106db7_itoa(_56031_m->_field_token._field_row);
		_57513_obj+=jule::Str(":", 1);
		_57513_obj+=_1da106db7_itoa(_56031_m->_field_token._field_column);
		_57513_obj+=jule::Str("\"));\n", 5);
		if ((!(_56031_m->_field_func->_field_decl->_method_is_void()))) {
			_57513_obj+=_1a92bc4dc_indent();
			_57513_obj+=jule::Str("(except.result);\n", 17);
		}
		_1a92bc4dc_done_indent();
	}
	_57513_obj+=_1a92bc4dc_indent();
	_57513_obj+=jule::Str("})", 2);
	return _57513_obj;
}



inline jule::Str _1c200553c_gen_slice_expr_model(jule::Ptr<_1c19727a1_SliceExprModel> _62629_m) {
	if (_62629_m->_field_elems.len() == 0LL) {
		return _1a9294b13_as_slice_kind(_62629_m->_field_elem_kind) + jule::Str("()", 2);
	}
	jule::Str _63113_obj = _1a9294b13_as_slice_kind(_62629_m->_field_elem_kind);
	_63113_obj+=jule::Str("({", 2);
	_63113_obj+=_1c200553c_gen_arg_expr_models(_62629_m->_field_elems);
	_63113_obj+=jule::Str("})", 2);
	return _63113_obj;
}



inline jule::Str _1c200553c_gen_indexing_expr_model(jule::Ptr<_1c19727a1_IndexigExprModel> _63832_m) {
	jule::Str _63913_obj = _1c200553c_gen_expr_model(_63832_m->_field_expr->_field_model);
	if (_1d9d89b4a_OPT_ACCESS) {
		jule::Bool _64313_array = _63832_m->_field_expr->_field_kind->_method_arr() != nullptr;
		if (_64313_array && _63832_m->_field_index->_method_is_const()) {
			_63913_obj+=jule::Str(".__at(", 6);
			_63913_obj+=_1c200553c_gen_expr(_63832_m->_field_index->_field_model);
			_63913_obj+=jule::Str(")", 1);
			return _63913_obj;
		}
		{
			auto &_match_expr{ _63832_m->_field_index->_field_model };
			if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
				_case_begin_4397939232:;
				{
					jule::Ptr<_1c1b58316_Var> _65517_i = _63832_m->_field_index->_field_model.operator jule::Ptr<_1c1b58316_Var>();
					if (_65517_i->_field_mutable || (_65517_i->_field_iter_relation == nullptr)) {
						goto _match_end_4397941664;
					}
					{
						auto &_match_expr{ _63832_m->_field_expr->_field_model };
						if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
							_case_begin_4397944496:;
							{
								jule::Ptr<_1c1b58316_Var> _66121_r = _63832_m->_field_expr->_field_model.operator jule::Ptr<_1c1b58316_Var>();
								if (_65517_i->_field_iter_relation->_field_range == _66121_r) {
									_63913_obj+=jule::Str(".__at(", 6);
									_63913_obj+=_1c200553c_gen_expr(_63832_m->_field_index->_field_model);
									_63913_obj+=jule::Str(")", 1);
									return _63913_obj;
								}
							}
						}
						_match_end_4397945312:;
					}
				}
			}
			_match_end_4397941664:;
		}
	}
	_63913_obj+=jule::Str("[", 1);
	_63913_obj+=_1c200553c_gen_expr(_63832_m->_field_index->_field_model);
	_63913_obj+=jule::Str("]", 1);
	return _63913_obj;
}



inline jule::Str _1c200553c_gen_anon_fn_expr_model(jule::Ptr<_1c19727a1_AnonFnExprModel> _68131_m) {
	jule::Str _68213_obj = _1a9294b13_gen_fn_kind(_68131_m->_field_func);
	_68213_obj+=jule::Str("([=]", 4);
	_68213_obj+=_1a92bc4dc_gen_params_ins(_68131_m->_field_func->_field_params);
	_68213_obj+=jule::Str(" mutable -> ", 12);
	_68213_obj+=_1a92bc4dc_gen_fn_ins_result(_68131_m->_field_func);
	_68213_obj+=jule::Str(" ", 1);
	_68213_obj+=_1c1ed6320_gen_fn_scope(_68131_m->_field_func);
	_68213_obj+=jule::Str(")", 1);
	return _68213_obj;
}



inline jule::Str _1c200553c_gen_map_expr_model(jule::Ptr<_1c19727a1_MapExprModel> _69327_m) {
	jule::Str _69413_obj = _1a926bc61_as_jt(jule::Str("map", 3));
	_69413_obj+=jule::Str("<", 1);
	_69413_obj+=_1a9294b13_gen_type_kind(_69327_m->_field_key_kind);
	_69413_obj+=jule::Str(",", 1);
	_69413_obj+=_1a9294b13_gen_type_kind(_69327_m->_field_val_kind);
	_69413_obj+=jule::Str(">({", 3);
	if (_69327_m->_field_entries.len() > 0LL) {
		{
			auto &expr = _69327_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_4397958720:;
			if (it != expr.end()) {
				jule::Ptr<_1c19727a1_KeyValPairExprModel> _1c200553c_pair = *it;
				{
					jule::Str _70221_pair_obj = jule::Str("{", 1);
					_70221_pair_obj+=_1c200553c_gen_expr(_1c200553c_pair->_field_key);
					_70221_pair_obj+=jule::Str(",", 1);
					_70221_pair_obj+=_1c200553c_gen_expr(_1c200553c_pair->_field_val);
					_70221_pair_obj+=jule::Str("}", 1);
					_69413_obj+=_70221_pair_obj;
					_69413_obj+=jule::Str(",", 1);
				}
				_iter_next_4397958720:;
				++it;
				goto _iter_begin_4397958720;
			}
			_iter_end_4397958720:;
		}
		_69413_obj=_69413_obj.slice(0LL,_69413_obj.len() - 1LL);
	}
	_69413_obj+=jule::Str("})", 2);
	return _69413_obj;
}



inline jule::Str _1c200553c_gen_slicing_expr_model(jule::Ptr<_1c19727a1_SlicingExprModel> _71631_m) {
	jule::Str _71713_obj = _1c200553c_gen_expr_model(_71631_m->_field_expr);
	_71713_obj+=jule::Str(".slice(", 7);
	_71713_obj+=_1c200553c_gen_expr(_71631_m->_field_left);
	if (_71631_m->_field_right != nullptr) {
		_71713_obj+=jule::Str(",", 1);
		_71713_obj+=_1c200553c_gen_expr(_71631_m->_field_right);
	}
	_71713_obj+=jule::Str(")", 1);
	return _71713_obj;
}



inline jule::Str _1c200553c_gen_trait_sub_ident_expr_model(jule::Ptr<_1c19727a1_TraitSubIdentExprModel> _72839_m) {
	jule::Str _72913_obj = _1c200553c_gen_expr_model(_72839_m->_field_expr);
	_72913_obj+=jule::Str(".get()._method_", 15);
	_72913_obj+=_72839_m->_field_ident;
	return _72913_obj;
}



inline jule::Str _1c200553c_gen_struct_sub_ident_expr_model(jule::Ptr<_1c19727a1_StructSubIdentExprModel> _73540_m) {
	jule::Str _73613_obj = _1c200553c_gen_expr_model(_73540_m->_field_expr);
	_73613_obj+=_1c200553c_get_accessor(_73540_m->_field_expr_kind);
	if (_73540_m->_field_field != nullptr) {
		_73613_obj+=_1a926bc61_field_out_ident(_73540_m->_field_field->_field_decl);
	} else {
		_73613_obj+=_1a926bc61_fn_ins_out_ident(_73540_m->_field_method);
	}
	return _73613_obj;
}



inline jule::Str _1c200553c_gen_common_ident_expr_model(jule::Ptr<_1c19727a1_CommonIdentExprModel> _74632_m) {
	return _74632_m->_field_ident;
}



inline jule::Str _1c200553c_gen_common_sub_ident_expr_model(jule::Ptr<_1c19727a1_CommonSubIdentExprModel> _75040_m) {
	jule::Str _75113_obj = _1c200553c_gen_expr_model(_75040_m->_field_expr);
	_75113_obj+=_1c200553c_get_accessor(_75040_m->_field_expr_kind);
	_75113_obj+=_75040_m->_field_ident;
	return _75113_obj;
}



inline jule::Str _1c200553c_gen_array_expr_model(jule::Ptr<_1c19727a1_ArrayExprModel> _75729_m) {
	if (_75729_m->_field_elems.len() == 0LL) {
		return _1a9294b13_gen_array_kind(_75729_m->_field_kind) + jule::Str("()", 2);
	}
	jule::Str _76213_obj = _1a9294b13_gen_array_kind(_75729_m->_field_kind);
	if ((_75729_m->_field_elems.len() == 2LL) && (_75729_m->_field_elems[1LL] == nullptr)) {
		_76213_obj+=jule::Str("(", 1);
		_76213_obj+=_1c200553c_gen_expr(_75729_m->_field_elems[0LL]);
		_76213_obj+=jule::Str(")", 1);
		return _76213_obj;
	}
	_76213_obj+=jule::Str("({", 2);
	_76213_obj+=_1c200553c_gen_arg_expr_models(_75729_m->_field_elems);
	_76213_obj+=jule::Str("})", 2);
	return _76213_obj;
}



inline jule::Str _1c200553c_gen_fn_ins_expr_model_common(jule::Ptr<_1c17e2687_FnIns> _78037_m) {
	jule::Str _78113_obj = _1a9294b13_gen_fn_kind(_78037_m);
	_78113_obj+=jule::Str("(", 1);
	_78113_obj+=_1c200553c_gen_fn_ins_expr_model(_78037_m);
	_78113_obj+=jule::Str(")", 1);
	return _78113_obj;
}



inline jule::Str _1c200553c_gen_fn_ins_expr_model(jule::Ptr<_1c17e2687_FnIns> _78930_m) {
	if ((_78930_m->_field_decl != nullptr) && _78930_m->_field_decl->_field_cpp_linked) {
		jule::Ptr<_1da7b8e5d_Directive> _79113_d = _1a9294b13_find_directive(_78930_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_79113_d != nullptr) {
			jule::Str _79321_obj = _1c200553c_concat_all_parts(_79113_d->_field_args);
			_79321_obj+=jule::Str("::", 2);
			_79321_obj+=_1a926bc61_fn_ins_out_ident(_78930_m);
			return _79321_obj;
		}
	}
	return _1a926bc61_fn_ins_out_ident(_78930_m);
}



inline jule::Str _1c200553c_gen_tuple_expr_model(jule::Ptr<_1c19727a1_TupleExprModel> _80229_m) {
	jule::Str _80313_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _80229_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_4397994224:;
		if (it != expr.end()) {
			jule::Ptr<_1c1ead281_Data> _1c200553c_d = *it;
			{
				_80313_obj+=_1c200553c_gen_expr(_1c200553c_d->_field_model);
				_80313_obj+=jule::Str(",", 1);
			}
			_iter_next_4397994224:;
			++it;
			goto _iter_begin_4397994224;
		}
		_iter_end_4397994224:;
	}
	_80313_obj=_80313_obj.slice(0LL,_80313_obj.len() - 1LL);
	_80313_obj+=jule::Str(")", 1);
	return _80313_obj;
}



inline jule::Str _1c200553c_gen_builtin_new_call_expr_model(jule::Ptr<_1c19727a1_BuiltinNewCallExprModel> _81340_m) {
	jule::Str _81413_obj = jule::Str("jule::new_ptr<", 14);
	_81413_obj+=_1a9294b13_gen_type_kind(_81340_m->_field_kind);
	_81413_obj+=jule::Str(">(", 2);
	if (_81340_m->_field_init != nullptr) {
		_81413_obj+=_1c200553c_gen_expr(_81340_m->_field_init);
	}
	_81413_obj+=jule::Str(")", 1);
	return _81413_obj;
}



inline jule::Str _1c200553c_gen_builtin_out_call_expr_model(jule::Ptr<_1c19727a1_BuiltinOutCallExprModel> _82440_m) {
	if (_82440_m->_field_debug && _1d9d89b4a_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82813_obj = jule::Str("jule::out(", 10);
	_82813_obj+=_1c200553c_gen_expr(_82440_m->_field_expr);
	_82813_obj+=jule::Str(")", 1);
	return _82813_obj;
}



inline jule::Str _1c200553c_gen_builtin_outln_call_expr_model(jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel> _83442_m) {
	if (_83442_m->_field_debug && _1d9d89b4a_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83813_obj = jule::Str("jule::outln(", 12);
	_83813_obj+=_1c200553c_gen_expr(_83442_m->_field_expr);
	_83813_obj+=jule::Str(")", 1);
	return _83813_obj;
}



inline jule::Str _1c200553c_gen_builtin_panic_call_expr_model(jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel> _84442_m) {
	jule::Str _84513_path = _1c200553c_get_cstr_model(static_cast<jule::Slice<jule::U8>>(_84442_m->_field_token._field_file->_method_path()));
	_84513_path=_84513_path.slice(1LL,_84513_path.len() - 1LL);
	jule::Str _84813_obj = jule::Str("jule::panic(", 12);
	_84813_obj+=_1c200553c_gen_expr(_84442_m->_field_expr);
	_84813_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_84813_obj+=_84513_path;
	_84813_obj+=jule::Str(":", 1);
	_84813_obj+=_1da106db7_itoa(_84442_m->_field_token._field_row);
	_84813_obj+=jule::Str(":", 1);
	_84813_obj+=_1da106db7_itoa(_84442_m->_field_token._field_column);
	_84813_obj+=jule::Str("\"));", 4);
	return _84813_obj;
}



inline jule::Str _1c200553c_gen_builtin_assert_call_expr_model(jule::Ptr<_1c19727a1_BuiltinAssertCallExprModel> _86043_m) {
	if (_1d9d89b4a_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _86413_path = _1c200553c_get_cstr_model(static_cast<jule::Slice<jule::U8>>(_86043_m->_field_token._field_file->_method_path()));
	_86413_path=_86413_path.slice(1LL,_86413_path.len() - 1LL);
	jule::Str _86713_obj = jule::Str("if (!(", 6);
	_86713_obj+=_1c200553c_gen_expr(_86043_m->_field_expr);
	_86713_obj+=jule::Str(")) jule::panic(jule::Str(\"assertion failed\\nlocation: ", 54);
	_86713_obj+=_86413_path;
	_86713_obj+=jule::Str(":", 1);
	_86713_obj+=_1da106db7_itoa(_86043_m->_field_token._field_row);
	_86713_obj+=jule::Str(":", 1);
	_86713_obj+=_1da106db7_itoa(_86043_m->_field_token._field_column);
	_86713_obj+=jule::Str("\"));", 4);
	return _86713_obj;
}



inline jule::Str _1c200553c_gen_builtin_error_call_expr_model(jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel> _87942_m) {
	jule::Str _88013_obj = jule::Str("return ", 7);
	if (_87942_m->_field_func->_field_decl->_method_is_void()) {
		_88013_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_88013_obj+=jule::Str("jule::Exceptional<", 18);
		_88013_obj+=_1a9294b13_gen_type_kind(_87942_m->_field_func->_field_result);
		_88013_obj+=jule::Str(">(", 2);
	}
	_88013_obj+=_1c200553c_gen_expr(_87942_m->_field_err);
	_88013_obj+=jule::Str(")", 1);
	return _88013_obj;
}



inline jule::Str _1c200553c_gen_builtin_make_call_expr_model(jule::Ptr<_1c19727a1_BuiltinMakeCallExprModel> _89341_m) {
	jule::Str _89413_obj = jule::Str();
	if (_89341_m->_field_len != nullptr) {
		_89413_obj+=_1c200553c_gen_expr(_89341_m->_field_len);
	} else {
		_89413_obj+=jule::Str("0", 1);
	}
	if (_89341_m->_field_cap != nullptr) {
		_89413_obj+=jule::Str(",", 1) + _1c200553c_gen_expr(_89341_m->_field_cap);
	}
	if (_89341_m->_field_kind->_method_slc()->_field_elem->_method_enm() != nullptr) {
		_89413_obj+=jule::Str(",", 1);
		_89413_obj+=_1c200553c_get_init_expr(_89341_m->_field_kind->_method_slc()->_field_elem);
		if (_89341_m->_field_cap != nullptr) {
			_89413_obj=(_1a9294b13_gen_type_kind(_89341_m->_field_kind) + jule::Str("::alloc(", 8)) + _89413_obj;
		} else {
			_89413_obj=(_1a9294b13_gen_type_kind(_89341_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _89413_obj;
		}
	} else {
		_89413_obj=(_1a9294b13_gen_type_kind(_89341_m->_field_kind) + jule::Str("::alloc(", 8)) + _89413_obj;
	}
	_89413_obj+=jule::Str(")", 1);
	return _89413_obj;
}



inline jule::Str _1c200553c_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _9215_same_dest,jule::Str& _9226_dest_expr,jule::Ptr<_1a8ad0a37_TypeKind>& _92310_dest_kind,jule::Ptr<_1c19727a1_SliceExprModel>& _92410_s,jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>& _92510_m) {
	jule::Str _92613_obj = jule::Str();
	if ((!(_9215_same_dest))) {
		_92613_obj+=_9226_dest_expr;
		_92613_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_92613_obj+=_1c200553c_gen_expr_model(_92510_m->_field_dest);
		_92613_obj+=jule::Str(",", 1);
		_92613_obj+=_1da106db7_itoa(static_cast<jule::I64>(_92410_s->_field_elems.len()));
		_92613_obj+=jule::Str(");", 2);
	}
	{
		auto &expr = _92410_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4398044080:;
		if (it != expr.end()) {
			jule::Any _1c200553c_e = *it;
			{
				_92613_obj+=_9226_dest_expr;
				_92613_obj+=_1c200553c_get_accessor(_92310_dest_kind);
				_92613_obj+=jule::Str("push(", 5);
				_92613_obj+=_1c200553c_gen_expr_model(_1c200553c_e);
				_92613_obj+=jule::Str(");", 2);
			}
			_iter_next_4398044080:;
			++it;
			goto _iter_begin_4398044080;
		}
		_iter_end_4398044080:;
	}
	return _92613_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1c200553c_gen_builtin_append_call_expr_model_assign(jule::Any _94550_dest,jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel> _94571_m) {
	jule::Bool _945110_optimized = jule::Bool();
	{
		auto &_match_expr{ _94571_m->_field_elements };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_SliceExprModel>>()) {
			_case_begin_4398046816:;
			{
				{
					auto &_match_expr{ _94550_dest };
					if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
						_case_begin_4398048048:;
						{
							jule::Ptr<_1c19727a1_SliceExprModel> _95021_s = _94571_m->_field_elements.operator jule::Ptr<_1c19727a1_SliceExprModel>();
							jule::Str _95117_dest_expr = _1c200553c_gen_expr_model(_94550_dest);
							jule::Ptr<_1c1b58316_Var> _95221_dest_var = _94550_dest.operator jule::Ptr<_1c1b58316_Var>();
							jule::Bool _95317_same_dest = _94571_m->_field_dest == _95221_dest_var;
							_945110_optimized = true;
							return std::make_tuple(_1c200553c_gen_builtin_append_call_expr_model_assign_opt(_95317_same_dest,_95117_dest_expr,_95221_dest_var->_field_kind->_field_kind,_95021_s,_94571_m),_945110_optimized);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructSubIdentExprModel>>()) {
						_case_begin_4398049520:;
						{
							jule::Ptr<_1c19727a1_SliceExprModel> _95821_s = _94571_m->_field_elements.operator jule::Ptr<_1c19727a1_SliceExprModel>();
							jule::Str _95917_dest_expr = _1c200553c_gen_expr_model(_94550_dest);
							jule::Ptr<_1db4a7e59_FieldIns> _96021_dest_field = _94550_dest.operator jule::Ptr<_1c19727a1_StructSubIdentExprModel>()->_field_field;
							jule::Bool _96117_same_dest = _94571_m->_field_dest == _96021_dest_field;
							_945110_optimized = true;
							return std::make_tuple(_1c200553c_gen_builtin_append_call_expr_model_assign_opt(_96117_same_dest,_95917_dest_expr,_96021_dest_field->_field_kind,_95821_s,_94571_m),_945110_optimized);
						}
					}
					_match_end_4398049232:;
				}
			}
		}
		_match_end_4398047968:;
	}
	_945110_optimized = false;
	return std::make_tuple(_1c200553c_gen_builtin_append_call_expr_model(_94571_m),_945110_optimized);
}



inline jule::Str _1c200553c_gen_builtin_append_call_expr_model(jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel> _97043_m) {
	jule::Str _97113_obj = jule::Str("jule::append(", 13);
	_97113_obj+=_1c200553c_gen_expr_model(_97043_m->_field_dest);
	_97113_obj+=jule::Str(",", 1);
	_97113_obj+=_1c200553c_gen_expr_model(_97043_m->_field_elements);
	_97113_obj+=jule::Str(")", 1);
	return _97113_obj;
}



inline jule::Str _1c200553c_gen_builtin_clone_call_expr_model(jule::Ptr<_1c19727a1_BuiltinCloneCallExprModel> _97942_m) {
	jule::Str _98013_obj = jule::Str("jule::clone(", 12);
	_98013_obj+=_1c200553c_gen_expr_model(_97942_m->_field_expr);
	_98013_obj+=jule::Str(")", 1);
	return _98013_obj;
}



inline jule::Str _1c200553c_gen_sizeof_expr_model(jule::Ptr<_1c19727a1_SizeofExprModel> _98630_m) {
	jule::Str _98713_obj = jule::Str("sizeof(", 7);
	_98713_obj+=_1c200553c_gen_expr(_98630_m->_field_expr);
	_98713_obj+=jule::Str(")", 1);
	return _98713_obj;
}



inline jule::Str _1c200553c_gen_alignof_expr_model(jule::Ptr<_1c19727a1_AlignofExprModel> _99331_m) {
	jule::Str _99413_obj = jule::Str("alignof(", 8);
	_99413_obj+=_1c200553c_gen_expr(_99331_m->_field_expr);
	_99413_obj+=jule::Str(")", 1);
	return _99413_obj;
}



inline jule::Str _1c200553c_gen_rune_expr_model(jule::Ptr<_1c19727a1_RuneExprModel> _100024_m) {
	if (_100024_m->_field_code <= 127LL) {
		jule::Str _100217_b = _1c200553c_sbtoa(static_cast<jule::U8>(_100024_m->_field_code));
		if (_100217_b == jule::Str("'", 1)) {
			_100217_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _100217_b) + jule::Str("'", 1);
	}
	return _1c200553c_i64toa(static_cast<jule::I64>(_100024_m->_field_code));
}



inline jule::Str _1c200553c_gen_struct_static_ident_expr_model(jule::Ptr<_1c19727a1_StructStaticIdentExprModel> _101143_m) {
	jule::Str _101213_obj = _1a926bc61_struct_ins_out_ident(_101143_m->_field_structure);
	_101213_obj+=jule::Str("::", 2);
	_101213_obj+=_1a926bc61_fn_ins_out_ident(_101143_m->_field_method);
	return _101213_obj;
}



inline jule::Str _1c200553c_gen_integrated_to_str_expr_model(jule::Ptr<_1c19727a1_IntegratedToStrExprModel> _101841_m) {
	jule::Str _101913_obj = jule::Str("jule::to_str(", 13);
	_101913_obj+=_1c200553c_gen_expr_model(_101841_m->_field_expr);
	_101913_obj+=jule::Str(")", 1);
	return _101913_obj;
}



inline jule::Str _1c200553c_gen_ternary_expr_model(jule::Ptr<_1c19727a1_TernaryExprModel> _102531_m) {
	jule::Str _102613_obj = jule::Str("((", 2);
	_102613_obj+=_1c200553c_gen_expr_model(_102531_m->_field_condition);
	_102613_obj+=jule::Str(") ? (", 5);
	_102613_obj+=_1c200553c_gen_expr_model(_102531_m->_field_true_expr);
	_102613_obj+=jule::Str(") : (", 5);
	_102613_obj+=_1c200553c_gen_expr_model(_102531_m->_field_false_expr);
	_102613_obj+=jule::Str("))", 2);
	return _102613_obj;
}



inline jule::Str _1c200553c_gen_backend_emit_expr_model(jule::Ptr<_1c19727a1_BackendEmitExprModel> _103636_m) {
	return _103636_m->_field_code;
}



inline jule::Str _1c200553c_gen_expr_model(jule::Any _104023_m) {
	{
		auto &_match_expr{ _104023_m };
		if (_match_expr.type_is<jule::Ptr<_1a8ad0a37_TypeKind>>()) {
			_case_begin_4398091456:;
			{
				return _1a9294b13_gen_type_kind(_104023_m.operator jule::Ptr<_1a8ad0a37_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d46165_Const>>()) {
			_case_begin_4398091008:;
			{
				return _1c200553c_gen_const_expr_model(_104023_m.operator jule::Ptr<_1a8d46165_Const>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1b58316_Var>>()) {
			_case_begin_4398091104:;
			{
				return _1c200553c_gen_var_expr_model(_104023_m.operator jule::Ptr<_1c1b58316_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c196b2a0_Trait>>()) {
			_case_begin_4398091200:;
			{
				return _1a926bc61_trait_out_ident(_104023_m.operator jule::Ptr<_1c196b2a0_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_Struct>>()) {
			_case_begin_4398090640:;
			{
				return _1c200553c_gen_struct_expr_model(_104023_m.operator jule::Ptr<_1db4a7e59_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1db4a7e59_StructIns>>()) {
			_case_begin_4398090736:;
			{
				return _1c200553c_gen_struct_ins_expr_model(_104023_m.operator jule::Ptr<_1db4a7e59_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c17e2687_FnIns>>()) {
			_case_begin_4398090832:;
			{
				return _1c200553c_gen_fn_ins_expr_model_common(_104023_m.operator jule::Ptr<_1c17e2687_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BinopExprModel>>()) {
			_case_begin_4398090144:;
			{
				return _1c200553c_gen_binop_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_UnaryExprModel>>()) {
			_case_begin_4398090240:;
			{
				return _1c200553c_gen_unary_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructLitExprModel>>()) {
			_case_begin_4398090336:;
			{
				return _1c200553c_gen_struct_lit_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_AllocStructLitExprModel>>()) {
			_case_begin_4398090432:;
			{
				return _1c200553c_gen_alloc_struct_lit_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_CastingExprModel>>()) {
			_case_begin_4398092272:;
			{
				return _1c200553c_gen_casting_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_FnCallExprModel>>()) {
			_case_begin_4398092368:;
			{
				return _1c200553c_gen_fn_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_SliceExprModel>>()) {
			_case_begin_4398092464:;
			{
				return _1c200553c_gen_slice_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_ArrayExprModel>>()) {
			_case_begin_4398092560:;
			{
				return _1c200553c_gen_array_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_IndexigExprModel>>()) {
			_case_begin_4398092672:;
			{
				return _1c200553c_gen_indexing_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_IndexigExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_AnonFnExprModel>>()) {
			_case_begin_4398092784:;
			{
				return _1c200553c_gen_anon_fn_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_MapExprModel>>()) {
			_case_begin_4398092896:;
			{
				return _1c200553c_gen_map_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_SlicingExprModel>>()) {
			_case_begin_4398093008:;
			{
				return _1c200553c_gen_slicing_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_TraitSubIdentExprModel>>()) {
			_case_begin_4398093120:;
			{
				return _1c200553c_gen_trait_sub_ident_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructSubIdentExprModel>>()) {
			_case_begin_4398093232:;
			{
				return _1c200553c_gen_struct_sub_ident_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_CommonIdentExprModel>>()) {
			_case_begin_4398093344:;
			{
				return _1c200553c_gen_common_ident_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_CommonSubIdentExprModel>>()) {
			_case_begin_4398093456:;
			{
				return _1c200553c_gen_common_sub_ident_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_TupleExprModel>>()) {
			_case_begin_4398093568:;
			{
				return _1c200553c_gen_tuple_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>>()) {
			_case_begin_4398093680:;
			{
				return _1c200553c_gen_builtin_out_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel>>()) {
			_case_begin_4398093792:;
			{
				return _1c200553c_gen_builtin_outln_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinNewCallExprModel>>()) {
			_case_begin_4398093904:;
			{
				return _1c200553c_gen_builtin_new_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>>()) {
			_case_begin_4398094016:;
			{
				return _1c200553c_gen_builtin_panic_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinAssertCallExprModel>>()) {
			_case_begin_4398094128:;
			{
				return _1c200553c_gen_builtin_assert_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>>()) {
			_case_begin_4398094240:;
			{
				return _1c200553c_gen_builtin_error_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinMakeCallExprModel>>()) {
			_case_begin_4398094352:;
			{
				return _1c200553c_gen_builtin_make_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>>()) {
			_case_begin_4398094464:;
			{
				return _1c200553c_gen_builtin_append_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BuiltinCloneCallExprModel>>()) {
			_case_begin_4398094576:;
			{
				return _1c200553c_gen_builtin_clone_call_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_SizeofExprModel>>()) {
			_case_begin_4398094688:;
			{
				return _1c200553c_gen_sizeof_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_AlignofExprModel>>()) {
			_case_begin_4398094800:;
			{
				return _1c200553c_gen_alignof_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_RuneExprModel>>()) {
			_case_begin_4398094912:;
			{
				return _1c200553c_gen_rune_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_StructStaticIdentExprModel>>()) {
			_case_begin_4398095024:;
			{
				return _1c200553c_gen_struct_static_ident_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_IntegratedToStrExprModel>>()) {
			_case_begin_4398095136:;
			{
				return _1c200553c_gen_integrated_to_str_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_TernaryExprModel>>()) {
			_case_begin_4398095248:;
			{
				return _1c200553c_gen_ternary_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_TernaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c19727a1_BackendEmitExprModel>>()) {
			_case_begin_4398095360:;
			{
				return _1c200553c_gen_backend_emit_expr_model(_104023_m.operator jule::Ptr<_1c19727a1_BackendEmitExprModel>());
			}
		}
		else {
			_case_begin_4398089184:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_4398088032:;
	}
}



inline jule::Str _1c200553c_gen_expr(jule::Any _116717_e) {
	jule::Str _116813_obj = _1c200553c_gen_expr_model(_116717_e);
	if ((_116813_obj.len() == 0LL) || (_116813_obj[0LL] != '(')) {
		return _116813_obj;
	}
	{
		auto &_match_expr{ _116717_e };
		if (_match_expr.type_is<jule::Ptr<_1c19727a1_BinopExprModel>>()) {
			_case_begin_4398156304:;
			{
				_116813_obj=_116813_obj.slice(1LL,_116813_obj.len() - 1LL);
			}
		}
		_match_end_4398156544:;
	}
	return _116813_obj;
}



inline jule::Str _1c200553c_gen_val(jule::Ptr<_1c1ead281_Value> _118016_v) {
	if (_118016_v->_field_data->_method_is_const()) {
		return _1c200553c_gen_const_expr(_118016_v->_field_data);
	}
	return _1c200553c_gen_expr(_118016_v->_field_data->_field_model);
}



inline jule::Str _1c200553c_get_init_expr(jule::Ptr<_1a8ad0a37_TypeKind> _118722_t) {
	if (_118722_t->_method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1c196c834_Enum> _119213_enm = _118722_t->_method_enm();
	if (_119213_enm != nullptr) {
		return _1c200553c_gen_val(_119213_enm->_field_items[0LL]->_field_value);
	}
	return _1a9294b13_gen_type_kind(_118722_t) + jule::Str("()", 2);
}



inline jule::Str _1a926b546_get_derive_fn_decl_clone(jule::Ptr<_1db4a7e59_Struct>& _730_s) {
	jule::Str _813_obj = _1a9294b13_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1a926b546_get_derive_fn_def_clone(jule::Ptr<_1db4a7e59_Struct>& _1329_s) {
	jule::Str _1413_obj = _1a9294b13_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1a926bc61_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1a926bc61_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1a926bc61_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1da106db7_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1a926bc61_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _1a926bc61_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _1a926bc61_as_ident(_4517_ident);
}



inline jule::Str _1a926bc61_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _1da106db7_itoa(_6119_row);
	_6213_obj+=_1da106db7_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _1a926bc61_as_ident(_6213_obj);
}



inline jule::Str _1a926bc61_fn_out_ident(jule::Ptr<_1c17e2687_Fn>& _7018_f) {
	{
		if (_7018_f->_field_cpp_linked) {
			_case_begin_4398186368:;
			{
				return _7018_f->_field_ident;
			}
		}
		else if (_7018_f->_field_ident == jule::Str("main", 4)) {
			_case_begin_4398184848:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_7018_f->_method_is_method()) {
			_case_begin_4398185216:;
			{
				if (_7018_f->_field_statically) {
					return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
				}
				return jule::Str("_method_", 8) + _7018_f->_field_ident;
			}
		}
		else {
			_case_begin_4398183472:;
			{
				return _1a926bc61_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
			}
		}
		_match_end_4398183296:;
	}
}



inline jule::Str _1a926bc61_fn_ins_out_ident(jule::Ptr<_1c17e2687_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _1a926bc61_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto &expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398191264:;
		if (it != expr.end()) {
			jule::Int _1a926bc61_i = it - expr.begin();
			jule::Ptr<_1c17e2687_FnIns> _1a926bc61_ins = *it;
			{
				if (_1a926bc61_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _1a926bc61_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_1da106db7_itoa(_1a926bc61_i);
					return _10121_obj;
				}
			}
			_iter_next_4398191264:;
			++it;
			_1a926bc61_i++;
			goto _iter_begin_4398191264;
		}
		_iter_end_4398191264:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a926bc61_trait_out_ident(jule::Ptr<_1c196b2a0_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _1a926bc61_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1a926bc61_param_out_ident(jule::Ptr<_1c17e2687_Param>& _12021_p) {
	if (_1da81133a_is_anon_ident(_12021_p->_field_ident) || _1da81133a_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _1a926bc61_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



inline jule::Str _1a926bc61_struct_out_ident(jule::Ptr<_1db4a7e59_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_1a9294b13_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _1a926bc61_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1a926bc61_struct_ins_out_ident(jule::Ptr<_1db4a7e59_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _1a926bc61_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto &expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398207408:;
		if (it != expr.end()) {
			jule::Int _1a926bc61_i = it - expr.begin();
			jule::Ptr<_1db4a7e59_StructIns> _1a926bc61_ins = *it;
			{
				if (_1a926bc61_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _1a926bc61_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_1da106db7_itoa(_1a926bc61_i);
					return _14621_obj;
				}
			}
			_iter_next_4398207408:;
			++it;
			_1a926bc61_i++;
			goto _iter_begin_4398207408;
		}
		_iter_end_4398207408:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a926bc61_field_out_ident(jule::Ptr<_1db4a7e59_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



inline jule::Str _1a926bc61_var_out_ident(jule::Ptr<_1c1b58316_Var> _16522_v) {
	{
		if (_16522_v->_field_cpp_linked) {
			_case_begin_4398219024:;
			{
				return _16522_v->_field_ident;
			}
		}
		else if (_16522_v->_field_ident == jule::Str("error", 5)) {
			_case_begin_4398218000:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if (_16522_v->_field_ident == jule::Str("self", 4)) {
			_case_begin_4398218240:;
			{
				if (_16522_v->_field_kind->_field_kind->_method_sptr() != nullptr) {
					return jule::Str("this->self", 10);
				}
				return jule::Str("(*this)", 7);
			}
		}
		else if (_16522_v->_field_scope != nullptr) {
			_case_begin_4398217632:;
			{
				return _1a926bc61_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
			}
		}
		else {
			_case_begin_4398215056:;
			{
				return _1a926bc61_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
			}
		}
		_match_end_4398215952:;
	}
}



inline jule::Str _1a926bc61_iter_begin_label_ident(jule::Uintptr _18827_it) {
	return jule::Str("_iter_begin_", 12) + _1da106db7_itoa(static_cast<jule::Int>(_18827_it));
}



inline jule::Str _1a926bc61_iter_end_label_ident(jule::Uintptr _19325_it) {
	return jule::Str("_iter_end_", 10) + _1da106db7_itoa(static_cast<jule::Int>(_19325_it));
}



inline jule::Str _1a926bc61_iter_next_label_ident(jule::Uintptr _19826_it) {
	return jule::Str("_iter_next_", 11) + _1da106db7_itoa(static_cast<jule::Int>(_19826_it));
}



inline jule::Str _1a926bc61_label_ident(jule::Str _20316_ident) {
	return jule::Str("_julec_label_", 13) + _20316_ident;
}



inline jule::Str _1a926bc61_match_end_label_ident(jule::Uintptr _20826_m) {
	return jule::Str("_match_end_", 11) + _1da106db7_itoa(static_cast<jule::Int>(_20826_m));
}



inline jule::Str _1a926bc61_case_begin_label_ident(jule::Uintptr _21327_c) {
	return jule::Str("_case_begin_", 12) + _1da106db7_itoa(static_cast<jule::Int>(_21327_c));
}



inline jule::Ptr<_1da7b8e5d_Directive> _1a9294b13_find_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>& _2524_directives,jule::Str _2555_tag) {
	{
		auto &expr = _2524_directives;
		auto it = expr.begin();
		_iter_begin_4398233104:;
		if (it != expr.end()) {
			jule::Ptr<_1da7b8e5d_Directive> _1a9294b13_dr = *it;
			{
				if (_1a9294b13_dr->_field_tag._field_kind == _2555_tag) {
					return _1a9294b13_dr;
				}
			}
			_iter_next_4398233104:;
			++it;
			goto _iter_begin_4398233104;
		}
		_iter_end_4398233104:;
	}
	return nullptr;
}



inline jule::Bool _1a9294b13_has_directive(jule::Slice<jule::Ptr<_1da7b8e5d_Directive>>& _3519_directives,jule::Str _3550_tag) {
	return _1a9294b13_find_directive(_3519_directives,_3550_tag) != nullptr;
}



inline jule::Str _1a9294b13_gen_prim_kind(jule::Ptr<_1a8ad0a37_Prim> _4018_p) {
	return _1a926bc61_as_jt(_4018_p->_method_to_str());
}



inline jule::Str _1a9294b13_gen_tuple_kind(jule::Ptr<_1a8ad0a37_Tuple> _4523_t) {
	jule::Str _4613_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _4523_t->_field_types;
		auto it = expr.begin();
		_iter_begin_4398237520:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ad0a37_TypeKind> _1a9294b13_tk = *it;
			{
				_4613_obj+=_1a9294b13_gen_type_kind(_1a9294b13_tk);
				_4613_obj+=jule::Str(",", 1);
			}
			_iter_next_4398237520:;
			++it;
			goto _iter_begin_4398237520;
		}
		_iter_end_4398237520:;
	}
	_4613_obj=_4613_obj.slice(0LL,_4613_obj.len() - 1LL);
	_4613_obj+=jule::Str(">", 1);
	return _4613_obj;
}



inline jule::Str _1a9294b13_as_sptr_kind(jule::Str _5717_elem) {
	jule::Str _5813_obj = _1a926bc61_as_jt(jule::Str("ptr", 3));
	_5813_obj+=jule::Str("<", 1);
	_5813_obj+=_5717_elem;
	_5813_obj+=jule::Str(">", 1);
	return _5813_obj;
}



inline jule::Str _1a9294b13_gen_sptr_kind(jule::Ptr<_1a8ad0a37_Sptr> _6622_sptr) {
	return _1a9294b13_as_sptr_kind(_1a9294b13_gen_type_kind(_6622_sptr->_field_elem));
}



inline jule::Str _1a9294b13_gen_ptr_kind(jule::Ptr<_1a8ad0a37_Ptr> _7121_p) {
	
	if (_7121_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _7713_elem = _1a9294b13_gen_type_kind(_7121_p->_field_elem);
	_7713_elem+=jule::Str("*", 1);
	return _7713_elem;
}



inline jule::Str _1a9294b13_gen_enum_kind(jule::Ptr<_1c196c834_Enum> _8322_e) {
	return _1a9294b13_gen_type_kind(_8322_e->_field_kind->_field_kind);
}



inline jule::Str _1a9294b13_as_slice_kind(jule::Ptr<_1a8ad0a37_TypeKind> _8722_elem) {
	jule::Str _8813_obj = _1a926bc61_as_jt(jule::Str("slice", 5));
	_8813_obj+=jule::Str("<", 1);
	_8813_obj+=_1a9294b13_gen_type_kind(_8722_elem);
	_8813_obj+=jule::Str(">", 1);
	return _8813_obj;
}



inline jule::Str _1a9294b13_gen_slice_kind(jule::Ptr<_1a8ad0a37_Slc> _9623_s) {
	return _1a9294b13_as_slice_kind(_9623_s->_field_elem);
}



inline jule::Str _1a9294b13_gen_map_kind(jule::Ptr<_1a8ad0a37_Map> _10121_m) {
	jule::Str _10213_obj = _1a926bc61_as_jt(jule::Str("map", 3));
	_10213_obj+=jule::Str("<", 1);
	_10213_obj+=_1a9294b13_gen_type_kind(_10121_m->_field_key);
	_10213_obj+=jule::Str(",", 1);
	_10213_obj+=_1a9294b13_gen_type_kind(_10121_m->_field_val);
	_10213_obj+=jule::Str(">", 1);
	return _10213_obj;
}



inline jule::Str _1a9294b13_gen_trait_kind_from_ident(jule::Str _11130_ident) {
	jule::Str _11213_obj = _1a926bc61_as_jt(jule::Str("trait", 5));
	_11213_obj+=jule::Str("<", 1);
	_11213_obj+=_11130_ident;
	_11213_obj+=jule::Str(">", 1);
	return _11213_obj;
}



inline jule::Str _1a9294b13_gen_trait_kind(jule::Ptr<_1c196b2a0_Trait> _12019_t) {
	jule::Str _1219_ident = _1a926bc61_trait_out_ident(_12019_t);
	return _1a9294b13_gen_trait_kind_from_ident(_1219_ident);
}



inline jule::Str _1a9294b13_gen_struct_kind(jule::Ptr<_1db4a7e59_Struct> _12620_s) {
	jule::Str _12713_rep = jule::Str();
	if (_12620_s->_field_cpp_linked && (!(_1a9294b13_has_directive(_12620_s->_field_directives,jule::Str("typedef", 7))))) {
		_12713_rep+=jule::Str("struct ", 7);
	}
	_12713_rep+=_1a926bc61_struct_out_ident(_12620_s);
	return _12713_rep;
}



inline jule::Str _1a9294b13_gen_struct_kind_ins(jule::Ptr<_1db4a7e59_StructIns> _13728_s) {
	if (_13728_s->_field_decl->_field_cpp_linked) {
		jule::Str _13917_ident = _1a926bc61_struct_ins_out_ident(_13728_s);
		if (_13728_s->_field_generics.len() > 0LL) {
			_13917_ident+=jule::Str("<", 1);
			{
				auto &expr = _13728_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_4398270960:;
				if (it != expr.end()) {
					jule::Ptr<_1a8ad0a37_TypeKind> _1a9294b13_g = *it;
					{
						_13917_ident+=_1a9294b13_gen_type_kind(_1a9294b13_g);
						_13917_ident+=jule::Str(",", 1);
					}
					_iter_next_4398270960:;
					++it;
					goto _iter_begin_4398270960;
				}
				_iter_end_4398270960:;
			}
			_13917_ident=_13917_ident.slice(0LL,_13917_ident.len() - 1LL);
			_13917_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1da7b8e5d_Directive> _14913_d = _1a9294b13_find_directive(_13728_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_14913_d != nullptr) {
			_13917_ident=(_1c200553c_concat_all_parts(_14913_d->_field_args) + jule::Str("::", 2)) + _13917_ident;
		}
		return _13917_ident;
	}
	return _1a926bc61_struct_ins_out_ident(_13728_s);
}



inline jule::Str _1a9294b13_gen_array_kind(jule::Ptr<_1a8ad0a37_Arr> _15923_a) {
	jule::Str _16013_obj = _1a926bc61_as_jt(jule::Str("array", 5));
	_16013_obj+=jule::Str("<", 1);
	_16013_obj+=_1a9294b13_gen_type_kind(_15923_a->_field_elem);
	_16013_obj+=jule::Str(",", 1);
	_16013_obj+=_1da106db7_itoa(_15923_a->_field_n);
	_16013_obj+=jule::Str(">", 1);
	return _16013_obj;
}



inline jule::Str _1a9294b13_gen_fn_anon_decl(jule::Ptr<_1c17e2687_FnIns> _16925_f) {
	jule::Str _17013_decl = _1a92bc4dc_gen_fn_ins_result(_16925_f);
	_17013_decl+=jule::Str("(", 1);
	if (_16925_f->_field_params.len() > 0LL) {
		{
			auto &expr = _16925_f->_field_params;
			auto it = expr.begin();
			_iter_begin_4398281984:;
			if (it != expr.end()) {
				jule::Ptr<_1c17e2687_ParamIns> _1a9294b13_param = *it;
				{
					if (_1a9294b13_param->_field_decl->_method_is_self()) {
						goto _iter_next_4398281984;
					}
					_17013_decl+=_1a92bc4dc_gen_param_ins_prototype(_1a9294b13_param);
					_17013_decl+=jule::Str(",", 1);
				}
				_iter_next_4398281984:;
				++it;
				goto _iter_begin_4398281984;
			}
			_iter_end_4398281984:;
		}
		_17013_decl=_17013_decl.slice(0LL,_17013_decl.len() - 1LL);
	} else {
		_17013_decl+=jule::Str("void", 4);
	}
	_17013_decl+=jule::Str(")", 1);
	return _17013_decl;
}



inline jule::Str _1a9294b13_gen_fn_kind(jule::Ptr<_1c17e2687_FnIns> _19220_f) {
	jule::Str _19313_obj = _1a926bc61_as_jt(jule::Str("fn", 2));
	_19313_obj+=jule::Str("<", 1);
	_19313_obj+=_1a9294b13_gen_fn_anon_decl(_19220_f);
	_19313_obj+=jule::Str(">", 1);
	return _19313_obj;
}



inline jule::Str _1a9294b13_gen_type_kind(jule::Ptr<_1a8ad0a37_TypeKind> _20122_k) {
	{
		if (_20122_k->_method_cpp_linked()) {
			_case_begin_4398290880:;
			{
				return _20122_k->_field_cpp_ident;
			}
		}
		else if (_20122_k->_method_prim() != nullptr) {
			_case_begin_4398290976:;
			{
				return _1a9294b13_gen_prim_kind(_20122_k->_method_prim());
			}
		}
		else if (_20122_k->_method_tup() != nullptr) {
			_case_begin_4398290464:;
			{
				return _1a9294b13_gen_tuple_kind(_20122_k->_method_tup());
			}
		}
		else if (_20122_k->_method_sptr() != nullptr) {
			_case_begin_4398290560:;
			{
				return _1a9294b13_gen_sptr_kind(_20122_k->_method_sptr());
			}
		}
		else if (_20122_k->_method_ptr() != nullptr) {
			_case_begin_4398290096:;
			{
				return _1a9294b13_gen_ptr_kind(_20122_k->_method_ptr());
			}
		}
		else if (_20122_k->_method_enm() != nullptr) {
			_case_begin_4398290192:;
			{
				return _1a9294b13_gen_enum_kind(_20122_k->_method_enm());
			}
		}
		else if (_20122_k->_method_slc() != nullptr) {
			_case_begin_4398290288:;
			{
				return _1a9294b13_gen_slice_kind(_20122_k->_method_slc());
			}
		}
		else if (_20122_k->_method_map() != nullptr) {
			_case_begin_4398289424:;
			{
				return _1a9294b13_gen_map_kind(_20122_k->_method_map());
			}
		}
		else if (_20122_k->_method_trt() != nullptr) {
			_case_begin_4398289520:;
			{
				return _1a9294b13_gen_trait_kind(_20122_k->_method_trt());
			}
		}
		else if (_20122_k->_method_strct() != nullptr) {
			_case_begin_4398289616:;
			{
				return _1a9294b13_gen_struct_kind_ins(_20122_k->_method_strct());
			}
		}
		else if (_20122_k->_method_arr() != nullptr) {
			_case_begin_4398289712:;
			{
				return _1a9294b13_gen_array_kind(_20122_k->_method_arr());
			}
		}
		else if (_20122_k->_method_fnc() != nullptr) {
			_case_begin_4398291088:;
			{
				return _1a9294b13_gen_fn_kind(_20122_k->_method_fnc());
			}
		}
		else {
			_case_begin_4398289088:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_4398288912:;
	}
}



inline void _1a92bc4dc_add_indent(void) {
	_1a92bc4dc_INDENT.push(9LLU);
}



inline void _1a92bc4dc_done_indent(void) {
	_1a92bc4dc_INDENT=_1a92bc4dc_INDENT.slice(0LL,_1a92bc4dc_INDENT.len() - 1LL);
}



inline jule::Str _1a92bc4dc_indent(void) {
	return static_cast<jule::Str>(_1a92bc4dc_INDENT);
}



inline jule::Bool _1a92bc4dc_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _20374065d_is_valid_header_ext(_6723_path.slice(_689_offset));
}



inline jule::Str _1a92bc4dc_gen_links(jule::Ptr<_1da73e9b6_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398318608:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_pkg = *it;
			{
				{
					if ((!(_1a92bc4dc_pkg->_field_cpp_linked))) {
						_case_begin_4398320288:;
						{
							goto _iter_next_4398318608;
						}
					}
					else if (_20374065d_is_std_header_path(_1a92bc4dc_pkg->_field_path)) {
						_case_begin_4398320400:;
						{
							_7713_obj+=jule::Str("#include ", 9);
							_7713_obj+=_1a92bc4dc_pkg->_field_path;
							_7713_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_4398320064:;
				}
			}
			_iter_next_4398318608:;
			++it;
			goto _iter_begin_4398318608;
		}
		_iter_end_4398318608:;
	}
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398322880:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_pkg = *it;
			{
				{
					if ((!(_1a92bc4dc_pkg->_field_cpp_linked))) {
						_case_begin_4398324064:;
						{
							goto _iter_next_4398322880;
						}
					}
					else if (_1a92bc4dc_is_cpp_header_file(_1a92bc4dc_pkg->_field_path)) {
						_case_begin_4398324160:;
						{
							_7713_obj+=jule::Str("#include \"", 10);
							_7713_obj+=_1a92bc4dc_pkg->_field_path;
							_7713_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_4398322592:;
				}
			}
			_iter_next_4398322880:;
			++it;
			goto _iter_begin_4398322880;
		}
		_iter_end_4398322880:;
	}
	return _7713_obj;
}



inline jule::Str _1a92bc4dc_gen_fn_result(jule::Ptr<_1c17e2687_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		if (_10523_f->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_10523_f->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _1a9294b13_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind)) + jule::Str(">", 1);
	}
	return _1a9294b13_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1a92bc4dc_gen_fn_ins_result(jule::Ptr<_1c17e2687_FnIns>& _11927_f) {
	if (_11927_f->_field_decl->_method_is_void()) {
		if (_11927_f->_field_decl->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_11927_f->_field_decl->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _1a9294b13_gen_type_kind(_11927_f->_field_result)) + jule::Str(">", 1);
	}
	return _1a9294b13_gen_type_kind(_11927_f->_field_result);
}



inline jule::Str _1a92bc4dc_gen_param_prototype(jule::Ptr<_1c17e2687_Param>& _13329_p) {
	jule::Str _13413_obj = jule::Str();
	if (_13329_p->_field_variadic) {
		_13413_obj+=_1a926bc61_as_jt(jule::Str("slice", 5));
		_13413_obj+=jule::Str("<", 1);
		_13413_obj+=_1a9294b13_gen_type_kind(_13329_p->_field_kind->_field_kind);
		_13413_obj+=jule::Str(">", 1);
	} else {
		_13413_obj+=_1a9294b13_gen_type_kind(_13329_p->_field_kind->_field_kind);
	}
	return _13413_obj;
}



inline jule::Str _1a92bc4dc_gen_param_ins(jule::Ptr<_1c17e2687_ParamIns>& _14723_p) {
	jule::Str _14813_obj = _1a92bc4dc_gen_param_ins_prototype(_14723_p);
	_14813_obj+=jule::Str(" ", 1);
	_14813_obj+=_1a926bc61_param_out_ident(_14723_p->_field_decl);
	return _14813_obj;
}



inline jule::Str _1a92bc4dc_gen_param_ins_prototype(jule::Ptr<_1c17e2687_ParamIns>& _15533_p) {
	jule::Str _15613_obj = jule::Str();
	if (_15533_p->_field_decl->_field_variadic) {
		_15613_obj+=_1a926bc61_as_jt(jule::Str("slice", 5));
		_15613_obj+=jule::Str("<", 1);
		_15613_obj+=_1a9294b13_gen_type_kind(_15533_p->_field_kind);
		_15613_obj+=jule::Str(">", 1);
	} else {
		_15613_obj+=_1a9294b13_gen_type_kind(_15533_p->_field_kind);
	}
	if (_15533_p->_field_decl->_field_reference) {
		_15613_obj+=jule::Str("&", 1);
	}
	return _15613_obj;
}



inline jule::Str _1a92bc4dc_gen_param(jule::Ptr<_1c17e2687_Param>& _17419_p) {
	jule::Str _17513_obj = _1a92bc4dc_gen_param_prototype(_17419_p);
	if (((_17419_p->_field_ident != jule::Str()) && (!(_1da81133a_is_ignore_ident(_17419_p->_field_ident)))) && (!(_1da81133a_is_anon_ident(_17419_p->_field_ident)))) {
		_17513_obj+=jule::Str(" ", 1);
		_17513_obj+=_1a926bc61_param_out_ident(_17419_p);
	}
	return _17513_obj;
}



inline jule::Str _1a92bc4dc_gen_params(jule::Slice<jule::Ptr<_1c17e2687_Param>>& _18420_params) {
	{
		if (_18420_params.len() == 0LL) {
			_case_begin_4398353280:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_18420_params.len() == 1LL) && _18420_params[0LL]->_method_is_self()) {
			_case_begin_4398353376:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_4398353008:;
	}
	jule::Str _19313_obj = jule::Str("(", 1);
	{
		auto &expr = _18420_params;
		auto it = expr.begin();
		_iter_begin_4398356208:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Param> _1a92bc4dc_p = *it;
			{
				if ((!(_1a92bc4dc_p->_method_is_self()))) {
					_19313_obj+=_1a92bc4dc_gen_param(_1a92bc4dc_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4398356208:;
			++it;
			goto _iter_begin_4398356208;
		}
		_iter_end_4398356208:;
	}
	_19313_obj=_19313_obj.slice(0LL,_19313_obj.len() - 1LL);
	return _19313_obj + jule::Str(")", 1);
}



inline jule::Str _1a92bc4dc_gen_params_ins(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>& _20524_params) {
	{
		if (_20524_params.len() == 0LL) {
			_case_begin_4398361376:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_20524_params.len() == 1LL) && _20524_params[0LL]->_field_decl->_method_is_self()) {
			_case_begin_4398361472:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_4398358864:;
	}
	jule::Str _21413_obj = jule::Str("(", 1);
	{
		auto &expr = _20524_params;
		auto it = expr.begin();
		_iter_begin_4398364384:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1a92bc4dc_p = *it;
			{
				if ((!(_1a92bc4dc_p->_field_decl->_method_is_self()))) {
					_21413_obj+=_1a92bc4dc_gen_param_ins(_1a92bc4dc_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4398364384:;
			++it;
			goto _iter_begin_4398364384;
		}
		_iter_end_4398364384:;
	}
	_21413_obj=_21413_obj.slice(0LL,_21413_obj.len() - 1LL);
	return _21413_obj + jule::Str(")", 1);
}



inline jule::Str _1a92bc4dc_gen_params_prototypes(jule::Slice<jule::Ptr<_1c17e2687_ParamIns>>& _22731_params) {
	{
		if (_22731_params.len() == 0LL) {
			_case_begin_4398369264:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_22731_params.len() == 1LL) && _22731_params[0LL]->_field_decl->_method_is_self()) {
			_case_begin_4398369840:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_4398367248:;
	}
	jule::Str _23613_obj = jule::Str("(", 1);
	{
		auto &expr = _22731_params;
		auto it = expr.begin();
		_iter_begin_4398373376:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_ParamIns> _1a92bc4dc_p = *it;
			{
				if ((!(_1a92bc4dc_p->_field_decl->_method_is_self()))) {
					_23613_obj+=_1a92bc4dc_gen_param_ins_prototype(_1a92bc4dc_p);
					_23613_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4398373376:;
			++it;
			goto _iter_begin_4398373376;
		}
		_iter_end_4398373376:;
	}
	_23613_obj=_23613_obj.slice(0LL,_23613_obj.len() - 1LL);
	return _23613_obj + jule::Str(")", 1);
}



inline jule::Str _1a92bc4dc_gen_trait(jule::Ptr<_1c196b2a0_Trait>& _25019_t) {
	
	jule::Str _2529_outid = _1a926bc61_trait_out_ident(_25019_t);
	jule::Str _25413_obj = jule::Str("struct ", 7);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str(" {\n", 3);
	_25413_obj+=jule::Str("\t", 1);
	_25413_obj+=jule::Str("virtual ~", 9);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &expr = _25019_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4398382064:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1a92bc4dc_f = *it;
			{
				_25413_obj+=jule::Str("\t", 1);
				_25413_obj+=jule::Str("virtual ", 8);
				_25413_obj+=_1a92bc4dc_gen_fn_result(_1a92bc4dc_f);
				_25413_obj+=jule::Str(" _method_", 9);
				_25413_obj+=_1a92bc4dc_f->_field_ident;
				_25413_obj+=_1a92bc4dc_gen_params(_1a92bc4dc_f->_field_params);
				_25413_obj+=jule::Str(" {", 2);
				if ((!(_1a92bc4dc_f->_method_is_void()))) {
					_25413_obj+=jule::Str(" return {}; ", 12);
				}
				_25413_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4398382064:;
			++it;
			goto _iter_begin_4398382064;
		}
		_iter_end_4398382064:;
	}
	_25413_obj+=jule::Str("};", 2);
	return _25413_obj;
}



inline jule::Str _1a92bc4dc_gen_traits_tbl(jule::Ptr<_1c2020e2b_SymbolTable>& _27924_tbl) {
	jule::Str _28013_obj = jule::Str();
	{
		auto &expr = _27924_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_4398388704:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> _1a92bc4dc_t = *it;
			{
				_28013_obj+=_1a92bc4dc_gen_trait(_1a92bc4dc_t);
				_28013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398388704:;
			++it;
			goto _iter_begin_4398388704;
		}
		_iter_end_4398388704:;
	}
	return _28013_obj;
}



inline jule::Str _1a92bc4dc_gen_traits_pkg(jule::Ptr<_1c1b398be_Package>& _28924_pkg) {
	jule::Str _29013_obj = jule::Str();
	{
		auto &expr = _28924_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4398392016:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1a92bc4dc_tbl = *it;
			{
				_29013_obj+=_1a92bc4dc_gen_traits_tbl(_1a92bc4dc_tbl);
			}
			_iter_next_4398392016:;
			++it;
			goto _iter_begin_4398392016;
		}
		_iter_end_4398392016:;
	}
	return _29013_obj;
}



inline jule::Str _1a92bc4dc_gen_traits(jule::Ptr<_1da73e9b6_IR>& _29820_ir) {
	jule::Str _29913_obj = jule::Str();
	{
		auto &expr = _29820_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398395136:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_u = *it;
			{
				if ((!(_1a92bc4dc_u->_field_cpp_linked))) {
					_29913_obj+=_1a92bc4dc_gen_traits_pkg(_1a92bc4dc_u->_field_package);
				}
			}
			_iter_next_4398395136:;
			++it;
			goto _iter_begin_4398395136;
		}
		_iter_end_4398395136:;
	}
	_29913_obj+=_1a92bc4dc_gen_traits_pkg(_29820_ir->_field_main);
	return _29913_obj;
}



inline jule::Str _1a92bc4dc_gen_trait_prototype(jule::Ptr<_1c196b2a0_Trait>& _31025_t) {
	jule::Str _31113_obj = jule::Str("struct ", 7);
	_31113_obj+=_1a926bc61_trait_out_ident(_31025_t);
	_31113_obj+=jule::Str(";", 1);
	return _31113_obj;
}



inline jule::Str _1a92bc4dc_gen_trait_prototypes(jule::Ptr<_1c1b398be_Package>& _31830_p) {
	jule::Str _31913_obj = jule::Str();
	{
		auto &expr = _31830_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4398401680:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1a92bc4dc_f = *it;
			{
				{
					auto &expr = _1a92bc4dc_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_4398403280:;
					if (it != expr.end()) {
						jule::Ptr<_1c196b2a0_Trait> &_1a92bc4dc_t = *it;
						{
							if (_1a92bc4dc_t->_field_token._field_id != 0LLU) {
								_31913_obj+=_1a92bc4dc_gen_trait_prototype(_1a92bc4dc_t);
								_31913_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_4398403280:;
						++it;
						goto _iter_begin_4398403280;
					}
					_iter_end_4398403280:;
				}
			}
			_iter_next_4398401680:;
			++it;
			goto _iter_begin_4398401680;
		}
		_iter_end_4398401680:;
	}
	return _31913_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_plain_prototype(jule::Ptr<_1db4a7e59_Struct>& _33236_s) {
	jule::Str _33313_obj = jule::Str();
	{
		auto &expr = _33236_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398402496:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_StructIns> _1a92bc4dc_ins = *it;
			{
				_33313_obj+=jule::Str("\nstruct ", 8);
				_33313_obj+=_1a926bc61_struct_ins_out_ident(_1a92bc4dc_ins);
				_33313_obj+=jule::Str(";", 1);
				_33313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4398402496:;
			++it;
			goto _iter_begin_4398402496;
		}
		_iter_end_4398402496:;
	}
	return _33313_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _34437_structs) {
	jule::Str _34513_obj = jule::Str();
	{
		auto &expr = _34437_structs;
		auto it = expr.begin();
		_iter_begin_4398410048:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1a92bc4dc_s = *it;
			{
				if ((!(_1a92bc4dc_s->_field_cpp_linked)) && (_1a92bc4dc_s->_field_token._field_id != 0LLU)) {
					_34513_obj+=_1a92bc4dc_gen_struct_plain_prototype(_1a92bc4dc_s);
					_34513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4398410048:;
			++it;
			goto _iter_begin_4398410048;
		}
		_iter_end_4398410048:;
	}
	return _34513_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_traits(jule::Ptr<_1db4a7e59_Struct>& _35623_s) {
	if (_35623_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &expr = _35623_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4398415440:;
		if (it != expr.end()) {
			jule::Ptr<_1c196b2a0_Trait> &_1a92bc4dc_i = *it;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_1a926bc61_trait_out_ident(_1a92bc4dc_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_4398415440:;
			++it;
			goto _iter_begin_4398415440;
		}
		_iter_end_4398415440:;
	}
	_36113_obj=_36113_obj.slice(0LL,_36113_obj.len() - 1LL);
	return _36113_obj;
}



inline jule::Str _1a92bc4dc_gen_field_decl(jule::Ptr<_1db4a7e59_FieldIns>& _37224_f) {
	jule::Str _37313_obj = _1a9294b13_gen_type_kind(_37224_f->_field_kind);
	_37313_obj+=jule::Str(" ", 1);
	_37313_obj+=_1a926bc61_field_out_ident(_37224_f->_field_decl);
	_37313_obj+=jule::Str(" = ", 3);
	_37313_obj+=_1c200553c_get_init_expr(_37224_f->_field_kind);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_self_field_type_kind(jule::Ptr<_1db4a7e59_StructIns>& _38241_s) {
	return _1a9294b13_as_sptr_kind(_1a9294b13_gen_struct_kind_ins(_38241_s));
}



inline jule::Str _1a92bc4dc_gen_struct_self_field(jule::Ptr<_1db4a7e59_StructIns>& _38731_s) {
	jule::Str _38813_obj = _1a92bc4dc_gen_struct_self_field_type_kind(_38731_s);
	_38813_obj+=jule::Str(" self;", 6);
	return _38813_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_self_field_init_st(jule::Ptr<_1db4a7e59_StructIns>& _39339_s) {
	jule::Str _39413_obj = jule::Str("this->self = ", 13);
	_39413_obj+=_1a92bc4dc_gen_struct_self_field_type_kind(_39339_s);
	_39413_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39413_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_constructor(jule::Ptr<_1db4a7e59_StructIns>& _40032_s) {
	jule::Str _40113_obj = _1a926bc61_struct_ins_out_ident(_40032_s);
	_40113_obj+=jule::Str("(", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4398430096:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> _1a92bc4dc_f = *it;
				{
					_40113_obj+=_1a9294b13_gen_type_kind(_1a92bc4dc_f->_field_kind);
					_40113_obj+=jule::Str(" __param_", 9);
					_40113_obj+=_1a92bc4dc_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str(", ", 2);
				}
				_iter_next_4398430096:;
				++it;
				goto _iter_begin_4398430096;
			}
			_iter_end_4398430096:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	} else {
		_40113_obj+=jule::Str("void", 4);
	}
	_40113_obj+=jule::Str(")", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		_40113_obj+=jule::Str(": ", 2);
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4398434704:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> &_1a92bc4dc_f = *it;
				{
					_40113_obj+=_1a926bc61_field_out_ident(_1a92bc4dc_f->_field_decl);
					_40113_obj+=jule::Str("(", 1);
					_40113_obj+=jule::Str("__param_", 8);
					_40113_obj+=_1a92bc4dc_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str("), ", 3);
				}
				_iter_next_4398434704:;
				++it;
				goto _iter_begin_4398434704;
			}
			_iter_end_4398434704:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	}
	_40113_obj+=jule::Str(" {", 2);
	if (_40032_s->_field_decl->_method_has_ref_accessible()) {
		_40113_obj+=jule::Str("\n", 1);
		_1a92bc4dc_add_indent();
		_40113_obj+=_1a92bc4dc_indent();
		_40113_obj+=_1a92bc4dc_gen_struct_self_field_init_st(_40032_s);
		_40113_obj+=jule::Str("\n", 1);
		_1a92bc4dc_done_indent();
		_40113_obj+=jule::Str("\n", 1);
		_40113_obj+=_1a92bc4dc_indent();
	}
	_40113_obj+=jule::Str("}", 1);
	return _40113_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_destructor(jule::Ptr<_1db4a7e59_StructIns>& _44431_s) {
	jule::Bool _4459_disposed = _44431_s->_field_decl->_method_is_implements(_1a8c0ca10_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4469_ref_access = _44431_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4469_ref_access)) && (!(_4459_disposed))) {
		return jule::Str();
	}
	jule::Str _45213_obj = jule::Str("~", 1);
	_45213_obj+=_1a926bc61_struct_ins_out_ident(_44431_s);
	_45213_obj+=jule::Str("(void) { ", 9);
	if (_4459_disposed) {
		jule::Ptr<_1c17e2687_Fn> _45713_dispose_method = _44431_s->_method_find_method(jule::Str("dispose", 7),false);
		_45213_obj+=jule::Str("this->", 6);
		_45213_obj+=_1a926bc61_fn_out_ident(_45713_dispose_method);
		_45213_obj+=jule::Str("(); ", 4);
	}
	if (_4469_ref_access) {
		_45213_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_45213_obj+=jule::Str("}", 1);
	return _45213_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_operators(jule::Ptr<_1db4a7e59_StructIns>& _47130_s) {
	jule::Str _4729_out_ident = _1a926bc61_struct_ins_out_ident(_47130_s);
	jule::Str _47313_obj = jule::Str();
	_47313_obj+=_1a92bc4dc_indent();
	if (_1d9d89b4a_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator==(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const {", 15);
	if (_47130_s->_field_fields.len() > 0LL) {
		_1a92bc4dc_add_indent();
		_47313_obj+=jule::Str("\n", 1);
		_47313_obj+=_1a92bc4dc_indent();
		_47313_obj+=jule::Str("return ", 7);
		_1a92bc4dc_add_indent();
		jule::Int _48817_n = 0LL;
		{
			auto &expr = _47130_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4398458720:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> _1a92bc4dc_f = *it;
				{
					jule::Ptr<_1db4a7e59_StructIns> _49117_strct = _1a92bc4dc_f->_field_kind->_method_strct();
					if (((_49117_strct != nullptr) && (_49117_strct->_field_decl != nullptr)) && _49117_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4398458720;
					}
					(_48817_n)++;
					_47313_obj+=jule::Str("\n", 1);
					_47313_obj+=_1a92bc4dc_indent();
					_47313_obj+=jule::Str("this->", 6);
					jule::Str _50017_f_ident = _1a926bc61_field_out_ident(_1a92bc4dc_f->_field_decl);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" == _Src.", 9);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4398458720:;
				++it;
				goto _iter_begin_4398458720;
			}
			_iter_end_4398458720:;
		}
		_1a92bc4dc_done_indent();
		if (_48817_n > 0LL) {
			_47313_obj=_47313_obj.slice(0LL,_47313_obj.len() - 3LL);
		} else {
			_47313_obj+=jule::Str("true", 4);
		}
		_47313_obj+=jule::Str(";\n", 2);
		_1a92bc4dc_done_indent();
		_47313_obj+=_1a92bc4dc_indent();
		_47313_obj+=jule::Str("}", 1);
	} else {
		_47313_obj+=jule::Str(" return true; }", 15);
	}
	_47313_obj+=jule::Str("\n\n", 2);
	_47313_obj+=_1a92bc4dc_indent();
	if (_1d9d89b4a_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator!=(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _47313_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_derive_defs_prototypes(jule::Ptr<_1db4a7e59_StructIns>& _53039_s) {
	jule::Str _53113_obj = jule::Str();
	if (_53039_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_53113_obj+=_1a92bc4dc_indent();
		_53113_obj+=_1a926b546_get_derive_fn_decl_clone(_53039_s->_field_decl);
		_53113_obj+=jule::Str(";\n\n", 3);
	}
	return _53113_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_ins_prototype(jule::Ptr<_1db4a7e59_StructIns>& _54234_s) {
	jule::Str _54313_obj = jule::Str("struct ", 7);
	jule::Str _5449_out_ident = _1a926bc61_struct_ins_out_ident(_54234_s);
	_54313_obj+=_5449_out_ident;
	_54313_obj+=_1a92bc4dc_gen_struct_traits(_54234_s->_field_decl);
	_54313_obj+=jule::Str(" {\n", 3);
	jule::Bool _5509_ref_access = _54234_s->_field_decl->_method_has_ref_accessible();
	_1a92bc4dc_add_indent();
	if (_5509_ref_access) {
		_54313_obj+=_1a92bc4dc_indent();
		_54313_obj+=_1a92bc4dc_gen_struct_self_field(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	if (_54234_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _54234_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4398481504:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> _1a92bc4dc_f = *it;
				{
					_54313_obj+=_1a92bc4dc_indent();
					_54313_obj+=_1a92bc4dc_gen_field_decl(_1a92bc4dc_f);
					_54313_obj+=jule::Str("\n", 1);
				}
				_iter_next_4398481504:;
				++it;
				goto _iter_begin_4398481504;
			}
			_iter_end_4398481504:;
		}
		_54313_obj+=jule::Str("\n\n", 2);
		_54313_obj+=_1a92bc4dc_indent();
		_54313_obj+=_1a92bc4dc_gen_struct_constructor(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	_54313_obj+=_1a92bc4dc_indent();
	_54313_obj+=_1a92bc4dc_gen_struct_destructor(_54234_s);
	_54313_obj+=jule::Str("\n\n", 2);
	_54313_obj+=_1a92bc4dc_indent();
	_54313_obj+=_5449_out_ident;
	if (_5509_ref_access) {
		_54313_obj+=jule::Str("(void) { ", 9);
		_54313_obj+=_1a92bc4dc_gen_struct_self_field_init_st(_54234_s);
		_54313_obj+=jule::Str(" }\n\n", 4);
	} else {
		_54313_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto &expr = _54234_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4398479040:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1a92bc4dc_f = *it;
			{
				_54313_obj+=_1a92bc4dc_gen_fn_prototype(_1a92bc4dc_f,true);
				_54313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398479040:;
			++it;
			goto _iter_begin_4398479040;
		}
		_iter_end_4398479040:;
	}
	_54313_obj+=_1a92bc4dc_gen_struct_derive_defs_prototypes(_54234_s);
	_54313_obj+=_1a92bc4dc_gen_struct_operators(_54234_s);
	_54313_obj+=jule::Str("\n", 1);
	_1a92bc4dc_done_indent();
	_54313_obj+=_1a92bc4dc_indent() + jule::Str("};", 2);
	return _54313_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_prototype(jule::Ptr<_1db4a7e59_Struct>& _60130_s) {
	jule::Str _60213_obj = jule::Str();
	{
		auto &expr = _60130_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398493648:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_StructIns> _1a92bc4dc_ins = *it;
			{
				_60213_obj+=_1a92bc4dc_gen_struct_ins_prototype(_1a92bc4dc_ins);
				_60213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398493648:;
			++it;
			goto _iter_begin_4398493648;
		}
		_iter_end_4398493648:;
	}
	return _60213_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_prototypes(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _61131_structs) {
	jule::Str _61213_obj = jule::Str();
	{
		auto &expr = _61131_structs;
		auto it = expr.begin();
		_iter_begin_4398496720:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1a92bc4dc_s = *it;
			{
				if ((!(_1a92bc4dc_s->_field_cpp_linked)) && (_1a92bc4dc_s->_field_token._field_id != 0LLU)) {
					_61213_obj+=_1a92bc4dc_gen_struct_prototype(_1a92bc4dc_s);
					_61213_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4398496720:;
			++it;
			goto _iter_begin_4398496720;
		}
		_iter_end_4398496720:;
	}
	return _61213_obj;
}



inline jule::Str _1a92bc4dc_gen_fn_decl_head(jule::Ptr<_1c17e2687_FnIns>& _62226_f,jule::Bool _62237_method) {
	jule::Str _62313_obj = jule::Str();
	if (_62237_method && _62226_f->_field_decl->_field_statically) {
		_62313_obj+=jule::Str("static ", 7);
	}
	if (_1d9d89b4a_OPT_INLINE && (!(_62226_f->_field_decl->_method_is_entry_point()))) {
		_62313_obj+=jule::Str("inline ", 7);
	}
	_62313_obj+=_1a92bc4dc_gen_fn_ins_result(_62226_f) + jule::Str(" ", 1);
	if ((!(_62237_method)) && (_62226_f->_field_decl->_field_owner != nullptr)) {
		_62313_obj+=_1a926bc61_struct_ins_out_ident(_62226_f->_field_owner);
		_62313_obj+=jule::Str("::", 2);
	}
	_62313_obj+=_1a926bc61_fn_ins_out_ident(_62226_f);
	return _62313_obj;
}



inline jule::Str _1a92bc4dc_gen_fn_prototype(jule::Ptr<_1c17e2687_Fn>& _64426_f,jule::Bool _64434_method) {
	jule::Str _64513_obj = jule::Str();
	{
		auto &expr = _64426_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398508976:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_FnIns> _1a92bc4dc_c = *it;
			{
				_64513_obj+=_1a92bc4dc_indent();
				_64513_obj+=_1a92bc4dc_gen_fn_decl_head(_1a92bc4dc_c,_64434_method);
				_64513_obj+=_1a92bc4dc_gen_params_prototypes(_1a92bc4dc_c->_field_params);
				_64513_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4398508976:;
			++it;
			goto _iter_begin_4398508976;
		}
		_iter_end_4398508976:;
	}
	return _64513_obj;
}



inline jule::Str _1a92bc4dc_gen_fn_prototypes(jule::Ptr<_1c1b398be_Package>& _65627_pkg) {
	jule::Str _65713_obj = jule::Str();
	{
		auto &expr = _65627_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4398513584:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1a92bc4dc_file = *it;
			{
				{
					auto &expr = _1a92bc4dc_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4398515184:;
					if (it != expr.end()) {
						jule::Ptr<_1c17e2687_Fn> _1a92bc4dc_f = *it;
						{
							if ((!(_1a92bc4dc_f->_field_cpp_linked)) && (_1a92bc4dc_f->_field_token._field_id != 0LLU)) {
								_65713_obj+=_1a92bc4dc_gen_fn_prototype(_1a92bc4dc_f,false);
							}
						}
						_iter_next_4398515184:;
						++it;
						goto _iter_begin_4398515184;
					}
					_iter_end_4398515184:;
				}
			}
			_iter_next_4398513584:;
			++it;
			goto _iter_begin_4398513584;
		}
		_iter_end_4398513584:;
	}
	return _65713_obj;
}



inline jule::Str _1a92bc4dc_gen_prototypes(jule::Ptr<_1da73e9b6_IR>& _66924_ir) {
	jule::Str _67013_obj = jule::Str();
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398514512:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_u = *it;
			{
				if ((!(_1a92bc4dc_u->_field_cpp_linked))) {
					_67013_obj+=_1a92bc4dc_gen_trait_prototypes(_1a92bc4dc_u->_field_package);
				}
			}
			_iter_next_4398514512:;
			++it;
			goto _iter_begin_4398514512;
		}
		_iter_end_4398514512:;
	}
	_67013_obj+=_1a92bc4dc_gen_trait_prototypes(_66924_ir->_field_main);
	_67013_obj+=_1a92bc4dc_gen_struct_plain_prototypes(_66924_ir->_field_ordered._field_structs);
	_67013_obj+=_1a92bc4dc_gen_traits(_66924_ir);
	_67013_obj+=jule::Str("\n", 1);
	_67013_obj+=_1a92bc4dc_gen_struct_prototypes(_66924_ir->_field_ordered._field_structs);
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398519648:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_u = *it;
			{
				if ((!(_1a92bc4dc_u->_field_cpp_linked))) {
					_67013_obj+=_1a92bc4dc_gen_fn_prototypes(_1a92bc4dc_u->_field_package);
				}
			}
			_iter_next_4398519648:;
			++it;
			goto _iter_begin_4398519648;
		}
		_iter_end_4398519648:;
	}
	_67013_obj+=_1a92bc4dc_gen_fn_prototypes(_66924_ir->_field_main);
	return _67013_obj;
}



inline jule::Str _1a92bc4dc_gen_var_init_expr(jule::Ptr<_1c1b58316_Var>& _69827_v,jule::Str _69836_init) {
	jule::Str _69913_obj = jule::Str();
	if (_69827_v->_field_statically) {
		_69913_obj+=jule::Str("static ", 7);
	}
	_69913_obj+=_1a9294b13_gen_type_kind(_69827_v->_field_kind->_field_kind);
	_69913_obj+=jule::Str(" ", 1);
	if (_69827_v->_field_reference) {
		_69913_obj+=jule::Str("&", 1);
	}
	_69913_obj+=_1a926bc61_var_out_ident(_69827_v);
	if (_69836_init != jule::Str()) {
		_69913_obj+=jule::Str(" = ", 3);
		_69913_obj+=_69836_init;
	}
	_69913_obj+=jule::Str(";", 1);
	return _69913_obj;
}



inline jule::Str _1a92bc4dc_gen_var(jule::Ptr<_1c1b58316_Var> _71916_v) {
	if (_1da81133a_is_ignore_ident(_71916_v->_field_ident)) {
		return jule::Str();
	}
	if ((_71916_v->_field_value != nullptr) && (_71916_v->_field_value->_field_expr != nullptr)) {
		if (_71916_v->_field_value->_field_data->_field_model != nullptr) {
			return _1a92bc4dc_gen_var_init_expr(_71916_v,_1c200553c_gen_val(_71916_v->_field_value));
		}
		return _1a92bc4dc_gen_var_init_expr(_71916_v,jule::Str());
	}
	return _1a92bc4dc_gen_var_init_expr(_71916_v,_1c200553c_get_init_expr(_71916_v->_field_kind->_field_kind));
}



inline jule::Str _1a92bc4dc_gen_globals(jule::Slice<jule::Ptr<_1c1b58316_Var>>& _73421_globals) {
	jule::Str _73513_obj = jule::Str();
	{
		auto &expr = _73421_globals;
		auto it = expr.begin();
		_iter_begin_4398539200:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b58316_Var> _1a92bc4dc_v = *it;
			{
				if (_1a92bc4dc_v->_field_token._field_id != 0LLU) {
					_73513_obj+=_1a92bc4dc_gen_var(_1a92bc4dc_v);
					_73513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4398539200:;
			++it;
			goto _iter_begin_4398539200;
		}
		_iter_end_4398539200:;
	}
	return _73513_obj;
}



inline jule::Str _1a92bc4dc_gen_fn(jule::Ptr<_1c17e2687_Fn>& _74816_f) {
	jule::Str _74913_obj = jule::Str();
	{
		auto &expr = _74816_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398543200:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_FnIns> _1a92bc4dc_ins = *it;
			{
				_74913_obj+=_1a92bc4dc_gen_fn_decl_head(_1a92bc4dc_ins,false);
				_74913_obj+=_1a92bc4dc_gen_params_ins(_1a92bc4dc_ins->_field_params);
				_74913_obj+=jule::Str(" ", 1);
				_74913_obj+=_1c1ed6320_gen_fn_scope(_1a92bc4dc_ins);
				_74913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398543200:;
			++it;
			goto _iter_begin_4398543200;
		}
		_iter_end_4398543200:;
	}
	return _74913_obj;
}



inline jule::Str _1a92bc4dc_gen_pkg_fns(jule::Ptr<_1c1b398be_Package>& _76121_p) {
	jule::Str _76213_obj = jule::Str();
	{
		auto &expr = _76121_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4398547696:;
		if (it != expr.end()) {
			jule::Ptr<_1c2020e2b_SymbolTable> _1a92bc4dc_f = *it;
			{
				{
					auto &expr = _1a92bc4dc_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4398549296:;
					if (it != expr.end()) {
						jule::Ptr<_1c17e2687_Fn> _1a92bc4dc_f = *it;
						{
							if ((!(_1a92bc4dc_f->_field_cpp_linked)) && (_1a92bc4dc_f->_field_token._field_id != 0LLU)) {
								_76213_obj+=_1a92bc4dc_gen_fn(_1a92bc4dc_f);
								_76213_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_4398549296:;
						++it;
						goto _iter_begin_4398549296;
					}
					_iter_end_4398549296:;
				}
			}
			_iter_next_4398547696:;
			++it;
			goto _iter_begin_4398547696;
		}
		_iter_end_4398547696:;
	}
	return _76213_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_method_defs(jule::Ptr<_1db4a7e59_StructIns>& _77532_s) {
	jule::Str _77613_obj = jule::Str();
	{
		auto &expr = _77532_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4398548624:;
		if (it != expr.end()) {
			jule::Ptr<_1c17e2687_Fn> _1a92bc4dc_f = *it;
			{
				_77613_obj+=_1a92bc4dc_indent();
				_77613_obj+=_1a92bc4dc_gen_fn(_1a92bc4dc_f);
				_77613_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398548624:;
			++it;
			goto _iter_begin_4398548624;
		}
		_iter_end_4398548624:;
	}
	return _77613_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_ostream(jule::Ptr<_1db4a7e59_StructIns>& _78628_s) {
	jule::Str _78713_obj = jule::Str();
	_78713_obj+=_1a92bc4dc_indent();
	_78713_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_78713_obj+=_1a926bc61_struct_ins_out_ident(_78628_s);
	_78713_obj+=jule::Str(" &_Src) {\n", 10);
	_1a92bc4dc_add_indent();
	_78713_obj+=_1a92bc4dc_indent();
	_78713_obj+=jule::Str("_Stream << \"", 12);
	_78713_obj+=_78628_s->_field_decl->_field_ident;
	_78713_obj+=jule::Str("{\";\n", 4);
	{
		auto &expr = _78628_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_4398559504:;
		if (it != expr.end()) {
			jule::Int _1a92bc4dc_i = it - expr.begin();
			jule::Ptr<_1db4a7e59_FieldIns> _1a92bc4dc_f = *it;
			{
				_78713_obj+=_1a92bc4dc_indent();
				_78713_obj+=jule::Str("_Stream << \"", 12);
				_78713_obj+=_1a92bc4dc_f->_field_decl->_field_ident;
				_78713_obj+=jule::Str(":", 1);
				jule::Ptr<_1db4a7e59_StructIns> _80513_strct = _1a92bc4dc_f->_field_kind->_method_strct();
				if (((_80513_strct != nullptr) && (_80513_strct->_field_decl != nullptr)) && _80513_strct->_field_decl->_field_cpp_linked) {
					_78713_obj+=jule::Str(" cpp.", 5);
					_78713_obj+=_1a926bc61_field_out_ident(_1a92bc4dc_f->_field_decl);
					_78713_obj+=jule::Str("\"", 1);
				} else {
					_78713_obj+=jule::Str("\" << _Src.", 10);
					_78713_obj+=_1a926bc61_field_out_ident(_1a92bc4dc_f->_field_decl);
				}
				if ((_1a92bc4dc_i + 1LL) < _78628_s->_field_fields.len()) {
					_78713_obj+=jule::Str(" << \", \"", 8);
				}
				_78713_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4398559504:;
			++it;
			_1a92bc4dc_i++;
			goto _iter_begin_4398559504;
		}
		_iter_end_4398559504:;
	}
	_78713_obj+=_1a92bc4dc_indent();
	_78713_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_78713_obj+=_1a92bc4dc_indent();
	_78713_obj+=jule::Str("return _Stream;\n", 16);
	_1a92bc4dc_done_indent();
	_78713_obj+=_1a92bc4dc_indent();
	_78713_obj+=jule::Str("}", 1);
	return _78713_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_derive_defs(jule::Ptr<_1db4a7e59_StructIns>& _83032_s) {
	jule::Str _83113_obj = jule::Str();
	if (_83032_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_83113_obj+=_1a92bc4dc_indent();
		_83113_obj+=_1a926b546_get_derive_fn_def_clone(_83032_s->_field_decl);
		_83113_obj+=jule::Str("{\n", 2);
		_1a92bc4dc_add_indent();
		_83113_obj+=_1a92bc4dc_indent();
		_83113_obj+=_1a9294b13_gen_struct_kind_ins(_83032_s);
		_83113_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _83032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4398573872:;
			if (it != expr.end()) {
				jule::Ptr<_1db4a7e59_FieldIns> &_1a92bc4dc_f = *it;
				{
					jule::Str _84217_ident = _1a926bc61_field_out_ident(_1a92bc4dc_f->_field_decl);
					_83113_obj+=_1a92bc4dc_indent();
					_83113_obj+=jule::Str("clone.", 6);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(" = jule::clone(this->", 21);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4398573872:;
				++it;
				goto _iter_begin_4398573872;
			}
			_iter_end_4398573872:;
		}
		_83113_obj+=_1a92bc4dc_indent();
		_83113_obj+=jule::Str("return clone;\n", 14);
		_1a92bc4dc_done_indent();
		_83113_obj+=_1a92bc4dc_indent();
		_83113_obj+=jule::Str("}", 1);
	}
	return _83113_obj;
}



inline jule::Str _1a92bc4dc_gen_struct_ins(jule::Ptr<_1db4a7e59_StructIns>& _86224_s) {
	jule::Str _86313_obj = _1a92bc4dc_gen_struct_method_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_1a92bc4dc_gen_struct_derive_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_1a92bc4dc_gen_struct_ostream(_86224_s);
	return _86313_obj;
}



inline jule::Str _1a92bc4dc_gen_struct(jule::Ptr<_1db4a7e59_Struct>& _87220_s) {
	jule::Str _87313_obj = jule::Str();
	{
		auto &expr = _87220_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4398585376:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_StructIns> _1a92bc4dc_ins = *it;
			{
				_87313_obj+=_1a92bc4dc_gen_struct_ins(_1a92bc4dc_ins);
				_87313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4398585376:;
			++it;
			goto _iter_begin_4398585376;
		}
		_iter_end_4398585376:;
	}
	return _87313_obj;
}



inline jule::Str _1a92bc4dc_gen_structs(jule::Slice<jule::Ptr<_1db4a7e59_Struct>>& _88221_structs) {
	jule::Str _88313_obj = jule::Str();
	{
		auto &expr = _88221_structs;
		auto it = expr.begin();
		_iter_begin_4398588416:;
		if (it != expr.end()) {
			jule::Ptr<_1db4a7e59_Struct> _1a92bc4dc_s = *it;
			{
				if ((!(_1a92bc4dc_s->_field_cpp_linked)) && (_1a92bc4dc_s->_field_token._field_id != 0LLU)) {
					_88313_obj+=_1a92bc4dc_gen_struct(_1a92bc4dc_s);
					_88313_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4398588416:;
			++it;
			goto _iter_begin_4398588416;
		}
		_iter_end_4398588416:;
	}
	return _88313_obj;
}



inline jule::Str _1a92bc4dc_gen_fns(jule::Ptr<_1da73e9b6_IR>& _89417_ir) {
	jule::Str _89513_obj = jule::Str();
	{
		auto &expr = _89417_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398592896:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_u = *it;
			{
				if ((!(_1a92bc4dc_u->_field_cpp_linked))) {
					_89513_obj+=_1a92bc4dc_gen_pkg_fns(_1a92bc4dc_u->_field_package);
				}
			}
			_iter_next_4398592896:;
			++it;
			goto _iter_begin_4398592896;
		}
		_iter_end_4398592896:;
	}
	_89513_obj+=_1a92bc4dc_gen_pkg_fns(_89417_ir->_field_main);
	return _89513_obj;
}



inline void _1a92bc4dc_push_init(jule::Ptr<_1c1b398be_Package>& _90719_pkg,jule::Str& _90739_obj) {
	
	
	jule::Ptr<_1c17e2687_Fn> _9119_f = _90719_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_9119_f == nullptr) {
		return;
	}
	_90739_obj+=jule::Str("\n\t", 2);
	_90739_obj+=_1a926bc61_fn_out_ident(_9119_f);
	_90739_obj+=jule::Str("();", 3);
}



inline jule::Str _1a92bc4dc_gen_init_caller(jule::Ptr<_1da73e9b6_IR>& _92225_ir) {
	jule::Str _92313_obj = jule::Str("void ", 5);
	_92313_obj+=jule::Str("__jule_call_initializers", 24);
	_92313_obj+=jule::Str("(void) {", 8);
	{
		auto &expr = _92225_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4398603360:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> _1a92bc4dc_u = *it;
			{
				if ((!(_1a92bc4dc_u->_field_cpp_linked))) {
					_1a92bc4dc_push_init(_1a92bc4dc_u->_field_package,_92313_obj);
				}
			}
			_iter_next_4398603360:;
			++it;
			goto _iter_begin_4398603360;
		}
		_iter_end_4398603360:;
	}
	_1a92bc4dc_push_init(_92225_ir->_field_main,_92313_obj);
	_92313_obj+=jule::Str("\n}", 2);
	return _92313_obj;
}



inline void _1a92bc4dc_append_standard(jule::Str& _93829_obj_code,jule::Str _93844_compiler,jule::Str _93859_compiler_cmd) {
	_1a93d0c71_AbsTime _9399_time = _1a93d0c71_Time::_static_method_now()._method_abs();
	jule::Str _94113_time_str = jule::Str();
	_94113_time_str+=_1da106db7_fmt_uint(_9399_time._field_day,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_1da106db7_fmt_uint(_9399_time._field_month,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_1da106db7_fmt_uint(_9399_time._field_year,10LL);
	_94113_time_str+=jule::Str(" ", 1);
	_94113_time_str+=_1da106db7_fmt_uint(_9399_time._field_hour,10LL);
	_94113_time_str+=jule::Str(".", 1);
	_94113_time_str+=_1da106db7_fmt_uint(_9399_time._field_minute,10LL);
	_94113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _95313_s = jule::Str();
	_95313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_95313_s+=jule::Str("// JuleC version: ", 18);
	_95313_s+=jule::Str("beta 0.0.6 @master", 18);
	_95313_s+=jule::Str("\n", 1);
	_95313_s+=jule::Str("// Date: ", 9);
	_95313_s+=_94113_time_str;
	_95313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_95313_s+=_93844_compiler;
	_95313_s+=jule::Str(" ", 1);
	_95313_s+=_93859_compiler_cmd;
	_95313_s+=jule::Str("\n\n#include \"", 12);
	_95313_s+=_205229b6d_PATH_API;
	_95313_s+=jule::Str("\"\n\n", 3);
	_95313_s+=_93829_obj_code;
	_95313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 191);
	_93829_obj_code=_95313_s;
}



inline jule::Str _1a92bc4dc_gen(jule::Ptr<_1da73e9b6_IR>& _98517_ir) {
	jule::Str _98613_obj = jule::Str();
	_98613_obj+=_1a92bc4dc_gen_links(_98517_ir);
	_98613_obj+=jule::Str("\n", 1);
	_98613_obj+=_1a92bc4dc_gen_prototypes(_98517_ir);
	_98613_obj+=jule::Str("\n\n", 2);
	_98613_obj+=_1a92bc4dc_gen_globals(_98517_ir->_field_ordered._field_globals);
	_98613_obj+=jule::Str("\n", 1);
	_98613_obj+=_1a92bc4dc_gen_structs(_98517_ir->_field_ordered._field_structs);
	_98613_obj+=_1a92bc4dc_gen_fns(_98517_ir);
	_98613_obj+=jule::Str("\n", 1);
	_98613_obj+=_1a92bc4dc_gen_init_caller(_98517_ir);
	_98613_obj+=jule::Str("\n", 1);
	return _98613_obj;
}



inline jule::Str _20370da05_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4374858144:;
	}
	_iter_end_4374858144:;
	return _3513_s;
}



inline void _20370da05_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _20370da05_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_20370da05_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _20370da05_HELP_MAP.__at(0LL).__at(0LL).len();
	{
		auto &expr = _20370da05_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4374864432:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_20370da05_k = *it;
			{
				jule::I64 _5313_n = _20370da05_k.__at(0LL).len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4374864432:;
			++it;
			goto _iter_begin_4374864432;
		}
		_iter_end_4374864432:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto &expr = _20370da05_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4374869536:;
		if (it != expr.end()) {
			jule::Int _20370da05_i = it - expr.begin();
			jule::Array<jule::Str,2> &_20370da05_part = *it;
			{
				_5913_s+=_20370da05_part.__at(0LL);
				_5913_s+=_20370da05_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _20370da05_part.__at(0LL).len()) + 5LL));
				_5913_s+=_20370da05_part.__at(1LL);
				if ((_20370da05_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4374869536:;
			++it;
			_20370da05_i++;
			goto _iter_begin_4374869536;
		}
		_iter_end_4374869536:;
	}
	jule::outln(_5913_s);
}



inline void _20370da05_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_20370da05_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.6 @master", 18));
}



inline void _20370da05_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _2052120b7_DISTOS;
		auto it = expr.begin();
		_iter_begin_4374879104:;
		if (it != expr.end()) {
			jule::Str &_20370da05_os = *it;
			{
				jule::out(_20370da05_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4374879104:;
			++it;
			goto _iter_begin_4374879104;
		}
		_iter_end_4374879104:;
	}
	jule::outln(jule::Str());
}



inline void _20370da05_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _2052120b7_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4374880464:;
		if (it != expr.end()) {
			jule::Str &_20370da05_arch = *it;
			{
				jule::out(_20370da05_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4374880464:;
			++it;
			goto _iter_begin_4374880464;
		}
		_iter_end_4374880464:;
	}
	jule::outln(jule::Str());
}



inline void _20370da05_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_20370da05_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto &_match_expr{ _1149_cmd };
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_4374889840:;
			{
				_20370da05_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_4374889392:;
			{
				_20370da05_tool_distarch();
			}
		}
		else {
			_case_begin_4374885312:;
			{
				_20370da05_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
			}
		}
		_match_end_4374888992:;
	}
}



inline void _20370da05_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.6 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln(jule::Str("default compiler: ", 18) + _2037450be_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _2037450be_CPP_STD);
}



inline jule::Bool _20370da05_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto &_match_expr{ _13321_args[1LL] };
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_4374898560:;
			{
				_20370da05_help(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_4374898656:;
			{
				_20370da05_version(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_4374897200:;
			{
				_20370da05_tool(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_4374897312:;
			{
				_20370da05_julenv();
			}
		}
		else {
			_case_begin_4374889488:;
			{
				return false;
			}
		}
		_match_end_4374896848:;
	}
	return true;
}



inline void _20370da05_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_2038538d6_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _2052b1331_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_20370da05_process_command(_1519_args)) {
		return;
	}
	_2037450be_compile_command(_1519_args);
}



inline void _20370e154___init_common(void) {
	_2037450be_COMPILER=jule::Str("clang", 5);
	_2037450be_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _203744145_init(void) {
	_20370e154___init_common();
}



inline void _2037450be_write_output(jule::Str _4917_path,jule::Str _4928_content) {
	jule::Str _509_dir = _20525e312_dir(_4917_path);
	({
		auto except = _1db3e1b84_Status::_static_method_of(_509_dir);
		if (!except.ok()) {
			({
				auto except = _1db3db7e9_Directory::_static_method_create(_509_dir);
				if (!except.ok()) {
					_20370da05_exit_err(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = _1db3ddeb1_File::_static_method_write(_4917_path,static_cast<jule::Slice<jule::U8>>(_4928_content),432LL);
		if (!except.ok()) {
			_20370da05_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _2037450be_clear_objects(void) {
	({
		auto except = _1db3ddeb1_File::_static_method_remove(_2037450be_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	_1db3db7e9_Directory::_static_method_remove(_2037450be_OUT_DIR);
}



inline void _2037450be_compile_ir(jule::Str _7715_compiler,jule::Str _7730_compiler_cmd) {
	jule::Ptr<_20379d743_Cmd> _7813_cmd = _20379d743_Cmd::_static_method_new(_7715_compiler);
	_7813_cmd->_field_args=jule::Slice<jule::Str>({_7715_compiler});
	_7813_cmd->_field_args=jule::append(_7813_cmd->_field_args,_7730_compiler_cmd.split(jule::Str(" ", 1),-1LL));
	({
		auto except = _7813_cmd->_method_spawn();
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: src/julec/compile.jule:81:5"));
	});
	jule::Int _829_status = ({
		auto except = _7813_cmd->_method_wait();
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: src/julec/compile.jule:82:18"));
		(except.result);
	});
	if (_829_status != 0LL) {
		jule::Str _8413_error_message = (jule::Str("\n>>> your backend compiler (", 28) + _2037450be_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149);
		_20370d928_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),_8413_error_message);
		_20370da05_exit_err(jule::Str());
	}
	_2037450be_clear_objects();
}



inline void _2037450be_do_spell(jule::Str _9513_obj,jule::Str _9523_compiler,jule::Str _9538_compiler_cmd) {
	jule::Str _969_path = _2037450be_get_compile_path();
	_2037450be_write_output(_969_path,_9513_obj);
	if ((!(_2037450be_TRANSPILATION))) {
		_2037450be_compile_ir(_9523_compiler,_9538_compiler_cmd);
	}
}



inline jule::Bool _2037450be_is_cpp_source_file(jule::Str _10323_path) {
	jule::Int _1049_offset = _10323_path.rfind(jule::Str(".", 1));
	if (_1049_offset == -1LL) {
		return false;
	}
	return _20374065d_is_valid_cpp_ext(_10323_path.slice(_1049_offset));
}



inline void _2037450be_push_comp_cmd_clang(jule::Str& _11129_cmd) {
	_11129_cmd+=jule::Str("-Wno-everything ", 16);
	_11129_cmd+=jule::Str("--std=", 6);
	_11129_cmd+=_2037450be_CPP_STD;
	_11129_cmd+=jule::Str(" ", 1);
	if (_1d9d89b4a_PRODUCTION) {
		_11129_cmd+=jule::Str("-O3 ", 4);
		_11129_cmd+=jule::Str("-flto ", 6);
		_11129_cmd+=jule::Str("-DNDEBUG ", 9);
		_11129_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11129_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _2037450be_push_comp_cmd_gcc(jule::Str& _13027_cmd) {
	_13027_cmd+=jule::Str("-w ", 3);
	_13027_cmd+=jule::Str("--std=", 6);
	_13027_cmd+=_2037450be_CPP_STD;
	_13027_cmd+=jule::Str(" ", 1);
	if (_1d9d89b4a_PRODUCTION) {
		_13027_cmd+=jule::Str("-O3 ", 4);
		_13027_cmd+=jule::Str("-DNDEBUG ", 9);
		_13027_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13027_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _2037450be_gen_compile_cmd(jule::Str _14920_source_path,jule::Ptr<_1da73e9b6_IR>& _14939_ir) {
	jule::Str &_15010_compiler = _2037450be_COMPILER_PATH;
	jule::Str _15213_cmd = jule::Str();
	{
		auto &_match_expr{ _2037450be_COMPILER };
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_4374946368:;
			{
				_2037450be_push_comp_cmd_gcc(_15213_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_4374948512:;
			{
				_2037450be_push_comp_cmd_clang(_15213_cmd);
			}
		}
		_match_end_4374948320:;
	}
	{
		auto &expr = _14939_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_4374949520:;
		if (it != expr.end()) {
			jule::Str &_2037450be_pass = *it;
			{
				_15213_cmd+=_2037450be_pass;
				_15213_cmd+=jule::Str(" ", 1);
			}
			_iter_next_4374949520:;
			++it;
			goto _iter_begin_4374949520;
		}
		_iter_end_4374949520:;
	}
	{
		auto &expr = _14939_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4374953776:;
		if (it != expr.end()) {
			jule::Ptr<_1c1b398be_ImportInfo> &_2037450be_u = *it;
			{
				if (_2037450be_u->_field_cpp_linked && _2037450be_is_cpp_source_file(_2037450be_u->_field_path)) {
					_15213_cmd+=_2037450be_u->_field_path;
					_15213_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_4374953776:;
			++it;
			goto _iter_begin_4374953776;
		}
		_iter_end_4374953776:;
	}
	if (_2037450be_OUT != jule::Str()) {
		_15213_cmd+=jule::Str("-o ", 3);
		_15213_cmd+=_2037450be_OUT;
		_15213_cmd+=jule::Str(" ", 1);
	}
	_15213_cmd+=_14920_source_path;
	return std::make_tuple(_15010_compiler,_15213_cmd);
}



inline jule::Str _2037450be_get_compile_path(void) {
	return _20525e312_join(jule::Slice<jule::Str>({_2037450be_OUT_DIR,_2037450be_OUT_NAME}));
}



inline void _2037450be_apply_target_independent_optimizations(jule::Ptr<_1da73e9b6_IR>& _19348_ir) {
	if (_1d9d89b4a_OPT_DEADCODE) {
		_1d9d8a321_eliminate(_19348_ir);
	}
}



inline void _2037450be_check_compiler_flag(void) {
	{
		auto &_match_expr{ _2037450be_COMPILER };
		if (_match_expr == jule::Str()) {
			_case_begin_4374959056:;
			{
				_20370da05_exit_err(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_4374959968:;
			{
				_2037450be_COMPILER_PATH=jule::Str("clang++", 7);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_4374960064:;
			{
				_2037450be_COMPILER_PATH=jule::Str("g++", 3);
			}
		}
		else {
			_case_begin_4374957152:;
			{
				_20370da05_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2037450be_COMPILER);
			}
		}
		_match_end_4374958688:;
	}
}



inline void _2037450be_check_target_arch(jule::Str _21522_arch) {
	{
		auto &expr = _2052120b7_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4374963904:;
		if (it != expr.end()) {
			jule::Str &_2037450be_distarch = *it;
			{
				if (_21522_arch == _2037450be_distarch) {
					return;
				}
			}
			_iter_next_4374963904:;
			++it;
			goto _iter_begin_4374963904;
		}
		_iter_end_4374963904:;
	}
	_20370da05_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _21522_arch);
}



inline void _2037450be_check_target_os(jule::Str _22520_os) {
	{
		auto &expr = _2052120b7_DISTOS;
		auto it = expr.begin();
		_iter_begin_4374967408:;
		if (it != expr.end()) {
			jule::Str &_2037450be_distos = *it;
			{
				if (_22520_os == _2037450be_distos) {
					return;
				}
			}
			_iter_next_4374967408:;
			++it;
			goto _iter_begin_4374967408;
		}
		_iter_end_4374967408:;
	}
	_20370da05_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _22520_os);
}



inline void _2037450be_check_target_flag(jule::Str& _23523_target) {
	if (_23523_target == jule::Str()) {
		_20370da05_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2409_parts = _23523_target.split(jule::Str("-", 1),-1LL);
	if (_2409_parts.len() != 2LL) {
		_20370da05_exit_err(jule::Str("--target: undefined platform target format: ", 44) + _23523_target);
	}
	jule::Str _24510_os = _2409_parts[0LL];
	jule::Str _24514_arch = _2409_parts[1LL];
	std::tie(_24510_os,_24514_arch) = std::make_tuple(_2409_parts[0LL],_2409_parts[1LL]);
	if (_24510_os != jule::Str("native", 6)) {
		_2037450be_check_target_os(_24510_os);
		_2037a1d84_OS=_24510_os;
	}
	if (_24514_arch != jule::Str("native", 6)) {
		_2037450be_check_target_arch(_24514_arch);
		_2037a1d84_ARCH=_24514_arch;
	}
}



inline void _2037450be_check_opt_flag(jule::Str& _25820_opt) {
	if (_25820_opt == jule::Str()) {
		_20370da05_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _25820_opt };
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_4374983328:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_4374983424:;
			{
				_1d9d89b4a_push_opt_level(1LLU);
			}
		}
		else {
			_case_begin_4374981984:;
			{
				_20370da05_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + _25820_opt);
			}
		}
		_match_end_4374960496:;
	}
}



inline jule::Slice<jule::Str> _2037450be_check_flags(jule::Slice<jule::Str>& _27017_args) {
	jule::Str _27113_opt = jule::Str("L0", 2);
	jule::Str _27213_target = jule::Str("native-native", 13);
	jule::Ptr<_1d9d8c4cc_FlagSet> _27413_fs = _1d9d8c4cc_FlagSet::_static_method_new();
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2037450be_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2037450be_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_27413_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_2037450be_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_27413_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_27113_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_27413_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_27213_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_27413_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_2037450be_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_27413_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_1d9d89b4a_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	jule::Slice<jule::Str> _29113_content = ({
		auto except = _27413_fs->_method_parse(_27017_args.slice(1LL));
		(except.ok()) ? (except.result) : ({
			_20370da05_exit_err(except.error.operator jule::Str());
			nullptr;
		});
	});
	_2037450be_check_compiler_flag();
	_2037450be_check_target_flag(_27213_target);
	_2037450be_check_opt_flag(_27113_opt);
	return _29113_content;
}



inline void _2037450be_setup_sema_flags(jule::Int& _30326_flags) {
	if (_2037450be_SHADOWING) {
		_30326_flags|=1LL;
	}
}



inline jule::Ptr<_1da73e9b6_IR> _2037450be_build_ir(jule::Slice<jule::Str>& _30914_args) {
	jule::Slice<jule::Str> _3109_content = _2037450be_check_flags(_30914_args);
	jule::Int _31213_sema_flags = 0LL;
	_2037450be_setup_sema_flags(_31213_sema_flags);
	if (_3109_content.len() == 0LL) {
		_20370da05_exit_err(_203741197_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if (_3109_content.len() > 1LL) {
		_20370da05_exit_err(jule::Str("undefined content: ", 19) + _3109_content[1LL]);
	}
	jule::Str _3209_path = _3109_content[0LL];
	jule::Ptr<_1db3e1b84_Status> _3239_inf = ({
		auto except = _1db3e1b84_Status::_static_method_of(_205229b6d_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_20370da05_exit_err(_203741197_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db3e1b84_Status>();});
	});
	if ((!(_3239_inf->_method_is_dir()))) {
		_20370da05_exit_err(_203741197_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	_1da78aaab_init_flags();
	jule::Ptr<_1da73e9b6_IR> _33414_ir;
	jule::Slice<_203741197_Log> _33418_logs;
	std::tie(_33414_ir,_33418_logs) = _1da73e9b6_IR::_static_method_build(_3209_path,_31213_sema_flags);
	if ((_33414_ir == nullptr) && (_33418_logs == nullptr)) {
		_20370da05_exit_err(_203741197_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_3209_path)})));
	}
	if (_33418_logs != nullptr) {
		_20370d928_Logger::_static_method_print_logs(_33418_logs);
		_20370da05_exit_err(jule::Str());
	}
	return _33414_ir;
}



inline void _2037450be_compile_command(jule::Slice<jule::Str>& _34921_args) {
	jule::Ptr<_1da73e9b6_IR> _35013_ir = _2037450be_build_ir(_34921_args);
	
	jule::Ptr<_1c17e2687_Fn> _35313_f = _35013_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if (_35313_f == nullptr) {
		_20370da05_exit_err(_203741197_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>()));
	}
	_35313_f->_field_statically=true;
	_35313_f=_35013_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (_35313_f != nullptr) {
		_35313_f->_field_statically=true;
	}
	_2037450be_apply_target_independent_optimizations(_35013_ir);
	_35013_ir->_method_order();
	jule::Str _36910_compiler;
	jule::Str _36920_compiler_cmd;
	std::tie(_36910_compiler,_36920_compiler_cmd) = _2037450be_gen_compile_cmd(_2037450be_get_compile_path(),_35013_ir);
	jule::Str _37113_obj = _1a92bc4dc_gen(_35013_ir);
	_1a92bc4dc_append_standard(_37113_obj,_36910_compiler,_36920_compiler_cmd);
	_2037450be_do_spell(_37113_obj,_36910_compiler,_36920_compiler_cmd);
}




void __jule_call_initializers(void) {
	_205229b6d_init();
	_203744145_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}