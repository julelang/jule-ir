// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 6/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1e307438c_comptimeRangeKind{};
struct _1e30b90a2_Importer{};
struct _1e31a0243_Kind{};
struct _1e31c0230_Lookup{};
struct _1e48138c7_CommonFlag{};
struct _22759e8c7_Range16;
struct _22759ee05_Range32;
struct _2275a03ab_RangeTable;
struct _2276ac2ed_acceptRange;
struct _227713453_StrBuilder;
struct _22771dc99_lazyBuff;
struct _2263463d9_DirEntry;
struct _22634664d_Directory;
struct _226348144_File;
struct _22634a234_Status;
struct _2278c0a3e_cmdAttrs;
struct _2277b1ce8_Log;
struct _228248cbd_floatInfo;
struct _228916534_decimalSlice;
struct _228928788_leftCheat;
struct _2289292b1_decimal;
struct _22893da56_Const;
struct _20cb74604_Token;
struct _1e301464b_File;
struct _1e301676e_kindPair;
struct _1e301c885_lex;
struct _1e30224c2_Ast;
struct _1e302346d_Node;
struct _1e302388b_Directive;
struct _1e302446e_TypeDecl;
struct _1e3024a79_IdentTypeDecl;
struct _1e3024d76_SubIdentTypeDecl;
struct _1e302521c_NamespaceTypeDecl;
struct _1e3025519_SptrTypeDecl;
struct _1e302589e_SlcTypeDecl;
struct _1e3025b9b_TupleTypeDecl;
struct _1e3025e98_PtrTypeDecl;
struct _1e302673a_ArrTypeDecl;
struct _1e3026e88_MapTypeDecl;
struct _1e3027362_RetTypeDecl;
struct _1e30287a3_Expr;
struct _1e3028aa0_RangeExpr;
struct _1e3029177_UseExpr;
struct _1e3029474_TupleExpr;
struct _1e302984d_LitExpr;
struct _1e3029c27_UnsafeExpr;
struct _1e302a1cd_IdentExpr;
struct _1e302a860_UnaryExpr;
struct _1e302ac39_VariadicExpr;
struct _1e302b113_CastExpr;
struct _1e302b4dc_NsSelectionExpr;
struct _1e302b8b6_SubIdentExpr;
struct _1e302bd6c_BinopExpr;
struct _1e302c4cc_FnCallExpr;
struct _1e302cec2_FieldExprPair;
struct _1e302d7ec_StructLit;
struct _1e302dca3_BraceLit;
struct _1e302e5cd_KeyValPair;
struct _1e302ecc6_SliceExpr;
struct _1e3030766_IndexingExpr;
struct _1e3030dc6_SlicingExpr;
struct _1e30311c3_Constraint;
struct _1e3031679_GenericDecl;
struct _1e3031a53_LabelSt;
struct _1e3031e2c_GotoSt;
struct _1e3032229_FallSt;
struct _1e3032889_AssignLeft;
struct _1e3032e1c_AssignSt;
struct _1e3033d30_Stmt;
struct _1e3034490_ScopeTree;
struct _1e3034bcc_ParamDecl;
struct _1e303612e_FnDecl;
struct _1e303720c_VarDecl;
struct _1e30375d6_RetSt;
struct _1e3037c79_Iter;
struct _1e30385a4_WhileKind;
struct _1e3038eab_RangeKind;
struct _1e3039385_BreakSt;
struct _1e303975e_ContSt;
struct _1e3039c15_If;
struct _1e303a0de_Else;
struct _1e303a595_Conditional;
struct _1e303acd2_TypeAliasDecl;
struct _1e303b288_Case;
struct _1e303b9c5_MatchCase;
struct _1e303c2de_UseDecl;
struct _1e303c795_EnumItemDecl;
struct _1e303d356_EnumDecl;
struct _1e303db81_TypeEnumItemDecl;
struct _1e303e2e1_TypeEnumDecl;
struct _1e303e5aa_FieldDecl;
struct _1e303eea1_StructDecl;
struct _1e30406dd_TraitDecl;
struct _1e3040d4d_Impl;
struct _1e30421d4_Field;
struct _1e30441b4_Operators;
struct _1e30450c7_Struct;
struct _1e30472a5_FieldIns;
struct _1e304bce3_OperandExprModel;
struct _1e304c2dd_BinopExprModel;
struct _1e304c6b7_UnaryExprModel;
struct _1e304cbe5_StructArgExprModel;
struct _1e304d08b_StructLitExprModel;
struct _1e304d388_AllocStructLitExprModel;
struct _1e304d91b_CastingExprModel;
struct _1e304e2bd_FnCallExprModel;
struct _1e304e697_SliceExprModel;
struct _1e304eb4d_IndexingExprModel;
struct _1e3050027_AnonFnExprModel;
struct _1e3050401_KeyValPairExprModel;
struct _1e30508a7_MapExprModel;
struct _1e3050e3a_SlicingExprModel;
struct _1e30514bd_TraitSubIdentExprModel;
struct _1e3051d5e_StructSubIdentExprModel;
struct _1e3052315_StructStaticIdentExprModel;
struct _1e30526de_ArrayExprModel;
struct _1e30529db_TupleExprModel;
struct _1e3052db5_BuiltinOutCallExprModel;
struct _1e305328e_BuiltinOutlnCallExprModel;
struct _1e3053668_BuiltinNewCallExprModel;
struct _1e3053a42_BuiltinPanicCallExprModel;
struct _1e3053ee8_BuiltinAssertCallExprModel;
struct _1e305449e_BuiltinMakeCallExprModel;
struct _1e3054878_BuiltinAppendCallExprModel;
struct _1e3054b75_BuiltinLenCallExprModel;
struct _1e3054e72_BuiltinCapCallExprModel;
struct _1e305534b_BuiltinDeleteCallExprModel;
struct _1e3055725_BuiltinCopyCallExprModel;
struct _1e3055aee_BuiltinErrorCallExprModel;
struct _1e30516aa_SizeofExprModel;
struct _1e305632a_AlignofExprModel;
struct _1e3056627_RuneExprModel;
struct _1e3056924_IntegratedToStrExprModel;
struct _1e3056ced_BackendEmitExprModel;
struct _1e30570ea_FreeExprModel;
struct _1e3057ccc_RetType;
struct _1e305855d_Param;
struct _1e305a032_Fn;
struct _1e305be8a_ParamIns;
struct _1e305ce36_FnIns;
struct _1e30610e3_ReferenceStack;
struct _1e3062600_Pass;
struct _1e30671b5_symbolBuilder;
struct _1e306d2cb_Trait;
struct _1e306ee59_EnumItem;
struct _1e30709c6_Enum;
struct _1e3071b09_TypeEnumItem;
struct _1e30721d1_TypeEnum;
struct _1e3074579_comptimeRange;
struct _1e30750d5_comptimeStructField;
struct _1e3076c85_comptimeStructFields;
struct _1e3078391_comptimeStatic;
struct _1e307a052_comptimeStatics;
struct _1e307b64c_comptimeEnumField;
struct _1e307c95b_comptimeEnumFields;
struct _1e307e0de_comptimeParam;
struct _1e3081355_comptimeParams;
struct _1e3082950_comptimeTypeInfos;
struct _1e308404a_comptimeTypeInfo;
struct _1e308a55c_comptimeValue;
struct _1e308cdab_comptimeFiles;
struct _1e308e4a6_comptimeFile;
struct _1e3093620_constraintChecker;
struct _1e3095655_Impl;
struct _1e309aa89_Scope;
struct _1e309aea7_If;
struct _1e309b2a4_Else;
struct _1e309b6c2_Conditional;
struct _1e309b9be_InfIter;
struct _1e309be75_WhileIter;
struct _1e309c8c1_RangeIter;
struct _1e309cc56_ContSt;
struct _1e309d130_BreakSt;
struct _1e309d42c_Label;
struct _1e309d806_GotoSt;
struct _1e309dbd0_Postfix;
struct _1e309e186_Assign;
struct _1e309e560_MultiAssign;
struct _1e309ebc0_Match;
struct _1e30a0808_Case;
struct _1e30a0e02_FallSt;
struct _1e30a1287_RetSt;
struct _1e30a18e7_scopeLabel;
struct _1e30a1e7a_scopeGoto;
struct _1e30a2d8d_scopeChecker;
struct _1e30b5a3d_directiveChecker;
struct _1e30bbeb7_ImportInfo;
struct _1e30beddd_Package;
struct _1e30dbd2d_commonSemaMeta;
struct _1e30dc955_Sema;
struct _1e310b798_missingRetChecker;
struct _1e310db85_IterRelation;
struct _1e310ed40_Var;
struct _1e3110b54_FuncPattern;
struct _1e3151c61_typeCompatibilityChecker;
struct _1e3153a10_assignTypeChecker;
struct _1e315567c_dynamicTypeAnnotation;
struct _1e315a4d9_fnCallArgChecker;
struct _1e315d421_structLitChecker;
struct _1e3160203_rangeChecker;
struct _1e3162964_retTypeChecker;
struct _1e3169ad1_SymbolTable;
struct _1e316ee05_Data;
struct _1e3171049_Value;
struct _1e3171ae9_Eval;
struct _1e3190321_unaryEval;
struct _1e31922ac_binaryEval;
struct _1e319dd13_InsGeneric;
struct _1e319e907_TypeAlias;
struct _1e31a06e9_TypeKind;
struct _1e31a78bb_TypeSymbol;
struct _1e31a82c3_Prim;
struct _1e31abcee_Sptr;
struct _1e31ac7c2_Slc;
struct _1e31ad3b6_Tuple;
struct _1e31ade66_Map;
struct _1e31aeae3_Arr;
struct _1e31b05b6_Ptr;
struct _1e31b15b7_referencer;
struct _1e31b25a7_typeChecker;
struct _1e31ba23b_identTypeLookup;
struct _1e3b1be01_FileInfo;
struct _1e3b65664_stmt;
struct _1e3b66005_scopeParser;
struct _1e3b73584_exprBuilder;
struct _1e3b80a36_assignInfo;
struct _1e3b83e13_parser;
struct _1e3b960bd_typeBuilder;
struct _1e33a2ee5_CompileInfo;
struct _1e33a449c_directiveEval;
struct _1e3b9a204_JuleImporter;
struct _1e3ba0418_OrderedDefines;
struct _1e3ba067c_defineOrderer;
struct _1e3ccb6ba_liveTable;
struct _1e3d10d1a_scopeDeadCode;
struct _1e3d15072_exprDeadCode;
struct _1e3293ee6_SwapExprModel;
struct _1e3294414_EmptyCompareExprModel;
struct _1e3294711_RefExprModel;
struct _1e3294c3e_StrCompExprModel;
struct _1e32952c2_MutSlicingExprModel;
struct _1e32955be_UnsafeBinopExprModel;
struct _1e32958bb_UnsafeIndexingExprModel;
struct _1e3295cea_PushToSliceExprModel;
struct _1e32961c4_AppendToSliceExprModel;
struct _1e329736d_scopeOptimizer;
struct _1e329d4ea_exprOptimizer;
struct _1e3d1c134_Optimizer;
struct _1e3d45190_AnsiEscape;
struct _1e3d467bd_Logger;
struct _1e4775d01_AbsTime;
struct _1e47764c7_Time;
struct _1e4699373_scopeCoder;
struct _1e46a34e2_exprCoder;
struct _1e46b3b73_TestCoder;
struct _1e46b6857_identCoder;
struct _1e477e106_SerializationInfo;
struct _1e477e6cd_traitHash;
struct _1e477eaa7_traitCast;
struct _1e478ecc6_customType;
struct _1e47908cb_typeCoder;
struct _1e47986a3_resultCoder;
struct _1e890e4c4_Flag;
struct _1e8913121_Flag;
struct _1e891681c_Flag;
struct _1e891a05c_Flag;
struct _1e891d758_Flag;
struct _1e4815478_FlagSet;
struct _1e4817e09_argParser;
struct _1e4780b1e_ObjectCoder;
struct _1e3ccbaa5_ObjectDeadCode;
struct _1e3b9cbb8_IR;
struct _1e3047d55_StructIns;
struct _227870e84_Cmd;
struct _22759e8c7_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_22759e8c7_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22759e8c7_Range16 _other) { return !this->operator==(_other); }


};
struct _22759ee05_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_22759ee05_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22759ee05_Range32 _other) { return !this->operator==(_other); }


};
struct _2275a03ab_RangeTable {
	jule::Slice<_22759e8c7_Range16> _field_R16;
	jule::Slice<_22759ee05_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _2276ac2ed_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_2276ac2ed_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2276ac2ed_acceptRange _other) { return !this->operator==(_other); }


};
struct _227713453_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _22771dc99_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _2263463d9_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_22634a234_Status> _field_Stat;
	

	inline bool operator==(_2263463d9_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2263463d9_DirEntry _other) { return !this->operator==(_other); }


};
struct _22634664d_Directory {
	

	inline bool operator==(_22634664d_Directory _other) { return true; }

	inline bool operator!=(_22634664d_Directory _other) { return !this->operator==(_other); }


};
struct _226348144_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_226348144_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_226348144_File _other) { return !this->operator==(_other); }


};
struct _22634a234_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_22634a234_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_22634a234_Status _other) { return !this->operator==(_other); }


};
struct _2278c0a3e_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_2278c0a3e_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_2278c0a3e_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _2277b1ce8_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_2277b1ce8_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_2277b1ce8_Log _other) { return !this->operator==(_other); }


};
struct _228248cbd_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_228248cbd_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_228248cbd_floatInfo _other) { return !this->operator==(_other); }


};
struct _228916534_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _228928788_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_228928788_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_228928788_leftCheat _other) { return !this->operator==(_other); }


};
struct _2289292b1_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_2289292b1_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_2289292b1_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _22894460b_Eq(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _22894494c_Lt(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228944c8d_LtEq(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _2289450ce_Gt(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228945420_GtEq(_22893da56_Const*, _22893da56_Const);
struct _22893da56_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_22893da56_Const _other) { return _22894460b_Eq(this, _other); }

	inline bool operator!=(_22893da56_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_22893da56_Const _other) { return _2289450ce_Gt(this, _other); }

	inline jule::Bool operator>=(_22893da56_Const _other) { return _228945420_GtEq(this, _other); }

	inline jule::Bool operator<(_22893da56_Const _other) { return _22894494c_Lt(this, _other); }

	inline jule::Bool operator<=(_22893da56_Const _other) { return _228944c8d_LtEq(this, _other); }


};
struct _20cb74604_Token {
	jule::Ptr<_1e301464b_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_20cb74604_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_20cb74604_Token _other) { return !this->operator==(_other); }


};
struct _1e301464b_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Tokens;
	


};
struct _1e301676e_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1e301676e_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1e301676e_kindPair _other) { return !this->operator==(_other); }


};
struct _1e301c885_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_tokens;
	jule::Ptr<_1e301464b_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_2277b1ce8_Log> _field_errors;
	


};
struct _1e30224c2_Ast {
	jule::Ptr<_1e301464b_File> _field_File;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1e303c2de_UseDecl>> _field_UseDecls;
	jule::Slice<_1e302346d_Node> _field_Nodes;
	


};
struct _1e302346d_Node {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1e302346d_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e302346d_Node _other) { return !this->operator==(_other); }


};
struct _1e302388b_Directive {
	jule::Ptr<_20cb74604_Token> _field_Tag;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Args;
	


};
struct _1e302446e_TypeDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1e302446e_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e302446e_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3024a79_IdentTypeDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _field_Generics;
	


};
struct _1e3024d76_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> _field_Idents;
	


};
struct _1e302521c_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Idents;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	


};
struct _1e3025519_SptrTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Elem;
	

	inline bool operator==(_1e3025519_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e3025519_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e302589e_SlcTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Elem;
	

	inline bool operator==(_1e302589e_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e302589e_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3025b9b_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _field_Types;
	


};
struct _1e3025e98_PtrTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Elem;
	

	inline bool operator==(_1e3025e98_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e3025e98_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e302673a_ArrTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Elem;
	jule::Ptr<_1e30287a3_Expr> _field_Size;
	

	inline bool operator==(_1e302673a_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e302673a_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3026e88_MapTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Key;
	jule::Ptr<_1e302446e_TypeDecl> _field_Val;
	

	inline bool operator==(_1e3026e88_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e3026e88_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3027362_RetTypeDecl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Idents;
	


};
struct _1e30287a3_Expr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1e30287a3_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e30287a3_Expr _other) { return !this->operator==(_other); }


};
struct _1e3028aa0_RangeExpr {
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e3028aa0_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3028aa0_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1e3029177_UseExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e3029177_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3029177_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e3029474_TupleExpr {
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Expr;
	


};
struct _1e302984d_LitExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1e302984d_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e302984d_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e3029c27_UnsafeExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e3029c27_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3029c27_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e302a1cd_IdentExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1e302a1cd_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1e302a1cd_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e302a860_UnaryExpr {
	jule::Ptr<_20cb74604_Token> _field_Op;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e302a860_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e302a860_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e302ac39_VariadicExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e302ac39_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e302ac39_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e302b113_CastExpr {
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e302b113_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e302b113_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e302b4dc_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Ns;
	jule::Ptr<_20cb74604_Token> _field_Ident;
	


};
struct _1e302b8b6_SubIdentExpr {
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_20cb74604_Token> _field_Ident;
	

	inline bool operator==(_1e302b8b6_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e302b8b6_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e302bd6c_BinopExpr {
	jule::Ptr<_1e30287a3_Expr> _field_Left;
	jule::Ptr<_1e30287a3_Expr> _field_Right;
	jule::Ptr<_20cb74604_Token> _field_Op;
	

	inline bool operator==(_1e302bd6c_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e302bd6c_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1e302c4cc_FnCallExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Args;
	jule::Ptr<_1e3034490_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1e302cec2_FieldExprPair {
	jule::Ptr<_20cb74604_Token> _field_Field;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e302cec2_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e302cec2_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e302d7ec_StructLit {
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Exprs;
	


};
struct _1e302dca3_BraceLit {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Exprs;
	


};
struct _1e302e5cd_KeyValPair {
	jule::Ptr<_1e30287a3_Expr> _field_Key;
	jule::Ptr<_1e30287a3_Expr> _field_Val;
	jule::Ptr<_20cb74604_Token> _field_Colon;
	

	inline bool operator==(_1e302e5cd_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1e302e5cd_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1e302ecc6_SliceExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Exprs;
	


};
struct _1e3030766_IndexingExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_1e30287a3_Expr> _field_Index;
	

	inline bool operator==(_1e3030766_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e3030766_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e3030dc6_SlicingExpr {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_1e30287a3_Expr> _field_Start;
	jule::Ptr<_1e30287a3_Expr> _field_To;
	

	inline bool operator==(_1e3030dc6_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1e3030dc6_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e30311c3_Constraint {
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _field_Mask;
	


};
struct _1e3031679_GenericDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e30311c3_Constraint> _field_Constraint;
	

	inline bool operator==(_1e3031679_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e3031679_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e3031a53_LabelSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1e3031a53_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e3031a53_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e3031e2c_GotoSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_Label;
	

	inline bool operator==(_1e3031e2c_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e3031e2c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e3032229_FallSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	

	inline bool operator==(_1e3032229_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1e3032229_FallSt _other) { return !this->operator==(_other); }


};
struct _1e3032889_AssignLeft {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e3032889_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3032889_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e3032e1c_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_20cb74604_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> _field_Left;
	jule::Ptr<_1e30287a3_Expr> _field_Right;
	


};
struct _1e3033d30_Stmt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1e3033d30_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e3033d30_Stmt _other) { return !this->operator==(_other); }


};
struct _1e3034490_ScopeTree {
	jule::Ptr<_1e3034490_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1e3033d30_Stmt> _field_Stmts;
	jule::Ptr<_20cb74604_Token> _field_End;
	


};
struct _1e3034bcc_ParamDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1e3034bcc_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e3034bcc_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1e303612e_FnDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_Generics;
	jule::Ptr<_1e3027362_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> _field_Params;
	


};
struct _1e303720c_VarDecl {
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	


};
struct _1e30375d6_RetSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e30375d6_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e30375d6_RetSt _other) { return !this->operator==(_other); }


};
struct _1e3037c79_Iter {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	

	inline bool operator==(_1e3037c79_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e3037c79_Iter _other) { return !this->operator==(_other); }


};
struct _1e30385a4_WhileKind {
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20cb74604_Token> _field_NextToken;
	

	inline bool operator==(_1e30385a4_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1e30385a4_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e3038eab_RangeKind {
	jule::Ptr<_20cb74604_Token> _field_InToken;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_1e303720c_VarDecl> _field_KeyA;
	jule::Ptr<_1e303720c_VarDecl> _field_KeyB;
	

	inline bool operator==(_1e3038eab_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e3038eab_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e3039385_BreakSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_Label;
	

	inline bool operator==(_1e3039385_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e3039385_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e303975e_ContSt {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_Label;
	

	inline bool operator==(_1e303975e_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e303975e_ContSt _other) { return !this->operator==(_other); }


};
struct _1e3039c15_If {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	

	inline bool operator==(_1e3039c15_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e3039c15_If _other) { return !this->operator==(_other); }


};
struct _1e303a0de_Else {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	

	inline bool operator==(_1e303a0de_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e303a0de_Else _other) { return !this->operator==(_other); }


};
struct _1e303a595_Conditional {
	jule::Ptr<_1e3039c15_If> _field_Head;
	jule::Slice<jule::Ptr<_1e3039c15_If>> _field_Tail;
	jule::Ptr<_1e303a0de_Else> _field_Default;
	


};
struct _1e303acd2_TypeAliasDecl {
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	

	inline bool operator==(_1e303acd2_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e303acd2_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e303b288_Case {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_Exprs;
	


};
struct _1e303b9c5_MatchCase {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e303b288_Case>> _field_Cases;
	jule::Ptr<_1e303a0de_Else> _field_Default;
	


};
struct _1e303c2de_UseDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1e303c795_EnumItemDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	

	inline bool operator==(_1e303c795_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e303c795_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e303d356_EnumDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> _field_Items;
	jule::Ptr<_20cb74604_Token> _field_End;
	


};
struct _1e303db81_TypeEnumItemDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	

	inline bool operator==(_1e303db81_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e303db81_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e303e2e1_TypeEnumDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_20cb74604_Token> _field_End;
	


};
struct _1e303e5aa_FieldDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e302446e_TypeDecl> _field_Kind;
	jule::Ptr<_1e30287a3_Expr> _field_Default;
	

	inline bool operator==(_1e303e5aa_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e303e5aa_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e303eea1_StructDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_Generics;
	


};
struct _1e30406dd_TraitDecl {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1e303612e_FnDecl>> _field_Methods;
	


};
struct _1e3040d4d_Impl {
	jule::Ptr<_20cb74604_Token> _field_End;
	jule::Ptr<_1e302446e_TypeDecl> _field_Base;
	jule::Ptr<_1e302446e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e303612e_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _field_Statics;
	


};
struct _1e30421d4_Field {
	jule::Ptr<_1e30450c7_Struct> _field_Owner;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Ptr<_1e30287a3_Expr> _field_Default;
	

	inline bool operator==(_1e30421d4_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e30421d4_Field _other) { return !this->operator==(_other); }


};
struct _1e30441b4_Operators {
	jule::Ptr<_1e305ce36_FnIns> _field_Eq;
	jule::Ptr<_1e305ce36_FnIns> _field_Gt;
	jule::Ptr<_1e305ce36_FnIns> _field_GtEq;
	jule::Ptr<_1e305ce36_FnIns> _field_Lt;
	jule::Ptr<_1e305ce36_FnIns> _field_LtEq;
	jule::Ptr<_1e305ce36_FnIns> _field_Shl;
	jule::Ptr<_1e305ce36_FnIns> _field_Shr;
	jule::Ptr<_1e305ce36_FnIns> _field_Add;
	jule::Ptr<_1e305ce36_FnIns> _field_Sub;
	jule::Ptr<_1e305ce36_FnIns> _field_Div;
	jule::Ptr<_1e305ce36_FnIns> _field_Mul;
	jule::Ptr<_1e305ce36_FnIns> _field_Mod;
	jule::Ptr<_1e305ce36_FnIns> _field_BitAnd;
	jule::Ptr<_1e305ce36_FnIns> _field_BitOr;
	jule::Ptr<_1e305ce36_FnIns> _field_BitXor;
	jule::Ptr<_1e305ce36_FnIns> _field_Neg;
	jule::Ptr<_1e305ce36_FnIns> _field_Pos;
	jule::Ptr<_1e305ce36_FnIns> _field_BitNot;
	jule::Ptr<_1e305ce36_FnIns> _field_AddAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_SubAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_DivAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_MulAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_ModAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_ShlAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_ShrAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_BitOrAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_BitAndAssign;
	jule::Ptr<_1e305ce36_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1e30441b4_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1e30441b4_Operators _other) { return !this->operator==(_other); }


};
struct _1e30450c7_Struct {
	jule::Ptr<_1e30dc955_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _field_Uses;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e30421d4_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1e306d2cb_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1e3047d55_StructIns>> _field_Instances;
	


};
struct _1e30472a5_FieldIns {
	jule::Ptr<_1e30421d4_Field> _field_Decl;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Ptr<_1e316ee05_Data> _field_Default;
	

	inline bool operator==(_1e30472a5_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e30472a5_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e304bce3_OperandExprModel {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1e304bce3_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1e304bce3_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e304c2dd_BinopExprModel {
	jule::Ptr<_1e304bce3_OperandExprModel> _field_Left;
	jule::Ptr<_1e304bce3_OperandExprModel> _field_Right;
	jule::Ptr<_20cb74604_Token> _field_Op;
	

	inline bool operator==(_1e304c2dd_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e304c2dd_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e304c6b7_UnaryExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	jule::Ptr<_20cb74604_Token> _field_Op;
	

	inline bool operator==(_1e304c6b7_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e304c6b7_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e304cbe5_StructArgExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e30472a5_FieldIns> _field_Field;
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	

	inline bool operator==(_1e304cbe5_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e304cbe5_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e304d08b_StructLitExprModel {
	jule::Ptr<_1e3047d55_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1e304cbe5_StructArgExprModel>> _field_Args;
	


};
struct _1e304d388_AllocStructLitExprModel {
	jule::Ptr<_1e304d08b_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1e304d388_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1e304d388_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e304d91b_CastingExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Ptr<_1e31a06e9_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1e304d91b_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1e304d91b_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e304e2bd_FnCallExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e305ce36_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1e309aa89_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1e304e697_SliceExprModel {
	jule::Ptr<_1e31a06e9_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1e304eb4d_IndexingExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	jule::Ptr<_1e316ee05_Data> _field_Index;
	

	inline bool operator==(_1e304eb4d_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e304eb4d_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e3050027_AnonFnExprModel {
	jule::Ptr<_1e305ce36_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1e3050027_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1e3050027_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e3050401_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1e3050401_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e3050401_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e30508a7_MapExprModel {
	jule::Ptr<_1e31a06e9_TypeKind> _field_KeyKind;
	jule::Ptr<_1e31a06e9_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1e3050401_KeyValPairExprModel>> _field_Entries;
	


};
struct _1e3050e3a_SlicingExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1e3050e3a_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e3050e3a_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e30514bd_TraitSubIdentExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e305a032_Fn> _field_Method;
	jule::Ptr<_1e306d2cb_Trait> _field_Trt;
	

	inline bool operator==(_1e30514bd_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1e30514bd_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e3051d5e_StructSubIdentExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	jule::Ptr<_1e305ce36_FnIns> _field_Method;
	jule::Ptr<_1e30472a5_FieldIns> _field_Field;
	jule::Ptr<_1e3047d55_StructIns> _field_Owner;
	

	inline bool operator==(_1e3051d5e_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1e3051d5e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e3052315_StructStaticIdentExprModel {
	jule::Ptr<_1e3047d55_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e305ce36_FnIns> _field_Method;
	

	inline bool operator==(_1e3052315_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1e3052315_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e30526de_ArrayExprModel {
	jule::Ptr<_1e31aeae3_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1e30529db_TupleExprModel {
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _field_Datas;
	


};
struct _1e3052db5_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1e3052db5_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e3052db5_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e305328e_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1e305328e_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e305328e_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3053668_BuiltinNewCallExprModel {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1e3053668_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1e3053668_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3053a42_BuiltinPanicCallExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e3053a42_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3053a42_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3053ee8_BuiltinAssertCallExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1e3053ee8_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1e3053ee8_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e305449e_BuiltinMakeCallExprModel {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1e305449e_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1e305449e_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3054878_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1e3054878_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1e3054878_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3054b75_BuiltinLenCallExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	

	inline bool operator==(_1e3054b75_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3054b75_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3054e72_BuiltinCapCallExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	

	inline bool operator==(_1e3054e72_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3054e72_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e305534b_BuiltinDeleteCallExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Dest;
	jule::Ptr<_1e316ee05_Data> _field_Key;
	

	inline bool operator==(_1e305534b_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1e305534b_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3055725_BuiltinCopyCallExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Dest;
	jule::Ptr<_1e316ee05_Data> _field_Src;
	

	inline bool operator==(_1e3055725_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1e3055725_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e3055aee_BuiltinErrorCallExprModel {
	jule::Ptr<_1e305ce36_FnIns> _field_Func;
	jule::Ptr<_1e316ee05_Data> _field_Err;
	

	inline bool operator==(_1e3055aee_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1e3055aee_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e30516aa_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e30516aa_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e30516aa_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e305632a_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e305632a_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e305632a_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e3056627_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1e3056627_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1e3056627_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e3056924_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e3056924_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e3056924_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e3056ced_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1e30570ea_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e30570ea_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e30570ea_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e3057ccc_RetType {
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Idents;
	


};
struct _1e305855d_Param {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1e305855d_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e305855d_Param _other) { return !this->operator==(_other); }


};
struct _1e305a032_Fn {
	jule::Ptr<_1e30dc955_Sema> _field_sema;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_Generics;
	jule::Ptr<_1e3057ccc_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1e305855d_Param>> _field_Params;
	jule::Ptr<_1e30450c7_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1e305ce36_FnIns>> _field_Instances;
	


};
struct _1e305be8a_ParamIns {
	jule::Ptr<_1e305855d_Param> _field_Decl;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	

	inline bool operator==(_1e305be8a_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e305be8a_ParamIns _other) { return !this->operator==(_other); }


};
struct _1e305ce36_FnIns {
	jule::Ptr<_1e3047d55_StructIns> _field_Owner;
	jule::Ptr<_1e305a032_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> _field_Params;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Result;
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	jule::Ptr<_1e30610e3_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1e30610e3_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1e3062600_Pass {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1e3062600_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1e3062600_Pass _other) { return !this->operator==(_other); }


};
struct _1e30671b5_symbolBuilder {
	jule::Ptr<_1e30671b5_symbolBuilder> _field_owner;
	jule::Trait<_1e30b90a2_Importer> _field_importer;
	jule::Slice<_2277b1ce8_Log> _field_errors;
	jule::Ptr<_1e30224c2_Ast> _field_ast;
	jule::Ptr<_1e3169ad1_SymbolTable> _field_table;
	


};
struct _1e306d2cb_Trait {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _field_Implemented;
	


};
struct _1e306ee59_EnumItem {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e3171049_Value> _field_Value;
	

	inline bool operator==(_1e306ee59_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e306ee59_EnumItem _other) { return !this->operator==(_other); }


};
struct _1e30709c6_Enum {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _field_Items;
	


};
struct _1e3071b09_TypeEnumItem {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1e3071b09_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e3071b09_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1e30721d1_TypeEnum {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> _field_Items;
	


};
struct _1e3074579_comptimeRange {
	jule::Trait<_1e307438c_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1e3074579_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e3074579_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1e30750d5_comptimeStructField {
	jule::Ptr<_1e30472a5_FieldIns> _field_field;
	

	inline bool operator==(_1e30750d5_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e30750d5_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1e3076c85_comptimeStructFields {
	jule::Slice<jule::Ptr<_1e30472a5_FieldIns>> _field_fields;
	


};
struct _1e3078391_comptimeStatic {
	jule::Ptr<_1e310ed40_Var> _field_field;
	

	inline bool operator==(_1e3078391_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e3078391_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1e307a052_comptimeStatics {
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_fields;
	


};
struct _1e307b64c_comptimeEnumField {
	jule::Ptr<_1e306ee59_EnumItem> _field_field;
	

	inline bool operator==(_1e307b64c_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e307b64c_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1e307c95b_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _field_fields;
	


};
struct _1e307e0de_comptimeParam {
	jule::Ptr<_1e305be8a_ParamIns> _field_param;
	

	inline bool operator==(_1e307e0de_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1e307e0de_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1e3081355_comptimeParams {
	jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> _field_params;
	


};
struct _1e3082950_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1e308404a_comptimeTypeInfo>> _field_types;
	


};
struct _1e308404a_comptimeTypeInfo {
	jule::Ptr<_1e31a06e9_TypeKind> _field_base;
	

	inline bool operator==(_1e308404a_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1e308404a_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1e308a55c_comptimeValue {
	jule::Ptr<_1e316ee05_Data> _field_data;
	

	inline bool operator==(_1e308a55c_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e308a55c_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1e308cdab_comptimeFiles {
	jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> _field_files;
	


};
struct _1e308e4a6_comptimeFile {
	jule::Ptr<_1e3169ad1_SymbolTable> _field_file;
	

	inline bool operator==(_1e308e4a6_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1e308e4a6_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1e3093620_constraintChecker {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _field_genericsA;
	jule::Ptr<_1e305ce36_FnIns> _field_fi;
	jule::Ptr<_1e3047d55_StructIns> _field_si;
	jule::Ptr<_20cb74604_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1e3095655_Impl {
	jule::Ptr<_1e302446e_TypeDecl> _field_Base;
	jule::Ptr<_1e302446e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Statics;
	


};
struct _1e309aa89_Scope {
	jule::Ptr<_1e309aa89_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1e309aea7_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	

	inline bool operator==(_1e309aea7_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e309aea7_If _other) { return !this->operator==(_other); }


};
struct _1e309b2a4_Else {
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	

	inline bool operator==(_1e309b2a4_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e309b2a4_Else _other) { return !this->operator==(_other); }


};
struct _1e309b6c2_Conditional {
	jule::Slice<jule::Ptr<_1e309aea7_If>> _field_Elifs;
	jule::Ptr<_1e309b2a4_Else> _field_Default;
	


};
struct _1e309b9be_InfIter {
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	

	inline bool operator==(_1e309b9be_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e309b9be_InfIter _other) { return !this->operator==(_other); }


};
struct _1e309be75_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	

	inline bool operator==(_1e309be75_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e309be75_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e309c8c1_RangeIter {
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	jule::Ptr<_1e310ed40_Var> _field_KeyA;
	jule::Ptr<_1e310ed40_Var> _field_KeyB;
	

	inline bool operator==(_1e309c8c1_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e309c8c1_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e309cc56_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1e309cc56_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1e309cc56_ContSt _other) { return !this->operator==(_other); }


};
struct _1e309d130_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1e309d130_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1e309d130_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e309d42c_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1e309d42c_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e309d42c_Label _other) { return !this->operator==(_other); }


};
struct _1e309d806_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1e309d42c_Label> _field_Label;
	

	inline bool operator==(_1e309d806_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e309d806_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e309dbd0_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1e309dbd0_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e309dbd0_Postfix _other) { return !this->operator==(_other); }


};
struct _1e309e186_Assign {
	jule::Ptr<_1e304bce3_OperandExprModel> _field_L;
	jule::Ptr<_1e304bce3_OperandExprModel> _field_R;
	jule::Ptr<_20cb74604_Token> _field_Op;
	

	inline bool operator==(_1e309e186_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e309e186_Assign _other) { return !this->operator==(_other); }


};
struct _1e309e560_MultiAssign {
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1e309ebc0_Match {
	jule::Ptr<_1e316ee05_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1e30a0808_Case>> _field_Cases;
	jule::Ptr<_1e30a0808_Case> _field_Default;
	


};
struct _1e30a0808_Case {
	jule::Ptr<_1e309ebc0_Match> _field_Owner;
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _field_Exprs;
	jule::Ptr<_1e30a0808_Case> _field_Next;
	


};
struct _1e30a0e02_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1e30a0e02_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1e30a0e02_FallSt _other) { return !this->operator==(_other); }


};
struct _1e30a1287_RetSt {
	jule::Ptr<_1e305ce36_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1e30a1287_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e30a1287_RetSt _other) { return !this->operator==(_other); }


};
struct _1e30a18e7_scopeLabel {
	jule::Ptr<_20cb74604_Token> _field_token;
	jule::Ptr<_1e309d42c_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1e30a2d8d_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1e30a18e7_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e30a18e7_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1e30a1e7a_scopeGoto {
	jule::Ptr<_1e309d806_GotoSt> _field_st;
	jule::Ptr<_1e3031e2c_GotoSt> _field_gt;
	jule::Ptr<_1e30a2d8d_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1e30a1e7a_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e30a1e7a_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1e30a2d8d_scopeChecker {
	jule::Ptr<_20cb74604_Token> _field_calledFrom;
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Ptr<_1e305ce36_FnIns> _field_owner;
	jule::Ptr<_1e30a2d8d_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1e3169ad1_SymbolTable> _field_table;
	jule::Ptr<_1e309aa89_Scope> _field_scope;
	jule::Ptr<_1e3034490_ScopeTree> _field_tree;
	jule::Ptr<_1e305ce36_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1e30a18e7_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e30a1e7a_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1e30a2d8d_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e30a2d8d_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1e30b5a3d_directiveChecker {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1e302388b_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1e30b5a3d_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e30b5a3d_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1e30bbeb7_ImportInfo {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_Selected;
	jule::Ptr<_1e30beddd_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1e30beddd_Package {
	jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> _field_Files;
	


};
struct _1e30dbd2d_commonSemaMeta {
	jule::Slice<jule::Ptr<_1e308404a_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1e30dc955_Sema {
	jule::Slice<_2277b1ce8_Log> _field_errors;
	jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> _field_files;
	jule::Ptr<_1e3169ad1_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1e30dbd2d_commonSemaMeta> _field_meta;
	


};
struct _1e310b798_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1e310db85_IterRelation {
	jule::Ptr<_1e310ed40_Var> _field_Range;
	

	inline bool operator==(_1e310db85_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1e310db85_IterRelation _other) { return !this->operator==(_other); }


};
struct _1e310ed40_Var {
	jule::Ptr<_1e309aa89_Scope> _field_Scope;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Ptr<_1e3171049_Value> _field_Value;
	jule::Ptr<_1e30610e3_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_Directives;
	jule::Ptr<_1e310db85_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Depends;
	


};
struct _1e3110b54_FuncPattern {
	


};
struct _1e3151c61_typeCompatibilityChecker {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Ptr<_1e31a06e9_TypeKind> _field_dest;
	jule::Ptr<_1e31a06e9_TypeKind> _field_src;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	

	inline bool operator==(_1e3151c61_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e3151c61_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1e3153a10_assignTypeChecker {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Ptr<_1e31a06e9_TypeKind> _field_dest;
	jule::Ptr<_1e316ee05_Data> _field_d;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	

	inline bool operator==(_1e3153a10_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e3153a10_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1e315567c_dynamicTypeAnnotation {
	jule::Ptr<_1e3171ae9_Eval> _field_e;
	jule::Ptr<_1e305ce36_FnIns> _field_f;
	jule::Ptr<_1e305be8a_ParamIns> _field_p;
	jule::Ptr<_1e316ee05_Data> _field_a;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	jule::Ptr<_1e31a06e9_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1e302446e_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_ignored;
	


};
struct _1e315a4d9_fnCallArgChecker {
	jule::Ptr<_1e3171ae9_Eval> _field_e;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_args;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	jule::Ptr<_1e305ce36_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_ignored;
	


};
struct _1e315d421_structLitChecker {
	jule::Ptr<_1e3171ae9_Eval> _field_e;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	jule::Ptr<_1e3047d55_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1e304cbe5_StructArgExprModel>> _field_args;
	


};
struct _1e3160203_rangeChecker {
	jule::Ptr<_1e30a2d8d_scopeChecker> _field_sc;
	jule::Ptr<_1e3038eab_RangeKind> _field_rang;
	jule::Ptr<_1e309c8c1_RangeIter> _field_Kind;
	jule::Ptr<_1e316ee05_Data> _field_d;
	

	inline bool operator==(_1e3160203_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e3160203_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1e3162964_retTypeChecker {
	jule::Ptr<_1e30a2d8d_scopeChecker> _field_sc;
	jule::Ptr<_1e305ce36_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _field_exprs;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1e3169ad1_SymbolTable {
	jule::Ptr<_1e301464b_File> _field_File;
	jule::Slice<_1e3062600_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1e306d2cb_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1e30709c6_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1e30721d1_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1e3095655_Impl>> _field_Impls;
	


};
struct _1e316ee05_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_22893da56_Const> _field_Constant;
	

	inline bool operator==(_1e316ee05_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1e316ee05_Data _other) { return !this->operator==(_other); }


};
struct _1e3171049_Value {
	jule::Ptr<_1e30287a3_Expr> _field_Expr;
	jule::Ptr<_1e316ee05_Data> _field_Data;
	

	inline bool operator==(_1e3171049_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e3171049_Value _other) { return !this->operator==(_other); }


};
struct _1e3171ae9_Eval {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Trait<_1e31c0230_Lookup> _field_lookup;
	jule::Ptr<_1e31a06e9_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1e310ed40_Var> _field_owner;
	jule::Ptr<_1e30472a5_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1e3171ae9_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e3171ae9_Eval _other) { return !this->operator==(_other); }


};
struct _1e3190321_unaryEval {
	jule::Ptr<_1e3171ae9_Eval> _field_e;
	jule::Ptr<_1e316ee05_Data> _field_d;
	jule::Ptr<_1e302a860_UnaryExpr> _field_u;
	

	inline bool operator==(_1e3190321_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e3190321_unaryEval _other) { return !this->operator==(_other); }


};
struct _1e31922ac_binaryEval {
	jule::Ptr<_1e3171ae9_Eval> _field_e;
	jule::Ptr<_1e316ee05_Data> _field_l;
	jule::Ptr<_1e316ee05_Data> _field_r;
	jule::Ptr<_20cb74604_Token> _field_op;
	

	inline bool operator==(_1e31922ac_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e31922ac_binaryEval _other) { return !this->operator==(_other); }


};
struct _1e319dd13_InsGeneric {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_Constraint;
	


};
struct _1e319e907_TypeAlias {
	jule::Ptr<_1e3034490_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e31a78bb_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _field_Generics;
	


};
struct _1e31a06e9_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1e31a0243_Kind> _field_Kind;
	

	inline bool operator==(_1e31a06e9_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e31a06e9_TypeKind _other) { return !this->operator==(_other); }


};
struct _1e31a78bb_TypeSymbol {
	jule::Ptr<_1e302446e_TypeDecl> _field_Decl;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Kind;
	

	inline bool operator==(_1e31a78bb_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e31a78bb_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1e31a82c3_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1e31a82c3_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e31a82c3_Prim _other) { return !this->operator==(_other); }


};
struct _1e31abcee_Sptr {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Elem;
	

	inline bool operator==(_1e31abcee_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e31abcee_Sptr _other) { return !this->operator==(_other); }


};
struct _1e31ac7c2_Slc {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Elem;
	

	inline bool operator==(_1e31ac7c2_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e31ac7c2_Slc _other) { return !this->operator==(_other); }


};
struct _1e31ad3b6_Tuple {
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_Types;
	


};
struct _1e31ade66_Map {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Key;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Val;
	

	inline bool operator==(_1e31ade66_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e31ade66_Map _other) { return !this->operator==(_other); }


};
struct _1e31aeae3_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1e31a06e9_TypeKind> _field_Elem;
	

	inline bool operator==(_1e31aeae3_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e31aeae3_Arr _other) { return !this->operator==(_other); }


};
struct _1e31b05b6_Ptr {
	jule::Ptr<_1e31a06e9_TypeKind> _field_Elem;
	

	inline bool operator==(_1e31b05b6_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e31b05b6_Ptr _other) { return !this->operator==(_other); }


};
struct _1e31b15b7_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1e31b15b7_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1e31b15b7_referencer _other) { return !this->operator==(_other); }


};
struct _1e31b25a7_typeChecker {
	jule::Ptr<_1e30dc955_Sema> _field_s;
	jule::Trait<_1e31c0230_Lookup> _field_rootLookup;
	jule::Trait<_1e31c0230_Lookup> _field_lookup;
	jule::Ptr<_1e31b15b7_referencer> _field_referencer;
	jule::Ptr<_1e30610e3_ReferenceStack> _field_refers;
	jule::Ptr<_20cb74604_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1e319e907_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1e31ba23b_identTypeLookup {
	

	inline bool operator==(_1e31ba23b_identTypeLookup _other) { return true; }

	inline bool operator!=(_1e31ba23b_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e3b1be01_FileInfo {
	jule::Ptr<_1e30224c2_Ast> _field_Ast;
	jule::Slice<_2277b1ce8_Log> _field_Errors;
	


};
struct _1e3b65664_stmt {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1e3b66005_scopeParser {
	jule::Ptr<_1e3b83e13_parser> _field_p;
	jule::Ptr<_1e3034490_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1e3b73584_exprBuilder {
	jule::Ptr<_1e3b83e13_parser> _field_p;
	

	inline bool operator==(_1e3b73584_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e3b73584_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e3b80a36_assignInfo {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_l;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_r;
	jule::Ptr<_20cb74604_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1e3b83e13_parser {
	jule::Ptr<_1e30224c2_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1e302388b_Directive>> _field_directives;
	jule::Slice<_2277b1ce8_Log> _field_errors;
	jule::Ptr<_1e3b73584_exprBuilder> _field_ep;
	


};
struct _1e3b960bd_typeBuilder {
	jule::Ptr<_1e3b83e13_parser> _field_p;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1e33a2ee5_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1e33a2ee5_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1e33a2ee5_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1e33a449c_directiveEval {
	jule::Slice<_2277b1ce8_Log> _field_logs;
	jule::Ptr<_1e302388b_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1e3b9a204_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1e3ba0418_OrderedDefines {
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Globals;
	


};
struct _1e3ba067c_defineOrderer {
	

	inline bool operator==(_1e3ba067c_defineOrderer _other) { return true; }

	inline bool operator!=(_1e3ba067c_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1e3ccb6ba_liveTable {
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1e305ce36_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1e3047d55_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1e306d2cb_Trait>> _field_traits;
	


};
struct _1e3d10d1a_scopeDeadCode {
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _field_parent;
	jule::Ptr<_1e309aa89_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1e309d42c_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e309d806_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1e3d10d1a_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1e3d10d1a_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1e3d15072_exprDeadCode {
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _field_s;
	

	inline bool operator==(_1e3d15072_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1e3d15072_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1e3293ee6_SwapExprModel {
	jule::Ptr<_1e316ee05_Data> _field_Left;
	jule::Ptr<_1e316ee05_Data> _field_Right;
	

	inline bool operator==(_1e3293ee6_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e3293ee6_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1e3294414_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1e3294414_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1e3294414_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1e3294711_RefExprModel {
	jule::Ptr<_1e310ed40_Var> _field_Var;
	

	inline bool operator==(_1e3294711_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1e3294711_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1e3294c3e_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_22893da56_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1e3294c3e_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1e3294c3e_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1e32952c2_MutSlicingExprModel {
	jule::Ptr<_20cb74604_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1e32952c2_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e32952c2_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e32955be_UnsafeBinopExprModel {
	jule::Ptr<_1e304c2dd_BinopExprModel> _field_Node;
	

	inline bool operator==(_1e32955be_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1e32955be_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e32958bb_UnsafeIndexingExprModel {
	jule::Ptr<_1e304eb4d_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1e32958bb_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1e32958bb_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e3295cea_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1e304e697_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1e3295cea_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e3295cea_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e32961c4_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1e32961c4_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1e32961c4_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e329736d_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1e309aa89_Scope> _field_scope;
	

	inline bool operator==(_1e329736d_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e329736d_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1e329d4ea_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1e329d4ea_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e329d4ea_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1e3d1c134_Optimizer {
	jule::Ptr<_1e3b9cbb8_IR> _field_ir;
	

	inline bool operator==(_1e3d1c134_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e3d1c134_Optimizer _other) { return !this->operator==(_other); }


};
struct _1e3d45190_AnsiEscape {
	

	inline bool operator==(_1e3d45190_AnsiEscape _other) { return true; }

	inline bool operator!=(_1e3d45190_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1e3d467bd_Logger {
	

	inline bool operator==(_1e3d467bd_Logger _other) { return true; }

	inline bool operator!=(_1e3d467bd_Logger _other) { return !this->operator==(_other); }


};
struct _1e4775d01_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1e4775d01_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1e4775d01_AbsTime _other) { return !this->operator==(_other); }


};
struct _1e47764c7_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1e47764c7_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1e47764c7_Time _other) { return !this->operator==(_other); }


};
struct _1e4699373_scopeCoder {
	jule::Ptr<_1e4780b1e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1e4699373_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e4699373_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1e46a34e2_exprCoder {
	jule::Ptr<_1e4780b1e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1e46a34e2_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e46a34e2_exprCoder _other) { return !this->operator==(_other); }


};
struct _1e46b3b73_TestCoder {
	jule::Ptr<_1e3047d55_StructIns> _field_t;
	jule::Ptr<_1e305a032_Fn> _field_tmReset;
	jule::Ptr<_1e305a032_Fn> _field_tmFailed;
	jule::Ptr<_1e305a032_Fn> _field_tmSkipped;
	jule::Ptr<_1e4780b1e_ObjectCoder> _field_oc;
	

	inline bool operator==(_1e46b3b73_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e46b3b73_TestCoder _other) { return !this->operator==(_other); }


};
struct _1e46b6857_identCoder {
	

	inline bool operator==(_1e46b6857_identCoder _other) { return true; }

	inline bool operator!=(_1e46b6857_identCoder _other) { return !this->operator==(_other); }


};
struct _1e477e106_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1e477e106_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1e477e106_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1e477e6cd_traitHash {
	jule::Ptr<_1e306d2cb_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1e3047d55_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1e477e6cd_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e477e6cd_traitHash _other) { return !this->operator==(_other); }


};
struct _1e477eaa7_traitCast {
	jule::Ptr<_1e306d2cb_Trait> _field_t1;
	jule::Ptr<_1e306d2cb_Trait> _field_t2;
	

	inline bool operator==(_1e477eaa7_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1e477eaa7_traitCast _other) { return !this->operator==(_other); }


};
struct _1e478ecc6_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1e478ecc6_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e478ecc6_customType _other) { return !this->operator==(_other); }


};
struct _1e47908cb_typeCoder {
	jule::Ptr<_1e4780b1e_ObjectCoder> _field_oc;
	jule::Ptr<_1e47986a3_resultCoder> _field_rc;
	

	inline bool operator==(_1e47908cb_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1e47908cb_typeCoder _other) { return !this->operator==(_other); }


};
struct _1e47986a3_resultCoder {
	jule::Ptr<_1e47908cb_typeCoder> _field_tc;
	

	inline bool operator==(_1e47986a3_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1e47986a3_resultCoder _other) { return !this->operator==(_other); }


};
struct _1e890e4c4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1e890e4c4_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e890e4c4_Flag _other) { return !this->operator==(_other); }


};struct _1e8913121_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1e8913121_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e8913121_Flag _other) { return !this->operator==(_other); }


};struct _1e891681c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1e891681c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e891681c_Flag _other) { return !this->operator==(_other); }


};struct _1e891a05c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1e891a05c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e891a05c_Flag _other) { return !this->operator==(_other); }


};struct _1e891d758_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1e891d758_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e891d758_Flag _other) { return !this->operator==(_other); }


};
struct _1e4815478_FlagSet {
	jule::Slice<jule::Trait<_1e48138c7_CommonFlag>> _field_flags;
	


};
struct _1e4817e09_argParser {
	_1e4815478_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1e4780b1e_ObjectCoder {
	_227713453_StrBuilder _field_Obj;
	_227713453_StrBuilder _field_resultDecls;
	_227713453_StrBuilder _field_anyObj;
	jule::Ptr<_1e3b9cbb8_IR> _field_ir;
	_1e477e106_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1e477e6cd_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1e477eaa7_traitCast> _field_traitCastMap;
	jule::Ptr<_1e46a34e2_exprCoder> _field_ec;
	jule::Ptr<_1e4699373_scopeCoder> _field_sc;
	jule::Ptr<_1e47908cb_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1e3ccbaa5_ObjectDeadCode {
	_1e3ccb6ba_liveTable _field_live;
	jule::Ptr<_1e3b9cbb8_IR> _field_ir;
	


};
struct _1e3b9cbb8_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1e30beddd_Package> _field_Main;
	jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _field_Used;
	_1e3ba0418_OrderedDefines _field_Ordered;
	


};
struct _1e3047d55_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1e30450c7_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e30472a5_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1e30610e3_ReferenceStack> _field_Refers;
	_1e30441b4_Operators _field_Operators;
	


};
struct _227870e84_Cmd {
	_2278c0a3e_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e316ee05_Data__jule_tuple_x_1e316ee05_Data {
	jule::Ptr<_1e316ee05_Data> __jule_result_arg0;
	jule::Ptr<_1e316ee05_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1e316ee05_Data__jule_tuple_bool {
	jule::Ptr<_1e316ee05_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e303b288_Case__jule_tuple_bool {
	jule::Ptr<_1e303b288_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e303b288_Case__jule_tuple_x_1e303a0de_Else {
	jule::Slice<jule::Ptr<_1e303b288_Case>> __jule_result_arg0;
	jule::Ptr<_1e303a0de_Else> __jule_result_arg1;
};
struct __jule_tuple__1e3033acc_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool {
	jule::Ptr<_1e3032e1c_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1e302446e_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1e3027362_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log {
	jule::Slice<jule::Ptr<_1e30224c2_Ast>> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_2277b1ce8_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e3b9cbb8_IR__jule_tuple_s_2277b1ce8_Log {
	jule::Ptr<_1e3b9cbb8_IR> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__227c360b3_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__227c360b3_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__227c360b3_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log {
	jule::Ptr<_1e3169ad1_SymbolTable> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log {
	jule::Ptr<_1e30beddd_Package> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log {
	jule::Ptr<_1e30224c2_Ast> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20cb74604_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_20cb74604_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token {
	jule::Slice<jule::Ptr<_20cb74604_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_20cb74604_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_20cb74604_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_20cb74604_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> __jule_result_arg0;
	jule::Slice<_2277b1ce8_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _227713453_StrBuilder static__22771371c_New(jule::I64);
inline void _22771bc75_Write(_227713453_StrBuilder*, jule::Slice<jule::U8>);
inline void _22771c02d_WriteStr(_227713453_StrBuilder*, jule::Str);
inline void _22771c2d6_WriteByte(_227713453_StrBuilder*, jule::U8);
inline jule::Str _22771c825_Str(_227713453_StrBuilder*);
inline void _22771ca23_Clear(_227713453_StrBuilder*);
inline jule::I64 _22771cca9_Len(_227713453_StrBuilder*);
inline jule::Slice<jule::U8> _22771d2c6_Buf(_227713453_StrBuilder*);
inline void _22771d57e_SetBuf(_227713453_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _22771e1ea_index(_22771dc99_lazyBuff*, jule::I64);
inline void _22771e4a3_append(_22771dc99_lazyBuff*, jule::U8);
inline jule::Str _22771e739_string(_22771dc99_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_2263463d9_DirEntry>>> static__227723551_Read(jule::Str);
inline jule::VoidExceptional static__227723782_Create(jule::Str);
inline jule::VoidExceptional static__2277239b3_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_226348144_File>> static__22634530b_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__22634553c_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2263459c1_Write(_226348144_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _226345d12_Read(_226348144_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_226348144_File> static__226348562_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_226348144_File>> static__22634882b_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__226348ae5_Read(jule::Str);
inline jule::VoidExceptional static__226348e8b_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _2263496c8_Close(_226348144_File*);
inline jule::Exceptional<jule::Ptr<_22634a234_Status>> static__226346dbd_Of(jule::Str);
inline jule::Bool _22634a60d_IsDir(_22634a234_Status*);
inline jule::Bool _22634a894_IsReg(_22634a234_Status*);
inline jule::U64 _22634ab2a_Size(_22634a234_Status*);
inline jule::Bool _228920b7b_set(_2289292b1_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _228920ebc_floatBits(_2289292b1_decimal*, _228248cbd_floatInfo*);
inline void _228929668_assign(_2289292b1_decimal*, jule::U64);
inline void _228929921_shift(_2289292b1_decimal*, jule::I64);
inline void _228929bc9_roundDown(_2289292b1_decimal*, jule::I64);
inline void _228929e82_roundUp(_2289292b1_decimal*, jule::I64);
inline void _22892a23a_round(_2289292b1_decimal*, jule::I64);
inline jule::U64 _22892a4c1_roundedInteger(_2289292b1_decimal*);
inline jule::Ptr<_22893da56_Const> static__22893de96_NewI64(jule::I64);
inline jule::Ptr<_22893da56_Const> static__22893e260_NewU64(jule::U64);
inline jule::Ptr<_22893da56_Const> static__22893e529_NewBool(jule::Bool);
inline jule::Ptr<_22893da56_Const> static__22893e7e3_NewStr(jule::Str);
inline jule::Ptr<_22893da56_Const> static__22893eaac_NewF64(jule::F64);
inline jule::Ptr<_22893da56_Const> static__22893ecbb_NewNil(void);
inline jule::I64 _22894042b_ReadI64(_22893da56_Const*);
inline jule::U64 _2289406b2_ReadU64(_22893da56_Const*);
inline jule::Bool _228940948_ReadBool(_22893da56_Const*);
inline jule::Str _228940bce_ReadStr(_22893da56_Const*);
inline jule::F64 _228940e65_ReadF64(_22893da56_Const*);
inline jule::I64 _2289411eb_AsI64(_22893da56_Const*);
inline jule::U64 _228941482_AsU64(_22893da56_Const*);
inline jule::F64 _228941718_AsF64(_22893da56_Const*);
inline void _2289419c1_SetI64(_22893da56_Const*, jule::I64);
inline void _228941c79_SetU64(_22893da56_Const*, jule::U64);
inline void _228942032_SetBool(_22893da56_Const*, jule::Bool);
inline void _2289422da_SetStr(_22893da56_Const*, jule::Str);
inline void _228942593_SetF64(_22893da56_Const*, jule::F64);
inline jule::Bool _228942a27_IsI64(_22893da56_Const*);
inline jule::Bool _228942cad_IsU64(_22893da56_Const*);
inline jule::Bool _228943044_IsBool(_22893da56_Const*);
inline jule::Bool _2289432ca_IsStr(_22893da56_Const*);
inline jule::Bool _228943561_IsF64(_22893da56_Const*);
inline jule::Bool _2289437e7_IsNil(_22893da56_Const*);
inline jule::Bool _228943e79_And(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _2289442ba_Or(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228945761_Add(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228945aa2_Sub(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228945de3_Mul(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228946234_Div(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228946575_Mod(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _2289468b6_BitwiseAnd(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228946c07_BitwiseOr(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228947048_Xor(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _228947389_Lshift(_22893da56_Const*, _22893da56_Const);
inline jule::Bool _2289476ca_Rshift(_22893da56_Const*, _22893da56_Const);
inline jule::U8 _1e300e206_Prec(_20cb74604_Token*);
inline void _1e3014a36_Fill(_1e301464b_File*, jule::Slice<jule::U8>);
inline jule::Str _1e3014cbc_Dir(_1e301464b_File*);
inline jule::Str _1e3015053_Name(_1e301464b_File*);
inline jule::Str _1e301562a_GetRow(_1e301464b_File*, jule::I64);
inline void _1e301ce18_pushErr(_1e301c885_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1e301d479_lex(_1e301c885_lex*);
inline jule::Str _1e301d7ba_id(_1e301c885_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1e301da51_resume(_1e301c885_lex*);
inline void _1e301dd09_lexLineComment(_1e301c885_lex*, jule::Ptr<_20cb74604_Token>*);
inline void _1e301e0b2_lexRangeComment(_1e301c885_lex*, jule::Ptr<_20cb74604_Token>*);
inline jule::Str _1e301e403_num(_1e301c885_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1e301e744_escapeSeq(_1e301c885_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1e301eb40_getRune(_1e301c885_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1e301ee81_lexRune(_1e301c885_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1e3020217_lexStr(_1e301c885_lex*);
inline void _1e302069b_newLine(_1e301c885_lex*);
inline jule::Bool _1e3020c0c_isOp(_1e301c885_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e3021108_lexBasicOps(_1e301c885_lex*, jule::Slice<jule::U8>, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e3021504_lexId(_1e301c885_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e3021900_lexNum(_1e301c885_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_20cb74604_Token> _1e3021b86_token(_1e301c885_lex*);
inline jule::Bool _1e302630b_IsUnsafe(_1e3025e98_PtrTypeDecl*);
inline jule::Bool _1e3026a9d_AutoSized(_1e302673a_ArrTypeDecl*);
inline jule::Bool _1e302c851_Unhandled(_1e302c4cc_FnCallExpr*);
inline jule::Bool _1e302cad7_Ignored(_1e302c4cc_FnCallExpr*);
inline jule::Bool _1e3035051_IsSelf(_1e3034bcc_ParamDecl*);
inline jule::Bool _1e3036492_IsAnon(_1e303612e_FnDecl*);
inline jule::Bool _1e30380dc_IsInf(_1e3037c79_Iter*);
inline jule::Bool _1e3038917_IsWhileNext(_1e30385a4_WhileKind*);
inline jule::Ptr<_1e30472a5_FieldIns> _1e3042558_instance(jule::Ptr<_1e30421d4_Field>);
inline jule::Ptr<_1e3047d55_StructIns> _1e3045539_instance(jule::Ptr<_1e30450c7_Struct>);
inline jule::Ptr<_1e3047d55_StructIns> _1e3045847_appendInstance(_1e30450c7_Struct*, jule::Ptr<_1e3047d55_StructIns>*);
inline jule::Ptr<_1e305a032_Fn> _1e3045c43_FindMethod(_1e30450c7_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e310ed40_Var> _1e3046084_FindStatic(_1e30450c7_Struct*, jule::Str);
inline jule::Ptr<_1e30421d4_Field> _1e30463c5_FindField(_1e30450c7_Struct*, jule::Str);
inline jule::Bool _1e3046716_IsImplements(_1e30450c7_Struct*, jule::Ptr<_1e306d2cb_Trait>);
inline jule::Bool _1e3046a57_IsUses(_1e30450c7_Struct*, jule::Ptr<_1e30450c7_Struct>);
inline jule::Ptr<_1e305be8a_ParamIns> _1e30588e3_instance(jule::Ptr<_1e305855d_Param>);
inline jule::Bool _1e3058b79_IsSelf(_1e305855d_Param*);
inline jule::Bool _1e3058e10_IsRef(_1e305855d_Param*);
inline jule::Bool _1e305a4a5_IsVoid(_1e305a032_Fn*);
inline jule::Bool _1e305a73b_IsMethod(_1e305a032_Fn*);
inline jule::Bool _1e305a9c2_IsEntryPoint(_1e305a032_Fn*);
inline jule::Bool _1e305ac58_IsInit(_1e305a032_Fn*);
inline jule::Bool _1e305aede_IsAnon(_1e305a032_Fn*);
inline jule::Bool _1e305b275_AnyVar(_1e305a032_Fn*);
inline jule::Ptr<_1e305ce36_FnIns> _1e305b50b_instanceForce(jule::Ptr<_1e305a032_Fn>);
inline jule::Ptr<_1e305ce36_FnIns> _1e305b792_instance(jule::Ptr<_1e305a032_Fn>);
inline jule::Ptr<_1e305ce36_FnIns> _1e305baa0_appendInstance(_1e305a032_Fn*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Str _1e305c2ed_Str(_1e305be8a_ParamIns*);
inline jule::Str _1e305d277_Str(_1e305ce36_FnIns*);
inline jule::Bool _1e305d5b8_Equal(jule::Ptr<_1e305ce36_FnIns>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Bool _1e305da5d_EqualFn(jule::Ptr<_1e305ce36_FnIns>, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Bool _1e305dd9e_equalTrait(jule::Ptr<_1e305ce36_FnIns>, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _1e305e135_Types(_1e305ce36_FnIns*);
inline jule::Bool _1e305e3bb_IsBuiltin(_1e305ce36_FnIns*);
inline jule::Bool _1e305e652_IsAnon(_1e305ce36_FnIns*);
inline jule::Bool _1e305e993_Same(_1e305ce36_FnIns*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Str _1e305ecd4_GetKindStr(_1e305ce36_FnIns*, jule::Bool);
inline jule::Ptr<_1e30610e3_ReferenceStack> static__1e30613ce_new(void);
inline jule::I64 _1e30617ca_Len(_1e30610e3_ReferenceStack*);
inline jule::Any _1e3061b1b_At(_1e30610e3_ReferenceStack*, jule::I64);
inline void _1e3061dc4_Push(_1e30610e3_ReferenceStack*, jule::Any);
inline jule::Bool _1e69d7291_Exist(_1e30610e3_ReferenceStack*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Bool _1e69eae75_Exist(_1e30610e3_ReferenceStack*, jule::Ptr<_1e310ed40_Var>);
inline jule::Bool _1e6aa831d_Exist(_1e30610e3_ReferenceStack*, jule::Ptr<_1e3047d55_StructIns>);
inline jule::Bool _1e6ec46d4_Exist(_1e30610e3_ReferenceStack*, jule::Ptr<_1e306d2cb_Trait>);
inline void _1e3067a56_pushErr(_1e30671b5_symbolBuilder*, jule::Ptr<_20cb74604_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1e30682d7_pushSuggestion(_1e30671b5_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30686d3_checkCppUseDeclPath(_1e30671b5_symbolBuilder*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Str*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30689e1_buildCppHeaderImport(_1e30671b5_symbolBuilder*, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3068d32_buildStdImport(_1e30671b5_symbolBuilder*, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3069173_buildIdentImport(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30694b4_buildImport(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Bool _1e3069805_checkDuplicateUseDecl(_1e30671b5_symbolBuilder*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline void _1e3069b68_implImportSelections(_1e30671b5_symbolBuilder*, jule::Ptr<_1e30bbeb7_ImportInfo>*, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Str _1e3069ea9_getAsLinkPath(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Str);
inline void _1e306a3c7_pushCycleError(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e30671b5_symbolBuilder>*, jule::Str, _227713453_StrBuilder*);
inline void _1e306a7e5_pushCrossCycleError(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e30671b5_symbolBuilder>*, jule::Ptr<_1e30bbeb7_ImportInfo>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e306abe1_checkImportCycles(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e30bbeb7_ImportInfo>, jule::Ptr<_1e303c2de_UseDecl>*);
inline void _1e306b10e_checkPackageAccessibility(_1e30671b5_symbolBuilder*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1e306b50a_importPackage(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e30bbeb7_ImportInfo>*, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e306b84b_importUseDecl(jule::Ptr<_1e30671b5_symbolBuilder>, jule::Ptr<_1e303c2de_UseDecl>*);
inline void _1e306ba49_importUseDecls(jule::Ptr<_1e30671b5_symbolBuilder>);
inline void _1e306bd02_appendNode(_1e30671b5_symbolBuilder*, _1e302346d_Node*);
inline void _1e306c000_appendNodes(_1e30671b5_symbolBuilder*);
inline void _1e306c2a8_pushDirectivePass(_1e30671b5_symbolBuilder*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e306c4a6_appendTopDirectives(_1e30671b5_symbolBuilder*);
inline void _1e306c6a4_build(jule::Ptr<_1e30671b5_symbolBuilder>);
inline jule::Str _1e306d694_Str(_1e306d2cb_Trait*);
inline jule::Bool _1e306d9d5_Equal(jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e305a032_Fn> _1e306de7a_FindMethod(_1e306d2cb_Trait*, jule::Str);
inline jule::Ptr<_1e305a032_Fn> _1e306e60c_findMethodInherit(_1e306d2cb_Trait*, jule::Str*);
inline jule::Bool _1e3070311_AutoExpr(_1e306ee59_EnumItem*);
inline jule::Str _1e3070d4a_Str(_1e30709c6_Enum*);
inline jule::Bool _1e307118b_Equal(jule::Ptr<_1e30709c6_Enum>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e306ee59_EnumItem> _1e30715ba_FindItem(_1e30709c6_Enum*, jule::Str);
inline jule::Str _1e3072522_Str(_1e30721d1_TypeEnum*);
inline jule::Bool _1e3072863_Equal(jule::Ptr<_1e30721d1_TypeEnum>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e3071b09_TypeEnumItem> _1e3072c92_FindItem(_1e30721d1_TypeEnum*, jule::Str);
inline jule::Str _1e3074942_Str(_1e3074579_comptimeRange*);
inline jule::Bool _1e3074c83_Equal(jule::Ptr<_1e3074579_comptimeRange>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e3075459_Str(_1e30750d5_comptimeStructField*);
inline jule::Bool _1e307579a_Equal(jule::Ptr<_1e30750d5_comptimeStructField>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e3075cb7__Name(jule::Ptr<_1e30750d5_comptimeStructField>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e30761b3__Type(jule::Ptr<_1e30750d5_comptimeStructField>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e30765ae__Public(jule::Ptr<_1e30750d5_comptimeStructField>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3076900_subIdent(jule::Ptr<_1e30750d5_comptimeStructField>, jule::Str*);
inline jule::Str _1e307711a_Str(_1e3076c85_comptimeStructFields*);
inline jule::Bool _1e307745b_Equal(jule::Ptr<_1e3076c85_comptimeStructFields>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e30778ce_ready(_1e3076c85_comptimeStructFields*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e3077cec_step(_1e3076c85_comptimeStructFields*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e3078083_len(_1e3076c85_comptimeStructFields*);
inline jule::Str _1e3078715_Str(_1e3078391_comptimeStatic*);
inline jule::Bool _1e3078a56_Equal(jule::Ptr<_1e3078391_comptimeStatic>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e3079073__Name(jule::Ptr<_1e3078391_comptimeStatic>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e307946e__Type(jule::Ptr<_1e3078391_comptimeStatic>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e307986a__Public(jule::Ptr<_1e3078391_comptimeStatic>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3079bab_subIdent(jule::Ptr<_1e3078391_comptimeStatic>, jule::Str*);
inline jule::Str _1e307a3c6_Str(_1e307a052_comptimeStatics*);
inline jule::Bool _1e307a717_Equal(jule::Ptr<_1e307a052_comptimeStatics>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e307ab8a_ready(_1e307a052_comptimeStatics*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e307b0a8_step(_1e307a052_comptimeStatics*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e307b33e_len(_1e307a052_comptimeStatics*);
inline jule::Str _1e307b9c1_Str(_1e307b64c_comptimeEnumField*);
inline jule::Bool _1e307bd12_Equal(jule::Ptr<_1e307b64c_comptimeEnumField>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e307c30c__Name(jule::Ptr<_1e307b64c_comptimeEnumField>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e307c64d_subIdent(jule::Ptr<_1e307b64c_comptimeEnumField>, jule::Str*);
inline jule::Str _1e307cde0_Str(_1e307c95b_comptimeEnumFields*);
inline jule::Bool _1e307d231_Equal(jule::Ptr<_1e307c95b_comptimeEnumFields>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e307d62c_ready(_1e307c95b_comptimeEnumFields*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e307da4a_step(_1e307c95b_comptimeEnumFields*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e307dcd1_len(_1e307c95b_comptimeEnumFields*);
inline jule::Str _1e307e463_Str(_1e307e0de_comptimeParam*);
inline jule::Bool _1e307e7a4_Equal(jule::Ptr<_1e307e0de_comptimeParam>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e307ecd2__Name(jule::Ptr<_1e307e0de_comptimeParam>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e30801cd__Type(jule::Ptr<_1e307e0de_comptimeParam>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e30805c9__Variadic(jule::Ptr<_1e307e0de_comptimeParam>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e30809c5__Reference(jule::Ptr<_1e307e0de_comptimeParam>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3080d16_subIdent(jule::Ptr<_1e307e0de_comptimeParam>, jule::Str*);
inline jule::Str _1e30816c9_Str(_1e3081355_comptimeParams*);
inline jule::Bool _1e3081a1a_Equal(jule::Ptr<_1e3081355_comptimeParams>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e3081e8d_ready(_1e3081355_comptimeParams*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e30823ab_step(_1e3081355_comptimeParams*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e3082642_len(_1e3081355_comptimeParams*);
inline jule::Str _1e3082cc4_Str(_1e3082950_comptimeTypeInfos*);
inline jule::Bool _1e3083115_Equal(jule::Ptr<_1e3082950_comptimeTypeInfos>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e3083588_ready(_1e3082950_comptimeTypeInfos*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e30839a6_step(_1e3082950_comptimeTypeInfos*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e3083c3c_len(_1e3082950_comptimeTypeInfos*);
inline jule::Str _1e30843be_Str(_1e308404a_comptimeTypeInfo*);
inline jule::Bool _1e3084710_Equal(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e3084d5e__Str(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308525a__Kind(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3085656__Bits(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3085a52__Elem(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3085e4d__Size(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3086349__Key(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3086745__Value(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3086b41__Fields(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308703c__Statics(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3087438__Public(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3087834__Binded(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3087c30__Ordered(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308812b__Comparable(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3088527__Mutable(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3088923__Types(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3088d1e__Exceptional(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308921a__CanNil(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3089616__RC(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3089a12__Result(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3089e0d__Params(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308a24e_subIdent(jule::Ptr<_1e308404a_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1e308a8d1_Str(_1e308a55c_comptimeValue*);
inline jule::Bool _1e308ac22_Equal(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e308b272__Unwrap(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308b66d__Type(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308ba69__Lvalue(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308be65__Mutable(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308c361__Const(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308c75c__Field(jule::Ptr<_1e308a55c_comptimeValue>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e308ca9d_subIdent(jule::Ptr<_1e308a55c_comptimeValue>, jule::Str*);
inline jule::Str _1e308d230_Str(_1e308cdab_comptimeFiles*);
inline jule::Bool _1e308d571_Equal(jule::Ptr<_1e308cdab_comptimeFiles>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e308d9e4_ready(_1e308cdab_comptimeFiles*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e308de12_step(_1e308cdab_comptimeFiles*, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::I64 _1e308e198_len(_1e308cdab_comptimeFiles*);
inline jule::Str _1e308e82a_Str(_1e308e4a6_comptimeFile*);
inline jule::Bool _1e308eb6b_Equal(jule::Ptr<_1e308e4a6_comptimeFile>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e3090188__Path(jule::Ptr<_1e308e4a6_comptimeFile>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3090584__Name(jule::Ptr<_1e308e4a6_comptimeFile>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3090980__Dir(jule::Ptr<_1e308e4a6_comptimeFile>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3090cc1_subIdent(jule::Ptr<_1e308e4a6_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)> _1e3093a1b_readyFn(jule::Ptr<_1e3093620_constraintChecker>);
inline jule::Bool _1e3093ca2_readyFi(jule::Ptr<_1e3093620_constraintChecker>);
inline jule::Bool _1e3094038_readySi(jule::Ptr<_1e3093620_constraintChecker>);
inline jule::Bool _1e30942be_ready(jule::Ptr<_1e3093620_constraintChecker>);
inline jule::Bool _1e3094555_check(jule::Ptr<_1e3093620_constraintChecker>);
inline jule::Bool _1e3095a1d_IsTraitImpl(_1e3095655_Impl*);
inline jule::Bool _1e3095ca4_IsStructImpl(_1e3095655_Impl*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30a3333_SelectPackage(_1e30a2d8d_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
inline jule::Ptr<_1e310ed40_Var> _1e30a372e_FindVar(_1e30a2d8d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e30a3b2a_FindTypeAlias(_1e30a2d8d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e30a4026_FindStruct(_1e30a2d8d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e30a4422_FindFn(_1e30a2d8d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e30a4763_FindTrait(_1e30a2d8d_scopeChecker*, jule::Str);
inline jule::Ptr<_1e30709c6_Enum> _1e30a4aa4_FindEnum(_1e30a2d8d_scopeChecker*, jule::Str);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30a4de5_FindTypeEnum(_1e30a2d8d_scopeChecker*, jule::Str);
inline jule::Bool _1e30a5247_isUnsafe(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Bool _1e30a54cd_isRoot(_1e30a2d8d_scopeChecker*);
inline void _1e30a56cb_stop(_1e30a2d8d_scopeChecker*);
inline jule::Bool _1e30a5962_stopped(_1e30a2d8d_scopeChecker*);
inline jule::Bool _1e30a5be8_isDeferred(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30a5e7e_getRoot(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30a6215_getHardRoot(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Ptr<_1e309d42c_Label> _1e30a6556_findLabel(_1e30a2d8d_scopeChecker*, jule::Str*);
inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30a6897_findLabelScope(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Str*);
inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30a6bd8_findLabelAll(_1e30a2d8d_scopeChecker*, jule::Str*);
inline jule::Bool _1e30a70d4_isDuplicatedIdent(_1e30a2d8d_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1e30a738c_checkVarDecl(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303720c_VarDecl>);
inline void _1e30a7645_checkTypeAlias(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e319e907_TypeAlias>*);
inline void _1e30a78ed_checkTypeAliasDecl(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303acd2_TypeAliasDecl>);
inline jule::Ptr<_1e309aa89_Scope> _1e30a7b84_getChild(_1e30a2d8d_scopeChecker*);
inline void _1e30a80a2_checkChildSsc(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3034490_ScopeTree>*, jule::Ptr<_1e309aa89_Scope>*, jule::Ptr<_1e30a2d8d_scopeChecker>*);
inline jule::Ptr<_1e309aa89_Scope> _1e30a849d_checkChildSc(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3034490_ScopeTree>*, jule::Ptr<_1e30a2d8d_scopeChecker>*);
inline jule::Ptr<_1e309aa89_Scope> _1e30a87de_checkChild(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3034490_ScopeTree>*);
inline void _1e30a8a97_checkAnonScope(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3034490_ScopeTree>);
inline void _1e30a8e0a_processErrorCall(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel>*, jule::Ptr<_20cb74604_Token>);
inline void _1e30a91b3_checkExpr(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e30287a3_Expr>);
inline jule::Ptr<_1e309aea7_If> _1e30a9504_checkIf(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3039c15_If>);
inline jule::Ptr<_1e309b2a4_Else> _1e30a9845_checkElse(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303a0de_Else>);
inline void _1e30a9aed_checkConditional(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303a595_Conditional>);
inline void _1e30aa0c6_checkIterScopeSsc(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Uintptr, jule::Ptr<_1e3034490_ScopeTree>, jule::Ptr<_1e309aa89_Scope>*, jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Ptr<_1e309aa89_Scope> _1e30aa57c_checkIterScopeSc(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Uintptr, jule::Ptr<_1e3034490_ScopeTree>, jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Ptr<_1e309aa89_Scope> _1e30aa978_checkIterScope(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Uintptr, jule::Ptr<_1e3034490_ScopeTree>*);
inline void _1e30aac31_checkInfIter(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3037c79_Iter>*);
inline void _1e30aaed9_checkWhileIter(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3037c79_Iter>*);
inline void _1e30ab407_checkComptimeRangeIter(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3037c79_Iter>*, jule::Ptr<_1e309c8c1_RangeIter>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e30ab6b0_checkRangeIter(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3037c79_Iter>*);
inline void _1e30ab968_checkIter(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3037c79_Iter>);
inline jule::Bool _1e30abca9_checkValidContLabel(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Uintptr);
inline jule::Bool _1e30ac0ea_checkValidBreakLabel(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e309cc56_ContSt> _1e30ac43b_checkContValidScope(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303975e_ContSt>);
inline void _1e30ac6e4_checkCont(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303975e_ContSt>);
inline void _1e30ac99c_checkLabel(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3031a53_LabelSt>);
inline void _1e30acc55_pushGoto(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3031e2c_GotoSt>);
inline void _1e30ad00d_checkPostfix(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032e1c_AssignSt>);
inline jule::Bool _1e30ad34e_isNewAssignIdent(_1e30a2d8d_scopeChecker*, jule::Str);
inline void _1e30ad607_removeInteriorMutRisk(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e30adaad_checkStructureAssignOp(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_1e3032e1c_AssignSt>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e30add66_checkSingleAssign(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032e1c_AssignSt>*);
inline void _1e30ae3e9_processEndPartOfMultiAssign(_1e30a2d8d_scopeChecker*, jule::Ptr<_1e309e560_MultiAssign>*, jule::Ptr<_1e3032e1c_AssignSt>*, jule::Ptr<_1e3032889_AssignLeft>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e30ae6a2_checkMultiAssign(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032e1c_AssignSt>*);
inline void _1e30ae95a_singleDeclAssign(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032e1c_AssignSt>*);
inline void _1e30aec13_checkAssignSt(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032e1c_AssignSt>);
inline jule::Ptr<_1e309aa89_Scope> _1e30b010e_checkCaseScope(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e30a0808_Case>*, jule::Ptr<_1e3034490_ScopeTree>*);
inline jule::Ptr<_1e30a0808_Case> _1e30b0670_checkCase(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e309ebc0_Match>, jule::I64, jule::Ptr<_1e303b288_Case>, jule::Ptr<_1e316ee05_Data>);
inline void _1e30b0a8d_checkCases(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303b9c5_MatchCase>*, jule::Ptr<_1e309ebc0_Match>, jule::Ptr<_1e316ee05_Data>);
inline jule::Ptr<_1e30a0808_Case> _1e30b0e89_checkDefault(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e309ebc0_Match>, jule::Ptr<_1e303a0de_Else>);
inline void _1e30b12ec_checkComptimePanic(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_20cb74604_Token>, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e30b1660_processConstMatch(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e309ebc0_Match>*, jule::Ptr<_1e303b9c5_MatchCase>*);
inline void _1e30b1918_checkTypeMatch(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303b9c5_MatchCase>*);
inline void _1e30b1bc1_checkCommonMatch(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303b9c5_MatchCase>*);
inline void _1e30b1e79_checkMatch(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e303b9c5_MatchCase>);
inline void _1e30b2232_checkFall(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3032229_FallSt>);
inline jule::Ptr<_1e309d130_BreakSt> _1e30b2573_checkBreakWithLabel(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3039385_BreakSt>);
inline jule::Ptr<_1e309d130_BreakSt> _1e30b28b4_checkPlainBreak(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3039385_BreakSt>);
inline void _1e30b2b6c_checkBreak(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3039385_BreakSt>);
inline void _1e30b2e25_checkRet(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e30375d6_RetSt>);
inline void _1e30b31cd_checkUseExpr(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3029177_UseExpr>);
inline void _1e30b3486_checkNode(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Any*);
inline void _1e30b3684_checkResult(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline void _1e30b3882_checkTree(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline void _1e30b3be5_checkGoto(_1e30a2d8d_scopeChecker*, jule::Ptr<_1e30a1e7a_scopeGoto>*, jule::Ptr<_1e30a18e7_scopeLabel>*);
inline void _1e30b3de3_checkGotos(_1e30a2d8d_scopeChecker*);
inline void _1e30b40e1_checkLabels(_1e30a2d8d_scopeChecker*);
inline void _1e30b42de_checkVars(_1e30a2d8d_scopeChecker*);
inline void _1e30b44dc_checkAliases(_1e30a2d8d_scopeChecker*);
inline void _1e30b4850_check(jule::Ptr<_1e30a2d8d_scopeChecker>, jule::Ptr<_1e3034490_ScopeTree>*, jule::Ptr<_1e309aa89_Scope>*);
inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30b4ad6_newChildChecker(jule::Ptr<_1e30a2d8d_scopeChecker>);
inline void _1e30b5e4a_checkCdef(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b6203_checkTypedef(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b64ab_checkNamespace(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b6764_checkDeprecated(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b6a1c_checkTest(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b6cc5_checkDirective(_1e30b5a3d_directiveChecker*, jule::Ptr<_1e302388b_Directive>*);
inline void _1e30b6ec3_check(_1e30b5a3d_directiveChecker*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30bc4a1_SelectPackage(_1e30bbeb7_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
inline jule::Ptr<_1e310ed40_Var> _1e30bc89c_FindVar(_1e30bbeb7_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e30bcc98_FindTypeAlias(_1e30bbeb7_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e30bd194_FindStruct(_1e30bbeb7_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e30bd590_FindFn(_1e30bbeb7_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e30bd8d1_FindTrait(_1e30bbeb7_ImportInfo*, jule::Str);
inline jule::Ptr<_1e30709c6_Enum> _1e30bdc22_FindEnum(_1e30bbeb7_ImportInfo*, jule::Str);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30be063_FindTypeEnum(_1e30bbeb7_ImportInfo*, jule::Str);
inline jule::Bool _1e30be508_isLookupable(_1e30bbeb7_ImportInfo*, jule::Str*);
inline jule::Bool _1e30be849_existIdent(_1e30bbeb7_ImportInfo*, jule::Str);
inline jule::Bool _1e30bead0_isAccessibleViaSelection(_1e30bbeb7_ImportInfo*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30c0383_SelectPackage(_1e30beddd_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
inline jule::Ptr<_1e310ed40_Var> _1e30c077e_FindVar(_1e30beddd_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e30c0b7a_FindTypeAlias(_1e30beddd_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e30c1076_FindStruct(_1e30beddd_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e30c1472_FindFn(_1e30beddd_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e30c17b3_FindTrait(_1e30beddd_Package*, jule::Str);
inline jule::Ptr<_1e30709c6_Enum> _1e30c1b04_FindEnum(_1e30beddd_Package*, jule::Str);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30c1e45_FindTypeEnum(_1e30beddd_Package*, jule::Str);
inline jule::Ptr<_1e308404a_comptimeTypeInfo> _1e30dc290_pushComptimeTypeInfo(_1e30dbd2d_commonSemaMeta*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30dcdea_SelectPackage(_1e30dc955_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
inline jule::Ptr<_1e310ed40_Var> _1e30dd2e6_FindVar(_1e30dc955_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e30dd6e2_FindTypeAlias(_1e30dc955_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e30ddadd_FindStruct(_1e30dc955_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e30dded9_FindFn(_1e30dc955_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e30de32a_FindTrait(_1e30dc955_Sema*, jule::Str);
inline jule::Ptr<_1e30709c6_Enum> _1e30de66b_FindEnum(_1e30dc955_Sema*, jule::Str);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30de9ac_FindTypeEnum(_1e30dc955_Sema*, jule::Str);
inline jule::Bool _1e30dedb9_isFlag(_1e30dc955_Sema*, jule::I64);
inline void _1e30e0172_setCurrentFile(_1e30dc955_Sema*, jule::Ptr<_1e3169ad1_SymbolTable>);
inline void _1e30e0590_pushErr(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e30e0903_pushSuggestion(_1e30dc955_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30e0cee_isAccessibleDefine(_1e30dc955_Sema*, jule::Bool, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e30e12a5_isDuplicatedIdent(_1e30dc955_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1e30e1618_checkDirectives(jule::Ptr<_1e30dc955_Sema>, jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Any);
inline jule::Bool _1e30e1abe_checkGenericQuantity(_1e30dc955_Sema*, jule::I64, jule::I64, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e30e1eba_isDuplicatedImportSelection(_1e30dc955_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1e30e23b6_getImportDef(_1e30dc955_Sema*, jule::Str*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline jule::Bool _1e65be087_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::Bool _1e65c3058_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e319e907_TypeAlias>*);
inline jule::Bool _1e65c6ed5_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Bool _1e65cb0e9_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e65d0076_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e30709c6_Enum>*);
inline jule::Bool _1e65d4003_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e30721d1_TypeEnum>*);
inline jule::Bool _1e65d7e80_checkImportSelection(_1e30dc955_Sema*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e30e2b03_checkImportSelectedSelections(_1e30dc955_Sema*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline jule::Bool _1e65dc65a_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e310ed40_Var>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65dd79e_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65e0dcd_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e30450c7_Struct>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65e34a7_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e305a032_Fn>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65e5a2b_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e306d2cb_Trait>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65e817c_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e30709c6_Enum>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e65ea712_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e30721d1_TypeEnum>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e30e3340_checkImportAllSelections(_1e30dc955_Sema*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline jule::Bool _1e30e3681_checkImportSelections(_1e30dc955_Sema*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline jule::Bool _1e30e39c2_isUseAliasDuplication(_1e30dc955_Sema*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline jule::Bool _1e30e3d13_checkImport(_1e30dc955_Sema*, jule::Ptr<_1e30bbeb7_ImportInfo>*);
inline void _1e30e4011_checkImports(_1e30dc955_Sema*);
inline void _1e30e420e_implFileImpls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e30e440c_implImpls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e30e460a_checkEnums(jule::Ptr<_1e30dc955_Sema>);
inline void _1e30e4808_checkFileInherits(jule::Ptr<_1e30dc955_Sema>);
inline void _1e30e4a06_checkInherits(jule::Ptr<_1e30dc955_Sema>);
inline _1e31b25a7_typeChecker _1e30e4eac_typeChecker(jule::Ptr<_1e30dc955_Sema>, jule::Trait<_1e31c0230_Lookup>, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>, jule::Ptr<_1e31b15b7_referencer>);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e551d_buildTypeWithRefers(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e302446e_TypeDecl>*, jule::Trait<_1e31c0230_Lookup>, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>, jule::Ptr<_1e31b15b7_referencer>);
inline jule::Bool _1e30e5a7e_checkTypeWithRefers(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e31a78bb_TypeSymbol>*, jule::Trait<_1e31c0230_Lookup>, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>, jule::Ptr<_1e31b15b7_referencer>);
inline jule::Ptr<_1e3093620_constraintChecker> _1e30e5d15_constraintChecker(jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e30e6211_checkType(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e31a78bb_TypeSymbol>*, jule::Trait<_1e31c0230_Lookup>);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e66b7_buildTypeWithGenerics(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e302446e_TypeDecl>*, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>, jule::Ptr<_1e30610e3_ReferenceStack>);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e6d49_selectType(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e302446e_TypeDecl>*);
inline jule::Ptr<_1e3171ae9_Eval> _1e30e7300_evalpd(jule::Ptr<_1e30dc955_Sema>, jule::Trait<_1e31c0230_Lookup>, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e310ed40_Var>);
inline jule::Ptr<_1e3171ae9_Eval> _1e30e76eb_evalp(jule::Ptr<_1e30dc955_Sema>, jule::Trait<_1e31c0230_Lookup>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e3171ae9_Eval> _1e30e7a3c_eval(jule::Ptr<_1e30dc955_Sema>, jule::Trait<_1e31c0230_Lookup>);
inline jule::Bool _1e30e809d_checkAssignType(jule::Ptr<_1e30dc955_Sema>, jule::Bool, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e30e8554_checkTypeCompatibility(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e8a0a_buildNonGenericTypeKind(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e302446e_TypeDecl>*, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>*, jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>*);
inline jule::Bool _1e30e8e06_buildFnNonGenericTypeKinds(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>*, jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>*);
inline jule::Ptr<_1e305ce36_FnIns> _1e30e9247_getTraitCheckFnKind(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e30e96ed_checkConstraintsFn(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Bool _1e30e9ba4_checkConstraintsStruct(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e3047d55_StructIns>);
inline jule::Bool _1e30ea0a0_fnEnvironment(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)>);
inline void _1e30ea358_checkFnParamKind(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305be8a_ParamIns>*);
inline jule::Bool _1e30ea699_reloadFnInsTypes(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Bool _1e30eab50_checkRefValidityForInitExpr(jule::Ptr<_1e30dc955_Sema>, jule::Bool, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e30eae91_isMutRiskyStruct(_1e30dc955_Sema*, jule::Ptr<_1e3047d55_StructIns>*);
inline jule::Bool _1e30eb5ac_checkValidityForInitExpr(jule::Ptr<_1e30dc955_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e30eb9a8_checkTypeAliasDeclKind(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e319e907_TypeAlias>*, jule::Trait<_1e31c0230_Lookup>);
inline void _1e30ebd1b_checkTypeAliasDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e319e907_TypeAlias>*, jule::Trait<_1e31c0230_Lookup>);
inline void _1e30ec0c4_checkTypeAliasDeclDup(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e319e907_TypeAlias>*);
inline jule::Bool _1e30ec35a_checkTypeAliasDecls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e66979ce_checkEnumItemsDup(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e306ee59_EnumItem>>);
inline void _1e66a4821_checkEnumItemsDup(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>>);
inline void _1e30ec8bb_checkEnumItemsStr(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30709c6_Enum>*);
inline void _1e6678c9b_checkEnumItemInt(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e30709c6_Enum>*, jule::Ptr<_1e31a82c3_Prim>*, jule::Ptr<_1e306ee59_EnumItem>*, jule::U64*);
inline void _1e6688690_checkEnumItemInt(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e30709c6_Enum>*, jule::Ptr<_1e31a82c3_Prim>*, jule::Ptr<_1e306ee59_EnumItem>*, jule::I64*);
inline void _1e667556c_checkEnumItemsInt1(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e31a82c3_Prim>*, jule::Ptr<_1e30709c6_Enum>*);
inline void _1e6685725_checkEnumItemsInt1(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e31a82c3_Prim>*, jule::Ptr<_1e30709c6_Enum>*);
inline void _1e30ed56a_checkEnumItemsInt(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30709c6_Enum>*);
inline void _1e30ed823_checkEnumDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30709c6_Enum>*);
inline void _1e30edacb_checkTypeEnumDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30721d1_TypeEnum>*);
inline jule::Bool _1e30edd62_checkEnumDecls(jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e30ee0e8_checkTypeEnumDecls(jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e30ee439_checkDeclGenerics(_1e30dc955_Sema*, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>*);
inline jule::Bool _1e30ee77a_checkFnDeclParamsDup(_1e30dc955_Sema*, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e30eeabb_checkFnDeclResultDup(_1e30dc955_Sema*, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e30eee0c_checkFnVariadicParam(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e31001b5_checkFnDeclPrototype(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e310066b_catchTraitInheritCycle(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e306d2cb_Trait>, _227713453_StrBuilder*);
inline jule::Bool _1e31009ac__checkTraitDeclInherits(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e3100c65_checkTraitDeclInherits(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e310101d_checkTraitDeclMethod(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e31012c6_checkTraitDeclMethods(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e310157e_checkTraitDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e3101815_checkTraitDecls(jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e3101c11_checkTraitImplMethods(_1e30dc955_Sema*, jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e3095655_Impl>*);
inline jule::Bool _1e310210c_implToStruct(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*, jule::Ptr<_1e3095655_Impl>*);
inline void _1e31023b5_implTrait(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3095655_Impl>*);
inline void _1e310266d_implStruct(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3095655_Impl>*);
inline void _1e3102926_implImpl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3095655_Impl>*);
inline void _1e3102c89_checkVarDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e310ed40_Var>*, jule::Trait<_1e31c0230_Lookup>);
inline void _1e3103042_checkGlobalVarDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e310ed40_Var>*);
inline jule::Bool _1e31032c8_checkGlobalDecls(jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e31036c4_checkStructTraitImpl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e3103a15_checkStructImpls(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Bool _1e3103d56_checkStructFields(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e310410e_checkStructDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Bool _1e3104395_checkStructDecls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310464d_checkAnonFuncDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e3104906_checkFuncDecl(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e3104c47_checkFuncDeclsBy(jule::Ptr<_1e30dc955_Sema>, jule::Slice<jule::Ptr<_1e305a032_Fn>>*);
inline jule::Bool _1e3104ecd_checkFuncDecls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e31053eb_pushCycleError(_1e30dc955_Sema*, jule::Str*, jule::Str*, _227713453_StrBuilder*);
inline void _1e3105aa0_checkPackageDecls(jule::Ptr<_1e30dc955_Sema>);
inline void _1e3105e13_checkDataForTypeInference(_1e30dc955_Sema*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline void _1e31061bb_checkVarValue(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e310ed40_Var>*);
inline void _1e310652e_evalVarValue(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e310ed40_Var>*, jule::Trait<_1e31c0230_Lookup>);
inline void _1e3106892_checkVar(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e310ed40_Var>*, jule::Trait<_1e31c0230_Lookup>);
inline void _1e3106a90_checkGlobals(jule::Ptr<_1e30dc955_Sema>);
inline jule::Ptr<_1e305ce36_FnIns> _1e3106e8b_readyToCheckFn(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_1e305a032_Fn>*);
inline void _1e31072ee_checkTypeMethod(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_1e305a032_Fn>*);
inline jule::Ptr<_1e305ce36_FnIns> _1e31077a5_checkStructInsOp(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_1e305a032_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1e305a032_Fn>)>);
inline jule::Bool _1e3107ba1_checkStructEnv(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e310809c_precheckStructIns(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_20cb74604_Token>);
inline void _1e3108355_checkStructIns(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e310860d_checkTypeStruct(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e310880b_checkStructTypes(jule::Ptr<_1e30dc955_Sema>);
inline void _1e3108ab4_checkStructInsOperators(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e3047d55_StructIns>);
inline void _1e3108d6c_precheckStructType(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e310906a_precheckStructTypes(jule::Ptr<_1e30dc955_Sema>);
inline void _1e3109323_checkRets(_1e30dc955_Sema*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e3109686_checkFnInsSc(_1e30dc955_Sema*, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_1e30a2d8d_scopeChecker>*);
inline void _1e31099e9_checkFnInsCaller(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_20cb74604_Token>);
inline void _1e3109ca2_checkFnIns(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e310a05a_checkFunc(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e310a313_checkTestFn(_1e30dc955_Sema*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e310a5bb_precheckFunc(jule::Ptr<_1e30dc955_Sema>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e310a7b9_precheckFuncs(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310a9b7_checkFuncs(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310abb5_checkPackageTypes(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310adb3_setFileSemaFields(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310b0b1_setSemaFields(jule::Ptr<_1e30dc955_Sema>);
inline void _1e310b369_check(jule::Ptr<_1e30dc955_Sema>, jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*);
inline _1e310b798_missingRetChecker static__1e310bb61_new(void);
inline jule::Bool _1e310be6e_checkConditional(_1e310b798_missingRetChecker*, jule::Ptr<_1e309b6c2_Conditional>);
inline jule::Bool _1e310c2b0_checkMatch(_1e310b798_missingRetChecker*, jule::Ptr<_1e309ebc0_Match>);
inline jule::Bool _1e310c601_checkInfIter(_1e310b798_missingRetChecker*, jule::Ptr<_1e309b9be_InfIter>);
inline jule::Bool _1e310c942_checkScope(_1e310b798_missingRetChecker*, jule::Ptr<_1e309aa89_Scope>);
inline jule::Bool _1e310cc83_check(_1e310b798_missingRetChecker*, jule::Ptr<_1e309aa89_Scope>);
inline jule::Bool _1e31101c5_IsInitialized(_1e310ed40_Var*);
inline jule::Bool _1e311045b_IsTypeInferred(_1e310ed40_Var*);
inline jule::Bool _1e31106e2_untypedConstant(_1e310ed40_Var*);
inline jule::Bool static__1e3111292_Dispose(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e311155b_Str(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31118d0_logical(jule::Ptr<_1e305a032_Fn>*, jule::Str);
inline jule::Bool static__1e3111b99_Eq(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3111e63_Gt(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e311222c_GtEq(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31124e6_Lt(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31127b0_LtEq(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3112b34_result(jule::Ptr<_1e305a032_Fn>*, jule::Str);
inline jule::Bool static__1e3112ded_Shl(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31131b7_Shr(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3113481_Add(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e311374a_Sub(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3113a14_Div(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3113ccd_Mul(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3114097_Mod(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3114361_BitAnd(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e311462a_BitOr(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31148e4_BitXor(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3114c68_unary(jule::Ptr<_1e305a032_Fn>*, jule::Str);
inline jule::Bool static__1e3115032_Neg(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31152eb_Pos(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31155b5_BitNot(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3115939_assign(jule::Ptr<_1e305a032_Fn>*, jule::Str);
inline jule::Bool static__1e3115c03_AddAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3115ebc_SubAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3116286_DivAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3116550_MulAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3116819_ModAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3116ad3_ShlAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3116d9c_ShrAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3117166_BitOrAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e3117430_BitAndAssign(jule::Ptr<_1e305a032_Fn>);
inline jule::Bool static__1e31176e9_BitXorAssign(jule::Ptr<_1e305a032_Fn>);
inline void _1e315225b_pushErr(_1e3151c61_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e31524e2_checkTrait(_1e3151c61_typeCompatibilityChecker*);
inline jule::Bool _1e3152778_checkPtr(_1e3151c61_typeCompatibilityChecker*);
inline jule::Bool _1e3152a0e_checkPrim(_1e3151c61_typeCompatibilityChecker*);
inline jule::Bool _1e3152e0a_typeEnum(_1e3151c61_typeCompatibilityChecker*, jule::Ptr<_1e30721d1_TypeEnum>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3153191_checkTypeEnum(_1e3151c61_typeCompatibilityChecker*);
inline jule::Bool _1e3153427_check(_1e3151c61_typeCompatibilityChecker*);
inline void _1e3153ea5_pushErr(_1e3153a10_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e315423b_checkValidity(_1e3153a10_assignTypeChecker*);
inline jule::Bool _1e31544c2_checkConst(_1e3153a10_assignTypeChecker*);
inline jule::Bool _1e3154758_isPrim(_1e3153a10_assignTypeChecker*);
inline jule::Bool _1e31549de_checkCompatibility(_1e3153a10_assignTypeChecker*);
inline jule::Bool _1e3154c75_check(_1e3153a10_assignTypeChecker*);
inline jule::Bool _1e6874705_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e6874062_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e687620c_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e687c7c9_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3156073_annotateConstraintMap(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e31563b4_annotateConstraintTup(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3156705_annotateConstraintFn(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3156a46_annotateConstraintIdent(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3156d87_annotateConstraint(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e31571ea_pushGeneric(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::I64);
inline jule::Bool _1e315753b_annotatePrim(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e315787c_annotateArr(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3157bbd_annotateSlc(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e31580b9_checkMapKey(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e315840a_annotateMap(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e315874b_annotateFn(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3158a8c_annotatePtr(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3158dcd_annotateSptr(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e315921e_annotateStruct(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3159560_annotateAny(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e31598a1_annotateKind(_1e315567c_dynamicTypeAnnotation*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3159b37_annotate(_1e315567c_dynamicTypeAnnotation*);
inline void _1e315aa7d_pushErrToken(_1e315a4d9_fnCallArgChecker*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e315ade1_pushErr(_1e315a4d9_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> _1e315b177_getParams(_1e315a4d9_fnCallArgChecker*);
inline jule::Bool _1e315b485_checkCounts(_1e315a4d9_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>*);
inline jule::Bool _1e315b93b_checkArg(_1e315a4d9_fnCallArgChecker*, jule::Ptr<_1e305be8a_ParamIns>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Bool _1e315bd37_push(_1e315a4d9_fnCallArgChecker*, jule::Ptr<_1e305be8a_ParamIns>*, jule::Ptr<_1e30287a3_Expr>);
inline jule::Bool _1e315c233_pushVariadic(_1e315a4d9_fnCallArgChecker*, jule::Ptr<_1e305be8a_ParamIns>*, jule::I64);
inline jule::Bool _1e315c574_checkArgs(_1e315a4d9_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>*);
inline jule::Bool _1e315c80a_checkDynamicTypeAnnotation(_1e315a4d9_fnCallArgChecker*);
inline jule::Bool _1e315ca91_check(_1e315a4d9_fnCallArgChecker*);
inline void _1e315d971_pushErr(_1e315d421_structLitChecker*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e315dcd4_pushSuggestion(_1e315d421_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e315e202_pushMatch(_1e315d421_structLitChecker*, jule::Ptr<_1e30472a5_FieldIns>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline void _1e315e565_checkPair(_1e315d421_structLitChecker*, jule::Ptr<_1e302cec2_FieldExprPair>*, jule::Slice<jule::Ptr<_1e30287a3_Expr>>*);
inline jule::Bool _1e315e8a6_readyExprs(_1e315d421_structLitChecker*, jule::Slice<jule::Ptr<_1e30287a3_Expr>>*);
inline void _1e315eb5e_check(_1e315d421_structLitChecker*, jule::Slice<jule::Ptr<_1e30287a3_Expr>>*);
inline jule::Ptr<_1e310ed40_Var> _1e31606dc_buildVar(_1e3160203_rangeChecker*, jule::Ptr<_1e303720c_VarDecl>*);
inline void _1e31608da_setSizeKey(_1e3160203_rangeChecker*);
inline void _1e3160d08_checkRangeExprValidity(_1e3160203_rangeChecker*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e3161006_checkSlice(_1e3160203_rangeChecker*);
inline void _1e3161204_checkArray(_1e3160203_rangeChecker*);
inline void _1e3161402_checkMapKeyA(_1e3160203_rangeChecker*);
inline void _1e3161600_checkMapKeyB(_1e3160203_rangeChecker*);
inline void _1e31617ed_checkMap(_1e3160203_rangeChecker*);
inline void _1e31619eb_checkStr(_1e3160203_rangeChecker*);
inline void _1e3161be9_checkComptime(_1e3160203_rangeChecker*);
inline jule::Bool _1e3161e80_checkComptimeRange(_1e3160203_rangeChecker*);
inline jule::Bool _1e3162216_check(_1e3160203_rangeChecker*);
inline void _1e3162d82_prepareTypes(_1e3162964_retTypeChecker*);
inline void _1e316313a_prepareExprs(_1e3162964_retTypeChecker*, jule::Ptr<_1e30287a3_Expr>*);
inline void _1e3163338_checkExprs(_1e3162964_retTypeChecker*);
inline jule::Bool _1e3163679_check(_1e3162964_retTypeChecker*, jule::Ptr<_1e30287a3_Expr>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e316a065_SelectPackage(_1e3169ad1_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
inline jule::Ptr<_1e310ed40_Var> _1e316a461_FindVar(_1e3169ad1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e316a85c_FindTypeAlias(_1e3169ad1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e316ac58_FindStruct(_1e3169ad1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e316b154_FindFn(_1e3169ad1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e316b495_FindTrait(_1e3169ad1_SymbolTable*, jule::Str);
inline jule::Ptr<_1e30709c6_Enum> _1e316b7d6_FindEnum(_1e3169ad1_SymbolTable*, jule::Str);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e316bb27_FindTypeEnum(_1e3169ad1_SymbolTable*, jule::Str);
inline jule::Ptr<_1e310ed40_Var> _1e316c243_findVar(_1e3169ad1_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e316c6e9_findTypeAlias(_1e3169ad1_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1e316cae5_defByIdent(_1e3169ad1_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1e316d09b_isDuplicatedIdent(_1e3169ad1_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1e31702ac_IsNil(_1e316ee05_Data*);
inline jule::Bool _1e3170543_IsVoid(_1e316ee05_Data*);
inline jule::Bool _1e31707c9_IsConst(_1e316ee05_Data*);
inline jule::Bool _1e3170b1a_GoodOperand(_1e316ee05_Data*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3172149_pushErr(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e31724ac_pushSuggestion(_1e3171ae9_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e31726aa_allowBuiltin(_1e3171ae9_Eval*);
inline void _1e31728a8_disallowBuiltin(_1e3171ae9_Eval*);
inline jule::Bool _1e3172b3e_isUnsafe(_1e3171ae9_Eval*);
inline jule::Bool _1e3172dc5_isGlobal(_1e3171ae9_Eval*);
inline jule::Bool _1e31731d3_applyNumericPrefix(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3173524_litStr(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3173865_litRune(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3173ba6_litFloat(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3173ee7_litInt(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3174338_litNum(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3174679_evalLit(_1e3171ae9_Eval*, jule::Ptr<_1e302984d_LitExpr>);
inline jule::Any _1e31749ba_findBuiltins(_1e3171ae9_Eval*, jule::Str*);
inline jule::Any _1e3174db6_getDef(_1e3171ae9_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1e30610e3_ReferenceStack> _1e317514c_getOwnerRefers(_1e3171ae9_Eval*);
inline void _1e69d5129_pushReference(_1e3171ae9_Eval*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e69e8d74_pushReference(_1e3171ae9_Eval*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e6aa61a6_pushReference(_1e3171ae9_Eval*, jule::Ptr<_1e3047d55_StructIns>*);
inline jule::Ptr<_1e316ee05_Data> _1e3175746__evalEnum(_1e3171ae9_Eval*, jule::Ptr<_1e30709c6_Enum>);
inline jule::Ptr<_1e316ee05_Data> _1e3175b42_evalEnum(_1e3171ae9_Eval*, jule::Ptr<_1e30709c6_Enum>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3175e83__evalTypeEnum(_1e3171ae9_Eval*, jule::Ptr<_1e30721d1_TypeEnum>);
inline jule::Ptr<_1e316ee05_Data> _1e317637e_evalTypeEnum(_1e3171ae9_Eval*, jule::Ptr<_1e30721d1_TypeEnum>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e31766c0__evalStruct(_1e3171ae9_Eval*, jule::Ptr<_1e3047d55_StructIns>);
inline jule::Ptr<_1e316ee05_Data> _1e3176abb_evalStruct(_1e3171ae9_Eval*, jule::Ptr<_1e3047d55_StructIns>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3176e0c_evalFnIns(_1e3171ae9_Eval*, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e3177270_checkDeprecated(_1e3171ae9_Eval*, jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e317766b_evalFn(_1e3171ae9_Eval*, jule::Ptr<_1e305a032_Fn>, jule::Ptr<_20cb74604_Token>);
inline void _1e3177a89_pushIllegalCycleError(_1e3171ae9_Eval*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*, _227713453_StrBuilder*);
inline jule::Bool _1e3177e85_checkCrossCycle(_1e3171ae9_Eval*, jule::Ptr<_1e310ed40_Var>*, _227713453_StrBuilder*);
inline jule::Bool _1e3178381_checkIllegalCycles(_1e3171ae9_Eval*, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e317877c_evalVar(_1e3171ae9_Eval*, jule::Ptr<_1e310ed40_Var>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3178b78_evalTypeAlias(_1e3171ae9_Eval*, jule::Ptr<_1e319e907_TypeAlias>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3179074_evalDef(_1e3171ae9_Eval*, jule::Any*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e31793b5_evalIdent(_1e3171ae9_Eval*, jule::Ptr<_1e302a1cd_IdentExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e3179706_evalUnary(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302a860_UnaryExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e3179a47_evalVariadic(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302ac39_VariadicExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e3179d88_evalUnsafe(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3029c27_UnsafeExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e317a1c9_evalArr(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302ecc6_SliceExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e317a680_evalExpSlc(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302ecc6_SliceExpr>, jule::Ptr<_1e31a06e9_TypeKind>, jule::Any);
inline jule::Ptr<_1e316ee05_Data> _1e317a9c1_evalSliceExpr(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302ecc6_SliceExpr>);
inline void _1e317ad34_checkIntegerIndexingByData(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>);
inline void _1e317b252_indexingPtr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline void _1e317b670_indexingArr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline void _1e317ba8d_indexingSlc(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline void _1e317beab_indexingMap(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline void _1e317c3c9_indexingStr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline void _1e317c7e7_toIndexing(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline jule::Bool _1e317cc9d_pushGenericsFromExprSubIdent(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302b8b6_SubIdentExpr>*, jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>*, jule::Ptr<_1e30287a3_Expr>*);
inline jule::Bool _1e317d199_pushGenericsFromData(jule::Ptr<_1e3171ae9_Eval>, jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>*, jule::Ptr<_1e30287a3_Expr>*);
inline void _1e317d50c_evalIdentDeclFromIndexing(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline jule::Bool _1e317d9b3_checkGenericFn(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_20cb74604_Token>*, jule::Any*);
inline void _1e317dd26_evalFnGenericFromIndexing(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030766_IndexingExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e317e167_evalIndexing(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3030766_IndexingExpr>);
inline __jule_tuple_x_1e316ee05_Data__jule_tuple_x_1e316ee05_Data _1e317e4a8_evalSlicingExprs(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3030dc6_SlicingExpr>*);
inline void _1e317e761_slicingArr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e317eb7e_slicingStr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3180157_checkSlicing(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3030dc6_SlicingExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3180498_evalSlicing(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3030dc6_SlicingExpr>);
inline void _1e31808b6_castPtr(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3180cd4_castStruct(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3181202_castRef(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3181620_castSlc(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3181983_castStr(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3181da1_castInt(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e31822be_castNum(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e31826dc_castPrim(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline void _1e3182a50_castConstant(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3182e6d_castTypeEnum(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline void _1e318338b_castTypeEnumT(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_1e316ee05_Data> _1e3183842_evalCastByTypeNData(_1e3171ae9_Eval*, jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3183ce8_evalCastT(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e30287a3_Expr>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_1e316ee05_Data> _1e3184139_evalCast(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302b113_CastExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318447a_evalNsSelection(_1e3171ae9_Eval*, jule::Ptr<_1e302b4dc_NsSelectionExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e3184931_evalStructLitExplicit(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3047d55_StructIns>, jule::Slice<jule::Ptr<_1e30287a3_Expr>>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3184c72_evalStructLit(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302d7ec_StructLit>);
inline _1e31b25a7_typeChecker _1e3185008_typeChecker(_1e3171ae9_Eval*);
inline jule::Ptr<_1e316ee05_Data> _1e3185349_evalType(_1e3171ae9_Eval*, jule::Ptr<_1e302446e_TypeDecl>);
inline void _1e31856ac_callTypeFn(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3185a20_callBuiltinFn(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3185d83_checkFnOfConcurrentCall(_1e3171ae9_Eval*, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_20cb74604_Token>);
inline void _1e31862a1_processExceptionalHandler(_1e3171ae9_Eval*, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3186614_callFn(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3186955_evalFnCall(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302c4cc_FnCallExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e3186d51_evalEnumStatic(_1e3171ae9_Eval*, jule::Ptr<_1e30709c6_Enum>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318724c_evalTypeEnumStatic(_1e3171ae9_Eval*, jule::Ptr<_1e30721d1_TypeEnum>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3187648_evalStructStatic(_1e3171ae9_Eval*, jule::Ptr<_1e3047d55_StructIns>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3187aee_evalTraitSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3188160_evalStructSubIdentField(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e30472a5_FieldIns>*);
inline jule::Ptr<_1e316ee05_Data> _1e31886c1_evalStructSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_1e3047d55_StructIns>, jule::Ptr<_1e302b8b6_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e316ee05_Data> _1e3188a12_evalIntTypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3188d53_evalUintTypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3189194_evalI8TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e31894d5_evalI16TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3189826_evalI32TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3189b67_evalI64TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e3189ea8_evalU8TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318a2e9_evalU16TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318a63a_evalU32TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318a97b_evalU64TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318acbc_evalF32TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318b10d_evalF64TypeStatic(_1e3171ae9_Eval*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318b509_evalPrimStatic(_1e3171ae9_Eval*, jule::Str, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e316ee05_Data> _1e318b905_evalTypeStatic(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_1e302b8b6_SubIdentExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e6bc0259_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e308404a_comptimeTypeInfo>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bc4516_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e30750d5_comptimeStructField>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bc877e_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e307b64c_comptimeEnumField>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bcca3b_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e307e0de_comptimeParam>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bd1de7_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e3078391_comptimeStatic>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bd6160_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e308a55c_comptimeValue>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e6bda3c8_comptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e308e4a6_comptimeFile>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>*);
inline __jule_tuple_x_1e316ee05_Data__jule_tuple_bool _1e318c2a7_tryComptimeObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e302b8b6_SubIdentExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318c6a3_evalObjSubIdent(_1e3171ae9_Eval*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_1e302b8b6_SubIdentExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318c9e4_evalSubIdent(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302b8b6_SubIdentExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318cd35_evalTuple(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e3029474_TupleExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318d231_evalMap(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e31ade66_Map>, jule::Ptr<_1e302dca3_BraceLit>);
inline jule::Ptr<_1e316ee05_Data> _1e318d572_evalBraceLit(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302dca3_BraceLit>);
inline jule::Ptr<_1e316ee05_Data> _1e318d8b3_evalAnonFunc(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e303612e_FnDecl>);
inline jule::Ptr<_1e316ee05_Data> _1e318dc04_evalBinop(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e302bd6c_BinopExpr>);
inline jule::Ptr<_1e316ee05_Data> _1e318e045_evalExprKind(jule::Ptr<_1e3171ae9_Eval>, jule::Any);
inline jule::Ptr<_1e316ee05_Data> _1e318e386_eval1(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e30287a3_Expr>);
inline jule::Ptr<_1e316ee05_Data> _1e318e6c7_eval(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e30287a3_Expr>);
inline jule::Ptr<_1e316ee05_Data> _1e318ea18_evalExpr1(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e30287a3_Expr>);
inline jule::Ptr<_1e316ee05_Data> _1e318ed59_evalExpr(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_1e30287a3_Expr>);
inline _1e3190321_unaryEval static__1e3190761_new(jule::Ptr<_1e3171ae9_Eval>);
inline void _1e319095e_minus(_1e3190321_unaryEval*);
inline void _1e3190b5c_plus(_1e3190321_unaryEval*);
inline void _1e3190d5a_caret(_1e3190321_unaryEval*);
inline void _1e3191058_excl(_1e3190321_unaryEval*);
inline void _1e3191256_star(_1e3190321_unaryEval*);
inline void _1e3191454_amper(_1e3190321_unaryEval*);
inline void _1e3191652_typeDecl(_1e3190321_unaryEval*);
inline void _1e3191850_evalData(_1e3190321_unaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3191b91_eval(_1e3190321_unaryEval*, jule::Ptr<_1e302a860_UnaryExpr>);
inline _1e31922ac_binaryEval static__1e3192895_newPlain(jule::Ptr<_1e3171ae9_Eval>);
inline _1e31922ac_binaryEval static__1e3192bd6_new(jule::Ptr<_1e3171ae9_Eval>, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e3192e6c_checkTypeCompatibility(_1e31922ac_binaryEval*);
inline jule::Bool _1e3193203_checkStructCommonOperatorCompatibility(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3193489_evalComptimeTypeInfo(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3193720_evalNil(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e31939a6_evalEnum(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3193c3c_evalTypeEnum(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3193ec3_evalSptr(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3194259_evalPtr(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e31944e0_evalArr(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3194776_evalSlc(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3194a0c_evalStruct(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3194c93_evalTrait(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3195029_evalAny(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e31952b0_evalBool(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3195546_evalStr(_1e31922ac_binaryEval*);
inline void _1e3195744_setTypeToGreater(_1e31922ac_binaryEval*);
inline void _1e31959ec_checkModData(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3195bea_mod(_1e31922ac_binaryEval*);
inline jule::Bool _1e31960e6_numbersAreCompatibile(_1e31922ac_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1e316ee05_Data> _1e319637c_evalFloat(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3196613_evalInt(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3196899_evalPrim(_1e31922ac_binaryEval*);
inline void _1e3196a97_checkSpecialCases(_1e31922ac_binaryEval*);
inline jule::Ptr<_1e316ee05_Data> _1e3196d2d_evalOp(_1e31922ac_binaryEval*);
inline void _1e31970d6_evalConst(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e319738e_checkData(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e319758c_checkDatas(_1e31922ac_binaryEval*);
inline void _1e3197845_setModel(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e3197aed_postEval(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3197ee9_solveExplicit(_1e31922ac_binaryEval*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e319833a_eval(_1e31922ac_binaryEval*, jule::Ptr<_1e302bd6c_BinopExpr>*);
inline jule::Str _1e31a0ab2_Str(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a0e03_Equal(jule::Ptr<_1e31a06e9_TypeKind>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Bool _1e31a1541_Binded(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a17c7_IsNil(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a1a5d_Void(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a1ce4_Comparable(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a207a_Mutable(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a2311_Ordered(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a2597_NilCompatible(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a282d_PerformsRC(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a2ab4_Variadicable(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31a82c3_Prim> _1e31a2d4a_Prim(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31abcee_Sptr> _1e31a30d1_Sptr(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31b05b6_Ptr> _1e31a3367_Ptr(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e30709c6_Enum> _1e31a35ed_Enum(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31a3884_TypeEnum(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31aeae3_Arr> _1e31a3b1a_Arr(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31ac7c2_Slc> _1e31a3da1_Slc(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e305ce36_FnIns> _1e31a4137_Fn(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3047d55_StructIns> _1e31a43bd_Struct(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e306d2cb_Trait> _1e31a4654_Trait(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31ade66_Map> _1e31a48da_Map(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e31ad3b6_Tuple> _1e31a4b71_Tup(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a4e07_comptime(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3076c85_comptimeStructFields> _1e31a518d_comptimeStructFields(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e30750d5_comptimeStructField> _1e31a5424_comptimeStructField(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e307c95b_comptimeEnumFields> _1e31a56aa_comptimeEnumFields(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e307b64c_comptimeEnumField> _1e31a5941_comptimeEnumField(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3081355_comptimeParams> _1e31a5bc7_comptimeParams(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e307e0de_comptimeParam> _1e31a5e5d_comptimeParam(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3074579_comptimeRange> _1e31a61e4_comptimeRange(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3082950_comptimeTypeInfos> _1e31a647a_comptimeTypeInfos(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e308404a_comptimeTypeInfo> _1e31a6711_comptimeTypeInfo(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e307a052_comptimeStatics> _1e31a6997_comptimeStatics(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e3078391_comptimeStatic> _1e31a6c2d_comptimeStatic(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e308a55c_comptimeValue> _1e31a6eb4_comptimeValue(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e308e4a6_comptimeFile> _1e31a724a_comptimeFile(_1e31a06e9_TypeKind*);
inline jule::Ptr<_1e308cdab_comptimeFiles> _1e31a74d1_comptimeFiles(_1e31a06e9_TypeKind*);
inline jule::Bool _1e31a7c40_checked(_1e31a78bb_TypeSymbol*);
inline jule::Str _1e31a8614_Str(_1e31a82c3_Prim*);
inline jule::Bool _1e31a8955_Equal(jule::Ptr<_1e31a82c3_Prim>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Bool _1e31a8dea_IsConstraint(_1e31a82c3_Prim*);
inline jule::Bool _1e31a9181_IsI8(_1e31a82c3_Prim*);
inline jule::Bool _1e31a9417_IsI16(_1e31a82c3_Prim*);
inline jule::Bool _1e31a969d_IsI32(_1e31a82c3_Prim*);
inline jule::Bool _1e31a9934_IsI64(_1e31a82c3_Prim*);
inline jule::Bool _1e31a9bba_IsU8(_1e31a82c3_Prim*);
inline jule::Bool _1e31a9e51_IsU16(_1e31a82c3_Prim*);
inline jule::Bool _1e31aa1d7_IsU32(_1e31a82c3_Prim*);
inline jule::Bool _1e31aa46d_IsU64(_1e31a82c3_Prim*);
inline jule::Bool _1e31aa704_IsF32(_1e31a82c3_Prim*);
inline jule::Bool _1e31aa98a_IsF64(_1e31a82c3_Prim*);
inline jule::Bool _1e31aac21_IsInt(_1e31a82c3_Prim*);
inline jule::Bool _1e31aaea7_IsUint(_1e31a82c3_Prim*);
inline jule::Bool _1e31ab23d_IsUintptr(_1e31a82c3_Prim*);
inline jule::Bool _1e31ab4c4_IsBool(_1e31a82c3_Prim*);
inline jule::Bool _1e31ab75a_IsStr(_1e31a82c3_Prim*);
inline jule::Bool _1e31ab9e1_IsAny(_1e31a82c3_Prim*);
inline jule::Str _1e31ac173_Str(_1e31abcee_Sptr*);
inline jule::Bool _1e31ac4b4_Equal(jule::Ptr<_1e31abcee_Sptr>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e31acc56_Str(_1e31ac7c2_Slc*);
inline jule::Bool _1e31ad097_Equal(jule::Ptr<_1e31ac7c2_Slc>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e31ad73a_Str(_1e31ad3b6_Tuple*);
inline jule::Bool _1e31ada7b_Equal(jule::Ptr<_1e31ad3b6_Tuple>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e31ae2da_Str(_1e31ade66_Map*);
inline jule::Bool _1e31ae62b_Equal(jule::Ptr<_1e31ade66_Map>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e31aee67_Str(_1e31aeae3_Arr*);
inline jule::Bool _1e31b02a8_Equal(jule::Ptr<_1e31aeae3_Arr>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e31b093a_Str(_1e31b05b6_Ptr*);
inline jule::Bool _1e31b0c7b_Equal(jule::Ptr<_1e31b05b6_Ptr>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Bool _1e31b1100_IsUnsafe(_1e31b05b6_Ptr*);
inline void _1e31b2ce4_pushErr(_1e31b25a7_typeChecker*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e31b2ee2_allowBuiltin(_1e31b25a7_typeChecker*);
inline void _1e31b31e0_disallowBuiltin(_1e31b25a7_typeChecker*);
inline void _1e6ec0229_pushReference(_1e31b25a7_typeChecker*, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e6ec2968_pushReference(_1e31b25a7_typeChecker*, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e31b3751_pushReferenceByKind(_1e31b25a7_typeChecker*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e31b3b6e_pushCycleError(_1e31b25a7_typeChecker*, jule::Any, jule::Any, _227713453_StrBuilder*);
inline jule::Bool _1e31b406a_checkCrossCycle(_1e31b25a7_typeChecker*, jule::Any, _227713453_StrBuilder*);
inline jule::Bool _1e31b4466_checkIllegalCycles(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1e31a0243_Kind> _1e31b4862_fromTypeAlias(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e319e907_TypeAlias>*);
inline jule::Ptr<_1e30709c6_Enum> _1e31b4c5d_fromEnum(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e30709c6_Enum>*);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31b5159_fromTypeEnum(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e30721d1_TypeEnum>*);
inline jule::Ptr<_1e306d2cb_Trait> _1e31b5555_fromTrait(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e31b5951_checkStructIns(_1e31b25a7_typeChecker*, jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_20cb74604_Token>*);
inline void _1e31b5c09_appendUsedStructReference(_1e31b25a7_typeChecker*, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Ptr<_1e3047d55_StructIns> _1e31b6105_buildStructInstance(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Ptr<_1e3047d55_StructIns> _1e31b6501_fromStruct(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*, jule::Ptr<_1e30450c7_Struct>*);
inline jule::Trait<_1e31a0243_Kind> _1e31b6842_getDef(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>*);
inline jule::Trait<_1e31a0243_Kind> _1e31b6b83_buildIdent(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024a79_IdentTypeDecl>);
inline jule::Trait<_1e31a0243_Kind> _1e31b6ec4_buildSubIdent(_1e31b25a7_typeChecker*, jule::Ptr<_1e3024d76_SubIdentTypeDecl>);
inline jule::Ptr<_1e31abcee_Sptr> _1e31b7315_buildSptrFromType(_1e31b25a7_typeChecker*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e31abcee_Sptr> _1e31b7656_buildSptr(_1e31b25a7_typeChecker*, jule::Ptr<_1e3025519_SptrTypeDecl>);
inline jule::Ptr<_1e31b05b6_Ptr> _1e31b7997_buildPtrFromType(_1e31b25a7_typeChecker*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e31b05b6_Ptr> _1e31b7cd8_buildPtr(_1e31b25a7_typeChecker*, jule::Ptr<_1e3025e98_PtrTypeDecl>);
inline jule::Ptr<_1e31ac7c2_Slc> _1e31b8129_buildSlc(_1e31b25a7_typeChecker*, jule::Ptr<_1e302589e_SlcTypeDecl>);
inline jule::Ptr<_1e31aeae3_Arr> _1e31b846a_buildArr(_1e31b25a7_typeChecker*, jule::Ptr<_1e302673a_ArrTypeDecl>);
inline jule::Ptr<_1e31ade66_Map> _1e31b87ab_buildMap(_1e31b25a7_typeChecker*, jule::Ptr<_1e3026e88_MapTypeDecl>);
inline jule::Ptr<_1e31ad3b6_Tuple> _1e31b8aec_buildTuple(_1e31b25a7_typeChecker*, jule::Ptr<_1e3025b9b_TupleTypeDecl>);
inline jule::Bool _1e31b8e3d_checkFuncTypes(_1e31b25a7_typeChecker*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Ptr<_1e305ce36_FnIns> _1e31b927e_buildFunc(_1e31b25a7_typeChecker*, jule::Ptr<_1e303612e_FnDecl>);
inline jule::Trait<_1e31a0243_Kind> _1e31b95c0_buildByNamespace(_1e31b25a7_typeChecker*, jule::Ptr<_1e302521c_NamespaceTypeDecl>);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e31b9911_build(_1e31b25a7_typeChecker*, jule::Any*);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e31b9c52_checkDecl(_1e31b25a7_typeChecker*, jule::Ptr<_1e302446e_TypeDecl>*);
inline jule::Bool static__1e31ba69d_prim(jule::Str*, jule::Ptr<_1e31a82c3_Prim>);
inline jule::Bool static__1e31baa22_exist(jule::Str*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e3b66665_stop(_1e3b66005_scopeParser*);
inline jule::Bool _1e3b668eb_stopped(_1e3b66005_scopeParser*);
inline jule::Bool _1e3b66b82_finished(_1e3b66005_scopeParser*);
inline jule::Bool _1e3b66e18_isLastSt(_1e3b66005_scopeParser*);
inline void _1e3b6727b_pushErr(_1e3b66005_scopeParser*, jule::Ptr<_20cb74604_Token>, jule::Str);
inline void _1e3b675de_pushSuggestion(_1e3b66005_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e3b67897_insertAsNext(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3b65664_stmt> _1e3b67b2d_next(_1e3b66005_scopeParser*);
inline jule::Ptr<_1e3034490_ScopeTree> _1e3b68029_buildScope(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e303720c_VarDecl> _1e3b6836a_buildVarSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e30375d6_RetSt> _1e3b686ab_buildRetSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3037c79_Iter> _1e3b689ec_buildWhileNextIter(_1e3b66005_scopeParser*, jule::Ptr<_1e3b65664_stmt>*);
inline jule::Ptr<_1e30385a4_WhileKind> _1e3b68d3d_buildWhileIterKind(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b6917e_getRangeKindKeysTokens(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303720c_VarDecl> _1e3b694c0_buildRangeKindKey(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _1e3b69811_buildRangeKindKeys(_1e3b66005_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>*);
inline void _1e3b69b74_setupRangeKindKeysPlain(_1e3b66005_scopeParser*, jule::Ptr<_1e3038eab_RangeKind>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b69ed7_setupRangeKindKeysExplicit(_1e3b66005_scopeParser*, jule::Ptr<_1e3038eab_RangeKind>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b6a34a_setupRangeKindKeys(_1e3b66005_scopeParser*, jule::Ptr<_1e3038eab_RangeKind>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3038eab_RangeKind> _1e3b6a801_buildRangeIterKind(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Any _1e3b6abec_buildCommonIterKind(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_1e3037c79_Iter> _1e3b6b03d_buildCommonIter(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3037c79_Iter> _1e3b6b37e_buildIterSt(_1e3b66005_scopeParser*, jule::Ptr<_1e3b65664_stmt>*);
inline jule::Ptr<_1e3039385_BreakSt> _1e3b6b6c0_buildBreakSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303975e_ContSt> _1e3b6ba11_buildContSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3039c15_If> _1e3b6bd52_buildIf(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303a0de_Else> _1e3b6c193_buildElse(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303a595_Conditional> _1e3b6c4d4_buildIfElseChain(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e30287a3_Expr> _1e3b6c825_buildCoCallSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3031e2c_GotoSt> _1e3b6cb66_buildGotoSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3032229_FallSt> _1e3b6cea7_buildFallSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b6d2e8_buildTypeAliasSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b6d7c1_pushCaseExpr(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Ptr<_20cb74604_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e30287a3_Expr>>*);
inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b6dc77_buildCaseExprs(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>*, jule::Bool);
inline jule::Ptr<_1e3034490_ScopeTree> _1e3b6e0b8_buildCaseScope(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline __jule_tuple_x_1e303b288_Case__jule_tuple_bool _1e3b6e4b4_buildCase(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Bool);
inline __jule_tuple_sx_1e303b288_Case__jule_tuple_x_1e303a0de_Else _1e3b6e8b0_buildCases(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Bool);
inline jule::Ptr<_1e303b9c5_MatchCase> _1e3b6ec01_buildMatchCase(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3034490_ScopeTree> _1e3b70042_buildScopeSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3031a53_LabelSt> _1e3b70383_buildLabelSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline __jule_tuple__1e3033acc_StmtData__jule_tuple_bool _1e3b706c4_buildIdSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3b80a36_assignInfo> _1e3b70a15_buildAssignInfo(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3032889_AssignLeft> _1e3b70d56_buildAssignL(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> _1e3b71197_buildAssignLs(_1e3b66005_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>*);
inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b714d8_buildPlainAssign(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Bool _1e3b718d4_buildDeclAssign1(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_1e3032e1c_AssignSt>*);
inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b71c25_buildDeclAssign(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b72066_buildAssignSt(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3029177_UseExpr> _1e3b723a7_buildUseExpr(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b726e8_buildSt(_1e3b66005_scopeParser*, jule::Ptr<_1e3b65664_stmt>*);
inline void _1e3b72a5b_build(_1e3b66005_scopeParser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_1e3034490_ScopeTree>*);
inline void _1e3b73d8c_pushErr(_1e3b73584_exprBuilder*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e3b74200_pushSuggestion(_1e3b73584_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e3029474_TupleExpr> _1e3b74541_buildTuple(_1e3b73584_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>*);
inline jule::Ptr<_1e302984d_LitExpr> _1e3b74882_buildLit(_1e3b73584_exprBuilder*, jule::Ptr<_20cb74604_Token>);
inline jule::Any _1e3b75014_buildSingle(_1e3b73584_exprBuilder*, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e302a1cd_IdentExpr> _1e3b75355_buildBindIdent(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302a860_UnaryExpr> _1e3b75696_buildUnary(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302b8b6_SubIdentExpr> _1e3b759d7_buildObjSubIdent(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302b4dc_NsSelectionExpr> _1e3b75d28_buildNsSubIdent(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b76169_buildType(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b764aa_buildSubIdent(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302ac39_VariadicExpr> _1e3b767eb_buildVariadic(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3028aa0_RangeExpr> _1e3b76b3c_buildBetweenParentheses(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302b113_CastExpr> _1e3b76e7d_tryBuildCast(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b7739b_pushArg(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_1e30287a3_Expr>>*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Ptr<_20cb74604_Token>);
inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b776dc_buildArgs(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302c4cc_FnCallExpr> _1e3b77ed4_buildFnCall(_1e3b73584_exprBuilder*, jule::Ptr<_20cb74604_Token>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b78325_buildParenthesesRange(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3029c27_UnsafeExpr> _1e3b78666_buildUnsafeExpr(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303612e_FnDecl> _1e3b789a7_buildAnonFn(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b78ce8_buildUnsafe(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b79216_pushRangeLitPart(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Ptr<_20cb74604_Token>, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b79557_getBraceRangeLitExprParts(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302cec2_FieldExprPair> _1e3b79898_buildFieldExprPair(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e30287a3_Expr> _1e3b79bd9_buildStructLitExpr(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b7a02a_buildStructLitExprs(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302d7ec_StructLit> _1e3b7a36b_buildTypedStructLiteral(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e30287a3_Expr> _1e3b7a6ac_buildBraceLitPart(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302dca3_BraceLit> _1e3b7a9ed_buildBraceLit(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b7ad3e_buildBraceRange(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b7b180_getEnumerableParts(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e302ecc6_SliceExpr> _1e3b7b4c1_buildSlice(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3030766_IndexingExpr> _1e3b7b977_buildIndexing(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Ptr<_20cb74604_Token>);
inline jule::Ptr<_1e3030dc6_SlicingExpr> _1e3b7c093_buildSlicing(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_20cb74604_Token>);
inline jule::Any _1e3b7c3d4_buildBracketRange(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Any _1e3b7c725_buildExclRight(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b7ca66_buildData(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b7ce62_buildBinop(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64);
inline jule::Any _1e3b7d2a3_build(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b7d5e4_buildKind(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e30287a3_Expr> _1e3b7d935_buildFromTokens(_1e3b73584_exprBuilder*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b84210_stop(_1e3b83e13_parser*);
inline jule::Bool _1e3b84496_stopped(_1e3b83e13_parser*);
inline void _1e3b848b4_pushErr(_1e3b83e13_parser*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e3b84c27_pushSuggestion(_1e3b83e13_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e30287a3_Expr> _1e3b85068_buildExpr(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302388b_Directive> _1e3b853a9_buildDirective(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b85662_pushDirective(_1e3b83e13_parser*, jule::Ptr<_1e302388b_Directive>);
inline jule::Ptr<_1e3034490_ScopeTree> _1e3b85a5d_buildScope(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>);
inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b86014__buildType(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b864ba_buildType(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b8680b_buildTypeAliasDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b86b6e_buildVarTypeAndExpr(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e303720c_VarDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b86ed2_buildVarCommon(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e303720c_VarDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b87400_buildVarBegin(_1e3b83e13_parser*, jule::Ptr<_1e303720c_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303720c_VarDecl> _1e3b87741_buildVar(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3031679_GenericDecl> _1e3b87a82_buildGeneric(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _1e3b87e7d_buildGenerics(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Ptr<_20cb74604_Token>*);
inline jule::Ptr<_1e3034bcc_ParamDecl> _1e3b882be_buildSelfParam(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b886dc_paramTypeBegin(_1e3b83e13_parser*, jule::Ptr<_1e3034bcc_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b88a50_buildParamType(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e3034bcc_ParamDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b88db3_buildParamBody(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e3034bcc_ParamDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e3034bcc_ParamDecl> _1e3b89204_buildParam(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b894ac_checkParams(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> _1e3b898a8_buildParams(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Bool);
inline __jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool _1e3b89ca4_buildMultiRetType(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*);
inline __jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool _1e3b8a1a0_buildRetType(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*);
inline jule::Ptr<_1e303612e_FnDecl> _1e3b8a656_buildFnPrototype(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1e303612e_FnDecl> _1e3b8ab0c_buildFn(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b8ae4d_getUseDeclSelectors(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b8b2b1_buildBindUseDecl(_1e3b83e13_parser*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Str _1e3b8b602_useDeclTokstoa(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b8b965_buildStdUseDecl(_1e3b83e13_parser*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b8bcc8_buildIdentUseDecl(_1e3b83e13_parser*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline void _1e3b8c13b_parseUseDecl(_1e3b83e13_parser*, jule::Ptr<_1e303c2de_UseDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303c2de_UseDecl> _1e3b8c537_buildUseDecl(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>, jule::Bool);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b8c933_buildTypeEnumItemKind(jule::Ptr<_1e3b83e13_parser>, jule::I64*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>> _1e3b8cc74_buildTypeEnumItems(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303e2e1_TypeEnumDecl> _1e3b8d0b5_buildTypeEnumDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e30287a3_Expr> _1e3b8d4b1_buildEnumItemExpr(jule::Ptr<_1e3b83e13_parser>, jule::I64*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> _1e3b8d802_buildEnumItems(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303d356_EnumDecl> _1e3b8db43_buildEnumDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Any _1e3b8de84_buildNodeEnumDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303e5aa_FieldDecl> _1e3b8e2c5_buildField(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>> _1e3b8e616_buildStructDeclFields(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303eea1_StructDecl> _1e3b8e957_buildStructDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b8ec10_checkMethodReceiver(_1e3b83e13_parser*, jule::Ptr<_1e303612e_FnDecl>*);
inline void _1e3b90073_buildTraitBody(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e30406dd_TraitDecl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e30406dd_TraitDecl> _1e3b903b4_buildTraitDecl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303612e_FnDecl> _1e3b90705_buildBindFn(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303720c_VarDecl> _1e3b90a46_buildBindVar(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303eea1_StructDecl> _1e3b90d87_buildBindStruct(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b911c8_buildBindTypeAlias(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Ptr<_1e303c2de_UseDecl> _1e3b91519_buildBindUse(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Any _1e3b9185a_buildBind(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e303612e_FnDecl> _1e3b91b9b_getMethod(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b9200e_parseImplBody(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e3040d4d_Impl>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e3040d4d_Impl> _1e3b92350_buildImpl(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Any _1e3b92691_buildNodeData(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b92949_applyFnMeta(_1e3b83e13_parser*, jule::Ptr<_1e303612e_FnDecl>*);
inline void _1e3b92c02_applyMeta(_1e3b83e13_parser*, _1e302346d_Node*);
inline void _1e3b92eaa_pushUseDecl(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e303c2de_UseDecl>*);
inline jule::Bool _1e3b932eb_pushMetaNodes(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline _1e302346d_Node _1e3b9363c_parseNode(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b938e5_appendNode(jule::Ptr<_1e3b83e13_parser>, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b93dbd_removeRange(_1e3b83e13_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::I64>*);
inline void _1e3b942db_pushWrongOrderCloseErr(_1e3b83e13_parser*, jule::Ptr<_20cb74604_Token>*, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::I64>*);
inline void _1e3b947b4_pushRangeClose(_1e3b83e13_parser*, jule::Ptr<_20cb74604_Token>, jule::U64, jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::Slice<jule::I64>*);
inline void _1e3b94a6c_checkRanges(_1e3b83e13_parser*, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline void _1e3b94d25_parse(jule::Ptr<_1e3b83e13_parser>, jule::Ptr<_1e301464b_File>*);
inline void _1e3b96662_pushErr(_1e3b960bd_typeBuilder*, jule::Ptr<_20cb74604_Token>, jule::Str);
inline void _1e3b969c5_pushSuggestion(_1e3b960bd_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b96c5b_buildNamespace(_1e3b960bd_typeBuilder*);
inline jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _1e3b96ee2_buildGenerics(_1e3b960bd_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b97278_identGenerics(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b9750e_buildIdent(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97795_buildCppLink(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97a2b_buildFn(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97cb2_buildPtr(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98048_buildSptr(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b982ce_buildSlc(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98565_buildArr(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b987eb_buildMap(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98a82_buildEnumerable(_1e3b960bd_typeBuilder*);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98d18_step(_1e3b960bd_typeBuilder*);
inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b9909e_build(_1e3b960bd_typeBuilder*);
inline void _1e33a49ec_pushErr(_1e33a449c_directiveEval*, jule::Ptr<_20cb74604_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e33a4de8_splitOperans(_1e33a449c_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Bool _1e33a5239_evalDirectiveIdent(_1e33a449c_directiveEval*, jule::Str);
inline jule::Bool _1e33a557a_evalDirectivePart(_1e33a449c_directiveEval*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Bool _1e33a5811_eval(_1e33a449c_directiveEval*);
inline jule::Ptr<_1e3b9a204_JuleImporter> static__1e3b9a600_New(_1e33a2ee5_CompileInfo);
inline jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _1e3b9a886_AllPackages(_1e3b9a204_JuleImporter*);
inline void _1e3b9acc6_SetModPath(_1e3b9a204_JuleImporter*, jule::Str);
inline jule::Str _1e3b9b05c_GetModPath(_1e3b9a204_JuleImporter*);
inline jule::Str _1e3b9b39d_ModById(_1e3b9a204_JuleImporter*, jule::I64);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3b9b6de_GetImport(_1e3b9a204_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log _1e3b9bada_ImportPackage(_1e3b9a204_JuleImporter*, jule::Str, jule::Bool);
inline void _1e3b9bd93_Imported(_1e3b9a204_JuleImporter*, jule::Ptr<_1e30bbeb7_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_2277b1ce8_Log _1e3b9c2c2_isPassBuildDirectives(_1e3b9a204_JuleImporter*, jule::Ptr<_1e30224c2_Ast>*);
inline jule::Bool _1e7595975_isCommonOrdered(jule::Slice<jule::Ptr<_1e30450c7_Struct>>, jule::Ptr<_1e30450c7_Struct>);
inline jule::Bool _1e759a491_isCommonOrdered(jule::Slice<jule::Ptr<_1e310ed40_Var>>, jule::Ptr<_1e310ed40_Var>);
inline void _1e7592587_orderCommon(jule::Slice<jule::Ptr<_1e30450c7_Struct>>*);
inline void _1e7596316_orderCommon(jule::Slice<jule::Ptr<_1e310ed40_Var>>*);
inline void static__1e3ba1073_orderStructures(jule::Slice<jule::Ptr<_1e30450c7_Struct>>*);
inline void static__1e3ba12a4_orderVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>*);
inline void _1e3d112c1_optimizeChild(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e3d11579_optimizeBodyChildExceptional(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e3d11832_optimizeBodyChild(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e3d11ada_optimizeExprModel(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Any*);
inline void _1e3d11cd8_eliminateFollowed(_1e3d10d1a_scopeDeadCode*);
inline void _1e3d12091_pushGoto(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309d806_GotoSt>);
inline void _1e3d12349_pushLabel(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309d42c_Label>);
inline void _1e3d12602_optimizeRangeIter(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309c8c1_RangeIter>);
inline void _1e3d128aa_optimizeWhileIter(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309be75_WhileIter>);
inline void _1e3d12b63_optimizeInfIter(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309b9be_InfIter>);
inline void _1e3d12e1b_optimizeConditional(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309b6c2_Conditional>);
inline void _1e3d131c4_optimizeMatch(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309ebc0_Match>);
inline void _1e3d1347c_optimizeAssign(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309e186_Assign>);
inline void _1e3d13735_optimizeMultiAssign(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Ptr<_1e309e560_MultiAssign>);
inline void _1e3d139dd_optimizeStmt(jule::Ptr<_1e3d10d1a_scopeDeadCode>, jule::Any);
inline void _1e3d13bdb_optimizeStmts(jule::Ptr<_1e3d10d1a_scopeDeadCode>);
inline _1e3d15072_exprDeadCode static__1e3d156b0_new(jule::Ptr<_1e3d10d1a_scopeDeadCode>*);
inline void _1e3d15968_binary(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline void _1e3d15c21_unary(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304c6b7_UnaryExprModel>);
inline void _1e3d15ec9_structureLit(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304d08b_StructLitExprModel>);
inline void _1e3d16282_allocStructure(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304d388_AllocStructLitExprModel>);
inline void _1e3d1653a_casting(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304d91b_CastingExprModel>);
inline void _1e3d167e3_args(_1e3d15072_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1e3d16a9b_funcCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304e2bd_FnCallExprModel>);
inline void _1e3d16d54_slice(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304e697_SliceExprModel>);
inline void _1e3d1710c_array(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30526de_ArrayExprModel>);
inline void _1e3d173b5_indexing(_1e3d15072_exprDeadCode*, jule::Ptr<_1e304eb4d_IndexingExprModel>);
inline void _1e3d1766d_anonFunc(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3050027_AnonFnExprModel>);
inline void _1e3d17926_mapExpr(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30508a7_MapExprModel>);
inline void _1e3d17bce_slicing(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3050e3a_SlicingExprModel>);
inline void _1e3d17e87_traitSub(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30514bd_TraitSubIdentExprModel>);
inline void _1e3d18240_structureSub(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3051d5e_StructSubIdentExprModel>);
inline void _1e3d184e8_tuple(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30529db_TupleExprModel>);
inline void _1e3d187a1_newCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3053668_BuiltinNewCallExprModel>);
inline void _1e3d18a59_outCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel>);
inline void _1e3d18d12_outlnCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel>);
inline void _1e3d190ba_panicCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel>);
inline void _1e3d19373_assertCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel>);
inline void _1e3d1962b_errorCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel>);
inline void _1e3d198d4_makeCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>);
inline void _1e3d19b8c_appendCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel>);
inline void _1e3d19e45_lenCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel>);
inline void _1e3d1a1ed_capCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel>);
inline void _1e3d1a4a6_deleteCall(_1e3d15072_exprDeadCode*, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel>);
inline void _1e3d1a75e_sizeof(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30516aa_SizeofExprModel>);
inline void _1e3d1aa17_alignof(_1e3d15072_exprDeadCode*, jule::Ptr<_1e305632a_AlignofExprModel>);
inline void _1e3d1acc0_integratedToStr(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3056924_IntegratedToStrExprModel>);
inline void _1e3d1b078_free(_1e3d15072_exprDeadCode*, jule::Ptr<_1e30570ea_FreeExprModel>);
inline void _1e3d1b331_backendEmit(_1e3d15072_exprDeadCode*, jule::Ptr<_1e3056ced_BackendEmitExprModel>);
inline void _1e3d1b5d9_optimize(_1e3d15072_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1e329736d_scopeOptimizer> static__1e32978ac_new(jule::Ptr<_1e309aa89_Scope>);
inline void _1e3297b65_setCurrentStmt(_1e329736d_scopeOptimizer*, jule::Any);
inline void _1e3297d63_removeCurrent(_1e329736d_scopeOptimizer*);
inline void _1e329811b_optimizeData(_1e329736d_scopeOptimizer*, jule::Ptr<_1e316ee05_Data>);
inline void _1e32983c4_optimizeVar(_1e329736d_scopeOptimizer*, jule::Ptr<_1e310ed40_Var>);
inline void _1e329867c_optimizeConditional(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309b6c2_Conditional>);
inline void _1e3298a9a_buildDefaultConstantTrueCase(_1e329736d_scopeOptimizer*, jule::Ptr<_1e30a0808_Case>, jule::I64*, jule::Ptr<_1e309ebc0_Match>*);
inline void _1e3298d53_optimizeMatch(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309ebc0_Match>);
inline void _1e329910b_optimizeRangeIter(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309c8c1_RangeIter>);
inline void _1e32993b4_optimizeWhileIter(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309be75_WhileIter>);
inline jule::Bool _1e3299705_substr(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e186_Assign>);
inline jule::Bool _1e3299a46_strAssign(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e186_Assign>);
inline jule::Bool _1e3299d87_sliceAssign(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e186_Assign>);
inline void _1e329a140_optimizeAssign(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e186_Assign>);
inline jule::Bool _1e329a481_tryOptimizeSwap(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e560_MultiAssign>*);
inline void _1e329a739_optimizeMultiAssign(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309e560_MultiAssign>);
inline void _1e329a9e2_optimizeRet(_1e329736d_scopeOptimizer*, jule::Ptr<_1e30a1287_RetSt>);
inline void _1e329ac9a_optimizeStmt(_1e329736d_scopeOptimizer*, jule::Any);
inline void _1e329b053_optimizeChild(_1e329736d_scopeOptimizer*, jule::Ptr<_1e309aa89_Scope>);
inline void _1e329b251_optimize(_1e329736d_scopeOptimizer*);
inline void static__1e329da8e_optimize(jule::Any*);
inline jule::Bool _1e329ddd0_strCond(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline void _1e329e188_binary(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline void _1e329e441_unary(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304c6b7_UnaryExprModel>);
inline void _1e329e6e9_structureLit(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304d08b_StructLitExprModel>);
inline void _1e329e9a2_allocStructure(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304d388_AllocStructLitExprModel>);
inline void _1e329ec5a_casting(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304d91b_CastingExprModel>);
inline void _1e32a0013_args(_1e329d4ea_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1e32a02bb_scope(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e32a0574_funcCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304e2bd_FnCallExprModel>);
inline void _1e32a082c_slice(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304e697_SliceExprModel>);
inline void _1e32a0ad5_array(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30526de_ArrayExprModel>);
inline void _1e32a0d8d_indexing(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e304eb4d_IndexingExprModel>);
inline void _1e32a1146_anonFunc(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3050027_AnonFnExprModel>);
inline void _1e32a13ee_mapExpr(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30508a7_MapExprModel>);
inline void _1e32a16a7_slicing(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3050e3a_SlicingExprModel>);
inline void _1e32a1960_traitSub(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30514bd_TraitSubIdentExprModel>);
inline void _1e32a1c18_structureSub(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3051d5e_StructSubIdentExprModel>);
inline void _1e32a1ec1_tuple(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30529db_TupleExprModel>);
inline void _1e32a2279_newCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3053668_BuiltinNewCallExprModel>);
inline void _1e32a2532_outCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel>);
inline void _1e32a27da_outlnCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel>);
inline void _1e32a2a93_panicCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel>);
inline void _1e32a2d4b_assertCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel>);
inline void _1e32a3104_errorCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel>);
inline void _1e32a33ac_makeCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>);
inline void _1e32a3665_appendCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel>);
inline void _1e32a391d_lenCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel>);
inline void _1e32a3bc6_capCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel>);
inline void _1e32a3e7e_deleteCall(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel>);
inline void _1e32a4237_sizeof(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30516aa_SizeofExprModel>);
inline void _1e32a44e0_alignof(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e305632a_AlignofExprModel>);
inline void _1e32a4798_integratedToStr(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3056924_IntegratedToStrExprModel>);
inline void _1e32a4a51_free(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e30570ea_FreeExprModel>);
inline void _1e32a4d09_backendEmit(_1e329d4ea_exprOptimizer*, jule::Ptr<_1e3056ced_BackendEmitExprModel>);
inline void _1e32a5007_do(_1e329d4ea_exprOptimizer*);
inline jule::Ptr<_1e3d1c134_Optimizer> static__1e3d1c5a7_New(jule::Ptr<_1e3b9cbb8_IR>*);
inline void _1e3d1c860_optimizeGlobal(_1e3d1c134_Optimizer*, jule::Ptr<_1e310ed40_Var>*);
inline void _1e3d1cb18_optimizeFunction(_1e3d1c134_Optimizer*, jule::Ptr<_1e305a032_Fn>*);
inline void _1e3d1cdc1_optimizeStruct(_1e3d1c134_Optimizer*, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e3d1d179_optimizeGlobals(_1e3d1c134_Optimizer*, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d1d432_optimizeFunctions(_1e3d1c134_Optimizer*, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d1d6da_optimizeStructs(_1e3d1c134_Optimizer*, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d1d993_optimizePackage(_1e3d1c134_Optimizer*, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d1db91_Optimize(_1e3d1c134_Optimizer*);
inline void static__1e3d4407e_Reset(void);
inline void static__1e3d1e312_Print(jule::Str, jule::Str);
inline void static__1e3d46a87_LogFlat(_2277b1ce8_Log*);
inline void static__1e3d46cb8_LogError(_2277b1ce8_Log*);
inline void static__1e3d46ee9_Log(_2277b1ce8_Log*);
inline void static__1e3d4722a_PrintLogs(jule::Slice<_2277b1ce8_Log>*);
inline _1e47764c7_Time static__1e477687e_Unix(jule::U64);
inline _1e47764c7_Time static__1e4776a8d_Now(void);
inline _1e4775d01_AbsTime _1e4778276_Abs(_1e47764c7_Time*);
inline jule::Ptr<_1e4699373_scopeCoder> static__1e469998e_new(jule::Ptr<_1e4780b1e_ObjectCoder>*);
inline void _1e784e46a_iterHead(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309c8c1_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1e469a165_rangeIndexIter(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309c8c1_RangeIter>*);
inline void _1e469a41d_rangeHashmapIter(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309c8c1_RangeIter>*);
inline void _1e469a6c6_ifCase(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309aea7_If>);
inline void _1e469a97e_conditional(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309b6c2_Conditional>);
inline void _1e469ac37_infIter(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309b9be_InfIter>);
inline void _1e469aee0_whileIter(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309be75_WhileIter>);
inline void _1e469b298_rangeIter(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309c8c1_RangeIter>);
inline void _1e469b551_cont(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309cc56_ContSt>);
inline void _1e469b809_label(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309d42c_Label>);
inline void _1e469bab2_gotoSt(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309d806_GotoSt>);
inline void _1e469bd6a_postfix(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309dbd0_Postfix>);
inline void _1e469c123_assign(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309e186_Assign>);
inline void _1e469c3cb_mapLookupAssign(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309e560_MultiAssign>*);
inline void _1e469c684_multiAssignTup(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309e560_MultiAssign>*);
inline void _1e469c93c_multiAssignFn(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309e560_MultiAssign>*);
inline void _1e469cbe5_multiAssign(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309e560_MultiAssign>);
inline jule::Fn<void(void)> _1e469d036_matchExpr(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309ebc0_Match>);
inline void _1e469d399_case(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309ebc0_Match>, jule::Ptr<_1e30a0808_Case>);
inline void _1e469d652_matchSt(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309ebc0_Match>);
inline void _1e469d90a_fallSt(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e30a0e02_FallSt>);
inline void _1e469dbb3_breakSt(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309d130_BreakSt>);
inline void _1e469de6b_setResult(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e30a1287_RetSt>);
inline void _1e469e224_retSt(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e30a1287_RetSt>);
inline void _1e469e4cc_var(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e310ed40_Var>);
inline void _1e469e785_mutSlicing(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e32952c2_MutSlicingExprModel>);
inline void _1e469ea3d_swap(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e3293ee6_SwapExprModel>);
inline void _1e469ece6_st(jule::Ptr<_1e4699373_scopeCoder>, jule::Any);
inline void _1e46a009e_scopeStmts(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309aa89_Scope>*);
inline void _1e46a0357_scope(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e309aa89_Scope>);
inline void _1e46a0610_funcScope(jule::Ptr<_1e4699373_scopeCoder>, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Ptr<_1e46a34e2_exprCoder> static__1e46a38aa_new(jule::Ptr<_1e4780b1e_ObjectCoder>*);
inline void _1e46a3b63_string(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_22893da56_Const>*);
inline void _1e46a3e1b_boolean(jule::Ptr<_1e46a34e2_exprCoder>, jule::Bool);
inline void _1e46a4119_nilLit(jule::Ptr<_1e46a34e2_exprCoder>);
inline jule::Bool _1e46a445a_ftoaSpecialCases(jule::Ptr<_1e46a34e2_exprCoder>, jule::F64*);
inline void _1e46a4713_float32(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_22893da56_Const>*);
inline void _1e46a49bb_float64(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_22893da56_Const>*);
inline void _1e46a4c74_constant(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_22893da56_Const>);
inline void _1e46a5192_divByZeroBinary(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_20cb74604_Token>*, jule::Ptr<_1e304bce3_OperandExprModel>*, jule::Ptr<_1e304bce3_OperandExprModel>*);
inline void _1e46a544a_unsafeBinary(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline void _1e46a5703_binary(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline void _1e46a59ab_var(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e310ed40_Var>);
inline void _1e46a5c64_structureIns(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3047d55_StructIns>);
inline void _1e46a601c_unary(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304c6b7_UnaryExprModel>);
inline void _1e46a62c5_structureLit(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304d08b_StructLitExprModel>);
inline void _1e46a657d_allocStructure(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304d388_AllocStructLitExprModel>);
inline void _1e46a6836_possibleRefExpr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Any);
inline void _1e46a6c54_castTraitFromTrait(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304d91b_CastingExprModel>*, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e306d2cb_Trait>);
inline void _1e46a700c_casting(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304d91b_CastingExprModel>);
inline void _1e46a72b5_models(jule::Ptr<_1e46a34e2_exprCoder>, jule::Slice<jule::Any>);
inline void _1e46a756d_args(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>*);
inline void _1e46a7826_modelForCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Any);
inline void _1e46a7ace_pushCallInf(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>*);
inline jule::Bool _1e46a7e20_isWrapped(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>*);
inline void _1e46a81c8_pureFuncCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>*);
inline void _1e46a8481_coFuncCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>*);
inline void _1e46a87e4_writeUseExpr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_1e316ee05_Data>);
inline void _1e46a8a9c_funcCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e2bd_FnCallExprModel>);
inline void _1e46a8d55_slice(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304e697_SliceExprModel>);
inline void _1e46a910d_indexing(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e304eb4d_IndexingExprModel>);
inline void _1e46a93b6_unsafeIndexing(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e32958bb_UnsafeIndexingExprModel>);
inline void _1e46a966e_anonFunc(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3050027_AnonFnExprModel>);
inline void _1e46a9927_mapExpr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30508a7_MapExprModel>);
inline void _1e46a9bd0_slicing(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3050e3a_SlicingExprModel>);
inline void _1e46a9e88_traitSub(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30514bd_TraitSubIdentExprModel>);
inline void _1e46aa241_structureSub(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3051d5e_StructSubIdentExprModel>);
inline void _1e46aa4e9_array(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30526de_ArrayExprModel>);
inline void _1e46aa7a2_funcInsCommon(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e46aaa5a_funcIns(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e46aad13_tuple(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30529db_TupleExprModel>);
inline void _1e46ab0bb_newCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3053668_BuiltinNewCallExprModel>);
inline void _1e46ab374_outCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel>);
inline void _1e46ab62c_outlnCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel>);
inline void _1e46ab8d5_panicCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel>);
inline void _1e46abb8d_assertCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel>);
inline void _1e46abe46_errorCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel>);
inline void _1e46ac1ee_copyCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3055725_BuiltinCopyCallExprModel>);
inline void _1e46ac4a7_lenCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel>);
inline void _1e46ac760_capCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel>);
inline void _1e46aca18_deleteCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel>);
inline void _1e46accc1_makeCallSlice(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>*);
inline void _1e46ad079_makeCallStr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>*);
inline void _1e46ad332_makeCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>);
inline void _1e46ad5da_pushToSlice(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3295cea_PushToSliceExprModel>);
inline void _1e46ad893_appendToSlice(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e32961c4_AppendToSliceExprModel>);
inline void _1e46adb4b_appendCall(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel>);
inline void _1e46ade04_sizeof(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30516aa_SizeofExprModel>);
inline void _1e46ae1ac_alignof(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e305632a_AlignofExprModel>);
inline void _1e46ae465_runeLit(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3056627_RuneExprModel>);
inline void _1e46ae71d_structureStatic(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3052315_StructStaticIdentExprModel>);
inline void _1e46ae9c6_integratedToStr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3056924_IntegratedToStrExprModel>);
inline void _1e46aec7e_backendEmit(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3056ced_BackendEmitExprModel>);
inline void _1e46b0037_free(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e30570ea_FreeExprModel>);
inline void _1e46b02e0_strComp(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3294c3e_StrCompExprModel>);
inline void _1e46b0598_emptyCompare(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e3294414_EmptyCompareExprModel>);
inline void _1e46b0851_model(jule::Ptr<_1e46a34e2_exprCoder>, jule::Any);
inline void _1e46b0b09_initExpr(jule::Ptr<_1e46a34e2_exprCoder>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e46b3b73_TestCoder> static__1e46b40b3_New(jule::Ptr<_1e4780b1e_ObjectCoder>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e46b4349_findTestingPackage(jule::Ptr<_1e46b3b73_TestCoder>);
inline void _1e46b4602_appendTest(jule::Ptr<_1e46b3b73_TestCoder>, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e46b48aa_appendPackageTests(jule::Ptr<_1e46b3b73_TestCoder>, jule::Ptr<_1e30beddd_Package>*);
inline jule::Bool _1e46b4b41_readyTestingPackage(jule::Ptr<_1e46b3b73_TestCoder>);
inline void _1e46b4d3e_callTmReset(jule::Ptr<_1e46b3b73_TestCoder>);
inline void _1e46b503c_callTmFailed(jule::Ptr<_1e46b3b73_TestCoder>);
inline void _1e46b523a_callTmSkipped(jule::Ptr<_1e46b3b73_TestCoder>);
inline void _1e46b5438_Serialize(jule::Ptr<_1e46b3b73_TestCoder>);
inline void static__1e46b6d85_writeIdentTo(_227713453_StrBuilder*, jule::Str*);
inline jule::Str static__1e46b7209_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1e46b7638_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1e46b7902_func(jule::Ptr<_1e305a032_Fn>*);
inline jule::Str static__1e46b7bbb_funcIns(jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Str static__1e46b7e85_traitDecl(jule::Ptr<_1e306d2cb_Trait>);
inline jule::Str static__1e46b824e_param(jule::Ptr<_1e305855d_Param>*);
inline jule::Str static__1e46b8518_structure(jule::Ptr<_1e30450c7_Struct>*);
inline jule::Str static__1e46b87d2_structureIns(jule::Ptr<_1e3047d55_StructIns>*);
inline jule::Str static__1e46b8a9b_field(jule::Ptr<_1e30421d4_Field>*);
inline jule::Str static__1e46b8d65_var(jule::Ptr<_1e310ed40_Var>);
inline jule::Str static__1e46b912e_iterBegin(jule::Uintptr);
inline jule::Str static__1e46b93e8_iterEnd(jule::Uintptr);
inline jule::Str static__1e46b96b2_iterNext(jule::Uintptr);
inline jule::Str static__1e46b997b_label(jule::Uintptr);
inline jule::Str static__1e46b9c45_matchEnd(jule::Uintptr);
inline jule::Str static__1e46ba00e_caseBegin(jule::Uintptr);
inline jule::Str _1e479015b_Str(_1e478ecc6_customType*);
inline jule::Bool _1e479049c_Equal(jule::Ptr<_1e478ecc6_customType>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e47908cb_typeCoder> static__1e4790e1a_new(jule::Ptr<_1e4780b1e_ObjectCoder>*);
inline jule::Str _1e479125b_toType(_1e47908cb_typeCoder*, jule::Str);
inline jule::Str _1e479159c_prim(_1e47908cb_typeCoder*, jule::Ptr<_1e31a82c3_Prim>);
inline jule::Str _1e47918dd_tuple(_1e47908cb_typeCoder*, jule::Ptr<_1e31ad3b6_Tuple>);
inline jule::Str _1e4791c2e_asSptr(_1e47908cb_typeCoder*, jule::Str);
inline jule::Str _1e4792070_sptr(_1e47908cb_typeCoder*, jule::Ptr<_1e31abcee_Sptr>);
inline jule::Str _1e47923b1_ptr(_1e47908cb_typeCoder*, jule::Ptr<_1e31b05b6_Ptr>);
inline jule::Str _1e4792702_enumDecl(_1e47908cb_typeCoder*, jule::Ptr<_1e30709c6_Enum>);
inline jule::Str _1e4792a43_typeEnumDecl(_1e47908cb_typeCoder*, jule::Ptr<_1e30721d1_TypeEnum>);
inline jule::Str _1e4792d84_asSlice(_1e47908cb_typeCoder*, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Str _1e47931c5_slice(_1e47908cb_typeCoder*, jule::Ptr<_1e31ac7c2_Slc>);
inline jule::Str _1e4793516_mapType(_1e47908cb_typeCoder*, jule::Ptr<_1e31ade66_Map>);
inline jule::Str _1e4793857_traitIdent(_1e47908cb_typeCoder*, jule::Str);
inline jule::Str _1e4793b98_traitDecl(_1e47908cb_typeCoder*, jule::Ptr<_1e306d2cb_Trait>);
inline jule::Str _1e4793ed9_structure(_1e47908cb_typeCoder*, jule::Ptr<_1e30450c7_Struct>);
inline jule::Str _1e479432a_structureIns(_1e47908cb_typeCoder*, jule::Ptr<_1e3047d55_StructIns>);
inline jule::Str _1e479466b_array(_1e47908cb_typeCoder*, jule::Ptr<_1e31aeae3_Arr>);
inline jule::Str _1e4794ced_paramIns(_1e47908cb_typeCoder*, jule::Ptr<_1e305be8a_ParamIns>*);
inline void _1e47954a2_funcInsResult(_1e47908cb_typeCoder*, _227713453_StrBuilder*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Str _1e47957e3_anonFunc(_1e47908cb_typeCoder*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Str _1e4795b34_func(_1e47908cb_typeCoder*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Str _1e4795e75_kind(_1e47908cb_typeCoder*, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Ptr<_1e47986a3_resultCoder> static__1e4798b7b_new(jule::Ptr<_1e47908cb_typeCoder>*);
inline void _1e4798ede_ptr(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31b05b6_Ptr>);
inline void _1e4799352_sptr(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31abcee_Sptr>);
inline void _1e47996b5_mapType(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31ade66_Map>);
inline void _1e4799a28_slice(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31ac7c2_Slc>);
inline void _1e4799d8b_arr(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31aeae3_Arr>);
inline void _1e479a1ee_func(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e479a562_tup(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31ad3b6_Tuple>);
inline void _1e479a8c5_codeMut(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e479ac38_codeMut1(_1e47986a3_resultCoder*, _227713453_StrBuilder*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Str _1e479b046_code(_1e47986a3_resultCoder*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Str _1e890e8e2_Name(_1e890e4c4_Flag*);
inline jule::Str _1e890ea46_What(_1e890e4c4_Flag*);
inline void _1e890eb9a_Reset(_1e890e4c4_Flag*);
inline jule::I32 _1e890ecee_Short(_1e890e4c4_Flag*);
inline jule::Str _1e8912c58_Name(_1e8913121_Flag*);
inline jule::Str _1e8912d9b_What(_1e8913121_Flag*);
inline void _1e891340c_Reset(_1e8913121_Flag*);
inline jule::I32 _1e8913550_Short(_1e8913121_Flag*);
inline jule::Str _1e8916454_Name(_1e891681c_Flag*);
inline jule::Str _1e8916597_What(_1e891681c_Flag*);
inline void _1e8916b08_Reset(_1e891681c_Flag*);
inline jule::I32 _1e8916c4b_Short(_1e891681c_Flag*);
inline jule::Str _1e8919b94_Name(_1e891a05c_Flag*);
inline jule::Str _1e8919cd7_What(_1e891a05c_Flag*);
inline void _1e891a348_Reset(_1e891a05c_Flag*);
inline jule::I32 _1e891a48b_Short(_1e891a05c_Flag*);
inline jule::Str _1e891d390_Name(_1e891d758_Flag*);
inline jule::Str _1e891d4d3_What(_1e891d758_Flag*);
inline void _1e891da44_Reset(_1e891d758_Flag*);
inline jule::I32 _1e891db87_Short(_1e891d758_Flag*);
inline jule::Ptr<_1e4815478_FlagSet> static__1e4815764_New(void);
inline jule::Trait<_1e48138c7_CommonFlag> _1e4815bd7_FindFlag(_1e4815478_FlagSet*, jule::Str);
inline jule::Trait<_1e48138c7_CommonFlag> _1e4816028_FindFlagShort(_1e4815478_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1e4816600_Parse(_1e4815478_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1e891d758_Flag> _1e898a6e8_addFlagCommon(_1e4815478_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1e891a05c_Flag> _1e89928a9_addFlagCommon(_1e4815478_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1e8988938_AddVar(_1e4815478_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1e8990b3d_AddVar(_1e4815478_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1e893110b_parseInteger(_1e4817e09_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1e893883e_parseInteger(_1e4817e09_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1e4818723_getData(_1e4817e09_argParser*);
inline jule::VoidExceptional _1e4818998_processFlag(_1e4817e09_argParser*, jule::Trait<_1e48138c7_CommonFlag>*);
inline jule::VoidExceptional _1e4818c51_singleDash(_1e4817e09_argParser*, jule::Str*);
inline jule::VoidExceptional _1e4819009_doubleDash(_1e4817e09_argParser*, jule::Str*);
inline jule::VoidExceptional _1e4819207_tryArg(_1e4817e09_argParser*);
inline jule::VoidExceptional _1e4819405_parse(_1e4817e09_argParser*);
inline jule::Ptr<_1e4780b1e_ObjectCoder> static__1e478101a_New(jule::Ptr<_1e3b9cbb8_IR>*, _1e477e106_SerializationInfo);
inline void _1e47812c3_write(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Str);
inline void _1e47814c1_addIndent(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e47816be_doneIndent(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e47818bc_indent(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline jule::I64 _1e4781c0d_findAnyType(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::I64 _1e478204e_pushAnyType(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e4782307_pushResultIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e47825b0_pushResult(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305a032_Fn>*);
inline jule::I64 _1e47829ab_findTypeOffsetS(_1e4780b1e_ObjectCoder*, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e3047d55_StructIns>);
inline jule::I64 _1e4782da7_findTypeOffset(_1e4780b1e_ObjectCoder*, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e31a06e9_TypeKind>);
inline void _1e478321a_pushAndWriteMaskMapper(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e306d2cb_Trait>);
inline void _1e47834c3_locInfo(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_20cb74604_Token>*);
inline void _1e47836c1_head(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e47838be_links(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e4783b77_prepareStructure(_1e4780b1e_ObjectCoder*, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e4783d75_prepareStructures(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478412d_iterPackages(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>);
inline void _1e478432b_buildTraitMap(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e4784529_traitDecls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e47847d2_structurePlainDecl(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e47849d0_structurePlainDecls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e4784c88_fieldDecl(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e30472a5_FieldIns>*);
inline void _1e4785041_structureDestructor(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e47853a4_structureOperatorEq(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Str*, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e4785717_structureOperatorNotEq(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Str*, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e4785b35_structureOperator(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Str*, jule::Ptr<_1e305ce36_FnIns>*, jule::Str);
inline void _1e4785ddd_structureOperators(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e4786196_structureInsDecl(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e478644e_structureDecl(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e478664c_structureDecls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478684a_structureMethodDecls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e4786b03_paramsDecls(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>*);
inline void _1e4786e66_funcHead(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305ce36_FnIns>*, jule::Bool);
inline void _1e47872c9_funcDeclIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305ce36_FnIns>*, jule::Bool);
inline void _1e478763c_funcDecl(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305a032_Fn>*, jule::Bool);
inline void _1e4787a5a_funcDeclTrait(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e305a032_Fn>*, jule::Bool);
inline void _1e4787c58_funcDecls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e47880bb_traitDataTypeMethods(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e47882b9_traitDataTypes(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e4788572_paramIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305be8a_ParamIns>*);
inline void _1e478882a_paramsIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>*);
inline void _1e4788b8d_varInitExpr(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e310ed40_Var>*, jule::Fn<void(void)>);
inline void _1e4788e46_var(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e310ed40_Var>);
inline void _1e47891ee_funcIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e47894a7_func(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305a032_Fn>*);
inline void _1e478981a_funcTrait(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e477e6cd_traitHash>*, jule::Ptr<_1e305a032_Fn>*);
inline void _1e4789b7d_traitWrapper(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e305a032_Fn>*, jule::Ptr<_1e477e6cd_traitHash>*);
inline void _1e4789d7b_traitWrappers(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478a1de_traitDataMethods(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e477e6cd_traitHash>*);
inline void _1e478a552_traitData(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e477e6cd_traitHash>*, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e478a750_traitDatas(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478a94d_globals(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478ab4b_decls(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478ae04_structureMethods(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e478b1ac_structureOstream(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e478b465_structureIns(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e3047d55_StructIns>*);
inline void _1e478b71d_structure(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e478b91b_structures(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478bb19_funcs(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478bdc2_pushInit(jule::Ptr<_1e4780b1e_ObjectCoder>, jule::Ptr<_1e30beddd_Package>*);
inline void _1e478c0c0_initCaller(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478c2bd_end(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478c4bb_serializeHead(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline void _1e478c6b9_Serialize(jule::Ptr<_1e4780b1e_ObjectCoder>);
inline jule::Ptr<_1e3ccbaa5_ObjectDeadCode> static__1e3ccc04a_new(jule::Ptr<_1e3b9cbb8_IR>*);
inline jule::Bool _1e75c2ead_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e75c8a0d_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Bool _1e75ce01e_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e3047d55_StructIns>*);
inline jule::Bool _1e75d6895_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e310ed40_Var>*);
inline void _1e75c3376_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e306d2cb_Trait>);
inline void _1e75c8d93_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e305ce36_FnIns>);
inline void _1e75cec56_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e3047d55_StructIns>);
inline void _1e75d6c5d_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e310ed40_Var>);
inline void _1e3d0c344_setReferencesAsLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e30610e3_ReferenceStack>*);
inline void _1e3d0c5ec_inits(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d0c8a5_collectLivePackage(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d0caa3_collectLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>);
inline void _1e3d0cd5b_removeDeadGlobals(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e310ed40_Var>>*);
inline void _1e3d0d114_removeDeadFns(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e305a032_Fn>>*);
inline void _1e3d0d3bc_removeDeadStructs(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e30450c7_Struct>>*);
inline void _1e3d0d675_removeDeadTraits(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e306d2cb_Trait>>*);
inline void _1e3d0d92d_removeDeadsFile(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e3169ad1_SymbolTable>*);
inline void _1e3d0dbd6_removeDeadsPackage(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>, jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d0ddd4_removeDeads(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>);
inline void _1e3d0e0d2_elimanate(jule::Ptr<_1e3ccbaa5_ObjectDeadCode>);
inline __jule_tuple_x_1e3b9cbb8_IR__jule_tuple_s_2277b1ce8_Log static__1e3b9d12a_Build(jule::Str, jule::I64);
inline void _1e3b9d614_appendStructs(_1e3b9cbb8_IR*, jule::Ptr<_1e30beddd_Package>*, jule::Slice<jule::Ptr<_1e30450c7_Struct>>*);
inline jule::Slice<jule::Ptr<_1e30450c7_Struct>> _1e3b9d89a_GetAllStructures(_1e3b9cbb8_IR*);
inline void _1e3b9dc0d_appendGlobals(_1e3b9cbb8_IR*, jule::Ptr<_1e30beddd_Package>*, jule::Slice<jule::Ptr<_1e310ed40_Var>>*);
inline jule::Slice<jule::Ptr<_1e310ed40_Var>> _1e3b9de94_GetAllGlobals(_1e3b9cbb8_IR*);
inline void _1e3b9e192_Order(_1e3b9cbb8_IR*);
inline jule::Str _1e30481c9_Str(_1e3047d55_StructIns*);
inline jule::Bool _1e304851a_Equal(jule::Ptr<_1e3047d55_StructIns>, jule::Ptr<_1e31a06e9_TypeKind>);
inline jule::Bool _1e30489c1_Same(_1e3047d55_StructIns*, jule::Ptr<_1e3047d55_StructIns>);
inline jule::Ptr<_1e305a032_Fn> _1e3048dbc_FindMethod(_1e3047d55_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e30472a5_FieldIns> _1e304920d_FindField(_1e3047d55_StructIns*, jule::Str);
inline jule::Ptr<_1e310ed40_Var> _1e304954e_FindStatic(_1e3047d55_StructIns*, jule::Str);
inline jule::Ptr<_227870e84_Cmd> static__2278713a2_New(jule::Str);
inline jule::VoidExceptional _2278715a0_Spawn(_227870e84_Cmd*);
inline jule::Exceptional<jule::I64> _227871a34_Wait(_227870e84_Cmd*);
inline jule::VoidExceptional _2278c16ee_spawn(_227870e84_Cmd*);
inline jule::Exceptional<jule::I64> _2278c1b83_wait(_227870e84_Cmd*);
inline void _2262c54bc_Free(void*);
inline jule::Str _226306377_BytePtrToStr(jule::U8*);
inline jule::I64 _2252e8403_GetLastErrno(void);
inline jule::I64 _226315b4a_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _226315ebe_Stat(jule::U8*, struct stat*);
inline jule::I64 _2263163ed_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _226316772_Getcwd(jule::U8*, jule::U64);
inline DIR* _226316c6c_Opendir(jule::U8*);
inline struct dirent* _226317036_Readdir(DIR*);
inline jule::I64 _226317300_Closedir(DIR*);
inline jule::I64 _226317c07_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _226317ec1_Rmdir(jule::U8*);
inline jule::I64 _22631828a_Unlink(jule::U8*);
inline jule::I64 _22632906a_Read(jule::I64, void*, jule::U64);
inline jule::I64 _226329411_Close(jule::I64);
inline jule::I64 _226329840_Write(jule::I64, void*, jule::U64);
inline void _226329a71_Exit(jule::I64);
inline jule::Str _226401483_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1e4897054_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _22640d7ae_StrBytes(jule::Str);
inline jule::Str _22640da78_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _22640dd42_StrFromBytes(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _22640e10b_BytesFromStr(jule::Str);
inline jule::I64 _226437376_getLastOsError(void);
inline jule::Slice<jule::Str> _226438410_Args(void);
inline jule::Exceptional<jule::Str> _2264388a5_WorkingDir(void);
inline jule::Exceptional<jule::Str> _226439301_getwd(void);
inline jule::Bool _227538aa3_IsLetter(jule::I32);
inline jule::Bool _2275a1665_is16(jule::Slice<_22759e8c7_Range16>, jule::U16);
inline jule::Bool _2275a19d9_is32(jule::Slice<_22759ee05_Range32>, jule::U32);
inline jule::Bool _2275a22e2_isExcludingLatin(jule::Ptr<_2275a03ab_RangeTable>, jule::I32);
inline jule::Bool _2275a25ab_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _2276ace14_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _2276ad255_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _2276ad51e_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2276ae377_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2276ae6eb_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2276aec7e_RuneCountStr(jule::Str);
inline jule::Bool _2276b0048_RuneStart(jule::U8);
inline jule::I64 _2276da381_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2276ecbac_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2276ed053_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _2276ed3c7_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _2276ed680_Repeat(jule::Str, jule::I64);
inline jule::Bool _2276edb03_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2276ede77_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _2276ee42d_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2276ee76e_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _2276eeb9d_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _227700561_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2277008d5_FindLast(jule::Str, jule::Str);
inline jule::I64 _227702134_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _227702662_FindRune(jule::Str, jule::I32);
inline jule::I64 _227702d5a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22770360d_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _227703982_Contains(jule::Str, jule::Str);
inline jule::Bool _2277044ee_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _227704873_Count(jule::Str, jule::Str);
inline jule::Str _227704d5c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _227705a50_trimLeft(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _227705dc4_TrimLeft(jule::Str, jule::Str);
inline void _2277022ee_trimRight(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _2277069da_Trim(jule::Str, jule::Str);
inline jule::Str _227706d5e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _22771eb02_Clean(jule::Str);
inline jule::Str _2277201c9_FromSlash(jule::Str);
inline jule::Str _22772051a_Join(jule::Slice<jule::Str>);
inline jule::Str _2277207d4_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _227720a9d_Abs(jule::Str);
inline jule::Str _227720d67_Base(jule::Str);
inline jule::Str _22772120d_Dir(jule::Str);
inline jule::Str _2277214c7_VolumeName(jule::Str);
inline jule::Bool _22772231e_IsPathSep(jule::U8);
inline jule::Bool _22772262c_IsAbs(jule::Str);
inline jule::I64 _2277228e6_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _227722c37_abs(jule::Str);
inline jule::Str _227723001_join(jule::Slice<jule::Str>);
inline jule::I64 _22634496a_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _2278b7c67_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _2278bc585_Itoa(jule::I64);
inline jule::Str _2278bc893_Utoa(jule::U64);
inline jule::Slice<char*> _2278c0de6_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _2278c126a_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _2278c149b_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _2278c2425_processErrorFromCode(jule::I64);
inline jule::I64 _2278c2678_getLastProcessError(void);
inline void _2278c2e92_Exit(jule::I64);
inline jule::Str _2278c31a1_Executable(void);
inline jule::Bool _2277a4aee_IsStdHeaderPath(jule::Str);
inline jule::Bool _2277a4da7_IsValidHeaderExt(jule::Str);
inline jule::Bool _2277a5171_IsValidCppExt(jule::Str);
inline jule::Str _2277b225a_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2277b2568_argToStr(jule::Any);
inline jule::I64 _2277b2832_findNextFmt(jule::Str);
inline jule::Str _2277b2bea_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2277b3a64_IsTopDirective(jule::Str);
inline jule::Bool _2277b4eb6_IsWindows(jule::Str);
inline jule::Bool _2277b5291_IsDarwin(jule::Str);
inline jule::Bool _2277b555a_IsLinux(jule::Str);
inline jule::Bool _2277b589b_IsI386(jule::Str);
inline jule::Bool _2277b5b65_IsAmd64(jule::Str);
inline jule::Bool _2277b5e2e_IsArm64(jule::Str);
inline jule::Bool _2277b61e8_IsUnix(jule::Str);
inline jule::Bool _2277b658e_Is32Bit(jule::Str);
inline jule::Bool _2277b6858_Is64Bit(jule::Str);
inline void _2278c447c_init(void);
inline jule::I64 _2288beeb0_LeadingZeros64(jule::U64);
inline jule::I64 _2288c0e17_TrailingZeros(jule::U64);
inline jule::I64 _2288c1874_TrailingZeros32(jule::U32);
inline jule::I64 _2288c1b3d_TrailingZeros64(jule::U64);
inline jule::I64 _2288c75e4_Len32(jule::U32);
inline jule::I64 _2288c78ad_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2288c864a_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2288c9e54_Mul64(jule::U64, jule::U64);
inline jule::U32 _2287ca162_F32Bits(jule::F32);
inline jule::F32 _2287ca470_F32FromBits(jule::U32);
inline jule::U64 _2287ca739_F64Bits(jule::F64);
inline jule::F64 _2287caa7a_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _2287cd132_Frexp(jule::F64);
inline jule::F64 _2288d2247_NaN(void);
inline jule::Bool _2288d2555_IsNaN(jule::F64);
inline jule::F64 _2288d281e_Inf(jule::I64);
inline jule::Bool _2288d2b60_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _2288d2e29_normalize(jule::F64);
inline jule::F64 _2288d48ed_Log(jule::F64);
inline jule::F64 _2288d52d3_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _2288dbecc_Modf(jule::F64);
inline jule::F64 _2288dc7d5_Log2(jule::F64);
inline jule::Str _228916ab7_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2289171a0_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2289178a9_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _228248cbd_floatInfo*);
inline jule::Slice<jule::U8> _228918080_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _228916534_decimalSlice, jule::I64, jule::U8);
inline void _2289184d1_roundShortest(_2289292b1_decimal*, jule::U64, jule::I64, _228248cbd_floatInfo*);
inline jule::Slice<jule::U8> _228918a75_fmtE(jule::Slice<jule::U8>, jule::Bool, _228916534_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _22891905e_fmtF(jule::Slice<jule::U8>, jule::Bool, _228916534_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2289196d0_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _228248cbd_floatInfo*);
inline jule::Slice<jule::U8> _228919dd9_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _228248cbd_floatInfo*);
inline jule::I64 _22891a25d_min(jule::I64, jule::I64);
inline jule::I64 _22891a5d2_max(jule::I64, jule::I64);
inline jule::U8 _22891b12c_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__227c360b3_ConvError _22891b5a0_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _22891b9ce_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _22891be85_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _22891cb78_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _22891d0b8_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _22891ee11_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22892021e_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2289204d8_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _228922067_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _228922496_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__227c360b3_ConvError _228922a3a_atofHex(_228248cbd_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__227c360b3_ConvError _228922e14_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError _2289231cd_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError _228923552_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _2289238c6_ParseFloat(jule::Str, jule::I64);
inline void _2289241ce_ryuFtoaFixed32(_228916534_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _228924674_ryuFtoaFixed64(_228916534_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _228924ec1_formatDecimal(_228916534_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _228925499_ryuFtoaShortest(_228916534_decimalSlice*, jule::U64, jule::I64, _228248cbd_floatInfo*);
inline jule::I64 _228925763_mulByLog2Log10(jule::I64);
inline jule::I64 _228925a2c_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _228925e5b_computeBounds(jule::U64, jule::I64, _228248cbd_floatInfo*);
inline void _228926577_ryuDigits(_228916534_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _228926be8_ryuDigits32(_228916534_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _228927127_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _228927556_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _2289278ca_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _228927b94_divmod1e9(jule::U64);
inline void _22892ab0e_trim(_2289292b1_decimal*);
inline void _22892adea_rightShift(_2289292b1_decimal*, jule::U64);
inline jule::Bool _22892b3a1_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _22892b659_leftShift(_2289292b1_decimal*, jule::U64);
inline jule::Bool _22892b9cd_shouldRoundUp(_2289292b1_decimal*, jule::I64);
inline jule::Str _22892d161_FmtUint(jule::U64, jule::I64);
inline jule::Str _22892d529_FmtInt(jule::I64, jule::I64);
inline jule::Str _22892d7e3_Itoa(jule::I64);
inline jule::Str _22892db34_small(jule::I64);
inline jule::Bool _22892dded_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _22892e492_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _22893088e_RealKindOf(jule::Str);
inline jule::I64 _228930b58_BitsizeOf(jule::Str);
inline jule::Str _228930e99_IntFromBits(jule::I64);
inline jule::Str _228931263_UintFromBits(jule::I64);
inline jule::Str _22893152c_FloatFromBits(jule::I64);
inline jule::Bool _228932176_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _228932440_BitsizeOfFloat(jule::F64);
inline jule::I64 _228932709_BitsizeOfInt(jule::I64);
inline jule::I64 _2289329c3_BitsizeOfUint(jule::U64);
inline void _228932b49_UpdateTarget(void);
inline void _228932cc0_init(void);
inline jule::I64 _228936a82_MinI(jule::Str);
inline jule::I64 _228936d90_MaxI(jule::Str);
inline jule::U64 _228937159_MaxU(jule::Str);
inline jule::F64 _22893738a_Min(jule::Str);
inline jule::F64 _228937654_Max(jule::Str);
inline jule::Bool _228937ac7_IsI8Compatible(jule::Str);
inline jule::Bool _228937dd5_IsI16Compatible(jule::Str);
inline jule::Bool _22893819e_IsI32Compatible(jule::Str);
inline jule::Bool _2289384e0_IsI64Compatible(jule::Str);
inline jule::Bool _2289387a9_IsU8Compatible(jule::Str);
inline jule::Bool _228938a73_IsU16Compatible(jule::Str);
inline jule::Bool _228938d3c_IsU32Compatible(jule::Str);
inline jule::Bool _2289391d3_IsU64Compatible(jule::Str);
inline jule::Bool _22893949c_IsF32Compatible(jule::Str);
inline jule::Bool _228939766_IsF64Compatible(jule::Str);
inline jule::Bool _228939ada_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _228939da4_IsI16Greater(jule::Str);
inline jule::Bool _22893a16d_IsI32Greater(jule::Str);
inline jule::Bool _22893a437_IsI64Greater(jule::Str);
inline jule::Bool _22893a701_IsU16Greater(jule::Str);
inline jule::Bool _22893ab74_IsU32Greater(jule::Str);
inline jule::Bool _22893ae3d_IsU64Greater(jule::Str);
inline jule::Bool _22893b207_IsF32Greater(jule::Str);
inline jule::Bool _22893b4c1_IsF64Greater(jule::Str);
inline jule::Bool _22893b845_IsGreater(jule::Str, jule::Str);
inline jule::Bool _22893c89b_IsSigInt(jule::Str);
inline jule::Bool _22893cba9_IsUnsigInt(jule::Str);
inline jule::Bool _22893ce73_IsInt(jule::Str);
inline jule::Bool _22893d2b4_IsFloat(jule::Str);
inline jule::Bool _22893d57d_IsNum(jule::Str);
inline jule::Bool _22893d847_IsSigNum(jule::Str);
inline void _228947a71_lshiftUnsig(_22893da56_Const*, _22893da56_Const*);
inline void _228947da1_rshiftUnsig(_22893da56_Const*, _22893da56_Const*);
inline jule::Bool _1e300e5be_IsUnaryOp(jule::U64);
inline jule::Bool _1e300e8cc_IsBinOp(jule::U64);
inline jule::Bool _1e300eed7_IsStr(jule::Str);
inline jule::Bool _1e30102a1_IsRawStr(jule::Str);
inline jule::Bool _1e301056a_IsRune(jule::Str);
inline jule::Bool _1e3010e94_IsFloat(jule::Str);
inline jule::Bool _1e301125d_IsNum(jule::Str);
inline jule::Bool _1e30117e1_IsIgnoreIdent(jule::Str);
inline jule::Bool _1e3011aaa_IsAnonIdent(jule::Str);
inline jule::Bool _1e301213d_IsSpace(jule::I32);
inline jule::Bool _1e30125b1_IsLetter(jule::I32);
inline jule::Bool _1e3012b44_IsDecimal(jule::U8);
inline jule::Bool _1e3012e0d_IsBinary(jule::U8);
inline jule::Bool _1e30131c7_IsOctal(jule::U8);
inline jule::Bool _1e3013491_IsHex(jule::U8);
inline jule::Bool _1e301375a_IsAssign(jule::U64);
inline jule::Bool _1e3013a24_IsPostfixOp(jule::U64);
inline jule::Bool _1e3013cdd_IsAssignOp(jule::U64);
inline jule::Ptr<_1e301464b_File> _1e30159e3_NewFileSet(jule::Str);
inline _2277b1ce8_Log _1e301753e_makeErr(jule::I64, jule::I64, jule::Ptr<_1e301464b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e3017907_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1e3017c7b_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e3018144_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e30184b8_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e301883c_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e3018bb1_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e3019145_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e301940e_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1e30196c8_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1e3019a4c_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1e3019dc1_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1e301a245_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1e301a5b9_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1e301a93d_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e301adb1_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1e301b17a_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1e301b4ee_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1e301b7b8_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1e301ba82_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1e301bd4b_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1e301c115_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_2277b1ce8_Log> _1e3022109_Lex(jule::Ptr<_1e301464b_File>, jule::I64);
inline jule::Bool _1e30d8b4e_FindModuleFile(jule::Slice<jule::Ptr<_2263463d9_DirEntry>>*);
inline jule::Str _1e30d8e07_FindModuleFileDeep(jule::Str);
inline jule::Slice<_2277b1ce8_Log> _1e30d91c1_CheckModuleFile(jule::Str*);
inline jule::Bool _1e30d9a51_IsPub(jule::Str);
inline jule::Bool _1e3132725_IsAscii(jule::I32);
inline jule::I32 _1e314e016_ToRune(jule::Str);
inline jule::Str _1e314e2be_ToRawStr(jule::Str);
inline jule::Str _1e314e610_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1e314e8c9_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1e314ec1a_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1e315008e_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1e327c81a_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1e327cb8e_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1e327ce7a_FmtByDefault(_227713453_StrBuilder*, jule::Any*);
inline void _1e327d398_applyFmtByDefault(_227713453_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1e327d7e9_applyFmt(jule::Slice<jule::U8>*, _227713453_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1e327db3a_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e3280b5e_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e3060213_parameterUsesGenerics(jule::Ptr<_1e305be8a_ParamIns>*, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>*);
inline jule::Ptr<_1e31a78bb_TypeSymbol> _1e3062963_buildType(jule::Ptr<_1e302446e_TypeDecl>);
inline jule::Ptr<_1e3171049_Value> _1e3062c71_buildExpr(jule::Ptr<_1e30287a3_Expr>);
inline jule::Ptr<_1e319e907_TypeAlias> _1e306303a_buildTypeAlias(jule::Ptr<_1e303acd2_TypeAliasDecl>);
inline jule::Ptr<_1e30421d4_Field> _1e306337b_buildField(jule::Ptr<_1e303e5aa_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e30421d4_Field>> _1e3063645_buildFields(jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>>*);
inline jule::Ptr<_1e30450c7_Struct> _1e306390e_buildStruct(jule::Ptr<_1e303eea1_StructDecl>);
inline jule::Ptr<_1e305855d_Param> _1e3063bc8_buildParam(jule::Ptr<_1e3034bcc_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e305855d_Param>> _1e306406e_buildParams(jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>>*);
inline jule::Ptr<_1e3057ccc_RetType> _1e3064338_buildRetType(jule::Ptr<_1e3027362_RetTypeDecl>);
inline jule::Ptr<_1e305a032_Fn> _1e3064602_buildFunc(jule::Ptr<_1e303612e_FnDecl>);
inline jule::Slice<jule::Ptr<_1e305a032_Fn>> _1e30648bb_buildMethods(jule::Slice<jule::Ptr<_1e303612e_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>> _1e3064b85_buildTraitInherits(jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>*);
inline jule::Ptr<_1e306d2cb_Trait> _1e3064e4e_buildTrait(jule::Ptr<_1e30406dd_TraitDecl>);
inline jule::Ptr<_1e306ee59_EnumItem> _1e3065218_buildEnumItem(jule::Ptr<_1e303c795_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _1e30654d2_buildEnumItems(jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>>*);
inline jule::Ptr<_1e30709c6_Enum> _1e3065955_buildEnum(jule::Ptr<_1e303d356_EnumDecl>);
inline jule::Ptr<_1e3071b09_TypeEnumItem> _1e3065c1e_buildTypeEnumItem(jule::Ptr<_1e303db81_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> _1e3065ed8_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>>*);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30662a2_buildTypeEnum(jule::Ptr<_1e303e2e1_TypeEnumDecl>);
inline jule::Ptr<_1e310ed40_Var> _1e306656b_buildVar(jule::Ptr<_1e303720c_VarDecl>);
inline jule::Slice<jule::Ptr<_1e310ed40_Var>> _1e3066835_buildVars(jule::Slice<jule::Ptr<_1e303720c_VarDecl>>);
inline jule::Ptr<_1e3095655_Impl> _1e3066aee_buildImpl(jule::Ptr<_1e3040d4d_Impl>);
inline jule::Ptr<_1e316ee05_Data> _1e3091145_buildAsComptimeMethodData(jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3091453_findComptimePackage(jule::Ptr<_1e30dc955_Sema>*);
inline jule::Ptr<_1e316ee05_Data> _1e30917c7_buildComptimeTypeInfoData(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e316ee05_Data> _1e3091a08_buildComptimeValue(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e30949c8_matchConstraint(jule::Str*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e3094cd6_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e3097866_newScopeCheckerBase(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e3097c2e_newScopeChecker(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e305ce36_FnIns>);
inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30980a3_findLabelParent(jule::Str*, jule::Ptr<_1e30a2d8d_scopeChecker>);
inline jule::Bool _1e309846b_modelIsGotoScope(jule::Any, jule::Ptr<_1e309aa89_Scope>*);
inline jule::Bool _1e30987e0_stmtIsGotoScope(jule::Any*, jule::Ptr<_1e309aa89_Scope>*);
inline jule::I64 _1e3098b64_countMatchType(jule::Ptr<_1e309ebc0_Match>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Slice<jule::Ptr<_1e316ee05_Data>> _1e3098e2d_getDatasFromTupleData(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e30997e1_checkMut(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e3099cca_checkAssign(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e309a094_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1e309a35d_isValidStForNextSt(jule::Any*);
inline jule::Bool _1e309a627_stmtIsDef(jule::Any*);
inline jule::U64 _1e30b4e5a_removeEqFromOp(jule::U64);
inline jule::Ptr<_1e310ed40_Var> _1e30b949d_findVarInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1e319e907_TypeAlias> _1e30b9921_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1e30450c7_Struct> _1e30b9d50_findStructInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1e305a032_Fn> _1e30ba306_findFnInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1e306d2cb_Trait> _1e30ba647_findTraitInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1e30709c6_Enum> _1e30ba9bb_findEnumInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1e30721d1_TypeEnum> _1e30bad40_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*);
inline jule::Any _1e30bb37e_defByIdentPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1e30c23b8_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1e30da0e5_isValidModelForRef(jule::Any*);
inline _2277b1ce8_Log _1e30da623_compilerErr(jule::Ptr<_20cb74604_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30da997_impIsLookupable(jule::Ptr<_1e30bbeb7_ImportInfo>*, jule::Str*);
inline void _1e30dac50_appendRetVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e30db03b_appendParamVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e30db327_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Ptr<_1e3169ad1_SymbolTable> _1e30db69b_findFile(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>*, jule::Ptr<_1e301464b_File>*);
inline void _1e30dbb52_pushSuggestion(_2277b1ce8_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1e310d129_pushImplemented(jule::Ptr<_1e306d2cb_Trait>, jule::Ptr<_1e30450c7_Struct>*);
inline void _1e310d415_pushImplements(jule::Ptr<_1e30450c7_Struct>*, jule::Ptr<_1e306d2cb_Trait>);
inline jule::Bool _1e3150831_traitHasReferenceReceiver(jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e3150bb6_floatAssignable(jule::Str*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e315103a_sigAssignable(jule::Str, jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e3151403_unsigAssignable(jule::Str, jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e3151777_intAssignable(jule::Str, jule::Ptr<_1e316ee05_Data>*);
inline void _1e315ce37_checkMutRiskOfStructLit(jule::Ptr<_1e30dc955_Sema>*, jule::Ptr<_1e304d08b_StructLitExprModel>*);
inline jule::Ptr<_1e31a06e9_TypeKind> _1e31639cb_lenKind(void);
inline jule::Bool _1e3163d2d_isGoodValueToInfer(jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e302388b_Directive> _1e3198769_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Any _1e3198b32_findBuiltinsImport(jule::Str*, jule::Ptr<_1e30bbeb7_ImportInfo>);
inline void _1e3198d63_fitBitsize(jule::Ptr<_1e316ee05_Data>*);
inline void _1e3199193_makeStructLitAlloc(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e304d08b_StructLitExprModel>*);
inline jule::Ptr<_1e310ed40_Var> _1e3199517_buildErrorVar(jule::Ptr<_1e309aa89_Scope>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Any _1e319988b_findBuiltinsSema(jule::Str*, jule::Ptr<_1e30dc955_Sema>);
inline jule::Bool _1e3199b55_isOkForShifting(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e319a02e_isInstancedStruct(jule::Ptr<_1e3047d55_StructIns>);
inline jule::Bool _1e319a3a3_isPtrArithmeticCompatible(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e319a68e_applyCastKindModel(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e319a97a_applyCastKind(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e316ee05_Data> _1e319ab89_buildVoidData(void);
inline jule::Str _1e319ae53_checkDataForIntegerIndexing(jule::Ptr<_1e316ee05_Data>*);
inline void _1e319b23e_applyCastModelByEnum(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e30709c6_Enum>);
inline void _1e319b52a_castConstByType(jule::Str*, jule::Ptr<_1e316ee05_Data>*);
inline void _1e319b9c0_updateModelToGenericIns(jule::Any*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Bool _1e319bd44_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1e3024d76_SubIdentTypeDecl>*);
inline jule::Str _1e319c10d_constoa(jule::Ptr<_22893da56_Const>*);
inline jule::Ptr<_1e316ee05_Data> _1e319c482_evalEnumStatic(jule::Ptr<_1e30709c6_Enum>*, jule::Ptr<_1e306ee59_EnumItem>*);
inline jule::Ptr<_1e304d08b_StructLitExprModel> _1e319c74b_isLitBased(jule::Any*);
inline void _1e319ca37_makeImplicitDeref(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_20cb74604_Token>);
inline void _1e6a73904_updateRefer(jule::Ptr<_1e30610e3_ReferenceStack>, jule::Ptr<_1e305ce36_FnIns>*, jule::Ptr<_1e305ce36_FnIns>*);
inline jule::Bool _1e31bae51_kindUsesGenerics(jule::Ptr<_1e31a06e9_TypeKind>*, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>*);
inline jule::Bool _1e31bb319_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Bool _1e31bb5d3_canGetPtr(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e31bb924_isValidForSptrType(jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e31bbbdd_isValidForRef(jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Bool _1e31bbea7_isBuiltinStrConvertable(jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Str _1e31bc271_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e31a82c3_Prim> _1e31bc617_buildPrimType(jule::Str);
inline void _1e31bcbbc_applyImplicitCast(jule::Ptr<_1e31a06e9_TypeKind>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e31bce86_validTypeForXof(jule::Ptr<_1e31a06e9_TypeKind>*);
inline __jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log _1e31c1011_buildSymbols(jule::Ptr<_1e30224c2_Ast>*, jule::Trait<_1e30b90a2_Importer>*, jule::Ptr<_1e30671b5_symbolBuilder>);
inline __jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log _1e31c1484_analyzePackage(jule::Slice<jule::Ptr<_1e30224c2_Ast>>*, jule::Trait<_1e30b90a2_Importer>*, jule::I64*);
inline __jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log _1e31c18b3_AnalyzePackage(jule::Slice<jule::Ptr<_1e30224c2_Ast>>, jule::Trait<_1e30b90a2_Importer>, jule::I64);
inline jule::Ptr<_1e305ce36_FnIns> _1e32815dd_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1e319e907_TypeAlias> _1e32818eb_primTypeAlias(jule::Ptr<_1e31a06e9_TypeKind>*);
inline jule::Ptr<_1e310ed40_Var> _1e3285504_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1e319e907_TypeAlias> _1e3285735_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1e32859ee_findBuiltinDef(jule::Str*);
inline jule::Any _1e3285cb8_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1e3286082_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1e3286428_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1e32866e2_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1e3286a66_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1e316ee05_Data> _1e3286e95_builtinCallerCommonPlain(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3287319_builtinCallerError(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*);
inline jule::Ptr<_1e316ee05_Data> _1e3287748_builtinCallerOut(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3287b77_builtinCallerOutln(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e32880a6_builtinCallerNew(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328868e_builtinCallerPanic(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3288abd_builtinCallerMake(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3288eec_builtinCallerAppend(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e32894d6_callerCopySlice(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3289915_builtinCallerCopy(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3289c89_callerLenSlice(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328a10d_callerLenMap(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328a482_callerLenArr(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328a806_callerLenStr(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328ab7a_callerLenComptime(jule::Ptr<_1e316ee05_Data>*, jule::I64);
inline jule::Ptr<_1e316ee05_Data> _1e328b0a9_builtinCallerLen(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328b42d_callerCapSlice(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328b85c_builtinCallerCap(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328bd46_callerDeleteMap(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328c275_builtinCallerDelete(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328c6a4_builtinCallerAssert(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328cc7b_builtinCallerStdComptimeTypeOf(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328d144_builtinCallerStdComptimeValueOf(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>);
inline jule::Ptr<_1e316ee05_Data> _1e328d83c_builtinCallerStdComptimeRange(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328dc6b_builtinCallerStdComptimeLine(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328e19a_builtinCallerStdComptimeFile(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328e5c9_builtinCallerStdComptimeFiles(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328ea08_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e328ee37_builtinCallerStdMemSizeOf(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3290366_builtinCallerStdMemAlignOf(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3290795_builtinCallerStdMemFree(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3290bc4_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3291103_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3291532_builtinCallerStdDebugOut(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e316ee05_Data> _1e3291961_builtinCallerStdDebugOutln(jule::Ptr<_1e3171ae9_Eval>*, jule::Ptr<_1e302c4cc_FnCallExpr>*, jule::Ptr<_1e316ee05_Data>*);
inline jule::Ptr<_1e3b1be01_FileInfo> _1e3b63398_ParseFile(jule::Ptr<_1e301464b_File>);
inline __jule_tuple_x_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log _1e3b63970_parseFileset(jule::Ptr<_1e301464b_File>);
inline jule::Ptr<_1e3034490_ScopeTree> _1e3b643dd_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1e3b64773_isSt(jule::Ptr<_20cb74604_Token>, jule::Ptr<_20cb74604_Token>);
inline jule::Bool _1e3b64ae7_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1e3b64eb0_nextStPos(jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::I64);
inline __jule_tuple_sx_20cb74604_Token__jule_tuple_bool _1e3b65334_skipSt(jule::I64*, jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Slice<jule::Ptr<_1e3b65664_stmt>> _1e3b65a1b_splitStmts(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Bool _1e3b7dced_isTypeOp(jule::U64*);
inline jule::Bool _1e3b7e10b_isTypeRange(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b7e3c5_getBlockExpr(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline __jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token _1e3b7e78d_splitDelim(jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::U64);
inline jule::I64 _1e3b7ea57_findLowestPrecOp(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Ptr<_1e302a1cd_IdentExpr> _1e3b7ed21_buildIdentExpr(jule::Ptr<_20cb74604_Token>*);
inline __jule_tuple_sx_20cb74604_Token__jule_tuple_int _1e3b800da_getRangeExprTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline jule::Bool _1e3b80ddd_checkAssignTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline _2277b1ce8_Log _1e3b820ba_makeErr(jule::I64, jule::I64, jule::Ptr<_1e301464b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b825b5_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline __jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token _1e3b8287e_rangeLast(jule::Slice<jule::Ptr<_20cb74604_Token>>*);
inline __jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log _1e3b82d35_parts(jule::Slice<jule::Ptr<_20cb74604_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1e3b830ee_getCloseOfBrace(jule::U64);
inline _2277b1ce8_Log _1e3b8352d_compilerErr(jule::Ptr<_20cb74604_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1e3b838c4_pushSuggestion(_2277b1ce8_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e302446e_TypeDecl> _1e3b95809_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1e3386a9a_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1e3386bdd_checkArch(jule::Str);
inline jule::Bool _1e33a218c_isPassFileAnnotation(jule::Str);
inline void _1e33a3314_setOsVars(jule::Slice<jule::Str>*);
inline void _1e33a3589_setArchVars(jule::Slice<jule::Str>*);
inline void _1e33a3875_initVars(jule::Slice<jule::Str>*, _1e33a2ee5_CompileInfo*);
inline jule::Slice<jule::U8> _1e3b99940_readBuff(jule::Str);
inline _2277b1ce8_Log _1e3b99c1a_flatCompilerErr(jule::Str);
inline void _1e3b9e538_pushPasses(jule::Ptr<_1e30beddd_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1e3b9e901_getAllUniquePasses(jule::Ptr<_1e30beddd_Package>*, jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>>);
inline _1e33a2ee5_CompileInfo _1e3b9eb10_buildCompileInfo(void);
inline void _1e3d0e412_EliminateDefines(jule::Ptr<_1e3b9cbb8_IR>*);
inline jule::Ptr<_1e302388b_Directive> _1e3d0e7ca_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Bool _1e3d0eb4e_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Bool _1e3d10017_isTraitMethod(jule::Ptr<_1e3047d55_StructIns>*, jule::Ptr<_1e305ce36_FnIns>*);
inline void _1e3d1401b_eliminateDeadCodeOfScope(jule::Ptr<_1e309aa89_Scope>);
inline void _1e3d14291_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e305a032_Fn>>*);
inline void _1e3d144c2_eliminateFunctionsScopePackage(jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d1477a_eliminateScopePackage(jule::Ptr<_1e30beddd_Package>*);
inline void _1e3d149ab_EliminateScopes(jule::Ptr<_1e3b9cbb8_IR>*);
inline jule::Uintptr _1e3291ca2_typeData(jule::Any*);
inline jule::Bool _1e329216a_equalConst(jule::Ptr<_22893da56_Const>, jule::Ptr<_22893da56_Const>);
inline jule::Bool _1e32924de_equalCasting(jule::Ptr<_1e304d91b_CastingExprModel>, jule::Ptr<_1e304d91b_CastingExprModel>);
inline jule::Bool _1e329281e_equalUnary(jule::Ptr<_1e304c6b7_UnaryExprModel>, jule::Ptr<_1e304c6b7_UnaryExprModel>);
inline jule::Bool _1e3292b93_equalIndexing(jule::Ptr<_1e304eb4d_IndexingExprModel>, jule::Ptr<_1e304eb4d_IndexingExprModel>);
inline jule::Bool _1e3293017_equalBinary(jule::Ptr<_1e304c2dd_BinopExprModel>, jule::Ptr<_1e304c2dd_BinopExprModel>);
inline jule::Bool _1e329338b_equalModels(jule::Any, jule::Any);
inline jule::Bool _1e329b6c4_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1e329b9d2_isConstantValidConditionalCase(jule::Ptr<_1e309aea7_If>*);
inline jule::Bool _1e329bc9b_isUnreachableExpr(jule::Any*);
inline jule::Bool _1e329c0dc_isConstantValidMatchCase(jule::Ptr<_1e30a0808_Case>*);
inline jule::Bool _1e329c3a6_isUnreachableConditionalCase(jule::Ptr<_1e309aea7_If>*);
inline jule::Bool _1e329c670_isUnreachableMatchCase(jule::Ptr<_1e30a0808_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1e32a547a_checkForBitShiftOpt(jule::Ptr<_1e304bce3_OperandExprModel>*, jule::Ptr<_1e304bce3_OperandExprModel>*);
inline jule::Bool _1e32a5843_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1e32a815e_PushOptLevel(jule::I64);
inline void _1e3d1de16_detectEnabled(void);
inline void _1e3d47bed_Throw(jule::Str);
inline jule::U64 _1e47785b7_unix(void);
inline jule::Bool _1e46a09c8_isCopyOptimizable(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e46a0d91_isIterCopyOptimizable(jule::Ptr<_1e316ee05_Data>*, jule::Ptr<_1e310ed40_Var>*);
inline jule::Str _1e46b0ec2_decomposeCommonEsq(jule::U8);
inline jule::Str _1e46b12d0_sbtoa(jule::U8);
inline void _1e46b15bb_cstrBytes(_227713453_StrBuilder*, jule::Str);
inline void _1e46b18eb_cstrLit(_227713453_StrBuilder*, jule::Str);
inline void _1e46b1c92_ftoa(_227713453_StrBuilder*, jule::F64, jule::I64);
inline void _1e46b207d_itoa(_227713453_StrBuilder*, jule::I64);
inline void _1e46b2369_utoa(_227713453_StrBuilder*, jule::U64);
inline jule::Bool _1e46b2743_isForwarded(jule::Ptr<_1e309aa89_Scope>*);
inline jule::Bool _1e46b2a0c_isExprComesFromBind(jule::Ptr<_1e316ee05_Data>*);
inline jule::Bool _1e46b2cc6_isAny(jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _1e478caa4_iterFiles(jule::Ptr<_1e30beddd_Package>*, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>);
inline jule::Str _1e478cdb2_concatAllParts(jule::Slice<jule::Ptr<_20cb74604_Token>>);
inline jule::Bool _1e478d236_containsTraitMethod(jule::Ptr<_1e306d2cb_Trait>*, jule::Str*);
inline void _1e478d566_pushMethodsFromInherit(jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e306d2cb_Trait>*);
inline void _1e478d852_pushMethodsFromInherits(jule::Ptr<_1e306d2cb_Trait>*, jule::Ptr<_1e306d2cb_Trait>*);
inline jule::Bool _1e478db1b_isOpMethod(jule::Ptr<_1e305a032_Fn>*);
inline jule::Bool _1e478ddd5_isHeadDecl(jule::Ptr<_1e305a032_Fn>*);
inline jule::Ptr<_1e302388b_Directive> _1e479c9a4_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Bool _1e479cd6c_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>*, jule::Str);
inline jule::Bool _1e479d136_shouldInitialized(jule::Ptr<_1e31a06e9_TypeKind>*);
inline void _2278c7491_printErrorMessage(jule::Str);
inline void _2278c7716_help(jule::Slice<jule::Str>*);
inline void _2278c7947_version(jule::Slice<jule::Str>*);
inline void _2278c7b45_toolDistos(void);
inline void _2278c7cbb_toolDistarch(void);
inline void _2278c7eec_tool(jule::Slice<jule::Str>*);
inline void _2278c822d_julenv(jule::Slice<jule::Str>*);
inline void _2278c853b_mod(jule::Slice<jule::Str>*);
inline jule::Bool _2278c8805_processCommand(jule::Slice<jule::Str>*);
inline void _2278c897b_showInfo(void);
void entry_point(void);
inline void _1e481ab43_init(void);
inline jule::Ptr<_226348144_File> _1e481ae1d_openOutput(jule::Str*);
inline void _1e481b094_clearObjects(void);
inline void _1e481b3c4_compileIr(jule::Str, jule::Str);
inline jule::Bool _1e481b68d_isCppSourceFile(jule::Str);
inline void _1e481b8be_pushCompCmdClang(_227713453_StrBuilder*);
inline void _1e481bb00_pushCompCmdGcc(_227713453_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1e481c084_genCompileCmd(jule::Str, jule::Ptr<_1e3b9cbb8_IR>*);
inline jule::Str _1e481c293_getCompilePath(void);
inline void _1e481c4c4_applyTargetIndependentOptimizations(jule::Ptr<_1e3b9cbb8_IR>*);
inline void _1e481c64a_checkCompilerFlag(void);
inline void _1e481c87b_checkTargetArch(jule::Str);
inline void _1e481caac_checkTargetOs(jule::Str);
inline void _1e481ccdd_checkTargetFlag(jule::Str*);
inline void _1e481d01e_checkOptFlag(jule::Str*);
inline void _1e481d3a4_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1e481d618_checkFlags(jule::Slice<jule::Str>*);
inline void _1e481d849_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1e3b9cbb8_IR> _1e481db13_buildIr(jule::Slice<jule::Str>*);
inline void _1e481dd44_compileCommand(jule::Slice<jule::Str>*);


struct _1e307438c_comptimeRangeKindMptrData {
	void(*_1e3073a84_ready)(jule::Trait<_1e307438c_comptimeRangeKind>, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
	void(*_1e3073ea2_step)(jule::Trait<_1e307438c_comptimeRangeKind>, jule::I64, jule::Ptr<_1e310ed40_Var>*, jule::Ptr<_1e310ed40_Var>*);
	jule::I64(*_1e3074238_len)(jule::Trait<_1e307438c_comptimeRangeKind>);
};

struct _1e30b90a2_ImporterMptrData {
	void(*_1e30b7d81_SetModPath)(jule::Trait<_1e30b90a2_Importer>, jule::Str);
	jule::Str(*_1e30b8117_GetModPath)(jule::Trait<_1e30b90a2_Importer>);
	jule::Str(*_1e30b8458_ModById)(jule::Trait<_1e30b90a2_Importer>, jule::I64);
	jule::Ptr<_1e30bbeb7_ImportInfo>(*_1e30b8799_GetImport)(jule::Trait<_1e30b90a2_Importer>, jule::Str);
	__jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log(*_1e30b8b95_ImportPackage)(jule::Trait<_1e30b90a2_Importer>, jule::Str, jule::Bool);
	void(*_1e30b8e4d_Imported)(jule::Trait<_1e30b90a2_Importer>, jule::Ptr<_1e30bbeb7_ImportInfo>);
};

struct _1e31a0243_KindMptrData {
	jule::Str(*_1e319ec9d_Str)(jule::Trait<_1e31a0243_Kind>);
	jule::Bool(*_1e31a00de_Equal)(jule::Trait<_1e31a0243_Kind>, jule::Ptr<_1e31a06e9_TypeKind>);
};

struct _1e31c0230_LookupMptrData {
	jule::Ptr<_1e30bbeb7_ImportInfo>(*_1e31bd519_SelectPackage)(jule::Trait<_1e31c0230_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>);
	jule::Ptr<_1e310ed40_Var>(*_1e31bd915_FindVar)(jule::Trait<_1e31c0230_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e319e907_TypeAlias>(*_1e31bdd11_FindTypeAlias)(jule::Trait<_1e31c0230_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e30450c7_Struct>(*_1e31be20c_FindStruct)(jule::Trait<_1e31c0230_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e305a032_Fn>(*_1e31be608_FindFn)(jule::Trait<_1e31c0230_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e306d2cb_Trait>(*_1e31be949_FindTrait)(jule::Trait<_1e31c0230_Lookup>, jule::Str);
	jule::Ptr<_1e30709c6_Enum>(*_1e31bec8a_FindEnum)(jule::Trait<_1e31c0230_Lookup>, jule::Str);
	jule::Ptr<_1e30721d1_TypeEnum>(*_1e31c00cb_FindTypeEnum)(jule::Trait<_1e31c0230_Lookup>, jule::Str);
};

struct _1e48138c7_CommonFlagMptrData {
	jule::Str(*_1e47d1796_Name)(jule::Trait<_1e48138c7_CommonFlag>);
	jule::I32(*_1e47d193e_Short)(jule::Trait<_1e48138c7_CommonFlag>);
	jule::Str(*_1e4813641_What)(jule::Trait<_1e48138c7_CommonFlag>);
	void(*_1e4813784_Reset)(jule::Trait<_1e48138c7_CommonFlag>);
};



inline void _1e3073a84_ready_comptimeRangeKind_0(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e30778ce_ready(_self_.safe_ptr<_1e3076c85_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_0(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e3077cec_step(_self_.safe_ptr<_1e3076c85_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_0(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e3078083_len(_self_.safe_ptr<_1e3076c85_comptimeStructFields>());
}
inline void _1e3073a84_ready_comptimeRangeKind_1(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e307ab8a_ready(_self_.safe_ptr<_1e307a052_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_1(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e307b0a8_step(_self_.safe_ptr<_1e307a052_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_1(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e307b33e_len(_self_.safe_ptr<_1e307a052_comptimeStatics>());
}
inline void _1e3073a84_ready_comptimeRangeKind_2(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e307d62c_ready(_self_.safe_ptr<_1e307c95b_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_2(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e307da4a_step(_self_.safe_ptr<_1e307c95b_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_2(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e307dcd1_len(_self_.safe_ptr<_1e307c95b_comptimeEnumFields>());
}
inline void _1e3073a84_ready_comptimeRangeKind_3(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e3081e8d_ready(_self_.safe_ptr<_1e3081355_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_3(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e30823ab_step(_self_.safe_ptr<_1e3081355_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_3(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e3082642_len(_self_.safe_ptr<_1e3081355_comptimeParams>());
}
inline void _1e3073a84_ready_comptimeRangeKind_4(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e3083588_ready(_self_.safe_ptr<_1e3082950_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_4(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e30839a6_step(_self_.safe_ptr<_1e3082950_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_4(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e3083c3c_len(_self_.safe_ptr<_1e3082950_comptimeTypeInfos>());
}
inline void _1e3073a84_ready_comptimeRangeKind_5(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::Ptr<_1e310ed40_Var>* _1329_keyA, jule::Ptr<_1e310ed40_Var>* _1346_keyB) {
	_1e308d9e4_ready(_self_.safe_ptr<_1e308cdab_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1e3073ea2_step_comptimeRangeKind_5(jule::Trait<_1e307438c_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1e310ed40_Var>* _1436_keyA, jule::Ptr<_1e310ed40_Var>* _1453_keyB) {
	_1e308de12_step(_self_.safe_ptr<_1e308cdab_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1e3074238_len_comptimeRangeKind_5(jule::Trait<_1e307438c_comptimeRangeKind> _self_) {
	return _1e308e198_len(_self_.safe_ptr<_1e308cdab_comptimeFiles>());
}
inline void _1e30b7d81_SetModPath_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_, jule::Str _1729_path) {
	_1e3b9acc6_SetModPath(_self_.safe_ptr<_1e3b9a204_JuleImporter>(), _1729_path);
}
inline jule::Str _1e30b8117_GetModPath_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_) {
	return _1e3b9b05c_GetModPath(_self_.safe_ptr<_1e3b9a204_JuleImporter>());
}
inline jule::Str _1e30b8458_ModById_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_, jule::I64 _2522_id) {
	return _1e3b9b39d_ModById(_self_.safe_ptr<_1e3b9a204_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30b8799_GetImport_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_, jule::Str _3128_path) {
	return _1e3b9b6de_GetImport(_self_.safe_ptr<_1e3b9a204_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log _1e30b8b95_ImportPackage_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1e3b9bada_ImportPackage(_self_.safe_ptr<_1e3b9a204_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1e30b8e4d_Imported_Importer_0(jule::Trait<_1e30b90a2_Importer> _self_, jule::Ptr<_1e30bbeb7_ImportInfo> _4131__0) {
	_1e3b9bd93_Imported(_self_.safe_ptr<_1e3b9a204_JuleImporter>(), _4131__0);
}
inline jule::Str _1e319ec9d_Str_Kind_0(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e30481c9_Str(_self_.safe_ptr<_1e3047d55_StructIns>());
}
inline jule::Bool _1e31a00de_Equal_Kind_0(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e304851a_Equal(_self_.data.as<_1e3047d55_StructIns>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_1(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e305d277_Str(_self_.safe_ptr<_1e305ce36_FnIns>());
}
inline jule::Bool _1e31a00de_Equal_Kind_1(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e305d5b8_Equal(_self_.data.as<_1e305ce36_FnIns>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_2(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e306d694_Str(_self_.safe_ptr<_1e306d2cb_Trait>());
}
inline jule::Bool _1e31a00de_Equal_Kind_2(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e306d9d5_Equal(_self_.data.as<_1e306d2cb_Trait>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_3(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3070d4a_Str(_self_.safe_ptr<_1e30709c6_Enum>());
}
inline jule::Bool _1e31a00de_Equal_Kind_3(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307118b_Equal(_self_.data.as<_1e30709c6_Enum>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_4(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3072522_Str(_self_.safe_ptr<_1e30721d1_TypeEnum>());
}
inline jule::Bool _1e31a00de_Equal_Kind_4(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3072863_Equal(_self_.data.as<_1e30721d1_TypeEnum>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_5(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3074942_Str(_self_.safe_ptr<_1e3074579_comptimeRange>());
}
inline jule::Bool _1e31a00de_Equal_Kind_5(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3074c83_Equal(_self_.data.as<_1e3074579_comptimeRange>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_6(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3075459_Str(_self_.safe_ptr<_1e30750d5_comptimeStructField>());
}
inline jule::Bool _1e31a00de_Equal_Kind_6(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307579a_Equal(_self_.data.as<_1e30750d5_comptimeStructField>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_7(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e307711a_Str(_self_.safe_ptr<_1e3076c85_comptimeStructFields>());
}
inline jule::Bool _1e31a00de_Equal_Kind_7(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307745b_Equal(_self_.data.as<_1e3076c85_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_8(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3078715_Str(_self_.safe_ptr<_1e3078391_comptimeStatic>());
}
inline jule::Bool _1e31a00de_Equal_Kind_8(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3078a56_Equal(_self_.data.as<_1e3078391_comptimeStatic>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_9(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e307a3c6_Str(_self_.safe_ptr<_1e307a052_comptimeStatics>());
}
inline jule::Bool _1e31a00de_Equal_Kind_9(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307a717_Equal(_self_.data.as<_1e307a052_comptimeStatics>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_10(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e307b9c1_Str(_self_.safe_ptr<_1e307b64c_comptimeEnumField>());
}
inline jule::Bool _1e31a00de_Equal_Kind_10(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307bd12_Equal(_self_.data.as<_1e307b64c_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_11(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e307cde0_Str(_self_.safe_ptr<_1e307c95b_comptimeEnumFields>());
}
inline jule::Bool _1e31a00de_Equal_Kind_11(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307d231_Equal(_self_.data.as<_1e307c95b_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_12(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e307e463_Str(_self_.safe_ptr<_1e307e0de_comptimeParam>());
}
inline jule::Bool _1e31a00de_Equal_Kind_12(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e307e7a4_Equal(_self_.data.as<_1e307e0de_comptimeParam>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_13(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e30816c9_Str(_self_.safe_ptr<_1e3081355_comptimeParams>());
}
inline jule::Bool _1e31a00de_Equal_Kind_13(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3081a1a_Equal(_self_.data.as<_1e3081355_comptimeParams>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_14(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e3082cc4_Str(_self_.safe_ptr<_1e3082950_comptimeTypeInfos>());
}
inline jule::Bool _1e31a00de_Equal_Kind_14(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3083115_Equal(_self_.data.as<_1e3082950_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_15(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e30843be_Str(_self_.safe_ptr<_1e308404a_comptimeTypeInfo>());
}
inline jule::Bool _1e31a00de_Equal_Kind_15(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e3084710_Equal(_self_.data.as<_1e308404a_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_16(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e308a8d1_Str(_self_.safe_ptr<_1e308a55c_comptimeValue>());
}
inline jule::Bool _1e31a00de_Equal_Kind_16(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e308ac22_Equal(_self_.data.as<_1e308a55c_comptimeValue>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_17(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e308d230_Str(_self_.safe_ptr<_1e308cdab_comptimeFiles>());
}
inline jule::Bool _1e31a00de_Equal_Kind_17(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e308d571_Equal(_self_.data.as<_1e308cdab_comptimeFiles>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_18(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e308e82a_Str(_self_.safe_ptr<_1e308e4a6_comptimeFile>());
}
inline jule::Bool _1e31a00de_Equal_Kind_18(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e308eb6b_Equal(_self_.data.as<_1e308e4a6_comptimeFile>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_19(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31a0ab2_Str(_self_.safe_ptr<_1e31a06e9_TypeKind>());
}
inline jule::Bool _1e31a00de_Equal_Kind_19(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31a0e03_Equal(_self_.data.as<_1e31a06e9_TypeKind>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_20(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31a8614_Str(_self_.safe_ptr<_1e31a82c3_Prim>());
}
inline jule::Bool _1e31a00de_Equal_Kind_20(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31a8955_Equal(_self_.data.as<_1e31a82c3_Prim>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_21(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31ac173_Str(_self_.safe_ptr<_1e31abcee_Sptr>());
}
inline jule::Bool _1e31a00de_Equal_Kind_21(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31ac4b4_Equal(_self_.data.as<_1e31abcee_Sptr>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_22(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31acc56_Str(_self_.safe_ptr<_1e31ac7c2_Slc>());
}
inline jule::Bool _1e31a00de_Equal_Kind_22(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31ad097_Equal(_self_.data.as<_1e31ac7c2_Slc>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_23(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31ad73a_Str(_self_.safe_ptr<_1e31ad3b6_Tuple>());
}
inline jule::Bool _1e31a00de_Equal_Kind_23(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31ada7b_Equal(_self_.data.as<_1e31ad3b6_Tuple>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_24(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31ae2da_Str(_self_.safe_ptr<_1e31ade66_Map>());
}
inline jule::Bool _1e31a00de_Equal_Kind_24(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31ae62b_Equal(_self_.data.as<_1e31ade66_Map>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_25(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31aee67_Str(_self_.safe_ptr<_1e31aeae3_Arr>());
}
inline jule::Bool _1e31a00de_Equal_Kind_25(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31b02a8_Equal(_self_.data.as<_1e31aeae3_Arr>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_26(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e31b093a_Str(_self_.safe_ptr<_1e31b05b6_Ptr>());
}
inline jule::Bool _1e31a00de_Equal_Kind_26(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e31b0c7b_Equal(_self_.data.as<_1e31b05b6_Ptr>(), _5621_other);
}
inline jule::Str _1e319ec9d_Str_Kind_27(jule::Trait<_1e31a0243_Kind> _self_) {
	return _1e479015b_Str(_self_.safe_ptr<_1e478ecc6_customType>());
}
inline jule::Bool _1e31a00de_Equal_Kind_27(jule::Trait<_1e31a0243_Kind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _5621_other) {
	return _1e479049c_Equal(_self_.data.as<_1e478ecc6_customType>(), _5621_other);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e31bd519_SelectPackage_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _932_selector) {
	return _1e30a3333_SelectPackage(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1e310ed40_Var> _1e31bd915_FindVar_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1e30a372e_FindVar(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1e319e907_TypeAlias> _1e31bdd11_FindTypeAlias_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1e30a3b2a_FindTypeAlias(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1e30450c7_Struct> _1e31be20c_FindStruct_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1e30a4026_FindStruct(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1e305a032_Fn> _1e31be608_FindFn_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1e30a4422_FindFn(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1e306d2cb_Trait> _1e31be949_FindTrait_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2928_ident) {
	return _1e30a4763_FindTrait(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1e30709c6_Enum> _1e31bec8a_FindEnum_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3327_ident) {
	return _1e30a4aa4_FindEnum(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31c00cb_FindTypeEnum_Lookup_0(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3731_ident) {
	return _1e30a4de5_FindTypeEnum(_self_.safe_ptr<_1e30a2d8d_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e31bd519_SelectPackage_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _932_selector) {
	return _1e30bc4a1_SelectPackage(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1e310ed40_Var> _1e31bd915_FindVar_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1e30bc89c_FindVar(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1e319e907_TypeAlias> _1e31bdd11_FindTypeAlias_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1e30bcc98_FindTypeAlias(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1e30450c7_Struct> _1e31be20c_FindStruct_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1e30bd194_FindStruct(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1e305a032_Fn> _1e31be608_FindFn_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1e30bd590_FindFn(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1e306d2cb_Trait> _1e31be949_FindTrait_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2928_ident) {
	return _1e30bd8d1_FindTrait(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1e30709c6_Enum> _1e31bec8a_FindEnum_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3327_ident) {
	return _1e30bdc22_FindEnum(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31c00cb_FindTypeEnum_Lookup_1(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3731_ident) {
	return _1e30be063_FindTypeEnum(_self_.safe_ptr<_1e30bbeb7_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e31bd519_SelectPackage_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _932_selector) {
	return _1e30c0383_SelectPackage(_self_.safe_ptr<_1e30beddd_Package>(), _932_selector);
}
inline jule::Ptr<_1e310ed40_Var> _1e31bd915_FindVar_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1e30c077e_FindVar(_self_.safe_ptr<_1e30beddd_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1e319e907_TypeAlias> _1e31bdd11_FindTypeAlias_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1e30c0b7a_FindTypeAlias(_self_.safe_ptr<_1e30beddd_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1e30450c7_Struct> _1e31be20c_FindStruct_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1e30c1076_FindStruct(_self_.safe_ptr<_1e30beddd_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1e305a032_Fn> _1e31be608_FindFn_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1e30c1472_FindFn(_self_.safe_ptr<_1e30beddd_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1e306d2cb_Trait> _1e31be949_FindTrait_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2928_ident) {
	return _1e30c17b3_FindTrait(_self_.safe_ptr<_1e30beddd_Package>(), _2928_ident);
}
inline jule::Ptr<_1e30709c6_Enum> _1e31bec8a_FindEnum_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3327_ident) {
	return _1e30c1b04_FindEnum(_self_.safe_ptr<_1e30beddd_Package>(), _3327_ident);
}
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31c00cb_FindTypeEnum_Lookup_2(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3731_ident) {
	return _1e30c1e45_FindTypeEnum(_self_.safe_ptr<_1e30beddd_Package>(), _3731_ident);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e31bd519_SelectPackage_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _932_selector) {
	return _1e30dcdea_SelectPackage(_self_.safe_ptr<_1e30dc955_Sema>(), _932_selector);
}
inline jule::Ptr<_1e310ed40_Var> _1e31bd915_FindVar_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1e30dd2e6_FindVar(_self_.safe_ptr<_1e30dc955_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1e319e907_TypeAlias> _1e31bdd11_FindTypeAlias_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1e30dd6e2_FindTypeAlias(_self_.safe_ptr<_1e30dc955_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1e30450c7_Struct> _1e31be20c_FindStruct_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1e30ddadd_FindStruct(_self_.safe_ptr<_1e30dc955_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1e305a032_Fn> _1e31be608_FindFn_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1e30dded9_FindFn(_self_.safe_ptr<_1e30dc955_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1e306d2cb_Trait> _1e31be949_FindTrait_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2928_ident) {
	return _1e30de32a_FindTrait(_self_.safe_ptr<_1e30dc955_Sema>(), _2928_ident);
}
inline jule::Ptr<_1e30709c6_Enum> _1e31bec8a_FindEnum_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3327_ident) {
	return _1e30de66b_FindEnum(_self_.safe_ptr<_1e30dc955_Sema>(), _3327_ident);
}
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31c00cb_FindTypeEnum_Lookup_3(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3731_ident) {
	return _1e30de9ac_FindTypeEnum(_self_.safe_ptr<_1e30dc955_Sema>(), _3731_ident);
}
inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e31bd519_SelectPackage_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _932_selector) {
	return _1e316a065_SelectPackage(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1e310ed40_Var> _1e31bd915_FindVar_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1e316a461_FindVar(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1e319e907_TypeAlias> _1e31bdd11_FindTypeAlias_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1e316a85c_FindTypeAlias(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1e30450c7_Struct> _1e31be20c_FindStruct_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1e316ac58_FindStruct(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1e305a032_Fn> _1e31be608_FindFn_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1e316b154_FindFn(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1e306d2cb_Trait> _1e31be949_FindTrait_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _2928_ident) {
	return _1e316b495_FindTrait(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1e30709c6_Enum> _1e31bec8a_FindEnum_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3327_ident) {
	return _1e316b7d6_FindEnum(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1e30721d1_TypeEnum> _1e31c00cb_FindTypeEnum_Lookup_4(jule::Trait<_1e31c0230_Lookup> _self_, jule::Str _3731_ident) {
	return _1e316bb27_FindTypeEnum(_self_.safe_ptr<_1e3169ad1_SymbolTable>(), _3731_ident);
}
inline jule::Str _1e47d1796_Name_CommonFlag_0(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e890e8e2_Name(_self_.safe_ptr<_1e890e4c4_Flag>());
}
inline jule::I32 _1e47d193e_Short_CommonFlag_0(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e890ecee_Short(_self_.safe_ptr<_1e890e4c4_Flag>());
}
inline jule::Str _1e4813641_What_CommonFlag_0(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e890ea46_What(_self_.safe_ptr<_1e890e4c4_Flag>());
}
inline void _1e4813784_Reset_CommonFlag_0(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	_1e890eb9a_Reset(_self_.safe_ptr<_1e890e4c4_Flag>());
}
inline jule::Str _1e47d1796_Name_CommonFlag_1(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8912c58_Name(_self_.safe_ptr<_1e8913121_Flag>());
}
inline jule::I32 _1e47d193e_Short_CommonFlag_1(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8913550_Short(_self_.safe_ptr<_1e8913121_Flag>());
}
inline jule::Str _1e4813641_What_CommonFlag_1(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8912d9b_What(_self_.safe_ptr<_1e8913121_Flag>());
}
inline void _1e4813784_Reset_CommonFlag_1(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	_1e891340c_Reset(_self_.safe_ptr<_1e8913121_Flag>());
}
inline jule::Str _1e47d1796_Name_CommonFlag_2(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8916454_Name(_self_.safe_ptr<_1e891681c_Flag>());
}
inline jule::I32 _1e47d193e_Short_CommonFlag_2(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8916c4b_Short(_self_.safe_ptr<_1e891681c_Flag>());
}
inline jule::Str _1e4813641_What_CommonFlag_2(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8916597_What(_self_.safe_ptr<_1e891681c_Flag>());
}
inline void _1e4813784_Reset_CommonFlag_2(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	_1e8916b08_Reset(_self_.safe_ptr<_1e891681c_Flag>());
}
inline jule::Str _1e47d1796_Name_CommonFlag_3(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8919b94_Name(_self_.safe_ptr<_1e891a05c_Flag>());
}
inline jule::I32 _1e47d193e_Short_CommonFlag_3(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e891a48b_Short(_self_.safe_ptr<_1e891a05c_Flag>());
}
inline jule::Str _1e4813641_What_CommonFlag_3(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e8919cd7_What(_self_.safe_ptr<_1e891a05c_Flag>());
}
inline void _1e4813784_Reset_CommonFlag_3(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	_1e891a348_Reset(_self_.safe_ptr<_1e891a05c_Flag>());
}
inline jule::Str _1e47d1796_Name_CommonFlag_4(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e891d390_Name(_self_.safe_ptr<_1e891d758_Flag>());
}
inline jule::I32 _1e47d193e_Short_CommonFlag_4(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e891db87_Short(_self_.safe_ptr<_1e891d758_Flag>());
}
inline jule::Str _1e4813641_What_CommonFlag_4(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	return _1e891d4d3_What(_self_.safe_ptr<_1e891d758_Flag>());
}
inline void _1e4813784_Reset_CommonFlag_4(jule::Trait<_1e48138c7_CommonFlag> _self_) {
	_1e891da44_Reset(_self_.safe_ptr<_1e891d758_Flag>());
}


static _1e307438c_comptimeRangeKindMptrData _1e307438c_comptimeRangeKind_mptr_data[] = {
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_0,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_0,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_0,
	},
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_1,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_1,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_1,
	},
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_2,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_2,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_2,
	},
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_3,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_3,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_3,
	},
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_4,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_4,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_4,
	},
	{
		._1e3073a84_ready=_1e3073a84_ready_comptimeRangeKind_5,
		._1e3073ea2_step=_1e3073ea2_step_comptimeRangeKind_5,
		._1e3074238_len=_1e3074238_len_comptimeRangeKind_5,
	},
};
static _1e30b90a2_ImporterMptrData _1e30b90a2_Importer_mptr_data[] = {
	{
		._1e30b7d81_SetModPath=_1e30b7d81_SetModPath_Importer_0,
		._1e30b8117_GetModPath=_1e30b8117_GetModPath_Importer_0,
		._1e30b8458_ModById=_1e30b8458_ModById_Importer_0,
		._1e30b8799_GetImport=_1e30b8799_GetImport_Importer_0,
		._1e30b8b95_ImportPackage=_1e30b8b95_ImportPackage_Importer_0,
		._1e30b8e4d_Imported=_1e30b8e4d_Imported_Importer_0,
	},
};
static _1e31a0243_KindMptrData _1e31a0243_Kind_mptr_data[] = {
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_0,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_0,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_1,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_1,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_2,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_2,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_3,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_3,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_4,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_4,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_5,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_5,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_6,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_6,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_7,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_7,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_8,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_8,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_9,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_9,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_10,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_10,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_11,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_11,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_12,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_12,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_13,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_13,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_14,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_14,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_15,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_15,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_16,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_16,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_17,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_17,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_18,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_18,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_19,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_19,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_20,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_20,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_21,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_21,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_22,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_22,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_23,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_23,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_24,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_24,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_25,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_25,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_26,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_26,
	},
	{
		._1e319ec9d_Str=_1e319ec9d_Str_Kind_27,
		._1e31a00de_Equal=_1e31a00de_Equal_Kind_27,
	},
};
static _1e31c0230_LookupMptrData _1e31c0230_Lookup_mptr_data[] = {
	{
		._1e31bd519_SelectPackage=_1e31bd519_SelectPackage_Lookup_0,
		._1e31bd915_FindVar=_1e31bd915_FindVar_Lookup_0,
		._1e31bdd11_FindTypeAlias=_1e31bdd11_FindTypeAlias_Lookup_0,
		._1e31be20c_FindStruct=_1e31be20c_FindStruct_Lookup_0,
		._1e31be608_FindFn=_1e31be608_FindFn_Lookup_0,
		._1e31be949_FindTrait=_1e31be949_FindTrait_Lookup_0,
		._1e31bec8a_FindEnum=_1e31bec8a_FindEnum_Lookup_0,
		._1e31c00cb_FindTypeEnum=_1e31c00cb_FindTypeEnum_Lookup_0,
	},
	{
		._1e31bd519_SelectPackage=_1e31bd519_SelectPackage_Lookup_1,
		._1e31bd915_FindVar=_1e31bd915_FindVar_Lookup_1,
		._1e31bdd11_FindTypeAlias=_1e31bdd11_FindTypeAlias_Lookup_1,
		._1e31be20c_FindStruct=_1e31be20c_FindStruct_Lookup_1,
		._1e31be608_FindFn=_1e31be608_FindFn_Lookup_1,
		._1e31be949_FindTrait=_1e31be949_FindTrait_Lookup_1,
		._1e31bec8a_FindEnum=_1e31bec8a_FindEnum_Lookup_1,
		._1e31c00cb_FindTypeEnum=_1e31c00cb_FindTypeEnum_Lookup_1,
	},
	{
		._1e31bd519_SelectPackage=_1e31bd519_SelectPackage_Lookup_2,
		._1e31bd915_FindVar=_1e31bd915_FindVar_Lookup_2,
		._1e31bdd11_FindTypeAlias=_1e31bdd11_FindTypeAlias_Lookup_2,
		._1e31be20c_FindStruct=_1e31be20c_FindStruct_Lookup_2,
		._1e31be608_FindFn=_1e31be608_FindFn_Lookup_2,
		._1e31be949_FindTrait=_1e31be949_FindTrait_Lookup_2,
		._1e31bec8a_FindEnum=_1e31bec8a_FindEnum_Lookup_2,
		._1e31c00cb_FindTypeEnum=_1e31c00cb_FindTypeEnum_Lookup_2,
	},
	{
		._1e31bd519_SelectPackage=_1e31bd519_SelectPackage_Lookup_3,
		._1e31bd915_FindVar=_1e31bd915_FindVar_Lookup_3,
		._1e31bdd11_FindTypeAlias=_1e31bdd11_FindTypeAlias_Lookup_3,
		._1e31be20c_FindStruct=_1e31be20c_FindStruct_Lookup_3,
		._1e31be608_FindFn=_1e31be608_FindFn_Lookup_3,
		._1e31be949_FindTrait=_1e31be949_FindTrait_Lookup_3,
		._1e31bec8a_FindEnum=_1e31bec8a_FindEnum_Lookup_3,
		._1e31c00cb_FindTypeEnum=_1e31c00cb_FindTypeEnum_Lookup_3,
	},
	{
		._1e31bd519_SelectPackage=_1e31bd519_SelectPackage_Lookup_4,
		._1e31bd915_FindVar=_1e31bd915_FindVar_Lookup_4,
		._1e31bdd11_FindTypeAlias=_1e31bdd11_FindTypeAlias_Lookup_4,
		._1e31be20c_FindStruct=_1e31be20c_FindStruct_Lookup_4,
		._1e31be608_FindFn=_1e31be608_FindFn_Lookup_4,
		._1e31be949_FindTrait=_1e31be949_FindTrait_Lookup_4,
		._1e31bec8a_FindEnum=_1e31bec8a_FindEnum_Lookup_4,
		._1e31c00cb_FindTypeEnum=_1e31c00cb_FindTypeEnum_Lookup_4,
	},
};
static _1e48138c7_CommonFlagMptrData _1e48138c7_CommonFlag_mptr_data[] = {
	{
		._1e47d1796_Name=_1e47d1796_Name_CommonFlag_0,
		._1e47d193e_Short=_1e47d193e_Short_CommonFlag_0,
		._1e4813641_What=_1e4813641_What_CommonFlag_0,
		._1e4813784_Reset=_1e4813784_Reset_CommonFlag_0,
	},
	{
		._1e47d1796_Name=_1e47d1796_Name_CommonFlag_1,
		._1e47d193e_Short=_1e47d193e_Short_CommonFlag_1,
		._1e4813641_What=_1e4813641_What_CommonFlag_1,
		._1e4813784_Reset=_1e4813784_Reset_CommonFlag_1,
	},
	{
		._1e47d1796_Name=_1e47d1796_Name_CommonFlag_2,
		._1e47d193e_Short=_1e47d193e_Short_CommonFlag_2,
		._1e4813641_What=_1e4813641_What_CommonFlag_2,
		._1e4813784_Reset=_1e4813784_Reset_CommonFlag_2,
	},
	{
		._1e47d1796_Name=_1e47d1796_Name_CommonFlag_3,
		._1e47d193e_Short=_1e47d193e_Short_CommonFlag_3,
		._1e4813641_What=_1e4813641_What_CommonFlag_3,
		._1e4813784_Reset=_1e4813784_Reset_CommonFlag_3,
	},
	{
		._1e47d1796_Name=_1e47d1796_Name_CommonFlag_4,
		._1e47d193e_Short=_1e47d193e_Short_CommonFlag_4,
		._1e4813641_What=_1e4813641_What_CommonFlag_4,
		._1e4813784_Reset=_1e4813784_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305ce36_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1e305ce36_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e310ed40_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1e310ed40_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3047d55_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1e3047d55_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e306d2cb_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1e306d2cb_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3040d4d_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1e3040d4d_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303acd2_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1e303acd2_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303eea1_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1e303eea1_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303612e_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1e303612e_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30406dd_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1e30406dd_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303720c_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1e303720c_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303d356_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1e303d356_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303e2e1_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1e303e2e1_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22893da56_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_22893da56_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3024a79_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1e3024a79_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309d42c_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1e309d42c_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309aa89_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1e309aa89_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3055aee_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e316ee05_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1e316ee05_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3056ced_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1e3056ced_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3054878_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1e3054878_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3052db5_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1e3052db5_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305328e_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3053a42_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3053ee8_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3055725_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1e3055725_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305534b_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30570ea_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1e30570ea_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304e2bd_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1e304e2bd_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309b6c2_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1e309b6c2_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309b9be_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1e309b9be_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30385a4_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1e30385a4_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309be75_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1e309be75_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3038eab_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1e3038eab_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309c8c1_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1e309c8c1_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309cc56_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1e309cc56_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309d806_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1e309d806_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309dbd0_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1e309dbd0_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309e186_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1e309e186_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304eb4d_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1e304eb4d_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309e560_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1e309e560_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309ebc0_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1e309ebc0_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30a0e02_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1e30a0e02_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e309d130_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1e309d130_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30a1287_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1e30a1287_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3034490_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1e3034490_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30287a3_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1e30287a3_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303a595_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1e303a595_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3037c79_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1e3037c79_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303975e_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1e303975e_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3031a53_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1e3031a53_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3031e2c_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1e3031e2c_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3032e1c_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1e3032e1c_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e303b9c5_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1e303b9c5_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3032229_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1e3032229_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3039385_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1e3039385_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30375d6_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1e30375d6_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3029177_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1e3029177_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305a032_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1e305a032_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30450c7_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1e30450c7_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e319e907_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1e319e907_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30709c6_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1e30709c6_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30721d1_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1e30721d1_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302673a_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1e302673a_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302589e_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1e302589e_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3025e98_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1e3025e98_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3025519_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1e3025519_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3026e88_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1e3026e88_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3025b9b_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1e3025b9b_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302ac39_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1e302ac39_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304e697_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1e304e697_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302cec2_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1e302cec2_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302e5cd_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1e302e5cd_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302a1cd_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1e302a1cd_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3029474_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1e3029474_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30529db_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1e30529db_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3056627_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1e3056627_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e31a06e9_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1e31a06e9_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30526de_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1e30526de_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302b8b6_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1e302b8b6_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3024d76_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1e3024d76_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302a860_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1e302a860_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302446e_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1e302446e_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302b4dc_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1e302b4dc_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302521c_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1e302521c_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3050e3a_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1e3050e3a_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304d91b_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1e304d91b_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302ecc6_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1e302ecc6_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304d08b_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1e304d08b_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3052315_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1e3052315_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30514bd_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1e30514bd_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3051d5e_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1e3051d5e_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30508a7_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1e30508a7_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3050027_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1e3050027_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3028aa0_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1e3028aa0_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302984d_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1e302984d_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3029c27_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1e3029c27_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3030766_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1e3030766_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3030dc6_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1e3030dc6_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302b113_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1e302b113_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302d7ec_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1e302d7ec_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302c4cc_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1e302c4cc_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302dca3_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1e302dca3_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e302bd6c_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1e302bd6c_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304c6b7_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1e304c6b7_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304c2dd_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1e304c2dd_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e304d388_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1e304d388_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3053668_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1e3053668_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305449e_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1e305449e_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3054b75_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1e3054b75_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3054e72_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1e3054e72_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e30516aa_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1e30516aa_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e305632a_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1e305632a_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3056924_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1e3056924_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e32952c2_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1e32952c2_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3295cea_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1e3295cea_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e32961c4_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1e32961c4_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3293ee6_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1e3293ee6_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3294414_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1e3294414_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3294c3e_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1e3294c3e_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e32955be_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1e32955be_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e3294711_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1e3294711_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e32958bb_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1e32958bb_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _2278c72a4_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1e481a3d4_OutDir = jule::Str::lit("dist", 4);
jule::Str _1e481a6c0_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1e481a989_Out = jule::Str();
jule::Str _2252e5422_Compiler = jule::Str();
jule::Str _2252e670e_CompilerPath = jule::Str();
jule::Str _2252e6962_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _2252e6be8_Shadowing = false;
jule::Bool _2252e6eb2_Transpilation = false;
jule::Bool _2252e727b_Test = false;
jule::Bool _2252e7545_RC = true;
jule::Bool _2252e791e_Safety = true;
jule::Bool _2252e7bd8_Production = false;
jule::Ptr<_2275a03ab_RangeTable> _22753ab71__L = jule::new_ptr<_2275a03ab_RangeTable>(_2275a03ab_RangeTable{._field_R16=jule::Slice<_22759e8c7_Range16>::make({_22759e8c7_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22759e8c7_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22759e8c7_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22759e8c7_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22759e8c7_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22759e8c7_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22759e8c7_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22759e8c7_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22759e8c7_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22759e8c7_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22759e8c7_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22759e8c7_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22759e8c7_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22759e8c7_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22759e8c7_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22759e8c7_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22759e8c7_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22759e8c7_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22759e8c7_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22759e8c7_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22759e8c7_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22759e8c7_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22759e8c7_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22759e8c7_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22759e8c7_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22759e8c7_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22759e8c7_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22759e8c7_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22759e8c7_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22759e8c7_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22759e8c7_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22759e8c7_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22759e8c7_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22759e8c7_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22759e8c7_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22759e8c7_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22759e8c7_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22759ee05_Range32>::make({_22759ee05_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22759ee05_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22759ee05_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22759ee05_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22759ee05_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22759ee05_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22759ee05_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22759ee05_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22759ee05_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22759ee05_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22759ee05_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22759ee05_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22759ee05_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22759ee05_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22759ee05_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22759ee05_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22759ee05_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22759ee05_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22759ee05_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22759ee05_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22759ee05_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22759ee05_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22759ee05_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22759ee05_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2275a03ab_RangeTable> _22753bb61__LU = jule::new_ptr<_2275a03ab_RangeTable>(_2275a03ab_RangeTable{._field_R16=jule::Slice<_22759e8c7_Range16>::make({_22759e8c7_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22759e8c7_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22759e8c7_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22759e8c7_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22759e8c7_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22759e8c7_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22759e8c7_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22759e8c7_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22759e8c7_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22759e8c7_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22759e8c7_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22759e8c7_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22759ee05_Range32>::make({_22759ee05_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22759ee05_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22759ee05_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22759ee05_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22759ee05_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22759ee05_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _227598be0__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _2276abc6a_first = jule::Array<jule::U8,256>({});
jule::Array<_2276ac2ed_acceptRange,16> _2276ac60b_acceptRanges = jule::Array<_2276ac2ed_acceptRange,16>({_2276ac2ed_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_2276ac2ed_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_2276ac2ed_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_2276ac2ed_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_2276ac2ed_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _2277242aa_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _2277a2d61_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _2277a4a00_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _2278c349d_PathStdlib = jule::Str();
jule::Str _2278c3701_PathExec = jule::Str();
jule::Str _2278c39a9_PathWd = jule::Str();
jule::Str _2278c3cb7_PathApi = jule::Str();
jule::Str _2278c4081_Os = jule::Str::lit("darwin", 6);
jule::Str _2278c434a_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _2288c05cb__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _2288c0b92__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_228248cbd_floatInfo _228915c92_f32info = _228248cbd_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_228248cbd_floatInfo _22891608e_f64info = _228248cbd_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _22891d9d1_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _22892083a_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _22892140c_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _22892174d_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _2289249b5_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_228928788_leftCheat> _228928bb7_leftCheats = jule::Slice<_228928788_leftCheat>::make({_228928788_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_228928788_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_228928788_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_228928788_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_228928788_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_228928788_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_228928788_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_228928788_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_228928788_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_228928788_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_228928788_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_228928788_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_228928788_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_228928788_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_228928788_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_228928788_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_228928788_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_228928788_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_228928788_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_228928788_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_228928788_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_228928788_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_228928788_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_228928788_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_228928788_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_228928788_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_228928788_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_228928788_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_228928788_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_228928788_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_228928788_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_228928788_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_228928788_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_228928788_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_228928788_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_228928788_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_228928788_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_228928788_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_228928788_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_228928788_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_228928788_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_228928788_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_228928788_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_228928788_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_228928788_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_228928788_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_228928788_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_228928788_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_228928788_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_228928788_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_228928788_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_228928788_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_228928788_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_228928788_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_228928788_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_228928788_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_228928788_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_228928788_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_228928788_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_228928788_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_228928788_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _22892ea8b_BitSize = 0LL;
jule::Str _22892ed88_SysInt = jule::Str();
jule::Str _228930152_SysUint = jule::Str();
jule::Array<jule::I32,5> _20cac7205_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _20cac7502_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _20cb6d4bb_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _20cb6dab5_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _20cb6ddb2_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1e301676e_kindPair,28> _1e3016b9d_keywords = jule::Array<_1e301676e_kindPair,28>({_1e301676e_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1e301676e_kindPair,46> _1e3016ede_basicOps = jule::Array<_1e301676e_kindPair,46>({_1e301676e_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1e301676e_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1e3092cc3_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3281c09_primNil = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1e31a06e9_TypeKind> _1e3282017_primVoid = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32822d1_primAny = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32825de_primStr = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32828a8_primBool = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3282b72_primUintptr = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3282e3b_primUint = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3283315_primInt = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32835ce_primI8 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3283898_primI16 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3283b62_primI32 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3283e2b_primI64 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32841e5_primU8 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e32844ae_primU16 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3284778_primU32 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3284beb_primU64 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e3284eb5_primF32 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1e31a06e9_TypeKind> _1e328527e_primF64 = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1e32a6019_Copy = false;
jule::Bool _1e32a6327_Deadcode = false;
jule::Bool _1e32a65e1_Append = false;
jule::Bool _1e32a68ee_Math = false;
jule::Bool _1e32a6bb8_Access = false;
jule::Bool _1e32a6e82_Inline = false;
jule::Bool _1e32a724b_Ptr = false;
jule::Bool _1e32a7625_Cond = false;
jule::Bool _1e32a78de_Str = false;
jule::Bool _1e32a7ba8_Slice = false;
jule::Bool _1e32a7e72_Assign = false;
jule::Bool _1e3d1bb17_exprEnabled = false;
jule::Bool _1e3d1be25_scopeEnabled = false;
jule::Array<jule::U64,12> _1e47752c8_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1e4698c46_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_2275a03ab_RangeTable> _227549366_Upper = _22753bb61__LU;
jule::Ptr<_2275a03ab_RangeTable> _227542d10_Letter = _22753ab71__L;



std::ostream &operator<<(std::ostream &_Stream, _22759e8c7_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22759ee05_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2275a03ab_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2276ac2ed_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _227713453_StrBuilder static__22771371c_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _227713453_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _22771bc75_Write(_227713453_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _22771c02d_WriteStr(_227713453_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_22640d7ae_StrBytes(_3027_s));;
}



inline void _22771c2d6_WriteByte(_227713453_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _22771c825_Str(_227713453_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _22771ca23_Clear(_227713453_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _22771cca9_Len(_227713453_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _22771d2c6_Buf(_227713453_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _22771d57e_SetBuf(_227713453_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _227713453_StrBuilder _Src) {
	_Stream << _22771c825_Str(&_Src);
	return _Stream;
}



inline jule::U8 _22771e1ea_index(_22771dc99_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _22771e4a3_append(_22771dc99_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _22771e739_string(_22771dc99_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _22640da78_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _22771dc99_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2263463d9_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2263463d9_DirEntry>>> static__227723551_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2263463d9_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _226316c6c_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2263463d9_DirEntry>>>(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _226317036_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_1e5640626;
			};
			jule::Str _2513_name = _226306377_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_22634a234_Status> _2617_stat = ({
				auto except = static__226346dbd_Of(_22772051a_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_2263463d9_DirEntry>>>(except.error);
				} jule::Ptr<_22634a234_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_2263463d9_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_2263463d9_DirEntry>(_2263463d9_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_1e5640626:;
	}
	_iter_end_1e5640626:;;
	_226317300_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2263463d9_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__227723782_Create(jule::Str _3922_path) {
	if ((_226317c07_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2277239b3_Remove(jule::Str _5122_path) {
	if ((_226317ec1_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _22634664d_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_226348144_File>> static__22634530b_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _199_handle = _2263163ed_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_226348144_File>>(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_226348144_File>>(jule::Any(), static__226348562_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__22634553c_Remove(jule::Str _3022_path) {
	if ((_22631828a_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2263459c1_Write(_226348144_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_226329840_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _226345d12_Read(_226348144_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22632906a_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_226348144_File> static__226348562_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_226348144_File>(_226348144_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_226348144_File>> static__22634882b_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_226348144_File>>(jule::Any(), ({
		auto except = static__22634530b_Open(_5522_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_226348144_File>>(except.error);
		} jule::Ptr<_226348144_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__226348ae5_Read(jule::Str _6720_path) {
	jule::Ptr<_22634a234_Status> _689_s = ({
		auto except = static__226346dbd_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22634a234_Status>(nullptr);});
	});;
	if ((!(_22634a894_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_22634ab2a_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_226348144_File> _7813_f = ({
		auto except = static__22634530b_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_226348144_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _2263496c8_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_22634ab2a_Size(_689_s.ptr())), static_cast<jule::I64>(_22634ab2a_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _226345d12_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__226348e8b_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_226348144_File> _9213_f = ({
		auto except = static__22634530b_Open(_9121_path, static_cast<jule::I64>(1537LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_226348144_File>(nullptr);});
	});;
	({
		auto except = _2263459c1_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2263496c8_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _2263496c8_Close(_226348144_File* _self_) {
	if ((_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _226348144_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22634a234_Status>> static__226346dbd_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_22634a234_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I64 _169_code = _226315ebe_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22634a234_Status>>(jule::Any(_22634496a_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_22634a234_Status> _2013_stat = jule::new_ptr<_22634a234_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_22634a234_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _22634a60d_IsDir(_22634a234_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _22634a894_IsReg(_22634a234_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _22634ab2a_Size(_22634a234_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _22634a234_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2278c0a3e_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2277b1ce8_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _228248cbd_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _228916534_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _228928788_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228920b7b_set(_2289292b1_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1e5b7b425:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1e5b7b623:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1e5b7b535:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1e5b7ccc8:;
					{
						goto _iter_next_1e5b7b689;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1e5b7cd50:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1e5b7b689;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1e5b7cdc7:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1e5b7b689;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1e5b7b689;
					}
				}
				_match_end_1e5b7cbb8:;
			};
			goto _iter_end_1e5b7b689;
		}
	_iter_next_1e5b7b689:;
	}
	_iter_end_1e5b7b689:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_22891b12c_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1e5b83790;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1e5b83790:;
		}
		_iter_end_1e5b83790:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _228920ebc_floatBits(_2289292b1_decimal* _self_, _228248cbd_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1e5b9264a;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1e5b893ab;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1e5b9264a;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _22892083a_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_22892083a_powtab[(*(_self_))._field_dp];
			};
			_228929921_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1e5b88de4:;
	}
	_iter_end_1e5b88de4:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _22892083a_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_22892083a_powtab[(-((*(_self_))._field_dp))];
			};
			_228929921_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1e5b8a423:;
	}
	_iter_end_1e5b8a423:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_228929921_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1e5b893ab;
	};
	_228929921_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_22892a4c1_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1e5b893ab;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1e5b9264a;
	_julec_label_1e5b893ab:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1e5b9264a:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _228929668_assign(_2289292b1_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1e5b95cd0:;
	}
	_iter_end_1e5b95cd0:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1e5b96572:;
	}
	_iter_end_1e5b96572:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_22892ab0e_trim(_self_);
}



inline void _228929921_shift(_2289292b1_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1e5b98574:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1e5b985eb:;
			{
				while ((_17628_k > 60LL)) {
					{
						_22892b659_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1e5b99245:;
				}
				_iter_end_1e5b99245:;;
				_22892b659_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1e5b98673:;
			{
				while ((_17628_k < -60LL)) {
					{
						_22892adea_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1e5b991bd:;
				}
				_iter_end_1e5b991bd:;;
				_22892adea_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1e5b98453:;
	};
}



inline void _228929bc9_roundDown(_2289292b1_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_22892ab0e_trim(_self_);
}



inline void _228929e82_roundUp(_2289292b1_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1e5b9c556:;
	}
	_iter_end_1e5b9c556:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _22892a23a_round(_2289292b1_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_22892b9cd_shouldRoundUp(_self_, _23224_nd)) {
		_228929e82_roundUp(_self_, _23224_nd);
	} else {
		_228929bc9_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _22892a4c1_roundedInteger(_2289292b1_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1e5ba034a:;
	}
	_iter_end_1e5ba034a:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1e5ba1406:;
	}
	_iter_end_1e5ba1406:;;
	if (_22892b9cd_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _2289292b1_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22893da56_Const> static__22893de96_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_22893da56_Const> static__22893e260_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_22893da56_Const> static__22893e529_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_22893da56_Const> static__22893e7e3_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_22893da56_Const> static__22893eaac_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_22893da56_Const> static__22893ecbb_NewNil(void) {
	return jule::new_ptr<_22893da56_Const>(_22893da56_Const{._field_data=nullptr});;
}



inline jule::I64 _22894042b_ReadI64(_22893da56_Const* _self_) {
	if ((!(_228942a27_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _2289406b2_ReadU64(_22893da56_Const* _self_) {
	if ((!(_228942cad_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _228940948_ReadBool(_22893da56_Const* _self_) {
	if ((!(_228943044_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _228940bce_ReadStr(_22893da56_Const* _self_) {
	if ((!(_2289432ca_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _228940e65_ReadF64(_22893da56_Const* _self_) {
	if ((!(_228943561_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _2289411eb_AsI64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e5c22631:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e5c22862:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e5c228c8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1e5c227eb:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5c221d0:;
	};
}



inline jule::U64 _228941482_AsU64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e5c232e1:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e5c24204:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e5c2426a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1e5c23104:;
			{
				return 0LLU;;
			}
		}
		_match_end_1e5c2309e:;
	};
}



inline jule::F64 _228941718_AsF64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e5c25ec5:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e5c24a73:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e5c25986:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1e5c24886:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5c24831:;
	};
}



inline void _2289419c1_SetI64(_22893da56_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _228941c79_SetU64(_22893da56_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _228942032_SetBool(_22893da56_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _2289422da_SetStr(_22893da56_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _228942593_SetF64(_22893da56_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _228942a27_IsI64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e5c29715:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c2999b:;
			{
				return false;;
			}
		}
		_match_end_1e5c29946:;
	};
}



inline jule::Bool _228942cad_IsU64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e5c2a10b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c2a35e:;
			{
				return false;;
			}
		}
		_match_end_1e5c2a309:;
	};
}



inline jule::Bool _228943044_IsBool(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e5c2aa68:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c2acbb:;
			{
				return false;;
			}
		}
		_match_end_1e5c2ac66:;
	};
}



inline jule::Bool _2289432ca_IsStr(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e5c2b4c5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c2b728:;
			{
				return false;;
			}
		}
		_match_end_1e5c2b6c3:;
	};
}



inline jule::Bool _228943561_IsF64(_22893da56_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e5c2be32:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c2c185:;
			{
				return false;;
			}
		}
		_match_end_1e5c2c130:;
	};
}



inline jule::Bool _2289437e7_IsNil(_22893da56_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _228943e79_And(_22893da56_Const* _self_, _22893da56_Const _23818_x) {
	{
		
		if ((_228943044_IsBool(_self_) && _228943044_IsBool(&_23818_x))) {
			_case_begin_1e5c31486:;
			{
				return (_228940948_ReadBool(_self_) && _228940948_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1e5c313cb:;
			{
				return false;;
			}
		}
		_match_end_1e5c30ee1:;
	};
}



inline jule::Bool _2289442ba_Or(_22893da56_Const* _self_, _22893da56_Const _24917_x) {
	{
		
		if ((_228943044_IsBool(_self_) && _228943044_IsBool(&_24917_x))) {
			_case_begin_1e5c32795:;
			{
				return (_228940948_ReadBool(_self_) || _228940948_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1e5c31e37:;
			{
				return false;;
			}
		}
		_match_end_1e5c31d8d:;
	};
}



inline jule::Bool _22894460b_Eq(_22893da56_Const* _self_, _22893da56_Const _26017_x) {
	{
		
		if (_2289437e7_IsNil(_self_)) {
			_case_begin_1e5c33ac6:;
			{
				return _2289437e7_IsNil(&_26017_x);;
			}
		}
		else if (_228943044_IsBool(_self_)) {
			_case_begin_1e5c33b4d:;
			{
				return (_228943044_IsBool(&_26017_x) && (_228940948_ReadBool(_self_) == _228940948_ReadBool(&_26017_x)));;
			}
		}
		else if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c33dc3:;
			{
				return (_2289432ca_IsStr(&_26017_x) && (_228940bce_ReadStr(_self_) == _228940bce_ReadStr(&_26017_x)));;
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c33e39:;
			{
				return (_22894042b_ReadI64(_self_) == _2289411eb_AsI64(&_26017_x));;
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c33ea0:;
			{
				return (_2289406b2_ReadU64(_self_) == _228941482_AsU64(&_26017_x));;
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c34016:;
			{
				return (_228940e65_ReadF64(_self_) == _228941718_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1e5c33213:;
			{
				return false;;
			}
		}
		_match_end_1e5c33169:;
	};
}



inline jule::Bool _22894494c_Lt(_22893da56_Const* _self_, _22893da56_Const _28717_x) {
	{
		
		if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c37789:;
			{
				return (_2289432ca_IsStr(&_28717_x) && (_228940bce_ReadStr(_self_) < _228940bce_ReadStr(&_28717_x)));;
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c37800:;
			{
				return (_22894042b_ReadI64(_self_) < _2289411eb_AsI64(&_28717_x));;
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c37877:;
			{
				return (_2289406b2_ReadU64(_self_) < _228941482_AsU64(&_28717_x));;
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c37aa8:;
			{
				return (_228940e65_ReadF64(_self_) < _228941718_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1e5c344ab:;
			{
				return false;;
			}
		}
		_match_end_1e5c343e0:;
	};
}



inline jule::Bool _228944c8d_LtEq(_22893da56_Const* _self_, _22893da56_Const _31019_x) {
	{
		
		if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c3a44b:;
			{
				return (_2289432ca_IsStr(&_31019_x) && (_228940bce_ReadStr(_self_) <= _228940bce_ReadStr(&_31019_x)));;
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c3a4b2:;
			{
				return (_22894042b_ReadI64(_self_) <= _2289411eb_AsI64(&_31019_x));;
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c3a539:;
			{
				return (_2289406b2_ReadU64(_self_) <= _228941482_AsU64(&_31019_x));;
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c3a76a:;
			{
				return (_228940e65_ReadF64(_self_) <= _228941718_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1e5c380e7:;
			{
				return false;;
			}
		}
		_match_end_1e5c3802b:;
	};
}



inline jule::Bool _2289450ce_Gt(_22893da56_Const* _self_, _22893da56_Const _33317_x) {
	{
		
		if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c3d10d:;
			{
				return (_2289432ca_IsStr(&_33317_x) && (_228940bce_ReadStr(_self_) > _228940bce_ReadStr(&_33317_x)));;
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c3d174:;
			{
				return (_22894042b_ReadI64(_self_) > _2289411eb_AsI64(&_33317_x));;
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c3d1eb:;
			{
				return (_2289406b2_ReadU64(_self_) > _228941482_AsU64(&_33317_x));;
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c3d42c:;
			{
				return (_228940e65_ReadF64(_self_) > _228941718_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1e5c3aca9:;
			{
				return false;;
			}
		}
		_match_end_1e5c3abdd:;
	};
}



inline jule::Bool _228945420_GtEq(_22893da56_Const* _self_, _22893da56_Const _35619_x) {
	{
		
		if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c40cc0:;
			{
				return (_2289432ca_IsStr(&_35619_x) && (_228940bce_ReadStr(_self_) >= _228940bce_ReadStr(&_35619_x)));;
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c40d36:;
			{
				return (_22894042b_ReadI64(_self_) >= _2289411eb_AsI64(&_35619_x));;
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c40dad:;
			{
				return (_2289406b2_ReadU64(_self_) >= _228941482_AsU64(&_35619_x));;
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c410de:;
			{
				return (_228940e65_ReadF64(_self_) >= _228941718_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1e5c3d96b:;
			{
				return false;;
			}
		}
		_match_end_1e5c3d8a0:;
	};
}



inline jule::Bool _228945761_Add(_22893da56_Const* _self_, _22893da56_Const _37722_x) {
	{
		
		if (_2289432ca_IsStr(_self_)) {
			_case_begin_1e5c43982:;
			{
				if ((!(_2289432ca_IsStr(&_37722_x)))) {
					return false;;
				};
				_2289422da_SetStr(_self_, (_228940bce_ReadStr(_self_) + _228940bce_ReadStr(&_37722_x)));
			}
		}
		else if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c439e8:;
			{
				_228942593_SetF64(_self_, static_cast<jule::F64>((_228940e65_ReadF64(_self_) + _228941718_AsF64(&_37722_x))));
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c43a70:;
			{
				if (_228943561_IsF64(&_37722_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) + _228940e65_ReadF64(&_37722_x))));
				} else {
					_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) + _2289411eb_AsI64(&_37722_x))));
				};
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c43ca1:;
			{
				if (_228943561_IsF64(&_37722_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) + _228940e65_ReadF64(&_37722_x))));
				} else {
					_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) + _228941482_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1e5c4162d:;
			{
				return false;;
			}
		}
		_match_end_1e5c41562:;
	};
	return true;;
}



inline jule::Bool _228945aa2_Sub(_22893da56_Const* _self_, _22893da56_Const _40622_x) {
	{
		
		if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c488aa:;
			{
				_228942593_SetF64(_self_, static_cast<jule::F64>((_228940e65_ReadF64(_self_) - _228941718_AsF64(&_40622_x))));
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c48932:;
			{
				if (_228943561_IsF64(&_40622_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) - _228940e65_ReadF64(&_40622_x))));
				} else {
					_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) - _2289411eb_AsI64(&_40622_x))));
				};
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c489a9:;
			{
				if (_228943561_IsF64(&_40622_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) - _228940e65_ReadF64(&_40622_x))));
				} else {
					_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) - _228941482_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1e5c4817e:;
			{
				return false;;
			}
		}
		_match_end_1e5c480b3:;
	};
	return true;;
}



inline jule::Bool _228945de3_Mul(_22893da56_Const* _self_, _22893da56_Const _43022_x) {
	{
		
		if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c4c958:;
			{
				_228942593_SetF64(_self_, static_cast<jule::F64>((_228940e65_ReadF64(_self_) * _228941718_AsF64(&_43022_x))));
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c4c9d0:;
			{
				if (_228943561_IsF64(&_43022_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) * _228940e65_ReadF64(&_43022_x))));
				} else {
					_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) * _2289411eb_AsI64(&_43022_x))));
				};
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c4ca57:;
			{
				if (_228943561_IsF64(&_43022_x)) {
					_228942593_SetF64(_self_, static_cast<jule::F64>((_228941718_AsF64(_self_) * _228940e65_ReadF64(&_43022_x))));
				} else {
					_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) * _228941482_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1e5c4c0d9:;
			{
				return false;;
			}
		}
		_match_end_1e5c4c01d:;
	};
	return true;;
}



inline jule::Bool _228946234_Div(_22893da56_Const* _self_, _22893da56_Const _45822_x) {
	{
		
		if (_228943561_IsF64(_self_)) {
			_case_begin_1e5c51a06:;
			{
				jule::F64 _46113_l = _228941718_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_228942593_SetF64(_self_, static_cast<jule::F64>(jule::div(_228940e65_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c51a7d:;
			{
				jule::F64 _46713_l = _228941718_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_228942593_SetF64(_self_, static_cast<jule::F64>(jule::div(_228941718_AsF64(_self_),_46713_l)));
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c51b05:;
			{
				jule::F64 _47313_l = _228941718_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_228942593_SetF64(_self_, static_cast<jule::F64>(jule::div(_228941718_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1e5c51187:;
			{
				return false;;
			}
		}
		_match_end_1e5c510bb:;
	};
	return true;;
}



inline jule::Bool _228946575_Mod(_22893da56_Const* _self_, _22893da56_Const _48722_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c55763:;
			{
				jule::I64 _49013_l = _2289411eb_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_2289419c1_SetI64(_self_, static_cast<jule::I64>(jule::mod(_22894042b_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c557da:;
			{
				jule::U64 _49613_l = _228941482_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_228941c79_SetU64(_self_, static_cast<jule::U64>(jule::mod(_2289406b2_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1e5c556a8:;
			{
				return false;;
			}
		}
		_match_end_1e5c5560e:;
	};
	return true;;
}



inline jule::Bool _2289468b6_BitwiseAnd(_22893da56_Const* _self_, _22893da56_Const _50929_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c5838c:;
			{
				_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) & _2289411eb_AsI64(&_50929_x))));
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c58414:;
			{
				_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) & _228941482_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1e5c582d2:;
			{
				return false;;
			}
		}
		_match_end_1e5c58238:;
	};
	return true;;
}



inline jule::Bool _228946c07_BitwiseOr(_22893da56_Const* _self_, _22893da56_Const _52328_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c5a218:;
			{
				_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) | _2289411eb_AsI64(&_52328_x))));
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c5a290:;
			{
				_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) | _228941482_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1e5c5a14c:;
			{
				return false;;
			}
		}
		_match_end_1e5c5a081:;
	};
	return true;;
}



inline jule::Bool _228947048_Xor(_22893da56_Const* _self_, _22893da56_Const _53722_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c5c094:;
			{
				_2289419c1_SetI64(_self_, static_cast<jule::I64>((_22894042b_ReadI64(_self_) ^ _2289411eb_AsI64(&_53722_x))));
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c5c11b:;
			{
				_228941c79_SetU64(_self_, static_cast<jule::U64>((_2289406b2_ReadU64(_self_) ^ _228941482_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1e5c5bec8:;
			{
				return false;;
			}
		}
		_match_end_1e5c5be0c:;
	};
	return true;;
}



inline jule::Bool _228947389_Lshift(_22893da56_Const* _self_, _22893da56_Const _55125_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c5de20:;
			{
				jule::I64 _55413_l = _2289411eb_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _228941482_AsU64(&_55125_x);;
					_2289419c1_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_228947a71_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c5de97:;
			{
				_228947a71_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1e5c5dd54:;
			{
				return false;;
			}
		}
		_match_end_1e5c5dc88:;
	};
	return true;;
}



inline jule::Bool _2289476ca_Rshift(_22893da56_Const* _self_, _22893da56_Const _57125_x) {
	{
		
		if (_228942a27_IsI64(_self_)) {
			_case_begin_1e5c611ec:;
			{
				jule::I64 _57413_l = _2289411eb_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _228941482_AsU64(&_57125_x);;
					_2289419c1_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_228947da1_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_228942cad_IsU64(_self_)) {
			_case_begin_1e5c61274:;
			{
				_228947da1_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1e5c61131:;
			{
				return false;;
			}
		}
		_match_end_1e5c61087:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _22893da56_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e300e206_Prec(_20cb74604_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e5cba3dd:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e5cba575:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1e5cba5db:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1e5cba663:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1e5cba6da:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1e5cb9c6c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1e5cb9bc3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _20cb74604_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1e3014a36_Fill(_1e301464b_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1e3014cbc_Dir(_1e301464b_File* _self_) {
	return _22772120d_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1e3015053_Name(_1e301464b_File* _self_) {
	return _227720d67_Base((*(_self_))._field_Path);;
}



inline jule::Str _1e301562a_GetRow(_1e301464b_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1e5cc06e0;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1e5cc06e0:;
	}
	_iter_end_1e5cc06e0:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1e301464b_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e301676e_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1e301ce18_pushErr(_1e301c885_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e301753e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1e301d479_lex(_1e301c885_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1e302069b_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_20cb74604_Token> _46217_token = _1e3021b86_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1e5d026de:;
	}
	_iter_end_1e5d026de:;;
}



inline jule::Str _1e301d7ba_id(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1e30125b1_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1e3012b44_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1e30125b1_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1e5d05db8:;
	}
	_iter_end_1e5d05db8:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1e301da51_resume(_1e301c885_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1e301213d_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1e5d09be1:;
						{
							_1e302069b_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1e5d09c57:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1e5d095b4:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1e5d0964c:;
				};
				goto _iter_next_1e5d05abb;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1e5d08c56;
					};
				}
			_iter_next_1e5d08c56:;
			}
			_iter_end_1e5d08c56:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1e5d05abb:;
	}
	_iter_end_1e5d05abb:;;
	return nullptr;;
}



inline void _1e301dd09_lexLineComment(_1e301c885_lex* _self_, jule::Ptr<_20cb74604_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1e5d0c474;
			};
		}
	_iter_next_1e5d0c474:;
	}
	_iter_end_1e5d0c474:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1e301e0b2_lexRangeComment(_1e301c885_lex* _self_, jule::Ptr<_20cb74604_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1e5d106b9;
			};
			if ((_54313_r == '\n')) {
				_1e302069b_newLine(_self_);
				goto _iter_next_1e5d106b9;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1e5d106b9:;
	}
	_iter_end_1e5d106b9:;;
	_1e301ce18_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1e301e403_num(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1e301b17a_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1e5d17d0e;
	};
	__jule_func_result=_1e301adb1_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1e5d17d0e;
	};
	__jule_func_result=_1e30196c8_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1e5d17d0e;
	};
	__jule_func_result=_1e301940e_commonNum(_56723_txt);
	_julec_label_1e5d17d0e:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1e301e744_escapeSeq(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1e5d1c066;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1e5d19b68:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e5d19bce:;
			{
				_59013_seq=_1e301b7b8_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1e5d19c56:;
			{
				_59013_seq=_1e301ba82_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e5d198b0:;
			{
				_59013_seq=_1e301bd4b_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1e5d1923e:;
			{
				_59013_seq=_1e301c115_byteEscape(_58929_txt);
			}
		}
		_match_end_1e5d197a0:;
	};
	_julec_label_1e5d1c066:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1e301ce18_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1e301eb40_getRune(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1e301e744_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1e301ee81_lexRune(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_227713453_StrBuilder _62913_run = static__22771371c_New(8LL);;
	_22771c2d6_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1e5d20982;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1e301ce18_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1e302069b_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1e301eb40_getRune(_self_, &(_64513_part), false);;
			_22771c02d_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_2276aec7e_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1e5d20982;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1e5d20982:;
	}
	_iter_end_1e5d20982:;;
	if ((_63213_n == 0LL)) {
		_1e301ce18_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1e301ce18_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _22771c825_Str(&_62913_run);;
}



inline jule::Str _1e3020217_lexStr(_1e301c885_lex* _self_) {
	_227713453_StrBuilder _66913_s = static__22771371c_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_22771c2d6_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1e5d25503;
			};
			if ((_67713_ch == '\n')) {
				_1e302069b_newLine(_self_);
				if ((!(_6729_raw))) {
					_1e301ce18_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1e301eb40_getRune(_self_, &(_68917_part), _6729_raw);;
			_22771c02d_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_2276aec7e_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1e5d25503;
			};
		}
	_iter_next_1e5d25503:;
	}
	_iter_end_1e5d25503:;;
	return _22771c825_Str(&_66913_s);;
}



inline void _1e302069b_newLine(_1e301c885_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1e3020c0c_isOp(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_20cb74604_Token>* _71066_t) {
	if ((!(_1e3017907_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1e3021108_lexBasicOps(_1e301c885_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_20cb74604_Token>* _72048_tok) {
	{
		auto expr = &(_1e3016ede_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5d2be00:;
		if (it != expr_end) {
			_1e301676e_kindPair *_72116_pair = it;
			{
				if (_1e3020c0c_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1e5d2be00:;
			++it;
			goto _iter_begin_1e5d2be00;
		}
		_iter_end_1e5d2be00:;
	};
	return false;;
}



inline jule::Bool _1e3021504_lexId(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_20cb74604_Token>* _72943_t) {
	jule::Str _7309_lex = _1e301d7ba_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1e3021900_lexNum(_1e301c885_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_20cb74604_Token>* _73944_t) {
	jule::Str _7409_lex = _1e301e403_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_20cb74604_Token> _1e3021b86_token(_1e301c885_lex* _self_) {
	jule::Ptr<_20cb74604_Token> _75113_t = jule::new_ptr<_20cb74604_Token>(_20cb74604_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1e301da51_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1e3021900_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1e5d33885:;
			{
				goto _match_end_1e5d31784;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1e5d32e39:;
			{
				(*(_75113_t))._field_Kind=_1e301ee81_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1e5d32ea0:;
			{
				(*(_75113_t))._field_Kind=_1e3020217_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1e3017907_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1e5d33016:;
			{
				_1e301dd09_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1e3017907_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1e5d323ab:;
			{
				_1e301e0b2_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1e3021108_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1e5d32422:;
			{
				goto _match_end_1e5d31784;
			}
		}
		else if (_1e3021504_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1e5d32488:;
			{
				{
					auto expr = &(_1e3016b9d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e5d372d4:;
					if (it != expr_end) {
						_1e301676e_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1e5d372d4;
							};
						}
						_iter_next_1e5d372d4:;
						++it;
						goto _iter_begin_1e5d372d4;
					}
					_iter_end_1e5d372d4:;
				};
			}
		}
		else {
			_case_begin_1e5d32345:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1e301ce18_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1e5d31784:;
	};
	(*(_self_))._field_column+=_2276aec7e_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e301c885_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30224c2_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302346d_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302388b_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302446e_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3024a79_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3024d76_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302521c_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3025519_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302589e_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3025b9b_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e302630b_IsUnsafe(_1e3025e98_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3025e98_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3026a9d_AutoSized(_1e302673a_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302673a_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3026e88_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3027362_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30287a3_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3028aa0_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3029177_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3029474_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302984d_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3029c27_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302a1cd_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302a860_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302ac39_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302b113_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302b4dc_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302b8b6_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302bd6c_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e302c851_Unhandled(_1e302c4cc_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1e302cad7_Ignored(_1e302c4cc_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302c4cc_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302cec2_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302d7ec_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302dca3_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302e5cd_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e302ecc6_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3030766_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3030dc6_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30311c3_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3031679_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3031a53_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3031e2c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3032229_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3032889_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3032e1c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3033d30_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3034490_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3035051_IsSelf(_1e3034bcc_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3034bcc_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3036492_IsAnon(_1e303612e_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303612e_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303720c_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30375d6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e30380dc_IsInf(_1e3037c79_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3037c79_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3038917_IsWhileNext(_1e30385a4_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30385a4_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3038eab_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3039385_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303975e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3039c15_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303a0de_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303a595_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303acd2_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303b288_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303b9c5_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303c2de_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303c795_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303d356_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303db81_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303e2e1_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303e5aa_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e303eea1_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30406dd_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3040d4d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30472a5_FieldIns> _1e3042558_instance(jule::Ptr<_1e30421d4_Field> _self_) {
	return jule::new_ptr<_1e30472a5_FieldIns>(_1e30472a5_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30421d4_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30441b4_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3047d55_StructIns> _1e3045539_instance(jule::Ptr<_1e30450c7_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1e3047d55_StructIns> _10013_ins = jule::new_ptr<_1e3047d55_StructIns>(_1e3047d55_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1e30472a5_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1e310ed40_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1e30613ce_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e612b7e8:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1e310ed40_Var>((*(_10721_s)))); };
			}
			_iter_next_1e612b7e8:;
			++it;
			goto _iter_begin_1e612b7e8;
		}
		_iter_end_1e612b7e8:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e612cd8d:;
		if (it != expr_end) {
			jule::Ptr<_1e30421d4_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1e30472a5_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1e3042558_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1e31a207a_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1e612cd8d:;
			++it;
			goto _iter_begin_1e612cd8d;
		}
		_iter_end_1e612cd8d:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1e305a032_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6131105:;
			if (it != expr_end) {
				jule::Ptr<_1e305a032_Fn> _12225_f = *it;
				{
					jule::Ptr<_1e305a032_Fn> _12321_fins = jule::new_ptr<_1e305a032_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1e305a032_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1e6131105:;
				++it;
				goto _iter_begin_1e6131105;
			}
			_iter_end_1e6131105:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1e3047d55_StructIns> _1e3045847_appendInstance(_1e30450c7_Struct* _self_, jule::Ptr<_1e3047d55_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61319b8:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _14021_ains = *it;
			{
				if (_1e30489c1_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1e61319b8:;
			++it;
			goto _iter_begin_1e61319b8;
		}
		_iter_end_1e61319b8:;
	};
	{ jule::Slice<jule::Ptr<_1e3047d55_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1e305a032_Fn> _1e3045c43_FindMethod(_1e30450c7_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6134c63:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1e6134c63:;
			++it;
			goto _iter_begin_1e6134c63;
		}
		_iter_end_1e6134c63:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e3046084_FindStatic(_1e30450c7_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6136083:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1e6136083:;
			++it;
			goto _iter_begin_1e6136083;
		}
		_iter_end_1e6136083:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30421d4_Field> _1e30463c5_FindField(_1e30450c7_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6136759:;
		if (it != expr_end) {
			jule::Ptr<_1e30421d4_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1e6136759:;
			++it;
			goto _iter_begin_1e6136759;
		}
		_iter_end_1e6136759:;
	};
	return nullptr;;
}



inline jule::Bool _1e3046716_IsImplements(_1e30450c7_Struct* _self_, jule::Ptr<_1e306d2cb_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e613775a:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1e613775a:;
			++it;
			goto _iter_begin_1e613775a;
		}
		_iter_end_1e613775a:;
	};
	return false;;
}



inline jule::Bool _1e3046a57_IsUses(_1e30450c7_Struct* _self_, jule::Ptr<_1e30450c7_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6138daa:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1e61396a2:;
				}
				_iter_end_1e61396a2:;;
			}
			_iter_next_1e6138daa:;
			++it;
			goto _iter_begin_1e6138daa;
		}
		_iter_end_1e6138daa:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30450c7_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30472a5_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304bce3_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304c2dd_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304c6b7_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304cbe5_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304d08b_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304d388_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304d91b_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304e2bd_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304e697_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e304eb4d_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3050027_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3050401_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30508a7_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3050e3a_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30514bd_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3051d5e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3052315_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30526de_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30529db_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3052db5_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305328e_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3053668_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3053a42_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3053ee8_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305449e_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3054878_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3054b75_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3054e72_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305534b_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3055725_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3055aee_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30516aa_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305632a_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3056627_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3056924_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3056ced_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30570ea_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3057ccc_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e305be8a_ParamIns> _1e30588e3_instance(jule::Ptr<_1e305855d_Param> _self_) {
	return jule::new_ptr<_1e305be8a_ParamIns>(_1e305be8a_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1e3058b79_IsSelf(_1e305855d_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1e3058e10_IsRef(_1e305855d_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305855d_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e305a4a5_IsVoid(_1e305a032_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1e305a73b_IsMethod(_1e305a032_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1e305a9c2_IsEntryPoint(_1e305a032_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1e305ac58_IsInit(_1e305a032_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1e305aede_IsAnon(_1e305a032_Fn* _self_) {
	return _1e3011aaa_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1e305b275_AnyVar(_1e305a032_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e305b50b_instanceForce(jule::Ptr<_1e305a032_Fn> _self_) {
	jule::Ptr<_1e305ce36_FnIns> _10113_ins = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1e309aa89_Scope>(), ._field_Refers=static__1e30613ce_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61507b7:;
		if (it != expr_end) {
			jule::Ptr<_1e305855d_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1e30588e3_instance(_10821_p)); };
			}
			_iter_next_1e61507b7:;
			++it;
			goto _iter_begin_1e61507b7;
		}
		_iter_end_1e61507b7:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e305b792_instance(jule::Ptr<_1e305a032_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1e305b50b_instanceForce(_self_);;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e305baa0_appendInstance(_1e305a032_Fn* _self_, jule::Ptr<_1e305ce36_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61559ba:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _14521_ains = *it;
			{
				if (_1e305e993_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1e61559ba:;
			++it;
			goto _iter_begin_1e61559ba;
		}
		_iter_end_1e61559ba:;
	};
	{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305a032_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e305c2ed_Str(_1e305be8a_ParamIns* _self_) {
	_227713453_StrBuilder _16713_s = static__22771371c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_22771c02d_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_22771c02d_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1e3058b79_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1e3058e10_IsRef((*(_self_))._field_Decl.ptr())) {
			_22771c2d6_WriteByte(&_16713_s, '&');
		};
		_22771c02d_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _22771c825_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_22771c02d_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_22771c02d_WriteStr(&_16713_s, _1e31a0ab2_Str((*(_self_))._field_Kind.ptr()));
	};
	return _22771c825_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305be8a_ParamIns _Src) {
	_Stream << _1e305c2ed_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e305d277_Str(_1e305ce36_FnIns* _self_) {
	;
	return _1e305ecd4_GetKindStr(_self_, false);;
}



inline jule::Bool _1e305d5b8_Equal(jule::Ptr<_1e305ce36_FnIns> _self_, jule::Ptr<_1e31a06e9_TypeKind> _21821_other) {
	jule::Ptr<_1e305ce36_FnIns> _2199_f = _1e31a4137_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1e305da5d_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1e305da5d_EqualFn(jule::Ptr<_1e305ce36_FnIns> _self_, jule::Ptr<_1e305ce36_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1e305a4a5_IsVoid((*(_self_))._field_Decl.ptr()) != _1e305a4a5_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1e305be8a_ParamIns>,jule::Ptr<_1e305be8a_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1e305be8a_ParamIns>,jule::Ptr<_1e305be8a_ParamIns>)>([=](jule::Ptr<_1e305be8a_ParamIns> _23927_p1, jule::Ptr<_1e305be8a_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1e3058b79_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1e3058b79_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1e3058e10_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1e3058e10_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1e31a0e03_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1e6166aca:;
	}
	_iter_end_1e6166aca:;;
	if ((!(_1e305a4a5_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1e31a0e03_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1e305dd9e_equalTrait(jule::Ptr<_1e305ce36_FnIns> _self_, jule::Ptr<_1e305ce36_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1e305da5d_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _1e305e135_Types(_1e305ce36_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1e616c295:;
			{
				return nullptr;;
			}
		}
		else if ((_1e31a4b71_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1e616c30b:;
			{
				return jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1e616c22e:;
			{
				return (*(_1e31a4b71_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1e616c163:;
	};
}



inline jule::Bool _1e305e3bb_IsBuiltin(_1e305ce36_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1e305e652_IsAnon(_1e305ce36_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1e305aede_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1e305e993_Same(_1e305ce36_FnIns* _self_, jule::Ptr<_1e305ce36_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6170078:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1e319dd13_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1e319dd13_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1e31a0e03_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1e6170078:;
			++it;
			_33613_i++;
			goto _iter_begin_1e6170078;
		}
		_iter_end_1e6170078:;
	};
	return true;;
}



inline jule::Str _1e305ecd4_GetKindStr(_1e305ce36_FnIns* _self_, jule::Bool _34825_ident) {
	_227713453_StrBuilder _34913_s = static__22771371c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_22771c02d_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_22771c02d_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_22771c2d6_WriteByte(&_34913_s, ' ');
		_22771c02d_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_22771c2d6_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6175a0c:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1e305be8a_ParamIns> *_36520_p = it;
				{
					_22771c02d_WriteStr(&_34913_s, _1e305c2ed_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_22771c2d6_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1e6175a0c:;
				++it;
				_36517_i++;
				goto _iter_begin_1e6175a0c;
			}
			_iter_end_1e6175a0c:;
		};
	};
	_22771c2d6_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_22771c2d6_WriteByte(&_34913_s, '!');
	};
	if ((!(_1e305a4a5_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_22771c2d6_WriteByte(&_34913_s, ':');
		_22771c02d_WriteStr(&_34913_s, _1e31a0ab2_Str((*(_self_))._field_Result.ptr()));
	};
	return _22771c825_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e305ce36_FnIns _Src) {
	_Stream << _1e305d277_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e30610e3_ReferenceStack> static__1e30613ce_new(void) {
	return jule::new_ptr<_1e30610e3_ReferenceStack>(_1e30610e3_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1e30617ca_Len(_1e30610e3_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1e3061b1b_At(_1e30610e3_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1e3061dc4_Push(_1e30610e3_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1e69d7291_Exist(_1e30610e3_ReferenceStack* _self_, jule::Ptr<_1e305ce36_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69d8490:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e69d8490:;
			++it;
			goto _iter_begin_1e69d8490;
		}
		_iter_end_1e69d8490:;
	};
	return false;;
}

inline jule::Bool _1e69eae75_Exist(_1e30610e3_ReferenceStack* _self_, jule::Ptr<_1e310ed40_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69ec130:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e69ec130:;
			++it;
			goto _iter_begin_1e69ec130;
		}
		_iter_end_1e69ec130:;
	};
	return false;;
}

inline jule::Bool _1e6aa831d_Exist(_1e30610e3_ReferenceStack* _self_, jule::Ptr<_1e3047d55_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6aa951c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e6aa951c:;
			++it;
			goto _iter_begin_1e6aa951c;
		}
		_iter_end_1e6aa951c:;
	};
	return false;;
}

inline jule::Bool _1e6ec46d4_Exist(_1e30610e3_ReferenceStack* _self_, jule::Ptr<_1e306d2cb_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6ec585b:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e6ec585b:;
			++it;
			goto _iter_begin_1e6ec585b;
		}
		_iter_end_1e6ec585b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30610e3_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3062600_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1e3067a56_pushErr(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_20cb74604_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e30da623_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1e30682d7_pushSuggestion(_1e30671b5_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1e30dbb52_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1e30686d3_checkCppUseDeclPath(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e303c2de_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _2277207d4_Ext((*(_34556_path)));;
	if (((!(_2277a4da7_IsValidHeaderExt(_3469_ext))) && (!(_2277a5171_IsValidCppExt(_3469_ext))))) {
		_1e3067a56_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22634a234_Status> _3539_info = ({
		auto except = static__226346dbd_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1e3067a56_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_22634a234_Status>(nullptr);});
	});;
	if (_22634a60d_IsDir(_3539_info.ptr())) {
		_1e3067a56_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30689e1_buildCppHeaderImport(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e303c2de_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_2277a4aee_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_22772051a_Join(jule::Slice<jule::Str>::make({_1e3014cbc_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1e30686d3_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227720a9d_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1e3067a56_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1e30bbeb7_ImportInfo>(_1e30bbeb7_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3068d32_buildStdImport(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e303c2de_UseDecl>* _39338_decl) {
	jule::Str _39413_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39413_path=_227704d5c_Replace(_39413_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39413_path=_22772051a_Join(jule::Slice<jule::Str>::make({_2278c349d_PathStdlib,_39413_path}));
	jule::Bool _39715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227720a9d_Abs(_39413_path);
		_39413_path = __jule_assign_result.__jule_result_arg0;
		_39715_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39715_ok))) {
		_1e3067a56_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22634a234_Status> _4049_info = ({
		auto except = static__226346dbd_Of(_39413_path);
		(except.ok()) ? (except.result) : ({{
			_1e3067a56_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_22634a234_Status>(nullptr);});
	});;
	if ((!(_22634a60d_IsDir(_4049_info.ptr())))) {
		_1e3067a56_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4149_i = (_2277008d5_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4159_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4149_i);;
	return jule::new_ptr<_1e30bbeb7_ImportInfo>(_1e30bbeb7_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39413_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4159_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1e30beddd_Package>(_1e30beddd_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3069173_buildIdentImport(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e303c2de_UseDecl>* _43241_decl) {
	jule::Str _4339_modPath = _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8117_GetModPath((*(_self_))._field_importer);;
	if ((_4339_modPath.len() == 0LL)) {
		_1e3067a56_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1e30682d7_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44013_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44013_path=_227704d5c_Replace(_44013_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44013_path=_22772051a_Join(jule::Slice<jule::Str>::make({_4339_modPath,_44013_path}));
	jule::Bool _44415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227720a9d_Abs(_44013_path);
		_44013_path = __jule_assign_result.__jule_result_arg0;
		_44415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44415_ok))) {
		_1e3067a56_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22634a234_Status> _4519_info = ({
		auto except = static__226346dbd_Of(_44013_path);
		(except.ok()) ? (except.result) : ({{
			_1e3067a56_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_22634a234_Status>(nullptr);});
	});;
	if ((!(_22634a60d_IsDir(_4519_info.ptr())))) {
		_1e3067a56_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4619_i = (_2277008d5_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4629_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_4619_i);;
	return jule::new_ptr<_1e30bbeb7_ImportInfo>(_1e30bbeb7_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44013_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_4629_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_1e30beddd_Package>(_1e30beddd_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30694b4_buildImport(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e303c2de_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_1e61b1d34:;
			{
				return _1e30689e1_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_1e61b16e6:;
			{
				return _1e3068d32_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1e61b1680:;
			{
				return _1e3069173_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1e61b15b4:;
	};
}



inline jule::Bool _1e3069805_checkDuplicateUseDecl(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e30bbeb7_ImportInfo> _4929_lpkg = _1e316a065_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>([=](jule::Ptr<_1e30bbeb7_ImportInfo> _49245_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49245_spkg))._field_Path);;
	}));;
	if ((_4929_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1e3067a56_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1e30682d7_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1e3069b68_implImportSelections(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _50444_imp, jule::Ptr<_1e303c2de_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61b609c:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e61b6c18:;
					if (it != expr_end) {
						jule::Ptr<_20cb74604_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1e61b6c18;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_1e3067a56_pushErr(_self_, &(_50616_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_1e30682d7_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1e61b6c18;
							};
						}
						_iter_next_1e61b6c18:;
						++it;
						goto _iter_begin_1e61b6c18;
					}
					_iter_end_1e61b6c18:;
				};
			}
			_iter_next_1e61b609c:;
			++it;
			goto _iter_begin_1e61b609c;
		}
		_iter_end_1e61b609c:;
	};
}



inline jule::Str _1e3069ea9_getAsLinkPath(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_2276ede77_HasPrefix(_51937_path, _2278c349d_PathStdlib)) {
		(_51937_path).mut_slice(_2278c349d_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _227704d5c_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5259_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227720a9d_Abs(_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8117_GetModPath((*(_self_))._field_importer));
		_5259_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_5259_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _227704d5c_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1e306a3c7_pushCycleError(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e30671b5_symbolBuilder>* _53335_sb, jule::Str _53355_path, _227713453_StrBuilder* _53371_message) {
	;
	jule::Str _5359_refersTo = _2277b225a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1e3069ea9_getAsLinkPath(_self_, _1e3014cbc_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1e3069ea9_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5399_buf = _22771d2c6_Buf(_53371_message);;
	_22771c02d_WriteStr(_53371_message, _2276ed680_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22771c02d_WriteStr(_53371_message, _5359_refersTo);
	_22771c2d6_WriteByte(_53371_message, '\n');
	_22771bc75_Write(_53371_message, _5399_buf);
}



inline void _1e306a7e5_pushCrossCycleError(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e30671b5_symbolBuilder>* _54640_target, jule::Ptr<_1e30bbeb7_ImportInfo>* _54665_imp, jule::Ptr<_20cb74604_Token>* _54684_errorToken) {
	_227713453_StrBuilder _54713_message = static__22771371c_New(32LL);;
	_1e306a3c7_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54713_message));
	jule::Ptr<_1e30671b5_symbolBuilder> _55113_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1e30671b5_symbolBuilder> _55213_old = _self_;;
	while (((*(_55113_owner))._field_owner != nullptr)) {
		{
			_1e306a3c7_pushCycleError(_self_, &((*(_55213_old))._field_owner), _1e3014cbc_Dir((*((*(_55213_old))._field_table))._field_File.ptr()), &(_54713_message));
			if (((*(_55113_owner))._field_owner == (*(_54640_target)))) {
				_1e306a3c7_pushCycleError(_self_, _54640_target, _1e3014cbc_Dir((*((*(_55113_owner))._field_table))._field_File.ptr()), &(_54713_message));
				goto _iter_end_1e61c02a4;
			};
			_55213_old=_55113_owner;
			_55113_owner=(*(_55113_owner))._field_owner;
		}
	_iter_next_1e61c02a4:;
	}
	_iter_end_1e61c02a4:;;
	_1e3067a56_pushErr(_self_.ptr(), _54684_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_22771c825_Str(&_54713_message), &__jule_any_type4)}));
}



inline jule::Bool _1e306abe1_checkImportCycles(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e30bbeb7_ImportInfo> _56937_imp, jule::Ptr<_1e303c2de_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _1e3014cbc_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1e3067a56_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1e3069ea9_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1e30671b5_symbolBuilder> _57913_owner = (*(_self_))._field_owner;;
	_julec_label_1e61c5908:;
	if ((_1e3014cbc_Dir((*((*(_57913_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1e306a7e5_pushCrossCycleError(_self_, &(_57913_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_57913_owner))._field_owner != nullptr)) {
		_57913_owner=(*(_57913_owner))._field_owner;
		goto _julec_label_1e61c5908;
	};
	return true;;
}



inline void _1e306b10e_checkPackageAccessibility(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e303c2de_UseDecl>* _60045_decl, jule::Str* _60062_mod, jule::Str* _60073_path) {
	if (((_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8117_GetModPath((*(_self_))._field_importer) != (*(_60062_mod))) && _227703982_Contains((*(_60073_path)), jule::Str::lit("internal", 8)))) {
		_1e3067a56_pushErr(_self_, &((*((*(_60045_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e306b50a_importPackage(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _60638_imp, jule::Ptr<_1e303c2de_UseDecl>* _60661_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_60638_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e30bbeb7_ImportInfo> _61113_port = _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8799_GetImport((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path);;
	if ((_61113_port != nullptr)) {
		(*((*(_60638_imp))))._field_Package=(*(_61113_port))._field_Package;
		(*((*(_60638_imp))))._field_Duplicate=true;
		jule::Str _61613_oldMod = _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8117_GetModPath((*(_self_))._field_importer);;
		_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b7d81_SetModPath((*(_self_))._field_importer, _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8458_ModById((*(_self_))._field_importer, (*((*(_60638_imp))))._field_ModId));
		_1e306b10e_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_61613_oldMod), &((*(_61113_port))._field_Path));
		_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b7d81_SetModPath((*(_self_))._field_importer, _61613_oldMod);
	} else {
		if ((!(_1e306abe1_checkImportCycles(_self_, (*(_60638_imp)), _60661_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62513_oldMod = _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8117_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b7d81_SetModPath((*(_self_))._field_importer, _62513_oldMod);
		});;
		if ((*((*(_60638_imp))))._field_Std) {
			_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b7d81_SetModPath((*(_self_))._field_importer, _2278c349d_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1e30224c2_Ast>> _63017_asts;;
		jule::Slice<_2277b1ce8_Log> _63027_errors;;
		({
			__jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8b95_ImportPackage((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path, (!((*((*(_60638_imp))))._field_Std)));
			_63017_asts = __jule_assign_result.__jule_result_arg0;
			_63027_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63027_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63027_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1e306b10e_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_62513_oldMod), &((*((*(_60638_imp))))._field_Path));
		{
			auto expr = &(_63017_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e61d134d:;
			if (it != expr_end) {
				jule::Ptr<_1e30224c2_Ast> _63825_ast = *it;
				{
					jule::Ptr<_1e3169ad1_SymbolTable> _63925_table = nullptr;;
					({
						__jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e31c1011_buildSymbols(&(_63825_ast), &((*(_self_))._field_importer), _self_);
						_63925_table = __jule_assign_result.__jule_result_arg0;
						_63027_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63027_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63027_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> &__jule_push_dest = (*((*((*(_60638_imp))))._field_Package))._field_Files; __jule_push_dest.push(_63925_table); };
				}
				_iter_next_1e61d134d:;
				++it;
				goto _iter_begin_1e61d134d;
			}
			_iter_end_1e61d134d:;
		};
	};
	_1e3069b68_implImportSelections(_self_.ptr(), _60638_imp, _60661_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e306b84b_importUseDecl(jule::Ptr<_1e30671b5_symbolBuilder> _self_, jule::Ptr<_1e303c2de_UseDecl>* _65338_decl) {
	jule::Ptr<_1e30bbeb7_ImportInfo> _65413_imp = _1e30694b4_buildImport(_self_, _65338_decl);;
	if ((_65413_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66013_ok = _1e3069805_checkDuplicateUseDecl(_self_.ptr(), &(_65413_imp));;
	if ((!(_66013_ok))) {
		return nullptr;;
	};
	_66013_ok=_1e306b50a_importPackage(_self_, &(_65413_imp), _65338_decl);
	{ jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65413_imp); };
	if (_66013_ok) {
		_1e30b90a2_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e30b8e4d_Imported((*(_self_))._field_importer, _65413_imp);
		return _65413_imp;;
	};
	return nullptr;;
}



inline void _1e306ba49_importUseDecls(jule::Ptr<_1e30671b5_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61d6056:;
		if (it != expr_end) {
			jule::Ptr<_1e303c2de_UseDecl> _67521_decl = *it;
			{
				_1e306b84b_importUseDecl(_self_, &(_67521_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1e61d6056;
				};
			}
			_iter_next_1e61d6056:;
			++it;
			goto _iter_begin_1e61d6056;
		}
		_iter_end_1e61d6056:;
	};
}



inline void _1e306bd02_appendNode(_1e30671b5_symbolBuilder* _self_, _1e302346d_Node* _68434_node) {
	{
		auto &_match_expr{ (*(_68434_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1e61d8366:;
			{
				{ jule::Slice<jule::Ptr<_1e3095655_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1e3066aee_buildImpl((*(_68434_node))._field_Data.cast_ptr<_1e3040d4d_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1e61d85b9:;
			{
				jule::Ptr<_1e319e907_TypeAlias> _68917_ta = _1e306303a_buildTypeAlias((*(_68434_node))._field_Data.cast_ptr<_1e303acd2_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_68917_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1e61d8630:;
			{
				jule::Ptr<_1e30450c7_Struct> _69217_srct = _1e306390e_buildStruct((*(_68434_node))._field_Data.cast_ptr<_1e303eea1_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1e30450c7_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69217_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e61d8696:;
			{
				jule::Ptr<_1e305a032_Fn> _69517_f = _1e3064602_buildFunc((*(_68434_node))._field_Data.cast_ptr<_1e303612e_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1e305a032_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_69517_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1e61d870c:;
			{
				jule::Ptr<_1e306d2cb_Trait> _69817_t = _1e3064e4e_buildTrait((*(_68434_node))._field_Data.cast_ptr<_1e30406dd_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1e306d2cb_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_69817_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e61d8e7c:;
			{
				jule::Ptr<_1e310ed40_Var> _70117_v = _1e306656b_buildVar((*(_68434_node))._field_Data.cast_ptr<_1e303720c_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70117_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1e61d8ee3:;
			{
				jule::Ptr<_1e30709c6_Enum> _70417_e = _1e3065955_buildEnum((*(_68434_node))._field_Data.cast_ptr<_1e303d356_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1e30709c6_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70417_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1e61d9059:;
			{
				jule::Ptr<_1e30721d1_TypeEnum> _70717_e = _1e30662a2_buildTypeEnum((*(_68434_node))._field_Data.cast_ptr<_1e303e2e1_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1e30721d1_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_70717_e); };
			}
		}
		else {
			_case_begin_1e61d8553:;
			{
				_1e3067a56_pushErr(_self_, &((*(_68434_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e61d7695:;
	};
}



inline void _1e306c000_appendNodes(_1e30671b5_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61d9136:;
		if (it != expr_end) {
			_1e302346d_Node _71521_node = *it;
			{
				_1e306bd02_appendNode(_self_, &(_71521_node));
			}
			_iter_next_1e61d9136:;
			++it;
			goto _iter_begin_1e61d9136;
		}
		_iter_end_1e61d9136:;
	};
}



inline void _1e306c2a8_pushDirectivePass(_1e30671b5_symbolBuilder* _self_, jule::Ptr<_1e302388b_Directive>* _72041_d) {
	if (((*((*(_72041_d))))._field_Args.len() == 0LL)) {
		_1e3067a56_pushErr(_self_, &((*((*(_72041_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72041_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_20cb74604_Token> _72513_arg = (*((*(_72041_d))))._field_Args[1LL];;
		_1e3067a56_pushErr(_self_, &(_72513_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72041_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20cb74604_Token> _7299_arg = (*((*(_72041_d))))._field_Args[0LL];;
	if (((*(_7299_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e3067a56_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7299_arg))._field_Kind[0LL] != '\"')) {
		_1e3067a56_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1e3062600_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1e3062600_Pass{._field_Token=(*((*(_72041_d))))._field_Tag, ._field_Text=(*(_7299_arg))._field_Kind.slice(1LL, ((*(_7299_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1e306c4a6_appendTopDirectives(_1e30671b5_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61e4707:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _74721_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_74721_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1e61e92cd:;
						{
							_1e306c2a8_pushDirectivePass(_self_, &(_74721_d));
						}
					}
					_match_end_1e61e9223:;
				};
			}
			_iter_next_1e61e4707:;
			++it;
			goto _iter_begin_1e61e4707;
		}
		_iter_end_1e61e4707:;
	};
}



inline void _1e306c6a4_build(jule::Ptr<_1e30671b5_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1e3169ad1_SymbolTable>(_1e3169ad1_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1e306c4a6_appendTopDirectives(_self_.ptr());
	_1e306ba49_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1e306c000_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e30671b5_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e306d694_Str(_1e306d2cb_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e306d9d5_Equal(jule::Ptr<_1e306d2cb_Trait> _self_, jule::Ptr<_1e31a06e9_TypeKind> _2521_other) {
	jule::Ptr<_1e306d2cb_Trait> _269_trt = _1e31a4654_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1e305a032_Fn> _1e306de7a_FindMethod(_1e306d2cb_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6202ccb:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1e6202ccb:;
			++it;
			goto _iter_begin_1e6202ccb;
		}
		_iter_end_1e6202ccb:;
	};
	return _1e306e60c_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1e305a032_Fn> _1e306e60c_findMethodInherit(_1e306d2cb_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e620595a:;
		if (it != expr_end) {
			jule::Ptr<_1e31a78bb_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1e620595a;
				};
				jule::Ptr<_1e306d2cb_Trait> _6017_t = _1e31a4654_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1e305a032_Fn> _6221_f2 = _1e306de7a_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1e620595a:;
			++it;
			goto _iter_begin_1e620595a;
		}
		_iter_end_1e620595a:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e306d2cb_Trait _Src) {
	_Stream << _1e306d694_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1e3070311_AutoExpr(_1e306ee59_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e306ee59_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3070d4a_Str(_1e30709c6_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e307118b_Equal(jule::Ptr<_1e30709c6_Enum> _self_, jule::Ptr<_1e31a06e9_TypeKind> _3821_other) {
	jule::Ptr<_1e30709c6_Enum> _399_enm = _1e31a35ed_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1e306ee59_EnumItem> _1e30715ba_FindItem(_1e30709c6_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e62093a9:;
		if (it != expr_end) {
			jule::Ptr<_1e306ee59_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1e62093a9:;
			++it;
			goto _iter_begin_1e62093a9;
		}
		_iter_end_1e62093a9:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30709c6_Enum _Src) {
	_Stream << _1e3070d4a_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3071b09_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3072522_Str(_1e30721d1_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e3072863_Equal(jule::Ptr<_1e30721d1_TypeEnum> _self_, jule::Ptr<_1e31a06e9_TypeKind> _8021_other) {
	jule::Ptr<_1e30721d1_TypeEnum> _819_tenm = _1e31a3884_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1e3071b09_TypeEnumItem> _1e3072c92_FindItem(_1e30721d1_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e620b532:;
		if (it != expr_end) {
			jule::Ptr<_1e3071b09_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1e620b532:;
			++it;
			goto _iter_begin_1e620b532;
		}
		_iter_end_1e620b532:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30721d1_TypeEnum _Src) {
	_Stream << _1e3072522_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e3074942_Str(_1e3074579_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1e3074c83_Equal(jule::Ptr<_1e3074579_comptimeRange> _self_, jule::Ptr<_1e31a06e9_TypeKind> _2521_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3074579_comptimeRange _Src) {
	_Stream << _1e3074942_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e3075459_Str(_1e30750d5_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1e307579a_Equal(jule::Ptr<_1e30750d5_comptimeStructField> _self_, jule::Ptr<_1e31a06e9_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3075cb7__Name(jule::Ptr<_1e30750d5_comptimeStructField> _self_, jule::Ptr<_1e3171ae9_Eval>* _3926_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _4413_constant = static__22893e7e3_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_4413_constant, &__jule_any_type19), ._field_Constant=_4413_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e30761b3__Type(jule::Ptr<_1e30750d5_comptimeStructField> _self_, jule::Ptr<_1e3171ae9_Eval>* _5230_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1e316ee05_Data> _1e30765ae__Public(jule::Ptr<_1e30750d5_comptimeStructField> _self_, jule::Ptr<_1e3171ae9_Eval>* _6032_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _6513_constant = static__22893e529_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_6513_constant, &__jule_any_type19), ._field_Constant=_6513_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3076900_subIdent(jule::Ptr<_1e30750d5_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1e6218561:;
			{
				jule::Ptr<_1e305ce36_FnIns> _7617_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _7733_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _7748_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3075cb7__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_7617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1e62185c7:;
			{
				jule::Ptr<_1e305ce36_FnIns> _8317_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _8433_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _8448_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e30765ae__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_8317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1e621863d:;
			{
				jule::Ptr<_1e305ce36_FnIns> _9017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _9133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _9148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e30761b3__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_9017_method));;
			}
		}
		else {
			_case_begin_1e62184ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6218473:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e30750d5_comptimeStructField _Src) {
	_Stream << _1e3075459_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e307711a_Str(_1e3076c85_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1e307745b_Equal(jule::Ptr<_1e3076c85_comptimeStructFields> _self_, jule::Ptr<_1e31a06e9_TypeKind> _10921_other) {
	return false;;
}



inline void _1e30778ce_ready(_1e3076c85_comptimeStructFields* _self_, jule::Ptr<_1e310ed40_Var>* _11329_keyA, jule::Ptr<_1e310ed40_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e30750d5_comptimeStructField>(), 6)})});
	};
}



inline void _1e3077cec_step(_1e3076c85_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1e310ed40_Var>* _13536_keyA, jule::Ptr<_1e310ed40_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_1e31a5424_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1e3078083_len(_1e3076c85_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3076c85_comptimeStructFields _Src) {
	_Stream << _1e307711a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e3078715_Str(_1e3078391_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1e3078a56_Equal(jule::Ptr<_1e3078391_comptimeStatic> _self_, jule::Ptr<_1e31a06e9_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3079073__Name(jule::Ptr<_1e3078391_comptimeStatic> _self_, jule::Ptr<_1e3171ae9_Eval>* _16326_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _16813_constant = static__22893e7e3_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_16813_constant, &__jule_any_type19), ._field_Constant=_16813_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e307946e__Type(jule::Ptr<_1e3078391_comptimeStatic> _self_, jule::Ptr<_1e3171ae9_Eval>* _17630_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1e316ee05_Data> _1e307986a__Public(jule::Ptr<_1e3078391_comptimeStatic> _self_, jule::Ptr<_1e3171ae9_Eval>* _18432_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _18913_constant = static__22893e529_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_18913_constant, &__jule_any_type19), ._field_Constant=_18913_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3079bab_subIdent(jule::Ptr<_1e3078391_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1e622dee4:;
			{
				jule::Ptr<_1e305ce36_FnIns> _20017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _20133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _20148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3079073__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_20017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1e622e05a:;
			{
				jule::Ptr<_1e305ce36_FnIns> _20717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _20833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _20848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e307986a__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_20717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1e622e0c1:;
			{
				jule::Ptr<_1e305ce36_FnIns> _21417_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _21533_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _21548_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e307946e__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_21417_method));;
			}
		}
		else {
			_case_begin_1e622de7d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e622de06:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3078391_comptimeStatic _Src) {
	_Stream << _1e3078715_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e307a3c6_Str(_1e307a052_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1e307a717_Equal(jule::Ptr<_1e307a052_comptimeStatics> _self_, jule::Ptr<_1e31a06e9_TypeKind> _23321_other) {
	return false;;
}



inline void _1e307ab8a_ready(_1e307a052_comptimeStatics* _self_, jule::Ptr<_1e310ed40_Var>* _23729_keyA, jule::Ptr<_1e310ed40_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e3078391_comptimeStatic>(), 8)})});
	};
}



inline void _1e307b0a8_step(_1e307a052_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1e310ed40_Var>* _25936_keyA, jule::Ptr<_1e310ed40_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_1e31a6c2d_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1e307b33e_len(_1e307a052_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e307a052_comptimeStatics _Src) {
	_Stream << _1e307a3c6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e307b9c1_Str(_1e307b64c_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1e307bd12_Equal(jule::Ptr<_1e307b64c_comptimeEnumField> _self_, jule::Ptr<_1e31a06e9_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e307c30c__Name(jule::Ptr<_1e307b64c_comptimeEnumField> _self_, jule::Ptr<_1e3171ae9_Eval>* _28726_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _29213_constant = static__22893e7e3_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_29213_constant, &__jule_any_type19), ._field_Constant=_29213_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e307c64d_subIdent(jule::Ptr<_1e307b64c_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1e623ee06:;
			{
				jule::Ptr<_1e305ce36_FnIns> _30317_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _30433_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _30448_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e307c30c__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_30317_method));;
			}
		}
		else {
			_case_begin_1e623ed90:;
			{
				return nullptr;;
			}
		}
		_match_end_1e623ed18:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e307b64c_comptimeEnumField _Src) {
	_Stream << _1e307b9c1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e307cde0_Str(_1e307c95b_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1e307d231_Equal(jule::Ptr<_1e307c95b_comptimeEnumFields> _self_, jule::Ptr<_1e31a06e9_TypeKind> _32221_other) {
	return false;;
}



inline void _1e307d62c_ready(_1e307c95b_comptimeEnumFields* _self_, jule::Ptr<_1e310ed40_Var>* _32629_keyA, jule::Ptr<_1e310ed40_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e307b64c_comptimeEnumField>(), 10)})});
	};
}



inline void _1e307da4a_step(_1e307c95b_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1e310ed40_Var>* _34836_keyA, jule::Ptr<_1e310ed40_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_1e31a5941_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1e307dcd1_len(_1e307c95b_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e307c95b_comptimeEnumFields _Src) {
	_Stream << _1e307cde0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e307e463_Str(_1e307e0de_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1e307e7a4_Equal(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Ptr<_1e31a06e9_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e307ecd2__Name(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Ptr<_1e3171ae9_Eval>* _37626_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _38113_constant = static__22893e7e3_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_38113_constant, &__jule_any_type19), ._field_Constant=_38113_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e30801cd__Type(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Ptr<_1e3171ae9_Eval>* _38930_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1e316ee05_Data> _1e30805c9__Variadic(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Ptr<_1e3171ae9_Eval>* _39734_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _40213_constant = static__22893e529_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_40213_constant, &__jule_any_type19), ._field_Constant=_40213_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e30809c5__Reference(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Ptr<_1e3171ae9_Eval>* _41035_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _41513_constant = static__22893e529_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_41513_constant, &__jule_any_type19), ._field_Constant=_41513_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3080d16_subIdent(jule::Ptr<_1e307e0de_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1e6254701:;
			{
				jule::Ptr<_1e305ce36_FnIns> _42617_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _42733_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _42748_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e307ecd2__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_42617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1e6254767:;
			{
				jule::Ptr<_1e305ce36_FnIns> _43317_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _43433_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _43448_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e30805c9__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_43317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1e62547de:;
			{
				jule::Ptr<_1e305ce36_FnIns> _44017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _44133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _44148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e30809c5__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_44017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1e6254866:;
			{
				jule::Ptr<_1e305ce36_FnIns> _44717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _44833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _44848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e30801cd__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_44717_method));;
			}
		}
		else {
			_case_begin_1e625468a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6254613:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e307e0de_comptimeParam _Src) {
	_Stream << _1e307e463_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e30816c9_Str(_1e3081355_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1e3081a1a_Equal(jule::Ptr<_1e3081355_comptimeParams> _self_, jule::Ptr<_1e31a06e9_TypeKind> _46621_other) {
	return false;;
}



inline void _1e3081e8d_ready(_1e3081355_comptimeParams* _self_, jule::Ptr<_1e310ed40_Var>* _47029_keyA, jule::Ptr<_1e310ed40_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e307e0de_comptimeParam>(), 12)})});
	};
}



inline void _1e30823ab_step(_1e3081355_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1e310ed40_Var>* _49236_keyA, jule::Ptr<_1e310ed40_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_1e31a5e5d_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1e3082642_len(_1e3081355_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3081355_comptimeParams _Src) {
	_Stream << _1e30816c9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e3082cc4_Str(_1e3082950_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1e3083115_Equal(jule::Ptr<_1e3082950_comptimeTypeInfos> _self_, jule::Ptr<_1e31a06e9_TypeKind> _51621_other) {
	return false;;
}



inline void _1e3083588_ready(_1e3082950_comptimeTypeInfos* _self_, jule::Ptr<_1e310ed40_Var>* _52029_keyA, jule::Ptr<_1e310ed40_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e308404a_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1e30839a6_step(_1e3082950_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1e310ed40_Var>* _54236_keyA, jule::Ptr<_1e310ed40_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1e3083c3c_len(_1e3082950_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3082950_comptimeTypeInfos _Src) {
	_Stream << _1e3082cc4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e30843be_Str(_1e308404a_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1e31a0ab2_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1e3084710_Equal(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e31a06e9_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3084d5e__Str(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _57025_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _57513_constant = static__22893e7e3_NewStr(_1e31a0ab2_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_57513_constant, &__jule_any_type19), ._field_Constant=_57513_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308525a__Kind(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _58330_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e30709c6_Enum> _58813_enm = _1e30bdc22_FindEnum(_1e3091453_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1e306ee59_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1e31a1a5d_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1e62725ed:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1e31a43bd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272521:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1e31a4654_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272752:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1e31a3367_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272312:;
			{
				if (_1e31b1100_IsUnsafe(_1e31a3367_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1e31a30d1_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272378:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Ref", 3));
			}
		}
		else if ((_1e31a35ed_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272de5:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1e31a48da_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272e5b:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1e31a3da1_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6272ec2:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1e31a3b1a_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6273049:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1e31a4137_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62730c1:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1e31a4b71_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e6273148:;
			{
				_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1e31a2d4a_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62731c0:;
			{
				jule::Ptr<_1e31a82c3_Prim> _61813_prim = _1e31a2d4a_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1e31ab9e1_IsAny(_61813_prim.ptr())) {
						_case_begin_1e627e1a9:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1e31ab4c4_IsBool(_61813_prim.ptr())) {
						_case_begin_1e627de56:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1e31ab75a_IsStr(_61813_prim.ptr())) {
						_case_begin_1e627dc58:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1e31aa704_IsF32(_61813_prim.ptr())) {
						_case_begin_1e627e84c:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1e31aa98a_IsF64(_61813_prim.ptr())) {
						_case_begin_1e627e8b3:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1e31a9181_IsI8(_61813_prim.ptr())) {
						_case_begin_1e627e929:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1e31a9417_IsI16(_61813_prim.ptr())) {
						_case_begin_1e627e990:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1e31a969d_IsI32(_61813_prim.ptr())) {
						_case_begin_1e627ea06:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1e31a9934_IsI64(_61813_prim.ptr())) {
						_case_begin_1e627ea6c:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1e31a9bba_IsU8(_61813_prim.ptr())) {
						_case_begin_1e627ead3:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1e31a9e51_IsU16(_61813_prim.ptr())) {
						_case_begin_1e627eb49:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1e31aa1d7_IsU32(_61813_prim.ptr())) {
						_case_begin_1e627ebb0:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1e31aa46d_IsU64(_61813_prim.ptr())) {
						_case_begin_1e627ec26:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1e31aac21_IsInt(_61813_prim.ptr())) {
						_case_begin_1e627ec8c:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1e31aaea7_IsUint(_61813_prim.ptr())) {
						_case_begin_1e627ed03:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1e31ab23d_IsUintptr(_61813_prim.ptr())) {
						_case_begin_1e627ed69:;
						{
							_58917_item=_1e30715ba_FindItem(_58813_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1e627dab0:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1e31a0ab2_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1e627da5a:;
				};
			}
		}
		else {
			_case_begin_1e62721ad:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1e31a0ab2_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1e6271d39:;
	};
	return _1e319c482_evalEnumStatic(&(_58813_enm), &(_58917_item));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3085656__Bits(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _66130_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31a82c3_Prim> _6669_prim = _1e31a2d4a_Prim((*(_self_))._field_base.ptr());;
	if ((_6669_prim == nullptr)) {
		_1e3172149_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6719_n = _228930b58_BitsizeOf((*(_6669_prim))._field_Kind);;
	if ((_6719_n == -1LL)) {
		_1e3172149_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _67613_constant = static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6719_n)));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_67613_constant, &__jule_any_type19), ._field_Constant=_67613_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3085a52__Elem(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _68430_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31b05b6_Ptr> _68913_ptr = _1e31a3367_Ptr((*(_self_))._field_base.ptr());;
	if ((_68913_ptr != nullptr)) {
		if (_1e31b1100_IsUnsafe(_68913_ptr.ptr())) {
			_1e3172149_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68913_ptr))._field_Elem));;
	};
	jule::Ptr<_1e31abcee_Sptr> _69713_sptr = _1e31a30d1_Sptr((*(_self_))._field_base.ptr());;
	if ((_69713_sptr != nullptr)) {
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69713_sptr))._field_Elem));;
	};
	jule::Ptr<_1e31ac7c2_Slc> _70113_slice = _1e31a3da1_Slc((*(_self_))._field_base.ptr());;
	if ((_70113_slice != nullptr)) {
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70113_slice))._field_Elem));;
	};
	jule::Ptr<_1e31aeae3_Arr> _70513_array = _1e31a3b1a_Arr((*(_self_))._field_base.ptr());;
	if ((_70513_array != nullptr)) {
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70513_array))._field_Elem));;
	};
	jule::Ptr<_1e30709c6_Enum> _70913_enm = _1e31a35ed_Enum((*(_self_))._field_base.ptr());;
	if ((_70913_enm != nullptr)) {
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70913_enm))._field_Kind))._field_Kind));;
	};
	_1e3172149_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3085e4d__Size(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _71730_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31aeae3_Arr> _72213_arr = _1e31a3b1a_Arr((*(_self_))._field_base.ptr());;
	if ((_72213_arr == nullptr)) {
		_1e3172149_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _72713_constant = static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72213_arr))._field_N)));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283315_primInt, ._field_Model=jule::Any(_72713_constant, &__jule_any_type19), ._field_Constant=_72713_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3086349__Key(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _73529_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31ade66_Map> _74013_m = _1e31a48da_Map((*(_self_))._field_base.ptr());;
	if ((_74013_m == nullptr)) {
		_1e3172149_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74013_m))._field_Key));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3086745__Value(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _74831_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31ade66_Map> _75313_m = _1e31a48da_Map((*(_self_))._field_base.ptr());;
	if ((_75313_m == nullptr)) {
		_1e3172149_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75313_m))._field_Val));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3086b41__Fields(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _76132_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e3047d55_StructIns> _76613_s = _1e31a43bd_Struct((*(_self_))._field_base.ptr());;
	if ((_76613_s != nullptr)) {
		return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e3076c85_comptimeStructFields>(_1e3076c85_comptimeStructFields{._field_fields=(*(_76613_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1e30709c6_Enum> _77613_enm = _1e31a35ed_Enum((*(_self_))._field_base.ptr());;
	if ((_77613_enm != nullptr)) {
		return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e307c95b_comptimeEnumFields>(_1e307c95b_comptimeEnumFields{._field_fields=(*(_77613_enm))._field_Items}), 11)}), });;
	};
	_1e3172149_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1e316ee05_Data> _1e308703c__Statics(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _79033_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e3047d55_StructIns> _79513_s = _1e31a43bd_Struct((*(_self_))._field_base.ptr());;
	if ((_79513_s == nullptr)) {
		_1e3172149_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e307a052_comptimeStatics>(_1e307a052_comptimeStatics{._field_fields=(*(_79513_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3087438__Public(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _80932_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81413_public = false;;
	{
		
		if ((_1e31a43bd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62b099e:;
			{
				_81413_public=(*((*(_1e31a43bd_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1e31a4654_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62ae97b:;
			{
				_81413_public=(*(_1e31a4654_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1e31a35ed_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62ae9e2:;
			{
				_81413_public=(*(_1e31a35ed_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1e31a3884_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1e62aea58:;
			{
				_81413_public=(*(_1e31a3884_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1e62ae618:;
			{
				_1e3172149_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e62ae4e7:;
	};
	jule::Ptr<_22893da56_Const> _82813_constant = static__22893e529_NewBool(_81413_public);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_82813_constant, &__jule_any_type19), ._field_Constant=_82813_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3087834__Binded(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _83632_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _84113_constant = static__22893e529_NewBool(_1e31a1541_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_84113_constant, &__jule_any_type19), ._field_Constant=_84113_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3087c30__Ordered(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _84929_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _85413_constant = static__22893e529_NewBool(_1e31a2311_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_85413_constant, &__jule_any_type19), ._field_Constant=_85413_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308812b__Comparable(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _86232_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _86713_constant = static__22893e529_NewBool(_1e31a1ce4_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_86713_constant, &__jule_any_type19), ._field_Constant=_86713_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3088527__Mutable(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _87529_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _88013_constant = static__22893e529_NewBool(_1e31a207a_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_88013_constant, &__jule_any_type19), ._field_Constant=_88013_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3088923__Types(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _88831_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31ad3b6_Tuple> _89313_tup = _1e31a4b71_Tup((*(_self_))._field_base.ptr());;
	if ((_89313_tup == nullptr)) {
		_1e3172149_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e3082950_comptimeTypeInfos> _89813_infos = jule::new_ptr<_1e3082950_comptimeTypeInfos>(_1e3082950_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1e308404a_comptimeTypeInfo>>::alloc(0LL, (*(_89313_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89313_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e62c3c04:;
		if (it != expr_end) {
			jule::Ptr<_1e31a06e9_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1e308404a_comptimeTypeInfo>> &__jule_push_dest = (*(_89813_infos))._field_types; __jule_push_dest.push(_1e30dc290_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1e62c3c04:;
			++it;
			goto _iter_begin_1e62c3c04;
		}
		_iter_end_1e62c3c04:;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_89813_infos, 14)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3088d1e__Exceptional(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _91137_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _91613_f = _1e31a4137_Fn((*(_self_))._field_base.ptr());;
	if ((_91613_f == nullptr)) {
		_1e3172149_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _92113_constant = static__22893e529_NewBool((((*(_91613_f))._field_Decl != nullptr) && (*((*(_91613_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_92113_constant, &__jule_any_type19), ._field_Constant=_92113_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308921a__CanNil(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _92932_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _93413_constant = static__22893e529_NewBool(_1e31a2597_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_93413_constant, &__jule_any_type19), ._field_Constant=_93413_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3089616__RC(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _94228_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _94713_constant = static__22893e529_NewBool(_1e31a282d_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_94713_constant, &__jule_any_type19), ._field_Constant=_94713_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3089a12__Result(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _95532_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _96013_f = _1e31a4137_Fn((*(_self_))._field_base.ptr());;
	if ((_96013_f == nullptr)) {
		_1e3172149_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96013_f))._field_Result == nullptr)) {
		return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_1e3282017_primVoid));;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96013_f))._field_Result));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3089e0d__Params(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Ptr<_1e3171ae9_Eval>* _97132_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _97613_f = _1e31a4137_Fn((*(_self_))._field_base.ptr());;
	if ((_97613_f == nullptr)) {
		_1e3172149_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e3081355_comptimeParams>(_1e3081355_comptimeParams{._field_params=(*(_97613_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e308a24e_subIdent(jule::Ptr<_1e308404a_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1e62d7a3c:;
			{
				jule::Ptr<_1e305ce36_FnIns> _99117_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _99233_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _99248_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3084d5e__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_99117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1e62d80c0:;
			{
				jule::Ptr<_1e305ce36_FnIns> _99817_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _99933_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _99948_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3085656__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_99817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1e62d8136:;
			{
				jule::Ptr<_1e305ce36_FnIns> _100517_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _100633_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _100648_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3085a52__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_100517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1e62d819c:;
			{
				jule::Ptr<_1e305ce36_FnIns> _101217_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _101333_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _101348_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3085e4d__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_101217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1e62d8213:;
			{
				jule::Ptr<_1e305ce36_FnIns> _101917_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _102033_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _102048_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3086349__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_101917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1e62d8323:;
			{
				jule::Ptr<_1e305ce36_FnIns> _102617_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _102733_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _102748_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3086745__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_102617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1e62d8389:;
			{
				jule::Ptr<_1e305ce36_FnIns> _103317_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _103433_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _103448_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3086b41__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_103317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1e62d8400:;
			{
				jule::Ptr<_1e305ce36_FnIns> _104017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _104133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _104148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308703c__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_104017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1e62d8466:;
			{
				jule::Ptr<_1e305ce36_FnIns> _104717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _104833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _104848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3089e0d__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_104717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1e62d84cc:;
			{
				jule::Ptr<_1e305ce36_FnIns> _105417_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _105533_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _105548_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3088923__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_105417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1e62d8543:;
			{
				jule::Ptr<_1e305ce36_FnIns> _106117_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _106233_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _106248_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3087438__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_106117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1e62d85a9:;
			{
				jule::Ptr<_1e305ce36_FnIns> _106817_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _106933_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _106948_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3087834__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_106817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1e62d8631:;
			{
				jule::Ptr<_1e305ce36_FnIns> _107517_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _107633_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _107648_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3087c30__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_107517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1e62d86a8:;
			{
				jule::Ptr<_1e305ce36_FnIns> _108217_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _108333_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _108348_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308812b__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_108217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1e62d8730:;
			{
				jule::Ptr<_1e305ce36_FnIns> _108917_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _109033_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _109048_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3088527__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_108917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1e62d87a7:;
			{
				jule::Ptr<_1e305ce36_FnIns> _109617_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _109733_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _109748_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3088d1e__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_109617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1e62d882e:;
			{
				jule::Ptr<_1e305ce36_FnIns> _110317_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _110433_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _110448_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308921a__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_110317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1e62d88a6:;
			{
				jule::Ptr<_1e305ce36_FnIns> _111017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _111133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _111148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3089616__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_111017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1e62d892d:;
			{
				jule::Ptr<_1e305ce36_FnIns> _111717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _111833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _111848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3089a12__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_111717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1e62d89a5:;
			{
				jule::Ptr<_1e305ce36_FnIns> _112417_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _112533_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _112548_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308525a__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_112417_method));;
			}
		}
		else {
			_case_begin_1e62d7ba2:;
			{
				return nullptr;;
			}
		}
		_match_end_1e62d7883:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e308404a_comptimeTypeInfo _Src) {
	_Stream << _1e30843be_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e308a8d1_Str(_1e308a55c_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1e308ac22_Equal(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e31a06e9_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e308b272__Unwrap(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _114732_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1e316ee05_Data> _1e308b66d__Type(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _115530_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1e316ee05_Data> _1e308ba69__Lvalue(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _116332_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _116813_constant = static__22893e529_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_116813_constant, &__jule_any_type19), ._field_Constant=_116813_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308be65__Mutable(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _117633_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _118113_constant = static__22893e529_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_118113_constant, &__jule_any_type19), ._field_Constant=_118113_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308c361__Const(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _118931_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _119413_constant = static__22893e529_NewBool(_1e31707c9_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_119413_constant, &__jule_any_type19), ._field_Constant=_119413_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e308c75c__Field(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Ptr<_1e3171ae9_Eval>* _120231_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e3047d55_StructIns> _120713_s = _1e31a43bd_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120713_s == nullptr)) {
		_1e3172149_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e30287a3_Expr> _121213_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_1e316ee05_Data> _121313_d = _1e318ed59_evalExpr((*(_120231_e)), _121213_arg);;
	if ((_121313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e31707c9_IsConst(_121313_d.ptr())))) {
		_1e3172149_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e31a82c3_Prim> _12219_prim = _1e31a2d4a_Prim((*(_121313_d))._field_Kind.ptr());;
	if (((_12219_prim == nullptr) || (!(_1e31ab75a_IsStr(_12219_prim.ptr()))))) {
		_1e3172149_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_121313_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12269_ident = _228940bce_ReadStr((*(_121313_d))._field_Constant.ptr());;
	jule::Ptr<_1e30472a5_FieldIns> _122713_f = _1e304920d_FindField(_120713_s.ptr(), _12269_ident);;
	if ((_122713_f == nullptr)) {
		_1e3172149_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120713_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12269_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121313_d=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_data)));
	_121313_d=_1e3188160_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121313_d), &(_120713_s), &((*(_121213_arg))._field_Token), &(_122713_f));
	return _1e3091a08_buildComptimeValue(&(_121313_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e308ca9d_subIdent(jule::Ptr<_1e308a55c_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1e63275b5:;
			{
				jule::Ptr<_1e305ce36_FnIns> _124017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _124133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _124148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308b272__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_124017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1e632763c:;
			{
				jule::Ptr<_1e305ce36_FnIns> _124717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _124833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _124848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308b66d__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_124717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1e63276b4:;
			{
				jule::Ptr<_1e305ce36_FnIns> _125417_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _125533_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _125548_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308ba69__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_125417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1e632773b:;
			{
				jule::Ptr<_1e305ce36_FnIns> _126117_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _126233_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _126248_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308be65__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_126117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1e632798e:;
			{
				jule::Ptr<_1e305ce36_FnIns> _126817_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _126933_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _126948_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308c361__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_126817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1e6327a16:;
			{
				jule::Ptr<_1e305ce36_FnIns> _127517_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _127633_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _127648_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e308c75c__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_127517_method));;
			}
		}
		else {
			_case_begin_1e632753d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e63274b6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e308a55c_comptimeValue _Src) {
	_Stream << _1e308a8d1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e308d230_Str(_1e308cdab_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1e308d571_Equal(jule::Ptr<_1e308cdab_comptimeFiles> _self_, jule::Ptr<_1e31a06e9_TypeKind> _129421_other) {
	return false;;
}



inline void _1e308d9e4_ready(_1e308cdab_comptimeFiles* _self_, jule::Ptr<_1e310ed40_Var>* _129829_keyA, jule::Ptr<_1e310ed40_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e308e4a6_comptimeFile>(), 18)})});
	};
}



inline void _1e308de12_step(_1e308cdab_comptimeFiles* _self_, jule::I64 _132023_i, jule::Ptr<_1e310ed40_Var>* _132036_keyA, jule::Ptr<_1e310ed40_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1e308e4a6_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I64 _1e308e198_len(_1e308cdab_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1e308cdab_comptimeFiles _Src) {
	_Stream << _1e308d230_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e308e82a_Str(_1e308e4a6_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1e308eb6b_Equal(jule::Ptr<_1e308e4a6_comptimeFile> _self_, jule::Ptr<_1e31a06e9_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3090188__Path(jule::Ptr<_1e308e4a6_comptimeFile> _self_, jule::Ptr<_1e3171ae9_Eval>* _134830_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _135313_constant = static__22893e7e3_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_135313_constant, &__jule_any_type19), ._field_Constant=_135313_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3090584__Name(jule::Ptr<_1e308e4a6_comptimeFile> _self_, jule::Ptr<_1e3171ae9_Eval>* _136130_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _136613_constant = static__22893e7e3_NewStr(_1e3015053_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_136613_constant, &__jule_any_type19), ._field_Constant=_136613_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3090980__Dir(jule::Ptr<_1e308e4a6_comptimeFile> _self_, jule::Ptr<_1e3171ae9_Eval>* _137429_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22893da56_Const> _137913_constant = static__22893e7e3_NewStr(_1e3014cbc_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(_137913_constant, &__jule_any_type19), ._field_Constant=_137913_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3090cc1_subIdent(jule::Ptr<_1e308e4a6_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1e63445c1:;
			{
				jule::Ptr<_1e305ce36_FnIns> _139017_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _139133_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _139148_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3090188__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_139017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1e6344637:;
			{
				jule::Ptr<_1e305ce36_FnIns> _139717_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _139833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _139848_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3090584__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_139717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1e634469d:;
			{
				jule::Ptr<_1e305ce36_FnIns> _140417_method = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>([=](jule::Ptr<_1e3171ae9_Eval>* _140533_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _140548_fc, jule::Ptr<_1e316ee05_Data>* ) mutable -> jule::Ptr<_1e316ee05_Data> {
					return _1e3090980__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _1e3091145_buildAsComptimeMethodData(&(_140417_method));;
			}
		}
		else {
			_case_begin_1e634455a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e63444d3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e308e4a6_comptimeFile _Src) {
	_Stream << _1e308e82a_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)> _1e3093a1b_readyFn(jule::Ptr<_1e3093620_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)>([=](jule::Ptr<_1e30dc955_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6353305:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1e3031679_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1e319dd13_InsGeneric> _6521_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1e6353305;
					};
					(*(_6521_generic))._field_Constraint=jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e63544d2:;
						if (it != expr_end) {
							jule::Ptr<_1e302446e_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7121_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_1e31a06e9_TypeKind> _7225_kind = _1e30e551d_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1e31c0230_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7225_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1e6357b89:;
											{
												jule::Ptr<_1e3024a79_IdentTypeDecl> _7633_itd = (*(_7029_mask))._field_Kind.cast_ptr<_1e3024a79_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7633_itd))._field_Generics.len() == 0LL) && _1e3094cd6_isBuiltinConstraint(&((*(_7633_itd))._field_Ident)))) {
													_7225_kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType((*(_7633_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7121_n);
													goto _julec_label_1e635da2a;
												};
											}
										}
										_match_end_1e6357b34:;
									};
									return false;;
								};
								_julec_label_1e635da2a:;
								{ jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> &__jule_push_dest = (*(_6521_generic))._field_Constraint; __jule_push_dest.push(_7225_kind); };
							}
							_iter_next_1e63544d2:;
							++it;
							goto _iter_begin_1e63544d2;
						}
						_iter_end_1e63544d2:;
					};
				}
				_iter_next_1e6353305:;
				++it;
				_6418_i++;
				goto _iter_begin_1e6353305;
			}
			_iter_end_1e6353305:;
		};
		return true;;
	});;
}



inline jule::Bool _1e3093ca2_readyFi(jule::Ptr<_1e3093620_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1e30ea0a0_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1e3093a1b_readyFn(_self_)));;
}



inline jule::Bool _1e3094038_readySi(jule::Ptr<_1e3093620_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1e3093a1b_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1e30942be_ready(jule::Ptr<_1e3093620_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1e3093ca2_readyFi(_self_);;
	};
	return _1e3094038_readySi(_self_);;
}



inline jule::Bool _1e3094555_check(jule::Ptr<_1e3093620_constraintChecker> _self_) {
	if ((!(_1e30942be_ready(_self_)))) {
		return false;;
	};
	_julec_label_1e63662c4:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6366978:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1e319dd13_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_1e6366978;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6367a67:;
					if (it != expr_end) {
						jule::Ptr<_1e31a06e9_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1e31a82c3_Prim> _12421_prim = _1e31a2d4a_Prim(_12325_c2.ptr());;
							if (((_12421_prim != nullptr) && _1e31a8dea_IsConstraint(_12421_prim.ptr()))) {
								if (_1e30949c8_matchConstraint(&((*(_12421_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_1e6366978;
								};
								goto _iter_next_1e6367a67;
							};
							if (_1e31a0e03_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_1e6366978;
							};
						}
						_iter_next_1e6367a67:;
						++it;
						goto _iter_begin_1e6367a67;
					}
					_iter_end_1e6367a67:;
				};
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1e6366978:;
			++it;
			_11914_i++;
			goto _iter_begin_1e6366978;
		}
		_iter_end_1e6366978:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3093620_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3095a1d_IsTraitImpl(_1e3095655_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1e3095ca4_IsStructImpl(_1e3095655_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3095655_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309aa89_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309aea7_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309b2a4_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309b6c2_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309b9be_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309be75_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309c8c1_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309cc56_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309d130_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309d42c_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309d806_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309dbd0_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309e186_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309e560_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e309ebc0_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a0808_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a0e02_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a1287_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a18e7_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a1e7a_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30a3333_SelectPackage(_1e30a2d8d_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _45832_selector) {
	return _1e30dcdea_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1e310ed40_Var> _1e30a372e_FindVar(_1e30a2d8d_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1e310ed40_Var> _47213_v = _1e316c243_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1e316c243_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1e63977de:;
	}
	_iter_end_1e63977de:;;
	return _1e30dd2e6_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e30a3b2a_FindTypeAlias(_1e30a2d8d_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1e319e907_TypeAlias> _49913_ta = _1e316c6e9_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1e316c6e9_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1e639a506:;
	}
	_iter_end_1e639a506:;;
	return _1e30dd6e2_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1e30450c7_Struct> _1e30a4026_FindStruct(_1e30a2d8d_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1e30ddadd_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1e305a032_Fn> _1e30a4422_FindFn(_1e30a2d8d_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1e30dded9_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e30a4763_FindTrait(_1e30a2d8d_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1e30de32a_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1e30709c6_Enum> _1e30a4aa4_FindEnum(_1e30a2d8d_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1e30de66b_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30a4de5_FindTypeEnum(_1e30a2d8d_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1e30de9ac_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1e30a5247_isUnsafe(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _56513_scope = _self_;;
	_julec_label_1e639e818:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1e639e818;
	};
	return false;;
}



inline jule::Bool _1e30a54cd_isRoot(_1e30a2d8d_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1e30a56cb_stop(_1e30a2d8d_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1e30a5962_stopped(_1e30a2d8d_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1e30a5be8_isDeferred(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _59813_scope = _self_;;
	_julec_label_1e63a30be:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1e63a30be;
	};
	return false;;
}



inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30a5e7e_getRoot(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1e63a4d6d:;
	}
	_iter_end_1e63a4d6d:;;
	return _61613_root;;
}



inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30a6215_getHardRoot(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1e63a607d:;
	}
	_iter_end_1e63a607d:;;
	return _62613_root;;
}



inline jule::Ptr<_1e309d42c_Label> _1e30a6556_findLabel(_1e30a2d8d_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e63a7018:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1e63a7b51:;
						{
							jule::Ptr<_1e309d42c_Label> _64021_label = _63721_st.cast_ptr<_1e309d42c_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1e63a7aeb:;
				};
			}
			_iter_next_1e63a7018:;
			++it;
			goto _iter_begin_1e63a7018;
		}
		_iter_end_1e63a7018:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30a6897_findLabelScope(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1e30a18e7_scopeLabel> _65313_label = _1e30a6bd8_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30a6bd8_findLabelAll(_1e30a2d8d_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e63a9c0d:;
		if (it != expr_end) {
			jule::Ptr<_1e30a18e7_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1e63a9c0d:;
			++it;
			goto _iter_begin_1e63a9c0d;
		}
		_iter_end_1e63a9c0d:;
	};
	return nullptr;;
}



inline jule::Bool _1e30a70d4_isDuplicatedIdent(_1e30a2d8d_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1e310ed40_Var> _6779_v = _1e30a372e_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1e319e907_TypeAlias> _6859_ta = _1e30a3b2a_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1e30a738c_checkVarDecl(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303720c_VarDecl> _69636_decl) {
	jule::Ptr<_1e310ed40_Var> _69713_v = _1e306656b_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1e30a70d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1e30a56cb_stop(_self_.ptr());
		return;;
	};
	_1e3102c89_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1e31c0230_Lookup>(_self_, 0));
	if (((!(_1e311045b_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1e310652e_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1e31c0230_Lookup>(_self_, 0));
	if (((!(_1e31101c5_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1e30ad607_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1e31061bb_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1e30a7645_checkTypeAlias(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e319e907_TypeAlias>* _72739_ta) {
	if (_1e30a70d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1e30a56cb_stop(_self_.ptr());
		return;;
	};
	_1e30ebd1b_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1e31c0230_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1e30a56cb_stop(_self_.ptr());
	};
}



inline void _1e30a78ed_checkTypeAliasDecl(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303acd2_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1e319e907_TypeAlias> _74413_ta = _1e306303a_buildTypeAlias(_74342_decl);;
	_1e30a7645_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1e309aa89_Scope> _1e30a7b84_getChild(_1e30a2d8d_scopeChecker* _self_) {
	return jule::new_ptr<_1e309aa89_Scope>(_1e309aa89_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1e30a80a2_checkChildSsc(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3034490_ScopeTree>* _75438_tree, jule::Ptr<_1e309aa89_Scope>* _75461_s, jule::Ptr<_1e30a2d8d_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1e30b4850_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1e309aa89_Scope> _1e30a849d_checkChildSc(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3034490_ScopeTree>* _75937_tree, jule::Ptr<_1e30a2d8d_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1e309aa89_Scope> _76013_s = _1e30a7b84_getChild(_self_.ptr());;
	_1e30a80a2_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1e309aa89_Scope> _1e30a87de_checkChild(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3034490_ScopeTree>* _76535_tree) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _76613_ssc = _1e30b4ad6_newChildChecker(_self_);;
	return _1e30a849d_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1e30a8a97_checkAnonScope(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3034490_ScopeTree> _77038_tree) {
	jule::Ptr<_1e309aa89_Scope> _77113_s = _1e30a87de_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1e30a8e0a_processErrorCall(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_20cb74604_Token> _77572_err) {
	if (_1e30a5be8_isDeferred(_self_)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _78013_root = _1e30a5e7e_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1e30a91b3_checkExpr(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e30287a3_Expr> _78833_expr) {
	jule::Ptr<_1e3171ae9_Eval> _78913_eval = _1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1e316ee05_Data> _79113_d = _1e318ed59_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e63c6400:;
			{
				jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1e3055aee_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1e30a8e0a_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1e63c6db2:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1e63c6a4e:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e63c69e9:;
	};
}



inline jule::Ptr<_1e309aea7_If> _1e30a9504_checkIf(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3039c15_If> _81931_i) {
	jule::Ptr<_1e309aa89_Scope> _82013_s = _1e30a87de_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1e316ee05_Data> _82213_d = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e31a82c3_Prim> _82713_prim = _1e31a2d4a_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1e31ab4c4_IsBool(_82713_prim.ptr()))))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e309aea7_If>(_1e309aea7_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1e309b2a4_Else> _1e30a9845_checkElse(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303a0de_Else> _83933_e) {
	return jule::new_ptr<_1e309b2a4_Else>(_1e309b2a4_Else{._field_Scope=_1e30a87de_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1e30a9aed_checkConditional(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303a595_Conditional> _84540_conditional) {
	jule::Ptr<_1e309b6c2_Conditional> _84613_c = jule::new_ptr<_1e309b6c2_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1e309aea7_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1e309aea7_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1e30a9504_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e63d2de0:;
		if (it != expr_end) {
			jule::Ptr<_1e3039c15_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1e309aea7_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1e30a9504_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1e63d2de0:;
			++it;
			goto _iter_begin_1e63d2de0;
		}
		_iter_end_1e63d2de0:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1e30a9845_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1e30aa0c6_checkIterScopeSsc(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1e3034490_ScopeTree> _86154_tree, jule::Ptr<_1e309aa89_Scope>* _86177_s, jule::Ptr<_1e30a2d8d_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1e30a80a2_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1e309aa89_Scope> _1e30aa57c_checkIterScopeSc(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1e3034490_ScopeTree> _86653_tree, jule::Ptr<_1e30a2d8d_scopeChecker> _86675_ssc) {
	jule::Ptr<_1e309aa89_Scope> _86713_scope = _1e30a7b84_getChild(_self_.ptr());;
	_1e30aa0c6_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1e309aa89_Scope> _1e30aa978_checkIterScope(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1e3034490_ScopeTree>* _87252_tree) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _87313_ssc = _1e30b4ad6_newChildChecker(_self_);;
	return _1e30aa57c_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1e30aac31_checkInfIter(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3037c79_Iter>* _87737_it) {
	jule::Ptr<_1e309b9be_InfIter> _87813_kind = jule::new_ptr<_1e309b9be_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1e30aa978_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1e30aaed9_checkWhileIter(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3037c79_Iter>* _88339_it) {
	jule::Ptr<_1e30385a4_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1e30385a4_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1e30aac31_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1e309be75_WhileIter> _89013_kind = jule::new_ptr<_1e309be75_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1e30aa978_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1e316ee05_Data> _89517_d = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e31a82c3_Prim> _90013_prim = _1e31a2d4a_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e31ab4c4_IsBool(_90013_prim.ptr())))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1e3038917_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1e309a094_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1e30b3486_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1e309a35d_isValidStForNextSt(&(_92321_st))))) {
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1e30ab407_checkComptimeRangeIter(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3037c79_Iter>* _93347_it, jule::Ptr<_1e309c8c1_RangeIter>* _93363_kind, jule::Ptr<_1e316ee05_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e30a70d4_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e30a70d4_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1e3074579_comptimeRange> _94713_comptime = _1e31a61e4_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1e307438c_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1e3073a84_ready((*(_94713_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _94913_i = 0LL;;
	jule::I64 _9509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94913_i < _1e307438c_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1e3074238_len((*(_94713_comptime))._field_kind)); (_94913_i)++) {
		{
			jule::Ptr<_1e30a2d8d_scopeChecker> _95217_ssc = _1e30b4ad6_newChildChecker(_self_);;
			jule::Ptr<_1e309aa89_Scope> _95317_scope = _1e30a7b84_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1e307438c_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1e3073ea2_step((*(_94713_comptime))._field_kind, _94913_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1e30a80a2_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95317_scope), &(_95217_ssc));
			if ((_9509_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1e63ed9aa;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95317_scope, &__jule_any_type22)); };
		}
	_iter_next_1e63ed9aa:;
	}
	_iter_end_1e63ed9aa:;;
}



inline void _1e30ab6b0_checkRangeIter(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3037c79_Iter>* _97239_it) {
	jule::Ptr<_1e3038eab_RangeKind> _97313_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_1e3038eab_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1e316ee05_Data> _97513_d = _1e318ea18_evalExpr1(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*(_97313_rang))._field_Expr);;
	if ((_97513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e309c8c1_RangeIter> _98013_kind = jule::new_ptr<_1e309c8c1_RangeIter>(_1e309c8c1_RangeIter{._field_Expr=_97513_d, });;
	_1e3160203_rangeChecker _98413_rc = _1e3160203_rangeChecker{._field_sc=_self_, ._field_rang=_97313_rang, ._field_Kind=_98013_kind, ._field_d=_97513_d};;
	jule::Bool _9909_ok = _1e3162216_check(&_98413_rc);;
	if ((!(_9909_ok))) {
		return;;
	};
	jule::Ptr<_1e3074579_comptimeRange> _99513_comptimeRange = _1e31a61e4_comptimeRange((*(_97513_d))._field_Kind.ptr());;
	if ((_99513_comptimeRange != nullptr)) {
		_1e30ab407_checkComptimeRangeIter(_self_, _97239_it, &(_98013_kind), &(_97513_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98013_kind, &__jule_any_type40)); };
	jule::Ptr<_1e30a2d8d_scopeChecker> _100313_ssc = _1e30b4ad6_newChildChecker(_self_);;
	jule::Ptr<_1e309aa89_Scope> _100413_scope = _1e30a7b84_getChild(_self_.ptr());;
	if (((*(_98013_kind))._field_KeyA != nullptr)) {
		if (((!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e30a70d4_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyA))._field_Ident)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyA))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyA); };
	};
	if (((*(_98013_kind))._field_KeyB != nullptr)) {
		if (((!(_1e30dedb9_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e30a70d4_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyB))._field_Ident)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyB))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyB); };
	};
	_1e30aa0c6_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98013_kind)), (*((*(_97239_it))))._field_Scope, &(_100413_scope), _100313_ssc);
	(*(_98013_kind))._field_Scope=_100413_scope;
}



inline void _1e30ab968_checkIter(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3037c79_Iter> _102833_it) {
	if (_1e30380dc_IsInf(_102833_it.ptr())) {
		_1e30aac31_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1e64143d8:;
			{
				_1e30aaed9_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1e6415142:;
			{
				_1e30ab6b0_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_1e6414b69:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1e6414b14:;
	};
}



inline jule::Bool _1e30abca9_checkValidContLabel(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _104513_scope = _self_;;
	_julec_label_1e6416363:;
	if (((*(_104513_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104513_scope))._field_parent != nullptr)) {
		_104513_scope=(*(_104513_scope))._field_parent;
		goto _julec_label_1e6416363;
	};
	return false;;
}



inline jule::Bool _1e30ac0ea_checkValidBreakLabel(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _106113_scope = _self_;;
	_julec_label_1e6418299:;
	if (((*(_106113_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106913_mtch = static_cast<jule::Uintptr>((*(((_1e30a0808_Case*)((*(_106113_scope))._field_cse))))._field_Owner);;
		if ((_106913_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106113_scope))._field_parent != nullptr)) {
		_106113_scope=(*(_106113_scope))._field_parent;
		goto _julec_label_1e6418299;
	};
	return false;;
}



inline jule::Ptr<_1e309cc56_ContSt> _1e30ac43b_checkContValidScope(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303975e_ContSt> _108339_c) {
	if (_1e30a5be8_isDeferred(_self_)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1e309cc56_ContSt>();;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _109313_scope = _self_;;
	_julec_label_1e641c37a:;
	{
		
		if (((((*(_109313_scope))._field_it == 0LLU) && ((*(_109313_scope))._field_parent != nullptr)) && ((*(_109313_scope))._field_owner == nullptr))) {
			_case_begin_1e641caea:;
			{
				_109313_scope=(*(_109313_scope))._field_parent;
				goto _julec_label_1e641c37a;
			}
		}
		else if (((*(_109313_scope))._field_it != 0LLU)) {
			_case_begin_1e641cb72:;
			{
				return jule::new_ptr<_1e309cc56_ContSt>(_1e309cc56_ContSt{._field_It=(*(_109313_scope))._field_it});;
			}
		}
		_match_end_1e641ca40:;
	};
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e30ac6e4_checkCont(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303975e_ContSt> _110729_c) {
	jule::Ptr<_1e309cc56_ContSt> _110813_cont = _1e30ac43b_checkContValidScope(_self_, _110729_c);;
	if ((_110813_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_1e30a18e7_scopeLabel> _111417_label = _1e30980a3_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111417_label == nullptr)) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111417_label))._field_used=true;
		if ((((*(_111417_label))._field_pos + 1LL) >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112713_i = ((*(_111417_label))._field_pos + 1LL);;
		if ((_112713_i >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113121_st = (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts[_112713_i];;
			{
				auto &_match_expr{ _113121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1e6428155:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1e6427d9c:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1e6427e13:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1e6427d36:;
					{
						_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1e6427cd1:;
			};
		};
	};
	if (((*(_110813_cont))._field_It != 0LLU)) {
		if ((!(_1e30abca9_checkValidContLabel(_self_, (*(_110813_cont))._field_It)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110813_cont, &__jule_any_type41)); };
}



inline void _1e30ac99c_checkLabel(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3031a53_LabelSt> _115434_l) {
	if ((_1e30a6556_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1e309d42c_Label> _116013_label = jule::new_ptr<_1e309d42c_Label>(_1e309d42c_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1e30a18e7_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1e30a18e7_scopeLabel>(_1e30a18e7_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1e30acc55_pushGoto(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3031e2c_GotoSt> _117332_gt) {
	jule::Ptr<_1e309d806_GotoSt> _117413_st = jule::new_ptr<_1e309d806_GotoSt>(_1e309d806_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1e30a1e7a_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1e30a1e7a_scopeGoto>(_1e30a1e7a_scopeGoto{._field_st=_117413_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1e30ad00d_checkPostfix(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032e1c_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e30287a3_Expr> _119313_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1e316ee05_Data> _119413_d = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), _119313_expr);;
	if ((_119413_d == nullptr)) {
		return;;
	};
	_1e3099cca_checkAssign(&((*(_self_))._field_s), &(_119413_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_1e31a3367_Ptr((*(_119413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e31b05b6_Ptr> _120217_ptr = _1e31a3367_Ptr((*(_119413_d))._field_Kind.ptr());;
		if (_1e31b1100_IsUnsafe(_120217_ptr.ptr())) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1e31a2d4a_Prim((*(_119413_d))._field_Kind.ptr()) == nullptr) || (!(_22893d57d_IsNum((*(_1e31a2d4a_Prim((*(_119413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1e309dbd0_Postfix>(_1e309dbd0_Postfix{._field_Expr=(*(_119413_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1e30ad34e_isNewAssignIdent(_1e30a2d8d_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_1e30117e1_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_1e316cae5_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _1e30ad607_removeInteriorMutRisk(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e316ee05_Data>* _123346_d) {
	jule::Ptr<_1e3047d55_StructIns> _12349_s = _1e31a43bd_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_12349_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _12389_root = _1e30a6215_getHardRoot(_self_);;
	if (((*((*(_12389_root))._field_owner))._field_Owner != _12349_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _1e30adaad_checkStructureAssignOp(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3047d55_StructIns>* _124747_s, jule::Ptr<_1e3032e1c_AssignSt>* _124767_a, jule::Ptr<_1e316ee05_Data>* _124786_r) {
	jule::Ptr<_1e305ce36_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e64427ac:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1e644447e:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1e64444e5:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1e6442dea:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1e6442e61:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1e6442ec7:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1e644303d:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1e64445d3:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1e6444649:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1e64446b0:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1e6442d84:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1e30481c9_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1e6442d2e:;
	};
	if ((_125017_overload == nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1e30481c9_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1e305be8a_ParamIns> _128213_p = (*(_125017_overload))._field_Params[1LL];;
	return _1e30e809d_checkAssignType((*(_self_))._field_s, (*((*(_128213_p))._field_Decl))._field_Reference, &((*(_128213_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _1e30add66_checkSingleAssign(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032e1c_AssignSt>* _128642_a) {
	jule::Ptr<_1e316ee05_Data> _128717_l = nullptr;;
	if ((!(_1e30117e1_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1e30287a3_Expr> _129017_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), _129017_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e3171ae9_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_1e30e76eb_evalp((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_1e30a5247_isUnsafe(_self_);
	jule::Ptr<_1e316ee05_Data> _130413_r = _1e318ed59_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130413_r == nullptr)) {
		return;;
	};
	_1e30ad607_removeInteriorMutRisk(_self_, &(_130413_r));
	if ((_128717_l == nullptr)) {
		if (_1e31a1a5d_Void((*(_130413_r))._field_Kind.ptr())) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1e3099cca_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130413_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1e31a4b71_Tup((*(_130413_r))._field_Kind.ptr()) != nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e304bce3_OperandExprModel> _132813_lm = jule::new_ptr<_1e304bce3_OperandExprModel>(_1e304bce3_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_1e304bce3_OperandExprModel> _133213_rm = jule::new_ptr<_1e304bce3_OperandExprModel>(_1e304bce3_OperandExprModel{._field_Kind=(*(_130413_r))._field_Kind, ._field_Model=(*(_130413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1e309e186_Assign>(_1e309e186_Assign{._field_L=_132813_lm, ._field_R=_133213_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1e3047d55_StructIns> _133917_strct = _1e31a43bd_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133917_strct != nullptr)) {
			_1e30adaad_checkStructureAssignOp(_self_, &(_133917_strct), _128642_a, &(_130413_r));
			return;;
		};
		jule::U64 _134413_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_1e30b4e5a_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_1e31922ac_binaryEval _134617_solver = static__1e3192bd6_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130413_r=_1e3197ee9_solveExplicit(&_134617_solver, &(_128717_l), &(_130413_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134413_id;
		if ((_130413_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1e3153a10_assignTypeChecker _135513_checker = _1e3153a10_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130413_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_1e3154c75_check(&_135513_checker)) {
		(*(_133213_rm))._field_Model=(*(_130413_r))._field_Model;
		(*(_132813_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _1e30ae3e9_processEndPartOfMultiAssign(_1e30a2d8d_scopeChecker* _self_, jule::Ptr<_1e309e560_MultiAssign>* _136751_st, jule::Ptr<_1e3032e1c_AssignSt>* _136814_a, jule::Ptr<_1e3032889_AssignLeft>* _136833_lexpr, jule::Ptr<_1e316ee05_Data>* _136858_l, jule::Ptr<_1e316ee05_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _1e30117e1_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_1e31a1a5d_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _1e30ad34e_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_1e30a70d4_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1e30a56cb_stop(_self_);
			return;;
		};
		if (_1e30117e1_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e310ed40_Var> _138917_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_1e31061bb_checkVarValue((*(_self_))._field_s, &(_138917_v));
		(*(_138917_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*((*(_138917_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138917_v))._field_Mutable, ._field_Reference=(*(_138917_v))._field_Reference, ._field_Lvalue=(!((*(_138917_v))._field_Constant)), ._field_Model=jule::Any(_138917_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138917_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138917_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1e3099cca_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1e30eb5ac_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_1e3153a10_assignTypeChecker _143213_checker = _1e3153a10_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_1e3154c75_check(&_143213_checker);
	{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _1e30ae6a2_checkMultiAssign(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032e1c_AssignSt>* _144241_a) {
	jule::Ptr<_1e316ee05_Data> _144313_rd = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144313_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _144713_right = _1e3098e2d_getDatasFromTupleData(&(_144313_rd));;
	if ((_144713_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144713_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1e646e674:;
				{
					jule::Ptr<_1e304eb4d_IndexingExprModel> _145121_iem = (*(_144713_right[0LL]))._field_Model.cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45);;
					if ((_1e31a48da_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144713_right=jule::Slice<jule::Ptr<_1e316ee05_Data>>::make({jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*(_1e31a48da_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, })});
					};
				}
			}
			_match_end_1e646e5ca:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144713_right.len())) {
			_case_begin_1e646dde3:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144713_right.len())) {
			_case_begin_1e646de59:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e646eaa3:;
	};
	jule::Ptr<_1e309e560_MultiAssign> _147013_st = jule::new_ptr<_1e309e560_MultiAssign>(_1e309e560_MultiAssign{._field_R=(*(_144313_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e64740b3:;
		if (it != expr_end) {
			jule::I64 _147313_i = it - expr->begin();
			{
				jule::Ptr<_1e3032889_AssignLeft> _147417_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_1e316ee05_Data> _147521_l = nullptr;;
				if (((!(_1e30117e1_IsIgnoreIdent((*(_147417_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_1e30ad34e_isNewAssignIdent(_self_.ptr(), (*(_147417_lexpr))._field_Ident)))))) {
					_147521_l=_1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*(_147417_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_1e64740b3;
					};
				};
				jule::Ptr<_1e316ee05_Data> _148317_r = _144713_right[_147313_i];;
				_1e30ad607_removeInteriorMutRisk(_self_, &(_148317_r));
				_1e30ae3e9_processEndPartOfMultiAssign(_self_.ptr(), &(_147013_st), _144241_a, &(_147417_lexpr), &(_147521_l), &(_148317_r));
			}
			_iter_next_1e64740b3:;
			++it;
			_147313_i++;
			goto _iter_begin_1e64740b3;
		}
		_iter_end_1e64740b3:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147013_st, &__jule_any_type46)); };
}



inline void _1e30ae95a_singleDeclAssign(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032e1c_AssignSt>* _149041_a) {
	jule::Ptr<_1e3032889_AssignLeft> _149113_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_1e30a70d4_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149113_lexpr))._field_Ident))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149113_lexpr))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1e30a56cb_stop(_self_.ptr());
		return;;
	};
	if (_1e30117e1_IsIgnoreIdent((*(_149113_lexpr))._field_Ident)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e316ee05_Data> _150213_r = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150213_r == nullptr)) {
		return;;
	};
	_1e30ad607_removeInteriorMutRisk(_self_, &(_150213_r));
	jule::Ptr<_1e310ed40_Var> _151013_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149113_lexpr))._field_Token, ._field_Ident=(*(_149113_lexpr))._field_Ident, ._field_Mutable=(*(_149113_lexpr))._field_Mutable, ._field_Reference=(*(_149113_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150213_r}), });;
	_1e31061bb_checkVarValue((*(_self_))._field_s, &(_151013_v));
	{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151013_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151013_v, &__jule_any_type8)); };
}



inline void _1e30aec13_checkAssignSt(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032e1c_AssignSt> _152637_a) {
	{
		
		if (_1e3013a24_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_1e6482203:;
			{
				_1e30ad00d_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_1e6480d6c:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_1e30ae95a_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_1e30add66_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_1e6480d06:;
			{
				_1e30ae6a2_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_1e6480c3a:;
	};
}



inline jule::Ptr<_1e309aa89_Scope> _1e30b010e_checkCaseScope(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e30a0808_Case>* _154135_c, jule::Ptr<_1e3034490_ScopeTree>* _154150_tree) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _154213_ssc = _1e30b4ad6_newChildChecker(_self_);;
	(*(_154213_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _1e30a849d_checkChildSc(_self_, _154150_tree, &(_154213_ssc));;
}



inline jule::Ptr<_1e30a0808_Case> _1e30b0670_checkCase(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e309ebc0_Match> _154733_m, jule::I64 _154744_i, jule::Ptr<_1e303b288_Case> _154756_c, jule::Ptr<_1e316ee05_Data> _154775_expr) {
	jule::Ptr<_1e30a0808_Case> _154813_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154813_case))._field_Exprs=jule::Slice<jule::Ptr<_1e316ee05_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155013_constMatched = false;;
	jule::Ptr<_1e3171ae9_Eval> _155113_eval = _1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6487967:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _155221_e = *it;
			{
				jule::Ptr<_1e316ee05_Data> _155317_d = _1e318e045_evalExprKind(_155113_eval, (*(_155221_e))._field_Kind);;
				if ((_155317_d == nullptr)) {
					goto _iter_next_1e6487967;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
					if ((_1e3098b64_countMatchType(&(_154733_m), &((*(_155317_d))._field_Kind)) > 1LL)) {
						_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_155317_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154775_expr))._field_Kind))._field_Generic) {
						_155013_constMatched=(_155013_constMatched || _1e31a0e03_Equal((*(_154775_expr))._field_Kind, (*(_155317_d))._field_Kind));
					} else {
						if ((_1e31a3884_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_1e30e8554_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_1e306d2cb_Trait> _156825_trt = _1e31a4654_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_156825_trt != nullptr)) {
								_1e30e8554_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_1e6487967;
				} else if ((*(_154733_m))._field_Comptime) {
					if ((!(_1e31707c9_IsConst(_155317_d.ptr())))) {
						_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155013_constMatched=(_155013_constMatched || _228940948_ReadBool((*(_155317_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155317_d))._field_Decl) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1e6487967;
				};
				{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
				_1e3153a10_assignTypeChecker _159117_checker = _1e3153a10_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155317_d, ._field_errorToken=(*(_155221_e))._field_Token};;
				_1e3154c75_check(&_159117_checker);
			}
			_iter_next_1e6487967:;
			++it;
			goto _iter_begin_1e6487967;
		}
		_iter_end_1e6487967:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155013_constMatched)) {
		(*(_154813_case))._field_Scope=_1e30b010e_checkCaseScope(_self_, &(_154813_case), &((*(_154756_c))._field_Scope));
	};
	return _154813_case;;
}



inline void _1e30b0a8d_checkCases(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303b9c5_MatchCase>* _160535_m, jule::Ptr<_1e309ebc0_Match> _160554_rm, jule::Ptr<_1e316ee05_Data> _160570_expr) {
	(*(_160554_rm))._field_Cases=jule::Slice<jule::Ptr<_1e30a0808_Case>>::alloc(0LL, (*((*(_160535_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6495601:;
		if (it != expr_end) {
			jule::I64 _160713_i = it - expr->begin();
			{
				jule::Ptr<_1e30a0808_Case> _160817_case = jule::new_ptr<_1e30a0808_Case>(_1e30a0808_Case{._field_Owner=_160554_rm, });;
				if ((_160713_i > 0LL)) {
					(*((*(_160554_rm))._field_Cases[(_160713_i - 1LL)]))._field_Next=_160817_case;
				};
				{ jule::Slice<jule::Ptr<_1e30a0808_Case>> &__jule_push_dest = (*(_160554_rm))._field_Cases; __jule_push_dest.push(_160817_case); };
			}
			_iter_next_1e6495601:;
			++it;
			_160713_i++;
			goto _iter_begin_1e6495601;
		}
		_iter_end_1e6495601:;
	};
	if ((((*(_160554_rm))._field_Default != nullptr) && ((*((*(_160535_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160554_rm))._field_Cases[((*(_160554_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160554_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6496008:;
		if (it != expr_end) {
			jule::I64 _162114_i = it - expr->begin();
			jule::Ptr<_1e303b288_Case> _162121_c = *it;
			{
				_1e30b0670_checkCase(_self_, _160554_rm, _162114_i, _162121_c, _160570_expr);
			}
			_iter_next_1e6496008:;
			++it;
			_162114_i++;
			goto _iter_begin_1e6496008;
		}
		_iter_end_1e6496008:;
	};
}



inline jule::Ptr<_1e30a0808_Case> _1e30b0e89_checkDefault(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e309ebc0_Match> _162636_m, jule::Ptr<_1e303a0de_Else> _162651_d) {
	jule::Ptr<_1e30a0808_Case> _162713_def = jule::new_ptr<_1e30a0808_Case>(_1e30a0808_Case{._field_Owner=_162636_m, });;
	(*(_162713_def))._field_Scope=_1e30b010e_checkCaseScope(_self_, &(_162713_def), &((*(_162651_d))._field_Scope));
	return _162713_def;;
}



inline void _1e30b12ec_checkComptimePanic(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_20cb74604_Token> _163438_callToken, jule::Ptr<_1e309aa89_Scope>* _163458_s) {
	if (((*((*(_163458_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16389_stmt = (*((*(_163458_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16389_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e649c4e8:;
			{
				jule::Ptr<_1e316ee05_Data> _164113_d = _16389_stmt.cast_ptr<_1e316ee05_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164113_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1e649d2da:;
						{
							jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel> _164417_m = (*(_164113_d))._field_Model.cast_ptr<_1e3053a42_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164417_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1e649e2b9:;
									{
										jule::Ptr<_22893da56_Const> _164721_c = (*(_164417_m))._field_Expr.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
										if (_2289432ca_IsStr(_164721_c.ptr())) {
											if ((_163438_callToken == nullptr)) {
												jule::Ptr<_1e30a2d8d_scopeChecker> _165033_root = _1e30a6215_getHardRoot(_self_);;
												_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_165033_root))._field_calledFrom, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_228940bce_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											} else {
												_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _163438_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_228940bce_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											};
											_1e30a56cb_stop(_self_.ptr());
										};
									}
								}
								_match_end_1e649e264:;
							};
						}
					}
					_match_end_1e649d285:;
				};
			}
		}
		_match_end_1e649c493:;
	};
}



inline void _1e30b1660_processConstMatch(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e309ebc0_Match>* _166242_tm, jule::Ptr<_1e303b9c5_MatchCase>* _166259_m) {
	{
		auto expr = &((*((*(_166242_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e649cedd:;
		if (it != expr_end) {
			jule::I64 _166314_i = it - expr->begin();
			jule::Ptr<_1e30a0808_Case> _166321_c = *it;
			{
				if (((*(_166321_c))._field_Scope != nullptr)) {
					jule::Ptr<_20cb74604_Token> _166525_token = nullptr;;
					if (((!((*((*(_166242_tm))))._field_TypeMatch)) && ((*((*(_166321_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166525_token=(*((*((*((*(_166259_m))))._field_Cases[_166314_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1e30b12ec_checkComptimePanic(_self_, _166525_token, &((*(_166321_c))._field_Scope));
					(*((*(_166242_tm))))._field_Default=_166321_c;
					(*((*(_166242_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1e649cedd:;
			++it;
			_166314_i++;
			goto _iter_begin_1e649cedd;
		}
		_iter_end_1e649cedd:;
	};
	if (((*((*(_166259_m))))._field_Default != nullptr)) {
		(*((*(_166242_tm))))._field_Cases=nullptr;
		(*((*(_166242_tm))))._field_Default=_1e30b0e89_checkDefault(_self_, (*(_166242_tm)), (*((*(_166259_m))))._field_Default);
		if (((*((*(_166242_tm))))._field_Default != nullptr)) {
			jule::Ptr<_20cb74604_Token> _167925_token = nullptr;;
			if ((!((*((*(_166242_tm))))._field_TypeMatch))) {
				_167925_token=(*((*((*((*(_166259_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1e30b12ec_checkComptimePanic(_self_, _167925_token, &((*((*((*(_166242_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166242_tm))))._field_Cases=nullptr;
	};
}



inline void _1e30b1918_checkTypeMatch(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303b9c5_MatchCase>* _169139_m) {
	jule::Ptr<_1e316ee05_Data> _169213_d = _1e318e6c7_eval(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*((*(_169139_m))))._field_Expr);;
	if ((_169213_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169213_d))._field_Kind))._field_Generic)) && (!(((((_1e31a2d4a_Prim((*(_169213_d))._field_Kind.ptr()) != nullptr) && _1e31ab9e1_IsAny(_1e31a2d4a_Prim((*(_169213_d))._field_Kind.ptr()).ptr())) || (_1e31a4654_Trait((*(_169213_d))._field_Kind.ptr()) != nullptr)) || (_1e31a3884_TypeEnum((*(_169213_d))._field_Kind.ptr()) != nullptr)))))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169139_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e309ebc0_Match> _170313_tm = jule::new_ptr<_1e309ebc0_Match>(_1e309ebc0_Match{._field_Expr=_169213_d, ._field_TypeMatch=true, });;
	(*(_170313_tm))._field_Comptime=(*((*((*(_170313_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170313_tm))._field_Comptime)) && ((*((*(_169139_m))))._field_Default != nullptr))) {
		(*(_170313_tm))._field_Default=_1e30b0e89_checkDefault(_self_, _170313_tm, (*((*(_169139_m))))._field_Default);
	};
	_1e30b0a8d_checkCases(_self_, _169139_m, _170313_tm, _169213_d);
	if ((*(_170313_tm))._field_Comptime) {
		_1e30b1660_processConstMatch(_self_, &(_170313_tm), _169139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170313_tm, &__jule_any_type47)); };
}



inline void _1e30b1bc1_checkCommonMatch(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303b9c5_MatchCase>* _172441_m) {
	jule::Ptr<_1e316ee05_Data> _172517_d = nullptr;;
	if (((*((*(_172441_m))))._field_Expr == nullptr)) {
		_172517_d=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Constant=static__22893e529_NewBool(true)});
		(*(_172517_d))._field_Model=jule::Any((*(_172517_d))._field_Constant, &__jule_any_type19);
	} else {
		_172517_d=_1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*((*(_172441_m))))._field_Expr);
		if ((_172517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e309ebc0_Match> _173913_mc = jule::new_ptr<_1e309ebc0_Match>(_1e309ebc0_Match{._field_Expr=_172517_d, ._field_Comptime=(((((*((*(_172441_m))))._field_Expr != nullptr) && _1e31707c9_IsConst(_172517_d.ptr())) && _228943044_IsBool((*(_172517_d))._field_Constant.ptr())) && _228940948_ReadBool((*(_172517_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173913_mc, &__jule_any_type47)); };
	if (((!((*(_173913_mc))._field_Comptime)) && ((*((*(_172441_m))))._field_Default != nullptr))) {
		(*(_173913_mc))._field_Default=_1e30b0e89_checkDefault(_self_, _173913_mc, (*((*(_172441_m))))._field_Default);
	};
	_1e30b0a8d_checkCases(_self_, _172441_m, _173913_mc, _172517_d);
	if ((*(_173913_mc))._field_Comptime) {
		_1e30b1660_processConstMatch(_self_, &(_173913_mc), _172441_m);
	};
}



inline void _1e30b1e79_checkMatch(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e303b9c5_MatchCase> _176234_m) {
	if ((*(_176234_m))._field_TypeMatch) {
		_1e30b1918_checkTypeMatch(_self_, &(_176234_m));
		return;;
	};
	_1e30b1bc1_checkCommonMatch(_self_, &(_176234_m));
}



inline void _1e30b2232_checkFall(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3032229_FallSt> _177029_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1e30a5be8_isDeferred(_self_))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1e30a0808_Case* _177813_case = ((_1e30a0808_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177813_case))._field_Owner))._field_Comptime) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177813_case))._field_Next == nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1e30a0e02_FallSt>(_1e30a0e02_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177813_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1e309d130_BreakSt> _1e30b2573_checkBreakWithLabel(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3039385_BreakSt> _179339_b) {
	jule::Ptr<_1e309d130_BreakSt> _179413_brk = _1e30b28b4_checkPlainBreak(_self_, _179339_b);;
	if ((_179413_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179413_brk))._field_It=0LLU;
	(*(_179413_brk))._field_Mtch=0LLU;
	jule::Ptr<_1e30a18e7_scopeLabel> _180413_label = _1e30980a3_findLabelParent(&((*((*(_179339_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180413_label == nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180413_label))._field_used=true;
	if ((((*(_180413_label))._field_pos + 1LL) >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18179_i = ((*(_180413_label))._field_pos + 1LL);;
	if ((_18179_i >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182117_st = (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts[_18179_i];;
		{
			auto &_match_expr{ _182117_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1e64cd79e:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1e64cd4e6:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1e64cd55c:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1e64cd5c3:;
				{
					(*(_179413_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1e309ebc0_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1e64cd480:;
				{
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1e64cd42a:;
		};
	};
	if (((*(_179413_brk))._field_It != 0LLU)) {
		if ((!(_1e30ac0ea_checkValidBreakLabel(_self_, (*(_179413_brk))._field_It)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179413_brk))._field_Mtch != 0LLU)) {
		if ((!(_1e30ac0ea_checkValidBreakLabel(_self_, (*(_179413_brk))._field_Mtch)))) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179413_brk;;
}



inline jule::Ptr<_1e309d130_BreakSt> _1e30b28b4_checkPlainBreak(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3039385_BreakSt> _185135_b) {
	if (_1e30a5be8_isDeferred(_self_)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _185713_scope = _self_;;
	_julec_label_1e64d5e7c:;
	{
		
		if ((((((*(_185713_scope))._field_it == 0LLU) && ((*(_185713_scope))._field_cse == 0LLU)) && ((*(_185713_scope))._field_parent != nullptr)) && ((*(_185713_scope))._field_owner == nullptr))) {
			_case_begin_1e64d6235:;
			{
				_185713_scope=(*(_185713_scope))._field_parent;
				goto _julec_label_1e64d5e7c;
			}
		}
		else if (((*(_185713_scope))._field_it != 0LLU)) {
			_case_begin_1e64d62ac:;
			{
				return jule::new_ptr<_1e309d130_BreakSt>(_1e309d130_BreakSt{._field_It=(*(_185713_scope))._field_it, });;
			}
		}
		else if (((*(_185713_scope))._field_cse != 0LLU)) {
			_case_begin_1e64d6334:;
			{
				return jule::new_ptr<_1e309d130_BreakSt>(_1e309d130_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1e30a0808_Case*)((*(_185713_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1e64d6169:;
	};
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e30b2b6c_checkBreak(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3039385_BreakSt> _187330_b) {
	if (((*(_187330_b))._field_Label != nullptr)) {
		jule::Ptr<_1e309d130_BreakSt> _187517_brk = _1e30b2573_checkBreakWithLabel(_self_, _187330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187517_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1e309d130_BreakSt> _188013_brk = _1e30b28b4_checkPlainBreak(_self_, _187330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188013_brk, &__jule_any_type49)); };
}



inline void _1e30b2e25_checkRet(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e30375d6_RetSt> _188432_r) {
	if (_1e30a5be8_isDeferred(_self_)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_188432_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e30a1287_RetSt> _188913_rt = jule::new_ptr<_1e30a1287_RetSt>(_1e30a1287_RetSt{._field_Func=(*(_1e30a5e7e_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188913_rt, &__jule_any_type50)); };
	jule::Ptr<_1e3162964_retTypeChecker> _189413_rtc = jule::new_ptr<_1e3162964_retTypeChecker>(_1e3162964_retTypeChecker{._field_sc=_self_, ._field_f=(*(_188913_rt))._field_Func, ._field_errorToken=(*(_188432_r))._field_Token, });;
	jule::Bool _18999_ok = _1e3163679_check(_189413_rtc.ptr(), &((*(_188432_r))._field_Expr));;
	if ((!(_18999_ok))) {
		return;;
	};
	if (((*(_188432_r))._field_Expr != nullptr)) {
		(*(_188913_rt))._field_Expr=(*(_189413_rtc))._field_model;
	};
}



inline void _1e30b31cd_checkUseExpr(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3029177_UseExpr> _190932_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1e30a5be8_isDeferred(_self_)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1e30b3486_checkNode(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Any* _192534_node) {
	{
		auto &_match_expr{ (*(_192534_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1e64e5eae:;
			{
				_1e30a8a97_checkAnonScope(_self_, (*(_192534_node)).cast_ptr<_1e3034490_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e64e6520:;
			{
				_1e30a738c_checkVarDecl(_self_, (*(_192534_node)).cast_ptr<_1e303720c_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1e64e62de:;
			{
				_1e30a78ed_checkTypeAliasDecl(_self_, (*(_192534_node)).cast_ptr<_1e303acd2_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1e64e6795:;
			{
				_1e30a91b3_checkExpr(_self_, (*(_192534_node)).cast_ptr<_1e30287a3_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e64e680b:;
			{
				_1e30a9aed_checkConditional(_self_, (*(_192534_node)).cast_ptr<_1e303a595_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1e64e6872:;
			{
				_1e30ab968_checkIter(_self_, (*(_192534_node)).cast_ptr<_1e3037c79_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1e64e68d8:;
			{
				_1e30ac6e4_checkCont(_self_, (*(_192534_node)).cast_ptr<_1e303975e_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1e64e694e:;
			{
				_1e30ac99c_checkLabel(_self_, (*(_192534_node)).cast_ptr<_1e3031a53_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1e64e69b5:;
			{
				_1e30acc55_pushGoto(_self_, (*(_192534_node)).cast_ptr<_1e3031e2c_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1e64e6a2b:;
			{
				_1e30aec13_checkAssignSt(_self_, (*(_192534_node)).cast_ptr<_1e3032e1c_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1e64e6a92:;
			{
				_1e30b1e79_checkMatch(_self_, (*(_192534_node)).cast_ptr<_1e303b9c5_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1e64e6b08:;
			{
				_1e30b2232_checkFall(_self_, (*(_192534_node)).cast_ptr<_1e3032229_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1e64e6b6e:;
			{
				_1e30b2b6c_checkBreak(_self_, (*(_192534_node)).cast_ptr<_1e3039385_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1e64e6bd5:;
			{
				_1e30b2e25_checkRet(_self_, (*(_192534_node)).cast_ptr<_1e30375d6_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1e64e6c4b:;
			{
				_1e30b31cd_checkUseExpr(_self_, (*(_192534_node)).cast_ptr<_1e3029177_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1e64e6157:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1e64e6102:;
	};
}



inline void _1e30b3684_checkResult(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	_1e3033d30_Stmt _196313_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196313_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1e6500a46:;
			{
				jule::Ptr<_1e3029177_UseExpr> _196617_ue = _196313_stmt._field_Data.cast_ptr<_1e3029177_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1e316ee05_Data> _196717_d = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), (*(_196617_ue))._field_Expr);;
				if ((_196717_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196717_d, &__jule_any_type24)); };
				jule::Ptr<_1e3162964_retTypeChecker> _197217_rtc = jule::new_ptr<_1e3162964_retTypeChecker>(_1e3162964_retTypeChecker{._field_sc=_self_, ._field_types=_1e305e135_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196617_ue))._field_Expr))._field_Token, });;
				_1e3163679_check(_197217_rtc.ptr(), &((*(_196617_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1e65001e9:;
			{
				jule::Ptr<_1e30287a3_Expr> _197917_expr = _196313_stmt._field_Data.cast_ptr<_1e30287a3_Expr>(&__jule_any_type52);;
				jule::Ptr<_1e316ee05_Data> _198017_d = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, jule::Trait<_1e31c0230_Lookup>(_self_, 0)), _197917_expr);;
				if ((_198017_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198017_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1e6505a6d:;
						{
							jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> _198621_m = (*(_198017_d))._field_Model.cast_ptr<_1e3055aee_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1e30a8e0a_processErrorCall(_self_, &(_198621_m), (*(_197917_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198017_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1e6505c8d:;
						{
							return;;
						}
					}
					_match_end_1e6505c38:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1e6500260:;
			{
				_1e30b3486_checkNode(_self_, &(_196313_stmt._field_Data));
			}
		}
		else {
			_case_begin_1e6500183:;
			{
				_1e30b3486_checkNode(_self_, &(_196313_stmt._field_Data));
				return;;
			}
		}
		_match_end_1e64edb43:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1e30b3882_checkTree(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _200813_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200813_n)--;
	};
	for (; ((*(_self_))._field_i < _200813_n); ((*(_self_))._field_i)++) {
		{
			_1e3033d30_Stmt _201617_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1e30b3486_checkNode(_self_, &(_201617_stmt._field_Data));
			if (_1e30a5962_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1e6509665:;
	}
	_iter_end_1e6509665:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1e30b3684_checkResult(_self_);
	};
}



inline void _1e30b3be5_checkGoto(_1e30a2d8d_scopeChecker* _self_, jule::Ptr<_1e30a1e7a_scopeGoto>* _202733_gt, jule::Ptr<_1e30a18e7_scopeLabel>* _202754_label) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _202813_gtsc = (*((*(_202733_gt))))._field_scope;;
	while ((((*(_202813_gtsc))._field_childIndex - 1LL) > (*((*((*(_202754_label))))._field_scope))._field_childIndex)) {
		{
			_202813_gtsc=(*(_202813_gtsc))._field_parent;
		}
	_iter_next_1e650c877:;
	}
	_iter_end_1e650c877:;;
	jule::I64 _203313_n = 0LL;;
	if (((*(_202813_gtsc))._field_scope == (*((*((*(_202754_label))))._field_scope))._field_scope)) {
		if (((*((*(_202733_gt))))._field_pos > (*((*(_202754_label))))._field_pos)) {
			return;;
		};
		_203313_n=(*((*(_202733_gt))))._field_pos;
	};
	jule::I64 _204613_i = ((*((*(_202754_label))))._field_pos - 1LL);;
	if ((_203313_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6510a12:;
			if (it != expr_end) {
				jule::I64 _204917_j = it - expr->begin();
				jule::Any _204920_stmt = *it;
				{
					if (_1e30987e0_stmtIsGotoScope(&(_204920_stmt), &((*(_202813_gtsc))._field_scope))) {
						_203313_n=_204917_j;
						goto _iter_end_1e6510a12;
					};
				}
				_iter_next_1e6510a12:;
				++it;
				_204917_j++;
				goto _iter_begin_1e6510a12;
			}
			_iter_end_1e6510a12:;
		};
	};
	for (; (_204613_i >= _203313_n); (_204613_i)--) {
		{
			jule::Any _205917_stmt = (*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts[_204613_i];;
			if (_1e309a627_stmtIsDef(&(_205917_stmt))) {
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202733_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202733_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1e6511b01:;
	}
	_iter_end_1e6511b01:;;
}



inline void _1e30b3de3_checkGotos(_1e30a2d8d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6512c78:;
		if (it != expr_end) {
			jule::Ptr<_1e30a1e7a_scopeGoto> _206821_gt = *it;
			{
				jule::Ptr<_1e30a18e7_scopeLabel> _206917_label = _1e30a6bd8_findLabelAll(_self_, &((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_206917_label == nullptr)) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_206821_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1e6512c78;
				};
				(*((*(_206821_gt))._field_st))._field_Label=(*(_206917_label))._field_label;
				(*(_206917_label))._field_used=true;
				_1e30b3be5_checkGoto(_self_, &(_206821_gt), &(_206917_label));
			}
			_iter_next_1e6512c78:;
			++it;
			goto _iter_begin_1e6512c78;
		}
		_iter_end_1e6512c78:;
	};
}



inline void _1e30b40e1_checkLabels(_1e30a2d8d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65157d6:;
		if (it != expr_end) {
			jule::Ptr<_1e30a18e7_scopeLabel> _208116_l = *it;
			{
				if ((!((*(_208116_l))._field_used))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_208116_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208116_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1e65157d6:;
			++it;
			goto _iter_begin_1e65157d6;
		}
		_iter_end_1e65157d6:;
	};
}



inline void _1e30b42de_checkVars(_1e30a2d8d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6517b29:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _208916_v = *it;
			{
				if (((((!((*(_208916_v))._field_Used)) && (!((*(_208916_v))._field_Constant))) && (!(_1e30117e1_IsIgnoreIdent((*(_208916_v))._field_Ident)))) && (!(_1e3011aaa_IsAnonIdent((*(_208916_v))._field_Ident))))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_208916_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_208916_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1e6517b29:;
			++it;
			goto _iter_begin_1e6517b29;
		}
		_iter_end_1e6517b29:;
	};
}



inline void _1e30b44dc_checkAliases(_1e30a2d8d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65196db:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> _209716_a = *it;
			{
				if ((((!((*(_209716_a))._field_Used)) && (!(_1e30117e1_IsIgnoreIdent((*(_209716_a))._field_Ident)))) && (!(_1e3011aaa_IsAnonIdent((*(_209716_a))._field_Ident))))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_209716_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209716_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1e65196db:;
			++it;
			goto _iter_begin_1e65196db;
		}
		_iter_end_1e65196db:;
	};
}



inline void _1e30b4850_check(jule::Ptr<_1e30a2d8d_scopeChecker> _self_, jule::Ptr<_1e3034490_ScopeTree>* _210530_tree, jule::Ptr<_1e309aa89_Scope>* _210553_s) {
	(*((*(_210553_s))))._field_Deferred=(*((*(_210530_tree))))._field_Deferred;
	(*((*(_210553_s))))._field_Unsafety=(*((*(_210530_tree))))._field_Unsafety;
	jule::I64 _21099_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210530_tree));
	(*(_self_))._field_scope=(*(_210553_s));
	_1e30b3882_checkTree(_self_);
	if ((_21099_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1e30b42de_checkVars(_self_.ptr());
		_1e30b44dc_checkAliases(_self_.ptr());
		if (_1e30a54cd_isRoot(_self_.ptr())) {
			_1e30b3de3_checkGotos(_self_.ptr());
			_1e30b40e1_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e30b4ad6_newChildChecker(jule::Ptr<_1e30a2d8d_scopeChecker> _self_) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _212913_base = _1e3097866_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_212913_base))._field_parent=_self_;
	(*(_212913_base))._field_labels=(*(_self_))._field_labels;
	(*(_212913_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_212913_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _212913_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30a2d8d_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e30b5e4a_checkCdef(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e652431c:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1e305a032_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1e652455e;
				};
				goto _case_begin_1e65245b4;
			}
		}
		else {
			_case_begin_1e65245b4:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e652455e:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e30b6203_checkTypedef(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6527155:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1e6527397;
				};
				goto _case_begin_1e65273ec;
			}
		}
		else {
			_case_begin_1e65273ec:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e6527397:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e30b64ab_checkNamespace(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e652a554:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e652a29b:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1e305a032_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e652a312:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1e310ed40_Var>(&__jule_any_type8)))._field_Binded))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1e652a235:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e652a1d0:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20cb74604_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e65355d6:;
			{
				if ((_1e3198769_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e302388b_Directive> _9021_typedef = jule::new_ptr<_1e302388b_Directive>(_1e302388b_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1e302388b_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1e6535581:;
	};
}



inline void _1e30b6764_checkDeprecated(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6536719:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)))._field_Binded) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e653794b:;
			{
				jule::Ptr<_1e305a032_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1e305a032_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1e305a9c2_IsEntryPoint(_10617_f.ptr())) || _1e305ac58_IsInit(_10617_f.ptr()))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e65379b2:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1e310ed40_Var>(&__jule_any_type8)))._field_Binded) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1e65374d9:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e6537484:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20cb74604_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1e30b6a1c_checkTest(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e653d90d:;
			{
				jule::Ptr<_1e305a032_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1e305a032_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1e305ac58_IsInit(_14213_f.ptr())))) && (!(_1e305a9c2_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1e6543160;
				};
				if (_1e305a73b_IsMethod(_14213_f.ptr())) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1e6543160;
				};
				goto _case_begin_1e65431b5;
			}
		}
		else {
			_case_begin_1e65431b5:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e6543160:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e30b6cc5_checkDirective(_1e30b5a3d_directiveChecker* _self_, jule::Ptr<_1e302388b_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1e6547e23:;
			{
				_1e30b5e4a_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1e6547ad2:;
			{
				_1e30b6203_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1e6547b48:;
			{
				_1e30b64ab_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1e6547bae:;
			{
				_1e30b6764_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1e6547c25:;
			{
				_1e30b6a1c_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1e6548c15:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1e6547a6b:;
			{
				_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1e65479e4:;
	};
}



inline void _1e30b6ec3_check(_1e30b5a3d_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e654a94d:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _18121_d = *it;
			{
				_1e30b6cc5_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1e654a94d:;
			++it;
			goto _iter_begin_1e654a94d;
		}
		_iter_end_1e654a94d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e30b5a3d_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30bc4a1_SelectPackage(_1e30bbeb7_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e30bc89c_FindVar(_1e30bbeb7_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1e30be508_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1e30b949d_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e30bcc98_FindTypeAlias(_1e30bbeb7_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1e30be508_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1e30b9921_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1e30450c7_Struct> _1e30bd194_FindStruct(_1e30bbeb7_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1e30be508_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1e30b9d50_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1e305a032_Fn> _1e30bd590_FindFn(_1e30bbeb7_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1e30be508_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1e30ba306_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e30bd8d1_FindTrait(_1e30bbeb7_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1e30be508_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1e30ba647_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1e30709c6_Enum> _1e30bdc22_FindEnum(_1e30bbeb7_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1e30be508_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1e30ba9bb_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30be063_FindTypeEnum(_1e30bbeb7_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1e30be508_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1e30bad40_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1e30be508_isLookupable(_1e30bbeb7_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1e30be849_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1e30be849_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1e30be849_existIdent(_1e30bbeb7_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6560e91:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1e6560e91:;
			++it;
			goto _iter_begin_1e6560e91;
		}
		_iter_end_1e6560e91:;
	};
	return false;;
}



inline jule::Bool _1e30bead0_isAccessibleViaSelection(_1e30bbeb7_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1e30be849_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30bbeb7_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30c0383_SelectPackage(_1e30beddd_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e30c077e_FindVar(_1e30beddd_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1e30b949d_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e30c0b7a_FindTypeAlias(_1e30beddd_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1e30b9921_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1e30450c7_Struct> _1e30c1076_FindStruct(_1e30beddd_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1e30b9d50_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1e305a032_Fn> _1e30c1472_FindFn(_1e30beddd_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1e30ba306_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e30c17b3_FindTrait(_1e30beddd_Package* _self_, jule::Str _33828_ident) {
	return _1e30ba647_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1e30709c6_Enum> _1e30c1b04_FindEnum(_1e30beddd_Package* _self_, jule::Str _34427_ident) {
	return _1e30ba9bb_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30c1e45_FindTypeEnum(_1e30beddd_Package* _self_, jule::Str _35031_ident) {
	return _1e30bad40_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30beddd_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e308404a_comptimeTypeInfo> _1e30dc290_pushComptimeTypeInfo(_1e30dbd2d_commonSemaMeta* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65920b0:;
		if (it != expr_end) {
			jule::Ptr<_1e308404a_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1e31a0e03_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1e65920b0:;
			++it;
			goto _iter_begin_1e65920b0;
		}
		_iter_end_1e65920b0:;
	};
	jule::Ptr<_1e308404a_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1e308404a_comptimeTypeInfo>(_1e308404a_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1e308404a_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e30dbd2d_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e30dcdea_SelectPackage(_1e30dc955_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _24632_selector) {
	return _1e316a065_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1e310ed40_Var> _1e30dd2e6_FindVar(_1e30dc955_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1e310ed40_Var> _25813_v = _1e30b949d_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1e30d9a51_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6595b0d:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1e6595b0d;
				};
				_25813_v=_1e30bc89c_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1e6595b0d:;
			++it;
			goto _iter_begin_1e6595b0d;
		}
		_iter_end_1e6595b0d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e30dd6e2_FindTypeAlias(_1e30dc955_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1e319e907_TypeAlias> _29013_ta = _1e30b9921_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1e30d9a51_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65988e1:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1e65988e1;
				};
				_29013_ta=_1e30bcc98_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1e65988e1:;
			++it;
			goto _iter_begin_1e65988e1;
		}
		_iter_end_1e65988e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30450c7_Struct> _1e30ddadd_FindStruct(_1e30dc955_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1e30450c7_Struct> _32213_s = _1e30b9d50_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1e30d9a51_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e659b6c4:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1e659b6c4;
				};
				_32213_s=_1e30bd194_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1e659b6c4:;
			++it;
			goto _iter_begin_1e659b6c4;
		}
		_iter_end_1e659b6c4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e305a032_Fn> _1e30dded9_FindFn(_1e30dc955_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1e305a032_Fn> _35313_f = _1e30ba306_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1e30d9a51_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e659e4a7:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1e659e4a7;
				};
				_35313_f=_1e30bd590_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1e659e4a7:;
			++it;
			goto _iter_begin_1e659e4a7;
		}
		_iter_end_1e659e4a7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e30de32a_FindTrait(_1e30dc955_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1e306d2cb_Trait> _38513_t = _1e30ba647_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1e30d9a51_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65a2059:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1e65a2059;
				};
				_38513_t=_1e30bd8d1_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1e65a2059:;
			++it;
			goto _iter_begin_1e65a2059;
		}
		_iter_end_1e65a2059:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30709c6_Enum> _1e30de66b_FindEnum(_1e30dc955_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1e30709c6_Enum> _41713_e = _1e30ba9bb_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1e30d9a51_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65a4ad9:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1e65a4ad9;
				};
				_41713_e=_1e30bdc22_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1e65a4ad9:;
			++it;
			goto _iter_begin_1e65a4ad9;
		}
		_iter_end_1e65a4ad9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30de9ac_FindTypeEnum(_1e30dc955_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1e30721d1_TypeEnum> _44913_e = _1e30bad40_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1e30d9a51_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65a7669:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1e30da997_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1e65a7669;
				};
				_44913_e=_1e30be063_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1e30e0cee_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1e65a7669:;
			++it;
			goto _iter_begin_1e65a7669;
		}
		_iter_end_1e65a7669:;
	};
	return nullptr;;
}



inline jule::Bool _1e30dedb9_isFlag(_1e30dc955_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1e30e0172_setCurrentFile(_1e30dc955_Sema* _self_, jule::Ptr<_1e3169ad1_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1e30e0590_pushErr(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e30da623_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1e30e0903_pushSuggestion(_1e30dc955_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1e30dbb52_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1e30e0cee_isAccessibleDefine(_1e30dc955_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_20cb74604_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1e3014cbc_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1e3014cbc_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1e30e12a5_isDuplicatedIdent(_1e30dc955_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65ae1cb:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> *_49816_f = it;
			{
				if (_1e316d09b_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e65aeac2:;
					if (it != expr_end) {
						jule::Ptr<_1e30bbeb7_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e65b09c4:;
								if (it != expr_end) {
									jule::Ptr<_20cb74604_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1e65b09c4:;
									++it;
									goto _iter_begin_1e65b09c4;
								}
								_iter_end_1e65b09c4:;
							};
						}
						_iter_next_1e65aeac2:;
						++it;
						goto _iter_begin_1e65aeac2;
					}
					_iter_end_1e65aeac2:;
				};
			}
			_iter_next_1e65ae1cb:;
			++it;
			goto _iter_begin_1e65ae1cb;
		}
		_iter_end_1e65ae1cb:;
	};
	return false;;
}



inline void _1e30e1618_checkDirectives(jule::Ptr<_1e30dc955_Sema> _self_, jule::Slice<jule::Ptr<_1e302388b_Directive>>* _51440_d, jule::Any _51466_o) {
	_1e30b5a3d_directiveChecker _51513_dc = _1e30b5a3d_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e302388b_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1e30b6ec3_check(&_51513_dc);
}



inline jule::Bool _1e30e1abe_checkGenericQuantity(_1e30dc955_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_20cb74604_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1e65b3147:;
			{
				_1e30e0590_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1e65b31be:;
			{
				_1e30e0590_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1e65b3246:;
			{
				_1e30e0590_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1e65b3466:;
			{
				_1e30e0590_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e65b3059:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e65b2e8d:;
	};
}



inline jule::Bool _1e30e1eba_isDuplicatedImportSelection(_1e30dc955_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65b56dd:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1e65b56dd;
				};
				if (_1e30be849_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1e65b56dd:;
			++it;
			goto _iter_begin_1e65b56dd;
		}
		_iter_end_1e65b56dd:;
	};
	return false;;
}



inline jule::Any _1e30e23b6_getImportDef(_1e30dc955_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1e30bbeb7_ImportInfo>* _55545_imp) {
	if ((_1e3286a66_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65b75d0:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1e316cae5_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1e65b75d0:;
			++it;
			goto _iter_begin_1e65b75d0;
		}
		_iter_end_1e65b75d0:;
	};
	return nullptr;;
}



inline jule::Bool _1e65be087_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e310ed40_Var>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65c3058_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e319e907_TypeAlias>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65c6ed5_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e30450c7_Struct>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65cb0e9_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e306d2cb_Trait>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65d0076_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e30709c6_Enum>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65d4003_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e30721d1_TypeEnum>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e65d7e80_checkImportSelection(_1e30dc955_Sema* _self_, jule::Ptr<_20cb74604_Token>* _57043_ident, jule::Ptr<_1e305a032_Fn>* _57059_s) {
	if ((!(_1e30e0cee_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e30bb37e_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1e30e0590_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1e30e2b03_checkImportSelectedSelections(_1e30dc955_Sema* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65b979c:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1e65b979c;
				};
				if (_1e30e1eba_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1e30e0590_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1e65b979c;
				};
				jule::Any _59817_def = _1e30e23b6_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1e65bab77:;
						{
							goto _iter_next_1e65b979c;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e65bc3e8:;
						{
							jule::Ptr<_1e310ed40_Var> _60421_v = _59817_def.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
							__jule_func_result=(_1e65be087_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1e65bc45e:;
						{
							jule::Ptr<_1e319e907_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1e65c3058_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1e65bd042:;
						{
							jule::Ptr<_1e30450c7_Struct> _61021_s = _59817_def.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1e65c6ed5_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1e65bd0a8:;
						{
							jule::Ptr<_1e306d2cb_Trait> _61321_t = _59817_def.cast_ptr<_1e306d2cb_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1e65cb0e9_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1e65bd11e:;
						{
							jule::Ptr<_1e30709c6_Enum> _61621_e = _59817_def.cast_ptr<_1e30709c6_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1e65d0076_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1e65bd185:;
						{
							jule::Ptr<_1e30721d1_TypeEnum> _61921_e = _59817_def.cast_ptr<_1e30721d1_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1e65d4003_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1e65bd1eb:;
						{
							jule::Ptr<_1e305a032_Fn> _62221_f = _59817_def.cast_ptr<_1e305a032_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1e65d7e80_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1e65bc2d8:;
						{
							_1e30e0590_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1e65b979c;
						}
					}
					_match_end_1e65bc283:;
				};
			}
			_iter_next_1e65b979c:;
			++it;
			goto _iter_begin_1e65b979c;
		}
		_iter_end_1e65b979c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e65dc65a_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e310ed40_Var>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65dde86:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65be087_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65dde86:;
			++it;
			goto _iter_begin_1e65dde86;
		}
		_iter_end_1e65dde86:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65dd79e_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65e1571:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65c3058_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65e1571:;
			++it;
			goto _iter_begin_1e65e1571;
		}
		_iter_end_1e65e1571:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65e0dcd_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e30450c7_Struct>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65e3b4a:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65c6ed5_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65e3b4a:;
			++it;
			goto _iter_begin_1e65e3b4a;
		}
		_iter_end_1e65e3b4a:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65e34a7_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e305a032_Fn>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65e6246:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65d7e80_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65e6246:;
			++it;
			goto _iter_begin_1e65e6246;
		}
		_iter_end_1e65e6246:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65e5a2b_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e306d2cb_Trait>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65e87cb:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65cb0e9_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65e87cb:;
			++it;
			goto _iter_begin_1e65e87cb;
		}
		_iter_end_1e65e87cb:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65e817c_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e30709c6_Enum>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65ead61:;
		if (it != expr_end) {
			jule::Ptr<_1e30709c6_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65d0076_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65ead61:;
			++it;
			goto _iter_begin_1e65ead61;
		}
		_iter_end_1e65ead61:;
	};
	return _63413_ok;;
}

inline jule::Bool _1e65ea712_checkImportsAllSelectionsFromCollection(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e30721d1_TypeEnum>>* _63362_s, jule::Ptr<_20cb74604_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65ed47e:;
		if (it != expr_end) {
			jule::Ptr<_1e30721d1_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1e65d4003_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1e65ed47e:;
			++it;
			goto _iter_begin_1e65ed47e;
		}
		_iter_end_1e65ed47e:;
	};
	return _63413_ok;;
}



inline jule::Bool _1e30e3340_checkImportAllSelections(_1e30dc955_Sema* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65bd608:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1e65dc65a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65dd79e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65e0dcd_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65e34a7_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65e5a2b_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65e817c_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e65ea712_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1e65bd608:;
			++it;
			goto _iter_begin_1e65bd608;
		}
		_iter_end_1e65bd608:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e30e3681_checkImportSelections(_1e30dc955_Sema* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1e30e2b03_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1e30e3340_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e30e39c2_isUseAliasDuplication(_1e30dc955_Sema* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _66641_imp) {
	if (((*((*(_66641_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6600618:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _67121_imp2 = *it;
			{
				if ((_67121_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1e6600618;
				};
				if (((*(_67121_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67121_imp2))._field_Ident == (*(_67121_imp2))._field_LinkPath) && ((*(_67121_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1e6600618:;
			++it;
			goto _iter_begin_1e6600618;
		}
		_iter_end_1e6600618:;
	};
	return false;;
}



inline jule::Bool _1e30e3d13_checkImport(_1e30dc955_Sema* _self_, jule::Ptr<_1e30bbeb7_ImportInfo>* _68635_imp) {
	if (((*((*(_68635_imp))))._field_Binded || ((*((*((*(_68635_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68635_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68635_imp))))._field_ImportAll || !((*((*(_68635_imp))))._field_Alias).empty()) || ((*((*(_68635_imp))))._field_Selected.len() > 0LL))) {
			_1e30e0590_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_1e30e39c2_isUseAliasDuplication(_self_, _68635_imp)) {
		_1e30e0590_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68635_imp))))._field_Alias, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68635_imp))))._field_Duplicate))) {
		jule::Ptr<_1e30dc955_Sema> _70517_sema = jule::new_ptr<_1e30dc955_Sema>(_1e30dc955_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1e310b369_check(_70517_sema, &((*((*((*(_68635_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1e30e3681_checkImportSelections(_self_, _68635_imp);;
}



inline void _1e30e4011_checkImports(_1e30dc955_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6606ba2:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _72021_file = *it;
			{
				_1e30e0172_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6609974:;
					if (it != expr_end) {
						jule::Ptr<_1e30bbeb7_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1e30e3d13_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1e6609974:;
						++it;
						goto _iter_begin_1e6609974;
					}
					_iter_end_1e6609974:;
				};
			}
			_iter_next_1e6606ba2:;
			++it;
			goto _iter_begin_1e6606ba2;
		}
		_iter_end_1e6606ba2:;
	};
}



inline void _1e30e420e_implFileImpls(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66098b9:;
		if (it != expr_end) {
			jule::Ptr<_1e3095655_Impl> _73321_imp = *it;
			{
				_1e3102926_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1e66098b9:;
			++it;
			goto _iter_begin_1e66098b9;
		}
		_iter_end_1e66098b9:;
	};
}



inline void _1e30e440c_implImpls(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e660b459:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _73921_file = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _73921_file);
				_1e30e420e_implFileImpls(_self_);
			}
			_iter_next_1e660b459:;
			++it;
			goto _iter_begin_1e660b459;
		}
		_iter_end_1e660b459:;
	};
}



inline void _1e30e460a_checkEnums(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e660c1a2:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _74621_file = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1e30edd62_checkEnumDecls(_self_)))) {
						_case_begin_1e660d934:;
					}
					else if ((!(_1e30ee0e8_checkTypeEnumDecls(_self_)))) {
						_case_begin_1e660d9ab:;
					}
					_match_end_1e660d89b:;
				};
			}
			_iter_next_1e660c1a2:;
			++it;
			goto _iter_begin_1e660c1a2;
		}
		_iter_end_1e660c1a2:;
	};
}



inline void _1e30e4808_checkFileInherits(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e660d04e:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1e31009ac__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1e660d04e:;
			++it;
			goto _iter_begin_1e660d04e;
		}
		_iter_end_1e660d04e:;
	};
}



inline void _1e30e4a06_checkInherits(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e660ebaa:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _76521_file = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _76521_file);
				_1e30e4808_checkFileInherits(_self_);
			}
			_iter_next_1e660ebaa:;
			++it;
			goto _iter_begin_1e660ebaa;
		}
		_iter_end_1e660ebaa:;
	};
}



inline _1e31b25a7_typeChecker _1e30e4eac_typeChecker(jule::Ptr<_1e30dc955_Sema> _self_, jule::Trait<_1e31c0230_Lookup> _77135_l, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _77150_generics, jule::Ptr<_1e31b15b7_referencer> _77213_referencer) {
	_1e31b25a7_typeChecker _77313_tc = _1e31b25a7_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6612729:;
			{
				jule::Ptr<_1e30a2d8d_scopeChecker> _78217_hard = _1e30a6215_getHardRoot(_77135_l.cast_ptr<_1e30a2d8d_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1e66126c4:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1e6613de0:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1e6613d8a:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e551d_buildTypeWithRefers(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e302446e_TypeDecl>* _79844_t, jule::Trait<_1e31c0230_Lookup> _79867_l, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _79913_generics, jule::Ptr<_1e31b15b7_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1e30e4eac_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1e31b9c52_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1e30e5a7e_checkTypeWithRefers(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e31a78bb_TypeSymbol>* _80544_t, jule::Trait<_1e31c0230_Lookup> _80564_l, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _80613_generics, jule::Ptr<_1e31b15b7_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1e31a7c40_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1e30e551d_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1e31a7c40_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1e3093620_constraintChecker> _1e30e5d15_constraintChecker(jule::Ptr<_1e30dc955_Sema> _self_) {
	return jule::new_ptr<_1e3093620_constraintChecker>(_1e3093620_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1e30e6211_checkType(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e31a78bb_TypeSymbol>* _82034_t, jule::Trait<_1e31c0230_Lookup> _82054_l) {
	return _1e30e5a7e_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e66b7_buildTypeWithGenerics(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e302446e_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _82713_generics, jule::Ptr<_1e30610e3_ReferenceStack> _82741_refers) {
	jule::Ptr<_1e31b25a7_typeChecker> _82813_tc = jule::new_ptr<_1e31b25a7_typeChecker>(_1e31b25a7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1e31b9c52_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e6d49_selectType(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e302446e_TypeDecl>* _84435_t) {
	jule::Ptr<_1e31b25a7_typeChecker> _84513_tc = jule::new_ptr<_1e31b25a7_typeChecker>(_1e31b25a7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1e31b9c52_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1e3171ae9_Eval> _1e30e7300_evalpd(jule::Ptr<_1e30dc955_Sema> _self_, jule::Trait<_1e31c0230_Lookup> _85630_l, jule::Ptr<_1e31a06e9_TypeKind> _85645_p, jule::Ptr<_1e310ed40_Var> _85663_owner) {
	jule::Ptr<_1e3171ae9_Eval> _85713_e = jule::new_ptr<_1e3171ae9_Eval>(_1e3171ae9_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e661cc84:;
			{
				(*(_85713_e))._field_unsafety=_1e30a5247_isUnsafe(_85630_l.cast_ptr<_1e30a2d8d_scopeChecker>(0));
			}
		}
		_match_end_1e661cc2e:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1e3171ae9_Eval> _1e30e76eb_evalp(jule::Ptr<_1e30dc955_Sema> _self_, jule::Trait<_1e31c0230_Lookup> _87129_l, jule::Ptr<_1e31a06e9_TypeKind> _87144_p) {
	return _1e30e7300_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1e3171ae9_Eval> _1e30e7a3c_eval(jule::Ptr<_1e30dc955_Sema> _self_, jule::Trait<_1e31c0230_Lookup> _87628_l) {
	return _1e30e76eb_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1e30e809d_checkAssignType(jule::Ptr<_1e30dc955_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1e31a06e9_TypeKind>* _88057_dest, jule::Ptr<_1e316ee05_Data>* _88114_d, jule::Ptr<_20cb74604_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1e30e0590_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1e31a0e03_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1e30e0590_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1e3153a10_assignTypeChecker> _89217_atc = jule::new_ptr<_1e3153a10_assignTypeChecker>(_1e3153a10_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1e3154c75_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1e31707c9_IsConst((*(_88114_d)).ptr()))) || (_1e31a2d4a_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1e31a2d4a_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_22893c89b_IsSigInt(_90813_kind)) {
			_case_begin_1e6629dc3:;
			{
				_2289419c1_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_22893cba9_IsUnsigInt(_90813_kind)) {
			_case_begin_1e6629e4a:;
			{
				_228941c79_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_22893d2b4_IsFloat(_90813_kind)) {
			_case_begin_1e6629ec2:;
			{
				_228942593_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_228941718_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1e6629d07:;
	};
	return true;;
}



inline jule::Bool _1e30e8554_checkTypeCompatibility(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e31a06e9_TypeKind>* _92247_dest, jule::Ptr<_1e31a06e9_TypeKind>* _92314_src, jule::Ptr<_20cb74604_Token>* _92335_errorToken) {
	if (((*(_92314_src)) == nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1e31a4b71_Tup((*(_92314_src)).ptr()) != nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1e3151c61_typeCompatibilityChecker _93713_tcc = _1e3151c61_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92247_dest)), ._field_src=(*(_92314_src)), ._field_errorToken=(*(_92335_errorToken))};;
	if (_1e3153427_check(&_93713_tcc)) {
		return true;;
	};
	_1e30e0590_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e30e8a0a_buildNonGenericTypeKind(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e302446e_TypeDecl>* _95848_ast, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>* _95914_generics, jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>* _95950_ignored) {
	jule::Ptr<_1e31b25a7_typeChecker> _96013_tc = jule::new_ptr<_1e31b25a7_typeChecker>(_1e31b25a7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95914_generics)), ._field_ignoredGenerics=_95950_ignored, });;
	return _1e31b9c52_checkDecl(_96013_tc.ptr(), _95848_ast);;
}



inline jule::Bool _1e30e8e06_buildFnNonGenericTypeKinds(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns>* _97051_f, jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>* _97067_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _97217_generics = nullptr;;
	if (_1e305a73b_IsMethod((*((*(_97051_f))))._field_Decl.ptr())) {
		_97217_generics=jule::append((*((*((*(_97051_f))))._field_Decl))._field_Generics,(*((*((*((*(_97051_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_97217_generics=(*((*((*(_97051_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_97051_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6634dcd:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> _97921_p = *it;
			{
				if ((!(_1e3058b79_IsSelf((*(_97921_p))._field_Decl.ptr())))) {
					(*(_97921_p))._field_Kind=_1e30e8a0a_buildNonGenericTypeKind(_self_, &((*((*((*(_97921_p))._field_Decl))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97921_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1e6634dcd:;
			++it;
			goto _iter_begin_1e6634dcd;
		}
		_iter_end_1e6634dcd:;
	};
	if ((!(_1e305a4a5_IsVoid((*((*(_97051_f))))._field_Decl.ptr())))) {
		(*((*(_97051_f))))._field_Result=_1e30e8a0a_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_97051_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_97051_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e30e9247_getTraitCheckFnKind(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _99244_f) {
	if (((*((*(_99244_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_99244_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1e305ce36_FnIns> _99613_ins = _1e305b50b_instanceForce((*(_99244_f)));;
	jule::Ptr<_1e31b25a7_typeChecker> _99813_tc = jule::new_ptr<_1e31b25a7_typeChecker>(_1e31b25a7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e31c0230_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_99613_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6639bd5:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> _100321_p = *it;
			{
				if ((!(_1e3058b79_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1e31b9c52_checkDecl(_99813_tc.ptr(), &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1e6639bd5:;
			++it;
			goto _iter_begin_1e6639bd5;
		}
		_iter_end_1e6639bd5:;
	};
	if ((!(_1e305a4a5_IsVoid((*(_99244_f)).ptr())))) {
		(*(_99613_ins))._field_Result=_1e31b9c52_checkDecl(_99813_tc.ptr(), &((*((*((*((*(_99244_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _99613_ins;;
}



inline jule::Bool _1e30e96ed_checkConstraintsFn(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns>* _101543_f, jule::Ptr<_20cb74604_Token>* _101559_et, jule::Ptr<_1e305ce36_FnIns> _101575_exist) {
	jule::Ptr<_1e3093620_constraintChecker> _101613_cc = _1e30e5d15_constraintChecker(_self_);;
	(*(_101613_cc))._field_et=(*(_101559_et));
	(*(_101613_cc))._field_fi=(*(_101543_f));
	if ((_101575_exist != nullptr)) {
		{
			auto expr = &((*(_101575_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e66408bc:;
			if (it != expr_end) {
				jule::I64 _102018_i = it - expr->begin();
				jule::Ptr<_1e319dd13_InsGeneric> _102025_g = *it;
				{
					(*((*((*(_101543_f))))._field_Generics[_102018_i]))._field_Constraint=(*(_102025_g))._field_Constraint;
				}
				_iter_next_1e66408bc:;
				++it;
				_102018_i++;
				goto _iter_begin_1e66408bc;
			}
			_iter_end_1e66408bc:;
		};
	} else {
		(*(_101613_cc))._field_uniq=true;
	};
	return _1e3094555_check(_101613_cc);;
}



inline jule::Bool _1e30e9ba4_checkConstraintsStruct(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _102947_s, jule::Ptr<_20cb74604_Token>* _102967_et, jule::Ptr<_1e3047d55_StructIns> _102983_exist) {
	jule::Ptr<_1e3093620_constraintChecker> _103013_cc = _1e30e5d15_constraintChecker(_self_);;
	(*(_103013_cc))._field_et=(*(_102967_et));
	(*(_103013_cc))._field_si=(*(_102947_s));
	if ((_102983_exist != nullptr)) {
		{
			auto expr = &((*(_102983_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6643958:;
			if (it != expr_end) {
				jule::I64 _103418_i = it - expr->begin();
				jule::Ptr<_1e319dd13_InsGeneric> _103425_g = *it;
				{
					(*((*((*(_102947_s))))._field_Generics[_103418_i]))._field_Constraint=(*(_103425_g))._field_Constraint;
				}
				_iter_next_1e6643958:;
				++it;
				_103418_i++;
				goto _iter_begin_1e6643958;
			}
			_iter_end_1e6643958:;
		};
	} else {
		(*(_103013_cc))._field_uniq=true;
	};
	return _1e3094555_check(_103013_cc);;
}



inline jule::Bool _1e30ea0a0_fnEnvironment(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns>* _104638_f, jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)> _104649_algo) {
	jule::Ptr<_1e30dc955_Sema> _104713_sema = (*((*((*(_104638_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1e3169ad1_SymbolTable> _104813_old = (*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1e30e0172_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _104813_old);
	});;
	jule::Ptr<_1e3169ad1_SymbolTable> _105013_file = _1e30db69b_findFile(&((*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_104638_f))))._field_Decl))._field_Token))._field_File));;
	if ((_105013_file != nullptr)) {
		_1e30e0172_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _105013_file);
	};
	jule::I64 _105513_size = (*((*(_104638_f))))._field_Generics.len();;
	if ((((*((*(_104638_f))))._field_Decl != nullptr) && ((*((*((*(_104638_f))))._field_Decl))._field_Owner != nullptr))) {
		_105513_size+=(*((*((*((*(_104638_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _106013_generics = jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>::alloc(0LL, _105513_size);;
	_1e30db327_appendGenericTypeAliases(&(_106013_generics), _104638_f);
	jule::Bool _10639_ok = _104649_algo(&(_104713_sema), &(_106013_generics));;
	if ((_104713_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_104713_sema))._field_errors);;
		(*(_104713_sema))._field_errors=nullptr;
	};
	return _10639_ok;;
}



inline void _1e30ea358_checkFnParamKind(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305be8a_ParamIns>* _107341_p) {
	(*((*((*(_107341_p))))._field_Kind))._field_Variadic=(*((*((*(_107341_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_107341_p))))._field_Decl))._field_Reference && (!(_1e31bbbdd_isValidForRef(&((*((*(_107341_p))))._field_Kind)))))) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_107341_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_107341_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1e30ea699_reloadFnInsTypes(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns> _108040_f) {
	if ((_1e305e3bb_IsBuiltin(_108040_f.ptr()) || _1e305e652_IsAnon(_108040_f.ptr()))) {
		return true;;
	};
	return _1e30ea0a0_fnEnvironment(_self_, &(_108040_f), jule::Fn<jule::Bool(jule::Ptr<_1e30dc955_Sema>*,jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>*)>([=](jule::Ptr<_1e30dc955_Sema>* _108443_sema, jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>* _108461_generics) mutable -> jule::Bool {
		jule::Bool _108517_ok = true;;
		{
			auto expr = &((*(_108040_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6651aba:;
			if (it != expr_end) {
				jule::Ptr<_1e305be8a_ParamIns> _108625_p = *it;
				{
					if (_1e3058b79_IsSelf((*(_108625_p))._field_Decl.ptr())) {
						if (_1e3058e10_IsRef((*(_108625_p))._field_Decl.ptr())) {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31abcee_Sptr>(_1e31abcee_Sptr{._field_Elem=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_108040_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_108040_f))._field_Owner, 0)});
						};
					} else {
						(*(_108625_p))._field_Kind=_1e30e66b7_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*(_108625_p))._field_Decl))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
						if (((*(_108625_p))._field_Kind != nullptr)) {
							_1e30ea358_checkFnParamKind(_self_, &(_108625_p));
						} else {
							_108517_ok=false;
						};
					};
				}
				_iter_next_1e6651aba:;
				++it;
				goto _iter_begin_1e6651aba;
			}
			_iter_end_1e6651aba:;
		};
		if ((!(_1e305a4a5_IsVoid((*(_108040_f))._field_Decl.ptr())))) {
			(*(_108040_f))._field_Result=_1e30e66b7_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*((*(_108040_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
			_108517_ok=(((*(_108040_f))._field_Result != nullptr) && _108517_ok);
		};
		return _108517_ok;;
	}));;
}



inline jule::Bool _1e30eab50_checkRefValidityForInitExpr(jule::Ptr<_1e30dc955_Sema> _self_, jule::Bool _111647_leftMut, jule::Ptr<_1e316ee05_Data>* _111667_d, jule::Ptr<_20cb74604_Token>* _111682_errorToken) {
	if ((!(_1e30da0e5_isValidModelForRef(&((*((*(_111667_d))))._field_Model))))) {
		_1e30e0590_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_111647_leftMut && (!((*((*(_111667_d))))._field_Mutable)))) {
		_1e30e0590_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1e30eae91_isMutRiskyStruct(_1e30dc955_Sema* _self_, jule::Ptr<_1e3047d55_StructIns>* _113332_s) {
	{
		auto expr = &((*((*(_113332_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6659cd2:;
		if (it != expr_end) {
			jule::Ptr<_1e30472a5_FieldIns> *_113416_f = it;
			{
				if ((((*((*((*(_113416_f))))._field_Decl))._field_Mutable && _1e31a207a_Mutable((*((*(_113416_f))))._field_Kind.ptr())) && _1e30e0cee_isAccessibleDefine(_self_, (*((*((*(_113416_f))))._field_Decl))._field_Public, (*((*((*(_113416_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1e6659cd2:;
			++it;
			goto _iter_begin_1e6659cd2;
		}
		_iter_end_1e6659cd2:;
	};
	return false;;
}



inline jule::Bool _1e30eb5ac_checkValidityForInitExpr(jule::Ptr<_1e30dc955_Sema> _self_, jule::Bool _116044_leftMut, jule::Bool _116059_leftRef, jule::Ptr<_1e31a06e9_TypeKind>* _116110_leftKind, jule::Ptr<_1e316ee05_Data>* _116136_d, jule::Ptr<_20cb74604_Token>* _116151_errorToken) {
	if ((_116044_leftMut && (!((*((*(_116136_d))))._field_Mutable)))) {
		if (_1e31a207a_Mutable((*((*(_116136_d))))._field_Kind.ptr())) {
			_1e30e0590_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1e3047d55_StructIns> _116913_s = _1e31a43bd_Struct((*((*(_116136_d))))._field_Kind.ptr());;
		if (((_116913_s != nullptr) && _1e30eae91_isMutRiskyStruct(_self_.ptr(), &(_116913_s)))) {
			_1e30e0590_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_116059_leftRef) {
		if ((!(_1e30eab50_checkRefValidityForInitExpr(_self_, _116044_leftMut, _116136_d, _116151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1e3153a10_assignTypeChecker> _118013_atc = jule::new_ptr<_1e3153a10_assignTypeChecker>(_1e3153a10_assignTypeChecker{._field_s=_self_, ._field_d=(*(_116136_d)), ._field_errorToken=(*(_116151_errorToken))});;
	return _1e315423b_checkValidity(_118013_atc.ptr());;
}



inline jule::Bool _1e30eb9a8_checkTypeAliasDeclKind(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e319e907_TypeAlias>* _118847_ta, jule::Trait<_1e31c0230_Lookup> _118867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e3169ad1_SymbolTable> _118913_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1e30e0172_setCurrentFile(_self_.ptr(), _118913_old);
	});;
	if (((*((*(_118847_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1e3169ad1_SymbolTable> _119417_file = _1e30db69b_findFile(&((*(_self_))._field_files), &((*((*((*(_118847_ta))))._field_Token))._field_File));;
		if ((_119417_file != nullptr)) {
			_1e30e0172_setCurrentFile(_self_.ptr(), _119417_file);
		};
	};
	__jule_func_result=_1e30e5a7e_checkTypeWithRefers(_self_, &((*((*(_118847_ta))))._field_Kind), _118867_l, nullptr, jule::new_ptr<_1e31b15b7_referencer>(_1e31b15b7_referencer{._field_ident=(*((*(_118847_ta))))._field_Ident, ._field_owner=jule::Any((*(_118847_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118847_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1e31a3b1a_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1e31a3b1a_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*((*(_118847_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1e30ebd1b_checkTypeAliasDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e319e907_TypeAlias>* _121143_ta, jule::Trait<_1e31c0230_Lookup> _121163_l) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_121143_ta))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_121143_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1e30eb9a8_checkTypeAliasDeclKind(_self_, _121143_ta, _121163_l);
}



inline void _1e30ec0c4_checkTypeAliasDeclDup(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e319e907_TypeAlias>* _121946_ta) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_121946_ta))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121946_ta)))), &((*((*(_121946_ta))))._field_Ident), (*((*(_121946_ta))))._field_Binded)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121946_ta))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e30eb9a8_checkTypeAliasDeclKind(_self_, _121946_ta, jule::Trait<_1e31c0230_Lookup>(_self_, 3));
}



inline jule::Bool _1e30ec35a_checkTypeAliasDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e666bdd2:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> _123221_ta = *it;
			{
				_1e30ec0c4_checkTypeAliasDeclDup(_self_, &(_123221_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e666bdd2:;
			++it;
			goto _iter_begin_1e666bdd2;
		}
		_iter_end_1e666bdd2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e66979ce_checkEnumItemsDup(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6698caa:;
		if (it != expr_end) {
			jule::Ptr<_1e306ee59_EnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1e6698caa;
				} else if (_1e30117e1_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1e30e0590_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e669a0a8:;
						if (it != expr_end) {
							jule::Ptr<_1e306ee59_EnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1e669a0a8;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1e30e0590_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1e669a0a8;
								};
							}
							_iter_next_1e669a0a8:;
							++it;
							goto _iter_begin_1e669a0a8;
						}
						_iter_end_1e669a0a8:;
					};
				};
			}
			_iter_next_1e6698caa:;
			++it;
			goto _iter_begin_1e6698caa;
		}
		_iter_end_1e6698caa:;
	};
}

inline void _1e66a4821_checkEnumItemsDup(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66a5aa8:;
		if (it != expr_end) {
			jule::Ptr<_1e3071b09_TypeEnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1e66a5aa8;
				} else if (_1e30117e1_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1e30e0590_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e66a6da6:;
						if (it != expr_end) {
							jule::Ptr<_1e3071b09_TypeEnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1e66a6da6;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1e30e0590_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1e66a6da6;
								};
							}
							_iter_next_1e66a6da6:;
							++it;
							goto _iter_begin_1e66a6da6;
						}
						_iter_end_1e66a6da6:;
					};
				};
			}
			_iter_next_1e66a5aa8:;
			++it;
			goto _iter_begin_1e66a5aa8;
		}
		_iter_end_1e66a5aa8:;
	};
}



inline void _1e30ec8bb_checkEnumItemsStr(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30709c6_Enum>* _126342_e) {
	jule::Ptr<_1e3171ae9_Eval> _126413_eval = _1e30e7a3c_eval(_self_, jule::Trait<_1e31c0230_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_126342_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e666dbc5:;
		if (it != expr_end) {
			jule::Ptr<_1e306ee59_EnumItem> _126521_item = *it;
			{
				if (_1e3070311_AutoExpr(_126521_item.ptr())) {
					(*(_126521_item))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Constant=static__22893e7e3_NewStr((*(_126521_item))._field_Ident)})});
					(*((*((*(_126521_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_126521_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1e316ee05_Data> _127421_d = _1e318ed59_evalExpr(_126413_eval, (*((*(_126521_item))._field_Value))._field_Expr);;
					if ((_127421_d == nullptr)) {
						goto _iter_next_1e666dbc5;
					};
					if ((!(_1e31707c9_IsConst(_127421_d.ptr())))) {
						_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_126521_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1e30e809d_checkAssignType(_self_, false, &((*((*((*(_126342_e))))._field_Kind))._field_Kind), &(_127421_d), (*(_126521_item))._field_Token);
					(*((*(_126521_item))._field_Value))._field_Data=_127421_d;
				};
			}
			_iter_next_1e666dbc5:;
			++it;
			goto _iter_begin_1e666dbc5;
		}
		_iter_end_1e666dbc5:;
	};
}



inline void _1e6678c9b_checkEnumItemInt(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3171ae9_Eval>* _128946_eval, jule::Ptr<_1e30709c6_Enum>* _128964_e, jule::Ptr<_1e31a82c3_Prim>* _128975_prim, jule::Ptr<_1e306ee59_EnumItem>* _128993_item, jule::U64* _1289115_n) {
	if (_1e3070311_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		{
			
{
				_case_begin_1e667bac3:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__22893e260_NewU64((*(_1289115_n)));
				}
			}
			_match_end_1e667b9e6:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1e316ee05_Data> _130417_d = _1e318ed59_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1e31707c9_IsConst(_130417_d.ptr())))) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1e30e809d_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1e6681765:;
				{
					(*(_1289115_n))=static_cast<jule::U64>(_2289406b2_ReadU64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1e6681677:;
		};
	};
}

inline void _1e6688690_checkEnumItemInt(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3171ae9_Eval>* _128946_eval, jule::Ptr<_1e30709c6_Enum>* _128964_e, jule::Ptr<_1e31a82c3_Prim>* _128975_prim, jule::Ptr<_1e306ee59_EnumItem>* _128993_item, jule::I64* _1289115_n) {
	if (_1e3070311_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()});
		{
			
{
				_case_begin_1e668b3eb:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__22893de96_NewI64((*(_1289115_n)));
				}
			}
			_match_end_1e668b396:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1e316ee05_Data> _130417_d = _1e318ed59_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1e31707c9_IsConst(_130417_d.ptr())))) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1e30e809d_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1e6691225:;
				{
					(*(_1289115_n))=static_cast<jule::I64>(_22894042b_ReadI64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1e66911ae:;
		};
	};
}



inline void _1e667556c_checkEnumItemsInt1(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e31a82c3_Prim>* _132444_prim, jule::Ptr<_1e30709c6_Enum>* _132462_e) {
	jule::U64 _132513_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1e6677294:;
			{
				_132513_max=static_cast<jule::U64>(_228937159_MaxU(_1e31a8614_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1e6676b56:;
	};
	jule::Ptr<_1e3171ae9_Eval> _133513_eval = _1e30e7a3c_eval(_self_, jule::Trait<_1e31c0230_Lookup>(_self_, 3));;
	jule::U64 _133613_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1e306ee59_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1e6678c9b_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1e6681d70:;
				{
					_133613_n=static_cast<jule::U64>(_228941482_AsU64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1e667a066:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e667d6da:;
		if (it != expr_end) {
			jule::Ptr<_1e306ee59_EnumItem> _134921_item = *it;
			{
				if (((_1e3070311_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LLU)) && ((_132513_max - _133613_n) <= 0LLU))) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1e667d6da;
				};
				(_133613_n)++;
				_1e6678c9b_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1e667d6da:;
			++it;
			goto _iter_begin_1e667d6da;
		}
		_iter_end_1e667d6da:;
	};
}

inline void _1e6685725_checkEnumItemsInt1(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e31a82c3_Prim>* _132444_prim, jule::Ptr<_1e30709c6_Enum>* _132462_e) {
	jule::I64 _132513_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1e6686979:;
			{
				_132513_max=static_cast<jule::I64>(_228936d90_MaxI(_1e31a8614_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1e66863b3:;
	};
	jule::Ptr<_1e3171ae9_Eval> _133513_eval = _1e30e7a3c_eval(_self_, jule::Trait<_1e31c0230_Lookup>(_self_, 3));;
	jule::I64 _133613_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1e306ee59_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1e6688690_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1e668789d:;
				{
					_133613_n=static_cast<jule::I64>(_2289411eb_AsI64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1e66867d1:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e6692dc5:;
		if (it != expr_end) {
			jule::Ptr<_1e306ee59_EnumItem> _134921_item = *it;
			{
				if (((_1e3070311_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LL)) && ((_132513_max - _133613_n) <= 0LL))) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1e6692dc5;
				};
				(_133613_n)++;
				_1e6688690_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1e6692dc5:;
			++it;
			goto _iter_begin_1e6692dc5;
		}
		_iter_end_1e6692dc5:;
	};
}



inline void _1e30ed56a_checkEnumItemsInt(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30709c6_Enum>* _135942_e) {
	jule::Ptr<_1e31a82c3_Prim> _13609_prim = _1e31a2d4a_Prim((*((*((*(_135942_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_22893c89b_IsSigInt((*(_13609_prim))._field_Kind)) {
			_case_begin_1e667514e:;
			{
				_1e6685725_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		else {
			_case_begin_1e6674ca8:;
			{
				_1e667556c_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		_match_end_1e6674c42:;
	};
}



inline void _1e30ed823_checkEnumDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30709c6_Enum>* _136938_e) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_136938_e))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136938_e)))), &((*((*(_136938_e))))._field_Ident), false)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136938_e))))._field_Items.len() == 0LL)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1e66979ce_checkEnumItemsDup(_self_.ptr(), (*((*(_136938_e))))._field_Items);
	if (((*((*(_136938_e))))._field_Kind != nullptr)) {
		if ((!(_1e30e6211_checkType(_self_, &((*((*(_136938_e))))._field_Kind), jule::Trait<_1e31c0230_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136938_e))))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1e31a82c3_Prim> _139313_t = _1e31a2d4a_Prim((*((*((*(_136938_e))))._field_Kind))._field_Kind.ptr());;
	if ((_139313_t == nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e31ab75a_IsStr(_139313_t.ptr())) {
			_case_begin_1e669e585:;
			{
				_1e30ec8bb_checkEnumItemsStr(_self_, _136938_e);
			}
		}
		else if (_22893ce73_IsInt(_1e31a8614_Str(_139313_t.ptr()))) {
			_case_begin_1e669e288:;
			{
				_1e30ed56a_checkEnumItemsInt(_self_, _136938_e);
			}
		}
		else {
			_case_begin_1e669e222:;
			{
				_1e30e0590_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e669d85e:;
	};
}



inline void _1e30edacb_checkTypeEnumDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30721d1_TypeEnum>* _141042_e) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_141042_e))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_141042_e)))), &((*((*(_141042_e))))._field_Ident), false)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_141042_e))))._field_Items.len() == 0LL)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1e66a4821_checkEnumItemsDup(_self_.ptr(), (*((*(_141042_e))))._field_Items);
	{
		auto expr = &((*((*(_141042_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66a11be:;
		if (it != expr_end) {
			jule::Ptr<_1e3071b09_TypeEnumItem> _142421_item = *it;
			{
				if (((*(_142421_item))._field_Kind == nullptr)) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1e66a11be;
				};
				jule::Bool _142913_ok = _1e30e6211_checkType(_self_, &((*(_142421_item))._field_Kind), jule::Trait<_1e31c0230_Lookup>(_self_, 3));;
				if ((!(_142913_ok))) {
					goto _iter_next_1e66a11be;
				};
				jule::Ptr<_1e31a82c3_Prim> _143313_p = _1e31a2d4a_Prim((*((*(_142421_item))._field_Kind))._field_Kind.ptr());;
				if (((_143313_p != nullptr) && _1e31ab9e1_IsAny(_143313_p.ptr()))) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e66a11be:;
			++it;
			goto _iter_begin_1e66a11be;
		}
		_iter_end_1e66a11be:;
	};
	if (((*((*(_141042_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1e3071b09_TypeEnumItem> _143917_item = (*((*(_141042_e))))._field_Items[0LL];;
		_1e31a06e9_TypeKind _144013_tk = _1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_141042_e)), 4)};;
		if ((((*((*(_143917_item))._field_Kind))._field_Kind != nullptr) && _1e31a0e03_Equal((*((*(_143917_item))._field_Kind))._field_Kind, ((jule::Ptr<_1e31a06e9_TypeKind>)((&(_144013_tk))))))) {
			_1e30e0590_pushErr(_self_.ptr(), (*(_143917_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1e3072522_Str((*(_141042_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1e30edd62_checkEnumDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66aebd3:;
		if (it != expr_end) {
			jule::Ptr<_1e30709c6_Enum> _145121_e = *it;
			{
				_1e30ed823_checkEnumDecl(_self_, &(_145121_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e66aebd3:;
			++it;
			goto _iter_begin_1e66aebd3;
		}
		_iter_end_1e66aebd3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e30ee0e8_checkTypeEnumDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66b06c8:;
		if (it != expr_end) {
			jule::Ptr<_1e30721d1_TypeEnum> _146321_e = *it;
			{
				_1e30edacb_checkTypeEnumDecl(_self_, &(_146321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e66b06c8:;
			++it;
			goto _iter_begin_1e66b06c8;
		}
		_iter_end_1e66b06c8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e30ee439_checkDeclGenerics(_1e30dc955_Sema* _self_, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>* _147337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _147337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66b2d07:;
		if (it != expr_end) {
			jule::I64 _147513_i = it - expr->begin();
			jule::Ptr<_1e3031679_GenericDecl> *_147516_g = it;
			{
				if (_1e30117e1_IsIgnoreIdent((*((*(_147516_g))))._field_Ident)) {
					_1e30e0590_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1e66b2d07;
				};
				_julec_label_1e66b449b:;
				{
					auto expr = _147337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66b4699:;
					if (it != expr_end) {
						jule::I64 _148417_j = it - expr->begin();
						jule::Ptr<_1e3031679_GenericDecl> *_148420_ct = it;
						{
							{
								
								if ((_148417_j >= _147513_i)) {
									_case_begin_1e66b52d2:;
									{
										goto _iter_end_1e66b4699;
									}
								}
								else if (((*((*(_147516_g))))._field_Ident == (*((*(_148420_ct))))._field_Ident)) {
									_case_begin_1e66b5359:;
									{
										_1e30e0590_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_147516_g))))._field_Ident, &__jule_any_type4)}));
										_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1e66b4699;
									}
								}
								_match_end_1e66b51d3:;
							};
						}
						_iter_next_1e66b4699:;
						++it;
						_148417_j++;
						goto _iter_begin_1e66b4699;
					}
					_iter_end_1e66b4699:;
				};
			}
			_iter_next_1e66b2d07:;
			++it;
			_147513_i++;
			goto _iter_begin_1e66b2d07;
		}
		_iter_end_1e66b2d07:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e30ee77a_checkFnDeclParamsDup(_1e30dc955_Sema* _self_, jule::Ptr<_1e305a032_Fn>* _150040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1e66b602a:;
	{
		auto expr = &((*((*(_150040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66b7658:;
		if (it != expr_end) {
			jule::I64 _150313_i = it - expr->begin();
			jule::Ptr<_1e305855d_Param> *_150316_p = it;
			{
				{
					auto expr = &((*((*(_150040_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66b7603:;
					if (it != expr_end) {
						jule::Ptr<_1e3031679_GenericDecl> *_150520_g = it;
						{
							if (((*((*(_150316_p))))._field_Ident == (*((*(_150520_g))))._field_Ident)) {
								__jule_func_result=false;
								_1e30e0590_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
								_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1e66b7658;
							};
						}
						_iter_next_1e66b7603:;
						++it;
						goto _iter_begin_1e66b7603;
					}
					_iter_end_1e66b7603:;
				};
				_julec_label_1e66b8280:;
				{
					auto expr = &((*((*(_150040_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66b8e0c:;
					if (it != expr_end) {
						jule::I64 _151517_j = it - expr->begin();
						jule::Ptr<_1e305855d_Param> *_151520_jp = it;
						{
							{
								
								if ((_151517_j >= _150313_i)) {
									_case_begin_1e66bac55:;
									{
										goto _iter_end_1e66b8e0c;
									}
								}
								else if (_1e30117e1_IsIgnoreIdent((*((*(_150316_p))))._field_Ident) || _1e30117e1_IsIgnoreIdent((*((*(_151520_jp))))._field_Ident) || _1e3011aaa_IsAnonIdent((*((*(_150316_p))))._field_Ident) || _1e3011aaa_IsAnonIdent((*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1e66baccc:;
									{
										goto _iter_end_1e66b8e0c;
									}
								}
								else if (((*((*(_150316_p))))._field_Ident == (*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1e66bad54:;
									{
										__jule_func_result=false;
										_1e30e0590_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
										_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1e66b7658;
									}
								}
								_match_end_1e66bab45:;
							};
						}
						_iter_next_1e66b8e0c:;
						++it;
						_151517_j++;
						goto _iter_begin_1e66b8e0c;
					}
					_iter_end_1e66b8e0c:;
				};
			}
			_iter_next_1e66b7658:;
			++it;
			_150313_i++;
			goto _iter_begin_1e66b7658;
		}
		_iter_end_1e66b7658:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e30eeabb_checkFnDeclResultDup(_1e30dc955_Sema* _self_, jule::Ptr<_1e305a032_Fn>* _153740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1e305a4a5_IsVoid((*(_153740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66be1cb:;
		if (it != expr_end) {
			jule::I64 _154413_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> *_154416_v = it;
			{
				if ((_1e30117e1_IsIgnoreIdent((*((*(_154416_v))))._field_Kind) || _1e3011aaa_IsAnonIdent((*((*(_154416_v))))._field_Kind))) {
					goto _iter_next_1e66be1cb;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66c0364:;
					if (it != expr_end) {
						jule::Ptr<_1e3031679_GenericDecl> *_154920_g = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_154920_g))))._field_Ident)) {
								goto _julec_label_1e66c19b4;
							};
						}
						_iter_next_1e66c0364:;
						++it;
						goto _iter_begin_1e66c0364;
					}
					_iter_end_1e66c0364:;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66c1d27:;
					if (it != expr_end) {
						jule::Ptr<_1e305855d_Param> *_155520_p = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_155520_p))))._field_Ident)) {
								goto _julec_label_1e66c19b4;
							};
						}
						_iter_next_1e66c1d27:;
						++it;
						goto _iter_begin_1e66c1d27;
					}
					_iter_end_1e66c1d27:;
				};
				_julec_label_1e66c307b:;
				{
					auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66c2e9e:;
					if (it != expr_end) {
						jule::I64 _156317_j = it - expr->begin();
						jule::Ptr<_20cb74604_Token> *_156320_jv = it;
						{
							{
								
								if ((_156317_j >= _154413_i)) {
									_case_begin_1e66c45aa:;
									{
										goto _iter_end_1e66c2e9e;
									}
								}
								else if (((*((*(_156320_jv))))._field_Kind == (*((*(_154416_v))))._field_Kind)) {
									_case_begin_1e66c4632:;
									{
										goto _julec_label_1e66c19b4;
									}
								}
								_match_end_1e66c449a:;
							};
						}
						_iter_next_1e66c2e9e:;
						++it;
						_156317_j++;
						goto _iter_begin_1e66c2e9e;
					}
					_iter_end_1e66c2e9e:;
				};
				goto _iter_next_1e66be1cb;
				_julec_label_1e66c19b4:;
				_1e30e0590_pushErr(_self_, (*(_154416_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_154416_v))))._field_Kind, &__jule_any_type4)}));
				_1e30e0903_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1e66be1cb:;
			++it;
			_154413_i++;
			goto _iter_begin_1e66be1cb;
		}
		_iter_end_1e66be1cb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e30eee0c_checkFnVariadicParam(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _158245_f) {
	if (((*((*(_158245_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1e305855d_Param> _158613_param = (*((*(_158245_f))))._field_Params[((*((*(_158245_f))))._field_Params.len() - 1LL)];;
	if (((*(_158613_param))._field_Variadic && (*(_158613_param))._field_Reference)) {
		_1e30e0590_pushErr(_self_.ptr(), (*(_158613_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1e31001b5_checkFnDeclPrototype(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _159545_f) {
	if (((*((*(_159545_f))))._field_Exceptional && (*((*(_159545_f))))._field_Binded)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_159545_f))))._field_Exceptional) {
		if (_1e305a9c2_IsEntryPoint((*(_159545_f)).ptr())) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1e305ac58_IsInit((*(_159545_f)).ptr())) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e30ee439_checkDeclGenerics(_self_.ptr(), &((*((*(_159545_f))))._field_Generics))))) {
			_case_begin_1e66cb903:;
		}
		else if ((!(_1e30ee77a_checkFnDeclParamsDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1e66cb97a:;
		}
		else if ((!(_1e30eeabb_checkFnDeclResultDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1e66cba02:;
		}
		else if ((!(_1e30eee0c_checkFnVariadicParam(_self_, _159545_f)))) {
			_case_begin_1e66cba79:;
		}
		_match_end_1e66ca072:;
	};
}



inline jule::Bool _1e310066b_catchTraitInheritCycle(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e306d2cb_Trait> _161742_t1, jule::Ptr<_1e306d2cb_Trait> _161758_t2, _227713453_StrBuilder* _161775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_161758_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66cdd23:;
		if (it != expr_end) {
			jule::Ptr<_1e31a78bb_TypeSymbol> _161921_i = *it;
			{
				if (((*(_161921_i))._field_Kind == nullptr)) {
					goto _iter_next_1e66cdd23;
				};
				jule::Ptr<_1e306d2cb_Trait> _162317_t3 = _1e31a4654_Trait((*(_161921_i))._field_Kind.ptr());;
				if ((_161742_t1 == _162317_t3)) {
					_1e31053eb_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1e310066b_catchTraitInheritCycle(_self_, _161742_t1, _162317_t3, _161775_message)))) {
					_1e31053eb_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e66cdd23:;
			++it;
			goto _iter_begin_1e66cdd23;
		}
		_iter_end_1e66cdd23:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e31009ac__checkTraitDeclInherits(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e306d2cb_Trait>* _163648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_163648_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66d2475:;
		if (it != expr_end) {
			jule::I64 _163814_i = it - expr->begin();
			jule::Ptr<_1e31a78bb_TypeSymbol> _163821_it = *it;
			{
				if ((!(_1e30e6211_checkType(_self_, &(_163821_it), jule::Trait<_1e31c0230_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1e66d2475;
				};
				jule::Ptr<_1e306d2cb_Trait> _164317_t2 = _1e31a4654_Trait((*(_163821_it))._field_Kind.ptr());;
				if ((_164317_t2 == nullptr)) {
					_1e30e0590_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_163821_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1e66d2475;
				};
				{
					auto expr = &((*((*(_163648_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66d4367:;
					if (it != expr_end) {
						jule::I64 _164917_j = it - expr->begin();
						jule::Ptr<_1e31a78bb_TypeSymbol> _164920_it2 = *it;
						{
							if ((_164917_j >= _163814_i)) {
								goto _iter_end_1e66d4367;
							};
							if ((((*(_164920_it2))._field_Kind != nullptr) && _1e31a0e03_Equal((*(_163821_it))._field_Kind, (*(_164920_it2))._field_Kind))) {
								_1e30e0590_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_164317_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1e66d4367;
							};
						}
						_iter_next_1e66d4367:;
						++it;
						_164917_j++;
						goto _iter_begin_1e66d4367;
					}
					_iter_end_1e66d4367:;
				};
				if (((*(_163648_t)) == _164317_t2)) {
					_1e30e0590_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_227713453_StrBuilder _166321_message = static__22771371c_New(64LL);;
					__jule_func_result=(__jule_func_result && _1e310066b_catchTraitInheritCycle(_self_, (*(_163648_t)), _164317_t2, &(_166321_message)));
					if ((_22771cca9_Len(&_166321_message) > 0LL)) {
						jule::Str _166625_errMsg = _22771c825_Str(&_166321_message);;
						_22771ca23_Clear(&_166321_message);
						_1e31053eb_pushCycleError(_self_.ptr(), &((*((*(_163648_t))))._field_Ident), &((*(_164317_t2))._field_Ident), &(_166321_message));
						_166625_errMsg+=_22771c825_Str(&_166321_message);
						_1e30e0590_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_166625_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1e66d2475:;
			++it;
			_163814_i++;
			goto _iter_begin_1e66d2475;
		}
		_iter_end_1e66d2475:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1e3100c65_checkTraitDeclInherits(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e306d2cb_Trait>* _167747_t) {
	{
		auto expr = &((*((*(_167747_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66d91b3:;
		if (it != expr_end) {
			jule::I64 _167814_i = it - expr->begin();
			jule::Ptr<_1e31a78bb_TypeSymbol> _167821_it = *it;
			{
				jule::Ptr<_1e306d2cb_Trait> _167917_t1 = _1e31a4654_Trait((*(_167821_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_167747_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66dceb9:;
					if (it != expr_end) {
						jule::I64 _168018_j = it - expr->begin();
						jule::Ptr<_1e31a78bb_TypeSymbol> _168025_it2 = *it;
						{
							if ((_168018_j == _167814_i)) {
								goto _iter_next_1e66dceb9;
							};
							jule::Ptr<_1e306d2cb_Trait> _168421_t2 = _1e31a4654_Trait((*(_168025_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167917_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e66de55e:;
								if (it != expr_end) {
									jule::Ptr<_1e305a032_Fn> _168529_t1m = *it;
									{
										jule::Ptr<_1e305a032_Fn> _168625_t2m = _1e306de7a_FindMethod(_168421_t2.ptr(), (*(_168529_t1m))._field_Ident);;
										if ((_168625_t2m == nullptr)) {
											goto _iter_next_1e66de55e;
										};
										jule::Ptr<_1e305ce36_FnIns> _169021_t1f = _1e30e9247_getTraitCheckFnKind(_self_, &(_168529_t1m));;
										jule::Ptr<_1e305ce36_FnIns> _169121_t2f = _1e30e9247_getTraitCheckFnKind(_self_, &(_168625_t2m));;
										if ((!(_1e305dd9e_equalTrait(_169021_t1f, &(_169121_t2f))))) {
											_1e30e0590_pushErr(_self_.ptr(), (*((*(_167821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_167747_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_168421_t2))._field_Ident, &__jule_any_type4),jule::Any(_1e305ecd4_GetKindStr(_169021_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1e305ecd4_GetKindStr(_169121_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1e66de55e:;
									++it;
									goto _iter_begin_1e66de55e;
								}
								_iter_end_1e66de55e:;
							};
						}
						_iter_next_1e66dceb9:;
						++it;
						_168018_j++;
						goto _iter_begin_1e66dceb9;
					}
					_iter_end_1e66dceb9:;
				};
			}
			_iter_next_1e66d91b3:;
			++it;
			_167814_i++;
			goto _iter_begin_1e66d91b3;
		}
		_iter_end_1e66d91b3:;
	};
}



inline void _1e310101d_checkTraitDeclMethod(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _170245_f) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_170245_f))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e3011aaa_IsAnonIdent((*((*(_170245_f))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_170245_f))))._field_sema=_self_;
	_1e31001b5_checkFnDeclPrototype(_self_, _170245_f);
	jule::Ptr<_1e305ce36_FnIns> _171013_ins = _1e305b792_instance((*(_170245_f)));;
	_1e30ea699_reloadFnInsTypes(_self_, _171013_ins);
	(*(_171013_ins))._field_reloaded=true;
	_1e305baa0_appendInstance((*(_170245_f)).ptr(), &(_171013_ins));
}



inline void _1e31012c6_checkTraitDeclMethods(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e306d2cb_Trait>* _171646_t) {
	{
		auto expr = &((*((*(_171646_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66e5ea0:;
		if (it != expr_end) {
			jule::I64 _171714_i = it - expr->begin();
			jule::Ptr<_1e305a032_Fn> _171721_f = *it;
			{
				_1e310101d_checkTraitDeclMethod(_self_, &(_171721_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1e306e60c_findMethodInherit((*(_171646_t)).ptr(), &((*(_171721_f))._field_Ident)) != nullptr)) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
					_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1e66e5ea0;
				};
				_julec_label_1e66e8821:;
				{
					auto expr = &((*((*(_171646_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e66e7501:;
					if (it != expr_end) {
						jule::I64 _173317_j = it - expr->begin();
						jule::Ptr<_1e305a032_Fn> _173320_jf = *it;
						{
							{
								
								if ((_173317_j >= _171714_i)) {
									_case_begin_1e66e9bda:;
									{
										goto _iter_end_1e66e7501;
									}
								}
								else if (((*(_171721_f))._field_Ident == (*(_173320_jf))._field_Ident)) {
									_case_begin_1e66e9c62:;
									{
										_1e30e0590_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
										_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1e66e7501;
									}
								}
								_match_end_1e66e9aca:;
							};
						}
						_iter_next_1e66e7501:;
						++it;
						_173317_j++;
						goto _iter_begin_1e66e7501;
					}
					_iter_end_1e66e7501:;
				};
			}
			_iter_next_1e66e5ea0:;
			++it;
			_171714_i++;
			goto _iter_begin_1e66e5ea0;
		}
		_iter_end_1e66e5ea0:;
	};
}



inline void _1e310157e_checkTraitDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e306d2cb_Trait>* _175239_t) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_175239_t))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175239_t)))), &((*((*(_175239_t))))._field_Ident), false)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_175239_t))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e3100c65_checkTraitDeclInherits(_self_, _175239_t);
	_1e31012c6_checkTraitDeclMethods(_self_, _175239_t);
}



inline jule::Bool _1e3101815_checkTraitDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e66eea47:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _176621_t = *it;
			{
				_1e310157e_checkTraitDecl(_self_, &(_176621_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e66eea47:;
			++it;
			goto _iter_begin_1e66eea47;
		}
		_iter_end_1e66eea47:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e3101c11_checkTraitImplMethods(_1e30dc955_Sema* _self_, jule::Ptr<_1e306d2cb_Trait>* _177645_base, jule::Ptr<_1e3095655_Impl>* _177660_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177660_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6701681:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> *_177816_f = it;
			{
				if ((_1e306de7a_FindMethod((*(_177645_base)).ptr(), (*((*(_177816_f))))._field_Ident) == nullptr)) {
					_1e30e0590_pushErr(_self_, (*((*(_177816_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_177645_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177816_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1e6701681:;
			++it;
			goto _iter_begin_1e6701681;
		}
		_iter_end_1e6701681:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e310210c_implToStruct(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _178737_dest, jule::Ptr<_1e3095655_Impl>* _178757_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_178757_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6703cd2:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _179121_f = *it;
			{
				if (((_1e3045c43_FindMethod((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident, (*(_179121_f))._field_Statically) != nullptr) || (_1e30463c5_FindField((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident) != nullptr))) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_179121_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_179121_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1e6703cd2;
				};
				if ((((*((*(_178737_dest))))._field_Generics.len() > 0LL) && ((*(_179121_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_179121_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e6706bc5:;
						if (it != expr_end) {
							jule::Ptr<_1e3031679_GenericDecl> _179924_fg = *it;
							{
								{
									auto expr = &((*((*(_178737_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1e6707599:;
									if (it != expr_end) {
										jule::Ptr<_1e3031679_GenericDecl> _180028_dg = *it;
										{
											if (((*(_179924_fg))._field_Ident == (*(_180028_dg))._field_Ident)) {
												_1e30e0590_pushErr(_self_.ptr(), (*(_179924_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1e6707599:;
										++it;
										goto _iter_begin_1e6707599;
									}
									_iter_end_1e6707599:;
								};
							}
							_iter_next_1e6706bc5:;
							++it;
							goto _iter_begin_1e6706bc5;
						}
						_iter_end_1e6706bc5:;
					};
				};
				_1e30e1618_checkDirectives(_self_, &((*(_179121_f))._field_Directives), jule::Any(_179121_f, &__jule_any_type64));
				(*(_179121_f))._field_sema=_self_;
				(*(_179121_f))._field_Owner=(*(_178737_dest));
				{ jule::Slice<jule::Ptr<_1e305a032_Fn>> &__jule_push_dest = (*((*(_178737_dest))))._field_Methods; __jule_push_dest.push(_179121_f); };
			}
			_iter_next_1e6703cd2:;
			++it;
			goto _iter_begin_1e6703cd2;
		}
		_iter_end_1e6703cd2:;
	};
	{
		auto expr = &((*((*(_178757_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6703bb1:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _181621_v = *it;
			{
				;
				if (((_1e3045c43_FindMethod((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident, true) != nullptr) || (_1e3046084_FindStatic((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident) != nullptr))) {
					_1e30e0590_pushErr(_self_.ptr(), (*(_181621_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181621_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1e6703bb1;
				};
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_178737_dest))))._field_Statics; __jule_push_dest.push(_181621_v); };
			}
			_iter_next_1e6703bb1:;
			++it;
			goto _iter_begin_1e6703bb1;
		}
		_iter_end_1e6703bb1:;
	};
	return __jule_func_result;;
}



inline void _1e31023b5_implTrait(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3095655_Impl>* _182934_decl) {
	jule::Ptr<_1e31a06e9_TypeKind> _183013_base_t = _1e30e6d49_selectType(_self_, &((*((*(_182934_decl))))._field_Base));;
	if ((_183013_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e306d2cb_Trait> _183413_base = _1e31a4654_Trait(_183013_base_t.ptr());;
	if ((_183413_base == nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str(_183013_base_t.ptr()), &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _184113_destT = _1e30e6d49_selectType(_self_, &((*((*(_182934_decl))))._field_Dest));;
	if ((_184113_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3047d55_StructIns> _184513_destS = _1e31a43bd_Struct(_184113_destT.ptr());;
	if ((_184513_destS == nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str(_184113_destT.ptr()), &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e30450c7_Struct> _185213_dest = (*(_184513_destS))._field_Decl;;
	if ((_1e3014cbc_Dir((*((*(_185213_dest))._field_Token))._field_File.ptr()) != _1e3014cbc_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1e310d129_pushImplemented(_183413_base, &(_185213_dest));
	_1e310d415_pushImplements(&(_185213_dest), _183413_base);
	if (((*((*(_182934_decl))))._field_Statics.len() > 0LL)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e3101c11_checkTraitImplMethods(_self_.ptr(), &(_183413_base), _182934_decl)))) {
			_case_begin_1e6716036:;
		}
		else if ((!(_1e310210c_implToStruct(_self_, &(_185213_dest), _182934_decl)))) {
			_case_begin_1e67160ad:;
		}
		_match_end_1e6713572:;
	};
}



inline void _1e310266d_implStruct(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3095655_Impl>* _187235_decl) {
	jule::Ptr<_1e31a06e9_TypeKind> _187313_destT = _1e30e6d49_selectType(_self_, &((*((*(_187235_decl))))._field_Dest));;
	if ((_187313_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3047d55_StructIns> _187713_destS = _1e31a43bd_Struct(_187313_destT.ptr());;
	if ((_187713_destS == nullptr)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str(_187313_destT.ptr()), &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e30450c7_Struct> _188413_dest = (*(_187713_destS))._field_Decl;;
	if ((_1e3014cbc_Dir((*((*(_188413_dest))._field_Token))._field_File.ptr()) != _1e3014cbc_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e310210c_implToStruct(_self_, &(_188413_dest), _187235_decl)))) {
			_case_begin_1e671b5e1:;
		}
		_match_end_1e6719cc6:;
	};
}



inline void _1e3102926_implImpl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3095655_Impl>* _189633_decl) {
	{
		
		if (_1e3095a1d_IsTraitImpl((*(_189633_decl)).ptr())) {
			_case_begin_1e671c1c4:;
			{
				_1e31023b5_implTrait(_self_, _189633_decl);
			}
		}
		else if (_1e3095ca4_IsStructImpl((*(_189633_decl)).ptr())) {
			_case_begin_1e671c24b:;
			{
				_1e310266d_implStruct(_self_, _189633_decl);
			}
		}
		_match_end_1e671c0b4:;
	};
}



inline void _1e3102c89_checkVarDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e310ed40_Var>* _190737_decl, jule::Trait<_1e31c0230_Lookup> _190753_l) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_190737_decl))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1e311045b_IsTypeInferred((*(_190737_decl)).ptr())) {
		if ((!(_1e31101c5_IsInitialized((*(_190737_decl)).ptr())))) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1e30e6211_checkType(_self_, &((*((*(_190737_decl))))._field_Kind), _190753_l);
	};
	if ((*((*(_190737_decl))))._field_Reference) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1e31101c5_IsInitialized((*(_190737_decl)).ptr())))) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Reference) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1e3103042_checkGlobalVarDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e310ed40_Var>* _194443_decl) {
	if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_194443_decl)))), &((*((*(_194443_decl))))._field_Ident), (*((*(_194443_decl))))._field_Binded)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_194443_decl))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_194443_decl))))._field_Binded && (*((*(_194443_decl))))._field_Constant)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_194443_decl))))._field_Binded)) && (!((*((*(_194443_decl))))._field_Constant))) && (!((*((*(_194443_decl))))._field_Statically)))) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1e30e1618_checkDirectives(_self_, &((*((*(_194443_decl))))._field_Directives), jule::Any((*(_194443_decl)), &__jule_any_type8));
	_1e3102c89_checkVarDecl(_self_, _194443_decl, jule::Trait<_1e31c0230_Lookup>(_self_, 3));
}



inline jule::Bool _1e31032c8_checkGlobalDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6729ce7:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _196221_decl = *it;
			{
				_1e3103042_checkGlobalVarDecl(_self_, &(_196221_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e6729ce7:;
			++it;
			goto _iter_begin_1e6729ce7;
		}
		_iter_end_1e6729ce7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e31036c4_checkStructTraitImpl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _197245_strct, jule::Ptr<_1e306d2cb_Trait>* _197266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_197266_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e672b920:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _197321_tf = *it;
			{
				jule::Bool _197417_exist = false;;
				jule::Ptr<_1e305a032_Fn> _197517_sf = _1e3045c43_FindMethod((*(_197245_strct)).ptr(), (*(_197321_tf))._field_Ident, (*(_197321_tf))._field_Statically);;
				jule::Ptr<_1e305ce36_FnIns> _197613_tfK = _1e30e9247_getTraitCheckFnKind(_self_, &(_197321_tf));;
				if ((_197517_sf != nullptr)) {
					jule::Ptr<_1e305ce36_FnIns> _197821_sfK = _1e30e9247_getTraitCheckFnKind(_self_, &(_197517_sf));;
					_197417_exist=_1e305dd9e_equalTrait(_197613_tfK, &(_197821_sfK));
				};
				if (_197417_exist) {
					jule::Ptr<_1e302388b_Directive> _198217_d = _1e3198769_findDirective(&((*(_197517_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_198217_d != nullptr)) {
						_1e30e0590_pushErr(_self_.ptr(), (*(_198217_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1e30e0590_pushErr(_self_.ptr(), (*((*(_197245_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_197266_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1e305ecd4_GetKindStr(_197613_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1e672b920:;
			++it;
			goto _iter_begin_1e672b920;
		}
		_iter_end_1e672b920:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e3103a15_checkStructImpls(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _199641_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199641_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6731cdd:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _199821_trt = *it;
			{
				__jule_func_result=(_1e31036c4_checkStructTraitImpl(_self_, _199641_s, &(_199821_trt)) && __jule_func_result);
			}
			_iter_next_1e6731cdd:;
			++it;
			goto _iter_begin_1e6731cdd;
		}
		_iter_end_1e6731cdd:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e3103d56_checkStructFields(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _200442_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_200442_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6733262:;
		if (it != expr_end) {
			jule::Ptr<_1e30421d4_Field> _200621_f = *it;
			{
				(*(_200621_f))._field_Owner=(*(_200442_st));
				{
					auto expr = &((*((*(_200442_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6733eaa:;
					if (it != expr_end) {
						jule::Ptr<_1e30421d4_Field> _200820_cf = *it;
						{
							if ((_200621_f == _200820_cf)) {
								goto _iter_end_1e6733eaa;
							} else if (((*(_200621_f))._field_Ident == (*(_200820_cf))._field_Ident)) {
								_1e30e0590_pushErr(_self_.ptr(), (*(_200621_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_200621_f))._field_Ident, &__jule_any_type4)}));
								_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1e6733eaa:;
						++it;
						goto _iter_begin_1e6733eaa;
					}
					_iter_end_1e6733eaa:;
				};
			}
			_iter_next_1e6733262:;
			++it;
			goto _iter_begin_1e6733262;
		}
		_iter_end_1e6733262:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1e310410e_checkStructDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _202140_s) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_202140_s))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_202140_s)))), &((*((*(_202140_s))))._field_Ident), (*((*(_202140_s))))._field_Binded)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_202140_s))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e30e1618_checkDirectives(_self_, &((*((*(_202140_s))))._field_Directives), jule::Any((*(_202140_s)), &__jule_any_type65));
	{
		
		if ((!(_1e30ee439_checkDeclGenerics(_self_.ptr(), &((*((*(_202140_s))))._field_Generics))))) {
			_case_begin_1e6738d4a:;
		}
		else if ((!(_1e3103d56_checkStructFields(_self_, _202140_s)))) {
			_case_begin_1e6738db1:;
		}
		else if ((!(_1e3103a15_checkStructImpls(_self_, _202140_s)))) {
			_case_begin_1e6738e27:;
		}
		else if ((!(_1e3104c47_checkFuncDeclsBy(_self_, &((*((*(_202140_s))))._field_Methods))))) {
			_case_begin_1e6738e9e:;
		}
		_match_end_1e6738872:;
	};
}



inline jule::Bool _1e3104395_checkStructDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e673ac4d:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _204121_s = *it;
			{
				_1e310410e_checkStructDecl(_self_, &(_204121_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e673ac4d:;
			++it;
			goto _iter_begin_1e673ac4d;
		}
		_iter_end_1e673ac4d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e310464d_checkAnonFuncDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _205142_f) {
	(*((*(_205142_f))))._field_sema=_self_;
	_1e31001b5_checkFnDeclPrototype(_self_, _205142_f);
}



inline void _1e3104906_checkFuncDecl(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _205638_f) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_205638_f))))._field_Ident)) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e305aede_IsAnon((*(_205638_f)).ptr())) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1e30e1618_checkDirectives(_self_, &((*((*(_205638_f))))._field_Directives), jule::Any((*(_205638_f)), &__jule_any_type64));
	_1e310464d_checkAnonFuncDecl(_self_, _205638_f);
	if ((((*((*(_205638_f))))._field_Owner == nullptr) && _1e30e12a5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_205638_f)))), &((*((*(_205638_f))))._field_Ident), (*((*(_205638_f))))._field_Binded))) {
		if ((*((*(_205638_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1e305a032_Fn> _206817_init = _1e30dded9_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206817_init != nullptr)) {
				return;;
			};
		};
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_205638_f))))._field_Ident, &__jule_any_type4)}));
		_1e30e0903_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e3104c47_checkFuncDeclsBy(jule::Ptr<_1e30dc955_Sema> _self_, jule::Slice<jule::Ptr<_1e305a032_Fn>>* _207841_funcs) {
	{
		auto expr = _207841_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67431d9:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _207921_f = *it;
			{
				_1e3104906_checkFuncDecl(_self_, &(_207921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1e67431d9:;
			++it;
			goto _iter_begin_1e67431d9;
		}
		_iter_end_1e67431d9:;
	};
	return true;;
}



inline jule::Bool _1e3104ecd_checkFuncDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1e3104c47_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1e31053eb_pushCycleError(_1e30dc955_Sema* _self_, jule::Str* _209430_st1, jule::Str* _209441_st2, _227713453_StrBuilder* _209456_message) {
	;
	jule::Str _20969_refersTo = _2277b225a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_209430_st1)), &__jule_any_type4),jule::Any((*(_209441_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _209713_buf = _22771d2c6_Buf(_209456_message);;
	_22771c02d_WriteStr(_209456_message, _2276ed680_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22771c02d_WriteStr(_209456_message, _20969_refersTo);
	_22771c2d6_WriteByte(_209456_message, '\n');
	_22771bc75_Write(_209456_message, _209713_buf);
}



inline void _1e3105aa0_checkPackageDecls(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6748310:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _212121_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _212121_f);
				if ((!(_1e30ec35a_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e6748310:;
			++it;
			goto _iter_begin_1e6748310;
		}
		_iter_end_1e6748310:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e674a8d9:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _212821_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _212821_f);
				if ((!(_1e3101815_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e674a8d9:;
			++it;
			goto _iter_begin_1e674a8d9;
		}
		_iter_end_1e674a8d9:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e674a19c:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _213521_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _213521_f);
				if ((!(_1e31032c8_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e674a19c:;
			++it;
			goto _iter_begin_1e674a19c;
		}
		_iter_end_1e674a19c:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e674c875:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _214221_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _214221_f);
				{
					
					if ((!(_1e3104ecd_checkFuncDecls(_self_)))) {
						_case_begin_1e674d6bc:;
					}
					else if ((!(_1e3104395_checkStructDecls(_self_)))) {
						_case_begin_1e674d733:;
					}
					else {
						_case_begin_1e674d656:;
						{
							goto _iter_next_1e674c875;
						}
					}
					_match_end_1e674d601:;
				};
				return;;
			}
			_iter_next_1e674c875:;
			++it;
			goto _iter_begin_1e674c875;
		}
		_iter_end_1e674c875:;
	};
}



inline void _1e3105e13_checkDataForTypeInference(_1e30dc955_Sema* _self_, jule::Ptr<_1e316ee05_Data>* _215445_d, jule::Ptr<_20cb74604_Token>* _215456_err_token) {
	{
		
		if (_1e31702ac_IsNil((*(_215445_d)).ptr())) {
			_case_begin_1e674e811:;
			{
				_1e30e0590_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1e3170543_IsVoid((*(_215445_d)).ptr())) {
			_case_begin_1e674e888:;
			{
				_1e30e0590_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_215445_d))))._field_Kind))._field_Variadic) {
			_case_begin_1e674e910:;
			{
				_1e30e0590_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e674e6e0:;
	};
}



inline void _1e31061bb_checkVarValue(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e310ed40_Var>* _216638_v) {
	if (_1e311045b_IsTypeInferred((*(_216638_v)).ptr())) {
		(*((*(_216638_v))))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind});
		_1e3105e13_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		_1e30eb5ac_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1e31aeae3_Arr> _217917_arr = _1e31a3b1a_Arr((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217917_arr != nullptr)) {
			if ((*(_217917_arr))._field_Auto) {
				jule::Ptr<_1e31aeae3_Arr> _218221_dataArr = _1e31a3b1a_Arr((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_218221_dataArr != nullptr)) {
					(*(_217917_arr))._field_N=(*(_218221_dataArr))._field_N;
				};
			};
		};
		if (_1e30e809d_checkAssignType(_self_, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token)) {
			_1e30eb5ac_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_216638_v))))._field_Reference && (!(_1e31bbbdd_isValidForRef(&((*((*((*(_216638_v))))._field_Kind))._field_Kind)))))) {
		_1e30e0590_pushErr(_self_.ptr(), (*((*(_216638_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_216638_v))))._field_Constant) {
		jule::Bool _220413_comptime = _1e31a4e07_comptime((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_1e31707c9_IsConst((*((*((*(_216638_v))))._field_Value))._field_Data.ptr()))) && (!(_220413_comptime)))) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_220413_comptime && (_1e31a61e4_comptimeRange((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_1e30e0590_pushErr(_self_.ptr(), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1e31a4b71_Tup((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_216638_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1e310652e_evalVarValue(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e310ed40_Var>* _222237_decl, jule::Trait<_1e31c0230_Lookup> _222253_l) {
	if ((!(_1e31101c5_IsInitialized((*(_222237_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1e3171ae9_Eval> _222717_eval = nullptr;;
	if (((*((*(_222237_decl))))._field_Kind != nullptr)) {
		_222717_eval=_1e30e7300_evalpd(_self_, _222253_l, (*((*((*(_222237_decl))))._field_Kind))._field_Kind, (*(_222237_decl)));
	} else {
		_222717_eval=_1e30e7300_evalpd(_self_, _222253_l, nullptr, (*(_222237_decl)));
	};
	(*(_222717_eval))._field_immutable=(!((*((*(_222237_decl))))._field_Mutable));
	(*((*((*(_222237_decl))))._field_Value))._field_Data=_1e318ed59_evalExpr(_222717_eval, (*((*((*(_222237_decl))))._field_Value))._field_Expr);
}



inline void _1e3106892_checkVar(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e310ed40_Var>* _223933_decl, jule::Trait<_1e31c0230_Lookup> _223949_l) {
	_1e310652e_evalVarValue(_self_, _223933_decl, _223949_l);
	if (((*((*((*(_223933_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1e31061bb_checkVarValue(_self_, _223933_decl);
}



inline void _1e3106a90_checkGlobals(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67676b4:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _224921_decl = *it;
			{
				if ((*(_224921_decl))._field_Binded) {
					goto _iter_next_1e67676b4;
				};
				if (((_1e31101c5_IsInitialized(_224921_decl.ptr()) && ((*((*(_224921_decl))._field_Value))._field_Data == nullptr)) || (_1e311045b_IsTypeInferred(_224921_decl.ptr()) && ((*((*(_224921_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1e3106892_checkVar(_self_, &(_224921_decl), jule::Trait<_1e31c0230_Lookup>(_self_, 3));
				};
			}
			_iter_next_1e67676b4:;
			++it;
			goto _iter_begin_1e67676b4;
		}
		_iter_end_1e67676b4:;
	};
}



inline jule::Ptr<_1e305ce36_FnIns> _1e3106e8b_readyToCheckFn(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _226339_s, jule::Ptr<_1e305a032_Fn>* _226359_f) {
	jule::Ptr<_1e305ce36_FnIns> _226413_ins = _1e305b792_instance((*(_226359_f)));;
	if (((*((*(_226359_f))))._field_Instances.len() != 0LL)) {
		return _226413_ins;;
	};
	(*(_226413_ins))._field_Owner=(*(_226339_s));
	_1e305baa0_appendInstance((*(_226359_f)).ptr(), &(_226413_ins));
	(*(_226413_ins))._field_reloaded=true;
	if (_1e30ea699_reloadFnInsTypes(_self_, _226413_ins)) {
		return _226413_ins;;
	};
	return nullptr;;
}



inline void _1e31072ee_checkTypeMethod(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _227740_s, jule::Ptr<_1e305a032_Fn>* _227760_f) {
	if (((*((*(_227760_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e305ce36_FnIns> _228213_ins = (*((*(_227760_f))))._field_Instances[0LL];;
	if (((*((*(_228213_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1e3109ca2_checkFnIns(_self_, &(_228213_ins));
}



inline jule::Ptr<_1e305ce36_FnIns> _1e31077a5_checkStructInsOp(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _229041_s, jule::Ptr<_1e305a032_Fn>* _229061_f, jule::Fn<jule::Bool(jule::Ptr<_1e305a032_Fn>)> _229069_p) {
	if (((((*(_229061_f)) == nullptr) || ((*((*(_229061_f))))._field_Generics.len() > 0LL)) || (!(_229069_p((*(_229061_f))))))) {
		return nullptr;;
	};
	return (*((*(_229061_f))))._field_Instances[0LL];;
}



inline jule::Bool _1e3107ba1_checkStructEnv(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _230039_s, jule::Ptr<_20cb74604_Token> _230058_errorToken) {
	jule::Bool __jule_func_result = false;
	_1e31b25a7_typeChecker _230113_tc = _1e31b25a7_typeChecker{._field_s=(*((*((*(_230039_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1e31c0230_Lookup>((*((*((*(_230039_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1e31c0230_Lookup>((*((*((*(_230039_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1e31b15b7_referencer>(_1e31b15b7_referencer{._field_ident=(*((*((*(_230039_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_230039_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_230039_s))))._field_Refers, };;
	if (((*((*(_230039_s))))._field_Generics.len() > 0LL)) {
		_230113_tc._field_useGenerics=jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>::alloc(0LL, (*((*(_230039_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_230039_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e67736e2:;
			if (it != expr_end) {
				jule::I64 _231418_i = it - expr->begin();
				jule::Ptr<_1e319dd13_InsGeneric> _231425_g = *it;
				{
					jule::Ptr<_1e3031679_GenericDecl> _231521_decl = (*((*((*(_230039_s))))._field_Decl))._field_Generics[_231418_i];;
					{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = _230113_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Token=(*(_231521_decl))._field_Token, ._field_Ident=(*(_231521_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_231425_g))._field_Kind}), })); };
				}
				_iter_next_1e67736e2:;
				++it;
				_231418_i++;
				goto _iter_begin_1e67736e2;
			}
			_iter_end_1e67736e2:;
		};
	};
	jule::Ptr<_1e3169ad1_SymbolTable> _232413_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1e30e0172_setCurrentFile(_self_.ptr(), _232413_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_230039_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1e3169ad1_SymbolTable> _232817_file = _1e30db69b_findFile(&((*(_self_))._field_files), &((*((*((*((*(_230039_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232817_file != nullptr)) {
			_1e30e0172_setCurrentFile(_self_.ptr(), _232817_file);
		};
	};
	if (((*((*(_230039_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1e3093620_constraintChecker> _233517_cc = _1e30e5d15_constraintChecker(_self_);;
		(*(_233517_cc))._field_et=_230058_errorToken;
		(*(_233517_cc))._field_si=(*(_230039_s));
		(*(_233517_cc))._field_genericsA=_230113_tc._field_useGenerics;
		(*(_233517_cc))._field_uniq=true;
		if ((!(_1e3094555_check(_233517_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_230039_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _234817_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_230113_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_230039_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e67811b1:;
			if (it != expr_end) {
				jule::Ptr<_1e310ed40_Var> _235025_v = *it;
				{
					_1e3102c89_checkVarDecl(_self_, &(_235025_v), jule::Trait<_1e31c0230_Lookup>(_self_, 3));
					_1e3106892_checkVar(_self_, &(_235025_v), jule::Trait<_1e31c0230_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234817_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1e67811b1:;
				++it;
				goto _iter_begin_1e67811b1;
			}
			_iter_end_1e67811b1:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_230113_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1e3171ae9_Eval> _236113_eval = _1e30e7a3c_eval(_self_, jule::Trait<_1e31c0230_Lookup>(_self_, 3));;
	(*((*(_230039_s))))._field_Comparable=(!((*((*((*(_230039_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_230039_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67847ad:;
		if (it != expr_end) {
			jule::Ptr<_1e30472a5_FieldIns> _236321_f = *it;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _236417_kind = _1e31b9c52_checkDecl(&_230113_tc, &((*((*((*(_236321_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_236417_kind != nullptr) && __jule_func_result);
				if ((_236417_kind == nullptr)) {
					if (((_self_ != (*((*((*(_230039_s))))._field_Decl))._field_sema) && ((*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_230039_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1e67847ad;
				};
				(*(_236321_f))._field_Kind=_236417_kind;
				(*((*(_230039_s))))._field_Mutable=((*((*(_230039_s))))._field_Mutable || ((!((*((*(_236321_f))._field_Decl))._field_Mutable)) && _1e31a207a_Mutable((*(_236321_f))._field_Kind.ptr())));
				(*((*(_230039_s))))._field_Comparable=((*((*(_230039_s))))._field_Comparable && _1e31a1ce4_Comparable((*(_236321_f))._field_Kind.ptr()));
				if (((*((*(_236321_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1e67847ad;
				};
				(*(_236113_eval))._field_prefix=(*(_236321_f))._field_Kind;
				(*(_236113_eval))._field_field=_236321_f;
				(*(_236321_f))._field_Default=_1e318ed59_evalExpr(_236113_eval, (*((*(_236321_f))._field_Decl))._field_Default);
				if (((*(_236321_f))._field_Default == nullptr)) {
					goto _iter_next_1e67847ad;
				};
				;
				_1e30e809d_checkAssignType(_self_, false, &((*(_236321_f))._field_Kind), &((*(_236321_f))._field_Default), (*((*((*(_236321_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1e67847ad:;
			++it;
			goto _iter_begin_1e67847ad;
		}
		_iter_end_1e67847ad:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e310809c_precheckStructIns(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _239742_s, jule::Ptr<_20cb74604_Token> _239761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1e3107ba1_checkStructEnv(_self_, _239742_s, _239761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_239742_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e678eca2:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _240221_f = *it;
			{
				if (((*(_240221_f))._field_Generics.len() == 0LL)) {
					if ((_1e3106e8b_readyToCheckFn(_self_, _239742_s, &(_240221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1e678eca2:;
			++it;
			goto _iter_begin_1e678eca2;
		}
		_iter_end_1e678eca2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e3108355_checkStructIns(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns>* _241239_s) {
	{
		auto expr = &((*((*(_241239_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6790687:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _241321_f = *it;
			{
				_1e31072ee_checkTypeMethod(_self_, _241239_s, &(_241321_f));
			}
			_iter_next_1e6790687:;
			++it;
			goto _iter_begin_1e6790687;
		}
		_iter_end_1e6790687:;
	};
}



inline void _1e310860d_checkTypeStruct(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _241840_s) {
	if ((*((*(_241840_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241840_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6792722:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _243121_ins = *it;
			{
				_1e3108355_checkStructIns(_self_, &(_243121_ins));
			}
			_iter_next_1e6792722:;
			++it;
			goto _iter_begin_1e6792722;
		}
		_iter_end_1e6792722:;
	};
}



inline void _1e310880b_checkStructTypes(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6793aec:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _243721_s = *it;
			{
				_1e310860d_checkTypeStruct(_self_, &(_243721_s));
			}
			_iter_next_1e6793aec:;
			++it;
			goto _iter_begin_1e6793aec;
		}
		_iter_end_1e6793aec:;
	};
}



inline void _1e3108ab4_checkStructInsOperators(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e3047d55_StructIns> _244247_s) {
	{
		auto expr = &((*(_244247_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e679514d:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _244321_m = *it;
			{
				{
					auto &_match_expr{ (*(_244321_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1e67960d8:;
						{
							(*(_244247_s))._field_Operators._field_Eq=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3111b99_Eq);
							(*(_244247_s))._field_Comparable=((*(_244247_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1e6796160:;
						{
							(*(_244247_s))._field_Operators._field_Gt=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3111e63_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1e67961d7:;
						{
							(*(_244247_s))._field_Operators._field_GtEq=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e311222c_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1e679625e:;
						{
							(*(_244247_s))._field_Operators._field_Lt=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31124e6_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1e67962d6:;
						{
							(*(_244247_s))._field_Operators._field_LtEq=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31127b0_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1e679635d:;
						{
							(*(_244247_s))._field_Operators._field_Shl=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3112ded_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1e67963d5:;
						{
							(*(_244247_s))._field_Operators._field_Shr=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31131b7_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1e679645c:;
						{
							(*(_244247_s))._field_Operators._field_Add=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3113481_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1e67964d4:;
						{
							(*(_244247_s))._field_Operators._field_Sub=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e311374a_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1e679655b:;
						{
							(*(_244247_s))._field_Operators._field_Div=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3113a14_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1e67965d3:;
						{
							(*(_244247_s))._field_Operators._field_Mul=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3113ccd_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1e679665a:;
						{
							(*(_244247_s))._field_Operators._field_Mod=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3114097_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1e67966d2:;
						{
							(*(_244247_s))._field_Operators._field_BitAnd=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3114361_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1e6796759:;
						{
							(*(_244247_s))._field_Operators._field_BitOr=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e311462a_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1e67967d1:;
						{
							(*(_244247_s))._field_Operators._field_BitXor=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31148e4_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1e6796858:;
						{
							(*(_244247_s))._field_Operators._field_Neg=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3115032_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1e67968d0:;
						{
							(*(_244247_s))._field_Operators._field_Pos=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31152eb_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1e6796957:;
						{
							(*(_244247_s))._field_Operators._field_BitNot=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31155b5_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1e67969ce:;
						{
							(*(_244247_s))._field_Operators._field_AddAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3115c03_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1e6796a56:;
						{
							(*(_244247_s))._field_Operators._field_SubAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3115ebc_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1e6796acd:;
						{
							(*(_244247_s))._field_Operators._field_DivAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3116286_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1e6796b55:;
						{
							(*(_244247_s))._field_Operators._field_MulAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3116550_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1e6796bcc:;
						{
							(*(_244247_s))._field_Operators._field_ModAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3116819_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1e6796c54:;
						{
							(*(_244247_s))._field_Operators._field_ShlAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3116ad3_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1e6796ccb:;
						{
							(*(_244247_s))._field_Operators._field_ShrAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3116d9c_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1e6796d53:;
						{
							(*(_244247_s))._field_Operators._field_BitOrAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3117166_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1e6796dca:;
						{
							(*(_244247_s))._field_Operators._field_BitAndAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e3117430_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1e6796e52:;
						{
							(*(_244247_s))._field_Operators._field_BitXorAssign=_1e31077a5_checkStructInsOp(_self_, &(_244247_s), &(_244321_m), static__1e31176e9_BitXorAssign);
						}
					}
					_match_end_1e6795d41:;
				};
			}
			_iter_next_1e679514d:;
			++it;
			goto _iter_begin_1e679514d;
		}
		_iter_end_1e679514d:;
	};
}



inline void _1e3108d6c_precheckStructType(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e30450c7_Struct>* _250643_s) {
	if ((*((*(_250643_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_250643_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_250643_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e3047d55_StructIns> _251717_ins = _1e3045539_instance((*(_250643_s)));;
		(*(_251717_ins))._field_Checked=true;
		_1e3045847_appendInstance((*(_250643_s)).ptr(), &(_251717_ins));
		_1e310809c_precheckStructIns(_self_, &(_251717_ins), nullptr);
	};
	_1e3108ab4_checkStructInsOperators(_self_, (*((*(_250643_s))))._field_Instances[0LL]);
}



inline void _1e310906a_precheckStructTypes(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67acb5a:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _252721_s = *it;
			{
				_1e3108d6c_precheckStructType(_self_, &(_252721_s));
			}
			_iter_next_1e67acb5a:;
			++it;
			goto _iter_begin_1e67acb5a;
		}
		_iter_end_1e67acb5a:;
	};
}



inline void _1e3109323_checkRets(_1e30dc955_Sema* _self_, jule::Ptr<_1e305ce36_FnIns>* _253233_f) {
	if (_1e305a4a5_IsVoid((*((*(_253233_f))))._field_Decl.ptr())) {
		return;;
	};
	_1e310b798_missingRetChecker _25369_mrc = static__1e310bb61_new();;
	jule::Bool _25379_ok = _1e310cc83_check(&_25369_mrc, (*((*(_253233_f))))._field_Scope);;
	if ((!(_25379_ok))) {
		_1e30e0590_pushErr(_self_, (*((*((*(_253233_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1e3109686_checkFnInsSc(_1e30dc955_Sema* _self_, jule::Ptr<_1e305ce36_FnIns>* _254336_f, jule::Ptr<_1e30a2d8d_scopeChecker>* _254352_sc) {
	_1e30dac50_appendRetVars(&((*((*((*(_254352_sc))))._field_table))._field_Vars), _254336_f);
	_1e30db03b_appendParamVars(&((*((*((*(_254352_sc))))._field_table))._field_Vars), _254336_f);
	_1e30db327_appendGenericTypeAliases(&((*((*((*(_254352_sc))))._field_table))._field_TypeAliases), _254336_f);
	_1e30b4850_check((*(_254352_sc)), &((*((*((*(_254336_f))))._field_Decl))._field_Scope), &((*((*(_254336_f))))._field_Scope));
	if ((!(_1e30a5962_stopped((*(_254352_sc)).ptr())))) {
		_1e3109323_checkRets(_self_, _254336_f);
	};
}



inline void _1e31099e9_checkFnInsCaller(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns>* _255641_f, jule::Ptr<_20cb74604_Token> _255656_caller) {
	if ((*((*((*(_255641_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1e3169ad1_SymbolTable> _256113_old = (*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1e30e0172_setCurrentFile((*((*((*(_255641_f))))._field_Decl))._field_sema.ptr(), _256113_old);
	});;
	jule::Ptr<_1e3169ad1_SymbolTable> _256313_file = _1e30db69b_findFile(&((*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_255641_f))))._field_Decl))._field_Token))._field_File));;
	if ((_256313_file != nullptr)) {
		_1e30e0172_setCurrentFile((*((*((*(_255641_f))))._field_Decl))._field_sema.ptr(), _256313_file);
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _256813_sc = _1e3097c2e_newScopeChecker(&((*((*((*(_255641_f))))._field_Decl))._field_sema), (*(_255641_f)));;
	(*(_256813_sc))._field_calledFrom=_255656_caller;
	_1e3109686_checkFnInsSc(_self_.ptr(), _255641_f, &(_256813_sc));
	if (((*((*((*(_255641_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_255641_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1e3109ca2_checkFnIns(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305ce36_FnIns>* _257835_f) {
	_1e31099e9_checkFnInsCaller(_self_, _257835_f, nullptr);
}



inline void _1e310a05a_checkFunc(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _258234_f) {
	if ((*((*(_258234_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_258234_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_258234_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67ba1a6:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _259221_ins = *it;
			{
				_1e3109ca2_checkFnIns(_self_, &(_259221_ins));
			}
			_iter_next_1e67ba1a6:;
			++it;
			goto _iter_begin_1e67ba1a6;
		}
		_iter_end_1e67ba1a6:;
	};
}



inline void _1e310a313_checkTestFn(_1e30dc955_Sema* _self_, jule::Ptr<_1e305ce36_FnIns>* _259735_f) {
	if ((*((*((*(_259735_f))))._field_Decl))._field_Public) {
		_1e30e0590_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_259735_f))))._field_Decl))._field_Unsafety || (!(_1e305a4a5_IsVoid((*((*(_259735_f))))._field_Decl.ptr())))) || ((*((*((*(_259735_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_259735_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_259735_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_259735_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1e30e0590_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e31abcee_Sptr> _261513_sptr = _1e31a30d1_Sptr((*((*((*(_259735_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_261513_sptr == nullptr)) {
		_1e30e0590_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3047d55_StructIns> _26229_s = _1e31a43bd_Struct((*(_261513_sptr))._field_Elem.ptr());;
	if (((_26229_s == nullptr) || (!(_1e30c23b8_isStdPackage(&((*((*((*((*(_26229_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1e30e0590_pushErr(_self_, (*((*((*(_259735_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e30e0903_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e310a5bb_precheckFunc(jule::Ptr<_1e30dc955_Sema> _self_, jule::Ptr<_1e305a032_Fn>* _263037_f) {
	if ((*((*(_263037_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_263037_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263037_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e305ce36_FnIns> _264117_ins = _1e305b50b_instanceForce((*(_263037_f)));;
		{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*((*(_263037_f))))._field_Instances; __jule_push_dest.push(_264117_ins); };
		jule::Bool _264313_ok = _1e30ea699_reloadFnInsTypes(_self_, _264117_ins);;
		(*(_264117_ins))._field_reloaded=true;
		if ((_264313_ok && _1e31bb319_hasDirective(&((*((*(_263037_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1e310a313_checkTestFn(_self_.ptr(), &(_264117_ins));
		};
	};
}



inline void _1e310a7b9_precheckFuncs(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67c8538:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _265421_decl = *it;
			{
				{
					auto expr = &((*(_265421_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e67c9171:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _265525_m = *it;
						{
							_1e310a5bb_precheckFunc(_self_, &(_265525_m));
						}
						_iter_next_1e67c9171:;
						++it;
						goto _iter_begin_1e67c9171;
					}
					_iter_end_1e67c9171:;
				};
			}
			_iter_next_1e67c8538:;
			++it;
			goto _iter_begin_1e67c8538;
		}
		_iter_end_1e67c8538:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67c9b11:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _265921_decl = *it;
			{
				_1e310a5bb_precheckFunc(_self_, &(_265921_decl));
			}
			_iter_next_1e67c9b11:;
			++it;
			goto _iter_begin_1e67c9b11;
		}
		_iter_end_1e67c9b11:;
	};
}



inline void _1e310a9b7_checkFuncs(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67ca3d6:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _266621_decl = *it;
			{
				_1e310a05a_checkFunc(_self_, &(_266621_decl));
			}
			_iter_next_1e67ca3d6:;
			++it;
			goto _iter_begin_1e67ca3d6;
		}
		_iter_end_1e67ca3d6:;
	};
}



inline void _1e310abb5_checkPackageTypes(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67cb2d8:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _267421_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _267421_f);
				_1e3106a90_checkGlobals(_self_);
				_1e310a7b9_precheckFuncs(_self_);
				_1e310906a_precheckStructTypes(_self_);
			}
			_iter_next_1e67cb2d8:;
			++it;
			goto _iter_begin_1e67cb2d8;
		}
		_iter_end_1e67cb2d8:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67cd0dc:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _268521_f = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _268521_f);
				_1e310a9b7_checkFuncs(_self_);
				_1e310880b_checkStructTypes(_self_);
			}
			_iter_next_1e67cd0dc:;
			++it;
			goto _iter_begin_1e67cd0dc;
		}
		_iter_end_1e67cd0dc:;
	};
}



inline void _1e310adb3_setFileSemaFields(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67cdab0:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _269321_f = *it;
			{
				(*(_269321_f))._field_sema=_self_;
			}
			_iter_next_1e67cdab0:;
			++it;
			goto _iter_begin_1e67cdab0;
		}
		_iter_end_1e67cdab0:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67d02dc:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _269621_st = *it;
			{
				(*(_269621_st))._field_sema=_self_;
			}
			_iter_next_1e67d02dc:;
			++it;
			goto _iter_begin_1e67d02dc;
		}
		_iter_end_1e67d02dc:;
	};
}



inline void _1e310b0b1_setSemaFields(jule::Ptr<_1e30dc955_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67d0d15:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _270221_file = *it;
			{
				_1e30e0172_setCurrentFile(_self_.ptr(), _270221_file);
				_1e310adb3_setFileSemaFields(_self_);
			}
			_iter_next_1e67d0d15:;
			++it;
			goto _iter_begin_1e67d0d15;
		}
		_iter_end_1e67d0d15:;
	};
}



inline void _1e310b369_check(jule::Ptr<_1e30dc955_Sema> _self_, jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _270830_files) {
	(*(_self_))._field_files=(*(_270830_files));
	_1e30e4011_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1e310b0b1_setSemaFields(_self_);
	_1e30e4a06_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1e30e440c_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1e30e460a_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1e3105aa0_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1e310abb5_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1e30dc955_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1e310b798_missingRetChecker static__1e310bb61_new(void) {
	return _1e310b798_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1e310be6e_checkConditional(_1e310b798_missingRetChecker* _self_, jule::Ptr<_1e309b6c2_Conditional> _275635_c) {
	{
		auto expr = &((*(_275635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67d625a:;
		if (it != expr_end) {
			jule::Ptr<_1e309aea7_If> _275721_elif = *it;
			{
				if ((_275721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1e310c942_checkScope(_self_, (*(_275721_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1e67d625a:;
			++it;
			goto _iter_begin_1e67d625a;
		}
		_iter_end_1e67d625a:;
	};
	return (((*(_275635_c))._field_Default != nullptr) && _1e310c942_checkScope(_self_, (*((*(_275635_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1e310c2b0_checkMatch(_1e310b798_missingRetChecker* _self_, jule::Ptr<_1e309ebc0_Match> _276829_m) {
	{
		auto expr = &((*(_276829_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67d7800:;
		if (it != expr_end) {
			jule::Ptr<_1e30a0808_Case> _276921_c = *it;
			{
				if ((_276921_c == nullptr)) {
					return false;;
				};
				jule::I64 _277313_n = (*(_self_))._field_breaked.len();;
				jule::Bool _277413_ok = _1e310c942_checkScope(_self_, (*(_276921_c))._field_Scope);;
				{
					
					if ((_277313_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1e67da36e:;
						{
							return false;;
						}
					}
					else if ((!(_277413_ok))) {
						_case_begin_1e67da3e6:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1e67da46d;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1e67da46d:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276921_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1e67d7800;
						}
					}
					_match_end_1e67da2a3:;
				};
			}
			_iter_next_1e67d7800:;
			++it;
			goto _iter_begin_1e67d7800;
		}
		_iter_end_1e67d7800:;
	};
	return (((*(_276829_m))._field_Default != nullptr) && _1e310c942_checkScope(_self_, (*((*(_276829_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1e310c601_checkInfIter(_1e310b798_missingRetChecker* _self_, jule::Ptr<_1e309b9be_InfIter> _279431_it) {
	jule::I64 _27959_n = (*(_self_))._field_breaked.len();;
	if (_1e310c942_checkScope(_self_, (*(_279431_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
		return true;;
	};
	if ((_27959_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _280113_itaddr = static_cast<jule::Uintptr>(_279431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27959_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1e67dddde:;
			if (it != expr_end) {
				jule::Uintptr _280220_addr = *it;
				{
					if ((_280113_itaddr == _280220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
						return false;;
					};
				}
				_iter_next_1e67dddde:;
				++it;
				goto _iter_begin_1e67dddde;
			}
			_iter_end_1e67dddde:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27959_n);
	};
	return true;;
}



inline jule::Bool _1e310c942_checkScope(_1e310b798_missingRetChecker* _self_, jule::Ptr<_1e309aa89_Scope> _281329_s) {
	if ((_281329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_281329_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e67e0462:;
		if (it != expr_end) {
			jule::Any _281721_st = *it;
			{
				{
					auto &_match_expr{ _281721_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1e67e1276:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1e67e12dc:;
						{
							jule::Uintptr _282317_addr = (*(_281721_st.cast_ptr<_1e309d130_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_282317_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_282317_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1e67e1353:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1e67e13ca:;
						{
							if (_1e310c601_checkInfIter(_self_, _281721_st.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1e67e1452:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1e67e14c9:;
						{
							if (_1e310c942_checkScope(_self_, _281721_st.cast_ptr<_1e309aa89_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1e67e1551:;
						{
							{
								auto &_match_expr{ (*(_281721_st.cast_ptr<_1e316ee05_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1e67e4de5:;
									{
										return true;;
									}
								}
								_match_end_1e67e4d5c:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1e67e15c8:;
						{
							if (_1e310be6e_checkConditional(_self_, _281721_st.cast_ptr<_1e309b6c2_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1e67e1650:;
						{
							if (_1e310c2b0_checkMatch(_self_, _281721_st.cast_ptr<_1e309ebc0_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1e67e1166:;
				};
			}
			_iter_next_1e67e0462:;
			++it;
			goto _iter_begin_1e67e0462;
		}
		_iter_end_1e67e0462:;
	};
	return false;;
}



inline jule::Bool _1e310cc83_check(_1e310b798_missingRetChecker* _self_, jule::Ptr<_1e309aa89_Scope> _285924_s) {
	return _1e310c942_checkScope(_self_, _285924_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e310b798_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e310db85_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31101c5_IsInitialized(_1e310ed40_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1e311045b_IsTypeInferred(_1e310ed40_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1e31106e2_untypedConstant(_1e310ed40_Var* _self_) {
	return (_1e311045b_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e310ed40_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e3111292_Dispose(jule::Ptr<_1e305a032_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1e305a4a5_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1e3058e10_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1e311155b_Str(jule::Ptr<_1e305a032_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1e305a4a5_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1e3058e10_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1e31a82c3_Prim> _399_prim = _1e31a2d4a_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1e31ab75a_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1e31118d0_logical(jule::Ptr<_1e305a032_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1e305a4a5_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1e3058e10_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1e31a82c3_Prim> _649_prim = _1e31a2d4a_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1e31ab4c4_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1e31a43bd_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1e3111b99_Eq(jule::Ptr<_1e305a032_Fn> _7218_f) {
	return static__1e31118d0_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1e3111e63_Gt(jule::Ptr<_1e305a032_Fn> _7718_f) {
	return static__1e31118d0_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1e311222c_GtEq(jule::Ptr<_1e305a032_Fn> _8220_f) {
	return static__1e31118d0_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1e31124e6_Lt(jule::Ptr<_1e305a032_Fn> _8718_f) {
	return static__1e31118d0_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1e31127b0_LtEq(jule::Ptr<_1e305a032_Fn> _9220_f) {
	return static__1e31118d0_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1e3112b34_result(jule::Ptr<_1e305a032_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1e305a4a5_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1e3058e10_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1e31a43bd_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1e3112ded_Shl(jule::Ptr<_1e305a032_Fn> _11819_f) {
	return static__1e3112b34_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1e31131b7_Shr(jule::Ptr<_1e305a032_Fn> _12319_f) {
	return static__1e3112b34_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1e3113481_Add(jule::Ptr<_1e305a032_Fn> _12819_f) {
	return static__1e3112b34_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1e311374a_Sub(jule::Ptr<_1e305a032_Fn> _13319_f) {
	return static__1e3112b34_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1e3113a14_Div(jule::Ptr<_1e305a032_Fn> _13819_f) {
	return static__1e3112b34_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1e3113ccd_Mul(jule::Ptr<_1e305a032_Fn> _14319_f) {
	return static__1e3112b34_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1e3114097_Mod(jule::Ptr<_1e305a032_Fn> _14819_f) {
	return static__1e3112b34_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1e3114361_BitAnd(jule::Ptr<_1e305a032_Fn> _15322_f) {
	return static__1e3112b34_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1e311462a_BitOr(jule::Ptr<_1e305a032_Fn> _15821_f) {
	return static__1e3112b34_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1e31148e4_BitXor(jule::Ptr<_1e305a032_Fn> _16322_f) {
	return static__1e3112b34_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1e3114c68_unary(jule::Ptr<_1e305a032_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1e305a4a5_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1e3058e10_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1e31a43bd_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1e3115032_Neg(jule::Ptr<_1e305a032_Fn> _18719_f) {
	return static__1e3114c68_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1e31152eb_Pos(jule::Ptr<_1e305a032_Fn> _19219_f) {
	return static__1e3114c68_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1e31155b5_BitNot(jule::Ptr<_1e305a032_Fn> _19722_f) {
	return static__1e3114c68_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1e3115939_assign(jule::Ptr<_1e305a032_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1e305a4a5_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1e3058e10_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1e3115c03_AddAssign(jule::Ptr<_1e305a032_Fn> _22125_f) {
	return static__1e3115939_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1e3115ebc_SubAssign(jule::Ptr<_1e305a032_Fn> _22625_f) {
	return static__1e3115939_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1e3116286_DivAssign(jule::Ptr<_1e305a032_Fn> _23125_f) {
	return static__1e3115939_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1e3116550_MulAssign(jule::Ptr<_1e305a032_Fn> _23625_f) {
	return static__1e3115939_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1e3116819_ModAssign(jule::Ptr<_1e305a032_Fn> _24125_f) {
	return static__1e3115939_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1e3116ad3_ShlAssign(jule::Ptr<_1e305a032_Fn> _24625_f) {
	return static__1e3115939_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1e3116d9c_ShrAssign(jule::Ptr<_1e305a032_Fn> _25125_f) {
	return static__1e3115939_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1e3117166_BitOrAssign(jule::Ptr<_1e305a032_Fn> _25627_f) {
	return static__1e3115939_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1e3117430_BitAndAssign(jule::Ptr<_1e305a032_Fn> _26128_f) {
	return static__1e3115939_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1e31176e9_BitXorAssign(jule::Ptr<_1e305a032_Fn> _26628_f) {
	return static__1e3115939_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3110b54_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e315225b_pushErr(_1e3151c61_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1e31524e2_checkTrait(_1e3151c61_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e31a17c7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e306d2cb_Trait> _12613_trt = _1e31a4654_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1e31a30d1_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e6835089:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1e31a30d1_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1e31a43bd_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1e6835111;
			}
		}
		else if ((_1e31a43bd_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e6835111:;
			{
				jule::Ptr<_1e3047d55_StructIns> _13713_s = _1e31a43bd_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1e3046716_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1e3150831_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1e315225b_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a4654_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e6835188:;
			{
				jule::Ptr<_1e306d2cb_Trait> _14717_base = _1e31a4654_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1e6839874:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6839c5e:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e683a6bb:;
								if (it != expr_end) {
									jule::Ptr<_1e30450c7_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1e6839c5e;
										};
									}
									_iter_next_1e683a6bb:;
									++it;
									goto _iter_begin_1e683a6bb;
								}
								_iter_end_1e683a6bb:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1e6839c5e:;
						++it;
						goto _iter_begin_1e6839c5e;
					}
					_iter_end_1e6839c5e:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6839a1c:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1e305a032_Fn> _16121_m2 = _1e306de7a_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1e305ce36_FnIns> _16517_m1k = _1e30e9247_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1e305ce36_FnIns> _16617_m2k = _1e30e9247_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1e305dd9e_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1e6839a1c:;
						++it;
						goto _iter_begin_1e6839a1c;
					}
					_iter_end_1e6839a1c:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e6834ece:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e6834e79:;
	};
}



inline jule::Bool _1e3152778_checkPtr(_1e3151c61_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e31a17c7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31b05b6_Ptr> _18113_dest = _1e31a3367_Ptr((*(_self_))._field_dest.ptr());;
	if (_1e31b1100_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1e31a0e03_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e3152a0e_checkPrim(_1e3151c61_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1e31a82c3_Prim> _19013_prim = _1e31a2d4a_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1e31ab9e1_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1e31a0e03_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e3152e0a_typeEnum(_1e3151c61_typeCompatibilityChecker* _self_, jule::Ptr<_1e30721d1_TypeEnum>* _19828_e, jule::Ptr<_1e31a06e9_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e684230a:;
		if (it != expr_end) {
			jule::Ptr<_1e3071b09_TypeEnumItem> _19921_item = *it;
			{
				if (_1e31a0e03_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1e30721d1_TypeEnum> _20317_ke = _1e31a3884_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1e684230a;
				};
				if (_1e3152e0a_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1e684230a:;
			++it;
			goto _iter_begin_1e684230a;
		}
		_iter_end_1e684230a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e3153191_checkTypeEnum(_1e3151c61_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e31a0e03_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e30721d1_TypeEnum> _21813_e = _1e31a3884_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1e3152e0a_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1e3153427_check(_1e3151c61_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1e31a3367_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1e3152778_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1e31a2597_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1e31a17c7_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1e31a2d4a_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e6847a19:;
			{
				__jule_func_result = _1e3152a0e_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a3884_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e68470ce:;
			{
				__jule_func_result = _1e3153191_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a4654_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e6847145:;
			{
				__jule_func_result = _1e31524e2_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e6847068:;
			{
				__jule_func_result = _1e31a0e03_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1e68467d7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3151c61_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1e3153ea5_pushErr(_1e3153a10_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1e315423b_checkValidity(_1e3153a10_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1e31a4137_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e684a555:;
			{
				jule::Ptr<_1e305ce36_FnIns> _26213_f = _1e31a4137_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1e305e3bb_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1e684bc0a:;
						{
							_1e3153ea5_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1e684bc82:;
						{
							_1e3153ea5_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1e305a73b_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1e684bd09:;
						{
							_1e3153ea5_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1e684bd81:;
						{
							_1e3153ea5_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1e684bb3e:;
				};
			}
		}
		else if ((_1e31a4b71_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e684a5cc:;
			{
				_1e3153ea5_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1e684a49a:;
	};
	return _25913_valid;;
}



inline jule::Bool _1e31544c2_checkConst(_1e3153a10_assignTypeChecker* _self_) {
	if (((((!(_1e31707c9_IsConst((*(_self_))._field_d.ptr()))) || (_1e31a2d4a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_22893d57d_IsNum((*(_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _2999_kind = (*(_1e31a2d4a_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_22893d2b4_IsFloat(_2999_kind)) {
			_case_begin_1e6854817:;
			{
				if ((!(_1e3150bb6_floatAssignable(&(_2999_kind), &((*(_self_))._field_d))))) {
					_1e3153ea5_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else if (_22893ce73_IsInt(_2999_kind)) {
			_case_begin_1e685488e:;
			{
				if ((!(_1e3151777_intAssignable(_2999_kind, &((*(_self_))._field_d))))) {
					_1e3153ea5_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else {
			_case_begin_1e685476d:;
			{
				return false;;
			}
		}
		_match_end_1e6854718:;
	};
	return true;;
}



inline jule::Bool _1e3154758_isPrim(_1e3153a10_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1e31a1541_Binded((*(_self_))._field_dest.ptr()) || _1e31a1541_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1e31a2d4a_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1e31549de_checkCompatibility(_1e3153a10_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1e6859982:;
			{
				return false;;
			}
		}
		else if ((!(_1e315423b_checkValidity(_self_)))) {
			_case_begin_1e6859a09:;
			{
				return false;;
			}
		}
		else if (_1e31544c2_checkConst(_self_)) {
			_case_begin_1e6859a81:;
			{
				return true;;
			}
		}
		else if ((_1e31a35ed_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6859b08:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _34317_dkind = (*(_self_))._field_dest;;
				if ((_1e31a35ed_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34317_dkind=(*((*(_1e31a35ed_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1e31a2d4a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1e6859850;
				};
				if (_228939ada_TypesAreCompatible((*(_1e31a2d4a_Prim((*((*(_1e31a35ed_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1e31a2d4a_Prim(_34317_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1e3154758_isPrim(_self_)) {
			_case_begin_1e6859b80:;
			{
				jule::Ptr<_1e31a82c3_Prim> _35313_dest = _1e31a2d4a_Prim((*(_self_))._field_dest.ptr());;
				if (_1e31ab9e1_IsAny(_35313_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1e31a82c3_Prim> _35717_src = _1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_228939ada_TypesAreCompatible((*(_35313_dest))._field_Kind, (*(_35717_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1e6859850:;
	};
	return _1e30e8554_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1e3154c75_check(_1e3153a10_assignTypeChecker* _self_) {
	jule::Bool _3669_ok = _1e31549de_checkCompatibility(_self_);;
	if ((_3669_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1e31bcbbc_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3669_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3153a10_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6874705_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1e6875dbb:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1e6876c46:;
						{
							_38921_elem=(*(_1e31a3b1a_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1e6876b8b:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e302673a_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1e3156d87_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1e6875d66:;
	};
	return false;;
}

inline jule::Bool _1e6874062_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e687982b:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1e687a71c:;
						{
							_38921_elem=(*(_1e31a3da1_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1e687a5eb:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e302589e_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1e3156d87_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1e68797c6:;
	};
	return false;;
}

inline jule::Bool _1e687620c_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e687d28b:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1e687e1e3:;
						{
							_38921_elem=(*(_1e31a3367_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1e687e05b:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e3025e98_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1e3156d87_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1e687d236:;
	};
	return false;;
}

inline jule::Bool _1e687c7c9_annotateConstraintElem(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1e68818cc:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1e688289a:;
						{
							_38921_elem=(*(_1e31a30d1_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1e688269c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e3025519_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1e3156d87_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1e6881877:;
	};
	return false;;
}



inline jule::Bool _1e3156073_annotateConstraintMap(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e686366c:;
			{
				jule::Ptr<_1e31ade66_Map> _40917_m = _1e31a48da_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1e3026e88_MapTypeDecl> _41017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e3026e88_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41017_m2))._field_Key;
				if ((!(_1e3156d87_annotateConstraint(_self_, &((*(_40917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41017_m2))._field_Val;
				__jule_func_result = _1e3156d87_annotateConstraint(_self_, &((*(_40917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1e6863617:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e31563b4_annotateConstraintTup(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e6866252:;
			{
				jule::Ptr<_1e3025b9b_TupleTypeDecl> _42417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e3025b9b_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1e31ad3b6_Tuple> _42517_tup2 = _1e31a4b71_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e68674a6:;
					if (it != expr_end) {
						jule::Ptr<_1e31a06e9_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e6866ede:;
								if (it != expr_end) {
									jule::Ptr<_1e302446e_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1e3156d87_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1e6866ede:;
									++it;
									goto _iter_begin_1e6866ede;
								}
								_iter_end_1e6866ede:;
							};
						}
						_iter_next_1e68674a6:;
						++it;
						goto _iter_begin_1e68674a6;
					}
					_iter_end_1e68674a6:;
				};
			}
		}
		_match_end_1e68661ec:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e3156705_annotateConstraintFn(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e686870a:;
			{
				jule::Ptr<_1e303612e_FnDecl> _44117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e303612e_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1e305ce36_FnIns> _44217_f = _1e31a4137_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e686a0be:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1e305be8a_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44117_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1e3156d87_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1e686a0be:;
						++it;
						_44318_i++;
						goto _iter_begin_1e686a0be;
					}
					_iter_end_1e686a0be:;
				};
				if (((*(_44117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44117_pf))._field_Result))._field_Kind;
					if (_1e3156d87_annotateConstraint(_self_, &((*(_44217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1e68686a5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e3156a46_annotateConstraintIdent(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _45947_k) {
	jule::Ptr<_1e3024a79_IdentTypeDecl> _46013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e3024a79_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1e3047d55_StructIns> _46113_s = _1e31a43bd_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e686d457:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1e3031679_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46013_ident))._field_Ident)) {
					jule::Ptr<_1e319dd13_InsGeneric> _46421_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46421_fg != nullptr)) {
						return false;;
					};
					_1e31571ea_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46113_s == nullptr)) {
					goto _iter_next_1e686d457;
				};
				jule::Ptr<_1e302446e_TypeDecl> _47417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e686e3ae:;
					if (it != expr_end) {
						jule::Ptr<_1e302446e_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e6871a54:;
								if (it != expr_end) {
									jule::Ptr<_1e319dd13_InsGeneric> _47729_sg = *it;
									{
										if (_1e3156d87_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1e6871a54:;
									++it;
									goto _iter_begin_1e6871a54;
								}
								_iter_end_1e6871a54:;
							};
						}
						_iter_next_1e686e3ae:;
						++it;
						goto _iter_begin_1e686e3ae;
					}
					_iter_end_1e686e3ae:;
				};
				(*(_self_))._field_c=_47417_c;
			}
			_iter_next_1e686d457:;
			++it;
			_46213_i++;
			goto _iter_begin_1e686d457;
		}
		_iter_end_1e686d457:;
	};
	return false;;
}



inline jule::Bool _1e3156d87_annotateConstraint(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1e6871746:;
			{
				return _1e3156a46_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1e68716e1:;
	};
	{
		
		if ((_1e31a3b1a_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e6872e40:;
			{
				return _1e6874705_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1e31a3da1_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e6872eb7:;
			{
				return _1e6874062_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1e31a3367_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e687303e:;
			{
				return _1e687620c_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1e31a30d1_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e6873748:;
			{
				return _1e687c7c9_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1e31a48da_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e68737ae:;
			{
				return _1e3156073_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1e31a4137_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e6873825:;
			{
				return _1e3156705_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1e31a4b71_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1e687388b:;
			{
				return _1e31563b4_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1e687332a:;
			{
				return false;;
			}
		}
		_match_end_1e68732c5:;
	};
}



inline void _1e31571ea_pushGeneric(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1e319dd13_InsGeneric>(_1e319dd13_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1e3031679_GenericDecl> _51513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e688578d:;
		if (it != expr_end) {
			jule::Ptr<_1e31a06e9_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51513_gd))._field_Ident == _1e31a0ab2_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1e688578d:;
			++it;
			goto _iter_begin_1e688578d;
		}
		_iter_end_1e688578d:;
	};
	if ((((*(_51513_gd))._field_Constraint == nullptr) || ((*((*(_51513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51513_gd))._field_Constraint))._field_Mask[0LL];
	_1e3156d87_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1e315753b_annotatePrim(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1e3159560_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1e315787c_annotateArr(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31aeae3_Arr> _53313_parr = _1e31a3b1a_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31aeae3_Arr> _53713_arr = _1e31a3b1a_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53313_parr))._field_Elem));
	__jule_func_result = _1e31598a1_annotateKind(_self_, &((*(_53713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e3157bbd_annotateSlc(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31ac7c2_Slc> _54313_pslc = _1e31a3da1_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31ac7c2_Slc> _54713_slc = _1e31a3da1_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54313_pslc))._field_Elem));
	__jule_func_result = _1e31598a1_annotateKind(_self_, &((*(_54713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e31580b9_checkMapKey(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _55241_k, jule::Ptr<_1e31a06e9_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31a06e9_TypeKind>* _55313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1e31598a1_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e315840a_annotateMap(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31ade66_Map> _56113_pmap = _1e31a48da_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31ade66_Map> _56513_m = _1e31a48da_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1e31580b9_checkMapKey(_self_, (&((*(_56113_pmap))._field_Key)), &((*(_56513_m))._field_Key)) && _1e31580b9_checkMapKey(_self_, (&((*(_56113_pmap))._field_Val)), &((*(_56513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1e315874b_annotateFn(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e305ce36_FnIns> _57113_pf = _1e31a4137_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e305ce36_FnIns> _57513_f = _1e31a4137_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57113_pf))._field_Params.len() != (*(_57513_f))._field_Params.len())) {
			_case_begin_1e689226c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1e305a4a5_IsVoid((*(_57113_pf))._field_Decl.ptr()) != _1e305a4a5_IsVoid((*(_57513_f))._field_Decl.ptr()))) {
			_case_begin_1e68922e4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e6892206:;
	};
	__jule_func_result=true;
	jule::Ptr<_1e31a06e9_TypeKind>* _58413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6893966:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1e305be8a_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57113_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1e31598a1_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1e6893966:;
			++it;
			_58514_i++;
			goto _iter_begin_1e6893966;
		}
		_iter_end_1e6893966:;
	};
	if ((!(_1e305a4a5_IsVoid((*(_57113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57113_pf))._field_Result));
		__jule_func_result=(_1e31598a1_annotateKind(_self_, &((*(_57513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e3158a8c_annotatePtr(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31b05b6_Ptr> _60013_pptr = _1e31a3367_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31b05b6_Ptr> _60413_ptr = _1e31a3367_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60013_pptr))._field_Elem));
	__jule_func_result = _1e31598a1_annotateKind(_self_, &((*(_60413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e3158dcd_annotateSptr(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31abcee_Sptr> _61013_ssptr = _1e31a30d1_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e31abcee_Sptr> _61413_sptr = _1e31a30d1_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61013_ssptr))._field_Elem));
	__jule_func_result = _1e31598a1_annotateKind(_self_, &((*(_61413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e315921e_annotateStruct(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e3047d55_StructIns> _62013_s = _1e31a43bd_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e3047d55_StructIns> _62413_s2 = _1e31a43bd_Struct((*(_61945_k)).ptr());;
	if (((*(_62013_s))._field_Generics.len() != (*(_62413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e689c112:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1e319dd13_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1e319dd13_InsGeneric> _62917_g2 = (*(_62413_s2))._field_Generics[_62814_i];;
				if (_1e31a0e03_Equal((*(_62821_g))._field_Kind, (*(_62917_g2))._field_Kind)) {
					goto _iter_next_1e689c112;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1e31598a1_annotateKind(_self_, &((*(_62917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e689c112:;
			++it;
			_62814_i++;
			goto _iter_begin_1e689c112;
		}
		_iter_end_1e689c112:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e3159560_annotateAny(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6429_kind = _1e31a0ab2_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68a0467:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1e3031679_GenericDecl> _64316_g = *it;
			{
				if ((_6429_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1e68a0467;
				};
				jule::Ptr<_1e319dd13_InsGeneric> _64713_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64713_t == nullptr) || ((*(_64713_t))._field_Kind == nullptr)) {
						_case_begin_1e68a215b:;
						{
							_1e31571ea_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1e31a0e03_Equal((*(_64713_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1e68a21d3:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1e68a203a:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1e68a0467:;
			++it;
			_64313_i++;
			goto _iter_begin_1e68a0467;
		}
		_iter_end_1e68a0467:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e31598a1_annotateKind(_1e315567c_dynamicTypeAnnotation* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1e3159560_annotateAny(_self_, _66243_k)) {
			_case_begin_1e68a4746:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a2d4a_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a47bd:;
			{
				__jule_func_result = _1e315753b_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a3b1a_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4a32:;
			{
				__jule_func_result = _1e315787c_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a3da1_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4a98:;
			{
				__jule_func_result = _1e3157bbd_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a48da_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4b0e:;
			{
				__jule_func_result = _1e315840a_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a4137_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4b86:;
			{
				__jule_func_result = _1e315874b_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a3367_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4c0d:;
			{
				__jule_func_result = _1e3158a8c_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a30d1_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4d1d:;
			{
				__jule_func_result = _1e3158dcd_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e31a43bd_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1e68a4d84:;
			{
				__jule_func_result = _1e315921e_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e68a4625:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e68a4180:;
	};
}



inline jule::Bool _1e3159b37_annotate(_1e315567c_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1e31598a1_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e315567c_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1e315aa7d_pushErrToken(_1e315a4d9_fnCallArgChecker* _self_, jule::Ptr<_20cb74604_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1e30e0590_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1e315ade1_pushErr(_1e315a4d9_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1e315aa7d_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> _1e315b177_getParams(_1e315a4d9_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1e3058b79_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1e315b485_checkCounts(_1e315a4d9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72513_n = (*(_72431_params)).len();;
	if (((_72513_n > 0LL) && _1e3058b79_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72513_n)--;
	};
	jule::I64 _73013_diff = (_72513_n - (*(_self_))._field_args.len());;
	jule::Str _73113_log = jule::Str();;
	{
		
		if ((_73013_diff == 0LL)) {
			_case_begin_1e68b1225:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72513_n > 0LL) && (*((*((*(_72431_params))[(_72513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1e68b1148:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73013_diff < 0LL) || (_73013_diff > (*(_72431_params)).len()))) {
			_case_begin_1e68b0d18:;
			{
				_73113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1e68b0ca2:;
			{
				_73113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1e68b0c3b:;
	};
	_227713453_StrBuilder _74213_err = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_74213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_22771c02d_WriteStr(&_74213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68b3139:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1e305be8a_ParamIns> *_74516_p = it;
			{
				_22771c02d_WriteStr(&_74213_err, _1e31a0ab2_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_22771c02d_WriteStr(&_74213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1e68b3139:;
			++it;
			_74513_i++;
			goto _iter_begin_1e68b3139;
		}
		_iter_end_1e68b3139:;
	};
	_22771c2d6_WriteByte(&_74213_err, ')');
	_1e315ade1_pushErr(_self_, _73113_log, jule::Slice<jule::Any>::make({jule::Any(_22771c825_Str(&_74213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e315b93b_checkArg(_1e315a4d9_fnCallArgChecker* _self_, jule::Ptr<_1e305be8a_ParamIns>* _75632_p, jule::Ptr<_1e316ee05_Data>* _75651_arg, jule::Ptr<_20cb74604_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1e3060213_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1e3163d2d_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1e315567c_dynamicTypeAnnotation _76121_dta = _1e315567c_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1e3159b37_annotate(&_76121_dta);
		};
		if ((!(__jule_func_result))) {
			_1e315aa7d_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1e30eb5ac_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1e30e809d_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e315bd37_push(_1e315a4d9_fnCallArgChecker* _self_, jule::Ptr<_1e305be8a_ParamIns>* _78528_p, jule::Ptr<_1e30287a3_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e31a06e9_TypeKind> _78613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7879_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1e316ee05_Data> _79513_d = _1e318ed59_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78613_old;
	(*((*(_self_))._field_e))._field_immutable=_7879_oldImmut;
	if ((_79513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e315b93b_checkArg(_self_, _78528_p, &(_79513_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1e315c233_pushVariadic(_1e315a4d9_fnCallArgChecker* _self_, jule::Ptr<_1e305be8a_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81113_variadiced = false;;
	jule::Bool _8129_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1e304e697_SliceExprModel> _81313_model = jule::new_ptr<_1e304e697_SliceExprModel>(_1e304e697_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1e31a06e9_TypeKind> _81713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8229_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_8229_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1e30287a3_Expr> _82917_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1e68c4a41:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31ac7c2_Slc>(_1e31ac7c2_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1e68c4689:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1e68c4634:;
			};
			jule::Ptr<_1e316ee05_Data> _84217_d = _1e318e6c7_eval((*(_self_))._field_e, _82917_arg);;
			if ((_84217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1e68c2e6d;
			};
			if ((*((*(_84217_d))._field_Kind))._field_Variadic) {
				_81113_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1e315b93b_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1e68c80c7:;
						{
							_81313_model=(*(_84217_d))._field_Model.cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76);
							(*(_81313_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1e68c7c0e:;
						{
							_81313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84217_d))._field_Model); };
						}
					}
					_match_end_1e68c7ba9:;
				};
				(_80954_i)++;
				goto _iter_end_1e68c2e6d;
			};
			__jule_func_result=(__jule_func_result && _1e315b93b_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_84217_d))._field_Model); };
		}
	_iter_next_1e68c2e6d:;
	}
	_iter_end_1e68c2e6d:;;
	(*((*(_self_))._field_e))._field_prefix=_81713_old;
	if ((_81113_variadiced && _8129_more)) {
		_1e315aa7d_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e315c574_checkArgs(_1e315a4d9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8869_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89013_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1e3058b79_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89013_i)++;
	};
	_julec_label_1e68ccbe2:;
	while ((_89013_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1e305be8a_ParamIns> _89717_p = (*(_88533_params))[_89013_i];;
			{
				
				if ((*((*(_89717_p))._field_Decl))._field_Variadic) {
					_case_begin_1e68ce60b:;
					{
						__jule_func_result=(_1e315c233_pushVariadic(_self_, &(_89717_p), _89013_i) && __jule_func_result);
						goto _iter_end_1e68cd000;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89013_i)) {
					_case_begin_1e68ce6e9:;
					{
						__jule_func_result=false;
						goto _iter_end_1e68cd000;
					}
				}
				else {
					_case_begin_1e68ce265:;
					{
						__jule_func_result=(_1e315bd37_push(_self_, &(_89717_p), (*(_self_))._field_args[_89013_i]) && __jule_func_result);
					}
				}
				_match_end_1e68ce1ee:;
			};
			(_89013_i)++;
		}
	_iter_next_1e68cd000:;
	}
	_iter_end_1e68cd000:;;
	(*((*(_self_))._field_e))._field_arg=_8869_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e315c80a_checkDynamicTypeAnnotation(_1e315a4d9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68d15ca:;
		if (it != expr_end) {
			jule::Ptr<_1e319dd13_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1e315ade1_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e68d15ca:;
			++it;
			goto _iter_begin_1e68d15ca;
		}
		_iter_end_1e68d15ca:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e315ca91_check(_1e315a4d9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> _92713_params = _1e315b177_getParams(_self_);;
	__jule_func_result=_1e315b485_checkCounts(_self_, &(_92713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e315c574_checkArgs(_self_, &(_92713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1e315c80a_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e315a4d9_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1e315d971_pushErr(_1e315d421_structLitChecker* _self_, jule::Ptr<_20cb74604_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1e3172149_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1e315dcd4_pushSuggestion(_1e315d421_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1e31724ac_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1e315e202_pushMatch(_1e315d421_structLitChecker* _self_, jule::Ptr<_1e30472a5_FieldIns>* _97433_f, jule::Ptr<_1e316ee05_Data>* _97452_d, jule::Ptr<_20cb74604_Token>* _97467_errorToken) {
	;
	jule::Bool _9809_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1e30eb5ac_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9809_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1e30e809d_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1e304cbe5_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1e304cbe5_StructArgExprModel>(_1e304cbe5_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1e315e565_checkPair(_1e315d421_structLitChecker* _self_, jule::Ptr<_1e302cec2_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1e30287a3_Expr>>* _99360_exprs) {
	jule::Ptr<_1e30472a5_FieldIns> _99513_f = _1e304920d_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99513_f == nullptr)) {
		_1e315d971_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1e30e0cee_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99513_f))._field_Decl))._field_Public, (*((*(_99513_f))._field_Decl))._field_Token)))) {
		_1e315d971_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1e315dcd4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1e68e03db:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68e2dd3:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1e68e3884:;
						{
							jule::Ptr<_1e302cec2_FieldExprPair> _101021_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1e302cec2_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101021_dpair)) {
									_case_begin_1e68e4676:;
									{
										goto _iter_end_1e68e2dd3;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1e68e46ed:;
									{
										_1e315d971_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1e68e2dd3;
									}
								}
								_match_end_1e68e45bb:;
							};
						}
					}
					_match_end_1e68e382e:;
				};
			}
			_iter_next_1e68e2dd3:;
			++it;
			goto _iter_begin_1e68e2dd3;
		}
		_iter_end_1e68e2dd3:;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _102113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99513_f))._field_Kind;
	jule::Ptr<_1e316ee05_Data> _102513_d = _1e318ed59_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	_1e315e202_pushMatch(_self_, &(_99513_f), &(_102513_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1e315e8a6_readyExprs(_1e315d421_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e30287a3_Expr>>* _103234_exprs) {
	jule::Bool _103313_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68e859d:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1e30287a3_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1e68e9329:;
						{
							jule::Ptr<_1e302e5cd_KeyValPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1e302e5cd_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1e68e9ea6:;
									{
										goto _match_end_1e68ea490;
									}
								}
								else {
									_case_begin_1e68ea4e5:;
									{
										_1e315d971_pushErr(_self_, (*(_103721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103313_ok=false;
										goto _iter_next_1e68e859d;
									}
								}
								_match_end_1e68ea490:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1e302cec2_FieldExprPair>(_1e302cec2_FieldExprPair{._field_Field=(*((*(_103721_pair))._field_Key))._field_Token, ._field_Expr=(*(_103721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1e68e92c4:;
				};
			}
			_iter_next_1e68e859d:;
			++it;
			_103414_i++;
			goto _iter_begin_1e68e859d;
		}
		_iter_end_1e68e859d:;
	};
	return _103313_ok;;
}



inline void _1e315eb5e_check(_1e315d421_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e30287a3_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1e315e8a6_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106313_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e68e8ee9:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1e30287a3_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1e69037ea:;
						{
							jule::Ptr<_1e302cec2_FieldExprPair> _106721_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1e302cec2_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106313_paired)))) {
								_1e315d971_pushErr(_self_, (*(_106721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106313_paired=true;
							_1e315e565_checkPair(_self_, &(_106721_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1e68ed7b2:;
						{
							if (_106313_paired) {
								_1e315d971_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1e315d971_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1e68e8ee9;
							};
							jule::Ptr<_1e30472a5_FieldIns> _108221_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1e30e0cee_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108221_field))._field_Decl))._field_Public, (*((*(_108221_field))._field_Decl))._field_Token)))) {
								_1e315d971_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1e315dcd4_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e31a06e9_TypeKind> _109021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108221_field))._field_Kind;
							jule::Ptr<_1e316ee05_Data> _109421_d = _1e318ed59_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109421_d == nullptr)) {
								goto _iter_next_1e68e8ee9;
							};
							_1e315e202_pushMatch(_self_, &(_108221_field), &(_109421_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1e68ed75c:;
				};
			}
			_iter_next_1e68e8ee9:;
			++it;
			_106414_i++;
			goto _iter_begin_1e68e8ee9;
		}
		_iter_end_1e68e8ee9:;
	};
	if ((!(_106313_paired))) {
		jule::I64 _110513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110617_diff = (_110513_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110617_diff <= 0LL)) {
				_case_begin_1e6905ea1:;
				{
					return;;
				}
			}
			_match_end_1e6905d4c:;
		};
		_227713453_StrBuilder _111217_idents = static__22771371c_New(32LL);;
		for (; (_110617_diff > 0LL); (_110617_diff)--) {
			{
				_22771c02d_WriteStr(&_111217_idents, jule::Str::lit(", ", 2));
				_22771c02d_WriteStr(&_111217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110513_n - _110617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1e6906710:;
		}
		_iter_end_1e6906710:;;
		_1e315d971_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_22771d2c6_Buf(&_111217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e315d421_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e310ed40_Var> _1e31606dc_buildVar(_1e3160203_rangeChecker* _self_, jule::Ptr<_1e303720c_VarDecl>* _113228_decl) {
	jule::Ptr<_1e310ed40_Var> _113313_v = _1e306656b_buildVar((*(_113228_decl)));;
	return _113313_v;;
}



inline void _1e31608da_setSizeKey(_1e3160203_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e690adb8:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1e310db85_IterRelation>(_1e310db85_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1e690ad63:;
	};
}



inline void _1e3160d08_checkRangeExprValidity(_1e3160203_rangeChecker* _self_, jule::Ptr<_1e316ee05_Data>* _115946_d, jule::Ptr<_1e310ed40_Var>* _115957_key, jule::Ptr<_1e31a06e9_TypeKind>* _115973_k) {
	jule::Bool _116013__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116013__mut && (!(_1e31a207a_Mutable((*(_115973_k)).ptr()))))) {
		_116013__mut=false;
	};
	_1e30eb5ac_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116013__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1e3161006_checkSlice(_1e3160203_rangeChecker* _self_) {
	_1e31608da_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e31ac7c2_Slc> _117813_slc = _1e31a3da1_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_117813_slc))._field_Elem});
	_1e3160d08_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117813_slc))._field_Elem));
}



inline void _1e3161204_checkArray(_1e3160203_rangeChecker* _self_) {
	_1e31608da_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e31aeae3_Arr> _119113_arr = _1e31a3b1a_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_119113_arr))._field_Elem});
	_1e3160d08_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119113_arr))._field_Elem));
}



inline void _1e3161402_checkMapKeyA(_1e3160203_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e31ade66_Map> _120313_m = _1e31a48da_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_120313_m))._field_Key});
	jule::Ptr<_1e316ee05_Data> _120713_d = jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d)));;
	(*(_120713_d))._field_Kind=(*(_120313_m))._field_Key;
	_1e3160d08_checkRangeExprValidity(_self_, &(_120713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120313_m))._field_Key));
}



inline void _1e3161600_checkMapKeyB(_1e3160203_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e31ade66_Map> _121813_m = _1e31a48da_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_121813_m))._field_Val});
	jule::Ptr<_1e316ee05_Data> _122213_d = jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d)));;
	(*(_122213_d))._field_Kind=(*(_121813_m))._field_Val;
	_1e3160d08_checkRangeExprValidity(_self_, &(_122213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121813_m))._field_Val));
}



inline void _1e31617ed_checkMap(_1e3160203_rangeChecker* _self_) {
	_1e3161402_checkMapKeyA(_self_);
	_1e3161600_checkMapKeyB(_self_);
}



inline void _1e31619eb_checkStr(_1e3160203_rangeChecker* _self_) {
	_1e31608da_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1e3161be9_checkComptime(_1e3160203_rangeChecker* _self_) {
	_1e31608da_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e30117e1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1e31606dc_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1e3161e80_checkComptimeRange(_1e3160203_rangeChecker* _self_) {
	jule::Ptr<_1e3074579_comptimeRange> _125713_range = _1e31a61e4_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1e6928336:;
			{
				_1e3161be9_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1e6927ed4:;
			{
				_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1e6927e7e:;
	};
}



inline jule::Bool _1e3162216_check(_1e3160203_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1e692ad2d:;
		}
		else if ((_1e31a3da1_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6929eb4:;
			{
				_1e3161006_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1e31a3b1a_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e692a02a:;
			{
				_1e3161204_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1e31a48da_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e692a091:;
			{
				_1e31617ed_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1e31a61e4_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e692a107:;
			{
				return _1e3161e80_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1e6929876:;
			{
				jule::Ptr<_1e31a82c3_Prim> _128913_prim = _1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128913_prim != nullptr) && _1e31ab75a_IsStr(_128913_prim.ptr()))) {
					_1e31619eb_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1e69297bb:;
	};
	_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3160203_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e3162d82_prepareTypes(_1e3162964_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1e305e135_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1e316313a_prepareExprs(_1e3162964_retTypeChecker* _self_, jule::Ptr<_1e30287a3_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1e6931d89:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1e3029474_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1e69319c1:;
			{
				{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1e693196b:;
	};
}



inline void _1e3163338_checkExprs(_1e3162964_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _133313_datas = jule::Slice<jule::Ptr<_1e316ee05_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1e3171ae9_Eval> _133413_eval = _1e30e7a3c_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1e31c0230_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69322eb:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1e30287a3_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1e69322eb;
				};
				jule::Ptr<_1e31a06e9_TypeKind> _134017_t = (*(_self_))._field_types[_133514_i];;
				(*(_133413_eval))._field_prefix=_134017_t;
				jule::Ptr<_1e316ee05_Data> _134317_d = _1e318ed59_evalExpr(_133413_eval, _133521_expr);;
				if ((_134317_d == nullptr)) {
					goto _iter_next_1e69322eb;
				};
				{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = _133313_datas; __jule_push_dest.push(_134317_d); };
				if (((!((*(_134317_d))._field_Mutable)) && _1e31a207a_Mutable((*(_134317_d))._field_Kind.ptr()))) {
					_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1e3153a10_assignTypeChecker _135517_ac = _1e3153a10_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134017_t, ._field_d=_134317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1e3154c75_check(&_135517_ac);
			}
			_iter_next_1e69322eb:;
			++it;
			_133514_i++;
			goto _iter_begin_1e69322eb;
		}
		_iter_end_1e69322eb:;
	};
	if ((_133313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1e30529db_TupleExprModel>(_1e30529db_TupleExprModel{._field_Datas=_133313_datas}), &__jule_any_type81);
	} else if ((_133313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1e3163679_check(_1e3162964_retTypeChecker* _self_, jule::Ptr<_1e30287a3_Expr>* _137429_e) {
	_1e3162d82_prepareTypes(_self_);
	_1e316313a_prepareExprs(_self_, _137429_e);
	jule::I64 _13789_n = (*(_self_))._field_exprs.len();;
	if (((_13789_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1e305b275_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13789_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1e305a4a5_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13789_n > (*(_self_))._field_types.len())) {
		_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13789_n < (*(_self_))._field_types.len())) {
		_1e30e0590_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1e3163338_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3162964_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e316a065_SelectPackage(_1e3169ad1_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69403b4:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1e69403b4:;
			++it;
			goto _iter_begin_1e69403b4;
		}
		_iter_end_1e69403b4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e316a461_FindVar(_1e3169ad1_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1e316c243_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e316a85c_FindTypeAlias(_1e3169ad1_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1e316c6e9_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1e30450c7_Struct> _1e316ac58_FindStruct(_1e3169ad1_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6942b03:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1e6942b03:;
			++it;
			goto _iter_begin_1e6942b03;
		}
		_iter_end_1e6942b03:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e305a032_Fn> _1e316b154_FindFn(_1e3169ad1_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6944187:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1e6944187:;
			++it;
			goto _iter_begin_1e6944187;
		}
		_iter_end_1e6944187:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e316b495_FindTrait(_1e3169ad1_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69454a7:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1e69454a7:;
			++it;
			goto _iter_begin_1e69454a7;
		}
		_iter_end_1e69454a7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30709c6_Enum> _1e316b7d6_FindEnum(_1e3169ad1_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6945b7d:;
		if (it != expr_end) {
			jule::Ptr<_1e30709c6_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1e6945b7d:;
			++it;
			goto _iter_begin_1e6945b7d;
		}
		_iter_end_1e6945b7d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e316bb27_FindTypeEnum(_1e3169ad1_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6946b7e:;
		if (it != expr_end) {
			jule::Ptr<_1e30721d1_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1e6946b7e:;
			++it;
			goto _iter_begin_1e6946b7e;
		}
		_iter_end_1e6946b7e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e316c243_findVar(_1e3169ad1_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1e310ed40_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1e6949357:;
		}
		_iter_end_1e6949357:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e694939b:;
			if (it != expr_end) {
				jule::Ptr<_1e310ed40_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1e694939b:;
				++it;
				goto _iter_begin_1e694939b;
			}
			_iter_end_1e694939b:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e316c6e9_findTypeAlias(_1e3169ad1_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1e319e907_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1e694c426:;
		}
		_iter_end_1e694c426:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e694c46a:;
			if (it != expr_end) {
				jule::Ptr<_1e319e907_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1e694c46a:;
				++it;
				goto _iter_begin_1e694c46a;
			}
			_iter_end_1e694c46a:;
		};
	};
	return nullptr;;
}



inline jule::Any _1e316cae5_defByIdent(_1e3169ad1_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e694dceb:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1e694dceb:;
			++it;
			goto _iter_begin_1e694dceb;
		}
		_iter_end_1e694dceb:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69506b0:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1e69506b0:;
			++it;
			goto _iter_begin_1e69506b0;
		}
		_iter_end_1e69506b0:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e695157e:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1e695157e:;
			++it;
			goto _iter_begin_1e695157e;
		}
		_iter_end_1e695157e:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69510ea:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1e69510ea:;
			++it;
			goto _iter_begin_1e69510ea;
		}
		_iter_end_1e69510ea:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6952b9b:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1e6952b9b:;
			++it;
			goto _iter_begin_1e6952b9b;
		}
		_iter_end_1e6952b9b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6952abe:;
		if (it != expr_end) {
			jule::Ptr<_1e30709c6_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1e6952abe:;
			++it;
			goto _iter_begin_1e6952abe;
		}
		_iter_end_1e6952abe:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6954c69:;
		if (it != expr_end) {
			jule::Ptr<_1e30721d1_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1e6954c69:;
			++it;
			goto _iter_begin_1e6954c69;
		}
		_iter_end_1e6954c69:;
	};
	return nullptr;;
}



inline jule::Bool _1e316d09b_isDuplicatedIdent(_1e3169ad1_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69561ee:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1e69561ee:;
			++it;
			goto _iter_begin_1e69561ee;
		}
		_iter_end_1e69561ee:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6956e25:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1e6956e25:;
			++it;
			goto _iter_begin_1e6956e25;
		}
		_iter_end_1e6956e25:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6958069:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1e6958069:;
			++it;
			goto _iter_begin_1e6958069;
		}
		_iter_end_1e6958069:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6957bc3:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1e6957bc3:;
			++it;
			goto _iter_begin_1e6957bc3;
		}
		_iter_end_1e6957bc3:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6959c5d:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1e6959c5d:;
			++it;
			goto _iter_begin_1e6959c5d;
		}
		_iter_end_1e6959c5d:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6959b81:;
		if (it != expr_end) {
			jule::Ptr<_1e30709c6_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1e6959b81:;
			++it;
			goto _iter_begin_1e6959b81;
		}
		_iter_end_1e6959b81:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e695c29e:;
		if (it != expr_end) {
			jule::Ptr<_1e30721d1_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1e695c29e:;
			++it;
			goto _iter_begin_1e695c29e;
		}
		_iter_end_1e695c29e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3169ad1_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31702ac_IsNil(_1e316ee05_Data* _self_) {
	return _1e31a17c7_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e3170543_IsVoid(_1e316ee05_Data* _self_) {
	return _1e31a1a5d_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e31707c9_IsConst(_1e316ee05_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1e3170b1a_GoodOperand(_1e316ee05_Data* _self_, jule::Ptr<_1e316ee05_Data>* _10331_other) {
	if ((_1e31a3884_TypeEnum((*((*(_10331_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1e31a2d4a_Prim((*((*(_10331_other))))._field_Kind.ptr()) == nullptr) || (!(_1e31ab9e1_IsAny(_1e31a2d4a_Prim((*((*(_10331_other))))._field_Kind.ptr()).ptr())))) && (_1e31a4654_Trait((*((*(_10331_other))))._field_Kind.ptr()) == nullptr)) && (!(_1e31a17c7_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e316ee05_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3171049_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1e3172149_pushErr(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _13426_token, jule::Str _13441_fmt, jule::Slice<jule::Any> _13454_args) {
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _13426_token, _13441_fmt, _13454_args);
}



inline void _1e31724ac_pushSuggestion(_1e3171ae9_Eval* _self_, jule::Str _13933_fmt, jule::Slice<jule::Any> _13946_args) {
	_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), _13933_fmt, _13946_args);
}



inline void _1e31726aa_allowBuiltin(_1e3171ae9_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e31728a8_disallowBuiltin(_1e3171ae9_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1e3172b3e_isUnsafe(_1e3171ae9_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1e3172dc5_isGlobal(_1e3171ae9_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e699e555:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e699e91d:;
			{
				return false;;
			}
		}
		_match_end_1e699e8b8:;
	};
}



inline jule::Bool _1e31731d3_applyNumericPrefix(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _16642_d) {
	if ((((((*(_16642_d)) == nullptr) || (!(_1e31707c9_IsConst((*(_16642_d)).ptr())))) || (_1e31a2d4a_Prim((*((*(_16642_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1e31a82c3_Prim> _1739_prim = _1e31a2d4a_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1739_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_22893d2b4_IsFloat(_1e31a8614_Str(_1739_prim.ptr()))) {
			_case_begin_1e69a216d:;
			{
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>((*((*(_self_))._field_prefix)));
				_228942593_SetF64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::F64>(_228941718_AsF64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_22893c89b_IsSigInt(_1e31a8614_Str(_1739_prim.ptr()))) {
			_case_begin_1e69a21d4:;
			{
				if ((!(_1e315103a_sigAssignable(_1e31a8614_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>((*((*(_self_))._field_prefix)));
				_2289419c1_SetI64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_22893cba9_IsUnsigInt(_1e31a8614_Str(_1739_prim.ptr()))) {
			_case_begin_1e69a224a:;
			{
				if ((!(_1e3151403_unsigAssignable(_1e31a8614_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>((*((*(_self_))._field_prefix)));
				_228941c79_SetU64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		_match_end_1e69a1d93:;
	};
	return true;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3173524_litStr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr>* _20122_l) {
	jule::Str _20213_s = jule::Str();;
	if (_1e30102a1_IsRawStr((*((*(_20122_l))))._field_Value)) {
		_20213_s=_1e314e2be_ToRawStr((*((*(_20122_l))))._field_Value);
	} else {
		_20213_s=_1e314e610_ToStr((*((*(_20122_l))))._field_Value);
	};
	jule::Ptr<_22893da56_Const> _20813_constant = static__22893e7e3_NewStr(_20213_s);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20813_constant, &__jule_any_type19), ._field_Constant=_20813_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3173865_litRune(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr>* _21823_l) {
	jule::I32 _2199_r = _1e314e016_ToRune((*((*(_21823_l))))._field_Value);;
	jule::Ptr<_1e316ee05_Data> _22013_data = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2199_r)))});;
	jule::Bool _2249_isAscii = _1e3132725_IsAscii(_2199_r);;
	if (_2249_isAscii) {
		(*(_22013_data))._field_Kind=_1e32841e5_primU8;
	} else {
		(*(_22013_data))._field_Kind=_1e3283b62_primI32;
	};
	(*(_22013_data))._field_Mutable=true;
	(*(_22013_data))._field_Model=jule::Any(jule::new_ptr<_1e3056627_RuneExprModel>(_1e3056627_RuneExprModel{._field_Code=_2199_r}), &__jule_any_type82);
	(*(_22013_data))._field_IsRune=true;
	(*(_22013_data))._field_untyped=true;
	return _22013_data;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3173ba6_litFloat(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr>* _23824_l) {
	jule::F64 _2399_f = ({
		auto except = _2289238c6_ParseFloat((*((*(_23824_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_22893da56_Const> _24013_constant = static__22893eaac_NewF64(_2399_f);;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_untyped=true, ._field_Kind=_1e328527e_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24013_constant, &__jule_any_type19), ._field_Constant=_24013_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3173ee7_litInt(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr>* _25026_l) {
	;
	jule::Str _25313_lit = (*((*(_25026_l))))._field_Value;;
	jule::I64 _25413_base = 0LL;;
	{
		
		if (_2276ede77_HasPrefix(_25313_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1e69b0d08:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=16LLU;
			}
		}
		else if (_2276ede77_HasPrefix(_25313_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1e69b0de6:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=2LLU;
			}
		}
		else if (_2276ede77_HasPrefix(_25313_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1e69b09ea:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=8LLU;
			}
		}
		else if (((_25313_lit[0LL] == '0') && (_25313_lit.len() > 1LL))) {
			_case_begin_1e69b0a61:;
			{
				(_25313_lit).mut_slice(1LL);;
				_25413_base=8LLU;
			}
		}
		else {
			_case_begin_1e69b0984:;
			{
				_25413_base=10LLU;
			}
		}
		_match_end_1e69b092e:;
	};
	jule::Ptr<_1e316ee05_Data> _27413_d = jule::new_ptr<_1e316ee05_Data>();;
	jule::Bool _27613_ok = true;;
	jule::I64 _2779_sig = ({
		auto except = _22891be85_ParseInt(_25313_lit, _25413_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27613_ok=false;

			0LL;
		});
	});;
	if (_27613_ok) {
		(*(_27413_d))._field_Constant=static__22893de96_NewI64(_2779_sig);
		(*(_27413_d))._field_Kind=_1e3283315_primInt;
	} else {
		jule::U64 _28513_unsig = ({
			auto except = _22891b9ce_ParseUint(_25313_lit, _25413_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1e3172149_pushErr(_self_, (*((*(_25026_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1e31724ac_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27413_d))._field_Constant=static__22893e260_NewU64(_28513_unsig);
		(*(_27413_d))._field_Kind=_1e3282e3b_primUint;
	};
	(*(_27413_d))._field_Model=jule::Any((*(_27413_d))._field_Constant, &__jule_any_type19);
	if ((!(_1e31731d3_applyNumericPrefix(_self_, &(_27413_d))))) {
		_1e3198d63_fitBitsize(&(_27413_d));
	};
	(*(_27413_d))._field_Mutable=true;
	(*(_27413_d))._field_untyped=true;
	return _27413_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3174338_litNum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr>* _30626_l) {
	{
		
		if (_1e3010e94_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1e69b8052:;
			{
				return _1e3173ba6_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1e69b789d:;
			{
				return _1e3173ee7_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1e69b7804:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3174679_evalLit(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302984d_LitExpr> _31526_lit) {
	{
		
		if (_1e300eed7_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1e69b8ae1:;
			{
				return _1e3173524_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1e301056a_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1e69b8b68:;
			{
				return _1e3173865_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1e301125d_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1e69b8be0:;
			{
				return _1e3174338_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1e69b8508:;
			{
				return nullptr;;
			}
		}
		_match_end_1e69b843c:;
	};
}



inline jule::Any _1e31749ba_findBuiltins(_1e3171ae9_Eval* _self_, jule::Str* _32832_ident) {
	if (_1e30d9a51_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1e69bae23:;
				{
					jule::Any _33221_def = _1e3198b32_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1e30bbeb7_ImportInfo>(1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1e69bae89:;
				{
					jule::Any _33721_def = _1e319988b_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1e30dc955_Sema>(3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1e69bb000:;
				{
					jule::Any _34221_def = _1e319988b_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1e69badbd:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1e32859ee_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1e3174db6_getDef(_1e3171ae9_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1e310ed40_Var> _36013_v = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bd915_FindVar((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1e319e907_TypeAlias> _36513_ta = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bdd11_FindTypeAlias((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type66);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1e30709c6_Enum> _37117_enm = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bec8a_FindEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1e30721d1_TypeEnum> _37617_tenm = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31c00cb_FindTypeEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1e305a032_Fn> _38213_f = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31be608_FindFn((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type64);;
	};
	jule::Ptr<_1e30450c7_Struct> _38713_s = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31be20c_FindStruct((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type65);;
	};
	return _1e31749ba_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1e30610e3_ReferenceStack> _1e317514c_getOwnerRefers(_1e3171ae9_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e69c32c1:;
			{
				jule::Ptr<_1e30a2d8d_scopeChecker> _39817_sc = _1e30a6215_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1e69c2b94:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1e69c2b3e:;
	};
	return nullptr;;
}



inline void _1e69d5129_pushReference(_1e3171ae9_Eval* _self_, jule::Ptr<_1e305ce36_FnIns>* _41040_ref) {
	jule::Ptr<_1e30610e3_ReferenceStack> _41113_refers = _1e317514c_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1e69d7291_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1e3061dc4_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1e69e8d74_pushReference(_1e3171ae9_Eval* _self_, jule::Ptr<_1e310ed40_Var>* _41040_ref) {
	jule::Ptr<_1e30610e3_ReferenceStack> _41113_refers = _1e317514c_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1e69eae75_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1e3061dc4_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1e6aa61a6_pushReference(_1e3171ae9_Eval* _self_, jule::Ptr<_1e3047d55_StructIns>* _41040_ref) {
	jule::Ptr<_1e30610e3_ReferenceStack> _41113_refers = _1e317514c_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1e6aa831d_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1e3061dc4_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3175746__evalEnum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30709c6_Enum> _41728_enm) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_41728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3175b42_evalEnum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30709c6_Enum> _42631_enm, jule::Ptr<_20cb74604_Token> _42643_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*(_42631_enm))._field_Token)))) {
		_1e3172149_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42631_enm))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e3175746__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3175e83__evalTypeEnum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30721d1_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_43532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1e316ee05_Data> _1e317637e_evalTypeEnum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30721d1_TypeEnum> _44435_enm, jule::Ptr<_20cb74604_Token> _44451_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*(_44435_enm))._field_Token)))) {
		_1e3172149_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44435_enm))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e3175e83__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1e316ee05_Data> _1e31766c0__evalStruct(_1e3171ae9_Eval* _self_, jule::Ptr<_1e3047d55_StructIns> _45330_s) {
	jule::Ptr<_1e316ee05_Data> _45413_d = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_45330_s, 0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*((*(_45330_s))._field_Decl))._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*((*(_45330_s))._field_Decl))._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3176abb_evalStruct(_1e3171ae9_Eval* _self_, jule::Ptr<_1e3047d55_StructIns> _46733_s, jule::Ptr<_20cb74604_Token> _46748_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*((*(_46733_s))._field_Decl))._field_Token)))) {
		_1e3172149_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46733_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e3177270_checkDeprecated(_self_, &((*((*(_46733_s))._field_Decl))._field_Directives), _46748_errorToken);
	return _1e31766c0__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3176e0c_evalFnIns(_1e3171ae9_Eval* _self_, jule::Ptr<_1e305ce36_FnIns> _47728_f) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_47728_f, 1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1e3177270_checkDeprecated(_1e3171ae9_Eval* _self_, jule::Slice<jule::Ptr<_1e302388b_Directive>>* _48639_directives, jule::Ptr<_20cb74604_Token> _48670_tok) {
	if (_1e3172b3e_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1e302388b_Directive> _4919_d = _1e3198769_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*(_4919_d))._field_Args.len() == 0LL)) {
			_1e3172149_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1e3172149_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4919_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e317766b_evalFn(_1e3171ae9_Eval* _self_, jule::Ptr<_1e305a032_Fn> _50229_f, jule::Ptr<_20cb74604_Token> _50237_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*(_50229_f))._field_Token)))) {
		_1e3172149_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50229_f))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e3177270_checkDeprecated(_self_, &((*(_50229_f))._field_Directives), _50237_errorToken);
	jule::Ptr<_1e305ce36_FnIns> _51113_ins = _1e305b792_instance(_50229_f);;
	_1e69d5129_pushReference(_self_, &(_51113_ins));
	return _1e3176e0c_evalFnIns(_self_, _51113_ins);;
}



inline void _1e3177a89_pushIllegalCycleError(_1e3171ae9_Eval* _self_, jule::Ptr<_1e310ed40_Var>* _51641_v1, jule::Ptr<_1e310ed40_Var>* _51652_v2, _227713453_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _2277b225a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _22771d2c6_Buf(_51667_message);;
	_22771c02d_WriteStr(_51667_message, _2276ed680_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22771c02d_WriteStr(_51667_message, _5189_refers_to);
	_22771c2d6_WriteByte(_51667_message, '\n');
	_22771bc75_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1e3177e85_checkCrossCycle(_1e3171ae9_Eval* _self_, jule::Ptr<_1e310ed40_Var>* _52635_v, _227713453_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e69da052:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1e3177a89_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1e3177e85_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1e3177a89_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1e69da052:;
			++it;
			goto _iter_begin_1e69da052;
		}
		_iter_end_1e69da052:;
	};
	return true;;
}



inline jule::Bool _1e3178381_checkIllegalCycles(_1e3171ae9_Eval* _self_, jule::Ptr<_1e310ed40_Var>* _54342_v, jule::Ptr<_20cb74604_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1e3172149_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_227713453_StrBuilder _55613_message = static__22771371c_New(32LL);;
	if ((!(_1e3177e85_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _22771c825_Str(&_55613_message);;
		_22771ca23_Clear(&_55613_message);
		_1e3177a89_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_22771c825_Str(&_55613_message);
		_1e3172149_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e316ee05_Data> _1e317877c_evalVar(_1e3171ae9_Eval* _self_, jule::Ptr<_1e310ed40_Var> _57130_v, jule::Ptr<_20cb74604_Token> _57139_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*(_57130_v))._field_Token)))) {
		_1e3172149_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e3177270_checkDeprecated(_self_, &((*(_57130_v))._field_Directives), _57139_errorToken);
	if (((*(_57130_v))._field_Token == nullptr)) {
		goto _julec_label_1e6a00e03;
	};
	(*(_57130_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e69e4864:;
			{
				jule::Bool _59013_ok = _1e3178381_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e69e48ca:;
			{
				if (((!((*(_57130_v))._field_Reference)) || _1e3172b3e_isUnsafe(_self_))) {
					goto _match_end_1e69e480e;
				};
				jule::Ptr<_1e30a2d8d_scopeChecker> _59817_s = (*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0);;
				while ((((*(_59817_s))._field_owner == nullptr) && ((*(_59817_s))._field_parent != nullptr))) {
					{
						_59817_s=(*(_59817_s))._field_parent;
					}
				_iter_next_1e69e6459:;
				}
				_iter_end_1e69e6459:;;
				if (((((*(_59817_s))._field_owner != nullptr) && (*((*(_59817_s))._field_owner))._field_Anon) && ((*(_57130_v))._field_Scope != (*((*(_59817_s))._field_owner))._field_Scope))) {
					_1e3172149_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1e69e480e:;
	};
	if (((*(_57130_v))._field_Scope == nullptr)) {
		_1e69e8d74_pushReference(_self_, &(_57130_v));
	};
	if (((!((*(_57130_v))._field_Binded)) && (((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57130_v))._field_Constant) {
			_1e3106892_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait<_1e31c0230_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57130_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1e3106892_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1e6a00e03:;
	jule::Ptr<_1e316ee05_Data> _64213_d = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*((*(_57130_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57130_v))._field_Mutable, ._field_Reference=(*(_57130_v))._field_Reference, ._field_Lvalue=(!((*(_57130_v))._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*(_57130_v))._field_Binded)) && _1e31101c5_IsInitialized(_57130_v.ptr())) && ((*((*(_57130_v))._field_Value))._field_Data != nullptr))) {
		(*(_64213_d))._field_IsRune=(*((*((*(_57130_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57130_v))._field_Constant && ((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64213_d))._field_Constant=jule::new_ptr<_22893da56_Const>((*((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64213_d))._field_Model=jule::Any((*(_64213_d))._field_Constant, &__jule_any_type19);
		if (_1e31106e2_untypedConstant(_57130_v.ptr())) {
			_1e31731d3_applyNumericPrefix(_self_, &(_64213_d));
			(*(_64213_d))._field_untyped=true;
		};
	};
	return _64213_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3178b78_evalTypeAlias(_1e3171ae9_Eval* _self_, jule::Ptr<_1e319e907_TypeAlias> _66636_ta, jule::Ptr<_20cb74604_Token> _66652_errorToken) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66636_ta))._field_Public, (*(_66636_ta))._field_Token)))) {
		_1e3172149_pushErr(_self_, _66652_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66636_ta))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66636_ta))._field_Used=true;
	jule::Trait<_1e31a0243_Kind> _67513_kind = (*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1e316ee05_Data> _67617_d = nullptr;;
	{
		auto &_match_expr{ _67513_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6a0bb9a:;
			{
				_67617_d=_1e31766c0__evalStruct(_self_, _67513_kind.cast_ptr<_1e3047d55_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e6a0b9be:;
			{
				_67617_d=_1e3175746__evalEnum(_self_, _67513_kind.cast_ptr<_1e30709c6_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e6a09c86:;
			{
				_67617_d=_1e3175e83__evalTypeEnum(_self_, _67513_kind.cast_ptr<_1e30721d1_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1e6a09c20:;
			{
				_67617_d=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66636_ta))._field_Binded) {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*(_66636_ta))._field_Ident;
				} else {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67617_d))._field_Model=jule::Any((*(_67617_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1e6a09bba:;
	};
	(*((*(_67617_d))._field_Kind))._field_Generic=(*(_66636_ta))._field_Generic;
	return _67617_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3179074_evalDef(_1e3171ae9_Eval* _self_, jule::Any* _70231_def, jule::Ptr<_20cb74604_Token> _70241_ident) {
	{
		auto &_match_expr{ (*(_70231_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e6a10000:;
			{
				return _1e317877c_evalVar(_self_, (*(_70231_def)).cast_ptr<_1e310ed40_Var>(&__jule_any_type8), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e6a10066:;
			{
				return _1e3175b42_evalEnum(_self_, (*(_70231_def)).cast_ptr<_1e30709c6_Enum>(&__jule_any_type67), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1e6a100cc:;
			{
				return _1e317637e_evalTypeEnum(_self_, (*(_70231_def)).cast_ptr<_1e30721d1_TypeEnum>(&__jule_any_type68), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6a10143:;
			{
				return _1e3176abb_evalStruct(_self_, _1e3045539_instance((*(_70231_def)).cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e6a101a9:;
			{
				jule::Ptr<_1e305a032_Fn> _71317_f = (*(_70231_def)).cast_ptr<_1e305a032_Fn>(&__jule_any_type64);;
				if ((!(*(_71317_f))._field_Ident.equal("init", 4))) {
					return _1e317766b_evalFn(_self_, _71317_f, _70241_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e6a10231:;
			{
				return _1e3176e0c_evalFnIns(_self_, (*(_70231_def)).cast_ptr<_1e305ce36_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e6a102a8:;
			{
				return _1e3178b78_evalTypeAlias(_self_, (*(_70231_def)).cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66), _70241_ident);;
			}
		}
		_match_end_1e6a0ee9a:;
	};
	_1e3172149_pushErr(_self_, _70241_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70241_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1e316ee05_Data> _1e31793b5_evalIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302a1cd_IdentExpr> _72628_ident) {
	jule::Any _72713_def = _1e3174db6_getDef(_self_, &((*(_72628_ident))._field_Ident), (*(_72628_ident))._field_Binded);;
	return _1e3179074_evalDef(_self_, &(_72713_def), (*(_72628_ident))._field_Token);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3179706_evalUnary(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302a860_UnaryExpr> _73133_u) {
	_1e3190321_unaryEval _73213_unary = static__1e3190761_new(_self_);;
	return _1e3191b91_eval(&_73213_unary, _73133_u);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3179a47_evalVariadic(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302ac39_VariadicExpr> _73636_v) {
	if (((*(_73636_v))._field_Expr == nullptr)) {
		_1e3172149_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _74213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74213_prefix;
	});;
	jule::Ptr<_1e316ee05_Data> _74613_d = _1e318ed59_evalExpr(_self_, (*(_73636_v))._field_Expr);;
	if ((_74613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e31a2ab4_Variadicable((*(_74613_d))._field_Kind.ptr())))) {
		_1e3172149_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_74613_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e31ac7c2_Slc> _75613_slc = _1e31a3da1_Slc((*(_74613_d))._field_Kind.ptr());;
	(*(_74613_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_BindIdent=(*((*(_75613_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75613_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75613_slc))._field_Elem))._field_Kind});
	return _74613_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3179d88_evalUnsafe(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3029c27_UnsafeExpr> _76634_u) {
	jule::Bool _7679_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1e316ee05_Data> _76913_d = _1e318ed59_evalExpr(_self_, (*(_76634_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7679_unsafety;
	return _76913_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e317a1c9_evalArr(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302ecc6_SliceExpr> _77431_s) {
	jule::Ptr<_1e31aeae3_Arr> _77613_pt = _1e31a3b1a_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1e31aeae3_Arr> _77813_arr = jule::new_ptr<_1e31aeae3_Arr>(_1e31aeae3_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77613_pt))._field_Elem});;
	jule::Bool _78413_filled = false;;
	if (((*(_77431_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77431_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1e6a2054e:;
				{
					if (((*((*((*(_77431_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1e302ac39_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1e6a204a5;
					};
					if ((*(_77613_pt))._field_Auto) {
						_1e3172149_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78413_filled=true;
					(*(_77431_s))._field_Exprs=(*(_77431_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1e6a204a5:;
		};
	};
	(*(_77813_arr))._field_N=static_cast<jule::I64>((*(_77431_s))._field_Exprs.len());
	if ((!((*(_77613_pt))._field_Auto))) {
		if (((*(_77813_arr))._field_N > (*(_77613_pt))._field_N)) {
			_1e3172149_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77813_arr))._field_N < (*(_77613_pt))._field_N)) {
			(*(_77813_arr))._field_N=(*(_77613_pt))._field_N;
		};
	};
	jule::Ptr<_1e30526de_ArrayExprModel> _81313_model = jule::new_ptr<_1e30526de_ArrayExprModel>(_1e30526de_ArrayExprModel{._field_Kind=_77813_arr, });;
	if (_78413_filled) {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77431_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1e31a06e9_TypeKind> _82213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77813_arr))._field_Elem;
	{
		auto expr = &((*(_77431_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6a25642:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _82421_elem = *it;
			{
				jule::Ptr<_1e316ee05_Data> _82517_d = _1e318ed59_evalExpr(_self_, _82421_elem);;
				if ((_82517_d == nullptr)) {
					goto _iter_next_1e6a25642;
				};
				_1e30e809d_checkAssignType((*(_self_))._field_s, false, &((*(_77813_arr))._field_Elem), &(_82517_d), (*(_77431_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_82517_d))._field_Model); };
			}
			_iter_next_1e6a25642:;
			++it;
			goto _iter_begin_1e6a25642;
		}
		_iter_end_1e6a25642:;
	};
	(*(_self_))._field_prefix=_82213_prefix;
	if (_78413_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_77813_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81313_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e317a680_evalExpSlc(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302ecc6_SliceExpr> _84834_s, jule::Ptr<_1e31a06e9_TypeKind> _84853_t, jule::Any _84871_first) {
	jule::Ptr<_1e31ac7c2_Slc> _84913_slc = jule::new_ptr<_1e31ac7c2_Slc>(_1e31ac7c2_Slc{._field_Elem=_84853_t});;
	jule::I64 _85313_i = 0LL;;
	jule::Ptr<_1e304e697_SliceExprModel> _85413_model = jule::new_ptr<_1e304e697_SliceExprModel>(_1e304e697_SliceExprModel{._field_ElemKind=_84853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84834_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push(_84871_first); };
		_85313_i=1LL;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _86313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84913_slc))._field_Elem;
	{
		auto expr = (*(_84834_s))._field_Exprs.slice(_85313_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e6a2ce63:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _86521_elem = *it;
			{
				jule::Ptr<_1e316ee05_Data> _86617_d = _1e318ed59_evalExpr(_self_, _86521_elem);;
				if ((_86617_d == nullptr)) {
					goto _iter_next_1e6a2ce63;
				};
				_1e30e809d_checkAssignType((*(_self_))._field_s, false, &((*(_84913_slc))._field_Elem), &(_86617_d), (*(_84834_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push((*(_86617_d))._field_Model); };
			}
			_iter_next_1e6a2ce63:;
			++it;
			goto _iter_begin_1e6a2ce63;
		}
		_iter_end_1e6a2ce63:;
	};
	(*(_self_))._field_prefix=_86313_prefix;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_84913_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85413_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e317a9c1_evalSliceExpr(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302ecc6_SliceExpr> _88437_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1e31a3b1a_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e6a318d4:;
				{
					return _1e317a1c9_evalArr(_self_, _88437_s);;
				}
			}
			else if ((_1e31a3da1_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e6a3195b:;
				{
					jule::Ptr<_1e31ac7c2_Slc> _89021_pt = _1e31a3da1_Slc((*(_self_))._field_prefix.ptr());;
					return _1e317a680_evalExpSlc(_self_, _88437_s, (*(_89021_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1e6a317c4:;
		};
	};
	jule::Ptr<_1e31a06e9_TypeKind> _89513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88437_s))._field_Exprs.len() == 0LL)) {
		_1e3172149_pushErr(_self_.ptr(), (*(_88437_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _90313_firstElem = _1e318ed59_evalExpr(_self_, (*(_88437_s))._field_Exprs[0LL]);;
	if ((_90313_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _90813_d = _1e317a680_evalExpSlc(_self_, _88437_s, (*(_90313_firstElem))._field_Kind, (*(_90313_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89513_prefix;
	return _90813_d;;
}



inline void _1e317ad34_checkIntegerIndexingByData(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _91450_d, jule::Ptr<_20cb74604_Token> _91460_token) {
	jule::Str _9159_err_key = _1e319ae53_checkDataForIntegerIndexing(_91450_d);;
	{
		auto &_match_expr{ _9159_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e6a371c0:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1e6a379ea:;
			{
				_1e3172149_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_91450_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1e6a376cb:;
			{
				_1e3172149_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1e6a37676:;
	};
}



inline void _1e317b252_indexingPtr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _92635_d, jule::Ptr<_1e316ee05_Data>* _92650_index, jule::Ptr<_1e3030766_IndexingExpr>* _92665_i) {
	_1e317ad34_checkIntegerIndexingByData(_self_, _92650_index, (*((*(_92665_i))))._field_Token);
	(*((*(_92635_d))))._field_Lvalue=true;
	jule::Ptr<_1e31b05b6_Ptr> _93013_ptr = _1e31a3367_Ptr((*((*(_92635_d))))._field_Kind.ptr());;
	{
		
		if (_1e31b1100_IsUnsafe(_93013_ptr.ptr())) {
			_case_begin_1e6a3a35a:;
			{
				_1e3172149_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e3172b3e_isUnsafe(_self_)))) {
			_case_begin_1e6a3a3d2:;
			{
				_1e3172149_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e6a3a305:;
	};
	(*((*(_92635_d))))._field_Kind=(*(_93013_ptr))._field_Elem;
}



inline void _1e317b670_indexingArr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _94235_d, jule::Ptr<_1e316ee05_Data>* _94250_index, jule::Ptr<_1e3030766_IndexingExpr>* _94265_i) {
	jule::Ptr<_1e31aeae3_Arr> _94313_arr = _1e31a3b1a_Arr((*((*(_94235_d))))._field_Kind.ptr());;
	(*((*(_94235_d))))._field_Kind=(*(_94313_arr))._field_Elem;
	_1e317ad34_checkIntegerIndexingByData(_self_, _94250_index, (*((*(_94265_i))))._field_Token);
	(*((*(_94235_d))))._field_Lvalue=true;
	if ((_1e31707c9_IsConst((*(_94250_index)).ptr()) && (_228941718_AsF64((*((*(_94250_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94313_arr))._field_N)))) {
		_1e3172149_pushErr(_self_, (*((*(_94265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1e317ba8d_indexingSlc(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _95235_d, jule::Ptr<_1e316ee05_Data>* _95250_index, jule::Ptr<_1e3030766_IndexingExpr>* _95265_i) {
	jule::Ptr<_1e31ac7c2_Slc> _95313_slc = _1e31a3da1_Slc((*((*(_95235_d))))._field_Kind.ptr());;
	(*((*(_95235_d))))._field_Kind=(*(_95313_slc))._field_Elem;
	_1e317ad34_checkIntegerIndexingByData(_self_, _95250_index, (*((*(_95265_i))))._field_Token);
	(*((*(_95235_d))))._field_Lvalue=true;
	if ((!(_1e31707c9_IsConst((*(_95250_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95235_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e6a47268:;
			{
				jule::Ptr<_1e304e697_SliceExprModel> _96417_m = (*((*(_95235_d))))._field_Model.cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96513_indx = _228941718_AsF64((*((*(_95250_index))))._field_Constant.ptr());;
				if ((_96513_indx >= static_cast<jule::F64>((*(_96417_m))._field_Elems.len()))) {
					_1e3172149_pushErr(_self_, (*((*(_95265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95235_d))))._field_Model=(*(_96417_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96513_indx))];
					(*((*(_95235_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1e6a47213:;
	};
}



inline void _1e317beab_indexingMap(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _97535_d, jule::Ptr<_1e316ee05_Data>* _97550_index, jule::Ptr<_1e3030766_IndexingExpr>* _97569_i) {
	(*((*(_97535_d))))._field_Lvalue=true;
	if (((*(_97550_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1e31ade66_Map> _98013_m = _1e31a48da_Map((*((*(_97535_d))))._field_Kind.ptr());;
	_1e3153a10_assignTypeChecker _98113_atc = _1e3153a10_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98013_m))._field_Key, ._field_d=(*(_97550_index)), ._field_errorToken=(*((*(_97569_i))))._field_Token};;
	_1e3154c75_check(&_98113_atc);
	(*((*(_97535_d))))._field_Kind=(*(_98013_m))._field_Val;
}



inline void _1e317c3c9_indexingStr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _99135_d, jule::Ptr<_1e316ee05_Data>* _99150_index, jule::Ptr<_1e3030766_IndexingExpr>* _99165_i) {
	(*((*(_99135_d))))._field_Kind=_1e32841e5_primU8;
	(*((*(_99135_d))))._field_Mutable=false;
	(*((*(_99135_d))))._field_Lvalue=true;
	if (((*(_99150_index)) == nullptr)) {
		return;;
	};
	_1e317ad34_checkIntegerIndexingByData(_self_, _99150_index, (*((*(_99165_i))))._field_Token);
	if ((!(_1e31707c9_IsConst((*(_99150_index)).ptr())))) {
		(*((*(_99135_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1e31707c9_IsConst((*(_99135_d)).ptr())) {
		jule::Ptr<_20cb74604_Token> _100813_errorToken = (*((*(_99165_i))))._field_Token;;
		jule::I64 _100913_j = _2289411eb_AsI64((*((*(_99150_index))))._field_Constant.ptr());;
		jule::Str _101013_s = _228940bce_ReadStr((*((*(_99135_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100913_j) >= _101013_s.len())) {
			_1e3172149_pushErr(_self_, _100813_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_228941c79_SetU64((*((*(_99135_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101013_s[_100913_j])));
		};
	};
}



inline void _1e317c7e7_toIndexing(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _101934_d, jule::Ptr<_1e316ee05_Data>* _101949_index, jule::Ptr<_1e3030766_IndexingExpr>* _101968_i) {
	{
		
		if ((_1e31a3367_Ptr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a5298d:;
			{
				_1e317b252_indexingPtr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1e31a3b1a_Arr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a52a15:;
			{
				_1e317b670_indexingArr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1e31a3da1_Slc((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a52a8c:;
			{
				_1e317ba8d_indexingSlc(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1e31a48da_Map((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a52b14:;
			{
				_1e317beab_indexingMap(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a52b8b:;
			{
				jule::Ptr<_1e31a82c3_Prim> _103413_prim = _1e31a2d4a_Prim((*((*(_101934_d))))._field_Kind.ptr());;
				{
					
					if (_1e31ab75a_IsStr(_103413_prim.ptr())) {
						_case_begin_1e6a56c06:;
						{
							_1e317c3c9_indexingStr(_self_, _101934_d, _101949_index, _101968_i);
							return;;
						}
					}
					_match_end_1e6a56b6d:;
				};
			}
		}
		_match_end_1e6a5284a:;
	};
	_1e3172149_pushErr(_self_, (*((*(_101968_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_101934_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1e317cc9d_pushGenericsFromExprSubIdent(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302b8b6_SubIdentExpr>* _104453_sexpr, jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>* _104514_generics, jule::Ptr<_1e30287a3_Expr>* _104542_expr) {
	jule::Ptr<_1e3024d76_SubIdentTypeDecl> _104613_t = jule::new_ptr<_1e3024d76_SubIdentTypeDecl>();;
	if ((!(_1e319bd44_pushSubIdentFromExpr(jule::Any((*(_104453_sexpr)), &__jule_any_type85), &(_104613_t))))) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_104542_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_104514_generics)); __jule_push_dest.push(jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Kind=jule::Any(_104613_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1e317d199_pushGenericsFromData(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>* _105545_generics, jule::Ptr<_1e30287a3_Expr>* _105573_expr) {
	{
		auto &_match_expr{ (*((*(_105573_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1e6a5a0e4:;
			{
				jule::Ptr<_1e302a860_UnaryExpr> _105817_u = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1e302a860_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105817_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1e6a5bbd9:;
						{
							jule::Ptr<_1e3025e98_PtrTypeDecl> _106121_kind = jule::new_ptr<_1e3025e98_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _106221__generics = jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, 1LL);;
							_1e317d199_pushGenericsFromData(_self_, &(_106221__generics), &((*(_105817_u))._field_Expr));
							(*(_106121_kind))._field_Elem=_106221__generics[0LL];
							{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_106121_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1e6a5cd50:;
						{
							jule::Ptr<_1e3025519_SptrTypeDecl> _107021_kind = jule::new_ptr<_1e3025519_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _107121__generics = jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, 1LL);;
							_1e317d199_pushGenericsFromData(_self_, &(_107121__generics), &((*(_105817_u))._field_Expr));
							(*(_107021_kind))._field_Elem=_107121__generics[0LL];
							{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_107021_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1e6a5c228:;
						{
							_1e3172149_pushErr(_self_.ptr(), (*(_105817_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1e6a5c1c3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e6a5b06d:;
			{
				{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push((*((*(_105573_expr))))._field_Kind.cast_ptr<_1e302446e_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1e6a5b0d4:;
			{
				jule::Ptr<_1e302b8b6_SubIdentExpr> _108517_sexpr = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1e302b8b6_SubIdentExpr>(&__jule_any_type85);;
				return _1e317cc9d_pushGenericsFromExprSubIdent(_self_, &(_108517_sexpr), _105545_generics, _105573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e6a5b14a:;
			{
				jule::Ptr<_1e302a1cd_IdentExpr> _108817_ident = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1e302a1cd_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_108817_ident))._field_Token, ._field_Ident=(*(_108817_ident))._field_Ident, ._field_Binded=(*(_108817_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1e6a5a4ac:;
			{
				{
					auto expr = &((*((*((*(_105573_expr))))._field_Kind.cast_ptr<_1e3029474_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6a6485c:;
					if (it != expr_end) {
						jule::Ptr<_1e30287a3_Expr> _109725_texpr = *it;
						{
							if ((!(_1e317d199_pushGenericsFromData(_self_, _105545_generics, &(_109725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1e6a6485c:;
						++it;
						goto _iter_begin_1e6a6485c;
					}
					_iter_end_1e6a6485c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1e6a5a523:;
			{
				jule::Ptr<_1e302b4dc_NsSelectionExpr> _110317_ns = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1e302b4dc_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1e3024a79_IdentTypeDecl> _110417_decl = jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_110317_ns))._field_Ident, ._field_Ident=(*((*(_110317_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e302521c_NamespaceTypeDecl>(_1e302521c_NamespaceTypeDecl{._field_Idents=(*(_110317_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(_110417_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1e6a5a446:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*((*(_105573_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1e6a5a3e1:;
	};
	return true;;
}



inline void _1e317d50c_evalIdentDeclFromIndexing(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e316ee05_Data>* _112550_d, jule::Ptr<_1e3030766_IndexingExpr>* _112565_i) {
	jule::Ptr<_1e3047d55_StructIns> _112613_s = _1e31a43bd_Struct((*((*(_112550_d))))._field_Kind.ptr());;
	if ((_112613_s == nullptr)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*((*(_112565_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_112550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e3024a79_IdentTypeDecl> _113317_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112565_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e6a6a049:;
			{
				jule::Ptr<_1e302a1cd_IdentExpr> _113617_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1e302a1cd_IdentExpr>(&__jule_any_type79);;
				_113317_decl=jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_113617_expr))._field_Token, ._field_Ident=(*(_113617_expr))._field_Ident, ._field_Binded=(*(_113617_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1e6a6b2c0:;
			{
				jule::Ptr<_1e302b4dc_NsSelectionExpr> _114317_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1e302b4dc_NsSelectionExpr>(&__jule_any_type89);;
				_113317_decl=jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_114317_expr))._field_Ident, ._field_Ident=(*((*(_114317_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1e6a6a4bc:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*((*(_112565_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112550_d))=nullptr;
				return;;
			}
		}
		_match_end_1e6a6a467:;
	};
	if ((!(_1e317d199_pushGenericsFromData(_self_, &((*(_113317_decl))._field_Generics), &((*((*(_112565_i))))._field_Index))))) {
		(*(_112550_d))=nullptr;
		return;;
	};
	_112613_s=({ auto _wrap_copy = _1e3185008_typeChecker(_self_.ptr()); _1e31b6501_fromStruct(&_wrap_copy, &(_113317_decl), &((*(_112613_s))._field_Decl)); });
	if ((_112613_s == nullptr)) {
		(*(_112550_d))=nullptr;
		return;;
	};
	(*((*((*(_112550_d))))._field_Kind))._field_Kind=jule::Trait<_1e31a0243_Kind>(_112613_s, 0);
}



inline jule::Bool _1e317d9b3_checkGenericFn(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e305ce36_FnIns>* _116839_f, jule::Ptr<_20cb74604_Token>* _116855_et, jule::Any* _116872_model) {
	jule::Bool _11699_ok = _1e30ea699_reloadFnInsTypes((*(_self_))._field_s, (*(_116839_f)));;
	(*((*(_116839_f))))._field_reloaded=true;
	if ((!(_11699_ok))) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _117413_existInstance = _1e305baa0_appendInstance((*((*(_116839_f))))._field_Decl.ptr(), _116839_f);;
	if ((!(_1e30e96ed_checkConstraintsFn((*(_self_))._field_s, _116839_f, _116855_et, _117413_existInstance)))) {
		return false;;
	};
	if ((_117413_existInstance != nullptr)) {
		_1e319b9c0_updateModelToGenericIns(_116872_model, &(_117413_existInstance));
		_1e6a73904_updateRefer(_1e317514c_getOwnerRefers(_self_.ptr()), _116839_f, &(_117413_existInstance));
		(*(_116839_f))=_117413_existInstance;
	} else {
		_1e31099e9_checkFnInsCaller((*(_self_))._field_s, _116839_f, (*(_116855_et)));
	};
	return true;;
}



inline void _1e317dd26_evalFnGenericFromIndexing(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e316ee05_Data>* _119750_d, jule::Ptr<_1e3030766_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _119813_generics = jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1e317d199_pushGenericsFromData(_self_, &(_119813_generics), &((*((*(_119765_i))))._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e305ce36_FnIns> _120413_f = _1e31a4137_Fn((*((*(_119750_d))))._field_Kind.ptr());;
	jule::I64 _120513_genericsLen = 0LL;;
	if (((*(_120413_f))._field_Decl != nullptr)) {
		_120513_genericsLen=static_cast<jule::I64>((*((*(_120413_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1e30e1abe_checkGenericQuantity((*(_self_))._field_s.ptr(), _120513_genericsLen, static_cast<jule::I64>(_119813_generics.len()), (*((*((*(_119765_i))))._field_Expr))._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	(*(_120413_f))._field_Generics=jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>>::alloc(0LL, (*((*(_120413_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119813_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6a7a1be:;
		if (it != expr_end) {
			jule::Ptr<_1e302446e_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1e316ee05_Data> _121717_k = _1e3185349_evalType(_self_.ptr(), _121621_g);;
				if ((_121717_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>> &__jule_push_dest = (*(_120413_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1e319dd13_InsGeneric>(_1e319dd13_InsGeneric{._field_Kind=(*(_121717_k))._field_Kind, })); };
			}
			_iter_next_1e6a7a1be:;
			++it;
			goto _iter_begin_1e6a7a1be;
		}
		_iter_end_1e6a7a1be:;
	};
	if (_1e305e3bb_IsBuiltin(_120413_f.ptr())) {
		return;;
	};
	if (_1e317d9b3_checkGenericFn(_self_, &(_120413_f), &((*((*((*(_119765_i))))._field_Expr))._field_Token), &((*((*(_119750_d))))._field_Model))) {
		(*((*((*(_119750_d))))._field_Kind))._field_Kind=jule::Trait<_1e31a0243_Kind>(_120413_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e317e167_evalIndexing(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3030766_IndexingExpr> _123636_i) {
	jule::Ptr<_1e31a06e9_TypeKind> _123713_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123713_prefix;
	});;
	jule::Ptr<_1e316ee05_Data> _124113_d = _1e318e045_evalExprKind(_self_, (*((*(_123636_i))._field_Expr))._field_Kind);;
	if ((_124113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124113_d))._field_Decl) {
		_1e317d50c_evalIdentDeclFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	if ((_1e31a4137_Fn((*(_124113_d))._field_Kind.ptr()) != nullptr)) {
		_1e317dd26_evalFnGenericFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	_1e316ee05_Data _125713_oldData = (*(_124113_d));;
	jule::Ptr<_1e316ee05_Data> _125913_index = _1e318ed59_evalExpr(_self_, (*(_123636_i))._field_Index);;
	if ((_125913_index == nullptr)) {
		return nullptr;;
	};
	(*(_124113_d))._field_Decl=false;
	_1e317c7e7_toIndexing(_self_.ptr(), &(_124113_d), &(_125913_index), &(_123636_i));
	if (_1e31707c9_IsConst(_124113_d.ptr())) {
		(*(_124113_d))._field_Decl=false;
		(*(_124113_d))._field_Model=jule::Any((*(_124113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124113_d))._field_Decl) {
		(*(_124113_d))._field_Decl=false;
	} else {
		(*(_124113_d))._field_Model=jule::Any(jule::new_ptr<_1e304eb4d_IndexingExprModel>(_1e304eb4d_IndexingExprModel{._field_Token=(*(_123636_i))._field_Token, ._field_Expr=jule::new_ptr<_1e316ee05_Data>(_125713_oldData), ._field_Index=_125913_index}), &__jule_any_type45);
	};
	return _124113_d;;
}



inline __jule_tuple_x_1e316ee05_Data__jule_tuple_x_1e316ee05_Data _1e317e4a8_evalSlicingExprs(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3030dc6_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1e316ee05_Data__jule_tuple_x_1e316ee05_Data __jule_func_result;
	jule::Ptr<_1e31a06e9_TypeKind> _129113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129113_prefix;
	});;
	jule::Ptr<_1e316ee05_Data> _129517_l = nullptr;;
	jule::Ptr<_1e316ee05_Data> _129617_r = nullptr;;
	if (((*((*(_129041_s))))._field_Start != nullptr)) {
		_129517_l=_1e318ed59_evalExpr(_self_, (*((*(_129041_s))))._field_Start);
		if ((_129517_l != nullptr)) {
			_1e317ad34_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283315_primInt, ._field_Constant=static__22893de96_NewI64(0LL)});
		(*((*(_129517_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129517_l))._field_Model=jule::Any((*(_129517_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129041_s))))._field_To != nullptr)) {
		_129617_r=_1e318ed59_evalExpr(_self_, (*((*(_129041_s))))._field_To);
		if ((_129617_r != nullptr)) {
			_1e317ad34_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1e317e761_slicingArr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _132630_d) {
	jule::Ptr<_1e31a06e9_TypeKind> _132713_elemType = (*(_1e31a3b1a_Arr((*((*(_132630_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132630_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31ac7c2_Slc>(_1e31ac7c2_Slc{._field_Elem=_132713_elemType}), 22)});
	(*((*(_132630_d))))._field_Lvalue=false;
	(*((*(_132630_d))))._field_Mutable=((*((*(_132630_d))))._field_Mutable || (!(_1e31a207a_Mutable(_132713_elemType.ptr()))));
}



inline void _1e317eb7e_slicingStr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _134130_d, jule::Ptr<_1e316ee05_Data>* _134141_l, jule::Ptr<_1e316ee05_Data>* _134152_r) {
	(*((*(_134130_d))))._field_Lvalue=false;
	(*((*(_134130_d))))._field_Mutable=true;
	if ((!(_1e31707c9_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*((*(_134130_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1e31707c9_IsConst((*(_134141_l)).ptr()) && _1e31707c9_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135413_left = _2289411eb_AsI64((*((*(_134141_l))))._field_Constant.ptr());;
		if ((_135413_left < 0LL)) {
			return;;
		};
		jule::Str _135913_s = _228940bce_ReadStr((*((*(_134130_d))))._field_Constant.ptr());;
		jule::I64 _136017_right = static_cast<jule::I64>(0LL);;
		if (((*(_134152_r)) == nullptr)) {
			_136017_right=static_cast<jule::I64>(static_cast<jule::I64>(_135913_s.len()));
		} else {
			_136017_right=static_cast<jule::I64>(_2289411eb_AsI64((*((*(_134152_r))))._field_Constant.ptr()));
		};
		if ((_135413_left > _136017_right)) {
			return;;
		};
		_2289422da_SetStr((*((*(_134130_d))))._field_Constant.ptr(), _135913_s.slice(_135413_left, _136017_right));
		(*((*(_134130_d))))._field_Decl=true;
	} else {
		(*((*(_134130_d))))._field_Constant=nullptr;
	};
}



inline void _1e3180157_checkSlicing(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _137736_d, jule::Ptr<_1e316ee05_Data>* _137747_l, jule::Ptr<_1e316ee05_Data>* _137758_r, jule::Ptr<_1e3030dc6_SlicingExpr>* _137769_s) {
	{
		
		if ((_1e31a3b1a_Arr((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a942b5:;
			{
				_1e317e761_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1e31a3da1_Slc((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a9433c:;
			{
				return;;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6a943b4:;
			{
				jule::Ptr<_1e31a82c3_Prim> _138513_prim = _1e31a2d4a_Prim((*((*(_137736_d))))._field_Kind.ptr());;
				{
					
					if (_1e31ab75a_IsStr(_138513_prim.ptr())) {
						_case_begin_1e6a969b0:;
						{
							_1e317eb7e_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1e6a96927:;
				};
			}
		}
		_match_end_1e6a94194:;
	};
	_1e3172149_pushErr(_self_, (*((*(_137769_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_137736_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1e316ee05_Data> _1e3180498_evalSlicing(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3030dc6_SlicingExpr> _139635_s) {
	jule::Ptr<_1e316ee05_Data> _139713_d = _1e318ed59_evalExpr(_self_, (*(_139635_s))._field_Expr);;
	if ((_139713_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _140213_l;;
	jule::Ptr<_1e316ee05_Data> _140220_r;;
	({
		__jule_tuple_x_1e316ee05_Data__jule_tuple_x_1e316ee05_Data __jule_assign_result = _1e317e4a8_evalSlicingExprs(_self_, &(_139635_s));
		_140213_l = __jule_assign_result.__jule_result_arg0;
		_140220_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140213_l == nullptr)) {
		return _139713_d;;
	};
	(*(_139713_d))._field_Decl=false;
	_1e3180157_checkSlicing(_self_.ptr(), &(_139713_d), &(_140213_l), &(_140220_r), &(_139635_s));
	if (_1e31707c9_IsConst(_139713_d.ptr())) {
		(*(_139713_d))._field_Decl=false;
		(*(_139713_d))._field_Model=jule::Any((*(_139713_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_139713_d))._field_Decl) {
		(*(_139713_d))._field_Decl=false;
	} else {
		jule::Ptr<_1e3050e3a_SlicingExprModel> _142017_model = jule::new_ptr<_1e3050e3a_SlicingExprModel>(_1e3050e3a_SlicingExprModel{._field_Token=(*(_139635_s))._field_Token, ._field_Expr=(*(_139713_d))._field_Model, ._field_Left=(*(_140213_l))._field_Model, });;
		if ((_140220_r != nullptr)) {
			(*(_142017_model))._field_Right=(*(_140220_r))._field_Model;
		};
		(*(_139713_d))._field_Model=jule::Any(_142017_model, &__jule_any_type91);
	};
	return _139713_d;;
}



inline void _1e31808b6_castPtr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _143330_t, jule::Ptr<_1e316ee05_Data> _143348_d, jule::Ptr<_20cb74604_Token> _143358_errorToken) {
	(*(_143348_d))._field_Constant=nullptr;
	jule::Ptr<_1e31abcee_Sptr> _14359_sptr = _1e31a30d1_Sptr((*(_143348_d))._field_Kind.ptr());;
	if ((_14359_sptr != nullptr)) {
		if ((!(_1e31a0e03_Equal((*(_1e31a3367_Ptr(_143330_t.ptr())))._field_Elem, (*(_14359_sptr))._field_Elem)))) {
			_1e3172149_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_143330_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1e3172b3e_isUnsafe(_self_)))) {
		_1e3172149_pushErr(_self_, _143358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _14489_prim = _1e31a2d4a_Prim((*(_143348_d))._field_Kind.ptr());;
	if (((_1e31a3367_Ptr((*(_143348_d))._field_Kind.ptr()) == nullptr) && ((_14489_prim == nullptr) || (!(_22893ce73_IsInt(_1e31a8614_Str(_14489_prim.ptr()))))))) {
		_1e3172149_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_143330_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1e3180cd4_castStruct(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _145433_t, jule::Ptr<_1e316ee05_Data> _145451_d, jule::Ptr<_20cb74604_Token> _145461_errorToken) {
	(*(_145451_d))._field_Constant=nullptr;
	jule::Ptr<_1e306d2cb_Trait> _145613_tr = _1e31a4654_Trait((*(_145451_d))._field_Kind.ptr());;
	if ((_145613_tr == nullptr)) {
		_1e3172149_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_145433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1e3047d55_StructIns> _146213_s = _1e31a43bd_Struct(_145433_t.ptr());;
	_1e6aa61a6_pushReference(_self_, &(_146213_s));
	if ((!(_1e3046716_IsImplements((*(_146213_s))._field_Decl.ptr(), _145613_tr)))) {
		_1e3172149_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_145433_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1e3181202_castRef(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _147030_t, jule::Ptr<_1e316ee05_Data> _147048_d, jule::Ptr<_20cb74604_Token> _147058_errorToken) {
	(*(_147048_d))._field_Constant=nullptr;
	jule::Ptr<_1e31abcee_Sptr> _147213_sptr = _1e31a30d1_Sptr(_147030_t.ptr());;
	jule::Ptr<_1e31b05b6_Ptr> _147413_ptr = _1e31a3367_Ptr((*(_147048_d))._field_Kind.ptr());;
	if (((_147413_ptr != nullptr) && _1e31a0e03_Equal((*(_147213_sptr))._field_Elem, (*(_147413_ptr))._field_Elem))) {
		if ((!(_1e3172b3e_isUnsafe(_self_)))) {
			_1e3172149_pushErr(_self_, _147058_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e31a43bd_Struct((*(_147213_sptr))._field_Elem.ptr()) != nullptr)) {
		_1e3180cd4_castStruct(_self_, (*(_147213_sptr))._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1e3172149_pushErr(_self_, _147058_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_147048_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_147030_t.ptr()), &__jule_any_type4)}));
}



inline void _1e3181620_castSlc(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _149230_t, jule::Ptr<_1e316ee05_Data> _149248_d, jule::Ptr<_20cb74604_Token> _149258_errorToken) {
	jule::Ptr<_22893da56_Const> _14939_c = (*(_149248_d))._field_Constant;;
	(*(_149248_d))._field_Constant=nullptr;
	if ((_1e31a35ed_Enum((*(_149248_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1e31a2d4a_Prim((*((*(_1e31a35ed_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1e31ab75a_IsStr(_1e31a2d4a_Prim((*((*(_1e31a35ed_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1e3172149_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_149230_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1e31a2d4a_Prim((*(_149248_d))._field_Kind.ptr()) == nullptr) || (!(_1e31ab75a_IsStr(_1e31a2d4a_Prim((*(_149248_d))._field_Kind.ptr()).ptr()))))) {
		_1e3172149_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149230_t=(*(_1e31a3da1_Slc(_149230_t.ptr())))._field_Elem;
	jule::Ptr<_1e31a82c3_Prim> _15079_prim = _1e31a2d4a_Prim(_149230_t.ptr());;
	if (((_15079_prim == nullptr) || ((!(_1e31a9bba_IsU8(_15079_prim.ptr()))) && (!(_1e31a969d_IsI32(_15079_prim.ptr())))))) {
		_1e3172149_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14939_c != nullptr)) {
		{
			
			if (_1e31a9bba_IsU8(_15079_prim.ptr())) {
				_case_begin_1e6ab874b:;
				{
					jule::Str _151717_s = _228940bce_ReadStr(_14939_c.ptr());;
					jule::Ptr<_1e304e697_SliceExprModel> _151821_model = jule::new_ptr<_1e304e697_SliceExprModel>(_1e304e697_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e6ab99a0:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_22893da56_Const> _152325_bc = static__22893e260_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								(*(_152325_bc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151821_model))._field_Elems; __jule_push_dest.push(jule::Any(_152325_bc, &__jule_any_type19)); };
							}
							_iter_next_1e6ab99a0:;
							++it;
							goto _iter_begin_1e6ab99a0;
						}
						_iter_end_1e6ab99a0:;
					};
					(*(_149248_d))._field_Model=jule::Any(_151821_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			else if (_1e31a969d_IsI32(_15079_prim.ptr())) {
				_case_begin_1e6ab87c3:;
				{
					jule::Slice<jule::I32> _153017_runes = static_cast<jule::Slice<jule::I32>>(_228940bce_ReadStr(_14939_c.ptr()));;
					jule::Ptr<_1e304e697_SliceExprModel> _153121_model = jule::new_ptr<_1e304e697_SliceExprModel>(_1e304e697_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e6abc893:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_22893da56_Const> _153625_rc = static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								(*(_153625_rc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153121_model))._field_Elems; __jule_push_dest.push(jule::Any(_153625_rc, &__jule_any_type19)); };
							}
							_iter_next_1e6abc893:;
							++it;
							goto _iter_begin_1e6abc893;
						}
						_iter_end_1e6abc893:;
					};
					(*(_149248_d))._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			_match_end_1e6ab863b:;
		};
	};
}



inline void _1e3181983_castStr(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data> _154630_d, jule::Ptr<_20cb74604_Token> _154640_errorToken) {
	if ((_1e31a35ed_Enum((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e30709c6_Enum> _154817_e = _1e31a35ed_Enum((*(_154630_d))._field_Kind.ptr());;
		if (((_1e31a2d4a_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1e31ab75a_IsStr(_1e31a2d4a_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_22893da56_Const> _15549_c = (*(_154630_d))._field_Constant;;
	(*(_154630_d))._field_Constant=nullptr;
	if ((_1e31a2d4a_Prim((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e31a82c3_Prim> _155713_prim = _1e31a2d4a_Prim((*(_154630_d))._field_Kind.ptr());;
		if (((!(_1e31a9bba_IsU8(_155713_prim.ptr()))) && (!(_1e31a969d_IsI32(_155713_prim.ptr()))))) {
			_1e3172149_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15549_c != nullptr)) {
			{
				
				if (_1e31a9bba_IsU8(_155713_prim.ptr())) {
					_case_begin_1e6ac4aba:;
					{
						(*(_154630_d))._field_Constant=static__22893e7e3_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_228941482_AsU64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				else if (_1e31a969d_IsI32(_155713_prim.ptr())) {
					_case_begin_1e6ac4b42:;
					{
						(*(_154630_d))._field_Constant=static__22893e7e3_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_2289411eb_AsI64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				_match_end_1e6ac49bb:;
			};
		};
		return;;
	};
	jule::Ptr<_1e31ac7c2_Slc> _157813_s = _1e31a3da1_Slc((*(_154630_d))._field_Kind.ptr());;
	if ((_157813_s == nullptr)) {
		_1e3172149_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _158413_t = (*(_157813_s))._field_Elem;;
	jule::Ptr<_1e31a82c3_Prim> _15859_prim = _1e31a2d4a_Prim(_158413_t.ptr());;
	if (((_15859_prim == nullptr) || ((!(_1e31a9bba_IsU8(_15859_prim.ptr()))) && (!(_1e31a969d_IsI32(_15859_prim.ptr())))))) {
		_1e3172149_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1e3181da1_castInt(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _159230_t, jule::Ptr<_1e316ee05_Data> _159248_d, jule::Ptr<_20cb74604_Token> _159258_errorToken) {
	if (_1e31707c9_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1e31a82c3_Prim> _159413_prim = _1e31a2d4a_Prim(_159230_t.ptr());;
		{
			
			if (_22893c89b_IsSigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1e6acc551:;
				{
					_2289419c1_SetI64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			else if (_22893cba9_IsUnsigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1e6acc5c8:;
				{
					_228941c79_SetU64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			_match_end_1e6acc4a7:;
		};
	} else {
		(*(_159248_d))._field_Constant=nullptr;
	};
	if ((_1e31a35ed_Enum((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e30709c6_Enum> _160613_e = _1e31a35ed_Enum((*(_159248_d))._field_Kind.ptr());;
		if (_22893d57d_IsNum(_1e31a0ab2_Str((*((*(_160613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1e31a30d1_Sptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e31a82c3_Prim> _161313_prim = _1e31a2d4a_Prim(_159230_t.ptr());;
		if ((!(_1e31ab23d_IsUintptr(_161313_prim.ptr())))) {
			_1e3172149_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_159230_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1e31a3367_Ptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e31a82c3_Prim> _162013_prim = _1e31a2d4a_Prim(_159230_t.ptr());;
		if (_1e31ab23d_IsUintptr(_162013_prim.ptr())) {
		} else if ((!(_1e3172b3e_isUnsafe(_self_)))) {
			_1e3172149_pushErr(_self_, _159258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _16299_prim = _1e31a2d4a_Prim((*(_159248_d))._field_Kind.ptr());;
	if (((_16299_prim != nullptr) && _22893d57d_IsNum(_1e31a8614_Str(_16299_prim.ptr())))) {
		return;;
	};
	_1e3172149_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_159230_t.ptr()), &__jule_any_type4)}));
}



inline void _1e31822be_castNum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _163730_t, jule::Ptr<_1e316ee05_Data> _163748_d, jule::Ptr<_20cb74604_Token> _163758_errorToken) {
	if (_1e31707c9_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1e31a82c3_Prim> _163913_prim = _1e31a2d4a_Prim(_163730_t.ptr());;
		{
			
			if (_22893d2b4_IsFloat((*(_163913_prim))._field_Kind)) {
				_case_begin_1e6ad7a9a:;
				{
					_228942593_SetF64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::F64>(_228941718_AsF64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_22893c89b_IsSigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1e6ad7b22:;
				{
					_2289419c1_SetI64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_22893cba9_IsUnsigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1e6ad7b99:;
				{
					_228941c79_SetU64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1e6ad79e0:;
		};
	} else {
		(*(_163748_d))._field_Constant=nullptr;
	};
	if ((_1e31a35ed_Enum((*(_163748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e30709c6_Enum> _165313_e = _1e31a35ed_Enum((*(_163748_d))._field_Kind.ptr());;
		if (_22893d57d_IsNum(_1e31a0ab2_Str((*((*(_165313_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e31a82c3_Prim> _16599_prim = _1e31a2d4a_Prim((*(_163748_d))._field_Kind.ptr());;
	if (((_16599_prim != nullptr) && _22893d57d_IsNum(_1e31a8614_Str(_16599_prim.ptr())))) {
		return;;
	};
	_1e3172149_pushErr(_self_, _163758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_163748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_163730_t.ptr()), &__jule_any_type4)}));
}



inline void _1e31826dc_castPrim(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _166731_t, jule::Ptr<_1e316ee05_Data> _166749_d, jule::Ptr<_20cb74604_Token> _166759_errorToken) {
	jule::Ptr<_1e31a82c3_Prim> _16689_prim = _1e31a2d4a_Prim(_166731_t.ptr());;
	{
		
		if (_1e31ab9e1_IsAny(_16689_prim.ptr())) {
			_case_begin_1e6ae0784:;
			{
				(*(_166749_d))._field_Constant=nullptr;
			}
		}
		else if (_1e31ab75a_IsStr(_16689_prim.ptr())) {
			_case_begin_1e6ae080b:;
			{
				_1e3181983_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_22893ce73_IsInt(_1e31a8614_Str(_16689_prim.ptr()))) {
			_case_begin_1e6ae03ee:;
			{
				_1e3181da1_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_22893d57d_IsNum(_1e31a8614_Str(_16689_prim.ptr()))) {
			_case_begin_1e6ae0476:;
			{
				_1e31822be_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1e6ae0388:;
			{
				_1e3172149_pushErr(_self_, _166759_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str(_166731_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1e6ae0333:;
	};
}



inline void _1e3182a50_castConstant(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _168436_t, jule::Ptr<_1e316ee05_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1e31707c9_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _16889_prim = _1e31a2d4a_Prim((*(_168436_t)).ptr());;
	_1e319b52a_castConstByType(&((*(_16889_prim))._field_Kind), _168455_d);
	(*((*(_168455_d))))._field_Model=jule::Any((*((*(_168455_d))))._field_Constant, &__jule_any_type19);
}



inline void _1e3182e6d_castTypeEnum(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _169336_t, jule::Ptr<_1e316ee05_Data>* _169355_d, jule::Ptr<_20cb74604_Token>* _169370_errorToken) {
	jule::I64 _16949_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1e30e8554_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169355_d))))._field_Kind), _169336_t, _169370_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16949_n);
		_1e3172149_pushErr(_self_, (*(_169370_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_169355_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_169336_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169355_d))))._field_Constant=nullptr;
}



inline void _1e318338b_castTypeEnumT(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _170237_t, jule::Ptr<_1e316ee05_Data>* _170256_d, jule::Ptr<_20cb74604_Token>* _170271_errorToken) {
	jule::I64 _17039_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1e30e8554_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*((*(_170256_d))))._field_Kind), _170271_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17039_n);
		_1e3172149_pushErr(_self_, (*(_170271_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_170256_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_170237_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170256_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1e316ee05_Data> _1e3183842_evalCastByTypeNData(_1e3171ae9_Eval* _self_, jule::Ptr<_1e31a06e9_TypeKind> _171142_t, jule::Ptr<_1e316ee05_Data> _171160_d, jule::Ptr<_20cb74604_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && (*(_171160_d))._field_Decl)) {
		_1e3172149_pushErr(_self_, _171174_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1e31702ac_IsNil(_171160_d.ptr())) {
			_case_begin_1e6aec197:;
			{
				if ((!(_1e31a2597_NilCompatible(_171142_t.ptr())))) {
					_1e3172149_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_171142_t.ptr()), &__jule_any_type4)}));
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if (((_1e31a2d4a_Prim((*(_171160_d))._field_Kind.ptr()) != nullptr) && _1e31ab9e1_IsAny(_1e31a2d4a_Prim((*(_171160_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6aec0a9:;
			{
				if ((_1e31a35ed_Enum(_171142_t.ptr()) != nullptr)) {
					_1e3172149_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1e31724ac_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1e31a3884_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1e3172149_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if ((_1e31a3884_TypeEnum((*(_171160_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6aebd56:;
			{
				_1e3182e6d_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1e31a3884_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aebdbc:;
			{
				_1e318338b_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1e31a3367_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aeca7c:;
			{
				_1e31808b6_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1e31a30d1_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aecae3:;
			{
				_1e3181202_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1e31a3da1_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aecb59:;
			{
				_1e3181620_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1e31a43bd_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aecbc0:;
			{
				_1e3180cd4_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1e31a2d4a_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1e6aecc36:;
			{
				_1e31826dc_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1e3182a50_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1e6aebc35:;
			{
				_1e3172149_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str(_171142_t.ptr()), &__jule_any_type4)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1e6aeb51a:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	(*(_171160_d))._field_Mutable=((*(_171160_d))._field_Mutable || (!(_1e31a207a_Mutable((*(_171160_d))._field_Kind.ptr()))));
	if (((!((*(_171160_d))._field_Decl)) && ((_1e31a35ed_Enum((*(_171160_d))._field_Kind.ptr()) == nullptr) || (!(_1e31a0e03_Equal((*((*(_1e31a35ed_Enum((*(_171160_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _171142_t)))))) {
		_1e319a97a_applyCastKind(&(_171160_d), &(_171142_t));
		(*((*(_171160_d))._field_Model.cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92)))._field_Token=_171174_errorToken;
	} else {
		(*(_171160_d))._field_Kind=_171142_t;
	};
	(*(_171160_d))._field_Decl=false;
	(*(_171160_d))._field_Lvalue=false;
	(*(_171160_d))._field_untyped=false;
	if (_1e31707c9_IsConst(_171160_d.ptr())) {
		(*((*(_171160_d))._field_Constant))._field_Kind=(*(_1e31a2d4a_Prim(_171142_t.ptr())))._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3183ce8_evalCastT(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e31a06e9_TypeKind>* _178234_t, jule::Ptr<_1e30287a3_Expr>* _178253_e, jule::Ptr<_20cb74604_Token>* _178268_et) {
	jule::Ptr<_1e31a06e9_TypeKind> _178313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_178313_prefix;
	});;
	if ((_1e31a3da1_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_178253_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1e6b0c22e:;
				{
					(*(_self_))._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1e6b0c1c9:;
		};
	};
	jule::Ptr<_1e316ee05_Data> _179213_d = _1e318ed59_evalExpr(_self_, (*(_178253_e)));;
	if (((_179213_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _179213_d;;
	};
	return _1e3183842_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179213_d, (*(_178268_et)));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3184139_evalCast(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302b113_CastExpr> _179932_c) {
	jule::Ptr<_1e31a78bb_TypeSymbol> _180013_t = _1e3062963_buildType((*(_179932_c))._field_Kind);;
	jule::Bool _18019_ok = _1e30e6211_checkType((*(_self_))._field_s, &(_180013_t), (*(_self_))._field_lookup);;
	if ((!(_18019_ok))) {
		return nullptr;;
	};
	return _1e3183ce8_evalCastT(_self_, &((*(_180013_t))._field_Kind), &((*(_179932_c))._field_Expr), &((*((*(_179932_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1e316ee05_Data> _1e318447a_evalNsSelection(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302b4dc_NsSelectionExpr> _180834_s) {
	jule::Str _18099_path = _1e31bc271_buildLinkPathByTokens(&((*(_180834_s))._field_Ns));;
	jule::Ptr<_1e30bbeb7_ImportInfo> _181013_imp = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bd519_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>([=](jule::Ptr<_1e30bbeb7_ImportInfo> _181049_imp) mutable -> jule::Bool {
		if ((((*(_180834_s))._field_Ns.len() == 1LL) && ((*(_181049_imp))._field_Alias == _18099_path))) {
			return true;;
		};
		return (((*(_181049_imp))._field_LinkPath == _18099_path) && _1e30bead0_isAccessibleViaSelection(_181049_imp.ptr()));;
	}));;
	if ((_181013_imp == nullptr)) {
		_1e3172149_pushErr(_self_, (*(_180834_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18099_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1e31c0230_Lookup> _182213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1e31c0230_Lookup>(_181013_imp, 1);
	;
	_1e31728a8_disallowBuiltin(_self_);
	jule::Any _182713_def = _1e3174db6_getDef(_self_, &((*((*(_180834_s))._field_Ident))._field_Kind), false);;
	_1e31726aa_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182213_lookup;
	jule::Ptr<_1e316ee05_Data> _183013_d = _1e3179074_evalDef(_self_, &(_182713_def), (*(_180834_s))._field_Ident);;
	return _183013_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3184931_evalStructLitExplicit(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3047d55_StructIns> _183445_s, jule::Slice<jule::Ptr<_1e30287a3_Expr>> _183513_exprs, jule::Ptr<_20cb74604_Token> _183533_errorToken) {
	jule::Bool _18369_ok = _1e30e1abe_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_183445_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_183445_s))._field_Generics.len()), _183533_errorToken);;
	if ((!(_18369_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_183445_s))._field_Decl))) {
		_1e3172149_pushErr(_self_.ptr(), _183533_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_183445_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1e6aa61a6_pushReference(_self_.ptr(), &(_183445_s));
	_1e3177270_checkDeprecated(_self_.ptr(), &((*((*(_183445_s))._field_Decl))._field_Directives), _183533_errorToken);
	_1e315d421_structLitChecker _184913_slc = _1e315d421_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1e315eb5e_check(&_184913_slc, &(_183513_exprs));
	jule::Ptr<_1e316ee05_Data> _185613_d = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_183445_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1e304d08b_StructLitExprModel>(_1e304d08b_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184913_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_183445_s))._field_Decl))._field_Binded) {
		(*((*(_185613_d))._field_Kind))._field_BindIdent=(*((*(_183445_s))._field_Decl))._field_Ident;
	};
	return _185613_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3184c72_evalStructLit(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302d7ec_StructLit> _187237_lit) {
	jule::Ptr<_1e31a78bb_TypeSymbol> _187313_t = _1e3062963_buildType((*(_187237_lit))._field_Kind);;
	jule::Bool _18749_ok = _1e30e6211_checkType((*(_self_))._field_s, &(_187313_t), (*(_self_))._field_lookup);;
	if ((!(_18749_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1e3047d55_StructIns> _187913_s = _1e31a43bd_Struct((*(_187313_t))._field_Kind.ptr());;
	if ((_187913_s == nullptr)) {
		if ((_1e31a30d1_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
			_187913_s=_1e31a43bd_Struct((*(_1e31a30d1_Sptr((*(_187313_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187913_s != nullptr)) {
				goto _julec_label_1e6b22321;
			};
		};
		_1e3172149_pushErr(_self_.ptr(), (*((*(_187237_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1e6b22321:;
	jule::Ptr<_1e316ee05_Data> _189213_d = _1e3184931_evalStructLitExplicit(_self_, _187913_s, (*(_187237_lit))._field_Exprs, (*((*(_187237_lit))._field_Kind))._field_Token);;
	if ((_1e31a30d1_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e304d08b_StructLitExprModel> _189417_model = (*(_189213_d))._field_Model.cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94);;
		_1e3199193_makeStructLitAlloc(&(_189213_d), &(_189417_model));
	};
	return _189213_d;;
}



inline _1e31b25a7_typeChecker _1e3185008_typeChecker(_1e3171ae9_Eval* _self_) {
	return _1e30e4eac_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3185349_evalType(_1e3171ae9_Eval* _self_, jule::Ptr<_1e302446e_TypeDecl> _190431_t) {
	jule::Ptr<_1e31a78bb_TypeSymbol> _190513_tk = _1e3062963_buildType(_190431_t);;
	jule::Bool _19069_ok = _1e30e6211_checkType((*(_self_))._field_s, &(_190513_tk), (*(_self_))._field_lookup);;
	if ((!(_19069_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*(_190513_tk))._field_Kind, ._field_Model=jule::Any((*(_190513_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1e31856ac_callTypeFn(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302c4cc_FnCallExpr>* _191735_fc, jule::Ptr<_1e316ee05_Data>* _191757_d) {
	if (((*((*(_191735_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_191735_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*((*(_191735_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_191757_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_191735_fc))))._field_IsCo) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*((*(_191735_fc))))._field_Exception != nullptr)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*((*(_191735_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1e30287a3_Expr> _193317_arg = (*((*(_191735_fc))))._field_Args[0LL];;
		(*(_191757_d))=_1e3183ce8_evalCastT(_self_, &((*((*(_191757_d))))._field_Kind), &(_193317_arg), &((*(_193317_arg))._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*((*(_191757_d))))._field_Decl=false;
	};
}



inline void _1e3185a20_callBuiltinFn(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302c4cc_FnCallExpr>* _194338_fc, jule::Ptr<_1e316ee05_Data>* _194360_d) {
	if ((!(_1e302c851_Unhandled((*(_194338_fc)).ptr())))) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_194338_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=(*(_1e31a4137_Fn((*((*(_194360_d))))._field_Kind.ptr())))._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*((*(_194360_d))))._field_Mutable=true;
}



inline void _1e3185d83_checkFnOfConcurrentCall(_1e3171ae9_Eval* _self_, jule::Ptr<_1e305ce36_FnIns>* _195543_f, jule::Ptr<_20cb74604_Token> _195554_errorToken) {
	if (_1e3172b3e_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_195543_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6b30e9a:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> *_195916_p = it;
			{
				if (_1e3058b79_IsSelf((*((*(_195916_p))))._field_Decl.ptr())) {
					if ((!(_1e3058e10_IsRef((*((*(_195916_p))))._field_Decl.ptr())))) {
						_1e3172149_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1e31724ac_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195916_p))))._field_Decl))._field_Reference) {
					_1e3172149_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1e31724ac_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1e6b30e9a:;
			++it;
			goto _iter_begin_1e6b30e9a;
		}
		_iter_end_1e6b30e9a:;
	};
}



inline void _1e31862a1_processExceptionalHandler(_1e3171ae9_Eval* _self_, jule::Ptr<_1e305ce36_FnIns>* _197449_f, jule::Ptr<_1e302c4cc_FnCallExpr>* _197465_fc, jule::Ptr<_1e316ee05_Data>* _197487_d) {
	jule::Bool _19759_resultNeeded = ((!(_1e305a4a5_IsVoid((*((*(_197449_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1e30a2d8d_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1e309aa89_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1e304e2bd_FnCallExprModel> _197913_model = (*((*(_197487_d))))._field_Model.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1e30a2d8d_scopeChecker> _198313_sc = (*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0);;
	_197617_csc=_1e30b4ad6_newChildChecker(_198313_sc);
	if (_19759_resultNeeded) {
		(*(_197617_csc))._field_result=(*(_197449_f));
	};
	_197717_ch=_1e30a7b84_getChild(_198313_sc.ptr());
	(*((*((*(_197465_fc))))._field_Exception))._field_Parent=(*(_198313_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*((*(_197617_csc))._field_table))._field_Vars; __jule_push_dest.push(_1e3199517_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1e30a80a2_checkChildSsc(_198313_sc, &((*((*(_197465_fc))))._field_Exception), &(_197717_ch), &(_197617_csc));
	(*(_197913_model))._field_Assigned=_19759_resultNeeded;
	(*(_197913_model))._field_Except=_197717_ch;
	if ((_19759_resultNeeded && ((*(_197617_csc))._field_result != nullptr))) {
		_1e3172149_pushErr(_self_, (*((*(_197465_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1e3186614_callFn(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302c4cc_FnCallExpr>* _200131_fc, jule::Ptr<_1e316ee05_Data>* _200153_d) {
	jule::Ptr<_1e305ce36_FnIns> _200213_f = _1e31a4137_Fn((*((*(_200153_d))))._field_Kind.ptr());;
	if (_1e305e3bb_IsBuiltin(_200213_f.ptr())) {
		_1e3185a20_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1e3172dc5_isGlobal(_self_.ptr()) && (*((*(_200213_f))._field_Decl))._field_Exceptional)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1e31724ac_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1e305a73b_IsMethod((*(_200213_f))._field_Decl.ptr()))) && _1e31bb319_hasDirective(&((*((*(_200213_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_200153_d))))._field_Mutable)) && _1e305a73b_IsMethod((*(_200213_f))._field_Decl.ptr())) && (!((*((*(_200213_f))._field_Decl))._field_Statically))) && (*((*((*(_200213_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1e304d08b_StructLitExprModel> _202817_lit = _1e319c74b_isLitBased(&((*((*(_200153_d))))._field_Model));;
			if ((_202817_lit == nullptr)) {
				_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1e315ce37_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202817_lit));
			};
		};
	} else if (((!(_1e3172b3e_isUnsafe(_self_.ptr()))) && (*((*(_200213_f))._field_Decl))._field_Unsafety)) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204013_dynamicAnnotation = ((((*((*(_200213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_200213_f))._field_Generics.len() == 0LL)) && ((*(_200213_f))._field_Params.len() > 0LL));;
	if (_204013_dynamicAnnotation) {
		(*(_200213_f))._field_Generics=jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>>::alloc((*((*(_200213_f))._field_Decl))._field_Generics.len(), (*((*(_200213_f))._field_Decl))._field_Generics.len());
	} else if (((*(_200213_f))._field_Generics.len() != (*((*(_200213_f))._field_Decl))._field_Generics.len())) {
		_1e30e1abe_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_200213_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_200213_f))._field_Generics.len()), (*((*(_200131_fc))))._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e30dc955_Sema> _204913_old = (*(_self_))._field_s;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_200213_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204913_old != (*(_self_))._field_s)) {
			((*(_204913_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204913_old;
	});;
	_1e315a4d9_fnCallArgChecker _206213_fcac = _1e315a4d9_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_200131_fc))))._field_Args, ._field_errorToken=(*((*(_200131_fc))))._field_Token, ._field_dynamicAnnotation=_204013_dynamicAnnotation, };;
	if ((!(_204013_dynamicAnnotation))) {
		if ((!((*(_200213_f))._field_reloaded))) {
			jule::Bool _207117_ok = _1e30ea699_reloadFnInsTypes((*(_self_))._field_s, _200213_f);;
			(*(_200213_f))._field_reloaded=true;
			if ((!(_207117_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1e305ce36_FnIns> _207817_existInstance = _1e305baa0_appendInstance((*(_200213_f))._field_Decl.ptr(), &(_200213_f));;
		if ((_207817_existInstance != nullptr)) {
			_200213_f=_207817_existInstance;
		};
	} else if ((!(_1e30e8e06_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_200213_f), &(_206213_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206213_fcac._field_f=_200213_f;
	jule::Bool _208913_ok = false;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204913_old, (*(_self_))._field_s);
		_208913_ok=_1e315ca91_check(&_206213_fcac);
		std::swap(_204913_old, (*(_self_))._field_s);
	} else {
		_208913_ok=_1e315ca91_check(&_206213_fcac);
	};
	if (_204013_dynamicAnnotation) {
		if ((!(_208913_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1e317d9b3_checkGenericFn(_self_, &(_200213_f), &((*((*(_200131_fc))))._field_Token), &((*((*(_200153_d))))._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210913_callModel = (*((*(_200153_d))))._field_Model;;
	if (_1e305a4a5_IsVoid((*(_200213_f))._field_Decl.ptr())) {
		(*(_200153_d))=_1e319ab89_buildVoidData();
	} else {
		(*((*(_200153_d))))._field_Kind=(*(_200213_f))._field_Result;
		(*((*(_200153_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1e304e2bd_FnCallExprModel> _211813_model = jule::new_ptr<_1e304e2bd_FnCallExprModel>(_1e304e2bd_FnCallExprModel{._field_Token=(*((*(_200131_fc))))._field_Token, ._field_Func=_200213_f, ._field_IsCo=(*((*(_200131_fc))))._field_IsCo, ._field_Expr=_210913_callModel, ._field_Args=_206213_fcac._field_argModels, });;
	(*((*(_200153_d))))._field_Model=jule::Any(_211813_model, &__jule_any_type34);
	(*((*(_200153_d))))._field_Mutable=true;
	if ((*((*(_200213_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_200131_fc))))._field_IsCo) {
			_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1e30e0903_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1e302c851_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1e6b55bb2:;
				{
					_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1e31724ac_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1e302cad7_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1e6b55c28:;
				{
					goto _match_end_1e6b546a5;
				}
			}
			else {
				_case_begin_1e6b5470a:;
				{
					_1e31862a1_processExceptionalHandler(_self_.ptr(), &(_200213_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1e6b546a5:;
		};
	} else if ((!(_1e302c851_Unhandled((*(_200131_fc)).ptr())))) {
		_1e3172149_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_200131_fc))))._field_IsCo) {
		_1e3185d83_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211813_model))._field_Func), (*((*(_200131_fc))))._field_Token);
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3186955_evalFnCall(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302c4cc_FnCallExpr> _215334_fc) {
	jule::Ptr<_1e31a06e9_TypeKind> _215413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_215413_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_215334_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e6b5a14a:;
			{
				if ((*((*((*(_215334_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1e3287319_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_1e6b5a0e5:;
	};
	jule::Ptr<_1e316ee05_Data> _216713_d = _1e318e045_evalExprKind(_self_, (*((*(_215334_fc))._field_Expr))._field_Kind);;
	if ((_216713_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_216713_d))._field_Decl) {
		_1e31856ac_callTypeFn(_self_, &(_215334_fc), &(_216713_d));
		return _216713_d;;
	};
	if ((_1e31a4137_Fn((*(_216713_d))._field_Kind.ptr()) == nullptr)) {
		_1e3172149_pushErr(_self_.ptr(), (*(_215334_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e3186614_callFn(_self_, &(_215334_fc), &(_216713_d));
	return _216713_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3186d51_evalEnumStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30709c6_Enum> _218637_enm, jule::Ptr<_20cb74604_Token> _218649_ident) {
	jule::Ptr<_1e306ee59_EnumItem> _218713_item = _1e30715ba_FindItem(_218637_enm.ptr(), (*(_218649_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_1e3172149_pushErr(_self_, _218649_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218637_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218649_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1e319c482_evalEnumStatic(&(_218637_enm), &(_218713_item));;
}



inline jule::Ptr<_1e316ee05_Data> _1e318724c_evalTypeEnumStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30721d1_TypeEnum> _219441_enm, jule::Ptr<_20cb74604_Token> _219457_ident) {
	jule::Ptr<_1e3071b09_TypeEnumItem> _219513_item = _1e3072c92_FindItem(_219441_enm.ptr(), (*(_219457_ident))._field_Kind);;
	if ((_219513_item == nullptr)) {
		_1e3172149_pushErr(_self_, _219457_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_219441_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_219457_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1e31a35ed_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6b62d9a:;
			{
				return _1e3175746__evalEnum(_self_, _1e31a35ed_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1e31a3884_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6b62e11:;
			{
				return _1e3175e83__evalTypeEnum(_self_, _1e31a3884_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1e31a43bd_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6b62e77:;
			{
				return _1e31766c0__evalStruct(_self_, _1e31a43bd_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1e6b6131b:;
			{
				jule::Ptr<_1e316ee05_Data> _220817_d = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*((*(_219513_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220817_d))._field_Model=jule::Any((*(_220817_d))._field_Kind, &__jule_any_type83);
				return _220817_d;;
			}
		}
		_match_end_1e6b62086:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3187648_evalStructStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_1e3047d55_StructIns> _221739_s, jule::Ptr<_20cb74604_Token> _221754_ident) {
	jule::Ptr<_1e316ee05_Data> _221813_d = jule::new_ptr<_1e316ee05_Data>();;
	;
	jule::Ptr<_1e305a032_Fn> _222213_method = _1e3048dbc_FindMethod(_221739_s.ptr(), (*(_221754_ident))._field_Kind, true);;
	if ((_222213_method != nullptr)) {
		if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_222213_method))._field_Public, (*(_222213_method))._field_Token)))) {
			_1e3172149_pushErr(_self_, _221754_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
			_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e305ce36_FnIns> _222917_ins = _1e305b792_instance(_222213_method);;
		(*(_222917_ins))._field_Owner=_221739_s;
		_1e69d5129_pushReference(_self_, &(_222917_ins));
		(*(_221813_d))._field_Model=jule::Any(jule::new_ptr<_1e3052315_StructStaticIdentExprModel>(_1e3052315_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=(*(_221813_d))._field_Model, ._field_Method=_222917_ins}), &__jule_any_type95);
		(*(_221813_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_222917_ins, 1)});
		return _221813_d;;
	};
	jule::Ptr<_1e310ed40_Var> _224313_sttc = _1e304954e_FindStatic(_221739_s.ptr(), (*(_221754_ident))._field_Kind);;
	if ((_224313_sttc != nullptr)) {
		return _1e317877c_evalVar(_self_, _224313_sttc, _221754_ident);;
	};
	_1e3172149_pushErr(_self_, _221754_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_221739_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3187aee_evalTraitSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data> _225240_d, jule::Ptr<_1e306d2cb_Trait> _225254_trt, jule::Ptr<_20cb74604_Token> _225271_ident) {
	jule::Ptr<_1e305a032_Fn> _225313_f = _1e306de7a_FindMethod(_225254_trt.ptr(), (*(_225271_ident))._field_Kind);;
	if ((_225313_f == nullptr)) {
		_1e3172149_pushErr(_self_, _225271_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_225254_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_225271_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e305b792_instance(_225313_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1e30514bd_TraitSubIdentExprModel>(_1e30514bd_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=(*(_225240_d))._field_Model, ._field_Method=_225313_f, ._field_Trt=_225254_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3188160_evalStructSubIdentField(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _227247_d, jule::Ptr<_1e3047d55_StructIns>* _227262_s, jule::Ptr<_20cb74604_Token>* _227282_tok, jule::Ptr<_1e30472a5_FieldIns>* _2272100_f) {
	jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _227313_model = jule::new_ptr<_1e3051d5e_StructSubIdentExprModel>(_1e3051d5e_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*((*(_227247_d))))._field_Model=jule::Any(_227313_model, &__jule_any_type97);
	(*((*(_227247_d))))._field_Kind=(*((*(_2272100_f))))._field_Kind;
	(*((*(_227247_d))))._field_Lvalue=true;
	if (((*((*((*(_2272100_f))))._field_Decl))._field_Mutable && (!((*((*(_227247_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1e6b73570:;
				{
					jule::Ptr<_1e30a2d8d_scopeChecker> _228717_scope = _1e30a5e7e_getRoot((*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0));;
					(*((*(_227247_d))))._field_Mutable=(((*(_228717_scope))._field_owner != nullptr) && ((*((*(_228717_scope))._field_owner))._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_1e6b7351a:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e31886c1_evalStructSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data> _229541_d, jule::Ptr<_1e3047d55_StructIns> _229555_s, jule::Ptr<_1e302b8b6_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_1e30472a5_FieldIns> _229613_f = _1e304920d_FindField(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind);;
	if ((_229613_f != nullptr)) {
		if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_229613_f))._field_Decl))._field_Public, (*((*(_229613_f))._field_Decl))._field_Token)))) {
			_1e3172149_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_229613_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1e3188160_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &((*(_229574_si))._field_Ident), &(_229613_f));;
	};
	;
	jule::Ptr<_1e305a032_Fn> _230613_m = _1e3048dbc_FindMethod(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind, false);;
	if ((_230613_m == nullptr)) {
		_1e3172149_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_229555_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_229574_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_230613_m))._field_Public, (*(_230613_m))._field_Token)))) {
		_1e3172149_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_230613_m))._field_Ident, &__jule_any_type4)}));
		_1e31724ac_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1e3058e10_IsRef((*(_230613_m))._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_1e3172149_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1e3177270_checkDeprecated(_self_, &((*(_230613_m))._field_Directives), (*(_229574_si))._field_Ident);
	jule::Ptr<_1e305ce36_FnIns> _232213_ins = _1e305b792_instance(_230613_m);;
	(*(_232213_ins))._field_Owner=_229555_s;
	_1e69d5129_pushReference(_self_, &(_232213_ins));
	jule::Ptr<_1e316ee05_Data> _232513_model = jule::new_ptr<_1e316ee05_Data>((*(_229541_d)));;
	(*(_229541_d))._field_Model=jule::Any(jule::new_ptr<_1e3051d5e_StructSubIdentExprModel>(_1e3051d5e_StructSubIdentExprModel{._field_Token=(*(_229574_si))._field_Ident, ._field_Expr=_232513_model, ._field_Method=_232213_ins, ._field_Owner=_229555_s}), &__jule_any_type97);
	(*(_229541_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_232213_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3188a12_evalIntTypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _233636_ident) {
	;
	{
		auto &_match_expr{ (*(_233636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b81a9a:;
			{
				jule::Ptr<_22893da56_Const> _234017_c = static__22893de96_NewI64(static_cast<jule::I64>(_228936d90_MaxI(jule::Str::lit("int", 3))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283315_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6b82408:;
			{
				jule::Ptr<_22893da56_Const> _234817_c = static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_22893738a_Min(jule::Str::lit("int", 3)))));;
				(*(_234817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283315_primInt, ._field_Model=jule::Any(_234817_c, &__jule_any_type19), ._field_Constant=_234817_c});;
			}
		}
		else {
			_case_begin_1e6b81737:;
			{
				_1e3172149_pushErr(_self_, _233636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_233636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b816d2:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3188d53_evalUintTypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _236137_ident) {
	;
	{
		auto &_match_expr{ (*(_236137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b84bbe:;
			{
				jule::Ptr<_22893da56_Const> _236517_c = static__22893e260_NewU64(static_cast<jule::U64>(_228937159_MaxU(jule::Str::lit("uint", 4))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3282e3b_primUint, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1e6b84eaa:;
			{
				_1e3172149_pushErr(_self_, _236137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_236137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b84e55:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3189194_evalI8TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _237835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b881ab:;
			{
				jule::Ptr<_22893da56_Const> _238417_c = static__22893de96_NewI64(127LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32835ce_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6b88a19:;
			{
				jule::Ptr<_22893da56_Const> _239217_c = static__22893de96_NewI64(-128LL);;
				(*(_239217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32835ce_primI8, ._field_Model=jule::Any(_239217_c, &__jule_any_type19), ._field_Constant=_239217_c});;
			}
		}
		else {
			_case_begin_1e6b87d48:;
			{
				_1e3172149_pushErr(_self_, _237835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b87ce3:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e31894d5_evalI16TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _240536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b8bd4c:;
			{
				jule::Ptr<_22893da56_Const> _241117_c = static__22893de96_NewI64(32767LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283898_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6b8c6aa:;
			{
				jule::Ptr<_22893da56_Const> _241917_c = static__22893de96_NewI64(-32768LL);;
				(*(_241917_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283898_primI16, ._field_Model=jule::Any(_241917_c, &__jule_any_type19), ._field_Constant=_241917_c});;
			}
		}
		else {
			_case_begin_1e6b8b9d9:;
			{
				_1e3172149_pushErr(_self_, _240536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_240536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b8b984:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3189826_evalI32TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _243236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b909dd:;
			{
				jule::Ptr<_22893da56_Const> _243817_c = static__22893de96_NewI64(2147483647LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283b62_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6b9134b:;
			{
				jule::Ptr<_22893da56_Const> _244617_c = static__22893de96_NewI64(-2147483648LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283b62_primI32, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1e6b9067a:;
			{
				_1e3172149_pushErr(_self_, _243236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_243236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b90625:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3189b67_evalI64TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _245936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b9467e:;
			{
				jule::Ptr<_22893da56_Const> _246517_c = static__22893de96_NewI64(jule::MAX_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283e2b_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6b94edc:;
			{
				jule::Ptr<_22893da56_Const> _247317_c = static__22893de96_NewI64(jule::MIN_I64);;
				(*(_247317_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283e2b_primI64, ._field_Model=jule::Any(_247317_c, &__jule_any_type19), ._field_Constant=_247317_c});;
			}
		}
		else {
			_case_begin_1e6b9431b:;
			{
				_1e3172149_pushErr(_self_, _245936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b942b6:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3189ea8_evalU8TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _248635_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_248635_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b97de1:;
			{
				jule::Ptr<_22893da56_Const> _249117_c = static__22893e260_NewU64(255LLU);;
				(*(_249117_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32841e5_primU8, ._field_Model=jule::Any(_249117_c, &__jule_any_type19), ._field_Constant=_249117_c});;
			}
		}
		else {
			_case_begin_1e6b97660:;
			{
				_1e3172149_pushErr(_self_, _248635_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_248635_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b97a28:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318a2e9_evalU16TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _250436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6b9a7d9:;
			{
				jule::Ptr<_22893da56_Const> _250917_c = static__22893e260_NewU64(65535LLU);;
				(*(_250917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32844ae_primU16, ._field_Model=jule::Any(_250917_c, &__jule_any_type19), ._field_Constant=_250917_c});;
			}
		}
		else {
			_case_begin_1e6b9a058:;
			{
				_1e3172149_pushErr(_self_, _250436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_250436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6b9a421:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318a63a_evalU32TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6ba303e:;
			{
				jule::Ptr<_22893da56_Const> _252717_c = static__22893e260_NewU64(4294967295LLU);;
				(*(_252717_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3284778_primU32, ._field_Model=jule::Any(_252717_c, &__jule_any_type19), ._field_Constant=_252717_c});;
			}
		}
		else {
			_case_begin_1e6ba27be:;
			{
				_1e3172149_pushErr(_self_, _252236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_252236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6ba2b76:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318a97b_evalU64TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6ba5937:;
			{
				jule::Ptr<_22893da56_Const> _254517_c = static__22893e260_NewU64(jule::MAX_U64);;
				(*(_254517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3284beb_primU64, ._field_Model=jule::Any(_254517_c, &__jule_any_type19), ._field_Constant=_254517_c});;
			}
		}
		else {
			_case_begin_1e6ba51a6:;
			{
				_1e3172149_pushErr(_self_, _254036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_254036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6ba556e:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318acbc_evalF32TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _255836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6ba8ab1:;
			{
				jule::Ptr<_22893da56_Const> _256517_c = static__22893eaac_NewF64(340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3284eb5_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6ba941e:;
			{
				jule::Ptr<_22893da56_Const> _257317_c = static__22893eaac_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3284eb5_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1e6ba9485:;
			{
				jule::Ptr<_22893da56_Const> _258117_c = static__22893eaac_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_258117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3284eb5_primF32, ._field_Model=jule::Any(_258117_c, &__jule_any_type19), ._field_Constant=_258117_c});;
			}
		}
		else {
			_case_begin_1e6ba874d:;
			{
				_1e3172149_pushErr(_self_, _255836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6ba86e8:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318b10d_evalF64TypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_20cb74604_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1e6bad984:;
			{
				jule::Ptr<_22893da56_Const> _260117_c = static__22893eaac_NewF64(jule::MAX_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e328527e_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1e6bae2e2:;
			{
				jule::Ptr<_22893da56_Const> _260917_c = static__22893eaac_NewF64(jule::MIN_F64);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e328527e_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1e6bae358:;
			{
				jule::Ptr<_22893da56_Const> _261717_c = static__22893eaac_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_261717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e328527e_primF64, ._field_Model=jule::Any(_261717_c, &__jule_any_type19), ._field_Constant=_261717_c});;
			}
		}
		else {
			_case_begin_1e6bad621:;
			{
				_1e3172149_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6bad5bb:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318b509_evalPrimStatic(_1e3171ae9_Eval* _self_, jule::Str _263033_kind, jule::Ptr<_20cb74604_Token> _263044_ident) {
	{
		auto &_match_expr{ _263033_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1e6bb2911:;
			{
				return _1e3188a12_evalIntTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1e6bb2306:;
			{
				return _1e3188d53_evalUintTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1e6bb24b0:;
			{
				return _1e3189194_evalI8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e6bb2526:;
			{
				return _1e31894d5_evalI16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e6bb258c:;
			{
				return _1e3189826_evalI32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e6bb2603:;
			{
				return _1e3189b67_evalI64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1e6bb31e7:;
			{
				return _1e3189ea8_evalU8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e6bb325d:;
			{
				return _1e318a2e9_evalU16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1e6bb32c4:;
			{
				return _1e318a63a_evalU32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1e6bb333a:;
			{
				return _1e318a97b_evalU64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e6bb33a1:;
			{
				return _1e318acbc_evalF32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e6bb3417:;
			{
				return _1e318b10d_evalF64TypeStatic(_self_, _263044_ident);;
			}
		}
		else {
			_case_begin_1e6bad8b8:;
			{
				_1e3172149_pushErr(_self_, _263044_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_263033_kind, &__jule_any_type4),jule::Any((*(_263044_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6bad863:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318b905_evalTypeStatic(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data> _266237_d, jule::Ptr<_1e302b8b6_SubIdentExpr> _266251_si) {
	{
		
		if ((_1e31a2d4a_Prim((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bb77d4:;
			{
				return _1e318b509_evalPrimStatic(_self_, _1e31a8614_Str(_1e31a2d4a_Prim((*(_266237_d))._field_Kind.ptr()).ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1e31a35ed_Enum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bb850a:;
			{
				return _1e3186d51_evalEnumStatic(_self_, _1e31a35ed_Enum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1e31a3884_TypeEnum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bb8571:;
			{
				return _1e318724c_evalTypeEnumStatic(_self_, _1e31a3884_TypeEnum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1e31a43bd_Struct((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bb85d7:;
			{
				return _1e3187648_evalStructStatic(_self_, _1e31a43bd_Struct((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1e6bb742c:;
			{
				_1e3172149_pushErr(_self_, (*(_266251_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_266237_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6bb7383:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e6bc0259_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e308404a_comptimeTypeInfo>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e308a24e_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bc4516_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e30750d5_comptimeStructField>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e3076900_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bc877e_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e307b64c_comptimeEnumField>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e307c64d_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bcca3b_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e307e0de_comptimeParam>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e3080d16_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bd1de7_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e3078391_comptimeStatic>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e3079bab_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bd6160_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e308a55c_comptimeValue>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e308ca9d_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1e316ee05_Data> _1e6bda3c8_comptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e308e4a6_comptimeFile>* _267857_ct, jule::Ptr<_1e316ee05_Data>* _267877_d, jule::Ptr<_1e302b8b6_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1e316ee05_Data> _267913_cd = _1e3090cc1_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1e3172149_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}



inline __jule_tuple_x_1e316ee05_Data__jule_tuple_bool _1e318c2a7_tryComptimeObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data>* _268646_d, jule::Ptr<_1e302b8b6_SubIdentExpr> _268660_si) {
	__jule_tuple_x_1e316ee05_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1e31a6711_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbd730:;
			{
				jule::Ptr<_1e308404a_comptimeTypeInfo> _268917_ct = _1e31a6711_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bc0259_comptimeObjSubIdent(_self_, &(_268917_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a5424_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbd378:;
			{
				jule::Ptr<_1e30750d5_comptimeStructField> _269217_ct = _1e31a5424_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bc4516_comptimeObjSubIdent(_self_, &(_269217_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a5941_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbd3de:;
			{
				jule::Ptr<_1e307b64c_comptimeEnumField> _269517_ct = _1e31a5941_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bc877e_comptimeObjSubIdent(_self_, &(_269517_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a5e5d_comptimeParam((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbd455:;
			{
				jule::Ptr<_1e307e0de_comptimeParam> _269817_ct = _1e31a5e5d_comptimeParam((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bcca3b_comptimeObjSubIdent(_self_, &(_269817_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a6c2d_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbd4bb:;
			{
				jule::Ptr<_1e3078391_comptimeStatic> _270117_ct = _1e31a6c2d_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bd1de7_comptimeObjSubIdent(_self_, &(_270117_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a6eb4_comptimeValue((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbdaa4:;
			{
				jule::Ptr<_1e308a55c_comptimeValue> _270417_ct = _1e31a6eb4_comptimeValue((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bd6160_comptimeObjSubIdent(_self_, &(_270417_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e31a724a_comptimeFile((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6bbdb1a:;
			{
				jule::Ptr<_1e308e4a6_comptimeFile> _270717_ct = _1e31a724a_comptimeFile((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1e6bda3c8_comptimeObjSubIdent(_self_, &(_270717_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e6bbd312:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e6bbd268:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318c6a3_evalObjSubIdent(_1e3171ae9_Eval* _self_, jule::Ptr<_1e316ee05_Data> _271438_d, jule::Ptr<_1e302b8b6_SubIdentExpr> _271452_si) {
	if (_1e30117e1_IsIgnoreIdent((*((*(_271452_si))._field_Ident))._field_Kind)) {
		_1e3172149_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1e316ee05_Data> _272117_compData;;
		jule::Bool _272127_ok = false;;
		({
			__jule_tuple_x_1e316ee05_Data__jule_tuple_bool __jule_assign_result = _1e318c2a7_tryComptimeObjSubIdent(_self_, &(_271438_d), _271452_si);
			_272117_compData = __jule_assign_result.__jule_result_arg0;
			_272127_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_272127_ok) {
			return _272117_compData;;
		};
	};
	jule::Ptr<_1e31a06e9_TypeKind> _272713_kind = (*(_271438_d))._field_Kind;;
	{
		
		if ((_1e31a3367_Ptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6be03bc:;
			{
				jule::Ptr<_1e31b05b6_Ptr> _273013_ptr = _1e31a3367_Ptr((*(_271438_d))._field_Kind.ptr());;
				if (_1e31b1100_IsUnsafe(_273013_ptr.ptr())) {
					goto _match_end_1e6be0345;
				};
				if ((!(_1e3172b3e_isUnsafe(_self_)))) {
					_1e3172149_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_272713_kind=(*(_1e31a3367_Ptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1e319ca37_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		else if ((_1e31a30d1_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6be0444:;
			{
				_272713_kind=(*(_1e31a30d1_Sptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1e319ca37_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		_match_end_1e6be0345:;
	};
	{
		
		if ((_1e31a4654_Trait((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6be359b:;
			{
				return _1e3187aee_evalTraitSubIdent(_self_, _271438_d, _1e31a4654_Trait((*(_271438_d))._field_Kind.ptr()), (*(_271452_si))._field_Ident);;
			}
		}
		else if ((_1e31a43bd_Struct(_272713_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3623:;
			{
				jule::Ptr<_1e3047d55_StructIns> _274813_s = _1e31a43bd_Struct(_272713_kind.ptr());;
				if (_1e319a02e_isInstancedStruct(_274813_s)) {
					jule::Bool _275021_usedReferenceElem = (_1e31a30d1_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr);;
					return _1e31886c1_evalStructSubIdent(_self_, _271438_d, _1e31a43bd_Struct(_272713_kind.ptr()), _271452_si, _275021_usedReferenceElem);;
				};
			}
		}
		_match_end_1e6be3546:;
	};
	_1e3172149_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_271438_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1e316ee05_Data> _1e318c9e4_evalSubIdent(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302b8b6_SubIdentExpr> _275836_si) {
	jule::Ptr<_1e31a06e9_TypeKind> _275913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275913_prefix;
	});;
	jule::Ptr<_1e316ee05_Data> _276213_d = _1e318e045_evalExprKind(_self_, (*((*(_275836_si))._field_Expr))._field_Kind);;
	if ((_276213_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_276213_d))._field_Decl) {
		return _1e318b905_evalTypeStatic(_self_.ptr(), _276213_d, _275836_si);;
	};
	return _1e318c6a3_evalObjSubIdent(_self_.ptr(), _276213_d, _275836_si);;
}



inline jule::Ptr<_1e316ee05_Data> _1e318cd35_evalTuple(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e3029474_TupleExpr> _277233_tup) {
	jule::Ptr<_1e31ad3b6_Tuple> _277313_tupT = jule::new_ptr<_1e31ad3b6_Tuple>();;
	(*(_277313_tupT))._field_Types=jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>::alloc(0LL, (*(_277233_tup))._field_Expr.len());
	jule::Ptr<_1e30529db_TupleExprModel> _277613_model = jule::new_ptr<_1e30529db_TupleExprModel>(_1e30529db_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1e316ee05_Data>>::alloc(0LL, (*(_277233_tup))._field_Expr.len())});;
	jule::Bool _278013_ok = true;;
	{
		auto expr = &((*(_277233_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6bec495:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _278121_expr = *it;
			{
				jule::Ptr<_1e316ee05_Data> _278217_d = _1e318ed59_evalExpr(_self_, _278121_expr);;
				if ((_278217_d == nullptr)) {
					_278013_ok=false;
					goto _iter_next_1e6bec495;
				};
				{ jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> &__jule_push_dest = (*(_277313_tupT))._field_Types; __jule_push_dest.push((*(_278217_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = (*(_277613_model))._field_Datas; __jule_push_dest.push(_278217_d); };
			}
			_iter_next_1e6bec495:;
			++it;
			goto _iter_begin_1e6bec495;
		}
		_iter_end_1e6bec495:;
	};
	if ((!(_278013_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_277313_tupT, 23)}), ._field_Model=jule::Any(_277613_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e318d231_evalMap(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e31ade66_Map> _280131_m, jule::Ptr<_1e302dca3_BraceLit> _280144_lit) {
	jule::Ptr<_1e30508a7_MapExprModel> _280213_model = jule::new_ptr<_1e30508a7_MapExprModel>(_1e30508a7_MapExprModel{._field_KeyKind=(*(_280131_m))._field_Key, ._field_ValKind=(*(_280131_m))._field_Val, });;
	{
		auto expr = &((*(_280144_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6c00e16:;
		if (it != expr_end) {
			jule::Ptr<_1e30287a3_Expr> _280721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_280721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1e6c01ea0:;
						{
							goto _match_end_1e6c01aa4;
						}
					}
					else {
						_case_begin_1e6c01b09:;
						{
							_1e3172149_pushErr(_self_.ptr(), (*(_280144_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1e6c01aa4:;
				};
				jule::Ptr<_1e302e5cd_KeyValPair> _281717_pair = (*(_280721_expr))._field_Kind.cast_ptr<_1e302e5cd_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1e316ee05_Data> _281917_key = _1e318ed59_evalExpr(_self_, (*(_281717_pair))._field_Key);;
				if ((_281917_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1e316ee05_Data> _282417_val = _1e318ed59_evalExpr(_self_, (*(_281717_pair))._field_Val);;
				if ((_282417_val == nullptr)) {
					return nullptr;;
				};
				_1e30e809d_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Key), &(_281917_key), (*(_281717_pair))._field_Colon);
				_1e30e809d_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Val), &(_282417_val), (*(_281717_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1e3050401_KeyValPairExprModel>> &__jule_push_dest = (*(_280213_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1e3050401_KeyValPairExprModel>(_1e3050401_KeyValPairExprModel{._field_Key=(*(_281917_key))._field_Model, ._field_Val=(*(_282417_val))._field_Model})); };
			}
			_iter_next_1e6c00e16:;
			++it;
			goto _iter_begin_1e6c00e16;
		}
		_iter_end_1e6c00e16:;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_280131_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_280213_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e318d572_evalBraceLit(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302dca3_BraceLit> _284536_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1e6d0d9a2:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e31a48da_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e6d0da29:;
			{
				return _1e318d231_evalMap(_self_, _1e31a48da_Map((*(_self_))._field_prefix.ptr()), _284536_lit);;
			}
		}
		else if ((_1e31a43bd_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e6d0d122:;
			{
				return _1e3184931_evalStructLitExplicit(_self_, _1e31a43bd_Struct((*(_self_))._field_prefix.ptr()), (*(_284536_lit))._field_Exprs, (*(_284536_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1e6c0713c:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e6c01598:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318d8b3_evalAnonFunc(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e303612e_FnDecl> _286036_decl) {
	_1e31b25a7_typeChecker _286113_tc = _1e31b25a7_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1e305ce36_FnIns> _286613_ins = _1e31b927e_buildFunc(&_286113_tc, _286036_decl);;
	if ((_286613_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6d14007:;
			{
				jule::Ptr<_1e30a2d8d_scopeChecker> _287217_sc = (*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0);;
				jule::Ptr<_1e30a2d8d_scopeChecker> _287317_scc = _1e30b4ad6_newChildChecker(_287217_sc);;
				(*(_287317_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e30a18e7_scopeLabel>>>(nullptr);
				(*(_287317_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e30a1e7a_scopeGoto>>>(nullptr);
				(*(_287317_scc))._field_owner=nullptr;
				(*(_287317_scc))._field_childIndex=0LL;
				(*(_287317_scc))._field_it=0LLU;
				(*(_287317_scc))._field_cse=0LLU;
				(*(_287317_scc))._field_owner=_286613_ins;
				_1e3109686_checkFnInsSc((*(_self_))._field_s.ptr(), &(_286613_ins), &(_287317_scc));
			}
		}
		else {
			_case_begin_1e6d13b83:;
			{
				_1e3109ca2_checkFnIns((*(_self_))._field_s, &(_286613_ins));
			}
		}
		_match_end_1e6d13a84:;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_286613_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1e3050027_AnonFnExprModel>(_1e3050027_AnonFnExprModel{._field_Func=_286613_ins, ._field_Global=_1e3172dc5_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e318dc04_evalBinop(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e302bd6c_BinopExpr> _289533_op) {
	_1e31922ac_binaryEval _289613_bs = static__1e3192895_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1e31a82c3_Prim> _289913_prim = _1e31a2d4a_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289913_prim == nullptr) || (!(_22893d57d_IsNum(_1e31a8614_Str(_289913_prim.ptr())))))) {
			jule::Ptr<_1e31a06e9_TypeKind> _290121_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_290121_prefix;
			});;
			return _1e319833a_eval(&_289613_bs, &(_289533_op));;
		};
	};
	return _1e319833a_eval(&_289613_bs, &(_289533_op));;
}



inline jule::Ptr<_1e316ee05_Data> _1e318e045_evalExprKind(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Any _291036_kind) {
	{
		auto &_match_expr{ _291036_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1e6d1ba48:;
			{
				jule::Ptr<_1e3028aa0_RangeExpr> _291317_e = _291036_kind.cast_ptr<_1e3028aa0_RangeExpr>(&__jule_any_type100);;
				return _1e318e045_evalExprKind(_self_, (*((*(_291317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1e6d1b6d5:;
			{
				return _1e3174679_evalLit(_self_.ptr(), _291036_kind.cast_ptr<_1e302984d_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e6d1bc79:;
			{
				return _1e31793b5_evalIdent(_self_.ptr(), _291036_kind.cast_ptr<_1e302a1cd_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1e6d1bd01:;
			{
				return _1e3179706_evalUnary(_self_, _291036_kind.cast_ptr<_1e302a860_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1e6d1bd78:;
			{
				return _1e3179a47_evalVariadic(_self_, _291036_kind.cast_ptr<_1e302ac39_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1e6d1be00:;
			{
				return _1e3179d88_evalUnsafe(_self_, _291036_kind.cast_ptr<_1e3029c27_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1e6d1becc:;
			{
				return _1e317a9c1_evalSliceExpr(_self_, _291036_kind.cast_ptr<_1e302ecc6_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1e6d1c054:;
			{
				return _1e317e167_evalIndexing(_self_, _291036_kind.cast_ptr<_1e3030766_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1e6d1c0cb:;
			{
				return _1e3180498_evalSlicing(_self_, _291036_kind.cast_ptr<_1e3030dc6_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1e6d1c153:;
			{
				return _1e3184139_evalCast(_self_, _291036_kind.cast_ptr<_1e302b113_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1e6d1c1ca:;
			{
				return _1e318447a_evalNsSelection(_self_.ptr(), _291036_kind.cast_ptr<_1e302b4dc_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1e6d1c252:;
			{
				return _1e3184c72_evalStructLit(_self_, _291036_kind.cast_ptr<_1e302d7ec_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e6d1c2c9:;
			{
				return _1e3185349_evalType(_self_.ptr(), _291036_kind.cast_ptr<_1e302446e_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1e6d1c351:;
			{
				return _1e3186955_evalFnCall(_self_, _291036_kind.cast_ptr<_1e302c4cc_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1e6d1c3c8:;
			{
				return _1e318c9e4_evalSubIdent(_self_, _291036_kind.cast_ptr<_1e302b8b6_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1e6d1c450:;
			{
				return _1e318cd35_evalTuple(_self_, _291036_kind.cast_ptr<_1e3029474_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1e6d1c4c7:;
			{
				return _1e318d572_evalBraceLit(_self_, _291036_kind.cast_ptr<_1e302dca3_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e6d1c54e:;
			{
				return _1e318d8b3_evalAnonFunc(_self_, _291036_kind.cast_ptr<_1e303612e_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1e6d1c5c6:;
			{
				return _1e318dc04_evalBinop(_self_, _291036_kind.cast_ptr<_1e302bd6c_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1e6d1b86c:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6d1b817:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318e386_eval1(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e30287a3_Expr> _295829_expr) {
	jule::Ptr<_1e316ee05_Data> _295913_d = _1e318e045_evalExprKind(_self_, (*(_295829_expr))._field_Kind);;
	if (((_295913_d == nullptr) || ((*(_295913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1e31a4137_Fn((*(_295913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d283a1:;
			{
				jule::Ptr<_1e305ce36_FnIns> _296617_f = _1e31a4137_Fn((*(_295913_d))._field_Kind.ptr());;
				if (_1e305e3bb_IsBuiltin(_296617_f.ptr())) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1e6d279bb;
				};
				if (((*(_296617_f))._field_Generics.len() != (*((*(_296617_f))._field_Decl))._field_Generics.len())) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_296617_f))._field_Decl))._field_Statically)) && _1e305a73b_IsMethod((*(_296617_f))._field_Decl.ptr()))) {
					_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e6d279bb:;
	};
	return _295913_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e318e6c7_eval(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e30287a3_Expr> _298528_expr) {
	jule::Ptr<_1e316ee05_Data> _298613_d = _1e318e386_eval1(_self_, _298528_expr);;
	if ((_298613_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1e31a4e07_comptime((*(_298613_d))._field_Kind.ptr()))) {
		_1e30e0590_pushErr((*(_self_))._field_s.ptr(), (*(_298528_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _298613_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e318ea18_evalExpr1(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e30287a3_Expr> _300033_expr) {
	jule::Ptr<_1e316ee05_Data> _300113_d = _1e318e386_eval1(_self_, _300033_expr);;
	{
		
		if ((_300113_d == nullptr)) {
			_case_begin_1e6d30dc0:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300113_d))._field_Decl) {
			_case_begin_1e6d30e47:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*(_300033_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1e6d30d04:;
			{
				return _300113_d;;
			}
		}
		_match_end_1e6d30c8d:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e318ed59_evalExpr(jule::Ptr<_1e3171ae9_Eval> _self_, jule::Ptr<_1e30287a3_Expr> _301632_expr) {
	jule::Ptr<_1e316ee05_Data> _301713_d = _1e318e6c7_eval(_self_, _301632_expr);;
	{
		
		if ((_301713_d == nullptr)) {
			_case_begin_1e6d32b6e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_301713_d))._field_Decl) {
			_case_begin_1e6d32be6:;
			{
				_1e3172149_pushErr(_self_.ptr(), (*(_301632_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1e6d32aa3:;
			{
				return _301713_d;;
			}
		}
		_match_end_1e6d32a3c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3171ae9_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e3190321_unaryEval static__1e3190761_new(jule::Ptr<_1e3171ae9_Eval> _303723_e) {
	return _1e3190321_unaryEval{._field_e=_303723_e, };;
}



inline void _1e319095e_minus(_1e3190321_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1e6d34830:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d34500:;
			{
				if ((!(_22893d57d_IsNum(_1e31a0ab2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d34566:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6d34489:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6d33543:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1e31707c9_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_228943561_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d39060:;
				{
					_228942593_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_228940e65_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_228942a27_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d390d7:;
				{
					_2289419c1_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_22894042b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_228942cad_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d38bca:;
				{
					_2289419c1_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_2289411eb_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1e6d38b64:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3075:17"));;
				}
			}
			_match_end_1e6d38aa9:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1e3190b5c_plus(_1e3190321_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1e6d3e818:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d3e4d8:;
			{
				if ((!(_22893d57d_IsNum(_1e31a0ab2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d3e54e:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6d3e472:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6d3e3a6:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1e31707c9_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_228943561_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d44048:;
				{
					_228942593_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_228940e65_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_228942a27_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d440c0:;
				{
					_2289419c1_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_22894042b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_228942cad_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d43bb3:;
				{
					_2289419c1_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_2289411eb_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1e6d43b4c:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3120:17"));;
				}
			}
			_match_end_1e6d43a92:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1e3190d5a_caret(_1e3190321_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1e6d497ce:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d4949e:;
			{
				if ((!(_22893ce73_IsInt(_1e31a0ab2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d49515:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6d49438:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6d4936c:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1e31707c9_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_228942a27_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d4deed:;
				{
					_2289419c1_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_22894042b_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_228942cad_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d4e075:;
				{
					_228941c79_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_2289406b2_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1e6d4db13:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3163:17"));;
				}
			}
			_match_end_1e6d4da58:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1e3191058_excl(_1e3190321_unaryEval* _self_) {
	jule::Ptr<_1e31a82c3_Prim> _31779_t = _1e31a2d4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31779_t == nullptr) || (!(_1e31ab4c4_IsBool(_31779_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1e31707c9_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_228943044_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1e6d55202:;
				{
					_228942032_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_228940948_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1e6d54d28:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3191:17"));;
				}
			}
			_match_end_1e6d54c5c:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1e3191256_star(_1e3190321_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1e31a3367_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d58a0d:;
			{
				if ((!(_1e3172b3e_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e31b05b6_Ptr> _321617_t = _1e31a3367_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1e31b1100_IsUnsafe(_321617_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_321617_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1e31a30d1_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6d586de:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1e31a30d1_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1e6d58678:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6d57710:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1e3191454_amper(_1e3190321_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e6d61a6b:;
			{
				jule::Ptr<_1e304d08b_StructLitExprModel> _323717_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94);;
				_1e3199193_makeStructLitAlloc(&((*(_self_))._field_d), &(_323717_lit));
			}
		}
		else {
			_case_begin_1e6d5e074:;
			{
				{
					
					if (_1e31bb5d3_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1e6d5db23:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31b05b6_Ptr>(_1e31b05b6_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1e6d5e5a2:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1e6d5e4d6:;
				};
			}
		}
		_match_end_1e6d5e01e:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1e3191652_typeDecl(_1e3190321_unaryEval* _self_) {
	_1e31b25a7_typeChecker _326113_tc = _1e31b25a7_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e6d63133:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31b7997_buildPtrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6d666ca:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e31b7315_buildSptrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1e6d64a08:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6d649a3:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1e3191850_evalData(_1e3190321_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6d6a217:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _328617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1e318e6c7_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_328617_prefix;
			}
		}
		else {
			_case_begin_1e6d69d2c:;
			{
				(*(_self_))._field_d=_1e318e6c7_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1e6d69ca5:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3191b91_eval(_1e3190321_unaryEval* _self_, jule::Ptr<_1e302a860_UnaryExpr> _329527_u) {
	(*(_self_))._field_u=_329527_u;
	_1e3191850_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1e3191652_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _33069_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1e6d6e815:;
			{
				_1e319095e_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1e6d6e518:;
			{
				_1e3190b5c_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e6d6e57e:;
			{
				_1e3190d5a_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1e6d6e5e5:;
			{
				_1e3191058_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e6d6e65b:;
			{
				_1e3191256_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6d6eb67:;
			{
				_1e3191454_amper(_self_);
			}
		}
		else {
			_case_begin_1e6d6e4a2:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1e6d6e44c:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1e6d6ebcd:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str(_33069_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1e31707c9_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1e6d7143d:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1e6d713d8:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3190321_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e31922ac_binaryEval static__1e3192895_newPlain(jule::Ptr<_1e3171ae9_Eval> _334328_e) {
	return _1e31922ac_binaryEval{._field_e=_334328_e, };;
}



inline _1e31922ac_binaryEval static__1e3192bd6_new(jule::Ptr<_1e3171ae9_Eval> _334923_e, jule::Ptr<_20cb74604_Token> _334937_op) {
	return _1e31922ac_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};;
}



inline jule::Bool _1e3192e6c_checkTypeCompatibility(_1e31922ac_binaryEval* _self_) {
	return _1e30e8554_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1e3193203_checkStructCommonOperatorCompatibility(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e305ce36_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1e6d764ed:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1e6d78049:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1e6d780b0:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1e6d76a2b:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1e6d76a92:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e6d76b08:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e6d76b6e:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6d7819d:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1e6d78214:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e6d7827a:;
			{
				_336317_overload=(*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1e6d769b5:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1e6d76960:;
	};
	if ((_336317_overload == nullptr)) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1e305be8a_ParamIns> _339513_p = (*(_336317_overload))._field_Params[1LL];;
	return _1e30e809d_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_339513_p))._field_Decl))._field_Reference, &((*(_339513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1e316ee05_Data> _1e3193489_evalComptimeTypeInfo(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e308404a_comptimeTypeInfo> _340013_r = _1e31a6711_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_340013_r == nullptr)) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e308404a_comptimeTypeInfo> _340513_l = _1e31a6711_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1e6d863a9:;
			{
				jule::Ptr<_22893da56_Const> _340817_constant = static__22893e529_NewBool(_1e31a0e03_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base));;
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_340817_constant, &__jule_any_type19), ._field_Constant=_340817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6d875ca:;
			{
				jule::Ptr<_22893da56_Const> _341517_constant = static__22893e529_NewBool((!(_1e31a0e03_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base))));;
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, ._field_Model=jule::Any(_341517_constant, &__jule_any_type19), ._field_Constant=_341517_constant});;
			}
		}
		else {
			_case_begin_1e6d86046:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6d85ee1:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3193720_evalNil(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e31a2597_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6d89e29:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6d8b535:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6d8b4d0:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e31939a6_evalEnum(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e30709c6_Enum> _344613_enm = _1e31a35ed_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6d8d845:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _345017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1e31a35ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_345017_rkind=(*((*(_1e31a35ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1e30e8554_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_344613_enm))._field_Kind))._field_Kind), &(_345017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		_match_end_1e6d8d7e0:;
	};
	if (((_1e31a35ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_344613_enm != _1e31a35ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6d93ecc:;
			{
				if ((!(_22893d57d_IsNum(_1e31a0ab2_Str((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6d94d68:;
			{
				jule::Ptr<_1e306ee59_EnumItem> _348013_first = (*(_344613_enm))._field_Items[0LL];;
				{
					
					if (_228942a27_IsI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1e6d98047:;
						{
							if ((_22894042b_ReadI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1e6d9c26b;
							};
							goto _julec_label_1e6d9a852;
						}
					}
					else if (_228942cad_IsU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1e6d980be:;
						{
							if ((_2289406b2_ReadU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1e6d9c26b;
							};
							goto _julec_label_1e6d9a852;
						}
					}
					else {
						_case_begin_1e6d97b5c:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3493:17"));;
						}
					}
					_match_end_1e6d97ae6:;
				};
				_julec_label_1e6d9a852:;
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1e31724ac_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1e6d9c26b:;
				goto _case_begin_1e6d94dce;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e6d94dce:;
			{
				if (((_1e31a2d4a_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_22893ce73_IsInt(_1e31a8614_Str(_1e31a2d4a_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e6d93b69:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6d93b14:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3193c3c_evalTypeEnum(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e30721d1_TypeEnum> _351313_enm = _1e31a3884_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6da2848:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6da1bbb:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e3072522_Str(_351313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6da2480:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3193ec3_evalSptr(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6da39c0:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6da474b:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6da46e6:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3194259_evalPtr(_1e31922ac_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1e6da6b27:;
			{
				if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1e6da7d48:;
			{
				if ((_1e31a3367_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1e31b1100_IsUnsafe(_1e31a3367_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1e319a3a3_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e6da6198:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6da6121:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e31944e0_evalArr(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6da110a:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6dadc50:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dadbea:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3194776_evalSlc(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6db048d:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6db1219:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6db11b4:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3194a0c_evalStruct(_1e31922ac_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1e6db32e8:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1e6db335e:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1e6db33c5:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6db344c:;
			{
				if (((*(_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6db34c4:;
			{
				if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		_match_end_1e6db2ade:;
	};
	if ((!(_1e3193203_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3194c93_evalTrait(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6dbceb2:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6dbd7dc:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dbd787:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3195029_evalAny(_1e31922ac_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6dc037c:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6dc0239:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dc01b2:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e31952b0_evalBool(_1e31922ac_binaryEval* _self_) {
	if ((!(_1e3192e6c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1e6dc1b0e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e6dc288a:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dc2835:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3195546_evalStr(_1e31922ac_binaryEval* _self_) {
	jule::Str _371213_rk = _1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_371213_rk.equal("str", 3))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_371213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1e6dc6482:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6dc7263:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		else {
			_case_begin_1e6dc5dbb:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dc60b9:;
	};
}



inline void _1e3195744_setTypeToGreater(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e31a82c3_Prim> _37379_lp = _1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1e31a82c3_Prim> _37389_rp = _1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1e31707c9_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1e31707c9_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1e6dcb6a7;
	};
	if (_1e31707c9_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37379_lp))._field_Kind;
		return;;
	};
	_julec_label_1e6dcb6a7:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1e31707c9_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_22893b845_IsGreater((*(_37389_rp))._field_Kind, (*(_37379_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1e31707c9_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
	};
}



inline void _1e31959ec_checkModData(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _377036_d) {
	if ((!(_1e31707c9_IsConst((*(_377036_d)).ptr())))) {
		if (((_1e31a2d4a_Prim((*((*(_377036_d))))._field_Kind.ptr()) == nullptr) || (!(_22893ce73_IsInt((*(_1e31a2d4a_Prim((*((*(_377036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e315103a_sigAssignable(jule::Str::lit("i64", 3), _377036_d)) {
			_case_begin_1e6dd4418:;
			{
				_2289419c1_SetI64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1e3151403_unsigAssignable(jule::Str::lit("u64", 3), _377036_d)) {
			_case_begin_1e6dd4490:;
			{
				_228941c79_SetU64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1e6dd4094:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e6dd403e:;
	};
}



inline void _1e3195bea_mod(_1e31922ac_binaryEval* _self_) {
	_1e31959ec_checkModData(_self_, &((*(_self_))._field_l));
	_1e31959ec_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1e31960e6_numbersAreCompatibile(_1e31922ac_binaryEval* _self_, jule::Str* _379237_lk, jule::Str* _379247_rk) {
	if ((!(_22893d57d_IsNum((*(_379247_rk)))))) {
		return false;;
	};
	if ((_1e31707c9_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_379237_lk)).equal("f32", 3)) {
		if ((_1e31707c9_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f32", 3);;
	};
	if ((*(_379237_lk)).equal("f64", 3)) {
		if ((_1e31707c9_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f64", 3);;
	};
	if ((_1e31707c9_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_379237_lk)) == (*(_379247_rk)));;
}



inline jule::Ptr<_1e316ee05_Data> _1e319637c_evalFloat(_1e31922ac_binaryEval* _self_) {
	jule::Str _38189_lk = (*(_1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38199_rk = (*(_1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1e31960e6_numbersAreCompatibile(_self_, &(_38189_lk), &(_38199_rk))))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1e6ddd8b7:;
			{
				if (((!(_1e31707c9_IsConst((*(_self_))._field_l.ptr()))) || (!(_1e3151777_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1e31707c9_IsConst((*(_self_))._field_r.ptr()))) || (!(_1e3151777_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_2289419c1_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_228941c79_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1e3199b55_isOkForShifting(&((*(_self_))._field_r))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1e6ddd862:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6ddde5b:;
			{
				_1e3195744_setTypeToGreater(_self_);
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		_match_end_1e6ddde06:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1e6ddcb08:;
			{
				_1e3195744_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e6de642a:;
			{
				if ((!(_22893ce73_IsInt(_38199_rk)))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1e3195bea_mod(_self_);
				_1e3195744_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1e6de4c75:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6de576a:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3196613_evalInt(_1e31922ac_binaryEval* _self_) {
	jule::Str _38829_lk = (*(_1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38839_rk = (*(_1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1e6de987e:;
			{
				if (((!(_22893ce73_IsInt(_38829_lk))) || (!(_22893ce73_IsInt(_38839_rk))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1e3199b55_isOkForShifting(&((*(_self_))._field_r))))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1e6de9c03:;
	};
	if ((!(_1e31960e6_numbersAreCompatibile(_self_, &(_38829_lk), &(_38839_rk))))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6dece9d:;
			{
				return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32828a8_primBool, });;
			}
		}
		_match_end_1e6dece48:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e6de9d46:;
			{
				_1e3195744_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e6e00126:;
			{
				_1e3195bea_mod(_self_);
				_1e3195744_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e6dee19c:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6dee147:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3196899_evalPrim(_1e31922ac_binaryEval* _self_) {
	jule::Ptr<_1e31a82c3_Prim> _39399_prim = _1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1e31ab4c4_IsBool(_39399_prim.ptr())) {
			_case_begin_1e6e02414:;
			{
				return _1e31952b0_evalBool(_self_);;
			}
		}
		else if (_1e31ab75a_IsStr(_39399_prim.ptr())) {
			_case_begin_1e6e0248b:;
			{
				return _1e3195546_evalStr(_self_);;
			}
		}
		_match_end_1e6e0236a:;
	};
	if ((_1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a8614_Str(_39399_prim.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_22893d2b4_IsFloat((*(_39399_prim))._field_Kind)) {
			_case_begin_1e6e04d1d:;
			{
				return _1e319637c_evalFloat(_self_);;
			}
		}
		else if (_22893ce73_IsInt((*(_39399_prim))._field_Kind)) {
			_case_begin_1e6e04d95:;
			{
				return _1e3196613_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1e6e04c74:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e02546:;
	};
}



inline void _1e3196a97_checkSpecialCases(_1e31922ac_binaryEval* _self_) {
	if (((!(_1e31a1ce4_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1e31a17c7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1e31a1ce4_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1e31a17c7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3196d2d_evalOp(_1e31922ac_binaryEval* _self_) {
	_1e3196a97_checkSpecialCases(_self_);
	{
		
		if (_1e31a1a5d_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1e6e0a40b:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1e31a6711_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e09cce:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0a5a4;
			}
		}
		else if ((_1e31a6711_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0a5a4:;
			{
				return _1e3193489_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1e31ab9e1_IsAny(_1e31a2d4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6e0b7c5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0b83b;
			}
		}
		else if (_1e31a17c7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1e6e0b83b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0b929;
			}
		}
		else if (_1e31a17c7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1e6e0b929:;
			{
				return _1e3193720_evalNil(_self_);;
			}
		}
		else if (((_1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1e31ab9e1_IsAny(_1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6e0b990:;
			{
				return _1e3195029_evalAny(_self_);;
			}
		}
		else if ((_1e31a3884_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0ba06:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0ba6c;
			}
		}
		else if ((_1e31a3884_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0ba6c:;
			{
				return _1e3193c3c_evalTypeEnum(_self_);;
			}
		}
		else if ((_1e31a35ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bad3:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0bb49;
			}
		}
		else if ((_1e31a35ed_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bb49:;
			{
				return _1e31939a6_evalEnum(_self_);;
			}
		}
		else if ((_1e31a30d1_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bbc1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0bc48;
			}
		}
		else if ((_1e31a30d1_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bc48:;
			{
				return _1e3193ec3_evalSptr(_self_);;
			}
		}
		else if ((_1e31a3367_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bcc0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0bd47;
			}
		}
		else if ((_1e31a3367_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bd47:;
			{
				return _1e3194259_evalPtr(_self_);;
			}
		}
		else if ((_1e31a3b1a_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bdbe:;
			{
				return _1e31944e0_evalArr(_self_);;
			}
		}
		else if ((_1e31a3da1_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0be46:;
			{
				return _1e3194776_evalSlc(_self_);;
			}
		}
		else if ((_1e31a4654_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0bebd:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1e6e0c045;
			}
		}
		else if ((_1e31a4654_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0c045:;
			{
				return _1e3194c93_evalTrait(_self_);;
			}
		}
		else if ((_1e31a43bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0c0bc:;
			{
				return _1e3194a0c_evalStruct(_self_);;
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e0c144:;
			{
				return _1e3196899_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1e6e0a20d:;
			{
				_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e6e0a197:;
	};
}



inline void _1e31970d6_evalConst(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _403033_d) {
	{
		
		if (((*(_403033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1e6e1eeae:;
			{
				return;;
			}
		}
		else if ((!(_1e31707c9_IsConst((*(_self_))._field_l.ptr()))) || (!(_1e31707c9_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1e6e20212:;
			{
				(*((*(_403033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1e6e1edd2:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1e6e2239b:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_22894460b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e6e22412:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool((!(_22894460b_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1e6e22478:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_2289442ba_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1e6e224de:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_228943e79_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1e6e22555:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_2289450ce_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1e6e225bb:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_22894494c_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1e6e22643:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_228945420_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1e6e226ba:;
			{
				(*((*(_403033_d))))._field_Constant=static__22893e529_NewBool(_228944c8d_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1e6e22742:;
			{
				_228945761_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1e6e227b9:;
			{
				_228945aa2_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e6e22841:;
			{
				_228945de3_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1e6e228b8:;
			{
				jule::Bool _406913_ok = _228946234_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_406913_ok)) && (_228941718_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1e31a82c3_Prim> _407417_prim = _1e31a2d4a_Prim((*((*(_403033_d))))._field_Kind.ptr());;
				{
					
					if (_22893c89b_IsSigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1e6e331ae:;
						{
							_2289419c1_SetI64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					else if (_22893cba9_IsUnsigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1e6e33236:;
						{
							_228941c79_SetU64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1e6e33115:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e6e22940:;
			{
				jule::Bool _408213_ok = _228946575_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_408213_ok)) && (_228941718_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1e6e229b7:;
			{
				_228946c07_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e6e22a3e:;
			{
				_2289468b6_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e6e22ab6:;
			{
				_228947048_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1e6e22b3d:;
			{
				_228947389_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1e6e22bb5:;
			{
				_2289476ca_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1e6e21b5e:;
	};
	(*((*(_403033_d))))._field_Model=jule::Any((*((*(_403033_d))))._field_Constant, &__jule_any_type19);
	_1e319b23e_applyCastModelByEnum(_403033_d, _1e31a35ed_Enum((*((*(_403033_d))))._field_Kind.ptr()));
}



inline void _1e319738e_checkData(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _410733_d) {
	jule::Ptr<_1e305ce36_FnIns> _41089_f = _1e31a4137_Fn((*((*(_410733_d))))._field_Kind.ptr());;
	if ((((_41089_f != nullptr) && ((*(_41089_f))._field_Decl != nullptr)) && _1e305a73b_IsMethod((*(_41089_f))._field_Decl.ptr()))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1e319758c_checkDatas(_1e31922ac_binaryEval* _self_) {
	_1e319738e_checkData(_self_, &((*(_self_))._field_l));
	_1e319738e_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1e3197845_setModel(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _411932_d) {
	if (_1e31707c9_IsConst((*(_411932_d)).ptr())) {
		if (((_1e31707c9_IsConst((*(_self_))._field_l.ptr()) && _1e31707c9_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1e316ee05_Data> _412813_l;;
	jule::Ptr<_1e316ee05_Data> _412820_r;;
	({
		jule::Ptr<_1e316ee05_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1e316ee05_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_412813_l = ___jule_assign_arg;
		_412820_r = _1___jule_assign_arg;
	});
	if ((!(_1e3170b1a_GoodOperand(_412813_l.ptr(), &(_412820_r))))) {
		std::swap(_412813_l, _412820_r);
	};
	(*((*(_411932_d))))._field_Model=jule::Any(jule::new_ptr<_1e304c2dd_BinopExprModel>(_1e304c2dd_BinopExprModel{._field_Left=jule::new_ptr<_1e304bce3_OperandExprModel>(_1e304bce3_OperandExprModel{._field_Kind=(*(_412813_l))._field_Kind, ._field_Model=(*(_412813_l))._field_Model}), ._field_Right=jule::new_ptr<_1e304bce3_OperandExprModel>(_1e304bce3_OperandExprModel{._field_Kind=(*(_412820_r))._field_Kind, ._field_Model=(*(_412820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1e3197aed_postEval(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _414632_d) {
	(*((*(_414632_d))))._field_Lvalue=false;
	_1e3197845_setModel(_self_, _414632_d);
}



inline jule::Ptr<_1e316ee05_Data> _1e3197ee9_solveExplicit(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e316ee05_Data>* _415137_l, jule::Ptr<_1e316ee05_Data>* _415152_r) {
	({
		jule::Ptr<_1e316ee05_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1e316ee05_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e319758c_checkDatas(_self_);
	jule::Ptr<_1e316ee05_Data> _415613_d = _1e3196d2d_evalOp(_self_);;
	({
		jule::Ptr<_1e316ee05_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1e316ee05_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e31970d6_evalConst(_self_, &(_415613_d));
	if ((_415613_d != nullptr)) {
		(*(_415613_d))._field_Mutable=true;
		_1e3197aed_postEval(_self_, &(_415613_d));
	};
	return _415613_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e319833a_eval(_1e31922ac_binaryEval* _self_, jule::Ptr<_1e302bd6c_BinopExpr>* _417128_op) {
	if (((*((*((*(_417128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1e3172149_pushErr((*(_self_))._field_e.ptr(), (*((*(_417128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1e31724ac_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _417813_l = _1e318ea18_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Left);;
	if (((_417813_l == nullptr) || ((*(_417813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _418313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_417813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_418313_prefix;
	});;
	jule::Ptr<_1e316ee05_Data> _418613_r = _1e318ea18_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Right);;
	if (((_418613_r == nullptr) || ((*(_418613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_417128_op))))._field_Op;
	jule::Ptr<_1e316ee05_Data> _419313_d = _1e3197ee9_solveExplicit(_self_, &(_417813_l), &(_418613_r));;
	if ((((_419313_d != nullptr) && (*(_417813_l))._field_IsRune) && (*(_418613_r))._field_IsRune)) {
		(*(_419313_d))._field_IsRune=true;
	};
	return _419313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31922ac_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e319dd13_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e319e907_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e31a0ab2_Str(_1e31a06e9_TypeKind* _self_) {
	if (_1e31a17c7_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_227713453_StrBuilder _7413_kind = static__22771371c_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_22771c02d_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1e31a1541_Binded(_self_)) {
		_22771c02d_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_22771c02d_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_22771c02d_WriteStr(&_7413_kind, _1e31a0243_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1e319ec9d_Str((*(_self_))._field_Kind));
	};
	return _22771c825_Str(&_7413_kind);;
}



inline jule::Bool _1e31a0e03_Equal(jule::Ptr<_1e31a06e9_TypeKind> _self_, jule::Ptr<_1e31a06e9_TypeKind> _9021_other) {
	if (_1e31a17c7_IsNil(_self_.ptr())) {
		return _1e31a17c7_IsNil(_9021_other.ptr());;
	};
	if (_1e31a1541_Binded(_self_.ptr())) {
		return (_1e31a1541_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1e31a0243_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1e31a00de_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1e31a1541_Binded(_1e31a06e9_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1e31a17c7_IsNil(_1e31a06e9_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1e31a1a5d_Void(_1e31a06e9_TypeKind* _self_) {
	jule::Ptr<_1e31a82c3_Prim> _1109_prim = _1e31a2d4a_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1e31a1ce4_Comparable(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _11717__self = _self_;;
		if ((_1e31a43bd_Struct(_11717__self) != nullptr)) {
			return (*(_1e31a43bd_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1e31a48da_Map(_11717__self) == nullptr) && (_1e31a3da1_Slc(_11717__self) == nullptr)) && (_1e31a4137_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1e31a207a_Mutable(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _12817__self = _self_;;
		if ((_1e31a43bd_Struct(_12817__self) != nullptr)) {
			return (*(_1e31a43bd_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1e31a4654_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1e31a2d4a_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1e31a82c3_Prim> _13617_p = _1e31a2d4a_Prim(_12817__self);;
			return _1e31ab9e1_IsAny(_13617_p.ptr());;
		};
		if ((_1e31a3b1a_Arr(_12817__self) != nullptr)) {
			return _1e31a207a_Mutable((*(_1e31a3b1a_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1e31a3da1_Slc(_12817__self) != nullptr) || (_1e31a3367_Ptr(_12817__self) != nullptr)) || (_1e31a30d1_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1e31a2311_Ordered(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1e31a82c3_Prim> _15213_prim = _1e31a2d4a_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_22893d57d_IsNum((*(_15213_prim))._field_Kind) || _1e31ab75a_IsStr(_15213_prim.ptr()));;
		};
		if ((_1e31a3367_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1e3047d55_StructIns> _15913_s = _1e31a43bd_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1e30709c6_Enum> _16613_enm = _1e31a35ed_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _22893d57d_IsNum(_1e31a0ab2_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1e31a2597_NilCompatible(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1e31a82c3_Prim> _17913_prim = _1e31a2d4a_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1e31ab9e1_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1e31a17c7_IsNil(_17717__self) || (_1e31a4137_Fn(_17717__self) != nullptr)) || (_1e31a30d1_Sptr(_17717__self) != nullptr)) || (_1e31a3367_Ptr(_17717__self) != nullptr)) || (_1e31a4654_Trait(_17717__self) != nullptr)) || (_1e31a3da1_Slc(_17717__self) != nullptr)) || (_1e31a48da_Map(_17717__self) != nullptr)) || (_1e31a3884_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1e31a282d_PerformsRC(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1e31a82c3_Prim> _19913_prim = _1e31a2d4a_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1e31ab9e1_IsAny(_19913_prim.ptr()) || _1e31ab75a_IsStr(_19913_prim.ptr()));;
		};
		return (((_1e31a30d1_Sptr(_19817__self) != nullptr) || (_1e31a3da1_Slc(_19817__self) != nullptr)) || (_1e31a4654_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1e31a2ab4_Variadicable(_1e31a06e9_TypeKind* _self_) {
	{
		_1e31a06e9_TypeKind* _21017__self = _self_;;
		return (_1e31a3da1_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1e31a82c3_Prim> _1e31a2d4a_Prim(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1e6e844b8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31a82c3_Prim>(20);;
			}
		}
		else {
			_case_begin_1e6e84809:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e847a4:;
	};
}



inline jule::Ptr<_1e31abcee_Sptr> _1e31a30d1_Sptr(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1e6e84e47:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31abcee_Sptr>(21);;
			}
		}
		else {
			_case_begin_1e6e856b7:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e85662:;
	};
}



inline jule::Ptr<_1e31b05b6_Ptr> _1e31a3367_Ptr(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1e6e85eae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31b05b6_Ptr>(26);;
			}
		}
		else {
			_case_begin_1e6e863bb:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e86366:;
	};
}



inline jule::Ptr<_1e30709c6_Enum> _1e31a35ed_Enum(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e6e86ba2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e30709c6_Enum>(3);;
			}
		}
		else {
			_case_begin_1e6e8709d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e87048:;
	};
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e31a3884_TypeEnum(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1e6e87895:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e30721d1_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1e6e87ca2:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e87c4c:;
	};
}



inline jule::Ptr<_1e31aeae3_Arr> _1e31a3b1a_Arr(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1e6e88599:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31aeae3_Arr>(25);;
			}
		}
		else {
			_case_begin_1e6e889a6:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e88951:;
	};
}



inline jule::Ptr<_1e31ac7c2_Slc> _1e31a3da1_Slc(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1e6e8929d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31ac7c2_Slc>(22);;
			}
		}
		else {
			_case_begin_1e6e896aa:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e89655:;
	};
}



inline jule::Ptr<_1e305ce36_FnIns> _1e31a4137_Fn(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1e6e89ea2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e305ce36_FnIns>(1);;
			}
		}
		else {
			_case_begin_1e6e8a3ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e8a359:;
	};
}



inline jule::Ptr<_1e3047d55_StructIns> _1e31a43bd_Struct(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6e8ab95:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3047d55_StructIns>(0);;
			}
		}
		else {
			_case_begin_1e6e8b091:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e8b03b:;
	};
}



inline jule::Ptr<_1e306d2cb_Trait> _1e31a4654_Trait(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1e6e8b888:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e306d2cb_Trait>(2);;
			}
		}
		else {
			_case_begin_1e6e8bc95:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e8bc40:;
	};
}



inline jule::Ptr<_1e31ade66_Map> _1e31a48da_Map(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1e6e8c58c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31ade66_Map>(24);;
			}
		}
		else {
			_case_begin_1e6e8c999:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e8c944:;
	};
}



inline jule::Ptr<_1e31ad3b6_Tuple> _1e31a4b71_Tup(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1e6e8d291:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e31ad3b6_Tuple>(23);;
			}
		}
		else {
			_case_begin_1e6e8d69d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e8d648:;
	};
}



inline jule::Bool _1e31a4e07_comptime(_1e31a06e9_TypeKind* _self_) {
	return ((((((((((((((_1e31a647a_comptimeTypeInfos(_self_) != nullptr) || (_1e31a6711_comptimeTypeInfo(_self_) != nullptr)) || (_1e31a518d_comptimeStructFields(_self_) != nullptr)) || (_1e31a5424_comptimeStructField(_self_) != nullptr)) || (_1e31a56aa_comptimeEnumFields(_self_) != nullptr)) || (_1e31a5941_comptimeEnumField(_self_) != nullptr)) || (_1e31a6997_comptimeStatics(_self_) != nullptr)) || (_1e31a6c2d_comptimeStatic(_self_) != nullptr)) || (_1e31a5bc7_comptimeParams(_self_) != nullptr)) || (_1e31a5e5d_comptimeParam(_self_) != nullptr)) || (_1e31a61e4_comptimeRange(_self_) != nullptr)) || (_1e31a6eb4_comptimeValue(_self_) != nullptr)) || (_1e31a74d1_comptimeFiles(_self_) != nullptr)) || (_1e31a724a_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1e3076c85_comptimeStructFields> _1e31a518d_comptimeStructFields(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1e6e8e319:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3076c85_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1e6e93142:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e930dc:;
	};
}



inline jule::Ptr<_1e30750d5_comptimeStructField> _1e31a5424_comptimeStructField(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1e6e93609:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e30750d5_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1e6e93a16:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e939b1:;
	};
}



inline jule::Ptr<_1e307c95b_comptimeEnumFields> _1e31a56aa_comptimeEnumFields(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1e6e9430d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e307c95b_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1e6e9471a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e946b5:;
	};
}



inline jule::Ptr<_1e307b64c_comptimeEnumField> _1e31a5941_comptimeEnumField(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1e6e95012:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e307b64c_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1e6e9541e:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e953b9:;
	};
}



inline jule::Ptr<_1e3081355_comptimeParams> _1e31a5bc7_comptimeParams(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1e6e95c16:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3081355_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1e6e96123:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e960bd:;
	};
}



inline jule::Ptr<_1e307e0de_comptimeParam> _1e31a5e5d_comptimeParam(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1e6e9691a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e307e0de_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1e6e96d27:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e96cc2:;
	};
}



inline jule::Ptr<_1e3074579_comptimeRange> _1e31a61e4_comptimeRange(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1e6e9761e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3074579_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1e6e97a2b:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e979c6:;
	};
}



inline jule::Ptr<_1e3082950_comptimeTypeInfos> _1e31a647a_comptimeTypeInfos(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1e6e98323:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3082950_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1e6e98730:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e986ca:;
	};
}



inline jule::Ptr<_1e308404a_comptimeTypeInfo> _1e31a6711_comptimeTypeInfo(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1e6e99027:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e308404a_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1e6e99434:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e993ce:;
	};
}



inline jule::Ptr<_1e307a052_comptimeStatics> _1e31a6997_comptimeStatics(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1e6e99c2b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e307a052_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1e6e9a138:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e9a0d3:;
	};
}



inline jule::Ptr<_1e3078391_comptimeStatic> _1e31a6c2d_comptimeStatic(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1e6e9a930:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e3078391_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1e6e9ad3c:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e9acd7:;
	};
}



inline jule::Ptr<_1e308a55c_comptimeValue> _1e31a6eb4_comptimeValue(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1e6e9b634:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e308a55c_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1e6e9ba41:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e9b9db:;
	};
}



inline jule::Ptr<_1e308e4a6_comptimeFile> _1e31a724a_comptimeFile(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1e6e9c338:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e308e4a6_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1e6e9c745:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e9c6e0:;
	};
}



inline jule::Ptr<_1e308cdab_comptimeFiles> _1e31a74d1_comptimeFiles(_1e31a06e9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1e6e9d03c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e308cdab_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1e6e9d449:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6e9d3e4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e31a06e9_TypeKind _Src) {
	_Stream << _1e31a0ab2_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1e31a7c40_checked(_1e31a78bb_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31a78bb_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e31a8614_Str(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1e31a8955_Equal(jule::Ptr<_1e31a82c3_Prim> _self_, jule::Ptr<_1e31a06e9_TypeKind> _50721_other) {
	jule::Ptr<_1e31a82c3_Prim> _5089_prim = _1e31a2d4a_Prim(_50721_other.ptr());;
	if ((_5089_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5089_prim))._field_Kind);;
}



inline jule::Bool _1e31a8dea_IsConstraint(_1e31a82c3_Prim* _self_) {
	return ((((!(_1e31ab75a_IsStr(_self_))) && (!(_1e31ab9e1_IsAny(_self_)))) && (!(_1e31ab4c4_IsBool(_self_)))) && (!(_22893d57d_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1e31a9181_IsI8(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1e31a9417_IsI16(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1e31a969d_IsI32(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1e31a9934_IsI64(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1e31a9bba_IsU8(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1e31a9e51_IsU16(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1e31aa1d7_IsU32(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1e31aa46d_IsU64(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1e31aa704_IsF32(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1e31aa98a_IsF64(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1e31aac21_IsInt(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1e31aaea7_IsUint(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1e31ab23d_IsUintptr(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1e31ab4c4_IsBool(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1e31ab75a_IsStr(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1e31ab9e1_IsAny(_1e31a82c3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31a82c3_Prim _Src) {
	_Stream << _1e31a8614_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31ac173_Str(_1e31abcee_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1e31a0ab2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e31ac4b4_Equal(jule::Ptr<_1e31abcee_Sptr> _self_, jule::Ptr<_1e31a06e9_TypeKind> _58421_other) {
	jule::Ptr<_1e31abcee_Sptr> _5859_sptr = _1e31a30d1_Sptr(_58421_other.ptr());;
	if ((_5859_sptr == nullptr)) {
		return false;;
	};
	return _1e31a0e03_Equal((*(_self_))._field_Elem, (*(_5859_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31abcee_Sptr _Src) {
	_Stream << _1e31ac173_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31acc56_Str(_1e31ac7c2_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1e31a0ab2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e31ad097_Equal(jule::Ptr<_1e31ac7c2_Slc> _self_, jule::Ptr<_1e31a06e9_TypeKind> _60321_other) {
	jule::Ptr<_1e31ac7c2_Slc> _6049_slc = _1e31a3da1_Slc(_60321_other.ptr());;
	if ((_6049_slc == nullptr)) {
		return false;;
	};
	return _1e31a0e03_Equal((*(_self_))._field_Elem, (*(_6049_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31ac7c2_Slc _Src) {
	_Stream << _1e31acc56_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31ad73a_Str(_1e31ad3b6_Tuple* _self_) {
	_227713453_StrBuilder _62013_s = static__22771371c_New(16LL);;
	_22771c2d6_WriteByte(&_62013_s, '(');
	_22771c02d_WriteStr(&_62013_s, _1e31a0ab2_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e6ead536:;
		if (it != expr_end) {
			jule::Ptr<_1e31a06e9_TypeKind> *_62316_t = it;
			{
				_22771c2d6_WriteByte(&_62013_s, ',');
				_22771c02d_WriteStr(&_62013_s, _1e31a0ab2_Str((*(_62316_t)).ptr()));
			}
			_iter_next_1e6ead536:;
			++it;
			goto _iter_begin_1e6ead536;
		}
		_iter_end_1e6ead536:;
	};
	_22771c2d6_WriteByte(&_62013_s, ')');
	return _22771c825_Str(&_62013_s);;
}



inline jule::Bool _1e31ada7b_Equal(jule::Ptr<_1e31ad3b6_Tuple> _self_, jule::Ptr<_1e31a06e9_TypeKind> _63221_other) {
	jule::Ptr<_1e31ad3b6_Tuple> _6339_tup = _1e31a4b71_Tup(_63221_other.ptr());;
	if ((_6339_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6339_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64013_i = 0LL;;
	for (; (_64013_i < (*(_self_))._field_Types.len()); (_64013_i)++) {
		{
			if ((!(_1e31a0e03_Equal((*(_self_))._field_Types[_64013_i], (*(_6339_tup))._field_Types[_64013_i])))) {
				return false;;
			};
		}
	_iter_next_1e6eb121a:;
	}
	_iter_end_1e6eb121a:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31ad3b6_Tuple _Src) {
	_Stream << _1e31ad73a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31ae2da_Str(_1e31ade66_Map* _self_) {
	_227713453_StrBuilder _66013_s = static__22771371c_New(16LL);;
	_22771c02d_WriteStr(&_66013_s, jule::Str::lit("map[", 4));
	_22771c02d_WriteStr(&_66013_s, _1e31a0ab2_Str((*(_self_))._field_Key.ptr()));
	_22771c2d6_WriteByte(&_66013_s, ']');
	_22771c02d_WriteStr(&_66013_s, _1e31a0ab2_Str((*(_self_))._field_Val.ptr()));
	return _22771c825_Str(&_66013_s);;
}



inline jule::Bool _1e31ae62b_Equal(jule::Ptr<_1e31ade66_Map> _self_, jule::Ptr<_1e31a06e9_TypeKind> _66921_other) {
	jule::Ptr<_1e31ade66_Map> _6709_m = _1e31a48da_Map(_66921_other.ptr());;
	if ((_6709_m == nullptr)) {
		return false;;
	};
	return (_1e31a0e03_Equal((*(_self_))._field_Key, (*(_6709_m))._field_Key) && _1e31a0e03_Equal((*(_self_))._field_Val, (*(_6709_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31ade66_Map _Src) {
	_Stream << _1e31ae2da_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31aee67_Str(_1e31aeae3_Arr* _self_) {
	_227713453_StrBuilder _68813_s = static__22771371c_New(16LL);;
	_22771c2d6_WriteByte(&_68813_s, '[');
	_22771c02d_WriteStr(&_68813_s, _22892d7e3_Itoa((*(_self_))._field_N));
	_22771c2d6_WriteByte(&_68813_s, ']');
	_22771c02d_WriteStr(&_68813_s, _1e31a0ab2_Str((*(_self_))._field_Elem.ptr()));
	return _22771c825_Str(&_68813_s);;
}



inline jule::Bool _1e31b02a8_Equal(jule::Ptr<_1e31aeae3_Arr> _self_, jule::Ptr<_1e31a06e9_TypeKind> _69721_other) {
	jule::Ptr<_1e31aeae3_Arr> _6989_arr = _1e31a3b1a_Arr(_69721_other.ptr());;
	if ((_6989_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6989_arr))._field_N) && _1e31a0e03_Equal((*(_self_))._field_Elem, (*(_6989_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31aeae3_Arr _Src) {
	_Stream << _1e31aee67_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e31b093a_Str(_1e31b05b6_Ptr* _self_) {
	if (_1e31b1100_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1e31a0ab2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e31b0c7b_Equal(jule::Ptr<_1e31b05b6_Ptr> _self_, jule::Ptr<_1e31a06e9_TypeKind> _72121_other) {
	jule::Ptr<_1e31b05b6_Ptr> _7229_ptr = _1e31a3367_Ptr(_72121_other.ptr());;
	if ((_7229_ptr == nullptr)) {
		return false;;
	};
	return _1e31a0e03_Equal((*(_self_))._field_Elem, (*(_7229_ptr))._field_Elem);;
}



inline jule::Bool _1e31b1100_IsUnsafe(_1e31b05b6_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31b05b6_Ptr _Src) {
	_Stream << _1e31b093a_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31b15b7_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e31b2ce4_pushErr(_1e31b25a7_typeChecker* _self_, jule::Ptr<_20cb74604_Token> _80726_token, jule::Str _80741_fmt, jule::Slice<jule::Any> _80754_args) {
	_1e30e0590_pushErr((*(_self_))._field_s.ptr(), _80726_token, _80741_fmt, _80754_args);
}



inline void _1e31b2ee2_allowBuiltin(_1e31b25a7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e31b31e0_disallowBuiltin(_1e31b25a7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1e6ec0229_pushReference(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3047d55_StructIns>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1e6aa831d_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1e3061dc4_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type9));
}

inline void _1e6ec2968_pushReference(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e306d2cb_Trait>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1e6ec46d4_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1e3061dc4_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type10));
}



inline void _1e31b3751_pushReferenceByKind(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _82943_k) {
	{
		
		if ((_1e31a43bd_Struct((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1e6ebde92:;
			{
				jule::Ptr<_1e3047d55_StructIns> _83217_t = _1e31a43bd_Struct((*(_82943_k)).ptr());;
				_1e6ec0229_pushReference(_self_, &(_83217_t));
			}
		}
		else if ((_1e31a4654_Trait((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1e6ebe019:;
			{
				jule::Ptr<_1e306d2cb_Trait> _83517_t = _1e31a4654_Trait((*(_82943_k)).ptr());;
				_1e6ec2968_pushReference(_self_, &(_83517_t));
			}
		}
		_match_end_1e6ebdd82:;
	};
}



inline void _1e31b3b6e_pushCycleError(_1e31b25a7_typeChecker* _self_, jule::Any _84029_def1, jule::Any _84040_def2, _227713453_StrBuilder* _84056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8429_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84225_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84225_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1e6ec7055:;
				{
					return (*((*(_84225_def)).cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1e6ec760a:;
				{
					return (*((*(_84225_def)).cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1e6ec71ed:;
				{
					return jule::Str();;
				}
			}
			_match_end_1e6ec7198:;
		};
	});;
	jule::Slice<jule::U8> _8529_buf = _22771d2c6_Buf(_84056_message);;
	jule::Str _8539_def1Ident = _8429_getIdent(&(_84029_def1));;
	jule::Str _8549_def2Ident = _8429_getIdent(&(_84040_def2));;
	jule::Str _8559_refersTo = _2277b225a_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8539_def1Ident, &__jule_any_type4),jule::Any(_8549_def2Ident, &__jule_any_type4)}));;
	_22771c02d_WriteStr(_84056_message, _2276ed680_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22771c02d_WriteStr(_84056_message, _8559_refersTo);
	_22771c2d6_WriteByte(_84056_message, '\n');
	_22771bc75_Write(_84056_message, _8529_buf);
}



inline jule::Bool _1e31b406a_checkCrossCycle(_1e31b25a7_typeChecker* _self_, jule::Any _86230_decl, _227713453_StrBuilder* _86246_message) {
	{
		auto &_match_expr{ _86230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e6eca311:;
			{
				jule::Ptr<_1e319e907_TypeAlias> _86513_ta = _86230_decl.cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86513_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6eca993:;
					if (it != expr_end) {
						jule::Any *_86620_d = it;
						{
							{
								
								if (((*(_86620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1e6ecb8c8:;
									{
										_1e31b3b6e_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								else if ((!(_1e31b406a_checkCrossCycle(_self_, (*(_86620_d)), _86246_message)))) {
									_case_begin_1e6ecb950:;
									{
										_1e31b3b6e_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								_match_end_1e6ecb7b8:;
							};
						}
						_iter_next_1e6eca993:;
						++it;
						goto _iter_begin_1e6eca993;
					}
					_iter_end_1e6eca993:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6eca377:;
			{
				jule::Ptr<_1e30450c7_Struct> _87713_s = _86230_decl.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87713_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6ecd07d:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> *_87820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87820_d))))) {
									_case_begin_1e6ecd9a7:;
									{
										_1e31b3b6e_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								else if ((!(_1e31b406a_checkCrossCycle(_self_, jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message)))) {
									_case_begin_1e6ecda2e:;
									{
										_1e31b3b6e_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								_match_end_1e6ecd897:;
							};
						}
						_iter_next_1e6ecd07d:;
						++it;
						goto _iter_begin_1e6ecd07d;
					}
					_iter_end_1e6ecd07d:;
				};
			}
		}
		_match_end_1e6eca2ab:;
	};
	return true;;
}



inline jule::Bool _1e31b4466_checkIllegalCycles(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _89638_ident, jule::Any _89665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6ed0987:;
			{
				if ((*(_89665_decl.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e6ed09ed:;
			{
				if ((*(_89665_decl.cast_ptr<_1e319e907_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1e6ed0932:;
	};
	if ((_89665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_227713453_StrBuilder _91913_message = static__22771371c_New(32LL);;
	if ((!(_1e31b406a_checkCrossCycle(_self_, _89665_decl, &(_91913_message))))) {
		jule::Str _92217_errMsg = _22771c825_Str(&_91913_message);;
		_22771ca23_Clear(&_91913_message);
		_1e31b3b6e_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89665_decl, &(_91913_message));
		_92217_errMsg+=_22771c825_Str(&_91913_message);
		_1e31b2ce4_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92217_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e6ed4d65:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6ed4dcb:;
			{
				{
					auto &_match_expr{ _89665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1e6ed5cde:;
						{
							jule::Ptr<_1e30450c7_Struct> _93821_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1e30450c7_Struct>> &__jule_push_dest = (*(_93821_s))._field_Depends; __jule_push_dest.push(_89665_decl.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1e6ed5250:;
				};
			}
		}
		_match_end_1e6ed4d10:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1e31a0243_Kind> _1e31b4862_fromTypeAlias(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _94633_decl, jule::Ptr<_1e319e907_TypeAlias>* _94660_ta) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94660_ta))))._field_Public, (*((*(_94660_ta))))._field_Token)))) {
		_1e31b2ce4_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94660_ta))))._field_Used=true;
	if (((*((*(_94633_decl))))._field_Generics.len() > 0LL)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6eda3a9:;
			if (it != expr_end) {
				jule::Ptr<_1e319e907_TypeAlias> _96320_bg = *it;
				{
					if (((_96320_bg == (*(_94660_ta))) || (((*((*((*(_94660_ta))))._field_Kind))._field_Kind != nullptr) && _1e31a0e03_Equal((*((*((*(_94660_ta))))._field_Kind))._field_Kind, (*((*(_96320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1e6eda3a9;
					};
				}
				_iter_next_1e6eda3a9:;
				++it;
				goto _iter_begin_1e6eda3a9;
			}
			_iter_end_1e6eda3a9:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6edb09c:;
			if (it != expr_end) {
				jule::Ptr<_1e319e907_TypeAlias> _97420_bg = *it;
				{
					if ((_97420_bg == (*(_94660_ta)))) {
						_1e31b2ce4_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e6eddd6e:;
						if (it != expr_end) {
							jule::Ptr<_1e319e907_TypeAlias> _97924_dg = *it;
							{
								if ((_97420_bg == _97924_dg)) {
									_1e31b2ce4_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1e6eddd6e:;
							++it;
							goto _iter_begin_1e6eddd6e;
						}
						_iter_end_1e6eddd6e:;
					};
				}
				_iter_next_1e6edb09c:;
				++it;
				goto _iter_begin_1e6edb09c;
			}
			_iter_end_1e6edb09c:;
		};
	};
	jule::Bool _98813_ok = _1e31b4466_checkIllegalCycles(_self_, _94633_decl, jule::Any((*(_94660_ta)), &__jule_any_type66));;
	if ((!(_98813_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98813_ok=_1e30eb9a8_checkTypeAliasDeclKind((*(_self_))._field_s, _94660_ta, (*(_self_))._field_lookup);
		if ((!(_98813_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94660_ta))); };
	};
	jule::Ptr<_1e31a06e9_TypeKind> _100713_tk = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Generic=(*((*(_94660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1e31b3751_pushReferenceByKind(_self_, &(_100713_tk));
	if ((*((*(_94660_ta))))._field_Binded) {
		(*(_100713_tk))._field_BindIdent=(*((*(_94660_ta))))._field_Ident;
	} else {
		(*(_100713_tk))._field_BindIdent=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1e31a0243_Kind>(_100713_tk, 19);;
}



inline jule::Ptr<_1e30709c6_Enum> _1e31b4c5d_fromEnum(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _102028_decl, jule::Ptr<_1e30709c6_Enum>* _102055_e) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102055_e))))._field_Public, (*((*(_102055_e))))._field_Token)))) {
		_1e31b2ce4_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102028_decl))))._field_Generics.len() > 0LL)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102055_e));;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e31b5159_fromTypeEnum(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _103232_decl, jule::Ptr<_1e30721d1_TypeEnum>* _103259_e) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103259_e))))._field_Public, (*((*(_103259_e))))._field_Token)))) {
		_1e31b2ce4_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103232_decl))))._field_Generics.len() > 0LL)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103259_e));;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e31b5555_fromTrait(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _104429_decl, jule::Ptr<_1e306d2cb_Trait>* _104456_t) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104456_t))))._field_Public, (*((*(_104456_t))))._field_Token)))) {
		_1e31b2ce4_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104429_decl))))._field_Generics.len() > 0LL)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1e6ec2968_pushReference(_self_, _104456_t);
	return (*(_104456_t));;
}



inline jule::Bool _1e31b5951_checkStructIns(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3047d55_StructIns>* _105738_ins, jule::Ptr<_20cb74604_Token>* _105760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1e310809c_precheckStructIns((*(_self_))._field_s, _105738_ins, (*(_105760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105738_ins))))._field_Generics.len() > 0LL)) {
		_1e3108ab4_checkStructInsOperators((*(_self_))._field_s, (*(_105738_ins)));
		_1e3108355_checkStructIns((*(_self_))._field_s, _105738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e31b5c09_appendUsedStructReference(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e30450c7_Struct>* _107849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e70015ce:;
			{
				jule::Ptr<_1e30450c7_Struct> _108417_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1e30450c7_Struct>(&__jule_any_type65);;
				if ((!(_1e3046a57_IsUses(_108417_refS.ptr(), (*(_107849_s)))))) {
					{ jule::Slice<jule::Ptr<_1e30450c7_Struct>> &__jule_push_dest = (*(_108417_refS))._field_Uses; __jule_push_dest.push((*(_107849_s))); };
				};
			}
		}
		_match_end_1e7001579:;
	};
}



inline jule::Ptr<_1e3047d55_StructIns> _1e31b6105_buildStructInstance(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _109143_decl, jule::Ptr<_1e30450c7_Struct>* _109170_s) {
	jule::Ptr<_1e31b15b7_referencer> _109313_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> _109513_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1e700412b:;
				{
					jule::Ptr<_1e30a2d8d_scopeChecker> _110221_sc = (*(_self_))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0);;
					jule::Ptr<_1e30a2d8d_scopeChecker> _110321_hard = _1e30a6215_getHardRoot(_110221_sc);;
					if ((((*((*(_110321_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Decl != (*(_109170_s))))) {
						goto _match_end_1e70040c6;
					};
					jule::I64 _110717_n = ((*((*(_110321_hard))._field_owner))._field_Generics.len() + (*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110321_hard))._field_table))._field_TypeAliases.slice(0LL, _110717_n);
				}
			}
			_match_end_1e70040c6:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1e31c0230_Lookup> _111713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1e3047d55_StructIns> _112113_ins = _1e3045539_instance((*(_109170_s)));;
	(*(_112113_ins))._field_Generics=jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>>::alloc(0LL, (*((*(_109143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7008729:;
		if (it != expr_end) {
			jule::Ptr<_1e302446e_TypeDecl> _112321_g = *it;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _112417_kind = _1e31b9911_build(_self_, &((*(_112321_g))._field_Kind));;
				if ((_112417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1e319dd13_InsGeneric>> &__jule_push_dest = (*(_112113_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1e319dd13_InsGeneric>(_1e319dd13_InsGeneric{._field_Kind=_112417_kind, })); };
			}
			_iter_next_1e7008729:;
			++it;
			goto _iter_begin_1e7008729;
		}
		_iter_end_1e7008729:;
	};
	(*(_self_))._field_lookup=_111713_lookup;
	(*(_self_))._field_bannedGenerics=_109513_bannedGenerics;
	(*(_self_))._field_referencer=_109313_referencer;
	return _112113_ins;;
}



inline jule::Ptr<_1e3047d55_StructIns> _1e31b6501_fromStruct(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _113934_decl, jule::Ptr<_1e30450c7_Struct>* _113961_s) {
	if ((!(_1e30e0cee_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_113961_s))))._field_Public, (*((*(_113961_s))))._field_Token)))) {
		_1e31b2ce4_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_113934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_113934_decl))))._field_Generics.len() > 0LL)) {
			_1e31b2ce4_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1e3047d55_StructIns>(_1e3047d55_StructIns{._field_Decl=(*(_113961_s)), });;
	};
	jule::Bool _115713_ok = _1e31b4466_checkIllegalCycles(_self_, _113934_decl, jule::Any((*(_113961_s)), &__jule_any_type65));;
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	_1e31b5c09_appendUsedStructReference(_self_, _113961_s);
	jule::Ptr<_1e3047d55_StructIns> _116313_ins = _1e31b6105_buildStructInstance(_self_, _113934_decl, _113961_s);;
	if ((_116313_ins == nullptr)) {
		return nullptr;;
	};
	_115713_ok=_1e30e1abe_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116313_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116313_ins))._field_Generics.len()), (*((*(_113934_decl))))._field_Token);
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1e3047d55_StructIns> _117313_existInstance = _1e3045847_appendInstance((*(_113961_s)).ptr(), &(_116313_ins));;
	if ((_117313_existInstance != nullptr)) {
		if ((!(_1e30e9ba4_checkConstraintsStruct((*(_self_))._field_s, &(_116313_ins), &((*((*(_113934_decl))))._field_Token), _117313_existInstance)))) {
			return nullptr;;
		};
		_1e6ec0229_pushReference(_self_, &(_117313_existInstance));
		return _117313_existInstance;;
	};
	if ((!(_1e31b5951_checkStructIns(_self_, &(_116313_ins), &((*((*(_113934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1e6ec0229_pushReference(_self_, &(_116313_ins));
	return _116313_ins;;
}



inline jule::Trait<_1e31a0243_Kind> _1e31b6842_getDef(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl>* _119730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7012de8:;
		if (it != expr_end) {
			jule::Ptr<_1e3031679_GenericDecl> _119816_g = *it;
			{
				if (((*(_119816_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					return jule::Trait<_1e31a0243_Kind>(_1e31bc617_buildPrimType((*(_119816_g))._field_Ident), 20);;
				};
			}
			_iter_next_1e7012de8:;
			++it;
			goto _iter_begin_1e7012de8;
		}
		_iter_end_1e7012de8:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7014207:;
		if (it != expr_end) {
			jule::Ptr<_1e319e907_TypeAlias> _120421_g = *it;
			{
				if (((*(_120421_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					if (((*((*(_119730_decl))))._field_Generics.len() > 0LL)) {
						_1e31b2ce4_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1e3047d55_StructIns> _121021_st = _1e31a43bd_Struct((*((*(_120421_g))._field_Kind))._field_Kind.ptr());;
					if ((_121021_st != nullptr)) {
						jule::Bool _121221_ok = _1e31b4466_checkIllegalCycles(_self_, _119730_decl, jule::Any((*(_121021_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121221_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1e7014207:;
			++it;
			goto _iter_begin_1e7014207;
		}
		_iter_end_1e7014207:;
	};
	if ((!((*((*(_119730_decl))))._field_Binded))) {
		jule::Ptr<_1e30709c6_Enum> _122217_e = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bec8a_FindEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122217_e != nullptr)) {
			return jule::Trait<_1e31a0243_Kind>(_1e31b4c5d_fromEnum(_self_, _119730_decl, &(_122217_e)), 3);;
		};
		jule::Ptr<_1e30721d1_TypeEnum> _122717_te = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31c00cb_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122717_te != nullptr)) {
			return jule::Trait<_1e31a0243_Kind>(_1e31b5159_fromTypeEnum(_self_, _119730_decl, &(_122717_te)), 4);;
		};
		jule::Ptr<_1e306d2cb_Trait> _123217_t = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31be949_FindTrait((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_123217_t != nullptr)) {
			return jule::Trait<_1e31a0243_Kind>(_1e31b5555_fromTrait(_self_, _119730_decl, &(_123217_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1e31b2ce4_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e30450c7_Struct> _124113_s = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31be20c_FindStruct((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if ((_124113_s != nullptr)) {
		return jule::Trait<_1e31a0243_Kind>(_1e31b6501_fromStruct(_self_, _119730_decl, &(_124113_s)), 0);;
	};
	jule::Ptr<_1e319e907_TypeAlias> _124613_ta = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bdd11_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if (((_124613_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124613_ta=_1e3285735_findBuiltinTypeAlias((*((*(_119730_decl))))._field_Ident);
	};
	if ((_124613_ta != nullptr)) {
		return _1e31b4862_fromTypeAlias(_self_, _119730_decl, &(_124613_ta));;
	};
	_1e31b2ce4_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1e31a0243_Kind> _1e31b6b83_buildIdent(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024a79_IdentTypeDecl> _125833_decl) {
	return _1e31b6842_getDef(_self_, &(_125833_decl));;
}



inline jule::Trait<_1e31a0243_Kind> _1e31b6ec4_buildSubIdent(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3024d76_SubIdentTypeDecl> _126236_decl) {
	jule::Trait<_1e31a0243_Kind> _126313_ident = _1e31b6b83_buildIdent(_self_, (*(_126236_decl))._field_Idents[0LL]);;
	if ((_126313_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126313_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1e702090b:;
			{
				goto _match_end_1e7020378;
			}
		}
		else {
			_case_begin_1e70203cd:;
			{
				_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e7020378:;
	};
	jule::Ptr<_1e30721d1_TypeEnum> _127413_t = _126313_ident.cast_ptr<_1e30721d1_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> _127513_idents = (*(_126236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127513_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7021698:;
		if (it != expr_end) {
			jule::I64 _127613_i = it - expr->begin();
			jule::Ptr<_1e3024a79_IdentTypeDecl> _127616_id = *it;
			{
				jule::Ptr<_1e3071b09_TypeEnumItem> _127717_item = _1e3072c92_FindItem(_127413_t.ptr(), (*(_127616_id))._field_Ident);;
				if ((_127717_item == nullptr)) {
					_1e31b2ce4_pushErr(_self_, (*(_127616_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127413_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127513_idents.len() - _127613_i) == 1LL)) {
					_1e31b3751_pushReferenceByKind(_self_, &((*((*(_127717_item))._field_Kind))._field_Kind));
					return jule::Trait<_1e31a0243_Kind>((*((*(_127717_item))._field_Kind))._field_Kind, 19);;
				};
				_127413_t=_1e31a3884_TypeEnum((*((*(_127717_item))._field_Kind))._field_Kind.ptr());
				if ((_127413_t == nullptr)) {
					_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1e7021698:;
			++it;
			_127613_i++;
			goto _iter_begin_1e7021698;
		}
		_iter_end_1e7021698:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e31abcee_Sptr> _1e31b7315_buildSptrFromType(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _129641_elem) {
	{
		
		if (((*(_129641_elem)) == nullptr)) {
			_case_begin_1e7025bdb:;
			{
				return nullptr;;
			}
		}
		else if ((_1e31a43bd_Struct((*(_129641_elem)).ptr()) != nullptr)) {
			_case_begin_1e7025c63:;
			{
				jule::Ptr<_1e3047d55_StructIns> _130213_s = _1e31a43bd_Struct((*(_129641_elem)).ptr());;
				if ((((*(_130213_s))._field_Decl != nullptr) && (*((*(_130213_s))._field_Decl))._field_Binded)) {
					_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1e31a3b1a_Arr((*(_129641_elem)).ptr()) != nullptr) && (*(_1e31a3b1a_Arr((*(_129641_elem)).ptr())))._field_Auto)) {
			_case_begin_1e7025cda:;
			{
				_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e7021ec3:;
	};
	return jule::new_ptr<_1e31abcee_Sptr>(_1e31abcee_Sptr{._field_Elem=(*(_129641_elem))});;
}



inline jule::Ptr<_1e31abcee_Sptr> _1e31b7656_buildSptr(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3025519_SptrTypeDecl> _131632_decl) {
	jule::Bool _13179_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13179_cycleRisk;
	});;
	jule::Ptr<_1e31a06e9_TypeKind> _132113_elem = _1e31b9c52_checkDecl(_self_, &((*(_131632_decl))._field_Elem));;
	return _1e31b7315_buildSptrFromType(_self_, &(_132113_elem));;
}



inline jule::Ptr<_1e31b05b6_Ptr> _1e31b7997_buildPtrFromType(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _132540_elem) {
	{
		
		if (((*(_132540_elem)) == nullptr)) {
			_case_begin_1e702a905:;
			{
				return nullptr;;
			}
		}
		else if (((_1e31a3b1a_Arr((*(_132540_elem)).ptr()) != nullptr) && (*(_1e31a3b1a_Arr((*(_132540_elem)).ptr())))._field_Auto)) {
			_case_begin_1e702a97c:;
			{
				_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1e31b05b6_Ptr>();;
			}
		}
		_match_end_1e702a7e5:;
	};
	return jule::new_ptr<_1e31b05b6_Ptr>(_1e31b05b6_Ptr{._field_Elem=(*(_132540_elem))});;
}



inline jule::Ptr<_1e31b05b6_Ptr> _1e31b7cd8_buildPtr(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3025e98_PtrTypeDecl> _134031_decl) {
	jule::Bool _13419_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13419_cycleRisk;
	});;
	jule::Ptr<_1e31a06e9_TypeKind> _134517_elem = nullptr;;
	if ((!(_1e302630b_IsUnsafe(_134031_decl.ptr())))) {
		_134517_elem=_1e31b9c52_checkDecl(_self_, &((*(_134031_decl))._field_Elem));
		return _1e31b7997_buildPtrFromType(_self_, &(_134517_elem));;
	};
	return jule::new_ptr<_1e31b05b6_Ptr>(_1e31b05b6_Ptr{._field_Elem=_134517_elem});;
}



inline jule::Ptr<_1e31ac7c2_Slc> _1e31b8129_buildSlc(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e302589e_SlcTypeDecl> _135731_decl) {
	jule::Bool _13589_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13589_cycleRisk;
	});;
	jule::Ptr<_1e31a06e9_TypeKind> _136213_elem = _1e31b9c52_checkDecl(_self_, &((*(_135731_decl))._field_Elem));;
	{
		
		if ((_136213_elem == nullptr)) {
			_case_begin_1e70305ec:;
			{
				return nullptr;;
			}
		}
		else if (((_1e31a3b1a_Arr(_136213_elem.ptr()) != nullptr) && (*(_1e31a3b1a_Arr(_136213_elem.ptr())))._field_Auto)) {
			_case_begin_1e7030674:;
			{
				_1e31b2ce4_pushErr(_self_, (*((*(_135731_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e7030542:;
	};
	return jule::new_ptr<_1e31ac7c2_Slc>(_1e31ac7c2_Slc{._field_Elem=_136213_elem});;
}



inline jule::Ptr<_1e31aeae3_Arr> _1e31b846a_buildArr(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e302673a_ArrTypeDecl> _137831_decl) {
	jule::I64 _137913_n = 0LL;;
	if ((!(_1e3026a9d_AutoSized(_137831_decl.ptr())))) {
		jule::Ptr<_1e316ee05_Data> _138217_size = _1e318ed59_evalExpr(_1e30e7a3c_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137831_decl))._field_Size);;
		if ((_138217_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1e31707c9_IsConst(_138217_size.ptr())))) {
			_1e31b2ce4_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1e31a2d4a_Prim((*(_138217_size))._field_Kind.ptr()) == nullptr) || (!(_22893ce73_IsInt((*(_1e31a2d4a_Prim((*(_138217_size))._field_Kind.ptr())))._field_Kind))))) {
			_1e31b2ce4_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_137913_n=static_cast<jule::I64>(static_cast<jule::I64>(_2289411eb_AsI64((*(_138217_size))._field_Constant.ptr())));
		if ((_137913_n < 0LL)) {
			_1e31b2ce4_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140017_max = _228936d90_MaxI(jule::Str::lit("int", 3));;
			if (((_22892ea8b_BitSize != 64LL) && (static_cast<jule::I64>(_137913_n) > _140017_max))) {
				_1e31b2ce4_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1e319c10d_constoa(&((*(_138217_size))._field_Constant)), &__jule_any_type4),jule::Any(_22892d529_FmtInt(_140017_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1e31a06e9_TypeKind> _140913_elem = _1e31b9c52_checkDecl(_self_, &((*(_137831_decl))._field_Elem));;
	{
		
		if ((_140913_elem == nullptr)) {
			_case_begin_1e7039a24:;
			{
				return nullptr;;
			}
		}
		else if (((_1e31a3b1a_Arr(_140913_elem.ptr()) != nullptr) && (*(_1e31a3b1a_Arr(_140913_elem.ptr())))._field_Auto)) {
			_case_begin_1e7039a9b:;
			{
				_1e31b2ce4_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e703999c:;
	};
	return jule::new_ptr<_1e31aeae3_Arr>(_1e31aeae3_Arr{._field_Auto=_1e3026a9d_AutoSized(_137831_decl.ptr()), ._field_N=_137913_n, ._field_Elem=_140913_elem});;
}



inline jule::Ptr<_1e31ade66_Map> _1e31b87ab_buildMap(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3026e88_MapTypeDecl> _142731_decl) {
	jule::Bool _14289_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14289_cycleRisk;
	});;
	jule::Ptr<_1e31a06e9_TypeKind> _143213_key = _1e31b9c52_checkDecl(_self_, &((*(_142731_decl))._field_Key));;
	if ((_143213_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e31a06e9_TypeKind> _143713_val = _1e31b9c52_checkDecl(_self_, &((*(_142731_decl))._field_Val));;
	if ((_143713_val == nullptr)) {
		return nullptr;;
	};
	if ((_1e31a35ed_Enum(_143713_val.ptr()) != nullptr)) {
		_1e31b2ce4_pushErr(_self_, (*((*(_142731_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1e31ade66_Map>(_1e31ade66_Map{._field_Key=_143213_key, ._field_Val=_143713_val});;
}



inline jule::Ptr<_1e31ad3b6_Tuple> _1e31b8aec_buildTuple(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e3025b9b_TupleTypeDecl> _145133_decl) {
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _145213_types = jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>>::alloc(0LL, (*(_145133_decl))._field_Types.len());;
	{
		auto expr = &((*(_145133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7040431:;
		if (it != expr_end) {
			jule::Ptr<_1e302446e_TypeDecl> _145321_t = *it;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _145417_kind = _1e31b9c52_checkDecl(_self_, &(_145321_t));;
				if ((_145417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> &__jule_push_dest = _145213_types; __jule_push_dest.push(_145417_kind); };
			}
			_iter_next_1e7040431:;
			++it;
			goto _iter_begin_1e7040431;
		}
		_iter_end_1e7040431:;
	};
	return jule::new_ptr<_1e31ad3b6_Tuple>(_1e31ad3b6_Tuple{._field_Types=_145213_types});;
}



inline jule::Bool _1e31b8e3d_checkFuncTypes(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e305ce36_FnIns>* _146438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7041d6c:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> _146521_p = *it;
			{
				(*(_146521_p))._field_Kind=_1e31b9911_build(_self_, &((*((*((*((*(_146521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1e30ea358_checkFnParamKind((*(_self_))._field_s, &(_146521_p));
			}
			_iter_next_1e7041d6c:;
			++it;
			goto _iter_begin_1e7041d6c;
		}
		_iter_end_1e7041d6c:;
	};
	if ((!(_1e305a4a5_IsVoid((*((*(_146438_f))))._field_Decl.ptr())))) {
		(*((*(_146438_f))))._field_Result=_1e31b9911_build(_self_, &((*((*((*((*((*((*(_146438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e31b927e_buildFunc(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e303612e_FnDecl> _148232_decl) {
	jule::Bool _14839_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14839_cycleRisk;
	});;
	if (((*(_148232_decl))._field_Generics.len() > 0LL)) {
		_1e31b2ce4_pushErr(_self_, (*(_148232_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e305a032_Fn> _149213_f = _1e3064602_buildFunc(_148232_decl);;
	jule::I64 _14949_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1e310464d_checkAnonFuncDecl((*(_self_))._field_s, &(_149213_f));
	if ((_14949_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _150013_ins = _1e305b50b_instanceForce(_149213_f);;
	(*(_150013_ins))._field_Anon=true;
	jule::Bool _15039_ok = _1e31b8e3d_checkFuncTypes(_self_, &(_150013_ins));;
	if ((!(_15039_ok))) {
		return nullptr;;
	};
	return _150013_ins;;
}



inline jule::Trait<_1e31a0243_Kind> _1e31b95c0_buildByNamespace(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e302521c_NamespaceTypeDecl> _151139_decl) {
	jule::Str _15129_path = _1e31bc271_buildLinkPathByTokens(&((*(_151139_decl))._field_Idents));;
	jule::Ptr<_1e30bbeb7_ImportInfo> _151313_imp = _1e31c0230_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e31bd519_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>([=](jule::Ptr<_1e30bbeb7_ImportInfo> _151349_imp) mutable -> jule::Bool {
		if ((((*(_151139_decl))._field_Idents.len() == 1LL) && ((*(_151349_imp))._field_Alias == _15129_path))) {
			return true;;
		};
		return (((*(_151349_imp))._field_LinkPath == _15129_path) && _1e30bead0_isAccessibleViaSelection(_151349_imp.ptr()));;
	}));;
	jule::Str _15209_selfIdent = jule::Str::lit("self", 4);;
	if (((_151313_imp == nullptr) || (!(_1e30be508_isLookupable(_151313_imp.ptr(), &(_15209_selfIdent)))))) {
		_1e31b2ce4_pushErr(_self_, (*(_151139_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15129_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1e31b31e0_disallowBuiltin(_self_);
	jule::Trait<_1e31c0230_Lookup> _152713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1e31c0230_Lookup>(_151313_imp, 1);
	jule::Ptr<_1e31a06e9_TypeKind> _152913_kind = _1e31b9c52_checkDecl(_self_, &((*(_151139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152713_lookup;
	_1e31b2ee2_allowBuiltin(_self_);
	return jule::Trait<_1e31a0243_Kind>(_152913_kind, 19);;
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e31b9911_build(_1e31b25a7_typeChecker* _self_, jule::Any* _153529_declKind) {
	jule::Trait<_1e31a0243_Kind> _153617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1e705119a:;
			{
				jule::Trait<_1e31a0243_Kind> _153917_t = _1e31b6b83_buildIdent(_self_, (*(_153529_declKind)).cast_ptr<_1e3024a79_IdentTypeDecl>(&__jule_any_type20));;
				if ((_153917_t != nullptr)) {
					_153617_kind=_153917_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e7050562:;
			{
				jule::Trait<_1e31a0243_Kind> _154417_t = _1e31b6ec4_buildSubIdent(_self_, (*(_153529_declKind)).cast_ptr<_1e3024d76_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154417_t != nullptr)) {
					_153617_kind=_154417_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1e7050760:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31abcee_Sptr> _155017_t = _1e31b7656_buildSptr(_self_, (*(_153529_declKind)).cast_ptr<_1e3025519_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155017_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_155017_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e70507c6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31b05b6_Ptr> _155617_t = _1e31b7cd8_buildPtr(_self_, (*(_153529_declKind)).cast_ptr<_1e3025e98_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_155617_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e705083c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31ac7c2_Slc> _156217_t = _1e31b8129_buildSlc(_self_, (*(_153529_declKind)).cast_ptr<_1e302589e_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_156217_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1e70508a3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31aeae3_Arr> _156817_t = _1e31b846a_buildArr(_self_, (*(_153529_declKind)).cast_ptr<_1e302673a_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_156817_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e7051277:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31ade66_Map> _157417_t = _1e31b87ab_buildMap(_self_, (*(_153529_declKind)).cast_ptr<_1e3026e88_MapTypeDecl>(&__jule_any_type73));;
				if ((_157417_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_157417_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e70512dd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e31ad3b6_Tuple> _158017_t = _1e31b8aec_buildTuple(_self_, (*(_153529_declKind)).cast_ptr<_1e3025b9b_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158017_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_158017_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e7051354:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e305ce36_FnIns> _158617_t = _1e31b927e_buildFunc(_self_, (*(_153529_declKind)).cast_ptr<_1e303612e_FnDecl>(&__jule_any_type14));;
				if ((_158617_t != nullptr)) {
					_153617_kind=jule::Trait<_1e31a0243_Kind>(_158617_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1e70513ba:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1e31a0243_Kind> _159217_t = _1e31b95c0_buildByNamespace(_self_, (*(_153529_declKind)).cast_ptr<_1e302521c_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159217_t != nullptr)) {
					_153617_kind=_159217_t;
				};
			}
		}
		else {
			_case_begin_1e70506e9:;
			{
				_1e31b2ce4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e7050694:;
	};
	if ((_153617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153617_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1e705ca36:;
			{
				return _153617_kind.cast_ptr<_1e31a06e9_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1e705a726:;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _160717_tk = jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=_153617_kind});;
				{
					auto &_match_expr{ _153617_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1e705b408:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160717_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1e705b480:;
						{
							jule::Ptr<_1e3047d55_StructIns> _161417_s = _153617_kind.cast_ptr<_1e3047d55_StructIns>(0);;
							if ((((*(_161417_s))._field_Decl != nullptr) && (*((*(_161417_s))._field_Decl))._field_Binded)) {
								(*(_160717_tk))._field_BindIdent=(*((*(_161417_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1e705b392:;
				};
				return _160717_tk;;
			}
		}
		_match_end_1e7051431:;
	};
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e31b9c52_checkDecl(_1e31b25a7_typeChecker* _self_, jule::Ptr<_1e302446e_TypeDecl>* _162333_decl) {
	jule::Ptr<_20cb74604_Token> _162513_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162333_decl))))._field_Token;
	jule::Ptr<_1e31a06e9_TypeKind> _162813_kind = _1e31b9911_build(_self_, &((*((*(_162333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162513_errorToken;
	return _162813_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e31b25a7_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e31ba69d_prim(jule::Str* _165021_ident, jule::Ptr<_1e31a82c3_Prim> _165033_t) {
	return ((*(_165033_t))._field_Kind == (*(_165021_ident)));;
}



inline jule::Bool static__1e31baa22_exist(jule::Str* _165422_ident, jule::Ptr<_1e31a06e9_TypeKind>* _165439_k) {
	{
		
		if ((_1e31a2d4a_Prim((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062772:;
			{
				return static__1e31ba69d_prim(_165422_ident, _1e31a2d4a_Prim((*(_165439_k)).ptr()));;
			}
		}
		else if ((_1e31a30d1_Sptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e70627e9:;
			{
				jule::Ptr<_1e31abcee_Sptr> _165917_sptr = _1e31a30d1_Sptr((*(_165439_k)).ptr());;
				return static__1e31baa22_exist(_165422_ident, &((*(_165917_sptr))._field_Elem));;
			}
		}
		else if ((_1e31a3367_Ptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062a6e:;
			{
				jule::Ptr<_1e31b05b6_Ptr> _166217_ptr = _1e31a3367_Ptr((*(_165439_k)).ptr());;
				return static__1e31baa22_exist(_165422_ident, &((*(_166217_ptr))._field_Elem));;
			}
		}
		else if ((_1e31a3da1_Slc((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062ad5:;
			{
				jule::Ptr<_1e31ac7c2_Slc> _166517_slc = _1e31a3da1_Slc((*(_165439_k)).ptr());;
				return static__1e31baa22_exist(_165422_ident, &((*(_166517_slc))._field_Elem));;
			}
		}
		else if ((_1e31a3b1a_Arr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062b4b:;
			{
				jule::Ptr<_1e31aeae3_Arr> _166817_arr = _1e31a3b1a_Arr((*(_165439_k)).ptr());;
				return static__1e31baa22_exist(_165422_ident, &((*(_166817_arr))._field_Elem));;
			}
		}
		else if ((_1e31a48da_Map((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062bc3:;
			{
				jule::Ptr<_1e31ade66_Map> _167117_m = _1e31a48da_Map((*(_165439_k)).ptr());;
				return (static__1e31baa22_exist(_165422_ident, &((*(_167117_m))._field_Key)) || static__1e31baa22_exist(_165422_ident, &((*(_167117_m))._field_Val)));;
			}
		}
		else if ((_1e31a43bd_Struct((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062c4a:;
			{
				jule::Ptr<_1e3047d55_StructIns> _167517_s = _1e31a43bd_Struct((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_167517_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7068bb8:;
					if (it != expr_end) {
						jule::Ptr<_1e319dd13_InsGeneric> _167625_g = *it;
						{
							if (static__1e31baa22_exist(_165422_ident, &((*(_167625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1e7068bb8:;
						++it;
						goto _iter_begin_1e7068bb8;
					}
					_iter_end_1e7068bb8:;
				};
				return false;;
			}
		}
		else if ((_1e31a4137_Fn((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062d5a:;
			{
				jule::Ptr<_1e305ce36_FnIns> _168317_f = _1e31a4137_Fn((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_168317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7069955:;
					if (it != expr_end) {
						jule::Ptr<_1e305be8a_ParamIns> _168425_p = *it;
						{
							if (_1e3058b79_IsSelf((*(_168425_p))._field_Decl.ptr())) {
								goto _iter_next_1e7069955;
							};
							if (static__1e31baa22_exist(_165422_ident, &((*(_168425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1e7069955:;
						++it;
						goto _iter_begin_1e7069955;
					}
					_iter_end_1e7069955:;
				};
				if (((*(_168317_f))._field_Result != nullptr)) {
					return static__1e31baa22_exist(_165422_ident, &((*(_168317_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1e31a4b71_Tup((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1e7062dc1:;
			{
				jule::Ptr<_1e31ad3b6_Tuple> _169717_tup = _1e31a4b71_Tup((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_169717_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e706a659:;
					if (it != expr_end) {
						jule::Ptr<_1e31a06e9_TypeKind> _169825_t = *it;
						{
							if (static__1e31baa22_exist(_165422_ident, &(_169825_t))) {
								return true;;
							};
						}
						_iter_next_1e706a659:;
						++it;
						goto _iter_begin_1e706a659;
					}
					_iter_end_1e706a659:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1e706262e:;
			{
				return false;;
			}
		}
		_match_end_1e7062574:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e31ba23b_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b1be01_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b65664_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e3b66665_stop(_1e3b66005_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1e3b668eb_stopped(_1e3b66005_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1e3b66b82_finished(_1e3b66005_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1e3b66e18_isLastSt(_1e3b66005_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1e3b6727b_pushErr(_1e3b66005_scopeParser* _self_, jule::Ptr<_20cb74604_Token> _18926_token, jule::Str _18941_fmt) {
	_1e3b848b4_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1e3b675de_pushSuggestion(_1e3b66005_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1e3b84c27_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1e3b67897_insertAsNext(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1e3b65664_stmt>(_1e3b65664_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1e3b65664_stmt> _1e3b67b2d_next(_1e3b66005_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1e3034490_ScopeTree> _1e3b68029_buildScope(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _20834_tokens, jule::Ptr<_20cb74604_Token> _20856_end) {
	jule::Ptr<_1e3034490_ScopeTree> _20913_s = _1e3b643dd_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1e3b66005_scopeParser _21213_ssp = _1e3b66005_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1e3b72a5b_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1e303720c_VarDecl> _1e3b6836a_buildVarSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _21934_tokens) {
	jule::Ptr<_1e303720c_VarDecl> _22013_v = _1e3b87741_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1e30375d6_RetSt> _1e3b686ab_buildRetSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _22533_tokens) {
	jule::Ptr<_1e30375d6_RetSt> _22613_st = jule::new_ptr<_1e30375d6_RetSt>(_1e30375d6_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1e3037c79_Iter> _1e3b689ec_buildWhileNextIter(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3b65664_stmt>* _23642_s) {
	jule::Ptr<_1e3037c79_Iter> _23713_it = jule::new_ptr<_1e3037c79_Iter>(_1e3037c79_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1e30385a4_WhileKind> _24113_kind = jule::new_ptr<_1e30385a4_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1e3b66e18_isLastSt(_self_)) {
		_1e3b6727b_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1e3b67b2d_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _25313_stTokens = _1e3b7e3c5_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1e3b65664_stmt> _25517_stmt = jule::new_ptr<_1e3b65664_stmt>(_1e3b65664_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1e3b726e8_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _26413_blockTokens = _1e3b825b5_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1e3b66665_stop(_self_);
		_1e3b6727b_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1e3b6727b_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1e3b68029_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1e30385a4_WhileKind> _1e3b68d3d_buildWhileIterKind(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _28142_tokens) {
	return jule::new_ptr<_1e30385a4_WhileKind>(_1e30385a4_WhileKind{._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b6917e_getRangeKindKeysTokens(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _28813_vars;;
	jule::Slice<_2277b1ce8_Log> _28819_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1e303720c_VarDecl> _1e3b694c0_buildRangeKindKey(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e303720c_VarDecl> _29713_key = jule::new_ptr<_1e303720c_VarDecl>(_1e303720c_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1e3b6727b_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1e3b6727b_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b6727b_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _1e3b69811_buildRangeKindKeys(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e723d673:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1e303720c_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1e3b694c0_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1e723d673:;
			++it;
			goto _iter_begin_1e723d673;
		}
		_iter_end_1e723d673:;
	};
	return _31917_keys;;
}



inline void _1e3b69b74_setupRangeKindKeysPlain(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3038eab_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_20cb74604_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _32713_keyTokens = _1e3b6917e_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1e3b6727b_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _33413_keys = _1e3b69811_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1e3b69ed7_setupRangeKindKeysExplicit(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3038eab_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_20cb74604_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _34313_rang = _1e3b825b5_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1e3b6727b_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1e3b69b74_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1e3b6a34a_setupRangeKindKeys(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3038eab_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_20cb74604_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1e3b69ed7_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1e3b69b74_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1e3038eab_RangeKind> _1e3b6a801_buildRangeIterKind(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_20cb74604_Token>>* _35914_exprTokens, jule::Ptr<_20cb74604_Token>* _35941_inToken) {
	jule::Ptr<_1e3038eab_RangeKind> _36013_rng = jule::new_ptr<_1e3038eab_RangeKind>(_1e3038eab_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1e3b6727b_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*(_36013_rng))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1e3b6a34a_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1e3b6abec_buildCommonIterKind(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _37443_tokens, jule::Ptr<_20cb74604_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e724743a:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e724857e:;
						{
							(_37513_braceN)++;
							goto _iter_next_1e724743a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e7248606:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1e72484b3:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1e724743a;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1e7248194:;
						{
							jule::Slice<jule::Ptr<_20cb74604_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_20cb74604_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1e3b6a801_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1e7249a69:;
				};
			}
			_iter_next_1e724743a:;
			++it;
			_37614_i++;
			goto _iter_begin_1e724743a;
		}
		_iter_end_1e724743a:;
	};
	return jule::Any(_1e3b68d3d_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1e3037c79_Iter> _1e3b6b03d_buildCommonIter(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _40138_tokens) {
	jule::Ptr<_1e3037c79_Iter> _40213_it = jule::new_ptr<_1e3037c79_Iter>(_1e3037c79_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1e3b66665_stop(_self_);
		_1e3b6727b_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _41213_exprTokens = _1e3b7e3c5_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*(_40213_it))._field_Kind=_1e3b6abec_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*(_40213_it))._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _41713_scopeTokens = _1e3b825b5_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1e3b66665_stop(_self_);
		_1e3b6727b_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1e3b6727b_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40213_it))._field_Scope=_1e3b68029_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1e3037c79_Iter> _1e3b6b37e_buildIterSt(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3b65664_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1e3b689ec_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1e3b6b03d_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1e3039385_BreakSt> _1e3b6b6c0_buildBreakSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _43836_tokens) {
	jule::Ptr<_1e3039385_BreakSt> _43913_brk = jule::new_ptr<_1e3039385_BreakSt>(_1e3039385_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e3b6727b_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1e3b675de_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1e3b6727b_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1e303975e_ContSt> _1e3b6ba11_buildContSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _45635_tokens) {
	jule::Ptr<_1e303975e_ContSt> _45713_cont = jule::new_ptr<_1e303975e_ContSt>(_1e303975e_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e3b6727b_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1e3b675de_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1e3b6727b_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1e3039c15_If> _1e3b6bd52_buildIf(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _47431_tokens) {
	jule::Ptr<_1e3039c15_If> _47513_model = jule::new_ptr<_1e3039c15_If>(_1e3039c15_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _47913_exprTokens = _1e3b7e3c5_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1e3b6727b_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=static_cast<jule::I64>(_47913_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _48613_scopeTokens = _1e3b825b5_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1e3b66665_stop(_self_);
		_1e3b6727b_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb74604_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1e3b6727b_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47513_model))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*(_47513_model))._field_Scope=_1e3b68029_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1e303a0de_Else> _1e3b6c193_buildElse(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _50733_tokens) {
	jule::Ptr<_1e303a0de_Else> _50813_els = jule::new_ptr<_1e303a0de_Else>(_1e303a0de_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _51313_scopeTokens = _1e3b825b5_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1e3b6727b_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1e3b66665_stop(_self_);
			_1e3b6727b_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1e3b6727b_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1e3b68029_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1e303a595_Conditional> _1e3b6c4d4_buildIfElseChain(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _53139_tokens) {
	jule::Ptr<_1e303a595_Conditional> _53213_chain = jule::new_ptr<_1e303a595_Conditional>(_1e303a595_Conditional{._field_Head=_1e3b6bd52_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1e72628b7;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1e3039c15_If> _54421_elif = _1e3b6bd52_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1e3039c15_If>> &__jule_push_dest = (*(_53213_chain))._field_Tail; __jule_push_dest.push(_54421_elif); };
				goto _iter_next_1e72628b7;
			};
			(*(_53213_chain))._field_Default=_1e3b6c193_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1e72628b7;
		}
	_iter_next_1e72628b7:;
	}
	_iter_end_1e72628b7:;;
	return _53213_chain;;
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b6c825_buildCoCallSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _55436_tokens) {
	jule::Ptr<_20cb74604_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1e30287a3_Expr> _55713_e = _1e3b85068_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1e7266899:;
			{
				(*((*(_55713_e))._field_Kind.cast_ptr<_1e302c4cc_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1e7266e1b:;
			{
				_1e3b6727b_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1e7266db6:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1e3031e2c_GotoSt> _1e3b6cb66_buildGotoSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _57035_tokens) {
	jule::Ptr<_1e3031e2c_GotoSt> _57113_gt = jule::new_ptr<_1e3031e2c_GotoSt>(_1e3031e2c_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1e3b6727b_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1e3b6727b_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_20cb74604_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b6727b_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1e3032229_FallSt> _1e3b6cea7_buildFallSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _59035_tokens) {
	jule::Ptr<_1e3032229_FallSt> _59113_fll = jule::new_ptr<_1e3032229_FallSt>(_1e3032229_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1e3b6727b_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b6d2e8_buildTypeAliasSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _60040_tokens) {
	jule::Ptr<_1e303acd2_TypeAliasDecl> _60113_tad = _1e3b8680b_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1e3b6d7c1_pushCaseExpr(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _60635_tokens, jule::Ptr<_20cb74604_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1e30287a3_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1e302446e_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1e30287a3_Expr>(_1e30287a3_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60635_tokens.len())) {
				_1e3b6727b_pushErr(_self_, _60635_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1e3b85068_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b6dc77_buildCaseExprs(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _63038_tokens, jule::Ptr<_20cb74604_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1e30287a3_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63313_braceN = 0LL;;
	jule::I64 _63413_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72727c8:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1e7273c80:;
						{
							(_63313_braceN)++;
							goto _iter_next_1e72727c8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1e7273d07:;
						{
							(_63313_braceN)--;
							goto _iter_next_1e72727c8;
						}
					}
					_match_end_1e7273bb4:;
				};
				if ((_63313_braceN != 0LL)) {
					goto _iter_next_1e72727c8;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1e72751b0:;
						{
							jule::Slice<jule::Ptr<_20cb74604_Token>> _65417_exprTokens = (*(_63038_tokens)).slice(_63413_j, _63514_i);;
							if ((_65417_exprTokens.len() == 0LL)) {
								_1e3b6727b_pushErr(_self_, _63521_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1e3b6d7c1_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63413_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1e7275237:;
						{
							(*(_63061_colon))=_63521_tok;
							_1e3b6d7c1_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63514_i + 1LL));;
							return _63113_exprs;;
						}
					}
					_match_end_1e7274b93:;
				};
			}
			_iter_next_1e72727c8:;
			++it;
			_63514_i++;
			goto _iter_begin_1e72727c8;
		}
		_iter_end_1e72727c8:;
	};
	_1e3b6727b_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1e3034490_ScopeTree> _1e3b6e0b8_buildCaseScope(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _67338_tokens) {
	jule::I64 _67413_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67617_i = 0LL;;
			jule::Slice<jule::Ptr<_20cb74604_Token>> _67717_next;;
			({
				__jule_tuple_sx_20cb74604_Token__jule_tuple_bool __jule_assign_result = _1e3b65334_skipSt(&(_67617_i), (*(_67338_tokens)).slice(_67413_n));
				_67717_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67717_next.len() == 0LL)) {
				goto _iter_end_1e7278306;
			};
			jule::Ptr<_20cb74604_Token> _68113_tok = _67717_next[0LL];;
			if (((*(_68113_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67413_n+=_67617_i;
				goto _iter_next_1e7278306;
			};
			jule::Slice<jule::Ptr<_20cb74604_Token>> _68617_scopeTokens = (*(_67338_tokens)).slice(0LL, _67413_n);;
			jule::Ptr<_1e3034490_ScopeTree> _68717_scope = _1e3b68029_buildScope(_self_, &(_68617_scopeTokens), (*(_67338_tokens))[_67413_n]);;
			((*(_67338_tokens))).mut_slice(_67413_n);;
			return _68717_scope;;
		}
	_iter_next_1e7278306:;
	}
	_iter_end_1e7278306:;;
	jule::Ptr<_20cb74604_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1e3034490_ScopeTree> _69513_scope = _1e3b68029_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69513_scope;;
}



inline __jule_tuple_x_1e303b288_Case__jule_tuple_bool _1e3b6e4b4_buildCase(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1e303b288_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e303b288_Case> _70113_c = jule::new_ptr<_1e303b288_Case>(_1e303b288_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	((*(_70033_tokens))).mut_slice(1LL);;
	jule::Ptr<_20cb74604_Token> _70517_colon = nullptr;;
	(*(_70113_c))._field_Exprs=_1e3b6dc77_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70113_c))._field_Scope=_1e3b6e0b8_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70113_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70113_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _7119_isDefault = ((*(_70113_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70113_c;
	__jule_func_result.__jule_result_arg1 = _7119_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1e303b288_Case__jule_tuple_x_1e303a0de_Else _1e3b6e8b0_buildCases(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1e303b288_Case__jule_tuple_x_1e303a0de_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1e303b288_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1e303a0de_Else> _71717_def = nullptr;;
	jule::Bool _71813_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20cb74604_Token> _72017_tok = _71533_tokens[0LL];;
			if (((*(_72017_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1e3b6727b_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1e72806e8;
			};
			jule::Ptr<_1e303b288_Case> _72517_c;;
			jule::Bool _72520_isDefault = false;;
			({
				__jule_tuple_x_1e303b288_Case__jule_tuple_bool __jule_assign_result = _1e3b6e4b4_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72517_c = __jule_assign_result.__jule_result_arg0;
				_72520_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72520_isDefault) {
				(*(_72517_c))._field_Token=_72017_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1e303a0de_Else>(_1e303a0de_Else{._field_Token=(*(_72517_c))._field_Token, ._field_Scope=(*(_72517_c))._field_Scope});
				} else {
					_1e3b6727b_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71813_defNotLast=(_71813_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1e303b288_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72517_c); };
			};
		}
	_iter_next_1e72806e8:;
	}
	_iter_end_1e72806e8:;;
	if (_71813_defNotLast) {
		_1e3b6727b_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1e303b9c5_MatchCase> _1e3b6ec01_buildMatchCase(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _74937_tokens) {
	jule::Ptr<_1e303b9c5_MatchCase> _75013_m = jule::new_ptr<_1e303b9c5_MatchCase>(_1e303b9c5_MatchCase{._field_Token=_74937_tokens[0LL], });;
	(_74937_tokens).mut_slice(1LL);;
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_75013_m))._field_TypeMatch=true;
		(_74937_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _76013_exprTokens = _1e3b7e3c5_getBlockExpr(&(_74937_tokens));;
	if ((_76013_exprTokens.len() > 0LL)) {
		(*(_75013_m))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, &(_76013_exprTokens));
	} else if ((*(_75013_m))._field_TypeMatch) {
		_1e3b6727b_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76713_i = _76013_exprTokens.len();;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _76813_blockToks = _1e3b825b5_range(&(_76713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76813_blockToks == nullptr)) {
		_1e3b66665_stop(_self_);
		_1e3b6727b_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1e3b675de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76713_i < _74937_tokens.len())) {
		_1e3b6727b_pushErr(_self_, _74937_tokens[_76713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_75013_m))._field_End=_74937_tokens[(_76713_i - 1LL)];
	({
		__jule_tuple_sx_1e303b288_Case__jule_tuple_x_1e303a0de_Else __jule_assign_result = _1e3b6e8b0_buildCases(_self_, _76813_blockToks, (*(_75013_m))._field_TypeMatch);
		(*(_75013_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75013_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75013_m;;
}



inline jule::Ptr<_1e3034490_ScopeTree> _1e3b70042_buildScopeSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _78235_tokens) {
	jule::Bool _78313_isUnsafe = false;;
	jule::Bool _78413_isDeferred = false;;
	jule::Ptr<_20cb74604_Token> _78513_token = _78235_tokens[0LL];;
	if (((*(_78513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78313_isUnsafe=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1e3b6727b_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78513_token=_78235_tokens[0LL];
		if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78413_isDeferred=true;
			(_78235_tokens).mut_slice(1LL);;
			if ((_78235_tokens.len() == 0LL)) {
				_1e3b6727b_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78413_isDeferred=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1e3b6727b_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81113_i = 0LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _81213_scopeTokens = _1e3b825b5_range(&(_81113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81213_scopeTokens == nullptr)) {
		_1e3b6727b_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81113_i < _78235_tokens.len())) {
		_1e3b6727b_pushErr(_self_, _78235_tokens[_81113_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1e3034490_ScopeTree> _81913_scope = _1e3b68029_buildScope(_self_, &(_81213_scopeTokens), _78235_tokens[(_81113_i - 1LL)]);;
	(*(_81913_scope))._field_Unsafety=_78313_isUnsafe;
	(*(_81913_scope))._field_Deferred=_78413_isDeferred;
	return _81913_scope;;
}



inline jule::Ptr<_1e3031a53_LabelSt> _1e3b70383_buildLabelSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _82536_tokens) {
	jule::Ptr<_1e3031a53_LabelSt> _82613_lbl = jule::new_ptr<_1e3031a53_LabelSt>(_1e3031a53_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		((*(_82536_tokens))).mut_slice(2LL);;
		_1e3b67897_insertAsNext(_self_, _82536_tokens);
	};
	return _82613_lbl;;
}



inline __jule_tuple__1e3033acc_StmtData__jule_tuple_bool _1e3b706c4_buildIdSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _84033_tokens) {
	__jule_tuple__1e3033acc_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_20cb74604_Token> _84513_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1e7294ac5:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1e3b70383_buildLabelSt(_self_, _84033_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e7295257:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e3b80a36_assignInfo> _1e3b70a15_buildAssignInfo(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _85439_tokens) {
	jule::Ptr<_1e3b80a36_assignInfo> _85513_info = jule::new_ptr<_1e3b80a36_assignInfo>(_1e3b80a36_assignInfo{._field_ok=true});;
	jule::I64 _85813_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72965aa:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e7297446:;
						{
							(_85813_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e72974bd:;
						{
							(_85813_braceN)--;
						}
					}
					_match_end_1e729737a:;
				};
				{
					
					if ((_85813_braceN > 0LL)) {
						_case_begin_1e7298337:;
						{
							goto _iter_next_1e72965aa;
						}
					}
					else if (((!(_1e3013cdd_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1e72983ae:;
						{
							goto _iter_next_1e72965aa;
						}
					}
					_match_end_1e72982b0:;
				};
				(*(_85513_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85513_info))._field_l.len() == 0LL)) {
					(*(_85513_info))._field_ok=false;
				};
				(*(_85513_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85513_info))._field_r=nullptr;
					(*(_85513_info))._field_ok=_1e3013a24_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id);
					goto _iter_end_1e72965aa;
				};
				(*(_85513_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1e3013a24_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id)) {
					if (((*(_85513_info))._field_r.len() > 0LL)) {
						_1e3b6727b_pushErr(_self_, (*(_85513_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85513_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1e72965aa;
			}
			_iter_next_1e72965aa:;
			++it;
			_85914_i++;
			goto _iter_begin_1e72965aa;
		}
		_iter_end_1e72965aa:;
	};
	return _85513_info;;
}



inline jule::Ptr<_1e3032889_AssignLeft> _1e3b70d56_buildAssignL(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _89936_tokens) {
	jule::Ptr<_1e3032889_AssignLeft> _90013_l = jule::new_ptr<_1e3032889_AssignLeft>(_1e3032889_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_90013_l))._field_Ident=(*((*(_90013_l))._field_Token))._field_Kind;
	};
	(*(_90013_l))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90013_l;;
}



inline jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> _1e3b71197_buildAssignLs(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72a0c57:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _91221_part = *it;
			{
				jule::Ptr<_1e3032889_AssignLeft> _91317_l = _1e3b70d56_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91317_l); };
			}
			_iter_next_1e72a0c57:;
			++it;
			goto _iter_begin_1e72a0c57;
		}
		_iter_end_1e72a0c57:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b714d8_buildPlainAssign(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _91940_tokens) {
	__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e3b80a36_assignInfo> _92013_info = _1e3b70a15_buildAssignInfo(_self_, _91940_tokens);;
	if ((!((*(_92013_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e3032e1c_AssignSt> _92513_assign = jule::new_ptr<_1e3032e1c_AssignSt>(_1e3032e1c_AssignSt{._field_Setter=(*(_92013_info))._field_setter, });;
	if (((*((*(_92013_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92513_assign))._field_Declarative=true;
		(*(_92513_assign))._field_Right=_1e3b85068_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
		jule::Bool _93313_ok = _1e3b718d4_buildDeclAssign1(_self_, &((*(_92013_info))._field_l), &(_92513_assign));;
		__jule_func_result.__jule_result_arg0 = _92513_assign;
		__jule_func_result.__jule_result_arg1 = _93313_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _93713_parts;;
	jule::Slice<_2277b1ce8_Log> _93720_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&((*(_92013_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93713_parts = __jule_assign_result.__jule_result_arg0;
		_93720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93720_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93720_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92513_assign))._field_Left=_1e3b71197_buildAssignLs(_self_, &(_93713_parts));
	if (((*(_92013_info))._field_r != nullptr)) {
		(*(_92513_assign))._field_Right=_1e3b85068_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92513_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1e3b718d4_buildDeclAssign1(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _95140_lefts, jule::Ptr<_1e3032e1c_AssignSt>* _95162_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _95313_parts;;
	jule::Slice<_2277b1ce8_Log> _95320_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(_95140_lefts, static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		return false;;
	};
	{
		auto expr = &(_95313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72a9755:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _95921_part = *it;
			{
				jule::Bool _96017_isMut = false;;
				jule::Bool _96117_isRef = false;;
				jule::Ptr<_20cb74604_Token> _96313_token = _95921_part[0LL];;
				if (((*(_96313_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_96017_isMut=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1e3b6727b_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1e72a9755;
					};
				};
				if (((*(_95921_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_96117_isRef=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1e3b6727b_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1e72a9755;
					};
				};
				if ((((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1e3b6727b_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1e72a9755;
				};
				jule::Ptr<_1e3032889_AssignLeft> _98717_l = _1e3b70d56_buildAssignL(_self_, &(_95921_part));;
				(*(_98717_l))._field_Mutable=_96017_isMut;
				(*(_98717_l))._field_Reference=_96117_isRef;
				{ jule::Slice<jule::Ptr<_1e3032889_AssignLeft>> &__jule_push_dest = (*((*(_95162_assign))))._field_Left; __jule_push_dest.push(_98717_l); };
			}
			_iter_next_1e72a9755:;
			++it;
			goto _iter_begin_1e72a9755;
		}
		_iter_end_1e72a9755:;
	};
	return true;;
}



inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b71c25_buildDeclAssign(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _99638_tokens) {
	__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99638_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99638_tokens).mut_slice(1LL);;
	jule::Ptr<_20cb74604_Token> _100213_token = _99638_tokens[0LL];;
	if (((*(_100213_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e3032e1c_AssignSt> _100713_assign = jule::new_ptr<_1e3032e1c_AssignSt>(_1e3032e1c_AssignSt{._field_Declarative=true, });;
	jule::I64 _101113_i = 0LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _101213_rang = _1e3b825b5_range(&(_101113_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99638_tokens));;
	if ((_101213_rang == nullptr)) {
		_1e3b6727b_pushErr(_self_, _100213_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101113_i + 1LL) < _99638_tokens.len())) {
		(*(_100713_assign))._field_Setter=_99638_tokens[_101113_i];
		if (((*((*(_100713_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1e3b6727b_pushErr(_self_, (*(_100713_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_101113_i)++;
		jule::Slice<jule::Ptr<_20cb74604_Token>> _102217_exprTokens = _99638_tokens.slice(_101113_i);;
		(*(_100713_assign))._field_Right=_1e3b85068_buildExpr((*(_self_))._field_p, &(_102217_exprTokens));
	};
	jule::Bool _10269_ok = _1e3b718d4_buildDeclAssign1(_self_, &(_101213_rang), &(_100713_assign));;
	__jule_func_result.__jule_result_arg0 = _100713_assign;
	__jule_func_result.__jule_result_arg1 = _10269_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool _1e3b72066_buildAssignSt(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _103037_tokens) {
	__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e3b80ddd_checkAssignTokens(_103037_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103037_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e72b6740:;
			{
				({
					__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_assign_result = _1e3b71c25_buildDeclAssign(_self_, (*(_103037_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e72b6344:;
			{
				({
					__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_assign_result = _1e3b714d8_buildPlainAssign(_self_, _103037_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e72b62cd:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e3029177_UseExpr> _1e3b723a7_buildUseExpr(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _104536_tokens) {
	if (((*(_104536_tokens)).len() == 1LL)) {
		_1e3b6727b_pushErr(_self_, (*(_104536_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1e3029177_UseExpr> _105013_ue = jule::new_ptr<_1e3029177_UseExpr>(_1e3029177_UseExpr{._field_Token=(*(_104536_tokens))[0LL], });;
	((*(_104536_tokens))).mut_slice(1LL);;
	(*(_105013_ue))._field_Expr=_1e3b85068_buildExpr((*(_self_))._field_p, _104536_tokens);
	return _105013_ue;;
}



inline jule::Any _1e3b726e8_buildSt(_1e3b66005_scopeParser* _self_, jule::Ptr<_1e3b65664_stmt>* _105831_st) {
	jule::Ptr<_20cb74604_Token> _105913_token = (*((*(_105831_st))))._field_tokens[0LL];;
	if (((*(_105913_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106117_s = jule::Any(nullptr);;
		jule::Bool _106120_ok = false;;
		({
			__jule_tuple__1e3033acc_StmtData__jule_tuple_bool __jule_assign_result = _1e3b706c4_buildIdSt(_self_, &((*((*(_105831_st))))._field_tokens));
			_106117_s = __jule_assign_result.__jule_result_arg0;
			_106120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106120_ok) {
			return _106117_s;;
		};
	};
	jule::Ptr<_1e3032e1c_AssignSt> _106713_s;;
	jule::Bool _106716_ok = false;;
	({
		__jule_tuple_x_1e3032e1c_AssignSt__jule_tuple_bool __jule_assign_result = _1e3b72066_buildAssignSt(_self_, &((*((*(_105831_st))))._field_tokens));
		_106713_s = __jule_assign_result.__jule_result_arg0;
		_106716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106716_ok) {
		return jule::Any(_106713_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_105913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1e72bb921:;
			{
				return jule::Any(_1e3b723a7_buildUseExpr(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e72bb3c1:;
			{
				return jule::Any(_1e3b6836a_buildVarSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e72bbb30:;
			{
				return jule::Any(_1e3b686ab_buildRetSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1e72bbb96:;
			{
				return jule::Any(_1e3b6b37e_buildIterSt(_self_, _105831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e72bbc0c:;
			{
				return jule::Any(_1e3b6b6c0_buildBreakSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e72bbc73:;
			{
				return jule::Any(_1e3b6ba11_buildContSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1e72bbcea:;
			{
				return jule::Any(_1e3b6c4d4_buildIfElseChain(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e72bbd72:;
			{
				return jule::Any(_1e3b6c825_buildCoCallSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1e72bbde9:;
			{
				return jule::Any(_1e3b6cb66_buildGotoSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1e72bbe71:;
			{
				return jule::Any(_1e3b6cea7_buildFallSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e72bbee8:;
			{
				return jule::Any(_1e3b6d2e8_buildTypeAliasSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e72bc070:;
			{
				return jule::Any(_1e3b6ec01_buildMatchCase(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e72bc0e7:;
			{
				if (((*((*(_105831_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1e72bb734;
				};
				if ((((*((*((*(_105831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_105831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1e3b70042_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e72bc16e:;
			{
				return jule::Any(_1e3b70042_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1e72bc1e6:;
			{
				return jule::Any(_1e3b70042_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1e72bb734:;
	};
	jule::Ptr<_1e30287a3_Expr> _111313_expr = _1e3b85068_buildExpr((*(_self_))._field_p, &((*((*(_105831_st))))._field_tokens));;
	if ((_111313_expr != nullptr)) {
		return jule::Any(_111313_expr, &__jule_any_type52);;
	};
	_1e3b6727b_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1e3b72a5b_build(_1e3b66005_scopeParser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _112129_tokens, jule::Ptr<_1e3034490_ScopeTree>* _112152_s) {
	if (((*(_112152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1e3b65a1b_splitStmts(_112129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_112152_s));
	while (((!(_1e3b66e18_isLastSt(_self_))) && (!(_1e3b66b82_finished(_self_))))) {
		{
			jule::Ptr<_1e3b65664_stmt> _112917_st = _1e3b67b2d_next(_self_);;
			jule::Any _113017_data = _1e3b726e8_buildSt(_self_, &(_112917_st));;
			if ((_113017_data != nullptr)) {
				{ jule::Slice<_1e3033d30_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1e3033d30_Stmt{._field_Token=(*(_112917_st))._field_tokens[0LL], ._field_Data=_113017_data}); };
			};
			if (_1e3b668eb_stopped(_self_)) {
				goto _iter_end_1e72c7e5a;
			};
		}
	_iter_next_1e72c7e5a:;
	}
	_iter_end_1e72c7e5a:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b66005_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e3b73d8c_pushErr(_1e3b73584_exprBuilder* _self_, jule::Ptr<_20cb74604_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1e3b848b4_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1e3b74200_pushSuggestion(_1e3b73584_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1e3b84c27_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1e3029474_TupleExpr> _1e3b74541_buildTuple(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>* _5434_parts) {
	jule::Ptr<_1e3029474_TupleExpr> _5513_tuple = jule::new_ptr<_1e3029474_TupleExpr>(_1e3029474_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1e30287a3_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72e57d5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1e3b7d935_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1e72e57d5:;
			++it;
			goto _iter_begin_1e72e57d5;
		}
		_iter_end_1e72e57d5:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1e302984d_LitExpr> _1e3b74882_buildLit(_1e3b73584_exprBuilder* _self_, jule::Ptr<_20cb74604_Token> _6427_token) {
	return jule::new_ptr<_1e302984d_LitExpr>(_1e302984d_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1e3b75014_buildSingle(_1e3b73584_exprBuilder* _self_, jule::Ptr<_20cb74604_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1e72e77a4:;
			{
				return jule::Any(_1e3b74882_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1e72e782b:;
			{
				return jule::Any(jule::new_ptr<_1e302ac39_VariadicExpr>(_1e302ac39_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1e72e78a3:;
			{
				return jule::Any(_1e3b7ed21_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1e72e76c7:;
	};
	_1e3b73d8c_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e302a1cd_IdentExpr> _1e3b75355_buildBindIdent(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1e3b73d8c_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb74604_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b73d8c_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e302a1cd_IdentExpr> _10613_expr = _1e3b7ed21_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1e302a860_UnaryExpr> _1e3b75696_buildUnary(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _11133_tokens) {
	jule::Ptr<_20cb74604_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1e3b73d8c_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1e300e5be_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1e3b73d8c_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1e302a860_UnaryExpr>(_1e302a860_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1e3b7d935_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1e302b8b6_SubIdentExpr> _1e3b759d7_buildObjSubIdent(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_20cb74604_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e302b8b6_SubIdentExpr>(_1e302b8b6_SubIdentExpr{._field_Expr=_1e3b7d935_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1e302b4dc_NsSelectionExpr> _1e3b75d28_buildNsSubIdent(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _14739_tokens) {
	jule::Ptr<_1e302b4dc_NsSelectionExpr> _14813_ns = jule::new_ptr<_1e302b4dc_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e7303c44:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_20cb74604_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1e3b73d8c_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1e3b74200_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1e3b73d8c_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e3b74200_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1e7303c44:;
				++it;
				_15418_i++;
				goto _iter_begin_1e7303c44;
			}
			_iter_end_1e7303c44:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b76169_buildType(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1e302446e_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1e3b73d8c_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1e3b73d8c_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1e3b764aa_buildSubIdent(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_20cb74604_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1e730a91b:;
			{
				return jule::Any(_1e3b759d7_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e730b147:;
			{
				return jule::Any(_1e3b75d28_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1e730b1ad:;
			{
				return jule::Any(_1e3b76169_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1e730b037:;
	};
	_1e3b73d8c_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e302ac39_VariadicExpr> _1e3b767eb_buildVariadic(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _20236_tokens) {
	jule::Ptr<_20cb74604_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1e302ac39_VariadicExpr>(_1e302ac39_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1e3b7d935_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1e3028aa0_RangeExpr> _1e3b76b3c_buildBetweenParentheses(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1e3b73d8c_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1e3028aa0_RangeExpr>(_1e3028aa0_RangeExpr{._field_Expr=_1e3b7d935_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1e302b113_CastExpr> _1e3b76e7d_tryBuildCast(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7310e2c:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e7311c1e:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1e7310e2c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e7311c96:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1e7311b53:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1e7310e2c;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_20cb74604_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_20cb74604_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_20cb74604_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1e302b113_CastExpr> _25717_cast = jule::new_ptr<_1e302b113_CastExpr>(_1e302b113_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1e3b73d8c_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1e3b74200_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1e3b73d8c_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1e3b74200_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1e302446e_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1e3b73d8c_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1e3b825b5_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1e3b7d935_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1e7310e2c:;
			++it;
			_22513_i++;
			goto _iter_begin_1e7310e2c;
		}
		_iter_end_1e7310e2c:;
	};
	return nullptr;;
}



inline void _1e3b7739b_pushArg(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e30287a3_Expr>>* _29731_args, jule::Slice<jule::Ptr<_20cb74604_Token>> _29750_tokens, jule::Ptr<_20cb74604_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1e3b7d935_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b776dc_buildArgs(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e731d18c:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e731e26a:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e731e2e2:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1e731e19e:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1e731d18c;
				};
				_1e3b7739b_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1e731d18c:;
			++it;
			_31613_i++;
			goto _iter_begin_1e731d18c;
		}
		_iter_end_1e731d18c:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1e3b7739b_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1e3b7739b_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1e302c4cc_FnCallExpr> _1e3b77ed4_buildFnCall(_1e3b73584_exprBuilder* _self_, jule::Ptr<_20cb74604_Token>* _37235_token, jule::Slice<jule::Ptr<_20cb74604_Token>>* _37255_expr, jule::Slice<jule::Ptr<_20cb74604_Token>>* _37276_args) {
	return jule::new_ptr<_1e302c4cc_FnCallExpr>(_1e302c4cc_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1e3b7d935_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1e3b776dc_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1e3b78325_buildParenthesesRange(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _38045_tokens) {
	jule::Ptr<_20cb74604_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1e302b113_CastExpr> _38317_expr = _1e3b76e7d_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_assign_result = _1e3b8287e_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1e3b76b3c_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1e3b77ed4_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1e3029c27_UnsafeExpr> _1e3b78666_buildUnsafeExpr(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _39738_tokens) {
	jule::Ptr<_20cb74604_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _40113_rangeTokens = _1e3b825b5_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e3029c27_UnsafeExpr>(_1e3029c27_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1e3b7d935_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1e303612e_FnDecl> _1e3b789a7_buildAnonFn(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _41235_tokens) {
	jule::Ptr<_1e303612e_FnDecl> _41313_f = _1e3b8ab0c_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1e3036492_IsAnon(_41313_f.ptr())))) {
		_1e3b73d8c_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1e3b78ce8_buildUnsafe(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e732e19d:;
			{
				return jule::Any(_1e3b789a7_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1e732e6cb:;
			{
				return jule::Any(_1e3b78666_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1e732e610:;
	};
}



inline void _1e3b79216_pushRangeLitPart(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _43139_part, jule::Ptr<_20cb74604_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b79557_getBraceRangeLitExprParts(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7332ed7:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e73340b5:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e733413c:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1e7333ee9:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1e7332ed7;
				};
				_1e3b79216_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1e7332ed7:;
			++it;
			_45313_i++;
			goto _iter_begin_1e7332ed7;
		}
		_iter_end_1e7332ed7:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1e3b79216_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1e3b79216_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1e302cec2_FieldExprPair> _1e3b79898_buildFieldExprPair(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e302cec2_FieldExprPair> _48913_pair = jule::new_ptr<_1e302cec2_FieldExprPair>(_1e302cec2_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1e3b7d935_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b79bd9_buildStructLitExpr(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _49742_tokens) {
	jule::Ptr<_20cb74604_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1e30287a3_Expr>(_1e30287a3_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1e3b79898_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1e3b7d935_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1e30287a3_Expr>> _1e3b7a02a_buildStructLitExprs(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _51313_parts = _1e3b79557_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e30287a3_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1e30287a3_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e733c2aa:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1e3b79bd9_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1e733c2aa:;
			++it;
			goto _iter_begin_1e733c2aa;
		}
		_iter_end_1e733c2aa:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1e302d7ec_StructLit> _1e3b7a36b_buildTypedStructLiteral(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1e302446e_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1e3b73d8c_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_20cb74604_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1e3b73d8c_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e302d7ec_StructLit>(_1e302d7ec_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1e3b7a02a_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b7a6ac_buildBraceLitPart(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _55020_r;;
	({
		__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_assign_result = _1e3b7e78d_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1e30287a3_Expr>(_1e30287a3_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1e302e5cd_KeyValPair>(_1e302e5cd_KeyValPair{._field_Key=_1e3b7d935_buildFromTokens(_self_, _55013_l), ._field_Val=_1e3b7d935_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1e3b7d935_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1e302dca3_BraceLit> _1e3b7a9ed_buildBraceLit(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _56637_tokens) {
	jule::Ptr<_1e302dca3_BraceLit> _56713_lit = jule::new_ptr<_1e302dca3_BraceLit>(_1e302dca3_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _57213_parts = _1e3b79557_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1e30287a3_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7346171:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1e3b7a6ac_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1e7346171:;
			++it;
			goto _iter_begin_1e7346171;
		}
		_iter_end_1e7346171:;
	};
	return _56713_lit;;
}



inline jule::Any _1e3b7ad3e_buildBraceRange(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_20cb74604_Token__jule_tuple_int __jule_assign_result = _1e3b800da_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1e7346d0e:;
			{
				return jule::Any(_1e3b7a9ed_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1e7347a13:;
			{
				_1e3b73d8c_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e7346e1e:;
	};
	jule::Ptr<_20cb74604_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1e3b7d2a3_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1e734a906:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_20cb74604_Token>> _60821_rangeTokens = _1e3b825b5_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1e302c4cc_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1e302c4cc_FnCallExpr>(&__jule_any_type107);;
					if (_1e302cad7_Ignored(_60921_model.ptr())) {
						_1e3b73d8c_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e3b74200_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1e3b85a5d_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1e734a3c8:;
				{
					_1e3b73d8c_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1e734a373:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e734e421:;
			{
				return _1e3b78ce8_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e734ea4d:;
			{
				return jule::Any(_1e3b789a7_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e734eab4:;
			{
				return jule::Any(_1e3b7a36b_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1e734adac:;
			{
				_1e3b73d8c_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e734de04:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b7b180_getEnumerableParts(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _63913_parts;;
	jule::Slice<_2277b1ce8_Log> _63920_errors;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1e302ecc6_SliceExpr> _1e3b7b4c1_buildSlice(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _64433_tokens) {
	jule::Ptr<_1e302ecc6_SliceExpr> _64513_slc = jule::new_ptr<_1e302ecc6_SliceExpr>(_1e302ecc6_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _65013_parts = _1e3b7b180_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1e30287a3_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7354459:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1e7354459;
				};
				{ jule::Slice<jule::Ptr<_1e30287a3_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1e3b7d935_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1e7354459:;
			++it;
			goto _iter_begin_1e7354459;
		}
		_iter_end_1e7354459:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1e3030766_IndexingExpr> _1e3b7b977_buildIndexing(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_20cb74604_Token>> _66713_tokens, jule::Ptr<_20cb74604_Token> _66735_errorToken) {
	jule::Ptr<_20cb74604_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e30287a3_Expr> _67413_expr = _1e3b7d935_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e30287a3_Expr> _67813_index = _1e3b7d935_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e3030766_IndexingExpr>(_1e3030766_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1e3030dc6_SlicingExpr> _1e3b7c093_buildSlicing(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_20cb74604_Token>>* _69063_start, jule::Slice<jule::Ptr<_20cb74604_Token>>* _69114_to, jule::Ptr<_20cb74604_Token>* _69133_errorToken, jule::Ptr<_20cb74604_Token> _69157_end) {
	jule::Ptr<_1e3030dc6_SlicingExpr> _69213_slc = jule::new_ptr<_1e3030dc6_SlicingExpr>(_1e3030dc6_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1e3b7d935_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1e3b7d935_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1e3b7d935_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1e3b7c3d4_buildBracketRange(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _70640_tokens) {
	jule::Ptr<_20cb74604_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_20cb74604_Token__jule_tuple_int __jule_assign_result = _1e3b800da_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1e3b7b4c1_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1e3b73d8c_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _72424_to;;
	({
		__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_assign_result = _1e3b7e78d_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1e3b7c093_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1e3b7b977_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1e3b7c725_buildExclRight(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _73138_tokens) {
	jule::Ptr<_20cb74604_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1e3b7d2a3_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1e7361268:;
			{
				(*(_73413_d.cast_ptr<_1e302c4cc_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1e3034490_ScopeTree>(_1e3034490_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1e7360ee3:;
	};
	_1e3b73d8c_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e3b7ca66_buildData(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e736290c:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e7362973:;
			{
				return _1e3b75014_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e73629ea:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1e3b75355_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1e7362720:;
	};
	jule::Ptr<_20cb74604_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1e3b767eb_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1e300e5be_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1e3b76169_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1e3b75696_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1e7367082:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_20cb74604_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1e7366ec7;
						};
					};
					jule::Ptr<_20cb74604_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1e7366ec7;
					};
					return jule::Any(_1e3b76169_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1e7366ec7:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e7369cbb:;
			{
				return _1e3b764aa_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1e7369d32:;
			{
				return _1e3b7c725_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1e7369d98:;
			{
				return _1e3b78325_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1e7369e0e:;
			{
				return _1e3b7ad3e_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1e7369e86:;
			{
				return _1e3b7c3d4_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e736a00d:;
			{
				return jule::Any(_1e3b76169_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1e7369bde:;
	};
	_1e3b73d8c_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e3b7ce62_buildBinop(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _82134_tokens, jule::I64 _82152_i) {
	jule::Ptr<_20cb74604_Token> _82213_op = (*(_82134_tokens))[_82152_i];;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _82313_leftTokens = (*(_82134_tokens)).slice(0LL, _82152_i);;
	if ((_1e3b7dced_isTypeOp(&((*(_82213_op))._field_Id)) && _1e3b7e10b_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1e3b76169_buildType(_self_, _82134_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _82813_rightTokens = (*(_82134_tokens)).slice((_82152_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1e3b73d8c_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b74200_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1e302bd6c_BinopExpr>(_1e302bd6c_BinopExpr{._field_Left=_1e3b7d935_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1e3b7d935_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1e3b7d2a3_build(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1e3b76169_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1e3b7ea57_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1e3b7ca66_buildData(_self_, _84629_tokens);;
	};
	return _1e3b7ce62_buildBinop(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1e3b7d5e4_buildKind(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _85813_parts;;
	jule::Slice<_2277b1ce8_Log> _85820_errors;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1e3b74541_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1e3b7d2a3_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b7d935_buildFromTokens(_1e3b73584_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1e3b7d5e4_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e30287a3_Expr>(_1e30287a3_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b73584_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b80a36_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e3b84210_stop(_1e3b83e13_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1e3b84496_stopped(_1e3b83e13_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1e3b848b4_pushErr(_1e3b83e13_parser* _self_, jule::Ptr<_20cb74604_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e3b8352d_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1e3b84c27_pushSuggestion(_1e3b83e13_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1e3b838c4_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b85068_buildExpr(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _23334_tokens) {
	return _1e3b7d935_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1e302388b_Directive> _1e3b853a9_buildDirective(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1e3b848b4_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1e3b848b4_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e302388b_Directive>(_1e302388b_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1e3b85662_pushDirective(_1e3b83e13_parser* _self_, jule::Ptr<_1e302388b_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e739aadd:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1e739aadd:;
			++it;
			goto _iter_begin_1e739aadd;
		}
		_iter_end_1e739aadd:;
	};
	{ jule::Slice<jule::Ptr<_1e302388b_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1e3034490_ScopeTree> _1e3b85a5d_buildScope(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _26535_tokens, jule::Ptr<_20cb74604_Token> _26557_end) {
	jule::Ptr<_1e3034490_ScopeTree> _26613_s = _1e3b643dd_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1e3b66005_scopeParser _26813_sp = _1e3b66005_scopeParser{._field_p=_self_, };;
	_1e3b72a5b_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b86014__buildType(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1e3b960bd_typeBuilder _27713_tb = _1e3b960bd_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1e302446e_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b9909e_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b864ba_buildType(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20cb74604_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1e302446e_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b86014__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1e3b848b4_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b8680b_buildTypeAliasDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e303acd2_TypeAliasDecl> _30413_tad = jule::new_ptr<_1e303acd2_TypeAliasDecl>(_1e303acd2_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_20cb74604_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1e302446e_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1e30d9a51_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1e3b86b6e_buildVarTypeAndExpr(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e303720c_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_20cb74604_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_20cb74604_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1e3b848b4_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e302446e_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _36213_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36213_exprTokens.len() == 0LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1e3b85068_buildExpr(_self_, &(_36213_exprTokens));
}



inline void _1e3b86ed2_buildVarCommon(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e303720c_VarDecl>* _37039_v, jule::Slice<jule::Ptr<_20cb74604_Token>> _37056_tokens) {
	(*((*(_37039_v))))._field_Token=_37056_tokens[0LL];
	if (((*((*((*(_37039_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*((*(_37039_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37039_v))))._field_Ident=(*((*((*(_37039_v))))._field_Token))._field_Kind;
	(*((*(_37039_v))))._field_Public=_1e30d9a51_IsPub((*((*(_37039_v))))._field_Ident);
	(*((*(_37039_v))))._field_Kind=nullptr;
	if ((_37056_tokens.len() > 1LL)) {
		(_37056_tokens).mut_slice(1LL);;
		_1e3b86b6e_buildVarTypeAndExpr(_self_, _37039_v, &(_37056_tokens));
	};
}



inline void _1e3b87400_buildVarBegin(_1e3b83e13_parser* _self_, jule::Ptr<_1e303720c_VarDecl>* _38637_v, jule::I64* _38655_i, jule::Slice<jule::Ptr<_20cb74604_Token>>* _38664_tokens) {
	jule::Ptr<_20cb74604_Token> _3879_tok = (*(_38664_tokens))[(*(_38655_i))];;
	{
		auto &_match_expr{ (*(_3879_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e73b5124:;
			{
				(*((*(_38637_v))))._field_Statically=true;
				goto _case_begin_1e73b55a8;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e73b55a8:;
			{
				((*(_38655_i)))++;
				if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
					_1e3b848b4_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38664_tokens))[(*(_38655_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38637_v))))._field_Mutable=true;
					((*(_38655_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1e73b4ce4:;
			{
				((*(_38655_i)))++;
				(*((*(_38637_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1e73b4c7d:;
			{
				_1e3b848b4_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e73b4c28:;
	};
	if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
		_1e3b848b4_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e303720c_VarDecl> _1e3b87741_buildVar(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _41632_tokens) {
	jule::I64 _41713_i = 0LL;;
	jule::Ptr<_1e303720c_VarDecl> _41813_v = jule::new_ptr<_1e303720c_VarDecl>(_1e303720c_VarDecl{._field_Token=_41632_tokens[0LL], });;
	_1e3b87400_buildVarBegin(_self_.ptr(), &(_41813_v), &(_41713_i), &(_41632_tokens));
	if ((_41713_i >= _41632_tokens.len())) {
		return nullptr;;
	};
	(_41632_tokens).mut_slice(_41713_i);;
	if (((*(_41632_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41813_v))._field_Reference=true;
		if ((_41632_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41632_tokens).mut_slice(1LL);;
	};
	_1e3b86ed2_buildVarCommon(_self_, &(_41813_v), _41632_tokens);
	return _41813_v;;
}



inline jule::Ptr<_1e3031679_GenericDecl> _1e3b87a82_buildGeneric(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _43837_tokens) {
	jule::Ptr<_1e3031679_GenericDecl> _43913_g = jule::new_ptr<_1e3031679_GenericDecl>(_1e3031679_GenericDecl{._field_Token=(*(_43837_tokens))[0LL], });;
	if (((*((*(_43913_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_43913_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_43913_g))._field_Ident=(*((*(_43913_g))._field_Token))._field_Kind;
	if (((*(_43837_tokens)).len() > 1LL)) {
		if (((*((*(_43837_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43837_tokens)).len() == 2LL)) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_20cb74604_Token>> _45617_constraintTokens = (*(_43837_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _45717_parts;;
		jule::Slice<_2277b1ce8_Log> _45724_errors;;
		({
			__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&(_45617_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45717_parts = __jule_assign_result.__jule_result_arg0;
			_45724_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45724_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45724_errors);;
			return nullptr;;
		};
		(*(_43913_g))._field_Constraint=jule::new_ptr<_1e30311c3_Constraint>(_1e30311c3_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, _45717_parts.len())});
		{
			auto expr = &(_45717_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e73c1718:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_20cb74604_Token>> _46325_part = *it;
				{
					jule::I64 _46421_i = 0LL;;
					jule::Ptr<_1e302446e_TypeDecl> _46521_kind;;
					({
						__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_46325_part), (&(_46421_i)), true);
						_46521_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*((*(_43913_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46521_kind); };
					if ((_46421_i < _46325_part.len())) {
						_1e3b848b4_pushErr(_self_.ptr(), _46325_part[_46421_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1e73c1718:;
				++it;
				goto _iter_begin_1e73c1718;
			}
			_iter_end_1e73c1718:;
		};
	};
	return _43913_g;;
}



inline jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _1e3b87e7d_buildGenerics(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _47538_tokens, jule::Ptr<_20cb74604_Token>* _47557_errorToken) {
	if (((*(_47538_tokens)).len() == 0LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_47557_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _48113_parts;;
	jule::Slice<_2277b1ce8_Log> _48120_errors;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(_47538_tokens, static_cast<jule::U64>(5LLU), true);
		_48113_parts = __jule_assign_result.__jule_result_arg0;
		_48120_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48120_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48120_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> _48713_generics = jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>::alloc(0LL, _48113_parts.len());;
	{
		auto expr = &(_48113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e73c6014:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _48821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e3031679_GenericDecl>> &__jule_push_dest = _48713_generics; __jule_push_dest.push(_1e3b87a82_buildGeneric(_self_, &(_48821_part))); };
			}
			_iter_next_1e73c6014:;
			++it;
			goto _iter_begin_1e73c6014;
		}
		_iter_end_1e73c6014:;
	};
	return _48713_generics;;
}



inline jule::Ptr<_1e3034bcc_ParamDecl> _1e3b882be_buildSelfParam(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _49537_tokens) {
	if ((_49537_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e3034bcc_ParamDecl> _50013_param = jule::new_ptr<_1e3034bcc_ParamDecl>();;
	jule::I64 _50313_i = 0LL;;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50013_param))._field_Mutable=true;
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_1e3b848b4_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_227713453_StrBuilder _51313_ident = static__22771371c_New(5LL);;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_22771c02d_WriteStr(&_51313_ident, jule::Str::lit("&", 1));
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_1e3b848b4_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_22771c02d_WriteStr(&_51313_ident, jule::Str::lit("self", 4));
		(*(_50013_param))._field_Token=_49537_tokens[_50313_i];
		(_50313_i)++;
		if ((_50313_i < _49537_tokens.len())) {
			_1e3b848b4_pushErr(_self_, _49537_tokens[_50313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50013_param))._field_Ident=_22771c825_Str(&_51313_ident);
	return _50013_param;;
}



inline void _1e3b886dc_paramTypeBegin(_1e3b83e13_parser* _self_, jule::Ptr<_1e3034bcc_ParamDecl>* _53738_param, jule::I64* _53762_i, jule::Slice<jule::Ptr<_20cb74604_Token>>* _53771_tokens) {
	for (; ((*(_53762_i)) < (*(_53771_tokens)).len()); ((*(_53762_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _53913_token = (*(_53771_tokens))[(*(_53762_i))];;
			if (((*(_53913_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53738_param))))._field_Variadic) {
				_1e3b848b4_pushErr(_self_, _53913_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1e73cdb87;
			};
			(*((*(_53738_param))))._field_Variadic=true;
		}
	_iter_next_1e73cdb87:;
	}
	_iter_end_1e73cdb87:;;
}



inline void _1e3b88a50_buildParamType(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e3034bcc_ParamDecl>* _55239_param, jule::Slice<jule::Ptr<_20cb74604_Token>>* _55263_tokens) {
	jule::I64 _55313_i = 0LL;;
	_1e3b886dc_paramTypeBegin(_self_.ptr(), _55239_param, &(_55313_i), _55263_tokens);
	if ((_55313_i >= (*(_55263_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _55263_tokens, (&(_55313_i)), true);
		(*((*(_55239_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55313_i < (*(_55263_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_55263_tokens))[_55313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e3b88db3_buildParamBody(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e3034bcc_ParamDecl>* _56539_param, jule::Slice<jule::Ptr<_20cb74604_Token>> _56562_tokens) {
	jule::Ptr<_20cb74604_Token> _56613_tok = _56562_tokens[0LL];;
	if ((_56562_tokens.len() == 1LL)) {
		(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
		return;;
	} else if ((_56562_tokens.len() < 3LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _56613_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56562_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56539_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1e3b88a50_buildParamType(_self_, _56539_param, &(_56562_tokens));
		return;;
	};
	(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
	(_56562_tokens).mut_slice(2LL);;
	_1e3b88a50_buildParamType(_self_, _56539_param, &(_56562_tokens));
}



inline jule::Ptr<_1e3034bcc_ParamDecl> _1e3b89204_buildParam(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _58534_tokens) {
	jule::Ptr<_1e3034bcc_ParamDecl> _58613_param = jule::new_ptr<_1e3034bcc_ParamDecl>(_1e3034bcc_ParamDecl{._field_Token=_58534_tokens[0LL], });;
	if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58613_param))._field_Mutable=true;
		if ((_58534_tokens.len() == 1LL)) {
			_1e3b848b4_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58534_tokens).mut_slice(1LL);;
		(*(_58613_param))._field_Token=_58534_tokens[0LL];
	};
	if ((_58534_tokens.len() >= 3LL)) {
		if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58534_tokens.len() == 1LL)) {
				_1e3b848b4_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58534_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58534_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58613_param))._field_Reference=true;
				(_58534_tokens).mut_slice(1LL);;
				(*(_58613_param))._field_Token=_58534_tokens[0LL];
			};
		};
	};
	if (((*((*(_58613_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58613_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1e3b88a50_buildParamType(_self_, &(_58613_param), &(_58534_tokens));
	} else {
		_1e3b88db3_buildParamBody(_self_, &(_58613_param), _58534_tokens);
	};
	return _58613_param;;
}



inline void _1e3b894ac_checkParams(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>>* _62835_params) {
	{
		auto expr = _62835_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e73dd405:;
		if (it != expr_end) {
			jule::Ptr<_1e3034bcc_ParamDecl> _62921_param = *it;
			{
				if ((_1e3035051_IsSelf(_62921_param.ptr()) || ((*(_62921_param))._field_Kind != nullptr))) {
					goto _iter_next_1e73dd405;
				};
				if (((*(_62921_param))._field_Token == nullptr)) {
					_1e3b848b4_pushErr(_self_, (*(_62921_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_62921_param))._field_Kind=jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Ident=(*((*(_62921_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_62921_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1e73dd405:;
			++it;
			goto _iter_begin_1e73dd405;
		}
		_iter_end_1e73dd405:;
	};
}



inline jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> _1e3b898a8_buildParams(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _64836_tokens, jule::Bool _64854_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _64913_parts;;
	jule::Slice<_2277b1ce8_Log> _64920_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(_64836_tokens, static_cast<jule::U64>(5LLU), true);
		_64913_parts = __jule_assign_result.__jule_result_arg0;
		_64920_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_64920_errs);;
	if ((_64913_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> _65517_params = nullptr;;
	if ((_64854_method && (_64913_parts.len() > 0LL))) {
		jule::Ptr<_1e3034bcc_ParamDecl> _65717_param = _1e3b882be_buildSelfParam(_self_.ptr(), _64913_parts[0LL]);;
		if (((_65717_param != nullptr) && _1e3035051_IsSelf(_65717_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_65717_param); };
			(_64913_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_64913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e73e4b37:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _66421_part = *it;
			{
				jule::Ptr<_1e3034bcc_ParamDecl> _66517_param = _1e3b89204_buildParam(_self_, _66421_part);;
				if ((_66517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_66517_param); };
				};
			}
			_iter_next_1e73e4b37:;
			++it;
			goto _iter_begin_1e73e4b37;
		}
		_iter_end_1e73e4b37:;
	};
	_1e3b894ac_checkParams(_self_.ptr(), &(_65517_params));
	return _65517_params;;
}



inline __jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool _1e3b89ca4_buildMultiRetType(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _67542_tokens, jule::I64* _67565_i) {
	__jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e3027362_RetTypeDecl>();
	((*(_67565_i)))++;
	if (((*(_67565_i)) >= (*(_67542_tokens)).len())) {
		((*(_67565_i)))--;
		({
			__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _67542_tokens, _67565_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67565_i)))--;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _68513_rangeTokens = _1e3b825b5_range(_67565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _68713_parts;;
	jule::Slice<_2277b1ce8_Log> _68720_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&(_68513_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68713_parts = __jule_assign_result.__jule_result_arg0;
		_68720_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68720_errs);;
	if ((_68713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _69313_types = jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, _68713_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_20cb74604_Token>>::alloc(0LL, _68713_parts.len());
	{
		auto expr = &(_68713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e73e9d4b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _69521_part = *it;
			{
				jule::Ptr<_20cb74604_Token> _69617_token = _69521_part[0LL];;
				jule::I64 _69717_offset = 0LL;;
				if ((_69521_part.len() > 1LL)) {
					_69617_token=_69521_part[1LL];
					if (((*(_69617_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69717_offset=2LL;
						if ((_69521_part.len() < 3LL)) {
							_1e3b848b4_pushErr(_self_.ptr(), _69617_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1e73e9d4b;
						};
					};
				};
				_69617_token=_69521_part[0LL];
				if ((_69717_offset != 2LL)) {
					jule::Ptr<_20cb74604_Token> _71321_newToken = jule::new_ptr<_20cb74604_Token>((*(_69617_token)));;
					(*(_71321_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71321_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69617_token); };
				};
				jule::Ptr<_1e302446e_TypeDecl> _72017_tk;;
				({
					__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_69521_part), (&(_69717_offset)), true);
					_72017_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69717_offset < _69521_part.len())) {
					_1e3b848b4_pushErr(_self_.ptr(), _69521_part[_69717_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = _69313_types; __jule_push_dest.push(_72017_tk); };
			}
			_iter_next_1e73e9d4b:;
			++it;
			goto _iter_begin_1e73e9d4b;
		}
		_iter_end_1e73e9d4b:;
	};
	if ((_69313_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*(_67542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1e3025b9b_TupleTypeDecl>(_1e3025b9b_TupleTypeDecl{._field_Types=_69313_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool _1e3b8a1a0_buildRetType(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _74337_tokens, jule::I64* _74360_i) {
	__jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e3027362_RetTypeDecl>();
	if (((*(_74360_i)) >= (*(_74337_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_20cb74604_Token> _74913_token = (*(_74337_tokens))[(*(_74360_i))];;
	{
		auto &_match_expr{ (*(_74913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1e74030c9:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1e7403151:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1e74031c8:;
			{
				if ((((*(_74360_i)) + 1LL) >= (*(_74337_tokens)).len())) {
					_1e3b848b4_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74360_i)))++;
				_74913_token=(*(_74337_tokens))[(*(_74360_i))];
				{
					auto &_match_expr{ (*(_74913_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e7404e66:;
						{
							({
								__jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e3b89ca4_buildMultiRetType(_self_, _74337_tokens, _74360_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1e7404edd:;
						{
							_1e3b848b4_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1e7404e00:;
				};
				({
					__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _74337_tokens, _74360_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1e7403052:;
	};
	((*(_74360_i)))++;
	_1e3b848b4_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1e303612e_FnDecl> _1e3b8a656_buildFnPrototype(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _78241_tokens, jule::I64* _78264_i, jule::Bool _78272_method) {
	jule::Ptr<_1e303612e_FnDecl> _78313_f = jule::new_ptr<_1e303612e_FnDecl>(_1e303612e_FnDecl{._field_Token=(*(_78241_tokens))[(*(_78264_i))], });;
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78313_f))._field_Statically=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78313_f))._field_Unsafety=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	((*(_78264_i)))++;
	if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb74604_Token> _8169_tok = (*(_78241_tokens))[(*(_78264_i))];;
	if (((*(_8169_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Ident=(*(_8169_tok))._field_Kind;
	} else {
		(*(_78313_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_20cb74604_Token> _8289_errorToken = (*(_78241_tokens))[(*(_78264_i))];;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _82913_genericsTokens = _1e3b825b5_range(_78264_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78241_tokens);;
	if ((_82913_genericsTokens != nullptr)) {
		(*(_78313_f))._field_Generics=_1e3b87e7d_buildGenerics(_self_, &(_82913_genericsTokens), &(_8289_errorToken));
	};
	if (((*((*(_78241_tokens))[(*(_78264_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_78241_tokens))[(*(_78264_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _83913_paramsToks = _1e3b825b5_range(_78264_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78241_tokens);;
	if ((_83913_paramsToks.len() > 0LL)) {
		(*(_78313_f))._field_Params=_1e3b898a8_buildParams(_self_, &(_83913_paramsToks), _78272_method);
	};
	if (((*(_78264_i)) < (*(_78241_tokens)).len())) {
		jule::Ptr<_20cb74604_Token> _84513_token = (*(_78241_tokens))[(*(_78264_i))];;
		if (((*(_84513_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78313_f))._field_Exceptional=true;
			((*(_78264_i)))++;
		};
	};
	(*(_78313_f))._field_Public=_1e30d9a51_IsPub((*(_78313_f))._field_Ident);
	({
		__jule_tuple_x_1e3027362_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e3b8a1a0_buildRetType(_self_, _78241_tokens, _78264_i);
		(*(_78313_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78313_f;;
}



inline jule::Ptr<_1e303612e_FnDecl> _1e3b8ab0c_buildFn(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _85932_tokens, jule::Bool _85950_method, jule::Bool _85964_prototype) {
	jule::I64 _86013_i = 0LL;;
	jule::Ptr<_1e303612e_FnDecl> _86113_f = _1e3b8a656_buildFnPrototype(_self_, _85932_tokens, &(_86013_i), _85950_method);;
	if (_85964_prototype) {
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_85932_tokens))[(_86013_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86113_f;;
	} else if ((_86113_f == nullptr)) {
		return _86113_f;;
	};
	if ((_86013_i >= (*(_85932_tokens)).len())) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _87713_blockTokens = _1e3b825b5_range(&(_86013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _85932_tokens);;
	if ((_87713_blockTokens != nullptr)) {
		(*(_86113_f))._field_Scope=_1e3b85a5d_buildScope(_self_, &(_87713_blockTokens), (*(_85932_tokens))[(_86013_i - 1LL)]);
		(*((*(_86113_f))._field_Scope))._field_Unsafety=(*(_86113_f))._field_Unsafety;
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_85932_tokens))[_86013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86113_f;;
}



inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b8ae4d_getUseDeclSelectors(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _89342_tokens) {
	jule::I64 _89413_i = 0LL;;
	_89342_tokens=_1e3b825b5_range(&(_89413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _89613_parts;;
	jule::Slice<_2277b1ce8_Log> _89620_errs;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&(_89342_tokens), static_cast<jule::U64>(5LLU), true);
		_89613_parts = __jule_assign_result.__jule_result_arg0;
		_89620_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89620_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89620_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _90213_selectors = jule::Slice<jule::Ptr<_20cb74604_Token>>::alloc(0LL, _89613_parts.len());;
	{
		auto expr = &(_89613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e741c137:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_1e3b848b4_pushErr(_self_, _90321_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_20cb74604_Token> _90717_tok = _90321_part[0LL];;
				if ((((*(_90717_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90717_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1e3b848b4_pushErr(_self_, _90717_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e3b84c27_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1e741c137;
				};
				{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = _90213_selectors; __jule_push_dest.push(_90717_tok); };
			}
			_iter_next_1e741c137:;
			++it;
			goto _iter_begin_1e741c137;
		}
		_iter_end_1e741c137:;
	};
	return _90213_selectors;;
}



inline void _1e3b8b2b1_buildBindUseDecl(_1e3b83e13_parser* _self_, jule::Ptr<_1e303c2de_UseDecl>* _91840_decl, jule::Slice<jule::Ptr<_20cb74604_Token>>* _91857_tokens) {
	if (((*(_91857_tokens)).len() > 1LL)) {
		_1e3b848b4_pushErr(_self_, (*(_91857_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20cb74604_Token> _9229_token = (*(_91857_tokens))[0LL];;
	if ((((*(_9229_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9229_token))._field_Kind[0LL] != '`') && ((*(_9229_token))._field_Kind[0LL] != '\"')))) {
		_1e3b848b4_pushErr(_self_, _9229_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91840_decl))))._field_Binded=true;
	(*((*(_91840_decl))))._field_LinkPath=(*(_9229_token))._field_Kind.slice(1LL, ((*(_9229_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1e3b8b602_useDeclTokstoa(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _93134_tokens) {
	jule::I64 _93213_n = 0LL;;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7423d53:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_93316_token = it;
			{
				if ((((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1e3b848b4_pushErr(_self_, (*(_93316_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93213_n+=(*((*(_93316_token))))._field_Kind.len();
			}
			_iter_next_1e7423d53:;
			++it;
			goto _iter_begin_1e7423d53;
		}
		_iter_end_1e7423d53:;
	};
	_227713453_StrBuilder _93913_s = static__22771371c_New(_93213_n);;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7423c76:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_94016_token = it;
			{
				_22771c02d_WriteStr(&_93913_s, (*((*(_94016_token))))._field_Kind);
			}
			_iter_next_1e7423c76:;
			++it;
			goto _iter_begin_1e7423c76;
		}
		_iter_end_1e7423c76:;
	};
	return _22771c825_Str(&_93913_s);;
}



inline void _1e3b8b965_buildStdUseDecl(_1e3b83e13_parser* _self_, jule::Ptr<_1e303c2de_UseDecl>* _94639_decl, jule::Slice<jule::Ptr<_20cb74604_Token>> _94659_tokens) {
	(*((*(_94639_decl))))._field_Std=true;
	jule::Ptr<_20cb74604_Token> _94913_token = _94659_tokens[0LL];;
	if ((_94659_tokens.len() < 3LL)) {
		_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94659_tokens).mut_slice(2LL);;
	_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e742840c:;
			{
				_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1e7428484:;
			{
				jule::Slice<jule::Ptr<_20cb74604_Token>> _96221_selectors = nullptr;;
				({
					__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_assign_result = _1e3b8287e_rangeLast(&(_94659_tokens));
					_94659_tokens = __jule_assign_result.__jule_result_arg0;
					_96221_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94639_decl))))._field_Selected=_1e3b8ae4d_getUseDeclSelectors(_self_, _96221_selectors);
				if ((_94659_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e742850b:;
			{
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94639_decl))))._field_Full=true;
			}
		}
		_match_end_1e7428385:;
	};
	if (((_94659_tokens.len() == 1LL) && ((*(_94659_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94639_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94639_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1e3b8b602_useDeclTokstoa(_self_, &(_94659_tokens)));
	};
}



inline void _1e3b8bcc8_buildIdentUseDecl(_1e3b83e13_parser* _self_, jule::Ptr<_1e303c2de_UseDecl>* _100441_decl, jule::Slice<jule::Ptr<_20cb74604_Token>> _100461_tokens) {
	(*((*(_100441_decl))))._field_Std=false;
	jule::Ptr<_20cb74604_Token> _100713_token = _100461_tokens[(_100461_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e7431cc8:;
			{
				_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1e7432aba:;
			{
				jule::Slice<jule::Ptr<_20cb74604_Token>> _101321_selectors = nullptr;;
				({
					__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_assign_result = _1e3b8287e_rangeLast(&(_100461_tokens));
					_100461_tokens = __jule_assign_result.__jule_result_arg0;
					_101321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100441_decl))))._field_Selected=_1e3b8ae4d_getUseDeclSelectors(_self_, _101321_selectors);
				if ((_100461_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e7432b31:;
			{
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_1e3b848b4_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100441_decl))))._field_Full=true;
			}
		}
		_match_end_1e74329aa:;
	};
	(*((*(_100441_decl))))._field_LinkPath=_1e3b8b602_useDeclTokstoa(_self_, &(_100461_tokens));
}



inline void _1e3b8c13b_parseUseDecl(_1e3b83e13_parser* _self_, jule::Ptr<_1e303c2de_UseDecl>* _105236_decl, jule::Slice<jule::Ptr<_20cb74604_Token>> _105256_tokens) {
	if ((*((*(_105236_decl))))._field_Binded) {
		_1e3b8b2b1_buildBindUseDecl(_self_, _105236_decl, &(_105256_tokens));
		return;;
	};
	jule::Ptr<_20cb74604_Token> _105813_token = _105256_tokens[0LL];;
	if (((*(_105813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105256_tokens.len() > 2LL) && ((*(_105256_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105236_decl))))._field_Alias=(*(_105813_token))._field_Kind;
		if (((*(_105256_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e3b848b4_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1e3b84c27_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105256_tokens).mut_slice(2LL);;
		_105813_token=_105256_tokens[0LL];
	};
	;
	{
		
		if ((*(_105813_token))._field_Kind.equal("std", 3)) {
			_case_begin_1e743e940:;
			{
				_1e3b8b965_buildStdUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		else {
			_case_begin_1e743e4ab:;
			{
				_1e3b8bcc8_buildIdentUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		_match_end_1e743e445:;
	};
}



inline jule::Ptr<_1e303c2de_UseDecl> _1e3b8c537_buildUseDecl(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _108635_tokens, jule::Bool _108653_binded) {
	jule::Ptr<_1e303c2de_UseDecl> _108713_decl = jule::new_ptr<_1e303c2de_UseDecl>(_1e303c2de_UseDecl{._field_Token=_108635_tokens[0LL], ._field_Binded=_108653_binded, });;
	if ((_108635_tokens.len() < 2LL)) {
		_1e3b848b4_pushErr(_self_, (*(_108713_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108635_tokens).mut_slice(1LL);;
	_1e3b8c13b_parseUseDecl(_self_, &(_108713_decl), _108635_tokens);
	return _108713_decl;;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b8c933_buildTypeEnumItemKind(jule::Ptr<_1e3b83e13_parser> _self_, jule::I64* _110046_i, jule::Slice<jule::Ptr<_20cb74604_Token>>* _110059_tokens) {
	jule::I64 _110113_braceN = 0LL;;
	jule::I64 _11029_exprStart = (*(_110046_i));;
	for (; ((*(_110046_i)) < (*(_110059_tokens)).len()); ((*(_110046_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _110413_t = (*(_110059_tokens))[(*(_110046_i))];;
			{
				auto &_match_expr{ (*(_110413_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e7443669:;
					{
						(_110113_braceN)++;
						goto _iter_next_1e7442aca;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e74436e1:;
					{
						(_110113_braceN)--;
					}
				}
				_match_end_1e7443603:;
			};
			if ((_110113_braceN > 0LL)) {
				goto _iter_next_1e7442aca;
			};
			if ((((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110046_i)) + 1LL) >= (*(_110059_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20cb74604_Token>> _112025_kindTokens = nullptr;;
				if (((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart, (*(_110046_i)));
				} else {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart);
				};
				jule::I64 _112621_j = 0LL;;
				jule::Ptr<_1e302446e_TypeDecl> _112721_kind;;
				({
					__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_112025_kindTokens), (&(_112621_j)), true);
					_112721_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112621_j < _112025_kindTokens.len())) {
					_1e3b848b4_pushErr(_self_.ptr(), _112025_kindTokens[_112621_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112721_kind;;
			};
		}
	_iter_next_1e7442aca:;
	}
	_iter_end_1e7442aca:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>> _1e3b8cc74_buildTypeEnumItems(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _113743_tokens) {
	jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>> _113813_items = jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113913_i = 0LL;;
	for (; (_113913_i < (*(_113743_tokens)).len()); (_113913_i)++) {
		{
			jule::Ptr<_20cb74604_Token> _114117_t = (*(_113743_tokens))[_113913_i];;
			jule::Ptr<_1e303db81_TypeEnumItemDecl> _114217_item = jule::new_ptr<_1e303db81_TypeEnumItemDecl>();;
			(*(_114217_item))._field_Token=_114117_t;
			if ((((*((*(_114217_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113743_tokens)).len() - _113913_i) > 2LL))) {
				_114117_t=(*(_113743_tokens))[(_113913_i + 1LL)];
				if (((*(_114117_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114217_item))._field_Ident=(*((*(_114217_item))._field_Token))._field_Kind;
					_113913_i+=2LL;
					if (((_113913_i >= (*(_113743_tokens)).len()) || ((*((*(_113743_tokens))[_113913_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1e3b848b4_pushErr(_self_.ptr(), _114117_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1e74484b5;
					};
				};
			};
			(*(_114217_item))._field_Kind=_1e3b8c933_buildTypeEnumItemKind(_self_, &(_113913_i), _113743_tokens);
			{ jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>> &__jule_push_dest = _113813_items; __jule_push_dest.push(_114217_item); };
		}
	_iter_next_1e74484b5:;
	}
	_iter_end_1e74484b5:;;
	return _113813_items;;
}



inline jule::Ptr<_1e303e2e1_TypeEnumDecl> _1e3b8d0b5_buildTypeEnumDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _116142_tokens) {
	jule::I64 _116213_i = 1LL;;
	jule::Ptr<_1e303e2e1_TypeEnumDecl> _116313_e = jule::new_ptr<_1e303e2e1_TypeEnumDecl>(_1e303e2e1_TypeEnumDecl{._field_Token=(*(_116142_tokens))[_116213_i], });;
	if (((*((*(_116313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Ident=(*((*(_116313_e))._field_Token))._field_Kind;
	_116213_i+=3LL;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _117313_itemTokens = _1e3b825b5_range(&(_116213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116142_tokens);;
	if ((_117313_itemTokens == nullptr)) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116313_e;;
	} else if ((_116213_i < (*(_116142_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_116142_tokens))[_116213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Public=_1e30d9a51_IsPub((*(_116313_e))._field_Ident);
	(*(_116313_e))._field_End=(*(_116142_tokens))[(_116213_i - 1LL)];
	(*(_116313_e))._field_Items=_1e3b8cc74_buildTypeEnumItems(_self_, &(_117313_itemTokens));
	return _116313_e;;
}



inline jule::Ptr<_1e30287a3_Expr> _1e3b8d4b1_buildEnumItemExpr(jule::Ptr<_1e3b83e13_parser> _self_, jule::I64* _118842_i, jule::Slice<jule::Ptr<_20cb74604_Token>>* _118855_tokens) {
	jule::I64 _118913_braceN = 0LL;;
	jule::I64 _11909_exprStart = (*(_118842_i));;
	for (; ((*(_118842_i)) < (*(_118855_tokens)).len()); ((*(_118842_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _119213_t = (*(_118855_tokens))[(*(_118842_i))];;
			{
				auto &_match_expr{ (*(_119213_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e7454e94:;
					{
						(_118913_braceN)++;
						goto _iter_next_1e7454405;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e745501b:;
					{
						(_118913_braceN)--;
					}
				}
				_match_end_1e7454e2d:;
			};
			if ((_118913_braceN > 0LL)) {
				goto _iter_next_1e7454405;
			};
			if ((((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118842_i)) + 1LL) >= (*(_118855_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20cb74604_Token>> _120825_exprTokens = nullptr;;
				if (((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart, (*(_118842_i)));
				} else {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart);
				};
				return _1e3b85068_buildExpr(_self_, &(_120825_exprTokens));;
			};
		}
	_iter_next_1e7454405:;
	}
	_iter_end_1e7454405:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> _1e3b8d802_buildEnumItems(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _122039_tokens) {
	jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> _122113_items = jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122213_i = 0LL;;
	for (; (_122213_i < (*(_122039_tokens)).len()); (_122213_i)++) {
		{
			jule::Ptr<_20cb74604_Token> _122417_t = (*(_122039_tokens))[_122213_i];;
			jule::Ptr<_1e303c795_EnumItemDecl> _122517_item = jule::new_ptr<_1e303c795_EnumItemDecl>();;
			(*(_122517_item))._field_Token=_122417_t;
			if (((*((*(_122517_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1e3b848b4_pushErr(_self_.ptr(), (*(_122517_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122517_item))._field_Ident=(*((*(_122517_item))._field_Token))._field_Kind;
			if ((((_122213_i + 1LL) >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[(_122213_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122213_i + 1LL) < (*(_122039_tokens)).len())) {
					(_122213_i)++;
				};
				{ jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
				goto _iter_next_1e7458bac;
			};
			(_122213_i)++;
			_122417_t=(*(_122039_tokens))[_122213_i];
			(_122213_i)++;
			if (((*(_122417_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1e3b848b4_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1e7458bac;
			};
			if (((_122213_i >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[_122213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1e3b848b4_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1e7458bac;
			};
			(*(_122517_item))._field_Expr=_1e3b8d4b1_buildEnumItemExpr(_self_, &(_122213_i), _122039_tokens);
			{ jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
		}
	_iter_next_1e7458bac:;
	}
	_iter_end_1e7458bac:;;
	return _122113_items;;
}



inline jule::Ptr<_1e303d356_EnumDecl> _1e3b8db43_buildEnumDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _125738_tokens) {
	if (((*(_125738_tokens)).len() < 3LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_125738_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e303d356_EnumDecl> _126213_e = jule::new_ptr<_1e303d356_EnumDecl>(_1e303d356_EnumDecl{._field_Token=(*(_125738_tokens))[1LL], });;
	if (((*((*(_126213_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Ident=(*((*(_126213_e))._field_Token))._field_Kind;
	jule::I64 _127013_i = 2LL;;
	if (((*((*(_125738_tokens))[_127013_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127013_i)++;
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_125738_tokens))[(_127013_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126213_e;;
		};
		({
			__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, _125738_tokens, (&(_127013_i)), true);
			(*(_126213_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_1e3b84210_stop(_self_.ptr());
			_1e3b848b4_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126213_e;;
		};
	} else {
		(*(_126213_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _128713_itemTokens = _1e3b825b5_range(&(_127013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125738_tokens);;
	if ((_128713_itemTokens == nullptr)) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126213_e;;
	} else if ((_127013_i < (*(_125738_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_125738_tokens))[_127013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Public=_1e30d9a51_IsPub((*(_126213_e))._field_Ident);
	(*(_126213_e))._field_End=(*(_125738_tokens))[(_127013_i - 1LL)];
	(*(_126213_e))._field_Items=_1e3b8d802_buildEnumItems(_self_, &(_128713_itemTokens));
	return _126213_e;;
}



inline jule::Any _1e3b8de84_buildNodeEnumDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _130242_tokens) {
	if ((((*(_130242_tokens)).len() > 3LL) && ((*((*(_130242_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130242_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1e3b8d0b5_buildTypeEnumDecl(_self_, _130242_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e3b8db43_buildEnumDecl(_self_, _130242_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1e303e5aa_FieldDecl> _1e3b8e2c5_buildField(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _131134_tokens) {
	jule::Ptr<_1e303e5aa_FieldDecl> _131213_f = jule::new_ptr<_1e303e5aa_FieldDecl>();;
	(*(_131213_f))._field_Mutable=((*(_131134_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131213_f))._field_Mutable) {
		if ((_131134_tokens.len() == 1LL)) {
			_1e3b848b4_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(1LL);;
	};
	(*(_131213_f))._field_Token=_131134_tokens[0LL];
	if (((*((*(_131213_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_131213_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131213_f))._field_Ident=(*((*(_131213_f))._field_Token))._field_Kind;
	if ((_131134_tokens.len() == 1LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131134_tokens.len() < 3LL) || ((*(_131134_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1e3b848b4_pushErr(_self_.ptr(), _131134_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131134_tokens).mut_slice(2LL);;
	jule::I64 _134013_i = 0LL;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_131134_tokens), (&(_134013_i)), true);
		(*(_131213_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134013_i < _131134_tokens.len())) {
		jule::Ptr<_20cb74604_Token> _134313_token = _131134_tokens[_134013_i];;
		if (((*(_134313_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1e3b848b4_pushErr(_self_.ptr(), _131134_tokens[_134013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134013_i)++;
		if ((_134013_i >= _131134_tokens.len())) {
			_1e3b848b4_pushErr(_self_.ptr(), _134313_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(_134013_i);;
		(*(_131213_f))._field_Default=_1e3b85068_buildExpr(_self_, &(_131134_tokens));
	};
	(*(_131213_f))._field_Public=_1e30d9a51_IsPub((*(_131213_f))._field_Ident);
	return _131213_f;;
}



inline jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>> _1e3b8e616_buildStructDeclFields(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _136045_tokens) {
	jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>> _136117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _136213_stmts = _1e3b65a1b_splitStmts(&(_136045_tokens));;
	{
		auto expr = &(_136213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7477417:;
		if (it != expr_end) {
			jule::Ptr<_1e3b65664_stmt> _136321_stmt = *it;
			{
				_136045_tokens=(*(_136321_stmt))._field_tokens;
				jule::Ptr<_1e303e5aa_FieldDecl> _136517_f = _1e3b8e2c5_buildField(_self_, _136045_tokens);;
				{ jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>> &__jule_push_dest = _136117_fields; __jule_push_dest.push(_136517_f); };
			}
			_iter_next_1e7477417:;
			++it;
			goto _iter_begin_1e7477417;
		}
		_iter_end_1e7477417:;
	};
	return _136117_fields;;
}



inline jule::Ptr<_1e303eea1_StructDecl> _1e3b8e957_buildStructDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _137140_tokens) {
	if (((*(_137140_tokens)).len() < 3LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137140_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137713_i = 1LL;;
	jule::Ptr<_1e303eea1_StructDecl> _137813_s = jule::new_ptr<_1e303eea1_StructDecl>(_1e303eea1_StructDecl{._field_Token=(*(_137140_tokens))[_137713_i], });;
	if (((*((*(_137813_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137713_i)++;
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	(*(_137813_s))._field_Ident=(*((*(_137813_s))._field_Token))._field_Kind;
	jule::Ptr<_20cb74604_Token> _13929_errorToken = (*(_137140_tokens))[_137713_i];;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _139313_genericsTokens = _1e3b825b5_range(&(_137713_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137140_tokens);;
	if ((_139313_genericsTokens != nullptr)) {
		(*(_137813_s))._field_Generics=_1e3b87e7d_buildGenerics(_self_, &(_139313_genericsTokens), &(_13929_errorToken));
	};
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137140_tokens))[(_137713_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _140313_bodyTokens = _1e3b825b5_range(&(_137713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137140_tokens);;
	if ((_140313_bodyTokens == nullptr)) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	if ((_137713_i < (*(_137140_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137813_s))._field_Public=_1e30d9a51_IsPub((*(_137813_s))._field_Ident);
	(*(_137813_s))._field_Fields=_1e3b8e616_buildStructDeclFields(_self_, _140313_bodyTokens);
	(*(_137813_s))._field_End=(*(_137140_tokens))[(_137713_i - 1LL)];
	return _137813_s;;
}



inline void _1e3b8ec10_checkMethodReceiver(_1e3b83e13_parser* _self_, jule::Ptr<_1e303612e_FnDecl>* _141939_f) {
	if ((*((*(_141939_f))))._field_Statically) {
		if ((((*((*(_141939_f))))._field_Params.len() > 0LL) && _1e3035051_IsSelf((*((*(_141939_f))))._field_Params[0LL].ptr()))) {
			_1e3b848b4_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141939_f))))._field_Params.len() == 0LL)) {
		_1e3b848b4_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3034bcc_ParamDecl> _14319_param = (*((*(_141939_f))))._field_Params[0LL];;
	if ((!(_1e3035051_IsSelf(_14319_param.ptr())))) {
		_1e3b848b4_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e3b90073_buildTraitBody(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e30406dd_TraitDecl>* _143839_t, jule::Slice<jule::Ptr<_20cb74604_Token>> _143858_tokens) {
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _143913_stmts = _1e3b65a1b_splitStmts(&(_143858_tokens));;
	{
		auto expr = &(_143913_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e74871c4:;
		if (it != expr_end) {
			jule::Ptr<_1e3b65664_stmt> _144021_stmt = *it;
			{
				_143858_tokens=(*(_144021_stmt))._field_tokens;
				if ((_143858_tokens.len() == 0LL)) {
					goto _iter_next_1e74871c4;
				};
				{
					auto &_match_expr{ (*(_143858_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1e748a67d:;
						{
							jule::Ptr<_1e303612e_FnDecl> _144721_f = _1e3b8ab0c_buildFn(_self_, &(_143858_tokens), true, true);;
							if ((_144721_f == nullptr)) {
								goto _match_end_1e74884c2;
							};
							_1e3b8ec10_checkMethodReceiver(_self_.ptr(), &(_144721_f));
							if (((*(_144721_f))._field_Generics.len() > 0LL)) {
								_1e3b848b4_pushErr(_self_.ptr(), (*(_144721_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1e303612e_FnDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Methods; __jule_push_dest.push(_144721_f); };
						}
					}
					else {
						_case_begin_1e7487c96:;
						{
							jule::I64 _145721_i = 0LL;;
							jule::Ptr<_1e302446e_TypeDecl> _145821_ti;;
							jule::Bool _145825_ok = false;;
							({
								__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_143858_tokens), (&(_145721_i)), true);
								_145821_ti = __jule_assign_result.__jule_result_arg0;
								_145825_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145825_ok))) {
								goto _match_end_1e74884c2;
							};
							if ((_145721_i < _143858_tokens.len())) {
								_1e3b848b4_pushErr(_self_.ptr(), _143858_tokens[_145721_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Inherits; __jule_push_dest.push(_145821_ti); };
						}
					}
					_match_end_1e74884c2:;
				};
			}
			_iter_next_1e74871c4:;
			++it;
			goto _iter_begin_1e74871c4;
		}
		_iter_end_1e74871c4:;
	};
}



inline jule::Ptr<_1e30406dd_TraitDecl> _1e3b903b4_buildTraitDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _147039_tokens) {
	if (((*(_147039_tokens)).len() < 3LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_147039_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e30406dd_TraitDecl> _147513_t = jule::new_ptr<_1e30406dd_TraitDecl>(_1e30406dd_TraitDecl{._field_Token=(*(_147039_tokens))[1LL], });;
	if (((*((*(_147513_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Ident=(*((*(_147513_t))._field_Token))._field_Kind;
	jule::I64 _148313_i = 2LL;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _148413_bodyTokens = _1e3b825b5_range(&(_148313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147039_tokens);;
	if ((_148413_bodyTokens == nullptr)) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148313_i < (*(_147039_tokens)).len())) {
		_1e3b848b4_pushErr(_self_.ptr(), (*(_147039_tokens))[_148313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Public=_1e30d9a51_IsPub((*(_147513_t))._field_Ident);
	_1e3b90073_buildTraitBody(_self_, &(_147513_t), _148413_bodyTokens);
	(*(_147513_t))._field_End=(*(_147039_tokens))[(_148313_i - 1LL)];
	return _147513_t;;
}



inline jule::Ptr<_1e303612e_FnDecl> _1e3b90705_buildBindFn(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _150035_tokens) {
	(_150035_tokens).mut_slice(1LL);;
	jule::Ptr<_1e303612e_FnDecl> _150213_f = _1e3b8ab0c_buildFn(_self_, &(_150035_tokens), false, true);;
	if ((_150213_f != nullptr)) {
		(*(_150213_f))._field_Public=false;
		(*(_150213_f))._field_Binded=true;
	};
	return _150213_f;;
}



inline jule::Ptr<_1e303720c_VarDecl> _1e3b90a46_buildBindVar(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _151036_tokens) {
	(_151036_tokens).mut_slice(1LL);;
	jule::Ptr<_1e303720c_VarDecl> _151213_v = _1e3b87741_buildVar(_self_, _151036_tokens);;
	if ((_151213_v != nullptr)) {
		(*(_151213_v))._field_Public=false;
		(*(_151213_v))._field_Binded=true;
		if (((*(_151213_v))._field_Expr != nullptr)) {
			_1e3b848b4_pushErr(_self_.ptr(), (*(_151213_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151213_v;;
}



inline jule::Ptr<_1e303eea1_StructDecl> _1e3b90d87_buildBindStruct(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _152339_tokens) {
	(_152339_tokens).mut_slice(1LL);;
	jule::Ptr<_1e303eea1_StructDecl> _152513_s = _1e3b8e957_buildStructDecl(_self_, &(_152339_tokens));;
	if ((_152513_s != nullptr)) {
		(*(_152513_s))._field_Public=false;
		{
			auto expr = &((*(_152513_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e7498d40:;
			if (it != expr_end) {
				jule::Ptr<_1e303e5aa_FieldDecl> _152825_f = *it;
				{
					(*(_152825_f))._field_Public=true;
				}
				_iter_next_1e7498d40:;
				++it;
				goto _iter_begin_1e7498d40;
			}
			_iter_end_1e7498d40:;
		};
		(*(_152513_s))._field_Binded=true;
	};
	return _152513_s;;
}



inline jule::Ptr<_1e303acd2_TypeAliasDecl> _1e3b911c8_buildBindTypeAlias(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _153742_tokens) {
	(_153742_tokens).mut_slice(1LL);;
	jule::Ptr<_1e303acd2_TypeAliasDecl> _153913_t = _1e3b8680b_buildTypeAliasDecl(_self_, &(_153742_tokens));;
	if ((_153913_t != nullptr)) {
		(*(_153913_t))._field_Public=false;
		(*(_153913_t))._field_Binded=true;
	};
	return _153913_t;;
}



inline jule::Ptr<_1e303c2de_UseDecl> _1e3b91519_buildBindUse(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _154736_tokens) {
	if ((_154736_tokens.len() == 1LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _154736_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154736_tokens).mut_slice(1LL);;
	;
	return _1e3b8c537_buildUseDecl(_self_.ptr(), _154736_tokens, true);;
}



inline jule::Any _1e3b9185a_buildBind(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _155834_tokens) {
	jule::Ptr<_20cb74604_Token> _155913_token = (*(_155834_tokens))[0LL];;
	if (((*(_155834_tokens)).len() == 1LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155913_token=(*(_155834_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e749ea16:;
			{
				return jule::Any(_1e3b90705_buildBindFn(_self_, (*(_155834_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e749e719:;
			{
				return jule::Any(_1e3b90a46_buildBindVar(_self_, (*(_155834_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1e749e780:;
			{
				return jule::Any(_1e3b90d87_buildBindStruct(_self_, (*(_155834_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e749e7e6:;
			{
				return jule::Any(_1e3b911c8_buildBindTypeAlias(_self_, (*(_155834_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1e749e6a3:;
			{
				_1e3b848b4_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e749e64d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e303612e_FnDecl> _1e3b91b9b_getMethod(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _158234_tokens) {
	jule::I64 _158313_i = 0LL;;
	jule::Ptr<_20cb74604_Token> _158413_token = (*(_158234_tokens))[_158313_i];;
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_1e3b848b4_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1e3b848b4_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e3b8ab0c_buildFn(_self_, _158234_tokens, true, false);;
}



inline void _1e3b9200e_parseImplBody(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e3040d4d_Impl>* _161138_ipl, jule::Slice<jule::Ptr<_20cb74604_Token>>* _161155_tokens) {
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _161213_stmts = _1e3b65a1b_splitStmts(_161155_tokens);;
	{
		auto expr = &(_161213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e74a6b1c:;
		if (it != expr_end) {
			jule::Ptr<_1e3b65664_stmt> _161321_stmt = *it;
			{
				(*(_161155_tokens))=(*(_161321_stmt))._field_tokens;
				jule::Ptr<_20cb74604_Token> _161517_token = (*(_161155_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1e74a726b:;
						{
							_1e3b85662_pushDirective(_self_.ptr(), _1e3b853a9_buildDirective(_self_.ptr(), (*(_161155_tokens))));
							goto _iter_next_1e74a6b1c;
						}
					}
					_match_end_1e74a7c3e:;
				};
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1e74a836b:;
						{
							jule::Ptr<_1e303720c_VarDecl> _162421_v = _1e3b87741_buildVar(_self_, (*(_161155_tokens)));;
							if ((_162421_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1e303720c_VarDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Statics; __jule_push_dest.push(_162421_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1e74a7d71:;
						{
							jule::Ptr<_1e303612e_FnDecl> _163121_f = _1e3b91b9b_getMethod(_self_, _161155_tokens);;
							if ((_163121_f != nullptr)) {
								_1e3b8ec10_checkMethodReceiver(_self_.ptr(), &(_163121_f));
								_1e3b92949_applyFnMeta(_self_.ptr(), &(_163121_f));
								{ jule::Slice<jule::Ptr<_1e303612e_FnDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Methods; __jule_push_dest.push(_163121_f); };
							};
						}
					}
					else {
						_case_begin_1e74a82b1:;
						{
							_1e3b848b4_pushErr(_self_.ptr(), _161517_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1e74a6b1c;
						}
					}
					_match_end_1e74a825b:;
				};
			}
			_iter_next_1e74a6b1c:;
			++it;
			goto _iter_begin_1e74a6b1c;
		}
		_iter_end_1e74a6b1c:;
	};
}



inline jule::Ptr<_1e3040d4d_Impl> _1e3b92350_buildImpl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _164433_tokens) {
	jule::Ptr<_20cb74604_Token> _164513_token = _164433_tokens[0LL];;
	if ((_164433_tokens.len() < 2LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165113_i = 1LL;;
	jule::Ptr<_1e302446e_TypeDecl> _165313_base;;
	jule::Bool _165323_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		_165313_base = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e3040d4d_Impl> _166213_ipl = jule::new_ptr<_1e3040d4d_Impl>(_1e3040d4d_Impl{._field_Base=_165313_base, });;
	_164513_token=_164433_tokens[_165113_i];
	if (((*(_164513_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164513_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166213_ipl))._field_Base, (*(_166213_ipl))._field_Dest);
			goto _julec_label_1e74b593e;
		};
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165113_i)++;
	if ((_165113_i >= _164433_tokens.len())) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		(*(_166213_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1e74b593e:;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _170013_bodyTokens = _1e3b825b5_range(&(_165113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164433_tokens));;
	if ((_170013_bodyTokens == nullptr)) {
		_1e3b84210_stop(_self_.ptr());
		_1e3b848b4_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165113_i < _164433_tokens.len())) {
		_1e3b848b4_pushErr(_self_.ptr(), _164433_tokens[_165113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166213_ipl))._field_End=_164433_tokens[(_165113_i - 1LL)];
	_1e3b9200e_parseImplBody(_self_, &(_166213_ipl), &(_170013_bodyTokens));
	return _166213_ipl;;
}



inline jule::Any _1e3b92691_buildNodeData(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _171538_tokens) {
	jule::Ptr<_20cb74604_Token> _171613_token = (*(_171538_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e74b9954:;
			{
				jule::Ptr<_1e303612e_FnDecl> _172017_f = _1e3b8ab0c_buildFn(_self_, _171538_tokens, false, false);;
				if ((_172017_f != nullptr)) {
					(*(_172017_f))._field_Global=true;
				};
				return jule::Any(_172017_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e74b925b:;
			{
				return jule::Any(_1e3b87741_buildVar(_self_, (*(_171538_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e74ba092:;
			{
				return jule::Any(_1e3b8680b_buildTypeAliasDecl(_self_, _171538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1e74b9624:;
			{
				return _1e3b8de84_buildNodeEnumDecl(_self_, _171538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1e74b968a:;
			{
				return jule::Any(_1e3b8e957_buildStructDecl(_self_, _171538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e74b9701:;
			{
				return jule::Any(_1e3b903b4_buildTraitDecl(_self_, _171538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1e74b9767:;
			{
				return jule::Any(_1e3b92350_buildImpl(_self_, (*(_171538_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e74ba191:;
			{
				return _1e3b9185a_buildBind(_self_, _171538_tokens);;
			}
		}
		else {
			_case_begin_1e74b95ad:;
			{
				_1e3b848b4_pushErr(_self_.ptr(), _171613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e74b9558:;
	};
}



inline void _1e3b92949_applyFnMeta(_1e3b83e13_parser* _self_, jule::Ptr<_1e303612e_FnDecl>* _174835_f) {
	(*((*(_174835_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1e3b92c02_applyMeta(_1e3b83e13_parser* _self_, _1e302346d_Node* _175333_node) {
	{
		auto &_match_expr{ (*(_175333_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e74c07c3:;
			{
				jule::Ptr<_1e303720c_VarDecl> _175617_v = (*(_175333_node))._field_Data.cast_ptr<_1e303720c_VarDecl>(&__jule_any_type16);;
				if ((_175617_v == nullptr)) {
					return;;
				};
				(*(_175617_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e74c0839:;
			{
				jule::Ptr<_1e303612e_FnDecl> _176317_f = (*(_175333_node))._field_Data.cast_ptr<_1e303612e_FnDecl>(&__jule_any_type14);;
				if ((_176317_f == nullptr)) {
					return;;
				};
				_1e3b92949_applyFnMeta(_self_, &(_176317_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1e74c08b1:;
			{
				jule::Ptr<_1e303eea1_StructDecl> _176917_sd = (*(_175333_node))._field_Data.cast_ptr<_1e303eea1_StructDecl>(&__jule_any_type13);;
				if ((_176917_sd == nullptr)) {
					return;;
				};
				(*(_176917_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1e74c076d:;
	};
}



inline void _1e3b92eaa_pushUseDecl(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e303c2de_UseDecl>* _177836_decl) {
	{ jule::Slice<jule::Ptr<_1e303c2de_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177836_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*((*(_177836_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1e3b84c27_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e3b932eb_pushMetaNodes(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _178638_tokens) {
	{
		auto &_match_expr{ (*((*(_178638_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1e74c6631:;
			{
				;
				jule::Ptr<_1e303c2de_UseDecl> _179017_decl = _1e3b8c537_buildUseDecl(_self_.ptr(), (*(_178638_tokens)), false);;
				_1e3b92eaa_pushUseDecl(_self_, &(_179017_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e74c66a8:;
			{
				if ((((*(_178638_tokens)).len() > 1LL) && ((*((*(_178638_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1e303c2de_UseDecl> _179521_decl = _1e3b91519_buildBindUse(_self_, (*(_178638_tokens)));;
					_1e3b92eaa_pushUseDecl(_self_, &(_179521_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e74c6730:;
			{
				_1e3b85662_pushDirective(_self_.ptr(), _1e3b853a9_buildDirective(_self_.ptr(), (*(_178638_tokens))));
				return true;;
			}
		}
		_match_end_1e74c6510:;
	};
	return false;;
}



inline _1e302346d_Node _1e3b9363c_parseNode(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _180634_st) {
	_1e302346d_Node _180713_node = _1e302346d_Node{._field_Token=(*(_180634_st))[0LL], };;
	if (_1e3b932eb_pushMetaNodes(_self_, _180634_st)) {
		return _180713_node;;
	};
	jule::Any _181513_data = _1e3b92691_buildNodeData(_self_, _180634_st);;
	if ((_181513_data == nullptr)) {
		return _180713_node;;
	};
	_180713_node._field_Data=_181513_data;
	_1e3b92c02_applyMeta(_self_.ptr(), &(_180713_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180713_node;;
}



inline void _1e3b938e5_appendNode(jule::Ptr<_1e3b83e13_parser> _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _183035_st) {
	if (((*(_183035_st)).len() == 0LL)) {
		return;;
	};
	_1e302346d_Node _183413_node = _1e3b9363c_parseNode(_self_, _183035_st);;
	if (((_183413_node._field_Data == nullptr) || _1e3b84496_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1e302346d_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183413_node); };
}



inline void _1e3b93dbd_removeRange(_1e3b83e13_parser* _self_, jule::I64 _184130_i, jule::U64 _184138_id, jule::Slice<jule::Ptr<_20cb74604_Token>>* _184152_tokens, jule::Slice<jule::I64>* _184175_ranges) {
	jule::U64 _18429_close = _1e3b830ee_getCloseOfBrace(_184138_id);;
	for (; (_184130_i >= 0LL); (_184130_i)--) {
		{
			jule::Ptr<_20cb74604_Token> _184413_tok = (*(_184152_tokens))[(*(_184175_ranges))[_184130_i]];;
			if (((*(_184413_tok))._field_Id != _18429_close)) {
				goto _iter_next_1e74d0b13;
			};
			(*(_184175_ranges))=jule::append((*(_184175_ranges)).slice(0LL, _184130_i),(*(_184175_ranges)).slice((_184130_i + 1LL)));
			goto _iter_end_1e74d0b13;
		}
	_iter_next_1e74d0b13:;
	}
	_iter_end_1e74d0b13:;;
}



inline void _1e3b942db_pushWrongOrderCloseErr(_1e3b83e13_parser* _self_, jule::Ptr<_20cb74604_Token>* _185342_t, jule::Slice<jule::Ptr<_20cb74604_Token>>* _185354_tokens, jule::Slice<jule::I64>* _185373_ranges) {
	{
		auto &_match_expr{ (*((*(_185354_tokens))[(*(_185373_ranges))[((*(_185373_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1e74d30cc:;
			{
				_1e3b848b4_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1e74d3154:;
			{
				_1e3b848b4_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1e74d31cb:;
			{
				_1e3b848b4_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e74d2eab:;
	};
}



inline void _1e3b947b4_pushRangeClose(_1e3b83e13_parser* _self_, jule::Ptr<_20cb74604_Token> _186433_t, jule::U64 _186444_left, jule::Slice<jule::Ptr<_20cb74604_Token>>* _186460_tokens, jule::Slice<jule::I64>* _186483_ranges) {
	jule::I64 _18659_n = (*(_186483_ranges)).len();;
	if ((_18659_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186433_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1e74d5a6e:;
				{
					_1e3b848b4_pushErr(_self_, _186433_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1e74d5ae6:;
				{
					_1e3b848b4_pushErr(_self_, _186433_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1e74d5b6d:;
				{
					_1e3b848b4_pushErr(_self_, _186433_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1e74d5992:;
		};
		return;;
	} else if (((*((*(_186460_tokens))[(*(_186483_ranges))[(_18659_n - 1LL)]]))._field_Id != _186444_left)) {
		_1e3b942db_pushWrongOrderCloseErr(_self_, &(_186433_t), _186460_tokens, _186483_ranges);
	};
	_1e3b93dbd_removeRange(_self_, static_cast<jule::I64>((_18659_n - 1LL)), (*(_186433_t))._field_Id, _186460_tokens, _186483_ranges);
}



inline void _1e3b94a6c_checkRanges(_1e3b83e13_parser* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>>* _188231_tokens) {
	jule::Slice<jule::I64> _188317_ranges = nullptr;;
	{
		auto expr = _188231_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e74d8bb5:;
		if (it != expr_end) {
			jule::I64 _188513_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> *_188516_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188516_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1e74d99c9:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188317_ranges; __jule_push_dest.push(_188513_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e74d9a51:;
						{
							_1e3b947b4_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(74LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1e74d9ac8:;
						{
							_1e3b947b4_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(72LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1e74d9b50:;
						{
							_1e3b947b4_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(76LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					_match_end_1e74d98db:;
				};
			}
			_iter_next_1e74d8bb5:;
			++it;
			_188513_i++;
			goto _iter_begin_1e74d8bb5;
		}
		_iter_end_1e74d8bb5:;
	};
	{
		auto expr = &(_188317_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e74d8b4e:;
		if (it != expr_end) {
			jule::I64 _190016_i = *it;
			{
				jule::Ptr<_20cb74604_Token> _190113_token = (*(_188231_tokens))[_190016_i];;
				{
					auto &_match_expr{ (*(_190113_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e74dc4e3:;
						{
							_1e3b848b4_pushErr(_self_, _190113_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1e74dc56a:;
						{
							_1e3b848b4_pushErr(_self_, _190113_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1e74dc5e2:;
						{
							_1e3b848b4_pushErr(_self_, _190113_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1e74dc46b:;
				};
			}
			_iter_next_1e74d8b4e:;
			++it;
			goto _iter_begin_1e74d8b4e;
		}
		_iter_end_1e74d8b4e:;
	};
}



inline void _1e3b94d25_parse(jule::Ptr<_1e3b83e13_parser> _self_, jule::Ptr<_1e301464b_File>* _191330_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1e30224c2_Ast>(_1e30224c2_Ast{._field_File=(*(_191330_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1e3b73584_exprBuilder>(_1e3b73584_exprBuilder{._field_p=_self_});
	_1e3b94a6c_checkRanges(_self_.ptr(), &((*((*(_191330_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _192613_stmts = _1e3b65a1b_splitStmts(&((*((*(_191330_f))))._field_Tokens));;
	jule::I64 _192913_i = 0LL;;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_1e3b65664_stmt> _193117_stmt = _192613_stmts[_192913_i];;
			if (((*(_193117_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193117_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1e74e0b01;
			};
			if ((!(_2277b3a64_IsTopDirective((*((*(_193117_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1e74e0b01;
			};
			{ jule::Slice<jule::Ptr<_1e302388b_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1e3b853a9_buildDirective(_self_.ptr(), (*(_193117_stmt))._field_tokens)); };
		}
	_iter_next_1e74e0b01:;
	}
	_iter_end_1e74e0b01:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_1e3b65664_stmt> _194817_stmt = _192613_stmts[_192913_i];;
			_1e3b938e5_appendNode(_self_, &((*(_194817_stmt))._field_tokens));
			if (_1e3b84496_stopped(_self_.ptr())) {
				goto _iter_end_1e74e8257;
			};
		}
	_iter_next_1e74e8257:;
	}
	_iter_end_1e74e8257:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1e3b848b4_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b83e13_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1e3b96662_pushErr(_1e3b960bd_typeBuilder* _self_, jule::Ptr<_20cb74604_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1e3b848b4_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1e3b969c5_pushSuggestion(_1e3b960bd_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1e3b84c27_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b96c5b_buildNamespace(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_1e302446e_TypeDecl> _5513_t = jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1e302521c_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1e302521c_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1e3b96662_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1e3b969c5_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_20cb74604_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1e74ee4a0;
			};
			(_6013_n)++;
		}
	_iter_next_1e74ee4a0:;
	}
	_iter_end_1e74ee4a0:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1e3b9750e_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _1e3b96ee2_buildGenerics(_1e3b960bd_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_20cb74604_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _9313_parts = _1e3b97278_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1e3b96662_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75063db:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1e302446e_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1e3b96662_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1e302446e_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1e75063db:;
			++it;
			goto _iter_begin_1e75063db;
		}
		_iter_end_1e75063db:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e3b97278_identGenerics(_1e3b960bd_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1e7509477:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1e75094ee:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1e7509411:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1e750860d;
			};
		}
	_iter_next_1e750860d:;
	}
	_iter_end_1e750860d:;;
	jule::Slice<jule::Ptr<_20cb74604_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _12813_parts;;
	jule::Slice<_2277b1ce8_Log> _12820_errors;;
	({
		__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b82d35_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b9750e_buildIdent(_1e3b960bd_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1e3b96c5b_buildNamespace(_self_);;
	};
	jule::Ptr<_20cb74604_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e3024a79_IdentTypeDecl> _14113_it = jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e302446e_TypeDecl> _14713_itd = jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1e3b96ee2_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1e3b96662_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e3b96662_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1e3024d76_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1e3024d76_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1e302446e_TypeDecl> _16613_ident = _1e3b9750e_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1e7514163:;
			{
				{ jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1e3024a79_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e75141c9:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1e3024d76_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1e751410d:;
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97795_buildCppLink(_1e3b960bd_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1e3b96662_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1e302446e_TypeDecl> _18513_t = _1e3b9750e_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1e3024a79_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97a2b_buildFn(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e303612e_FnDecl> _19213_f = _1e3b8a656_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e3036492_IsAnon(_19213_f.ptr())))) {
		_1e3b96662_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b97cb2_buildPtr(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1e3025e98_PtrTypeDecl>(_1e3025e98_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1e302446e_TypeDecl> _22313_elem = _1e3b98d18_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1e3025e98_PtrTypeDecl>(_1e3025e98_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98048_buildSptr(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e302446e_TypeDecl> _24413_elem = _1e3b98d18_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1e3025519_SptrTypeDecl>(_1e3025519_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b982ce_buildSlc(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e302446e_TypeDecl> _26013_elem = _1e3b98d18_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1e302589e_SlcTypeDecl>(_1e302589e_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98565_buildArr(_1e3b960bd_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_20cb74604_Token>> _27313_exprTokens = _1e3b825b5_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1e302446e_TypeDecl> _27913_elem = _1e3b98d18_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e302673a_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1e302673a_ArrTypeDecl>(_1e302673a_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_20cb74604_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1e3b85068_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b987eb_buildMap(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb74604_Token>> _31013_keyTokens = _1e3b825b5_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1e3b96662_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1e3026e88_MapTypeDecl> _31913_mapt = jule::new_ptr<_1e3026e88_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1e302446e_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1e3b96662_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1e302446e_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_assign_result = _1e3b864ba_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98a82_buildEnumerable(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1e3b96662_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1e3b982ce_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1e3b98565_buildArr(_self_);;
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b98d18_step(_1e3b960bd_typeBuilder* _self_) {
	jule::Ptr<_20cb74604_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e75323a1:;
			{
				return _1e3b9750e_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e7532417:;
			{
				return _1e3b97795_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e753189a:;
			{
				return _1e3b97a2b_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e7531911:;
			{
				return _1e3b97cb2_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e7531977:;
			{
				return _1e3b98048_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1e75319dd:;
			{
				return jule::new_ptr<_1e302446e_TypeDecl>(_1e302446e_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1e3025519_SptrTypeDecl>(_1e3025519_SptrTypeDecl{._field_Elem=_1e3b98048_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1e75324a0:;
			{
				return _1e3b98a82_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1e7532516:;
			{
				return _1e3b987eb_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1e7531834:;
			{
				((*((*(_self_))._field_i)))++;
				_1e3b96662_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1e75317ce:;
	};
}



inline __jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool _1e3b9909e_build(_1e3b960bd_typeBuilder* _self_) {
	__jule_tuple_x_1e302446e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e302446e_TypeDecl> _38813_root = _1e3b98d18_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1e3b95809_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b960bd_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e33a2ee5_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1e33a49ec_pushErr(_1e33a449c_directiveEval* _self_, jule::Ptr<_20cb74604_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_2277b225a_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _1e33a4de8_splitOperans(_1e33a449c_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_20cb74604_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_20cb74604_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e7555bbb:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1e75550d8;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e7555c43:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1e7555b55:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1e75550d8;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1e75550d8:;
	}
	_iter_end_1e75550d8:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1e33a49ec_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1e33a5239_evalDirectiveIdent(_1e33a449c_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75586b3:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1e75586b3:;
			++it;
			goto _iter_begin_1e75586b3;
		}
		_iter_end_1e75586b3:;
	};
	return false;;
}



inline jule::Bool _1e33a557a_evalDirectivePart(_1e33a449c_directiveEval* _self_, jule::Slice<jule::Ptr<_20cb74604_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1e33a49ec_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1e33a5239_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1e33a5811_eval(_1e33a449c_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1e33a49ec_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _10413_logicalOrParts = _1e33a4de8_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e755d7ea:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20cb74604_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _11117_logicalAndParts = _1e33a4de8_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e755ec2a:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_20cb74604_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_20cb74604_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_20cb74604_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1e33a49ec_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1e33a557a_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1e755ec2a:;
						++it;
						goto _iter_begin_1e755ec2a;
					}
					_iter_end_1e755ec2a:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1e755d7ea:;
			++it;
			goto _iter_begin_1e755d7ea;
		}
		_iter_end_1e755d7ea:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e33a449c_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3b9a204_JuleImporter> static__1e3b9a600_New(_1e33a2ee5_CompileInfo _5819_info) {
	jule::Ptr<_1e3b9a204_JuleImporter> _5913_imp = jule::new_ptr<_1e3b9a204_JuleImporter>(_1e3b9a204_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2278c349d_PathStdlib}), });;
	_1e33a3875_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _1e3b9a886_AllPackages(_1e3b9a204_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1e3b9acc6_SetModPath(_1e3b9a204_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1e3b9b05c_GetModPath(_1e3b9a204_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1e3b9b39d_ModById(_1e3b9a204_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3b9b6de_GetImport(_1e3b9a204_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7565e95:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1e7565e95:;
			++it;
			goto _iter_begin_1e7565e95;
		}
		_iter_end_1e7565e95:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log _1e3b9bada_ImportPackage(_1e3b9a204_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2263463d9_DirEntry>> _9713_dirents = ({
		auto except = static__227723551_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_2277b1ce8_Log>::make({_1e3b99c1a_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_2263463d9_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1e30d8e07_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_2277b1ce8_Log> _10521_errs = _1e30d91c1_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1e30224c2_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1e30224c2_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75673b4:;
		if (it != expr_end) {
			jule::Ptr<_2263463d9_DirEntry> _11316_dirent = *it;
			{
				if ((_22634a60d_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_2276ee76e_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1e75673b4;
				};
				jule::Str _11913__path = _22772051a_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1e301464b_File> _12017_file = _1e30159e3_NewFileSet(_11913__path);;
				_1e3014a36_Fill(_12017_file.ptr(), _1e3b99940_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_2277b1ce8_Log> _12217_errors = _1e3022109_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e3b1be01_FileInfo> _12717_finfo = _1e3b63398_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1e33a218c_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1e75673b4;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_2277b1ce8_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b9c2c2_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1e75673b4;
				};
				{ jule::Slice<jule::Ptr<_1e30224c2_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1e75673b4:;
			++it;
			goto _iter_begin_1e75673b4;
		}
		_iter_end_1e75673b4:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e3b9bd93_Imported(_1e3b9a204_JuleImporter* _self_, jule::Ptr<_1e30bbeb7_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7569c9b:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1e7569c9b:;
			++it;
			goto _iter_begin_1e7569c9b;
		}
		_iter_end_1e7569c9b:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e7571bd7:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1e7573920;
					};
				}
				_iter_next_1e7571bd7:;
				++it;
				_16217_i++;
				goto _iter_begin_1e7571bd7;
			}
			_iter_end_1e7571bd7:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1e7573920:;
	};
	{ jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_2277b1ce8_Log _1e3b9c2c2_isPassBuildDirectives(_1e3b9a204_JuleImporter* _self_, jule::Ptr<_1e30224c2_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7574d50:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1e7574d50;
				};
				_1e33a449c_directiveEval _18417_de = _1e33a449c_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1e33a5811_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1e7574d50:;
			++it;
			goto _iter_begin_1e7574d50;
		}
		_iter_end_1e7574d50:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b9a204_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3ba0418_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e7595975_isCommonOrdered(jule::Slice<jule::Ptr<_1e30450c7_Struct>> _1834_s, jule::Ptr<_1e30450c7_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75969ba:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7597416:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1e7597416:;
						++it;
						goto _iter_begin_1e7597416;
					}
					_iter_end_1e7597416:;
				};
			}
			_iter_next_1e75969ba:;
			++it;
			goto _iter_begin_1e75969ba;
		}
		_iter_end_1e75969ba:;
	};
	return true;;
}

inline jule::Bool _1e759a491_isCommonOrdered(jule::Slice<jule::Ptr<_1e310ed40_Var>> _1834_s, jule::Ptr<_1e310ed40_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e759b492:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e759bddd:;
					if (it != expr_end) {
						jule::Ptr<_1e310ed40_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1e759bddd:;
						++it;
						goto _iter_begin_1e759bddd;
					}
					_iter_end_1e759bddd:;
				};
			}
			_iter_next_1e759b492:;
			++it;
			goto _iter_begin_1e759b492;
		}
		_iter_end_1e759b492:;
	};
	return true;;
}



inline void _1e7592587_orderCommon(jule::Slice<jule::Ptr<_1e30450c7_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7593368:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1e7595975_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1e75942e2:;
				}
				_iter_end_1e75942e2:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1e7593368;
				};
				(_3213_n)--;
			}
			_iter_next_1e7593368:;
			++it;
			goto _iter_begin_1e7593368;
		}
		_iter_end_1e7593368:;
	};
}

inline void _1e7596316_orderCommon(jule::Slice<jule::Ptr<_1e310ed40_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75983c3:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1e759a491_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1e7598d0d:;
				}
				_iter_end_1e7598d0d:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1e75983c3;
				};
				(_3213_n)--;
			}
			_iter_next_1e75983c3:;
			++it;
			goto _iter_begin_1e75983c3;
		}
		_iter_end_1e75983c3:;
	};
}



inline void static__1e3ba1073_orderStructures(jule::Slice<jule::Ptr<_1e30450c7_Struct>>* _5136_structs) {
	_1e7592587_orderCommon(_5136_structs);
}



inline void static__1e3ba12a4_orderVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>* _5730_vars) {
	_1e7596316_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1e3ba067c_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3ccb6ba_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1e3d112c1_optimizeChild(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309aa89_Scope>* _3938_s) {
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _4013_sdc = jule::new_ptr<_1e3d10d1a_scopeDeadCode>(_1e3d10d1a_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1e3d13bdb_optimizeStmts(_4013_sdc);
	};
}



inline void _1e3d11579_optimizeBodyChildExceptional(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309aa89_Scope>* _5053_s) {
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _5113_sdc = jule::new_ptr<_1e3d10d1a_scopeDeadCode>(_1e3d10d1a_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1e3d13bdb_optimizeStmts(_5113_sdc);
	};
}



inline void _1e3d11832_optimizeBodyChild(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309aa89_Scope>* _6142_s) {
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _6213_sdc = jule::new_ptr<_1e3d10d1a_scopeDeadCode>(_1e3d10d1a_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1e3d13bdb_optimizeStmts(_6213_sdc);
	};
}



inline void _1e3d11ada_optimizeExprModel(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1e3d15072_exprDeadCode _729_edc = static__1e3d156b0_new(&(_self_));;
	_1e3d1b5d9_optimize(&_729_edc, _7142_model);
}



inline void _1e3d11cd8_eliminateFollowed(_1e3d10d1a_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1e7618245:;
	}
	_iter_end_1e7618245:;;
}



inline void _1e3d12091_pushGoto(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309d806_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1e761b48a:;
	}
	_iter_end_1e761b48a:;;
	{ jule::Slice<jule::Ptr<_1e309d806_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1e3d12349_pushLabel(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309d42c_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1e761d558;
			};
			(_10313_i)++;
		}
	_iter_next_1e761d558:;
	}
	_iter_end_1e761d558:;;
	{ jule::Slice<jule::Ptr<_1e309d42c_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1e3d12602_optimizeRangeIter(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309c8c1_RangeIter> _11541_it) {
	_1e3d11ada_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1e3d11832_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1e3d128aa_optimizeWhileIter(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309be75_WhileIter> _12041_it) {
	_1e3d11ada_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1e3d139dd_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1e3d11832_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1e3d12b63_optimizeInfIter(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309b9be_InfIter> _12839_it) {
	_1e3d11832_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1e3d12e1b_optimizeConditional(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309b6c2_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76253d9:;
		if (it != expr_end) {
			jule::Ptr<_1e309aea7_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1e3d11ada_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1e3d11832_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1e76253d9:;
			++it;
			goto _iter_begin_1e76253d9;
		}
		_iter_end_1e76253d9:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1e3d112c1_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1e3d11832_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1e3d131c4_optimizeMatch(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309ebc0_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e762894d:;
		if (it != expr_end) {
			jule::Ptr<_1e30a0808_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7629399:;
					if (it != expr_end) {
						jule::Ptr<_1e316ee05_Data> _15225_expr = *it;
						{
							_1e3d11ada_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1e7629399:;
						++it;
						goto _iter_begin_1e7629399;
					}
					_iter_end_1e7629399:;
				};
				_1e3d11832_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1e762894d:;
			++it;
			goto _iter_begin_1e762894d;
		}
		_iter_end_1e762894d:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1e3d112c1_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1e3d11832_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1e3d1347c_optimizeAssign(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309e186_Assign> _16838_assign) {
	_1e3d11ada_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1e3d11ada_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1e3d13735_optimizeMultiAssign(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Ptr<_1e309e560_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e762d7aa:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1e3d11ada_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1e762d7aa:;
			++it;
			goto _iter_begin_1e762d7aa;
		}
		_iter_end_1e762d7aa:;
	};
	_1e3d11ada_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1e3d139dd_optimizeStmt(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e763045a:;
			{
				jule::Ptr<_1e309aa89_Scope> _18517_scope = _18236_st.cast_ptr<_1e309aa89_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1e3d1401b_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1e3d112c1_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e76304c1:;
			{
				_1e3d12602_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e7630537:;
			{
				_1e3d128aa_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e76305ae:;
			{
				_1e3d12b63_optimizeInfIter(_self_, _18236_st.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e7630636:;
			{
				_1e3d12e1b_optimizeConditional(_self_, _18236_st.cast_ptr<_1e309b6c2_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e76306ad:;
			{
				_1e3d131c4_optimizeMatch(_self_, _18236_st.cast_ptr<_1e309ebc0_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e7630735:;
			{
				_1e3d1347c_optimizeAssign(_self_, _18236_st.cast_ptr<_1e309e186_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e76307ac:;
			{
				_1e3d13735_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1e309e560_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e7630834:;
			{
				jule::Ptr<_1e316ee05_Data> _20617_d = _18236_st.cast_ptr<_1e316ee05_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1e7630317;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1e7635a7b:;
						{
							_1e3d11cd8_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1e763621e:;
						{
							_1e3d11ada_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1e76361b9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1e76308ab:;
			{
				_1e3d11cd8_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1e7630933:;
			{
				_1e3d12091_pushGoto(_self_, _18236_st.cast_ptr<_1e309d806_GotoSt>(&__jule_any_type42));
				_1e3d11cd8_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e76309aa:;
			{
				_1e3d12349_pushLabel(_self_, _18236_st.cast_ptr<_1e309d42c_Label>(&__jule_any_type21));
			}
		}
		_match_end_1e7630317:;
	};
}



inline void _1e3d13bdb_optimizeStmts(jule::Ptr<_1e3d10d1a_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1e3d139dd_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1e7638908:;
	}
	_iter_end_1e7638908:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3d10d1a_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1e3d15072_exprDeadCode static__1e3d156b0_new(jule::Ptr<_1e3d10d1a_scopeDeadCode>* _4824_s) {
	return _1e3d15072_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1e3d15968_binary(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304c2dd_BinopExprModel> _5425_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1e3d1b5d9_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1e3d15c21_unary(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304c6b7_UnaryExprModel> _5924_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1e3d15ec9_structureLit(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304d08b_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e763c489:;
		if (it != expr_end) {
			jule::Ptr<_1e304cbe5_StructArgExprModel> _6421_arg = *it;
			{
				_1e3d1b5d9_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1e763c489:;
			++it;
			goto _iter_begin_1e763c489;
		}
		_iter_end_1e763c489:;
	};
}



inline void _1e3d16282_allocStructure(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304d388_AllocStructLitExprModel> _6933_m) {
	_1e3d15ec9_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1e3d1653a_casting(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304d91b_CastingExprModel> _7326_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1e3d167e3_args(_1e3d15072_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e763e920:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1e3d1b5d9_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1e763e920:;
			++it;
			goto _iter_begin_1e763e920;
		}
		_iter_end_1e763e920:;
	};
}



inline void _1e3d16a9b_funcCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304e2bd_FnCallExprModel> _8327_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1e3d167e3_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1e3d11579_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1e3d16d54_slice(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304e697_SliceExprModel> _9124_m) {
	_1e3d167e3_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1e3d1710c_array(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30526de_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1e3d1b5d9_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1e3d167e3_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1e3d173b5_indexing(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e304eb4d_IndexingExprModel> _10227_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1e3d1b5d9_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1e3d1766d_anonFunc(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3050027_AnonFnExprModel> _10727_m) {
	_1e3d1401b_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1e3d17926_mapExpr(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30508a7_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76460b9:;
		if (it != expr_end) {
			jule::Ptr<_1e3050401_KeyValPairExprModel> _11221_pair = *it;
			{
				_1e3d1b5d9_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1e3d1b5d9_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1e76460b9:;
			++it;
			goto _iter_begin_1e76460b9;
		}
		_iter_end_1e76460b9:;
	};
}



inline void _1e3d17bce_slicing(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3050e3a_SlicingExprModel> _11826_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1e3d1b5d9_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1e3d1b5d9_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1e3d17e87_traitSub(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30514bd_TraitSubIdentExprModel> _12627_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1e3d18240_structureSub(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _13031_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1e3d184e8_tuple(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30529db_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e764a1bc:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> _13521_d = *it;
			{
				_1e3d1b5d9_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1e764a1bc:;
			++it;
			goto _iter_begin_1e764a1bc;
		}
		_iter_end_1e764a1bc:;
	};
}



inline void _1e3d187a1_newCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3053668_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1e3d1b5d9_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1e3d18a59_outCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel> _14626_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1e3d18d12_outlnCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel> _15028_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1e3d190ba_panicCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel> _15428_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1e3d19373_assertCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel> _15829_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1e3d1962b_errorCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> _16228_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1e3d198d4_makeCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1e3d1b5d9_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1e3d1b5d9_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1e3d19b8c_appendCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel> _17529_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1e3d1b5d9_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1e3d19e45_lenCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel> _18026_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1e3d1a1ed_capCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel> _18426_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1e3d1a4a6_deleteCall(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel> _18829_m) {
	_1e3d1b5d9_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1e3d1b5d9_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1e3d1a75e_sizeof(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30516aa_SizeofExprModel> _19525_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1e3d1aa17_alignof(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e305632a_AlignofExprModel> _19926_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1e3d1acc0_integratedToStr(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3056924_IntegratedToStrExprModel> _20334_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1e3d1b078_free(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e30570ea_FreeExprModel> _20723_m) {
	_1e3d1b5d9_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1e3d1b331_backendEmit(_1e3d15072_exprDeadCode* _self_, jule::Ptr<_1e3056ced_BackendEmitExprModel> _21130_m) {
	_1e3d167e3_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1e3d1b5d9_optimize(_1e3d15072_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e765d587:;
			{
				_1e3d15968_binary(_self_, (*(_21528_model)).cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e765d5ed:;
			{
				_1e3d15c21_unary(_self_, (*(_21528_model)).cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e765d664:;
			{
				_1e3d15ec9_structureLit(_self_, (*(_21528_model)).cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e765d6db:;
			{
				_1e3d16282_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1e304d388_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e765d763:;
			{
				_1e3d1653a_casting(_self_, (*(_21528_model)).cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e765d7da:;
			{
				_1e3d16a9b_funcCall(_self_, (*(_21528_model)).cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e765d862:;
			{
				_1e3d16d54_slice(_self_, (*(_21528_model)).cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1e765d8d9:;
			{
				_1e3d1710c_array(_self_, (*(_21528_model)).cast_ptr<_1e30526de_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e765d961:;
			{
				_1e3d173b5_indexing(_self_, (*(_21528_model)).cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1e765d9d8:;
			{
				_1e3d1766d_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1e3050027_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e765da60:;
			{
				_1e3d17926_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1e30508a7_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e765dad7:;
			{
				_1e3d17bce_slicing(_self_, (*(_21528_model)).cast_ptr<_1e3050e3a_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e765db5e:;
			{
				_1e3d17e87_traitSub(_self_, (*(_21528_model)).cast_ptr<_1e30514bd_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e765dbd6:;
			{
				_1e3d18240_structureSub(_self_, (*(_21528_model)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e765dc5d:;
			{
				_1e3d184e8_tuple(_self_, (*(_21528_model)).cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e765dcd5:;
			{
				_1e3d18a59_outCall(_self_, (*(_21528_model)).cast_ptr<_1e3052db5_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e765dd5c:;
			{
				_1e3d18d12_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1e305328e_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1e765ddd4:;
			{
				_1e3d187a1_newCall(_self_, (*(_21528_model)).cast_ptr<_1e3053668_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e765de5b:;
			{
				_1e3d190ba_panicCall(_self_, (*(_21528_model)).cast_ptr<_1e3053a42_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e765ded3:;
			{
				_1e3d19373_assertCall(_self_, (*(_21528_model)).cast_ptr<_1e3053ee8_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e765e05a:;
			{
				_1e3d1962b_errorCall(_self_, (*(_21528_model)).cast_ptr<_1e3055aee_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1e765e0d2:;
			{
				_1e3d198d4_makeCall(_self_, (*(_21528_model)).cast_ptr<_1e305449e_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e765e159:;
			{
				_1e3d19b8c_appendCall(_self_, (*(_21528_model)).cast_ptr<_1e3054878_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1e765e1d1:;
			{
				_1e3d19e45_lenCall(_self_, (*(_21528_model)).cast_ptr<_1e3054b75_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1e765e258:;
			{
				_1e3d1a1ed_capCall(_self_, (*(_21528_model)).cast_ptr<_1e3054e72_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e765e2d0:;
			{
				_1e3d1a4a6_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1e305534b_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e765e357:;
			{
				_1e3d1a75e_sizeof(_self_, (*(_21528_model)).cast_ptr<_1e30516aa_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e765e3ce:;
			{
				_1e3d1aa17_alignof(_self_, (*(_21528_model)).cast_ptr<_1e305632a_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e765e456:;
			{
				_1e3d1acc0_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1e3056924_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e765e4cd:;
			{
				_1e3d1b078_free(_self_, (*(_21528_model)).cast_ptr<_1e30570ea_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e765e555:;
			{
				_1e3d1b331_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1e3056ced_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1e765d2e0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3d15072_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3293ee6_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3294414_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3294711_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3294c3e_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e32952c2_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e32955be_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e32958bb_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3295cea_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e32961c4_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e329736d_scopeOptimizer> static__1e32978ac_new(jule::Ptr<_1e309aa89_Scope> _4623_scope) {
	return jule::new_ptr<_1e329736d_scopeOptimizer>(_1e329736d_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1e3297b65_setCurrentStmt(_1e329736d_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1e3297d63_removeCurrent(_1e329736d_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1e329811b_optimizeData(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e316ee05_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e76b2168:;
			{
				jule::Ptr<_1e304e2bd_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34);;
				if (_2252e7bd8_Production) {
					if (((!(_1e305e3bb_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1e329b6c4_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1e3297b65_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1e76b2113:;
	};
	static__1e329da8e_optimize(&((*(_6135_d))._field_Model));
}



inline void _1e32983c4_optimizeVar(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e310ed40_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1e329da8e_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1e329867c_optimizeConditional(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309b6c2_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76b68dc:;
		if (it != expr_end) {
			jule::Ptr<_1e309aea7_If> _8321_elif = *it;
			{
				static__1e329da8e_optimize(&((*(_8321_elif))._field_Expr));
				_1e329b053_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1e76b68dc:;
			++it;
			goto _iter_begin_1e76b68dc;
		}
		_iter_end_1e76b68dc:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1e329b053_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1e32a7625_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76b8933:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1e309aea7_If> _9821_elif = *it;
			{
				if ((!(_1e329b9d2_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1e76b8933;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1e309b2a4_Else>(_1e309b2a4_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1e76b8933;
			}
			_iter_next_1e76b8933:;
			++it;
			_9814_i++;
			goto _iter_begin_1e76b8933;
		}
		_iter_end_1e76b8933:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e309aea7_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1e309aea7_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1e329c3a6_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1e76bc085:;
	}
	_iter_end_1e76bc085:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76bd493:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1e309aea7_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1e76bd493:;
			++it;
			_13513_j++;
			goto _iter_begin_1e76bd493;
		}
		_iter_end_1e76bd493:;
	};
	if ((_13413_only != -1LL)) {
		_1e3297b65_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1e3298a9a_buildDefaultConstantTrueCase(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e30a0808_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1e309ebc0_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1e76c0e24:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1e76c095c;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1e76c2d5a:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1e76c095c;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1e76c2eae:;
					{
						goto _iter_end_1e76c095c;
					}
				}
				_match_end_1e76c2e59:;
			};
		}
	_iter_next_1e76c095c:;
	}
	_iter_end_1e76c095c:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1e3298d53_optimizeMatch(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309ebc0_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76c5874:;
		if (it != expr_end) {
			jule::Ptr<_1e30a0808_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e76c62c0:;
					if (it != expr_end) {
						jule::Ptr<_1e316ee05_Data> _17925_expr = *it;
						{
							static__1e329da8e_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1e76c62c0:;
						++it;
						goto _iter_begin_1e76c62c0;
					}
					_iter_end_1e76c62c0:;
				};
				_1e329b053_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1e76c5874:;
			++it;
			goto _iter_begin_1e76c5874;
		}
		_iter_end_1e76c5874:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1e329b053_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1e32a7625_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76c8008:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1e30a0808_Case> _19525_case = *it;
			{
				if ((!(_1e329c0dc_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1e76c8008;
				};
				_19213_constCase=true;
				_1e3298a9a_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1e76c8008;
			}
			_iter_next_1e76c8008:;
			++it;
			_19518_i++;
			goto _iter_begin_1e76c8008;
		}
		_iter_end_1e76c8008:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e30a0808_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1e30a0808_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1e329c670_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1e76cab10:;
	}
	_iter_end_1e76cab10:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76cadc9:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1e30a0808_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1e76cadc9:;
			++it;
			_22513_j++;
			goto _iter_begin_1e76cadc9;
		}
		_iter_end_1e76cadc9:;
	};
	if ((_22413_only != -1LL)) {
		_1e3297b65_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1e329910b_optimizeRangeIter(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309c8c1_RangeIter> _24140_it) {
	static__1e329da8e_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1e329b053_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1e32993b4_optimizeWhileIter(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309be75_WhileIter> _24640_it) {
	static__1e329da8e_optimize(&((*(_24640_it))._field_Expr));
	_1e329ac9a_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1e329b053_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1e3299705_substr(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e186_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e76d19e5:;
			{
				jule::Ptr<_1e3050e3a_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1e3050e3a_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1e3297b65_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e32952c2_MutSlicingExprModel>(_1e32952c2_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1e76d1990:;
	};
	return false;;
}



inline jule::Bool _1e3299a46_strAssign(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e186_Assign> _27232_a) {
	if ((!(_1e32a78de_Str))) {
		return false;;
	};
	jule::Ptr<_1e31a82c3_Prim> _2769_lp = _1e31a2d4a_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1e31ab75a_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1e3299705_substr(_self_, _27232_a);;
}



inline jule::Bool _1e3299d87_sliceAssign(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e186_Assign> _28334_a) {
	if (((!(_1e32a7ba8_Slice)) || (_1e31a3da1_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1e3299705_substr(_self_, _28334_a);;
}



inline void _1e329a140_optimizeAssign(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e186_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1e329338b_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1e3297d63_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1e3299a46_strAssign(_self_, _29137_assign) || _1e3299d87_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1e76d8a96:;
			{
				return;;
			}
		}
		_match_end_1e76d76ee:;
	};
	static__1e329da8e_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1e329da8e_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1e76da416:;
			{
				if ((_1e32a68ee_Math && (_1e31a43bd_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31321_model = jule::Any(jule::new_ptr<_1e304c2dd_BinopExprModel>(_1e304c2dd_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__1e329da8e_optimize(&(_31321_model));
					{
						auto &_match_expr{ _31321_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_1e76dd381:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_1e304bce3_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31321_model;
								return;;
							}
						}
						_match_end_1e76dd194:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str::lit("=", 1);
					return;;
				};
			}
		}
		_match_end_1e76da3b1:;
	};
	if (_1e32a65e1_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1e76e1131:;
				{
					jule::Ptr<_1e3054878_BuiltinAppendCallExprModel> _33521_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1e3054878_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1e32a5843_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33521_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33521_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1e76e3243:;
							{
								_1e3297b65_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e3295cea_PushToSliceExprModel>(_1e3295cea_PushToSliceExprModel{._field_Dest=(*(_33521_m))._field_Dest, ._field_Elems=(*(_33521_m))._field_Elements.cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1e76e2d7a:;
							{
								_1e3297b65_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e32961c4_AppendToSliceExprModel>(_1e32961c4_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33521_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1e76e2d25:;
					};
				}
			}
			_match_end_1e76e10cb:;
		};
	};
}



inline jule::Bool _1e329a481_tryOptimizeSwap(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e560_MultiAssign>* _35739_assign) {
	if (((!(_1e32a7e72_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1e30529db_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e76e59b5:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1e76e5960:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1e329338b_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _1e329338b_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_1e3297d63_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1e329338b_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1e329338b_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1e3293ee6_SwapExprModel> _38313_model = jule::new_ptr<_1e3293ee6_SwapExprModel>(_1e3293ee6_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__1e329da8e_optimize(&((*((*(_38313_model))._field_Left))._field_Model));
	static__1e329da8e_optimize(&((*((*(_38313_model))._field_Right))._field_Model));
	_1e3297b65_setCurrentStmt(_self_, jule::Any(_38313_model, &__jule_any_type123));
	return true;;
}



inline void _1e329a739_optimizeMultiAssign(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309e560_MultiAssign> _39342_assign) {
	if (_1e329a481_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76ecd0d:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__1e329da8e_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_1e76ecd0d:;
			++it;
			goto _iter_begin_1e76ecd0d;
		}
		_iter_end_1e76ecd0d:;
	};
	static__1e329da8e_optimize(&((*(_39342_assign))._field_R));
}



inline void _1e329a9e2_optimizeRet(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e30a1287_RetSt> _40634_r) {
	static__1e329da8e_optimize(&((*(_40634_r))._field_Expr));
}



inline void _1e329ac9a_optimizeStmt(_1e329736d_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e76eee42:;
			{
				_1e329b053_optimizeChild(_self_, _41035_stmt.cast_ptr<_1e309aa89_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e76eeea8:;
			{
				_1e329811b_optimizeData(_self_, _41035_stmt.cast_ptr<_1e316ee05_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e770001e:;
			{
				_1e32983c4_optimizeVar(_self_, _41035_stmt.cast_ptr<_1e310ed40_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e7700096:;
			{
				_1e329867c_optimizeConditional(_self_, _41035_stmt.cast_ptr<_1e309b6c2_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e770011d:;
			{
				_1e329910b_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e7700195:;
			{
				_1e32993b4_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e770021c:;
			{
				_1e329b053_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e7700294:;
			{
				_1e329a140_optimizeAssign(_self_, _41035_stmt.cast_ptr<_1e309e186_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e770031b:;
			{
				_1e329a739_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_1e309e560_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e7700393:;
			{
				_1e3298d53_optimizeMatch(_self_, _41035_stmt.cast_ptr<_1e309ebc0_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1e770041a:;
			{
				_1e329a9e2_optimizeRet(_self_, _41035_stmt.cast_ptr<_1e30a1287_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1e76eed10:;
	};
}



inline void _1e329b053_optimizeChild(_1e329736d_scopeOptimizer* _self_, jule::Ptr<_1e309aa89_Scope> _43736_child) {
	jule::Ptr<_1e329736d_scopeOptimizer> _43813_so = static__1e32978ac_new(_43736_child);;
	_1e329b251_optimize(_43813_so.ptr());
}



inline void _1e329b251_optimize(_1e329736d_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1e329ac9a_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1e7705ab3:;
	}
	_iter_end_1e7705ab3:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e329736d_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1e329da8e_optimize(jule::Any* _5629_model) {
	if (_1e3d1bb17_exprEnabled) {
		jule::Ptr<_1e329d4ea_exprOptimizer> _5917_exop = jule::new_ptr<_1e329d4ea_exprOptimizer>(_1e329d4ea_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1e32a5007_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1e329ddd0_strCond(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304c2dd_BinopExprModel> _6626_m) {
	jule::Ptr<_1e31a82c3_Prim> _679_lp = _1e31a2d4a_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_1e31ab75a_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e7715b4a:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1e7717564;
			}
		}
		_match_end_1e7715ae5:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e7714781:;
			{
				goto _match_end_1e7717311;
			}
		}
		else {
			_case_begin_1e7717366:;
			{
				return false;;
			}
		}
		_match_end_1e7717311:;
	};
	_julec_label_1e7717564:;
	jule::Ptr<_22893da56_Const> _8613_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1e771871e:;
			{
				if ((_228940bce_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _9021_model = jule::Any(jule::new_ptr<_1e3294414_EmptyCompareExprModel>(_1e3294414_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9021_model))))));
					goto _match_end_1e77186a8;
				};
				jule::Any _9717_model = jule::Any(jule::new_ptr<_1e3294c3e_StrCompExprModel>(_1e3294c3e_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9717_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1e7718796:;
			{
				if ((_228940bce_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _10521_model = jule::Any(jule::new_ptr<_1e3294414_EmptyCompareExprModel>(_1e3294414_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10521_model))))));
					goto _match_end_1e77186a8;
				};
				jule::Any _11217_model = jule::Any(jule::new_ptr<_1e3294c3e_StrCompExprModel>(_1e3294c3e_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11217_model))))));
			}
		}
		_match_end_1e77186a8:;
	};
	return true;;
}



inline void _1e329e188_binary(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304c2dd_BinopExprModel> _12225_m) {
	static__1e329da8e_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__1e329da8e_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e7717443:;
			{
				goto _match_end_1e7720b77;
			}
		}
		else {
			_case_begin_1e7720bcc:;
			{
				return;;
			}
		}
		_match_end_1e7720b77:;
	};
	if ((_1e32a7625_Cond && _1e329ddd0_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_1e32a68ee_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e7721dcb:;
			{
				jule::Bool _14213_ok = false;;
				jule::U64 _14217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e32a547a_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14213_ok = __jule_assign_result.__jule_result_arg0;
					_14217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14213_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_22893da56_Const> _14621_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
					_228941c79_SetU64(_14621_c.ptr(), _14217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1e7721e53:;
			{
				jule::Bool _15113_ok = false;;
				jule::U64 _15117_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e32a547a_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15113_ok = __jule_assign_result.__jule_result_arg0;
					_15117_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15113_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_22893da56_Const> _15521_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
					_228941c79_SetU64(_15521_c.ptr(), _15117_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e7721eca:;
			{
				jule::Ptr<_22893da56_Const> _16017_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
				jule::F64 _16113_d = _228941718_AsF64(_16017_c.ptr());;
				if ((_16113_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_2289419c1_SetI64(_16017_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1e7721d54:;
	};
	jule::Any _16813_model = jule::Any(jule::new_ptr<_1e32955be_UnsafeBinopExprModel>(_1e32955be_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16813_model))))));
}



inline void _1e329e441_unary(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304c6b7_UnaryExprModel> _17224_m) {
	static__1e329da8e_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_1e32a724b_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e772a302:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1e772bde7:;
						{
							jule::Ptr<_1e304c6b7_UnaryExprModel> _18121_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18121_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18121_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1e772bd92:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1e772b28c:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e772e01a:;
						{
							jule::Ptr<_1e310ed40_Var> _18921_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
							if ((*(_18921_v))._field_Reference) {
								jule::Any _19125_model = jule::Any(jule::new_ptr<_1e3294711_RefExprModel>(_1e3294711_RefExprModel{._field_Var=_18921_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19125_model))))));
							};
						}
					}
					_match_end_1e772deb5:;
				};
			}
		}
		_match_end_1e772b17c:;
	};
}



inline void _1e329e6e9_structureLit(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304d08b_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7730912:;
		if (it != expr_end) {
			jule::Ptr<_1e304cbe5_StructArgExprModel> _19921_arg = *it;
			{
				static__1e329da8e_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_1e7730912:;
			++it;
			goto _iter_begin_1e7730912;
		}
		_iter_end_1e7730912:;
	};
}



inline void _1e329e9a2_allocStructure(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304d388_AllocStructLitExprModel> _20433_m) {
	_1e329e6e9_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _1e329ec5a_casting(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304d91b_CastingExprModel> _20826_m) {
	static__1e329da8e_optimize(&((*(_20826_m))._field_Expr));
}



inline void _1e32a0013_args(_1e329d4ea_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e77329ad:;
		if (it != expr_end) {
			jule::I64 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__1e329da8e_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_1e77329ad:;
			++it;
			_21314_i++;
			goto _iter_begin_1e77329ad;
		}
		_iter_end_1e77329ad:;
	};
}



inline void _1e32a02bb_scope(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e309aa89_Scope>* _21925_s) {
	jule::Ptr<_1e329736d_scopeOptimizer> _22013_scopt = static__1e32978ac_new((*(_21925_s)));;
	_1e329b251_optimize(_22013_scopt.ptr());
}



inline void _1e32a0574_funcCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304e2bd_FnCallExprModel> _22427_m) {
	static__1e329da8e_optimize(&((*(_22427_m))._field_Expr));
	_1e32a0013_args(_self_, &((*(_22427_m))._field_Args));
	if (((*(_22427_m))._field_Except != nullptr)) {
		_1e32a02bb_scope(_self_, &((*(_22427_m))._field_Except));
	};
}



inline void _1e32a082c_slice(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304e697_SliceExprModel> _23224_m) {
	_1e32a0013_args(_self_, &((*(_23224_m))._field_Elems));
}



inline void _1e32a0ad5_array(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30526de_ArrayExprModel> _23624_m) {
	if ((((*(_23624_m))._field_Elems.len() == 2LL) && ((*(_23624_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _23817_elem = (*(_23624_m))._field_Elems[0LL];;
		static__1e329da8e_optimize(&(_23817_elem));
		(*(_23624_m))._field_Elems[0LL]=_23817_elem;
	};
	_1e32a0013_args(_self_, &((*(_23624_m))._field_Elems));
}



inline void _1e32a0d8d_indexing(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e304eb4d_IndexingExprModel> _24527_m) {
	static__1e329da8e_optimize(&((*((*(_24527_m))._field_Expr))._field_Model));
	static__1e329da8e_optimize(&((*((*(_24527_m))._field_Index))._field_Model));
	if ((!(_1e32a6bb8_Access))) {
		return;;
	};
	jule::Bool _2519_array = (_1e31a3b1a_Arr((*((*(_24527_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_2519_array && _1e31707c9_IsConst((*(_24527_m))._field_Index.ptr()))) {
		jule::Any _25417_model = jule::Any(jule::new_ptr<_1e32958bb_UnsafeIndexingExprModel>(_1e32958bb_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_25417_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_24527_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e773b70e:;
			{
				jule::Ptr<_1e310ed40_Var> _26013_i = (*((*(_24527_m))._field_Index))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
				if (((*(_26013_i))._field_Mutable || ((*(_26013_i))._field_IterRelation == nullptr))) {
					goto _match_end_1e773b6a9;
				};
				{
					auto &_match_expr{ (*((*(_24527_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e773d359:;
						{
							jule::Ptr<_1e310ed40_Var> _26617_r = (*((*(_24527_m))._field_Expr))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
							if (((*((*(_26013_i))._field_IterRelation))._field_Range == _26617_r)) {
								jule::Any _26925_model = jule::Any(jule::new_ptr<_1e32958bb_UnsafeIndexingExprModel>(_1e32958bb_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26925_model))))));
							};
						}
					}
					_match_end_1e773d304:;
				};
			}
		}
		_match_end_1e773b6a9:;
	};
}



inline void _1e32a1146_anonFunc(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3050027_AnonFnExprModel> _27627_m) {
	_1e32a02bb_scope(_self_, &((*((*(_27627_m))._field_Func))._field_Scope));
}



inline void _1e32a13ee_mapExpr(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30508a7_MapExprModel> _28026_m) {
	{
		auto expr = &((*(_28026_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7740bdb:;
		if (it != expr_end) {
			jule::Ptr<_1e3050401_KeyValPairExprModel> _28121_pair = *it;
			{
				static__1e329da8e_optimize(&((*(_28121_pair))._field_Key));
				static__1e329da8e_optimize(&((*(_28121_pair))._field_Val));
			}
			_iter_next_1e7740bdb:;
			++it;
			goto _iter_begin_1e7740bdb;
		}
		_iter_end_1e7740bdb:;
	};
}



inline void _1e32a16a7_slicing(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3050e3a_SlicingExprModel> _28726_m) {
	static__1e329da8e_optimize(&((*(_28726_m))._field_Expr));
	static__1e329da8e_optimize(&((*(_28726_m))._field_Left));
	if (((*(_28726_m))._field_Right != nullptr)) {
		static__1e329da8e_optimize(&((*(_28726_m))._field_Right));
	};
}



inline void _1e32a1960_traitSub(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30514bd_TraitSubIdentExprModel> _29527_m) {
	static__1e329da8e_optimize(&((*(_29527_m))._field_Expr));
}



inline void _1e32a1c18_structureSub(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _29931_m) {
	static__1e329da8e_optimize(&((*((*(_29931_m))._field_Expr))._field_Model));
}



inline void _1e32a1ec1_tuple(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30529db_TupleExprModel> _30324_m) {
	{
		auto expr = &((*(_30324_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7744030:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> _30421_d = *it;
			{
				static__1e329da8e_optimize(&((*(_30421_d))._field_Model));
			}
			_iter_next_1e7744030:;
			++it;
			goto _iter_begin_1e7744030;
		}
		_iter_end_1e7744030:;
	};
}



inline void _1e32a2279_newCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3053668_BuiltinNewCallExprModel> _30926_m) {
	if (((*(_30926_m))._field_Init != nullptr)) {
		static__1e329da8e_optimize(&((*(_30926_m))._field_Init));
	};
}



inline void _1e32a2532_outCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel> _31526_m) {
	static__1e329da8e_optimize(&((*(_31526_m))._field_Expr));
}



inline void _1e32a27da_outlnCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel> _31928_m) {
	static__1e329da8e_optimize(&((*(_31928_m))._field_Expr));
}



inline void _1e32a2a93_panicCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel> _32328_m) {
	static__1e329da8e_optimize(&((*(_32328_m))._field_Expr));
}



inline void _1e32a2d4b_assertCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel> _32729_m) {
	static__1e329da8e_optimize(&((*(_32729_m))._field_Expr));
}



inline void _1e32a3104_errorCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> _33128_m) {
	static__1e329da8e_optimize(&((*((*(_33128_m))._field_Err))._field_Model));
}



inline void _1e32a33ac_makeCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel> _33527_m) {
	if (((*(_33527_m))._field_Len != nullptr)) {
		static__1e329da8e_optimize(&((*(_33527_m))._field_Len));
	};
	if (((*(_33527_m))._field_Cap != nullptr)) {
		static__1e329da8e_optimize(&((*(_33527_m))._field_Cap));
	};
}



inline void _1e32a3665_appendCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel> _34429_m) {
	static__1e329da8e_optimize(&((*(_34429_m))._field_Dest));
	static__1e329da8e_optimize(&((*(_34429_m))._field_Elements));
}



inline void _1e32a391d_lenCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel> _34926_m) {
	static__1e329da8e_optimize(&((*((*(_34926_m))._field_Expr))._field_Model));
}



inline void _1e32a3bc6_capCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel> _35326_m) {
	static__1e329da8e_optimize(&((*((*(_35326_m))._field_Expr))._field_Model));
}



inline void _1e32a3e7e_deleteCall(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel> _35729_m) {
	static__1e329da8e_optimize(&((*((*(_35729_m))._field_Dest))._field_Model));
	if (((*(_35729_m))._field_Key != nullptr)) {
		static__1e329da8e_optimize(&((*((*(_35729_m))._field_Key))._field_Model));
	};
}



inline void _1e32a4237_sizeof(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30516aa_SizeofExprModel> _36425_m) {
	static__1e329da8e_optimize(&((*(_36425_m))._field_Expr));
}



inline void _1e32a44e0_alignof(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e305632a_AlignofExprModel> _36826_m) {
	static__1e329da8e_optimize(&((*(_36826_m))._field_Expr));
}



inline void _1e32a4798_integratedToStr(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3056924_IntegratedToStrExprModel> _37234_m) {
	static__1e329da8e_optimize(&((*(_37234_m))._field_Expr));
}



inline void _1e32a4a51_free(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e30570ea_FreeExprModel> _37623_m) {
	static__1e329da8e_optimize(&((*(_37623_m))._field_Expr));
}



inline void _1e32a4d09_backendEmit(_1e329d4ea_exprOptimizer* _self_, jule::Ptr<_1e3056ced_BackendEmitExprModel> _38030_m) {
	_1e32a0013_args(_self_, &((*(_38030_m))._field_Exprs));
}



inline void _1e32a5007_do(_1e329d4ea_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e774e315:;
			{
				_1e329e188_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e774e37b:;
			{
				_1e329e441_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e774e3e2:;
			{
				_1e329e6e9_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e774e469:;
			{
				_1e329e9a2_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304d388_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e774e4e1:;
			{
				_1e329ec5a_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e774e568:;
			{
				_1e32a0574_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e774e5e0:;
			{
				_1e32a082c_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1e774e667:;
			{
				_1e32a0ad5_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30526de_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e774e6de:;
			{
				_1e32a0d8d_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1e774e766:;
			{
				_1e32a1146_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3050027_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e774e7dd:;
			{
				_1e32a13ee_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30508a7_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e774e865:;
			{
				_1e32a16a7_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3050e3a_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e774e8dc:;
			{
				_1e32a1960_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30514bd_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e774e964:;
			{
				_1e32a1c18_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e774e9db:;
			{
				_1e32a1ec1_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e774ea63:;
			{
				_1e32a2532_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3052db5_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e774eada:;
			{
				_1e32a27da_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e305328e_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1e774eb62:;
			{
				_1e32a2279_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3053668_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e774ebd9:;
			{
				_1e32a2a93_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3053a42_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e774ec61:;
			{
				_1e32a2d4b_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3053ee8_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e774ecd8:;
			{
				_1e32a3104_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3055aee_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1e774ed60:;
			{
				_1e32a33ac_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e305449e_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e774edd7:;
			{
				_1e32a3665_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3054878_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1e774ee5e:;
			{
				_1e32a391d_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3054b75_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1e774eed6:;
			{
				_1e32a3bc6_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3054e72_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e775005d:;
			{
				_1e32a3e7e_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e305534b_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e77500d5:;
			{
				_1e32a4237_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30516aa_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e775015c:;
			{
				_1e32a44e0_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e305632a_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e77501d4:;
			{
				_1e32a4798_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3056924_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e775025b:;
			{
				_1e32a4a51_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e30570ea_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e77502d3:;
			{
				_1e32a4d09_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e3056ced_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1e774e06d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e329d4ea_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3d1c134_Optimizer> static__1e3d1c5a7_New(jule::Ptr<_1e3b9cbb8_IR>* _2624_ir) {
	return jule::new_ptr<_1e3d1c134_Optimizer>(_1e3d1c134_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1e3d1c860_optimizeGlobal(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e310ed40_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1e329da8e_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1e3d1cb18_optimizeFunction(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e305a032_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e77644a1:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1e329736d_scopeOptimizer> _4317_so = static__1e32978ac_new((*(_4221_ins))._field_Scope);;
				_1e329b251_optimize(_4317_so.ptr());
			}
			_iter_next_1e77644a1:;
			++it;
			goto _iter_begin_1e77644a1;
		}
		_iter_end_1e77644a1:;
	};
}



inline void _1e3d1cdc1_optimizeStruct(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e30450c7_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7764e63:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e776656e:;
					if (it != expr_end) {
						jule::Ptr<_1e30472a5_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1e329da8e_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1e776656e:;
						++it;
						goto _iter_begin_1e776656e;
					}
					_iter_end_1e776656e:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7767a37:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _5825_m = *it;
						{
							_1e3d1cb18_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1e7767a37:;
						++it;
						goto _iter_begin_1e7767a37;
					}
					_iter_end_1e7767a37:;
				};
			}
			_iter_next_1e7764e63:;
			++it;
			goto _iter_begin_1e7764e63;
		}
		_iter_end_1e7764e63:;
	};
}



inline void _1e3d1d179_optimizeGlobals(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e30beddd_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7767d89:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7768b26:;
					if (it != expr_end) {
						jule::Ptr<_1e310ed40_Var> _6625_v = *it;
						{
							_1e3d1c860_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1e7768b26:;
						++it;
						goto _iter_begin_1e7768b26;
					}
					_iter_end_1e7768b26:;
				};
			}
			_iter_next_1e7767d89:;
			++it;
			goto _iter_begin_1e7767d89;
		}
		_iter_end_1e7767d89:;
	};
}



inline void _1e3d1d432_optimizeFunctions(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e30beddd_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e77692db:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e776a067:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _7425_func = *it;
						{
							_1e3d1cb18_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1e776a067:;
						++it;
						goto _iter_begin_1e776a067;
					}
					_iter_end_1e776a067:;
				};
			}
			_iter_next_1e77692db:;
			++it;
			goto _iter_begin_1e77692db;
		}
		_iter_end_1e77692db:;
	};
}



inline void _1e3d1d6da_optimizeStructs(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e30beddd_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e776a72c:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e776b4a8:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> _8225_s = *it;
						{
							_1e3d1cdc1_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1e776b4a8:;
						++it;
						goto _iter_begin_1e776b4a8;
					}
					_iter_end_1e776b4a8:;
				};
			}
			_iter_next_1e776a72c:;
			++it;
			goto _iter_begin_1e776a72c;
		}
		_iter_end_1e776a72c:;
	};
}



inline void _1e3d1d993_optimizePackage(_1e3d1c134_Optimizer* _self_, jule::Ptr<_1e30beddd_Package>* _8839_p) {
	_1e3d1d179_optimizeGlobals(_self_, _8839_p);
	_1e3d1d432_optimizeFunctions(_self_, _8839_p);
	_1e3d1d6da_optimizeStructs(_self_, _8839_p);
}



inline void _1e3d1db91_Optimize(_1e3d1c134_Optimizer* _self_) {
	_1e3d1de16_detectEnabled();
	if (_1e32a6327_Deadcode) {
		_1e3d0e412_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1e3d1be25_scopeEnabled || _1e3d1bb17_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e776d0ae:;
			if (it != expr_end) {
				jule::Ptr<_1e30bbeb7_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1e3d1d993_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1e776d0ae:;
				++it;
				goto _iter_begin_1e776d0ae;
			}
			_iter_end_1e776d0ae:;
		};
		_1e3d1d993_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1e32a6327_Deadcode) {
		_1e3d149ab_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e3d1c134_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1e3d4407e_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1e3d1e312_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1e3d4407e_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1e3d45190_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1e3d46a87_LogFlat(_2277b1ce8_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1e3d46cb8_LogError(_2277b1ce8_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1e3d4407e_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_22892d7e3_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_22892d7e3_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _227705dc4_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_227705dc4_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _22892d7e3_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_2276ed680_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_2276ed680_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_2276ed680_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1e3d1e312_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1e3d46ee9_Log(_2277b1ce8_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1e777b188:;
			{
				static__1e3d46a87_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1e777b210:;
			{
				static__1e3d46cb8_LogError(_6520_l);
			}
		}
		_match_end_1e777ac7b:;
	};
}



inline void static__1e3d4722a_PrintLogs(jule::Slice<_2277b1ce8_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7776da9:;
		if (it != expr_end) {
			_2277b1ce8_Log *_7616_l = it;
			{
				static__1e3d46ee9_Log(_7616_l);
			}
			_iter_next_1e7776da9:;
			++it;
			goto _iter_begin_1e7776da9;
		}
		_iter_end_1e7776da9:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_22892d7e3_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1e3d467bd_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e4775d01_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1e47764c7_Time static__1e477687e_Unix(jule::U64 _9120_sec) {
	return _1e47764c7_Time{._field_sec=_9120_sec};;
}



inline _1e47764c7_Time static__1e4776a8d_Now(void) {
	return static__1e477687e_Unix(static_cast<jule::U64>(_1e47785b7_unix()));;
}



inline _1e4775d01_AbsTime _1e4778276_Abs(_1e47764c7_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1e47752c8_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1e47752c8_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1e77b050d:;
	}
	_iter_end_1e77b050d:;;
	_1e4775d01_AbsTime _17413_t = _1e4775d01_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e47764c7_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4699373_scopeCoder> static__1e469998e_new(jule::Ptr<_1e4780b1e_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_1e4699373_scopeCoder>(_1e4699373_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _1e784e46a_iterHead(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309c8c1_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1e32a6019_Copy && _1e46a09c8_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e7850b64:;
				{
					jule::Ptr<_1e310ed40_Var> _8117_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
					if ((*(_8117_v))._field_Reference) {
						_1e46b0851_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_1e7852e63;
					};
					goto _case_begin_1e7852eb8;
				}
			}
			else {
				_case_begin_1e7852eb8:;
				{
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1e46b0851_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1e7852e63:;
		};
	} else {
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, (*(_7256_begin)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
}



inline void _1e469a165_rangeIndexIter(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309c8c1_RangeIter>* _12139_it) {
	jule::Str _1229_begin = static__1e46b912e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _1239_next = static__1e46b96b2_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12513_ref = false;;
	_1e784e46a_iterHead(_self_, _12139_it, &(_12513_ref), &(_1229_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1e4788b8d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12513_ref) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_1e32a6019_Copy && _1e46a0d91_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_1e4788b8d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	_1e46a0357_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, _1239_next);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1e47818bc_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, static__1e46b8d65_var((*((*(_12139_it))))._field_KeyA));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1e47812c3_write((*(_self_))._field_oc, _1229_begin);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b93e8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e469a41d_rangeHashmapIter(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309c8c1_RangeIter>* _18441_it) {
	jule::Str _1859_begin = static__1e46b912e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _1869_next = static__1e46b96b2_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18813_ref = false;;
	_1e784e46a_iterHead(_self_, _18441_it, &(_18813_ref), &(_1859_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_1e4788b8d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_1e4788b8d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	_1e46a0357_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, _1869_next);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1e47812c3_write((*(_self_))._field_oc, _1859_begin);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b93e8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e469a6c6_ifCase(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309aea7_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1e46a0357_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _1e469a97e_conditional(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309b6c2_Conditional> _23635_c) {
	jule::Bool _23713_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e788158a:;
		if (it != expr_end) {
			jule::Ptr<_1e309aea7_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_1e788158a;
				};
				if (_23713_writed) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_23713_writed=true;
				_1e469a6c6_ifCase(_self_, _23821_elif);
			}
			_iter_next_1e788158a:;
			++it;
			goto _iter_begin_1e788158a;
		}
		_iter_end_1e788158a:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23713_writed) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1e46a0357_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _1e469ac37_infIter(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309b9be_InfIter> _25631_it) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e46a0357_scope(_self_, (*(_25631_it))._field_Scope);
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b96b2_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b93e8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1e469aee0_whileIter(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309be75_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_1e469ece6_st(_self_, (*(_27333_it))._field_Next);
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e46a0357_scope(_self_, (*(_27333_it))._field_Scope);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b96b2_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b93e8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1e469b298_rangeIter(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309c8c1_RangeIter> _30633_it) {
	{
		
		if ((_1e31a3da1_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e7895bdc:;
			{
				_1e469a165_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1e31a3b1a_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e78958ac:;
			{
				_1e469a165_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1e31a48da_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e7895923:;
			{
				_1e469a41d_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_1e7895846:;
			{
				_1e469a165_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_1e789577a:;
	};
}



inline void _1e469b551_cont(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309cc56_ContSt> _31924_c) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b96b2_iterNext((*(_31924_c))._field_It));
}



inline void _1e469b809_label(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309d42c_Label> _32425_l) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b997b_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1e469bab2_gotoSt(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309d806_GotoSt> _32926_gt) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b997b_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _1e469bd6a_postfix(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309dbd0_Postfix> _33431_p) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1e47812c3_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _1e469c123_assign(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309e186_Assign> _34130_a) {
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _1e469c3cb_mapLookupAssign(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309e560_MultiAssign>* _34740_a) {
	jule::Ptr<_1e304eb4d_IndexingExprModel> _34813_iem = (*((*(_34740_a))))._field_R.cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45);;
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Expr))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Index))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e469c684_multiAssignTup(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309e560_MultiAssign>* _37039_a) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1e30529db_TupleExprModel> _37413_tup = (*((*(_37039_a))))._field_R.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_37413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e78ab53d:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _37621_r = *it;
			{
				_1e47818bc_indent((*(_self_))._field_oc);
				jule::Ptr<_1e316ee05_Data> _37817_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1e78ae1cd:;
							{
								jule::Ptr<_1e310ed40_Var> _38225_v = (*(_37817_l))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
								if (((*(_38225_v))._field_Reference && (!(_1e31101c5_IsInitialized(_38225_v.ptr()))))) {
									_1e47812c3_write((*(_self_))._field_oc, static__1e46b8d65_var(_38225_v));
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_1e78ab53d;
								};
							}
						}
						_match_end_1e78ae178:;
					};
					_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37817_l))._field_Kind));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					_1e47812c3_write((*(_self_))._field_oc, static__1e46b7209_toOut(&(_1e4698c46_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e78ab53d:;
			++it;
			_37614_i++;
			goto _iter_begin_1e78ab53d;
		}
		_iter_end_1e78ab53d:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e78b513a:;
		if (it != expr_end) {
			jule::I64 _40314_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_1e78b513a;
				};
				_1e47818bc_indent((*(_self_))._field_oc);
				_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1e47812c3_write((*(_self_))._field_oc, static__1e46b7209_toOut(&(_1e4698c46_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e78b513a:;
			++it;
			_40314_i++;
			goto _iter_begin_1e78b513a;
		}
		_iter_end_1e78b513a:;
	};
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1e469c93c_multiAssignFn(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309e560_MultiAssign>* _41938_a) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	jule::Ptr<_1e304e2bd_FnCallExprModel> _42413_f = (*((*(_41938_a))))._field_R.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34);;
	_1e479ac38_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42413_f))._field_Func))._field_Result));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e78bd4ea:;
		if (it != expr_end) {
			jule::I64 _43014_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_1e47818bc_indent((*(_self_))._field_oc);
					_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
					_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_43014_i));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1e78bd4ea:;
			++it;
			_43014_i++;
			goto _iter_begin_1e78bd4ea;
		}
		_iter_end_1e78bd4ea:;
	};
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1e469cbe5_multiAssign(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309e560_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e78c380d:;
			{
				_1e469c3cb_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_1e78c37a8:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e78c3ca3:;
			{
				_1e469c684_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e78c3478:;
			{
				_1e469c93c_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_1e78c3be8:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_1e78c3b93:;
	};
}



inline jule::Fn<void(void)> _1e469d036_matchExpr(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309ebc0_Match> _46333_m) {
	if ((!(_1e31707c9_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_228943044_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_228940948_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1e469d399_case(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309ebc0_Match> _47328_m, jule::Ptr<_1e30a0808_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e78ca837:;
			if (it != expr_end) {
				jule::I64 _48018_i = it - expr->begin();
				jule::Ptr<_1e316ee05_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_1e7830605:;
							{
								jule::Fn<void(void)> _48321_caseExpr = _1e469d036_matchExpr(_self_, _47328_m);;
								if (_1e3170b1a_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48321_caseExpr != nullptr)) {
										_48321_caseExpr();
										_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48321_caseExpr != nullptr)) {
										_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_48321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1e78cc31c:;
							{
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1e31a06e9_TypeKind> _49925_tk = (*(_48025_expr))._field_Model.cast_ptr<_1e31a06e9_TypeKind>(&__jule_any_type83);;
								if ((_1e31a4654_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1e46a3e1b_boolean((*((*(_self_))._field_oc))._field_ec, (_1e31a30d1_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>(_1e4782da7_findTypeOffset((*(_self_))._field_oc.ptr(), _1e31a4654_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _50725_j = _1e478204e_pushAnyType((*(_self_))._field_oc, _49925_tk);;
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_50725_j));
								};
							}
						}
						_match_end_1e78cc251:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1e78ca837:;
				++it;
				_48018_i++;
				goto _iter_begin_1e78ca837;
			}
			_iter_end_1e78ca837:;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_1e47818bc_indent((*(_self_))._field_oc);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46ba00e_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1e47818bc_indent((*(_self_))._field_oc);
		_1e46a0357_scope(_self_, (*(_47343_c))._field_Scope);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e469d652_matchSt(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309ebc0_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_1e31707c9_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_1e32a6019_Copy && _1e46a09c8_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1e47818bc_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e78e68b9:;
			if (it != expr_end) {
				jule::Ptr<_1e30a0808_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1e78e68b9;
					};
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1e47818bc_indent((*(_self_))._field_oc);
					_1e469d399_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_1e78e68b9:;
				++it;
				goto _iter_begin_1e78e68b9;
			}
			_iter_end_1e78e68b9:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1e469d399_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b9c45_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e469d90a_fallSt(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e30a0e02_FallSt> _59626_f) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46ba00e_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _1e469dbb3_breakSt(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309d130_BreakSt> _60127_b) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_1e47812c3_write((*(_self_))._field_oc, static__1e46b93e8_iterEnd((*(_60127_b))._field_It));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, static__1e46b9c45_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _1e469de6b_setResult(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e30a1287_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1e47818bc_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1e316ee05_Data>> _61813_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_61813_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e79048d8:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _61916_data = *it;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_61913_i));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1e47818bc_indent((*(_self_))._field_oc);
			}
			_iter_next_1e79048d8:;
			++it;
			_61913_i++;
			goto _iter_begin_1e79048d8;
		}
		_iter_end_1e79048d8:;
	};
}



inline void _1e469e224_retSt(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e30a1287_RetSt> _62929_r) {
	if (_1e305a4a5_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_1e469de6b_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1e479ac38_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1e469e4cc_var(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e310ed40_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_1e4788e46_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _1e469e785_mutSlicing(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e32952c2_MutSlicingExprModel> _67134_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2252e7bd8_Production))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1e469ea3d_swap(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e3293ee6_SwapExprModel> _68828_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1e46a6836_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e469ece6_st(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e852e974:;
			{
				_1e46a0357_scope(_self_, _69726_st.cast_ptr<_1e309aa89_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e8530513:;
			{
				_1e469e4cc_var(_self_, _69726_st.cast_ptr<_1e310ed40_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e8530579:;
			{
				_1e46b0851_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_1e316ee05_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e85305e0:;
			{
				_1e469a97e_conditional(_self_, _69726_st.cast_ptr<_1e309b6c2_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e8530656:;
			{
				_1e469ac37_infIter(_self_, _69726_st.cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e85306bc:;
			{
				_1e469aee0_whileIter(_self_, _69726_st.cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e8530733:;
			{
				_1e469b298_rangeIter(_self_, _69726_st.cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1e8530799:;
			{
				_1e469b551_cont(_self_, _69726_st.cast_ptr<_1e309cc56_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e8530810:;
			{
				_1e469b809_label(_self_, _69726_st.cast_ptr<_1e309d42c_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1e8530876:;
			{
				_1e469bab2_gotoSt(_self_, _69726_st.cast_ptr<_1e309d806_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1e85308dc:;
			{
				_1e469bd6a_postfix(_self_, _69726_st.cast_ptr<_1e309dbd0_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e8530953:;
			{
				_1e469c123_assign(_self_, _69726_st.cast_ptr<_1e309e186_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e85309b9:;
			{
				_1e469cbe5_multiAssign(_self_, _69726_st.cast_ptr<_1e309e560_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e8530a30:;
			{
				_1e469d652_matchSt(_self_, _69726_st.cast_ptr<_1e309ebc0_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e8530aa7:;
			{
				_1e469d90a_fallSt(_self_, _69726_st.cast_ptr<_1e30a0e02_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1e8530b2e:;
			{
				_1e469dbb3_breakSt(_self_, _69726_st.cast_ptr<_1e309d130_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1e8530ba6:;
			{
				_1e469e224_retSt(_self_, _69726_st.cast_ptr<_1e30a1287_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1e8530c2d:;
			{
				_1e46ad5da_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1e3295cea_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1e8530ca5:;
			{
				_1e46ad893_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1e32961c4_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1e8530d2c:;
			{
				_1e469e785_mutSlicing(_self_, _69726_st.cast_ptr<_1e32952c2_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1e8530da4:;
			{
				_1e469ea3d_swap(_self_, _69726_st.cast_ptr<_1e3293ee6_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1e852ea2e:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1e852e5cd:;
	};
}



inline void _1e46a009e_scopeStmts(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309aa89_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85323d3:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_1e47818bc_indent((*(_self_))._field_oc);
				_1e469ece6_st(_self_, _75021_st);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e85323d3:;
			++it;
			goto _iter_begin_1e85323d3;
		}
		_iter_end_1e85323d3:;
	};
}



inline void _1e46a0357_scope(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e309aa89_Scope> _75829_s) {
	_1e47814c1_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e46a009e_scopeStmts(_self_, &(_75829_s));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1e46a0610_funcScope(jule::Ptr<_1e4699373_scopeCoder> _self_, jule::Ptr<_1e305ce36_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	if ((!(_1e305a4a5_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_1e31ad3b6_Tuple> _78117_tup = _1e31a4b71_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78117_tup != nullptr)) {
			_1e47818bc_indent((*(_self_))._field_oc);
			_1e479a562_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78117_tup);
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78117_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e8546073:;
				if (it != expr_end) {
					jule::I64 _78622_i = it - expr->begin();
					jule::Ptr<_1e31a06e9_TypeKind> _78629_t = *it;
					{
						if (_1e479d136_shouldInitialized(&(_78629_t))) {
							_1e47818bc_indent((*(_self_))._field_oc);
							_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_78622_i));
							_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1e46b0b09_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1e8546073:;
					++it;
					_78622_i++;
					goto _iter_begin_1e8546073;
				}
				_iter_end_1e8546073:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1e47818bc_indent((*(_self_))._field_oc);
			_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1e479d136_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1e46b0b09_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1e46a009e_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _1e305a4a5_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_1e47818bc_indent((*(_self_))._field_oc);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1e4699373_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46a34e2_exprCoder> static__1e46a38aa_new(jule::Ptr<_1e4780b1e_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1e46a34e2_exprCoder>(_1e46a34e2_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1e46a3b63_string(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_22893da56_Const>* _11127_c) {
	jule::Str _1129_content = _228940bce_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _22892d529_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1e46b18eb_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _1129_content);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1e47812c3_write((*(_self_))._field_oc, _1179_len);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a3e1b_boolean(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1e46a4119_nilLit(jule::Ptr<_1e46a34e2_exprCoder> _self_) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1e46a445a_ftoaSpecialCases(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_2288d2555_IsNaN((*(_13837_x)))) {
			_case_begin_1e856ad01:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_2288d2b60_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1e856ad78:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_2288d2b60_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1e856ae00:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1e856ac24:;
			{
				return false;;
			}
		}
		_match_end_1e856ab58:;
	};
	return true;;
}



inline void _1e46a4713_float32(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_22893da56_Const>* _15228_c) {
	jule::F64 _1539_x = _228941718_AsF64((*(_15228_c)).ptr());;
	if (_1e46a445a_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1e856e2cc:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1e856e024:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1e856dead:;
			{
				_1e46b1c92_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1539_x, 32LL);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1e856dc7c:;
	};
}



inline void _1e46a49bb_float64(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_22893da56_Const>* _17128_c) {
	jule::F64 _1729_x = _228941718_AsF64((*(_17128_c)).ptr());;
	if (_1e46a445a_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1e85726dc:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1e8572e6d:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1e85723bd:;
			{
				_1e46b1c92_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1729_x, 64LL);
			}
		}
		_match_end_1e857218c:;
	};
}



inline void _1e46a4c74_constant(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_22893da56_Const> _18932_c) {
	{
		
		if (_2289432ca_IsStr(_18932_c.ptr())) {
			_case_begin_1e8574aa7:;
			{
				_1e46a3b63_string(_self_, &(_18932_c));
			}
		}
		else if (_228943044_IsBool(_18932_c.ptr())) {
			_case_begin_1e857469a:;
			{
				_1e46a3e1b_boolean(_self_, _228940948_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_228943561_IsF64(_18932_c.ptr())) {
			_case_begin_1e8574722:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1e857725d:;
						{
							_1e46a4713_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1e8576cc9:;
						{
							_1e46a49bb_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1e8576c1e:;
				};
			}
		}
		else if (_228942a27_IsI64(_18932_c.ptr())) {
			_case_begin_1e8574799:;
			{
				_1e46b207d_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_22894042b_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_228942cad_IsU64(_18932_c.ptr())) {
			_case_begin_1e8574821:;
			{
				_1e46b2369_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_2289406b2_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_2289437e7_IsNil(_18932_c.ptr())) {
			_case_begin_1e857525b:;
			{
				_1e46a4119_nilLit(_self_);
			}
		}
		else {
			_case_begin_1e8574623:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1e8574557:;
	};
}



inline void _1e46a5192_divByZeroBinary(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_20cb74604_Token>* _21336_op, jule::Ptr<_1e304bce3_OperandExprModel>* _21353_l, jule::Ptr<_1e304bce3_OperandExprModel>* _21380_r) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1e857ae43:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1e857aeba:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1e857adcc:;
	};
	if ((!(_2252e7bd8_Production))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1e47834c3_locInfo((*(_self_))._field_oc, _21336_op);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1e46a6836_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a544a_unsafeBinary(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304c2dd_BinopExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1e46b2cc6_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1e31a17c7_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1e46b2cc6_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1e478204e_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_24521_i));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1e46a6836_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1e46a6836_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1e47812c3_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a5703_binary(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304c2dd_BinopExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1e858be43:;
			{
				if ((_1e31a43bd_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1e46a5192_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1e858bd88:;
	};
	_1e46a544a_unsafeBinary(_self_, _26630_m);
}



inline void _1e46a59ab_var(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e310ed40_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1e302388b_Directive> _28013_d = _1e479c9a4_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1e47812c3_write((*(_self_))._field_oc, _1e478cdb2_concatAllParts((*(_28013_d))._field_Args));
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b8d65_var(_27827_m));
}



inline void _1e46a5c64_structureIns(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3047d55_StructIns> _28936_m) {
	_1e47812c3_write((*(_self_))._field_oc, _1e479432a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _28936_m));
}



inline void _1e46a601c_unary(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304c6b7_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1e8593125:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1e46a6836_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1e859319c:;
			{
				if ((_2252e7bd8_Production || (_1e31a30d1_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1e8593059;
				};
				_1e46a6836_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1e8593059:;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e47812c3_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1e46a62c5_structureLit(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304d08b_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b87d2_structureIns(&((*(_31736_m))._field_Strct)));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1e859ce65:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e859d097:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1e30472a5_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e859de22:;
						if (it != expr_end) {
							jule::Ptr<_1e304cbe5_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									_1e47812c3_write((*(_self_))._field_oc, static__1e46b8a9b_field(&((*((*(_33129_arg))._field_Field))._field_Decl)));
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1e46a6836_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1e859d097;
								};
							}
							_iter_next_1e859de22:;
							++it;
							goto _iter_begin_1e859de22;
						}
						_iter_end_1e859de22:;
					};
				}
				_iter_next_1e859d097:;
				++it;
				_33017_i++;
				goto _iter_begin_1e859d097;
			}
			_iter_end_1e859d097:;
		};
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e46a657d_allocStructure(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304d388_AllocStructLitExprModel> _34838_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b87d2_structureIns(&((*((*(_34838_m))._field_Lit))._field_Strct)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1e46a62c5_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a6836_possibleRefExpr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e85a65de:;
			{
				jule::Ptr<_1e310ed40_Var> _35913_v = _35635_expr.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1e46b0851_model(_self_, _35635_expr);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1e85a6589:;
	};
	_1e46b0851_model(_self_, _35635_expr);
}



inline void _1e46a6c54_castTraitFromTrait(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304d91b_CastingExprModel>* _37043_m, jule::Ptr<_1e306d2cb_Trait> _37069_t1, jule::Ptr<_1e306d2cb_Trait> _37085_t2) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7e85_traitDecl(_37069_t1));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1e478321a_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a700c_casting(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304d91b_CastingExprModel> _38531_m) {
	{
		
		if (_1e46b2cc6_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1e85abb44:;
			{
				if (_1e31a17c7_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1e31a3884_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1e478204e_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1e85aebd0:;
						{
							jule::Ptr<_1e31a82c3_Prim> _40017_prim = _1e31a2d4a_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _22893ce73_IsInt((*(_40017_prim))._field_Kind))) {
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1e47812c3_write((*(_self_))._field_oc, _1e479159c_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40017_prim));
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1e85b052c;
							};
							goto _case_begin_1e85b0582;
						}
					}
					else {
						_case_begin_1e85b0582:;
						{
							_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1e85b052c:;
				};
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_39613_i));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1e46b2cc6_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1e85abbbb:;
			{
				_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1e31a30d1_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1e31a30d1_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				};
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2252e7bd8_Production))) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>(_1e478204e_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1e31a3367_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1e31a3367_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e85abc43:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1e31a4654_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e85abcba:;
			{
				if ((_1e31a4654_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1e46a6c54_castTraitFromTrait(_self_, &(_38531_m), _1e31a4654_Trait((*(_38531_m))._field_Kind.ptr()), _1e31a4654_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1e31a30d1_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1e31a30d1_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				};
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2252e7bd8_Production))) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>(_1e4782da7_findTypeOffset((*(_self_))._field_oc.ptr(), _1e31a4654_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1e31a4654_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e85abd42:;
			{
				_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>(_1e4782da7_findTypeOffset((*(_self_))._field_oc.ptr(), _1e31a4654_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1e85aba01:;
	};
	jule::Ptr<_1e31a82c3_Prim> _4779_prim = _1e31a2d4a_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1e31a82c3_Prim> _4789_eprim = _1e31a2d4a_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1e31ab75a_IsStr(_4779_prim.ptr()))) {
		if (_1e31a9bba_IsU8(_4789_eprim.ptr())) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38531_m))._field_Kind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1e46a6836_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a72b5_models(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85d7400:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1e46a6836_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1e85d7400:;
			++it;
			_50014_i++;
			goto _iter_begin_1e85d7400;
		}
		_iter_end_1e85d7400:;
	};
}



inline void _1e46a756d_args(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1e3058b79_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85da205:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1e305be8a_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1e85dcd73:;
							{
								jule::Ptr<_1e310ed40_Var> _51921_v = _51416_arg.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1e46b0851_model(_self_, _51416_arg);
									goto _julec_label_1e85e11a6;
								};
							}
						}
						_match_end_1e85dcd1d:;
					};
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1e46b0851_model(_self_, _51416_arg);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1e85e11a6;
				};
				_1e46a6836_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1e85e11a6:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1e85da205:;
			++it;
			_51413_i++;
			goto _iter_begin_1e85da205;
		}
		_iter_end_1e85da205:;
	};
}



inline void _1e46a7826_modelForCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e85e2a59:;
			{
				_1e46aaa5a_funcIns(_self_, _53936_expr.cast_ptr<_1e305ce36_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e85e2ad1:;
			{
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1e46aaa5a_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1e85e29e3:;
	};
	_1e46a6836_possibleRefExpr(_self_, _53936_expr);
}



inline void _1e46a7ace_pushCallInf(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel>* _55432_m) {
	if ((_2252e7bd8_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1e85e6376:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1e85e6321:;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1e47834c3_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1e46a7e20_isWrapped(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel>* _57734_m) {
	if ((((!(_1e305e3bb_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1e3058b79_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1e85eb117:;
				{
					jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1e3058e10_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1e31a30d1_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1e85ecaa8:;
							{
								goto _match_end_1e85ebd4e;
							}
						}
						else {
							_case_begin_1e85ebdb5:;
							{
								if ((_1e31a43bd_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1e46b0851_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1e85ebd4e:;
					};
				}
			}
			_match_end_1e85eb0b2:;
		};
	};
	return false;;
}



inline void _1e46a81c8_pureFuncCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1e46a7e20_isWrapped(_self_, _60137_m);;
	_1e46a7826_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1e305e3bb_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1e479cd6c_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8603e22:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1e319dd13_InsGeneric> _60833_g = *it;
						{
							_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_60833_g))._field_Kind));
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1e8603e22:;
						++it;
						_60826_i++;
						goto _iter_begin_1e8603e22;
					}
					_iter_end_1e8603e22:;
				};
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1e46a7ace_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1e305e3bb_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1e3058b79_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1e8609631:;
				{
					jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1e3058e10_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1e860db96:;
							{
								_1e46a6836_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1e31a30d1_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1e860a4bc:;
							{
								_1e46a6836_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_2252e7bd8_Production))) {
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1e47834c3_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1e860a456:;
							{
								if ((_1e31a43bd_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1e860ac2b:;
											{
												jule::Ptr<_1e310ed40_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1e860b248;
												};
												goto _case_begin_1e860b29d;
											}
										}
										else {
											_case_begin_1e860b29d:;
											{
												_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1e860b248:;
									};
								};
								if (_6029_wrapped) {
									_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1e31a3367_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1e46b0851_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1e46a6836_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1e860a3e0:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1e86096a8:;
				{
					_1e46a6836_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1e30514bd_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_2252e7bd8_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1e86095ba:;
		};
	};
	_1e46a756d_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1e47834c3_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1e46a8481_coFuncCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel>* _68735_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_227713453_StrBuilder _69013_head = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_22771c02d_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_22771c02d_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e861ec40:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_22771c02d_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e862126e:;
						{
							jule::Ptr<_1e310ed40_Var> _70421_v = _69816_arg.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
							_22771c02d_WriteStr(&_69013_head, static__1e46b8d65_var(_70421_v));
							goto _iter_next_1e861ec40;
						}
					}
					_match_end_1e86209cc:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _22892d7e3_Itoa(_69813_i));;
				_22771c02d_WriteStr(&_69013_head, _70813_name);
				_1e47818bc_indent((*(_self_))._field_oc);
				_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1e47812c3_write((*(_self_))._field_oc, _70813_name);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1e46a6836_possibleRefExpr(_self_, _69816_arg);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1e861ec40:;
			++it;
			_69813_i++;
			goto _iter_begin_1e861ec40;
		}
		_iter_end_1e861ec40:;
	};
	_1e47818bc_indent((*(_self_))._field_oc);
	_22771bc75_Write(&(*((*(_self_))._field_oc))._field_Obj, _22771d2c6_Buf(&_69013_head));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e46a81c8_pureFuncCall(_self_, _68735_m);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e46a87e4_writeUseExpr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305ce36_FnIns>* _73837_f, jule::Ptr<_1e316ee05_Data> _73852_d) {
	if ((_1e31a4b71_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1e46a6836_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1e30529db_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81);;
	_1e479a562_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _1e31a4b71_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e862c90c:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _74716_data = *it;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_74713_i));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1e46a6836_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1e862c90c:;
			++it;
			_74713_i++;
			goto _iter_begin_1e862c90c;
		}
		_iter_end_1e862c90c:;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1e46a8a9c_funcCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e2bd_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1e46a8481_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1e305e3bb_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1e46a81c8_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1e46a81c8_pureFuncCall(_self_, &(_75932_m));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1e46a0357_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1e46b2743_isForwarded(&((*(_75932_m))._field_Except));;
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1e863c554:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1e47814c1_addIndent((*(_self_))._field_oc);
						_1e46a009e_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1e47818bc_indent((*(_self_))._field_oc);
						_1e46a87e4_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1e316ee05_Data>(&__jule_any_type24));
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1e47816be_doneIndent((*(_self_))._field_oc);
						_1e47818bc_indent((*(_self_))._field_oc);
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1e863e3e1:;
					{
						_1e46a0357_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1e863e38b:;
			};
			if (_78517_forwarded) {
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1e46b0b09_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1e47816be_doneIndent((*(_self_))._field_oc);
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1e305a4a5_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1e47818bc_indent((*(_self_))._field_oc);
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1e47816be_doneIndent((*(_self_))._field_oc);
	};
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1e46a8d55_slice(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304e697_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1e47812c3_write((*(_self_))._field_oc, _1e4792d84_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83029_m))._field_ElemKind));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, _1e4792d84_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83029_m))._field_ElemKind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1e46a72b5_models(_self_, (*(_83029_m))._field_Elems);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1e46a910d_indexing(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e304eb4d_IndexingExprModel> _84232_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_2252e7bd8_Production || (_1e31a3367_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1e31a48da_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1e46b2a0c_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1e86508db:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1e46a6836_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1e8651359:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1e46a6836_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1e86512e3:;
	};
}



inline void _1e46a93b6_unsafeIndexing(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e32958bb_UnsafeIndexingExprModel> _86238_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2252e7bd8_Production || (_1e31a3367_Ptr((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1e31a48da_Map((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8656815:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1e46a6836_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1e865742b:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1e46a6836_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1e86573b5:;
	};
}



inline void _1e46a966e_anonFunc(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3050027_AnonFnExprModel> _87932_m) {
	_1e47812c3_write((*(_self_))._field_oc, _1e4795b34_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_87932_m))._field_Func));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1e478882a_paramsIns((*(_self_))._field_oc, &((*((*(_87932_m))._field_Func))._field_Params));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1e47954a2_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_87932_m))._field_Func));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1e46a0610_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_87932_m))._field_Func);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a9927_mapExpr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30508a7_MapExprModel> _89031_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89031_m))._field_KeyKind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89031_m))._field_ValKind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_89031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8665615:;
			if (it != expr_end) {
				jule::I64 _89718_i = it - expr->begin();
				jule::Ptr<_1e3050401_KeyValPairExprModel> _89725_pair = *it;
				{
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1e46a6836_possibleRefExpr(_self_, (*(_89725_pair))._field_Key);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1e46a6836_possibleRefExpr(_self_, (*(_89725_pair))._field_Val);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_89031_m))._field_Entries.len() - _89718_i) > 1LL)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1e8665615:;
				++it;
				_89718_i++;
				goto _iter_begin_1e8665615;
			}
			_iter_end_1e8665615:;
		};
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1e46a9bd0_slicing(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3050e3a_SlicingExprModel> _91131_m) {
	_1e46a6836_possibleRefExpr(_self_, (*(_91131_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2252e7bd8_Production))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_91131_m))._field_Token));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1e46a6836_possibleRefExpr(_self_, (*(_91131_m))._field_Left);
	if (((*(_91131_m))._field_Right != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1e46a6836_possibleRefExpr(_self_, (*(_91131_m))._field_Right);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46a9e88_traitSub(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30514bd_TraitSubIdentExprModel> _92732_m) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7e85_traitDecl((*(_92732_m))._field_Trt));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1e46a6836_possibleRefExpr(_self_, (*(_92732_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7902_func(&((*(_92732_m))._field_Method)));
}



inline void _1e46aa241_structureSub(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _93636_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_93636_m))._field_Expr))._field_Model);
	if (((*(_93636_m))._field_Field == nullptr)) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b8a9b_field(&((*((*(_93636_m))._field_Field))._field_Decl)));
}



inline void _1e46aa4e9_array(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30526de_ArrayExprModel> _94529_m) {
	_1e47812c3_write((*(_self_))._field_oc, _1e479466b_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94529_m))._field_Kind));
	if (((*(_94529_m))._field_Elems.len() == 0LL)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_94529_m))._field_Elems.len() == 2LL) && ((*(_94529_m))._field_Elems[1LL] == nullptr))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1e46a6836_possibleRefExpr(_self_, (*(_94529_m))._field_Elems[0LL]);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1e46a72b5_models(_self_, (*(_94529_m))._field_Elems);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1e46aa7a2_funcInsCommon(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305ce36_FnIns> _96837_m) {
	_1e47812c3_write((*(_self_))._field_oc, _1e4795b34_func((*((*(_self_))._field_oc))._field_tc.ptr(), _96837_m));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46aaa5a_funcIns(_self_, _96837_m);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46aaa5a_funcIns(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305ce36_FnIns> _97531_m) {
	if ((((*(_97531_m))._field_Decl != nullptr) && (*((*(_97531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1e302388b_Directive> _97713_d = _1e479c9a4_findDirective(&((*((*(_97531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_97713_d != nullptr)) {
			_1e47812c3_write((*(_self_))._field_oc, _1e478cdb2_concatAllParts((*(_97713_d))._field_Args));
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7bbb_funcIns(&(_97531_m)));
}



inline void _1e46aad13_tuple(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30529db_TupleExprModel> _98629_m) {
	{
		auto expr = &((*(_98629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8684d71:;
		if (it != expr_end) {
			jule::I64 _98714_i = it - expr->begin();
			jule::Ptr<_1e316ee05_Data> _98721_d = *it;
			{
				_1e46a6836_possibleRefExpr(_self_, (*(_98721_d))._field_Model);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_98629_m))._field_Datas.len() - _98714_i) > 1LL)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1e47818bc_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1e8684d71:;
			++it;
			_98714_i++;
			goto _iter_begin_1e8684d71;
		}
		_iter_end_1e8684d71:;
	};
}



inline void _1e46ab0bb_newCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3053668_BuiltinNewCallExprModel> _99731_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_99731_m))._field_Kind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_99731_m))._field_Init != nullptr)) {
		_1e46a6836_possibleRefExpr(_self_, (*(_99731_m))._field_Init);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ab374_outCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3052db5_BuiltinOutCallExprModel> _100731_m) {
	if (((*(_100731_m))._field_Debug && _2252e7bd8_Production)) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1e46a6836_possibleRefExpr(_self_, (*(_100731_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ab62c_outlnCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305328e_BuiltinOutlnCallExprModel> _101633_m) {
	if (((*(_101633_m))._field_Debug && _2252e7bd8_Production)) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1e46a6836_possibleRefExpr(_self_, (*(_101633_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ab8d5_panicCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3053a42_BuiltinPanicCallExprModel> _102533_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1e46a6836_possibleRefExpr(_self_, (*(_102533_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_102533_m))._field_Token));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1e46abb8d_assertCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel> _103334_m) {
	if (_2252e7bd8_Production) {
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1e46a6836_possibleRefExpr(_self_, (*(_103334_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1e46b18eb_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103334_m))._field_Log);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1e47834c3_locInfo((*(_self_))._field_oc, &((*(_103334_m))._field_Token));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1e46abe46_errorCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3055aee_BuiltinErrorCallExprModel> _104633_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1e305a4a5_IsVoid((*((*(_104633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e8696701:;
				{
					jule::Ptr<_1e310ed40_Var> _105117_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
					if ((*(_105117_v))._field_Ident.equal("error", 5)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1e869669b:;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1e479ac38_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e869aa24:;
				{
					jule::Ptr<_1e310ed40_Var> _106317_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
					if ((*(_106317_v))._field_Ident.equal("error", 5)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1e869a9be:;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1e46a6836_possibleRefExpr(_self_, (*((*(_104633_m))._field_Err))._field_Model);
	jule::I64 _10729_i = _1e478204e_pushAnyType((*(_self_))._field_oc, (*((*(_104633_m))._field_Err))._field_Kind);;
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_10729_i));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1e46ac1ee_copyCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3055725_BuiltinCopyCallExprModel> _107832_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_107832_m))._field_Dest))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1e31a2d4a_Prim((*((*(_107832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_107832_m))._field_Src))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1e31a2d4a_Prim((*((*(_107832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ac4a7_lenCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3054b75_BuiltinLenCallExprModel> _109431_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_109431_m))._field_Expr))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1e46ac760_capCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3054e72_BuiltinCapCallExprModel> _109931_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_109931_m))._field_Expr))._field_Model);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1e46aca18_deleteCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel> _110434_m) {
	_1e46a6836_possibleRefExpr(_self_, (*((*(_110434_m))._field_Dest))._field_Model);
	if (((*(_110434_m))._field_Key != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1e46a6836_possibleRefExpr(_self_, (*((*(_110434_m))._field_Key))._field_Model);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1e46accc1_makeCallSlice(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>* _111538_m) {
	jule::Ptr<_1e31ac7c2_Slc> _111613_slice = _1e31a3da1_Slc((*((*(_111538_m))))._field_Kind.ptr());;
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111538_m))))._field_Kind));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_111538_m))))._field_Cap != nullptr)) {
		_1e46a6836_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Cap);
	} else {
		_1e46a6836_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	};
	if (_1e479d136_shouldInitialized(&((*(_111613_slice))._field_Elem))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1e46b0b09_initExpr(_self_, (*(_111613_slice))._field_Elem);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ad079_makeCallStr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel>* _113336_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1e46a6836_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Len);
	if (((*((*(_113336_m))))._field_Cap != nullptr)) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1e46a6836_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Cap);
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ad332_makeCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305449e_BuiltinMakeCallExprModel> _114432_m) {
	if ((_1e31a3da1_Slc((*(_114432_m))._field_Kind.ptr()) != nullptr)) {
		_1e46accc1_makeCallSlice(_self_, &(_114432_m));
		return;;
	};
	_1e46ad079_makeCallStr(_self_, &(_114432_m));
}



inline void _1e46ad5da_pushToSlice(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3295cea_PushToSliceExprModel> _115235_m) {
	;
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1e47812c3_write((*(_self_))._field_oc, _1e4792d84_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115235_m))._field_Elems))._field_ElemKind));
	jule::Bool _116013_ptr = false;;
	{
		auto &_match_expr{ (*(_115235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e86b5d91:;
			{
				jule::Ptr<_1e304c6b7_UnaryExprModel> _116417_u = (*(_115235_m))._field_Dest.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110);;
				if ((_1e31a3367_Ptr((*((*(_116417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1e46a6836_possibleRefExpr(_self_, (*((*(_116417_u))._field_Expr))._field_Model);
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_116013_ptr=true;
					goto _match_end_1e86b7b1d;
				};
				goto _case_begin_1e86b7b73;
			}
		}
		else {
			_case_begin_1e86b7b73:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1e46a6836_possibleRefExpr(_self_, (*(_115235_m))._field_Dest);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1e86b7b1d:;
	};
	if (((*((*(_115235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116013_ptr) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1e46a6836_possibleRefExpr(_self_, (*((*(_115235_m))._field_Elems))._field_Elems[0LL]);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_116013_ptr) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>((*((*(_115235_m))._field_Elems))._field_Elems.len())));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_115235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e86c074c:;
		if (it != expr_end) {
			jule::Any _119821_e = *it;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_116013_ptr) {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1e46a6836_possibleRefExpr(_self_, _119821_e);
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1e86c074c:;
			++it;
			goto _iter_begin_1e86c074c;
		}
		_iter_end_1e86c074c:;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1e46ad893_appendToSlice(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e32961c4_AppendToSliceExprModel> _121237_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr(_self_, (*(_121237_m))._field_Dest);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1e46a6836_possibleRefExpr(_self_, (*(_121237_m))._field_Slice);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1e46adb4b_appendCall(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3054878_BuiltinAppendCallExprModel> _122034_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1e46a6836_possibleRefExpr(_self_, (*(_122034_m))._field_Dest);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1e46a6836_possibleRefExpr(_self_, (*(_122034_m))._field_Elements);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ade04_sizeof(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30516aa_SizeofExprModel> _122830_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1e46a6836_possibleRefExpr(_self_, (*(_122830_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ae1ac_alignof(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e305632a_AlignofExprModel> _123431_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1e46a6836_possibleRefExpr(_self_, (*(_123431_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46ae465_runeLit(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3056627_RuneExprModel> _124027_m) {
	if (((*(_124027_m))._field_Code <= 127LL)) {
		_22771c2d6_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _124317_b = _1e46b12d0_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124027_m))._field_Code)));;
		if (_124317_b.equal("'", 1)) {
			_22771c2d6_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_22771c02d_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _124317_b);
		_22771c2d6_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_1e46b207d_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124027_m))._field_Code)));
}



inline void _1e46ae71d_structureStatic(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3052315_StructStaticIdentExprModel> _125439_m) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7bbb_funcIns(&((*(_125439_m))._field_Method)));
}



inline void _1e46ae9c6_integratedToStr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3056924_IntegratedToStrExprModel> _125839_m) {
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1e46a6836_possibleRefExpr(_self_, (*(_125839_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1e46aec7e_backendEmit(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3056ced_BackendEmitExprModel> _126435_m) {
	if (((*(_126435_m))._field_Exprs.len() == 0LL)) {
		_1e47812c3_write((*(_self_))._field_oc, (*(_126435_m))._field_Code);
		return;;
	};
	jule::I64 _12699_n = _22771cca9_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127013_args = jule::Slice<jule::Any>::alloc((*(_126435_m))._field_Exprs.len(), (*(_126435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e86d31aa:;
		if (it != expr_end) {
			jule::I64 _127114_i = it - expr->begin();
			jule::Any _127121_expr = *it;
			{
				_1e46a6836_possibleRefExpr(_self_, _127121_expr);
				jule::Slice<jule::U8> _127317_buf = _22771d2c6_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127013_args[_127114_i]=jule::Any(static_cast<jule::Str>(_127317_buf.slice(_12699_n)), &__jule_any_type4);
				{
					_22771d57e_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _127317_buf.slice(0LL, _12699_n));
				};
			}
			_iter_next_1e86d31aa:;
			++it;
			_127114_i++;
			goto _iter_begin_1e86d31aa;
		}
		_iter_end_1e86d31aa:;
	};
	_1e47812c3_write((*(_self_))._field_oc, _1e3280b5e_Format((*(_126435_m))._field_Code, _127013_args));
}



inline void _1e46b0037_free(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e30570ea_FreeExprModel> _128028_m) {
	_1e46a6836_possibleRefExpr(_self_, (*(_128028_m))._field_Expr);
	if (_2252e7545_RC) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1e46b02e0_strComp(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3294c3e_StrCompExprModel> _128931_m) {
	if ((*(_128931_m))._field_NotEq) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _12939_s = _228940bce_ReadStr((*(_128931_m))._field_Right.ptr());;
	_1e46a6836_possibleRefExpr(_self_, (*(_128931_m))._field_Left);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1e46b18eb_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _12939_s);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(static_cast<jule::I64>(_12939_s.len())));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_128931_m))._field_NotEq) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1e46b0598_emptyCompare(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e3294414_EmptyCompareExprModel> _130536_m) {
	if ((*(_130536_m))._field_Neg) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1e46a6836_possibleRefExpr(_self_, (*(_130536_m))._field_Expr);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1e46b0851_model(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Any _131429_m) {
	{
		auto &_match_expr{ _131429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e86e17b2:;
			{
				_1e47812c3_write((*(_self_))._field_oc, _131429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1e86e1251:;
			{
				_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _131429_m.cast_ptr<_1e31a06e9_TypeKind>(&__jule_any_type83)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e86e1460:;
			{
				_1e46a4c74_constant(_self_, _131429_m.cast_ptr<_22893da56_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e86e14c6:;
			{
				_1e46a59ab_var(_self_, _131429_m.cast_ptr<_1e310ed40_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1e86e154d:;
			{
				_1e46a5c64_structureIns(_self_, _131429_m.cast_ptr<_1e3047d55_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e86e15c5:;
			{
				_1e46aa7a2_funcInsCommon(_self_, _131429_m.cast_ptr<_1e305ce36_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1e86e22a7:;
			{
				_1e46a544a_unsafeBinary(_self_, (*(_131429_m.cast_ptr<_1e32955be_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e86e232e:;
			{
				_1e46a5703_binary(_self_, _131429_m.cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e86e23a6:;
			{
				_1e46a601c_unary(_self_, _131429_m.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e86e242d:;
			{
				_1e46a62c5_structureLit(_self_, _131429_m.cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e86e24a5:;
			{
				_1e46a657d_allocStructure(_self_, _131429_m.cast_ptr<_1e304d388_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e86e252c:;
			{
				_1e46a700c_casting(_self_, _131429_m.cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e86e25a4:;
			{
				_1e46a8a9c_funcCall(_self_, _131429_m.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e86e262b:;
			{
				_1e46a8d55_slice(_self_, _131429_m.cast_ptr<_1e304e697_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1e86e26a3:;
			{
				_1e46aa4e9_array(_self_, _131429_m.cast_ptr<_1e30526de_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1e86e272a:;
			{
				_1e46a93b6_unsafeIndexing(_self_, _131429_m.cast_ptr<_1e32958bb_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e86e27a2:;
			{
				_1e46a910d_indexing(_self_, _131429_m.cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1e86e2829:;
			{
				_1e46a966e_anonFunc(_self_, _131429_m.cast_ptr<_1e3050027_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e86e28a1:;
			{
				_1e46a9927_mapExpr(_self_, _131429_m.cast_ptr<_1e30508a7_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e86e2928:;
			{
				_1e46a9bd0_slicing(_self_, _131429_m.cast_ptr<_1e3050e3a_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e86e29a0:;
			{
				_1e46a9e88_traitSub(_self_, _131429_m.cast_ptr<_1e30514bd_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e86e2a27:;
			{
				_1e46aa241_structureSub(_self_, _131429_m.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e86e2a9e:;
			{
				_1e46aad13_tuple(_self_, _131429_m.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e86e2b26:;
			{
				_1e46ab374_outCall(_self_, _131429_m.cast_ptr<_1e3052db5_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e86e2b9d:;
			{
				_1e46ab62c_outlnCall(_self_, _131429_m.cast_ptr<_1e305328e_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1e86e2c25:;
			{
				_1e46ab0bb_newCall(_self_, _131429_m.cast_ptr<_1e3053668_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e86e2c9c:;
			{
				_1e46ab8d5_panicCall(_self_, _131429_m.cast_ptr<_1e3053a42_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e86e2d24:;
			{
				_1e46abb8d_assertCall(_self_, _131429_m.cast_ptr<_1e3053ee8_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e86e2d9b:;
			{
				_1e46abe46_errorCall(_self_, _131429_m.cast_ptr<_1e3055aee_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1e86e2e23:;
			{
				_1e46ad332_makeCall(_self_, _131429_m.cast_ptr<_1e305449e_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e86e2e9a:;
			{
				_1e46adb4b_appendCall(_self_, _131429_m.cast_ptr<_1e3054878_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1e86e3022:;
			{
				_1e46ac1ee_copyCall(_self_, _131429_m.cast_ptr<_1e3055725_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1e86e3099:;
			{
				_1e46ac4a7_lenCall(_self_, _131429_m.cast_ptr<_1e3054b75_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1e86e3121:;
			{
				_1e46ac760_capCall(_self_, _131429_m.cast_ptr<_1e3054e72_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e86e3198:;
			{
				_1e46aca18_deleteCall(_self_, _131429_m.cast_ptr<_1e305534b_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e86e3220:;
			{
				_1e46ade04_sizeof(_self_, _131429_m.cast_ptr<_1e30516aa_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e86e3297:;
			{
				_1e46ae1ac_alignof(_self_, _131429_m.cast_ptr<_1e305632a_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1e86e331e:;
			{
				_1e46ae465_runeLit(_self_, _131429_m.cast_ptr<_1e3056627_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1e86e3396:;
			{
				_1e46ae71d_structureStatic(_self_, _131429_m.cast_ptr<_1e3052315_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e86e341d:;
			{
				_1e46ae9c6_integratedToStr(_self_, _131429_m.cast_ptr<_1e3056924_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e86e3495:;
			{
				_1e46aec7e_backendEmit(_self_, _131429_m.cast_ptr<_1e3056ced_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e86e351c:;
			{
				_1e46b0037_free(_self_, _131429_m.cast_ptr<_1e30570ea_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1e86e3594:;
			{
				_1e46b02e0_strComp(_self_, _131429_m.cast_ptr<_1e3294c3e_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1e86e361b:;
			{
				_1e46a59ab_var(_self_, (*(_131429_m.cast_ptr<_1e3294711_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1e86e3693:;
			{
				_1e46b0598_emptyCompare(_self_, _131429_m.cast_ptr<_1e3294414_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1e86e13e9:;
			{
				_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1e86e1394:;
	};
}



inline void _1e46b0b09_initExpr(jule::Ptr<_1e46a34e2_exprCoder> _self_, jule::Ptr<_1e31a06e9_TypeKind> _141132_t) {
	if (_1e31a2597_NilCompatible(_141132_t.ptr())) {
		if ((_1e31a3367_Ptr(_141132_t.ptr()) != nullptr)) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1e31ad3b6_Tuple> _142113_tup = _1e31a4b71_Tup(_141132_t.ptr());;
	if ((_142113_tup != nullptr)) {
		_1e479a562_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _142113_tup);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_142113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e870ebcb:;
			if (it != expr_end) {
				jule::I64 _142518_i = it - expr->begin();
				jule::Ptr<_1e31a06e9_TypeKind> _142525_tt = *it;
				{
					if ((!(_1e479d136_shouldInitialized(&(_142525_tt))))) {
						goto _iter_next_1e870ebcb;
					};
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1e47812c3_write((*(_self_))._field_oc, _22892d7e3_Itoa(_142518_i));
					_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1e46b0b09_initExpr(_self_, _142525_tt);
					if ((((*(_142113_tup))._field_Types.len() - _142518_i) > 1LL)) {
						_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1e870ebcb:;
				++it;
				_142518_i++;
				goto _iter_begin_1e870ebcb;
			}
			_iter_end_1e870ebcb:;
		};
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1e30709c6_Enum> _144013_enm = _1e31a35ed_Enum(_141132_t.ptr());;
	if ((_144013_enm != nullptr)) {
		_1e46b0851_model(_self_, (*((*((*((*(_144013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _14459_prim = _1e31a2d4a_Prim(_141132_t.ptr());;
	if ((_14459_prim != nullptr)) {
		if (_22893d57d_IsNum((*(_14459_prim))._field_Kind)) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1e31ab4c4_IsBool(_14459_prim.ptr())) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1e31ab75a_IsStr(_14459_prim.ptr())) {
			_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1e31a3b1a_Arr(_141132_t.ptr()) != nullptr)) {
		jule::Ptr<_1e31aeae3_Arr> _145717_arr = _1e31a3b1a_Arr(_141132_t.ptr());;
		_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1e46b0b09_initExpr(_self_, (*(_145717_arr))._field_Elem);
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1e3047d55_StructIns> _146413_s = _1e31a43bd_Struct(_141132_t.ptr());;
	if ((((_146413_s != nullptr) && (*((*(_146413_s))._field_Decl))._field_Binded) && (_1e479c9a4_findDirective(&((*((*(_146413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, _1e4795e75_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _141132_t));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1e46a34e2_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e46b3b73_TestCoder> static__1e46b40b3_New(jule::Ptr<_1e4780b1e_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1e46b3b73_TestCoder>(_1e46b3b73_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e46b4349_findTestingPackage(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e871e900:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1e871e900:;
			++it;
			goto _iter_begin_1e871e900;
		}
		_iter_end_1e871e900:;
	};
	return nullptr;;
}



inline void _1e46b4602_appendTest(jule::Ptr<_1e46b3b73_TestCoder> _self_, jule::Ptr<_1e305ce36_FnIns> _4334_f) {
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e46b4d3e_callTmReset(_self_);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1e46b18eb_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7bbb_funcIns(&(_4334_f)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1e46b48aa_appendPackageTests(jule::Ptr<_1e46b3b73_TestCoder> _self_, jule::Ptr<_1e30beddd_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8726341:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8726c8c:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _6025_f = *it;
						{
							if (_1e479cd6c_hasDirective(&((*(_6025_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1e46b4602_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1e8726c8c:;
						++it;
						goto _iter_begin_1e8726c8c;
					}
					_iter_end_1e8726c8c:;
				};
			}
			_iter_next_1e8726341:;
			++it;
			goto _iter_begin_1e8726341;
		}
		_iter_end_1e8726341:;
	};
}



inline jule::Bool _1e46b4b41_readyTestingPackage(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	jule::Ptr<_1e30bbeb7_ImportInfo> _6913_p = _1e46b4349_findTestingPackage(_self_);;
	if ((_6913_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1e30bd194_FindStruct(_6913_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1e3048dbc_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1e3048dbc_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1e3048dbc_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1e46b4d3e_callTmReset(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7902_func(&((*(_self_))._field_tmReset)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1e46b503c_callTmFailed(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7902_func(&((*(_self_))._field_tmFailed)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1e46b523a_callTmSkipped(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	_1e47812c3_write((*(_self_))._field_oc, static__1e46b7902_func(&((*(_self_))._field_tmSkipped)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1e46b5438_Serialize(jule::Ptr<_1e46b3b73_TestCoder> _self_) {
	_1e478c4bb_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1e478c2bd_end((*(_self_))._field_oc);
	});;
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	if ((!(_1e46b4b41_readyTestingPackage(_self_)))) {
		_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1e47816be_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1e47812c3_write((*(_self_))._field_oc, _1e4791c2e_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _1e479432a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1e47812c3_write((*(_self_))._field_oc, _1e479432a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1e47814c1_addIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1e46b503c_callTmFailed(_self_);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1e46b523a_callTmSkipped(_self_);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1e46b48aa_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1e47816be_doneIndent((*(_self_))._field_oc);
	_1e47818bc_indent((*(_self_))._field_oc);
	_1e47812c3_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1e46b3b73_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1e46b6d85_writeIdentTo(_227713453_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8741b42:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1e8741e83;
				};
			}
			_iter_next_1e8741b42:;
			++it;
			goto _iter_begin_1e8741b42;
		}
		_iter_end_1e8741b42:;
	};
	_22771c02d_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1e8741e83:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e8742eea:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_22771c2d6_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1e8742eea;
				};
				_22771c02d_WriteStr(_3333_buf, _22892d529_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1e8742eea:;
			++it;
			goto _iter_begin_1e8742eea;
		}
		_iter_end_1e8742eea:;
	};
}



inline jule::Str static__1e46b7209_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_227713453_StrBuilder _6317_obj = static__22771371c_New(40LL);;
		_22771c2d6_WriteByte(&_6317_obj, '_');
		_22771c02d_WriteStr(&_6317_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_22771c2d6_WriteByte(&_6317_obj, '_');
		static__1e46b6d85_writeIdentTo(&(_6317_obj), _6122_ident);
		return _22771c825_Str(&_6317_obj);;
	};
	_227713453_StrBuilder _7013_obj = static__22771371c_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_22771c2d6_WriteByte(&_7013_obj, '_');
	static__1e46b6d85_writeIdentTo(&(_7013_obj), _6122_ident);
	return _22771c825_Str(&_7013_obj);;
}



inline jule::Str static__1e46b7638_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_227713453_StrBuilder _8313_obj = static__22771371c_New(40LL);;
	_22771c2d6_WriteByte(&_8313_obj, '_');
	_22771c02d_WriteStr(&_8313_obj, _22892d7e3_Itoa(_8223_row));
	_22771c02d_WriteStr(&_8313_obj, _22892d7e3_Itoa(_8233_col));
	_22771c2d6_WriteByte(&_8313_obj, '_');
	static__1e46b6d85_writeIdentTo(&(_8313_obj), _8244_ident);
	return _22771c825_Str(&_8313_obj);;
}



inline jule::Str static__1e46b7902_func(jule::Ptr<_1e305a032_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_1e874961c:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1e8748d7a:;
			{
				return jule::Str::lit("entry_point", 11);;
			}
		}
		else if (_1e305a73b_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1e8748de1:;
			{
				jule::Str _10017_obj = static__1e46b7209_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10017_obj=(jule::Str::lit("static_", 7) + _10017_obj);
					return _10017_obj;;
				};
				return _10017_obj;;
			}
		}
		else {
			_case_begin_1e8748d14:;
			{
				return static__1e46b7209_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1e87480ee:;
	};
}



inline jule::Str static__1e46b7bbb_funcIns(jule::Ptr<_1e305ce36_FnIns>* _11224_f) {
	if (_1e305e3bb_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str::lit("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__1e46b7902_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__1e46b7209_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1e46b7e85_traitDecl(jule::Ptr<_1e306d2cb_Trait> _12525_t) {
	return static__1e46b7209_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1e46b824e_param(jule::Ptr<_1e305855d_Param>* _13022_p) {
	if ((_1e3011aaa_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _1e30117e1_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_1e3058b79_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str::lit("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__1e46b7638_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__1e46b7638_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__1e46b8518_structure(jule::Ptr<_1e30450c7_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_1e479cd6c_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str::lit("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str::lit("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__1e46b7209_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1e46b87d2_structureIns(jule::Ptr<_1e3047d55_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__1e46b8518_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__1e46b7209_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1e46b8a9b_field(jule::Ptr<_1e30421d4_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_227713453_StrBuilder _16713_obj = static__22771371c_New(static_cast<jule::I64>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_22771c02d_WriteStr(&_16713_obj, jule::Str::lit("_field_", 7));
	static__1e46b6d85_writeIdentTo(&(_16713_obj), &((*((*(_16322_f))))._field_Ident));
	return _22771c825_Str(&_16713_obj);;
}



inline jule::Str static__1e46b8d65_var(jule::Ptr<_1e310ed40_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_1e875675b:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_1e87567c2:;
			{
				return jule::Str::lit("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_1e8756838:;
			{
				return jule::Str::lit("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_1e875689e:;
			{
				return jule::Str::lit("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_1e8756b35:;
			{
				return (jule::Str::lit("__jule_func_result.__jule_result_arg", 36) + _22892d7e3_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_1e8756b9b:;
			{
				return static__1e46b7638_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_1e87566e5:;
			{
				return static__1e46b7209_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1e875643c:;
	};
}



inline jule::Str static__1e46b912e_iterBegin(jule::Uintptr _19625_it) {
	_227713453_StrBuilder _19713_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_19713_obj, jule::Str::lit("_iter_begin_", 12));
	_22771c02d_WriteStr(&_19713_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _22771c825_Str(&_19713_obj);;
}



inline jule::Str static__1e46b93e8_iterEnd(jule::Uintptr _20423_it) {
	_227713453_StrBuilder _20513_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_20513_obj, jule::Str::lit("_iter_end_", 10));
	_22771c02d_WriteStr(&_20513_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _22771c825_Str(&_20513_obj);;
}



inline jule::Str static__1e46b96b2_iterNext(jule::Uintptr _21224_it) {
	_227713453_StrBuilder _21313_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_21313_obj, jule::Str::lit("_iter_next_", 11));
	_22771c02d_WriteStr(&_21313_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _22771c825_Str(&_21313_obj);;
}



inline jule::Str static__1e46b997b_label(jule::Uintptr _22021_u) {
	_227713453_StrBuilder _22113_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_22113_obj, jule::Str::lit("_julec_label_", 13));
	_22771c02d_WriteStr(&_22113_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _22771c825_Str(&_22113_obj);;
}



inline jule::Str static__1e46b9c45_matchEnd(jule::Uintptr _22824_m) {
	_227713453_StrBuilder _22913_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_22913_obj, jule::Str::lit("_match_end_", 11));
	_22771c02d_WriteStr(&_22913_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _22771c825_Str(&_22913_obj);;
}



inline jule::Str static__1e46ba00e_caseBegin(jule::Uintptr _23625_c) {
	_227713453_StrBuilder _23713_obj = static__22771371c_New(30LL);;
	_22771c02d_WriteStr(&_23713_obj, jule::Str::lit("_case_begin_", 12));
	_22771c02d_WriteStr(&_23713_obj, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _22771c825_Str(&_23713_obj);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e46b6857_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e477e106_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e477e6cd_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e477eaa7_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e479015b_Str(_1e478ecc6_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1e479049c_Equal(jule::Ptr<_1e478ecc6_customType> _self_, jule::Ptr<_1e31a06e9_TypeKind> _4021_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e478ecc6_customType _Src) {
	_Stream << _1e479015b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e47908cb_typeCoder> static__1e4790e1a_new(jule::Ptr<_1e4780b1e_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1e47908cb_typeCoder> _6513_tc = jule::new_ptr<_1e47908cb_typeCoder>(_1e47908cb_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6513_tc))._field_rc=static__1e4798b7b_new(&(_6513_tc));
	return _6513_tc;;
}



inline jule::Str _1e479125b_toType(_1e47908cb_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_22893088e_RealKindOf(_7129_id);
	};
	_227713453_StrBuilder _7513_obj = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_7513_obj, jule::Str::lit("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_22771c2d6_WriteByte(&_7513_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_22771c2d6_WriteByte(&_7513_obj, _7129_id[0LL]);
	};
	_22771c02d_WriteStr(&_7513_obj, _7129_id.slice(1LL));
	return _22771c825_Str(&_7513_obj);;
}



inline jule::Str _1e479159c_prim(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31a82c3_Prim> _8723_p) {
	return _1e479125b_toType(_self_, _1e31a8614_Str(_8723_p.ptr()));;
}



inline jule::Str _1e47918dd_tuple(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31ad3b6_Tuple> _9228_t) {
	_227713453_StrBuilder _9313_obj = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_9313_obj, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b5414:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_1e31a06e9_TypeKind> _9521_tk = *it;
			{
				_22771c02d_WriteStr(&_9313_obj, _1e4795e75_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_22771c2d6_WriteByte(&_9313_obj, ',');
				};
			}
			_iter_next_1e88b5414:;
			++it;
			_9514_i++;
			goto _iter_begin_1e88b5414;
		}
		_iter_end_1e88b5414:;
	};
	_22771c2d6_WriteByte(&_9313_obj, '>');
	return _22771c825_Str(&_9313_obj);;
}



inline jule::Str _1e4791c2e_asSptr(_1e47908cb_typeCoder* _self_, jule::Str _10625_elem) {
	_227713453_StrBuilder _10713_obj = static__22771371c_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_22771c02d_WriteStr(&_10713_obj, jule::Str::lit("jule::Ptr<", 10));
	_22771c02d_WriteStr(&_10713_obj, _10625_elem);
	_22771c2d6_WriteByte(&_10713_obj, '>');
	return _22771c825_Str(&_10713_obj);;
}



inline jule::Str _1e4792070_sptr(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31abcee_Sptr> _11527_sptr) {
	return _1e4791c2e_asSptr(_self_, _1e4795e75_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _1e47923b1_ptr(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31b05b6_Ptr> _12026_p) {
	;
	if (_1e31b1100_IsUnsafe(_12026_p.ptr())) {
		return jule::Str::lit("void*", 5);;
	};
	return (_1e4795e75_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str::lit("*", 1));;
}



inline jule::Str _1e4792702_enumDecl(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e30709c6_Enum> _12931_e) {
	return _1e4795e75_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _1e4792a43_typeEnumDecl(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e30721d1_TypeEnum> _13435_e) {
	return jule::Str::lit("jule::Any", 9);;
}



inline jule::Str _1e4792d84_asSlice(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31a06e9_TypeKind> _13830_elem) {
	_227713453_StrBuilder _13913_obj = static__22771371c_New(45LL);;
	_22771c02d_WriteStr(&_13913_obj, jule::Str::lit("jule::Slice<", 12));
	_22771c02d_WriteStr(&_13913_obj, _1e4795e75_kind(_self_, _13830_elem));
	_22771c2d6_WriteByte(&_13913_obj, '>');
	return _22771c825_Str(&_13913_obj);;
}



inline jule::Str _1e47931c5_slice(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31ac7c2_Slc> _14728_s) {
	return _1e4792d84_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _1e4793516_mapType(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31ade66_Map> _15230_m) {
	_227713453_StrBuilder _15313_obj = static__22771371c_New(43LL);;
	_22771c02d_WriteStr(&_15313_obj, jule::Str::lit("jule::Map<", 10));
	_22771c02d_WriteStr(&_15313_obj, _1e4795e75_kind(_self_, (*(_15230_m))._field_Key));
	_22771c2d6_WriteByte(&_15313_obj, ',');
	_22771c02d_WriteStr(&_15313_obj, _1e4795e75_kind(_self_, (*(_15230_m))._field_Val));
	_22771c2d6_WriteByte(&_15313_obj, '>');
	return _22771c825_Str(&_15313_obj);;
}



inline jule::Str _1e4793857_traitIdent(_1e47908cb_typeCoder* _self_, jule::Str _16229_ident) {
	_227713453_StrBuilder _16313_obj = static__22771371c_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_22771c02d_WriteStr(&_16313_obj, jule::Str::lit("jule::Trait<", 12));
	_22771c02d_WriteStr(&_16313_obj, _16229_ident);
	_22771c2d6_WriteByte(&_16313_obj, '>');
	return _22771c825_Str(&_16313_obj);;
}



inline jule::Str _1e4793b98_traitDecl(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e306d2cb_Trait> _17128_t) {
	return _1e4793857_traitIdent(_self_, static__1e46b7e85_traitDecl(_17128_t));;
}



inline jule::Str _1e4793ed9_structure(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e30450c7_Struct> _17628_s) {
	_227713453_StrBuilder _17713_rep = static__22771371c_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_1e479cd6c_hasDirective(&((*(_17628_s))._field_Directives), jule::Str::lit("typedef", 7)))))) {
		_22771c02d_WriteStr(&_17713_rep, jule::Str::lit("struct ", 7));
	};
	_22771c02d_WriteStr(&_17713_rep, static__1e46b8518_structure(&(_17628_s)));
	return _22771c825_Str(&_17713_rep);;
}



inline jule::Str _1e479432a_structureIns(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e3047d55_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_227713453_StrBuilder _18817_ident = static__22771371c_New(32LL);;
		_22771c02d_WriteStr(&_18817_ident, static__1e46b87d2_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_22771c2d6_WriteByte(&_18817_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e88c4c81:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_1e319dd13_InsGeneric> _19229_g = *it;
					{
						_22771c02d_WriteStr(&_18817_ident, _1e4795e75_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_22771c2d6_WriteByte(&_18817_ident, ',');
						};
					}
					_iter_next_1e88c4c81:;
					++it;
					_19222_i++;
					goto _iter_begin_1e88c4c81;
				}
				_iter_end_1e88c4c81:;
			};
			_22771c2d6_WriteByte(&_18817_ident, '>');
		};
		jule::Ptr<_1e302388b_Directive> _20013_d = _1e479c9a4_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_20013_d != nullptr)) {
			jule::Str _20221_buf = _22771c825_Str(&_18817_ident);;
			_22771ca23_Clear(&_18817_ident);
			_22771c02d_WriteStr(&_18817_ident, _1e478cdb2_concatAllParts((*(_20013_d))._field_Args));
			_22771c02d_WriteStr(&_18817_ident, jule::Str::lit("::", 2));
			_22771c02d_WriteStr(&_18817_ident, _20221_buf);
		};
		return _22771c825_Str(&_18817_ident);;
	};
	return static__1e46b87d2_structureIns(&(_18635_s));;
}



inline jule::Str _1e479466b_array(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31aeae3_Arr> _21428_a) {
	_227713453_StrBuilder _21513_obj = static__22771371c_New(45LL);;
	_22771c02d_WriteStr(&_21513_obj, jule::Str::lit("jule::Array<", 12));
	_22771c02d_WriteStr(&_21513_obj, _1e4795e75_kind(_self_, (*(_21428_a))._field_Elem));
	_22771c2d6_WriteByte(&_21513_obj, ',');
	_22771c02d_WriteStr(&_21513_obj, _22892d7e3_Itoa((*(_21428_a))._field_N));
	_22771c2d6_WriteByte(&_21513_obj, '>');
	return _22771c825_Str(&_21513_obj);;
}



inline jule::Str _1e4794ced_paramIns(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e305be8a_ParamIns>* _24132_p) {
	_227713453_StrBuilder _24213_obj = static__22771371c_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_22771c02d_WriteStr(&_24213_obj, jule::Str::lit("jule::Slice<", 12));
		_22771c02d_WriteStr(&_24213_obj, _1e4795e75_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_22771c2d6_WriteByte(&_24213_obj, '>');
	} else {
		_22771c02d_WriteStr(&_24213_obj, _1e4795e75_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_22771c2d6_WriteByte(&_24213_obj, '*');
	};
	return _22771c825_Str(&_24213_obj);;
}



inline void _1e47954a2_funcInsResult(_1e47908cb_typeCoder* _self_, _227713453_StrBuilder* _27137_s, jule::Ptr<_1e305ce36_FnIns>* _27157_f) {
	if (_1e305a4a5_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_22771c02d_WriteStr(_27137_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_22771c02d_WriteStr(_27137_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_22771c02d_WriteStr(_27137_s, jule::Str::lit("jule::Exceptional<", 18));
		_1e479ac38_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_22771c2d6_WriteByte(_27137_s, '>');
		return;;
	};
	_1e479ac38_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _1e47957e3_anonFunc(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e305ce36_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_1e31a4b71_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_1e4782307_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_227713453_StrBuilder _29313_decl = static__22771371c_New(20LL);;
	_1e47954a2_funcInsResult(_self_, &(_29313_decl), &(_28931_f));
	_22771c2d6_WriteByte(&_29313_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e88d9944:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_1e305be8a_ParamIns> _29725_param = *it;
				{
					if (_1e3058b79_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_1e88d9944;
					};
					_22771c02d_WriteStr(&_29313_decl, _1e4794ced_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_22771c2d6_WriteByte(&_29313_decl, ',');
					};
				}
				_iter_next_1e88d9944:;
				++it;
				_29718_i++;
				goto _iter_begin_1e88d9944;
			}
			_iter_end_1e88d9944:;
		};
	} else {
		_22771c02d_WriteStr(&_29313_decl, jule::Str::lit("void", 4));
	};
	_22771c2d6_WriteByte(&_29313_decl, ')');
	return _22771c825_Str(&_29313_decl);;
}



inline jule::Str _1e4795b34_func(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e305ce36_FnIns> _31427_f) {
	_227713453_StrBuilder _31513_obj = static__22771371c_New(42LL);;
	_22771c02d_WriteStr(&_31513_obj, jule::Str::lit("jule::Fn<", 9));
	_22771c02d_WriteStr(&_31513_obj, _1e47957e3_anonFunc(_self_, _31427_f));
	_22771c2d6_WriteByte(&_31513_obj, '>');
	return _22771c825_Str(&_31513_obj);;
}



inline jule::Str _1e4795e75_kind(_1e47908cb_typeCoder* _self_, jule::Ptr<_1e31a06e9_TypeKind> _32327_k) {
	{
		
		if ((_1e31a43bd_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88ddecb:;
			{
				return _1e479432a_structureIns(_self_, _1e31a43bd_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1e31a1541_Binded(_32327_k.ptr())) {
			_case_begin_1e88de053:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_1e31a2d4a_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de0ca:;
			{
				return _1e479159c_prim(_self_, _1e31a2d4a_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a4b71_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de152:;
			{
				return _1e47918dd_tuple(_self_, _1e31a4b71_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a30d1_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de1c9:;
			{
				return _1e4792070_sptr(_self_, _1e31a30d1_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a3367_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de251:;
			{
				return _1e47923b1_ptr(_self_, _1e31a3367_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a35ed_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de2c8:;
			{
				return _1e4792702_enumDecl(_self_, _1e31a35ed_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a3884_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de350:;
			{
				return _1e4792a43_typeEnumDecl(_self_, _1e31a3884_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a3da1_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de3c7:;
			{
				return _1e47931c5_slice(_self_, _1e31a3da1_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a48da_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de44e:;
			{
				return _1e4793516_mapType(_self_, _1e31a48da_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a4654_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de4c6:;
			{
				return _1e4793b98_traitDecl(_self_, _1e31a4654_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a3b1a_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de54d:;
			{
				return _1e479466b_array(_self_, _1e31a3b1a_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1e31a4137_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1e88de5c5:;
			{
				return _1e4795b34_func(_self_, _1e31a4137_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1e88ddd00:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1e88de680:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_1e478ecc6_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_1e88e76dd:;
			{
				return jule::Str::lit("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1e88e7688:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1e47908cb_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e47986a3_resultCoder> static__1e4798b7b_new(jule::Ptr<_1e47908cb_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1e47986a3_resultCoder>(_1e47986a3_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1e4798ede_ptr(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _38127_s, jule::Ptr<_1e31b05b6_Ptr> _38146_p) {
	_22771c02d_WriteStr(_38127_s, jule::Str::lit("p", 1));
	_1e479a8c5_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _1e4799352_sptr(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _38628_s, jule::Ptr<_1e31abcee_Sptr> _38647_p) {
	_22771c02d_WriteStr(_38628_s, jule::Str::lit("x", 1));
	_1e479a8c5_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _1e47996b5_mapType(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _39131_s, jule::Ptr<_1e31ade66_Map> _39150_p) {
	_22771c02d_WriteStr(_39131_s, jule::Str::lit("m", 1));
	_1e479a8c5_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_1e479a8c5_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _1e4799a28_slice(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _39729_s, jule::Ptr<_1e31ac7c2_Slc> _39748_slc) {
	_22771c02d_WriteStr(_39729_s, jule::Str::lit("s", 1));
	_1e479a8c5_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _1e4799d8b_arr(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _40227_s, jule::Ptr<_1e31aeae3_Arr> _40246_arr) {
	_22771c02d_WriteStr(_40227_s, jule::Str::lit("a", 1));
	_22771c02d_WriteStr(_40227_s, _22892d529_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_1e479a8c5_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _1e479a1ee_func(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _40828_s, jule::Ptr<_1e305ce36_FnIns> _40847_f) {
	_22771c02d_WriteStr(_40828_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88ee827:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_22771c02d_WriteStr(_40828_s, jule::Str::lit("r", 1));
				};
				_1e479a8c5_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_1e88ee827:;
			++it;
			goto _iter_begin_1e88ee827;
		}
		_iter_end_1e88ee827:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_1e479a8c5_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _1e479a562_tup(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _42127_s, jule::Ptr<_1e31ad3b6_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8901ebc:;
		if (it != expr_end) {
			jule::Ptr<_1e31a06e9_TypeKind> _42221_t = *it;
			{
				_22771c02d_WriteStr(_42127_s, jule::Str::lit("__jule_tuple_", 13));
				_1e479a8c5_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1e8901ebc:;
			++it;
			goto _iter_begin_1e8901ebc;
		}
		_iter_end_1e8901ebc:;
	};
}



inline void _1e479a8c5_codeMut(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _42831_s, jule::Ptr<_1e31a06e9_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1e8903232:;
			{
				_1e4798ede_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31b05b6_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1e89035ea:;
			{
				_1e4799352_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31abcee_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1e8903661:;
			{
				_1e47996b5_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31ade66_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1e89036c7:;
			{
				_1e4799a28_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31ac7c2_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1e890374e:;
			{
				_1e4799d8b_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31aeae3_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1e8903bd3:;
			{
				_1e479a1ee_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e305ce36_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8903c5a:;
			{
				jule::Ptr<_1e30709c6_Enum> _44313_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1e30709c6_Enum>(3);;
				_22771c02d_WriteStr(_42831_s, static__1e46b7209_toOut(&((*(_44313_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44313_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e8903cd2:;
			{
				jule::Ptr<_1e30721d1_TypeEnum> _44613_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1e30721d1_TypeEnum>(4);;
				_22771c02d_WriteStr(_42831_s, static__1e46b7209_toOut(&((*(_44613_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44613_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8903d59:;
			{
				jule::Ptr<_1e3047d55_StructIns> _44917_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_1e3047d55_StructIns>(0);;
				_22771c02d_WriteStr(_42831_s, static__1e46b87d2_structureIns(&(_44917_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1e8903dd1:;
			{
				jule::Ptr<_1e306d2cb_Trait> _45217_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_1e306d2cb_Trait>(2);;
				_22771c02d_WriteStr(_42831_s, static__1e46b7e85_traitDecl(_45217_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1e8903e58:;
			{
				_22771c02d_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_1e31a82c3_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1e8903ed0:;
			{
				_1e479a562_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1e31ad3b6_Tuple>(23));
			}
		}
		else {
			_case_begin_1e8903584:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1e890352e:;
	};
}



inline void _1e479ac38_codeMut1(_1e47986a3_resultCoder* _self_, _227713453_StrBuilder* _46332_s, jule::Ptr<_1e31a06e9_TypeKind>* _46352_t) {
	jule::Ptr<_1e31ad3b6_Tuple> _46413_tup = _1e31a4b71_Tup((*(_46352_t)).ptr());;
	if ((_46413_tup != nullptr)) {
		_1e479a562_tup(_self_, _46332_s, _46413_tup);
	} else {
		_22771c02d_WriteStr(_46332_s, _1e4795e75_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1e479b046_code(_1e47986a3_resultCoder* _self_, jule::Ptr<_1e31a06e9_TypeKind>* _47228_t) {
	_227713453_StrBuilder _47313_s = static__22771371c_New(20LL);;
	_1e479a8c5_codeMut(_self_, &(_47313_s), _47228_t);
	return _22771c825_Str(&_47313_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1e47986a3_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e890e8e2_Name(_1e890e4c4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e890ea46_What(_1e890e4c4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e890eb9a_Reset(_1e890e4c4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e890ecee_Short(_1e890e4c4_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e890e4c4_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e8912c58_Name(_1e8913121_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e8912d9b_What(_1e8913121_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e891340c_Reset(_1e8913121_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e8913550_Short(_1e8913121_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e8913121_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e8916454_Name(_1e891681c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e8916597_What(_1e891681c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e8916b08_Reset(_1e891681c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e8916c4b_Short(_1e891681c_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e891681c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e8919b94_Name(_1e891a05c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e8919cd7_What(_1e891a05c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e891a348_Reset(_1e891a05c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e891a48b_Short(_1e891a05c_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e891a05c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e891d390_Name(_1e891d758_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e891d4d3_What(_1e891d758_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e891da44_Reset(_1e891d758_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e891db87_Short(_1e891d758_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e891d758_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4815478_FlagSet> static__1e4815764_New(void) {
	return jule::new_ptr<_1e4815478_FlagSet>(_1e4815478_FlagSet{._field_flags=jule::Slice<jule::Trait<_1e48138c7_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1e48138c7_CommonFlag> _1e4815bd7_FindFlag(_1e4815478_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8927ee3:;
		if (it != expr_end) {
			jule::Trait<_1e48138c7_CommonFlag> _7221_flag = *it;
			{
				if ((_1e48138c7_CommonFlag_mptr_data[(_7221_flag).type_offset]._1e47d1796_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1e8927ee3:;
			++it;
			goto _iter_begin_1e8927ee3;
		}
		_iter_end_1e8927ee3:;
	};
	return nullptr;;
}



inline jule::Trait<_1e48138c7_CommonFlag> _1e4816028_FindFlagShort(_1e4815478_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89297ec:;
		if (it != expr_end) {
			jule::Trait<_1e48138c7_CommonFlag> _8221_flag = *it;
			{
				if ((_1e48138c7_CommonFlag_mptr_data[(_8221_flag).type_offset]._1e47d193e_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1e89297ec:;
			++it;
			goto _iter_begin_1e89297ec;
		}
		_iter_end_1e89297ec:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1e4816600_Parse(_1e4815478_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1e4817e09_argParser _11613_ap = _1e4817e09_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1e4819405_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1e891d758_Flag> _1e898a6e8_addFlagCommon(_1e4815478_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1e898bead:;
			{
				goto _match_end_1e898be47;
			}
		}
		_match_end_1e898be47:;
	};
	if ((_1e4815bd7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1e4816028_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e891d758_Flag> _14813_flag = jule::new_ptr<_1e891d758_Flag>(_1e891d758_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1e48138c7_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1e48138c7_CommonFlag>(_14813_flag, 4)); };
	return _14813_flag;;
}

inline jule::Ptr<_1e891a05c_Flag> _1e89928a9_addFlagCommon(_1e4815478_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1e899412a:;
			{
				goto _match_end_1e89940b4;
			}
		}
		_match_end_1e89940b4:;
	};
	if ((_1e4815bd7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1e4816028_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e891a05c_Flag> _14813_flag = jule::new_ptr<_1e891a05c_Flag>(_1e891a05c_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1e48138c7_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1e48138c7_CommonFlag>(_14813_flag, 3)); };
	return _14813_flag;;
}



inline void _1e8988938_AddVar(_1e4815478_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1e891d758_Flag> _17613_flag = _1e898a6e8_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}

inline void _1e8990b3d_AddVar(_1e4815478_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1e891a05c_Flag> _17613_flag = _1e89928a9_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1e4815478_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1e893110b_parseInteger(_1e4817e09_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1e8933aae:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1e8934131:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1e8933e11:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1e8933e77:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1e893377e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e8933718:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e893364c:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1e893883e_parseInteger(_1e4817e09_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1e893b29d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1e893b820:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1e893b600:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2276ede77_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1e893b666:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1e893ae6d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e893ae07:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e893ad3b:;
	};
	return __jule_func_result;;
}



inline jule::Str _1e4818723_getData(_1e4817e09_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1e4818998_processFlag(_1e4817e09_argParser* _self_, jule::Trait<_1e48138c7_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e892d79b:;
			{
				jule::Ptr<_1e891a05c_Flag> _22017_bf = (*(_21735_flag)).cast_ptr<_1e891a05c_Flag>(3);;
				(*((*(_22017_bf))._field_data))=(!((*(_22017_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1e892d746:;
	};
	jule::Str _2259_data = _1e4818723_getData(_self_);;
	if ((_2259_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1e48138c7_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e47d1796_Name((*(_21735_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8930380:;
			{
				jule::Ptr<_1e890e4c4_Flag> _23217_intf = (*(_21735_flag)).cast_ptr<_1e890e4c4_Flag>(0);;
				jule::Bool _23327_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1e893110b_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23365_s, jule::I64 _23373_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _22891be85_ParseInt(_23365_s, _23373_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23327_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23327_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1e48138c7_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e47d1796_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1e89303e6:;
			{
				jule::Ptr<_1e8913121_Flag> _24017_uintf = (*(_21735_flag)).cast_ptr<_1e8913121_Flag>(1);;
				jule::Bool _24128_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e893883e_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24166_s, jule::I64 _24174_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _22891b9ce_ParseUint(_24166_s, _24174_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24017_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24128_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24128_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1e48138c7_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e47d1796_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1e893045c:;
			{
				jule::Ptr<_1e891681c_Flag> _24817_ff = (*(_21735_flag)).cast_ptr<_1e891681c_Flag>(2);;
				(*((*(_24817_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _2289238c6_ParseFloat(_2259_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1e48138c7_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e47d1796_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e89304c3:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_1e891d758_Flag>(4)))._field_data))=_2259_data;
			}
		}
		_match_end_1e892ea99:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e4818c51_singleDash(_1e4817e09_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2619_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_2619_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8947b7d:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1e48138c7_CommonFlag> _26317_flag = _1e4816028_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26317_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _1e4818998_processFlag(_self_, &(_26317_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1e8947b7d:;
			++it;
			goto _iter_begin_1e8947b7d;
		}
		_iter_end_1e8947b7d:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e4819009_doubleDash(_1e4817e09_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1e48138c7_CommonFlag> _27613_flag = _1e4815bd7_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27613_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1e4818998_processFlag(_self_, &(_27613_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e4819207_tryArg(_1e4817e09_argParser* _self_) {
	jule::Str _2849_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2849_arg[0LL] == '-')) {
		if (((_2849_arg.len() > 1LL) && (_2849_arg[1LL] == '-'))) {
			({
				auto except = _1e4819009_doubleDash(_self_, &(_2849_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1e4818c51_singleDash(_self_, &(_2849_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2849_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e4819405_parse(_1e4817e09_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1e4819207_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1e894e37c:;
	}
	_iter_end_1e894e37c:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1e4817e09_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4780b1e_ObjectCoder> static__1e478101a_New(jule::Ptr<_1e3b9cbb8_IR>* _9324_ir, _1e477e106_SerializationInfo _9333_info) {
	jule::Ptr<_1e4780b1e_ObjectCoder> _9413_oc = jule::new_ptr<_1e4780b1e_ObjectCoder>(_1e4780b1e_ObjectCoder{._field_ir=(*(_9324_ir)), ._field_info=_9333_info, });;
	(*(_9413_oc))._field_ec=static__1e46a38aa_new(&(_9413_oc));
	(*(_9413_oc))._field_sc=static__1e469998e_new(&(_9413_oc));
	(*(_9413_oc))._field_tc=static__1e4790e1a_new(&(_9413_oc));
	return _9413_oc;;
}



inline void _1e47812c3_write(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Str _10425_s) {
	_22771c02d_WriteStr(&(*(_self_))._field_Obj, _10425_s);
}



inline void _1e47814c1_addIndent(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1e47816be_doneIndent(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1e47818bc_indent(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_22771bc75_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1e4781c0d_findAnyType(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e31a06e9_TypeKind>* _12336_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e877b71a:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1e31a06e9_TypeKind> _12421_at = *it;
			{
				if (_1e31a0e03_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1e877b71a:;
			++it;
			_12414_i++;
			goto _iter_begin_1e877b71a;
		}
		_iter_end_1e877b71a:;
	};
	return -1LL;;
}



inline jule::I64 _1e478204e_pushAnyType(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e31a06e9_TypeKind> _13235_t) {
	if ((_1e31a35ed_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=(*((*(_1e31a35ed_Enum(_13235_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _13613_i = _1e4781c0d_findAnyType(_self_, &(_13235_t));;
	if ((_13613_i != -1LL)) {
		return _13613_i;;
	};
	_13613_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13235_t); };
	jule::Str _1429_si = _22892d7e3_Itoa(_13613_i);;
	if ((_1e31a30d1_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14413_elem_kind = _1e4795e75_kind((*(_self_))._field_tc.ptr(), (*(_1e31a30d1_Sptr(_13235_t.ptr())))._field_Elem);;
		jule::Str _14513_kind = _1e4791c2e_asSptr((*(_self_))._field_tc.ptr(), _14413_elem_kind);;
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _14413_elem_kind);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _14513_kind);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17113_comparable = _1e31a1ce4_Comparable(_13235_t.ptr());;
		jule::Str _17213_kind = _1e4795e75_kind((*(_self_))._field_tc.ptr(), _13235_t);;
		if (_17213_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1e31a0ab2_Str(_13235_t.ptr()));
		};
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17113_comparable) {
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1e31a3367_Ptr(_13235_t.ptr()) == nullptr)) {
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		} else {
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17113_comparable) {
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17113_comparable) {
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13613_i;;
}



inline void _1e4782307_pushResultIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305ce36_FnIns>* _24038_f) {
	jule::Str _2419_s = _1e479b046_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24038_f))))._field_Result));;
	jule::Bool _24212_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2419_s, nullptr, &(_24212_ok));
	if (_24212_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2419_s]=false;
	_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, _2419_s);
	_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1e31a4b71_Tup((*((*(_24038_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e879b064:;
		if (it != expr_end) {
			jule::I64 _25014_i = it - expr->begin();
			jule::Ptr<_1e31a06e9_TypeKind> _25021_t = *it;
			{
				_22771c2d6_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, _1e4795e75_kind((*(_self_))._field_tc.ptr(), _25021_t));
				_22771c2d6_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, _22892d7e3_Itoa(_25014_i));
				_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e879b064:;
			++it;
			_25014_i++;
			goto _iter_begin_1e879b064;
		}
		_iter_end_1e879b064:;
	};
	_22771c02d_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1e47825b0_pushResult(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305a032_Fn>* _26135_f) {
	if ((_1e305a4a5_IsVoid((*(_26135_f)).ptr()) || ((*((*((*(_26135_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26513_n = (*((*(_26135_f))))._field_Instances.len();;
	if (((*((*(_26135_f))))._field_Generics.len() == 0LL)) {
		_26513_n=1LL;
	};
	{
		auto expr = (*((*(_26135_f))))._field_Instances.slice(0LL, _26513_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e87a1300:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _26921_ins = *it;
			{
				_1e4782307_pushResultIns(_self_, &(_26921_ins));
			}
			_iter_next_1e87a1300:;
			++it;
			goto _iter_begin_1e87a1300;
		}
		_iter_end_1e87a1300:;
	};
}



inline jule::I64 _1e47829ab_findTypeOffsetS(_1e4780b1e_ObjectCoder* _self_, jule::Ptr<_1e306d2cb_Trait> _27430_t, jule::Ptr<_1e3047d55_StructIns> _27445_s) {
	if (((*(_27430_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87a27da:;
		if (it != expr_end) {
			jule::Ptr<_1e477e6cd_traitHash> *_27816_hash = it;
			{
				if ((((*((*(_27816_hash))))._field_t == _27430_t) && ((*((*(_27816_hash))))._field_s == _27445_s))) {
					return (*((*(_27816_hash))))._field_i;;
				};
			}
			_iter_next_1e87a27da:;
			++it;
			goto _iter_begin_1e87a27da;
		}
		_iter_end_1e87a27da:;
	};
	return -1LL;;
}



inline jule::I64 _1e4782da7_findTypeOffset(_1e4780b1e_ObjectCoder* _self_, jule::Ptr<_1e306d2cb_Trait> _28629_t, jule::Ptr<_1e31a06e9_TypeKind> _28644_k) {
	if (((*(_28629_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1e3047d55_StructIns> _29017_s = nullptr;;
	if ((_1e31a30d1_Sptr(_28644_k.ptr()) != nullptr)) {
		_28644_k=(*(_1e31a30d1_Sptr(_28644_k.ptr())))._field_Elem;
	};
	_29017_s=_1e31a43bd_Struct(_28644_k.ptr());
	if ((_29017_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1e47829ab_findTypeOffsetS(_self_, _28629_t, _29017_s));;
}



inline void _1e478321a_pushAndWriteMaskMapper(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e306d2cb_Trait> _30146_t1, jule::Ptr<_1e306d2cb_Trait> _30162_t2) {
	_227713453_StrBuilder _30213_ident = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_30213_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_22771c02d_WriteStr(&_30213_ident, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30162_t2))), 15LL));
	_22771c02d_WriteStr(&_30213_ident, jule::Str::lit("_to_", 4));
	_22771c02d_WriteStr(&_30213_ident, _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30146_t1))), 15LL));
	_22771bc75_Write(&(*(_self_))._field_Obj, _22771d2c6_Buf(&_30213_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87a7ca7:;
		if (it != expr_end) {
			_1e477eaa7_traitCast _31016_m = *it;
			{
				if (((_31016_m._field_t1 == _30146_t1) && (_31016_m._field_t2 == _30162_t2))) {
					return;;
				};
			}
			_iter_next_1e87a7ca7:;
			++it;
			goto _iter_begin_1e87a7ca7;
		}
		_iter_end_1e87a7ca7:;
	};
	{ jule::Slice<_1e477eaa7_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1e477eaa7_traitCast{._field_t1=_30146_t1, ._field_t2=_30162_t2}); };
	;
	_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_22771c2d6_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_22771bc75_Write(&(*(_self_))._field_anyObj, _22771d2c6_Buf(&_30213_ident));
	_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30146_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87ab7e4:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _32921_s1 = *it;
			{
				{
					auto expr = &((*(_30162_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e87ac130:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> _33020_s2 = *it;
						{
							if ((_32921_s1 == _33020_s2)) {
								{
									auto expr = &((*(_32921_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1e87ace88:;
									if (it != expr_end) {
										jule::Ptr<_1e3047d55_StructIns> _33233_s1i = *it;
										{
											jule::I64 _33325_i1 = _1e47829ab_findTypeOffsetS(_self_.ptr(), _30146_t1, _33233_s1i);;
											jule::I64 _33425_i2 = _1e47829ab_findTypeOffsetS(_self_.ptr(), _30162_t2, _33233_s1i);;
											_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _22892d7e3_Itoa(_33425_i2));
											_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _22892d7e3_Itoa(_33325_i1));
											_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1e87ace88:;
										++it;
										goto _iter_begin_1e87ace88;
									}
									_iter_end_1e87ace88:;
								};
							};
						}
						_iter_next_1e87ac130:;
						++it;
						goto _iter_begin_1e87ac130;
					}
					_iter_end_1e87ac130:;
				};
			}
			_iter_next_1e87ab7e4:;
			++it;
			goto _iter_begin_1e87ab7e4;
		}
		_iter_end_1e87ab7e4:;
	};
	_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_22771c02d_WriteStr(&(*(_self_))._field_anyObj, _22892d7e3_Itoa(0LL));
	_22771c02d_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1e47834c3_locInfo(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_20cb74604_Token>* _35028_t) {
	jule::Str *_35110_loc = &((*((*((*(_35028_t))))._field_File))._field_Path);;
	if (_2252e7bd8_Production) {
		{
			
			if (_2276ede77_HasPrefix((*(_35110_loc)), _2278c349d_PathStdlib)) {
				_case_begin_1e87b2d4a:;
				{
					_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_22772120d_Dir(_2278c349d_PathStdlib).len() + 1LL)));
				}
			}
			else if (_2276ede77_HasPrefix((*(_35110_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1e87b2db1:;
				{
					_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_22772120d_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1e87b28b6:;
				{
					_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
				}
			}
			_match_end_1e87b27ea:;
		};
	} else {
		_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
	};
	_1e47812c3_write(_self_, jule::Str::lit(":", 1));
	_1e47812c3_write(_self_, _22892d7e3_Itoa((*((*(_35028_t))))._field_Row));
	_1e47812c3_write(_self_, jule::Str::lit(":", 1));
	_1e47812c3_write(_self_, _22892d7e3_Itoa((*((*(_35028_t))))._field_Column));
}



inline void _1e47836c1_head(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e47764c7_Time _3779_time = static__1e4776a8d_Now();;
	_1e4775d01_AbsTime _3789_abs = _1e4778276_Abs(&_3779_time);;
	_1e47812c3_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1e47812c3_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1e47812c3_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
	_1e47812c3_write(_self_, jule::Str::lit("// Date: ", 9));
	_1e47812c3_write(_self_, _22892d161_FmtUint(_3789_abs._field_Day, 10LL));
	_1e47812c3_write(_self_, jule::Str::lit("/", 1));
	_1e47812c3_write(_self_, _22892d161_FmtUint(_3789_abs._field_Month, 10LL));
	_1e47812c3_write(_self_, jule::Str::lit("/", 1));
	_1e47812c3_write(_self_, _22892d161_FmtUint(_3789_abs._field_Year, 10LL));
	_1e47812c3_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1e47812c3_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
	_1e47812c3_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2252e7bd8_Production) {
		_1e47812c3_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2252e7545_RC))) {
		_1e47812c3_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2252e791e_Safety))) {
		_1e47812c3_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1e47838be_links(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1e47812c3_write(_self_, _2278c3cb7_PathApi);
	_1e47812c3_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1e47838be_links(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87be252:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _41516_used = *it;
			{
				{
					
					if ((!((*(_41516_used))._field_Binded))) {
						_case_begin_1e87c0011:;
						{
							goto _iter_next_1e87be252;
						}
					}
					else if (_2277a4aee_IsStdHeaderPath((*(_41516_used))._field_Path)) {
						_case_begin_1e87c0088:;
						{
							_1e47812c3_write(_self_, jule::Str::lit("#include ", 9));
							_1e47812c3_write(_self_, (*(_41516_used))._field_Path);
							_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_2277a4da7_IsValidHeaderExt(_2277207d4_Ext((*(_41516_used))._field_Path))) {
						_case_begin_1e87c0110:;
						{
							_1e47812c3_write(_self_, jule::Str::lit("#include \"", 10));
							_1e47812c3_write(_self_, (*(_41516_used))._field_Path);
							_1e47812c3_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1e87bede0:;
				};
			}
			_iter_next_1e87be252:;
			++it;
			goto _iter_begin_1e87be252;
		}
		_iter_end_1e87be252:;
	};
}



inline void _1e4783b77_prepareStructure(_1e4780b1e_ObjectCoder* _self_, jule::Ptr<_1e30450c7_Struct>* _43140_s) {
	{
		auto expr = &((*((*(_43140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c2299:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _43221_ins = *it;
			{
				{
					auto expr = &((*(_43221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e87c38b6:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _43325_m = *it;
						{
							if ((*(_43325_m))._field_Statically) {
								goto _iter_next_1e87c38b6;
							};
							{
								auto expr = &((*(_43325_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e87c4774:;
								if (it != expr_end) {
									jule::Ptr<_1e305ce36_FnIns> _43729_mins = *it;
									{
										jule::Ptr<_1e305be8a_ParamIns> _43825_p = (*(_43729_mins))._field_Params[0LL];;
										if ((!(_1e3058e10_IsRef((*(_43825_p))._field_Decl.ptr())))) {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e478ecc6_customType>(_1e478ecc6_customType{._field_kind=(_1e4795e75_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind) + jule::Str::lit("*", 1))}), 27)});
										} else {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e478ecc6_customType>(_1e478ecc6_customType{._field_kind=_1e4795e75_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_1e87c4774:;
									++it;
									goto _iter_begin_1e87c4774;
								}
								_iter_end_1e87c4774:;
							};
						}
						_iter_next_1e87c38b6:;
						++it;
						goto _iter_begin_1e87c38b6;
					}
					_iter_end_1e87c38b6:;
				};
			}
			_iter_next_1e87c2299:;
			++it;
			goto _iter_begin_1e87c2299;
		}
		_iter_end_1e87c2299:;
	};
}



inline void _1e4783d75_prepareStructures(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c4e5b:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _45821_s = *it;
			{
				if (((*(_45821_s))._field_Token != nullptr)) {
					_1e4783b77_prepareStructure(_self_.ptr(), &(_45821_s));
				};
			}
			_iter_next_1e87c4e5b:;
			++it;
			goto _iter_begin_1e87c4e5b;
		}
		_iter_end_1e87c4e5b:;
	};
}



inline void _1e478412d_iterPackages(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)> _46532_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c728d:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _46621_used = *it;
			{
				if ((!((*(_46621_used))._field_Binded))) {
					_46532_f(&((*(_46621_used))._field_Package));
				};
			}
			_iter_next_1e87c728d:;
			++it;
			goto _iter_begin_1e87c728d;
		}
		_iter_end_1e87c728d:;
	};
	_46532_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1e478432b_buildTraitMap(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _47535_pkg) mutable -> void {
		_1e478caa4_iterFiles(_47535_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _47636_file) mutable -> void {
			{
				auto expr = &((*((*(_47636_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e87cc87b:;
				if (it != expr_end) {
					jule::Ptr<_1e306d2cb_Trait> _47729_t = *it;
					{
						if (((*(_47729_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_47729_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1e477e6cd_traitHash> _48229_hash = jule::new_ptr<_1e477e6cd_traitHash>(_1e477e6cd_traitHash{._field_t=_47729_t, ._field_s=nullptr, ._field_i=0LL});;
							_227713453_StrBuilder _48729_b = static__22771371c_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
							static__1e46b6d85_writeIdentTo(&(_48729_b), &((*(_47729_t))._field_Ident));
							(*(_48229_hash))._field_ti=_22771c825_Str(&_48729_b);
							{ jule::Slice<jule::Ptr<_1e477e6cd_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48229_hash); };
							goto _iter_next_1e87cc87b;
						};
						jule::I64 _49325_i = 0LL;;
						{
							auto expr = &((*(_47729_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e87cd283:;
							if (it != expr_end) {
								jule::Ptr<_1e30450c7_Struct> _49433_s = *it;
								{
									{
										auto expr = &((*(_49433_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e87d18a2:;
										if (it != expr_end) {
											jule::Ptr<_1e3047d55_StructIns> _49537_ins = *it;
											{
												jule::Ptr<_1e477e6cd_traitHash> _49633_hash = jule::new_ptr<_1e477e6cd_traitHash>(_1e477e6cd_traitHash{._field_t=_47729_t, ._field_s=_49537_ins, ._field_i=_49325_i});;
												_227713453_StrBuilder _50133_b = static__22771371c_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
												static__1e46b6d85_writeIdentTo(&(_50133_b), &((*(_47729_t))._field_Ident));
												(*(_49633_hash))._field_ti=_22771c825_Str(&_50133_b);
												{ jule::Slice<jule::Ptr<_1e477e6cd_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49633_hash); };
												(_49325_i)++;
											}
											_iter_next_1e87d18a2:;
											++it;
											goto _iter_begin_1e87d18a2;
										}
										_iter_end_1e87d18a2:;
									};
								}
								_iter_next_1e87cd283:;
								++it;
								goto _iter_begin_1e87cd283;
							}
							_iter_end_1e87cd283:;
						};
						_1e478d852_pushMethodsFromInherits(&(_47729_t), &(_47729_t));
					}
					_iter_next_1e87cc87b:;
					++it;
					goto _iter_begin_1e87cc87b;
				}
				_iter_end_1e87cc87b:;
			};
		}));
	}));
}



inline void _1e4784529_traitDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _51735_pkg) mutable -> void {
		_1e478caa4_iterFiles(_51735_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _51836_file) mutable -> void {
			{
				auto expr = &((*((*(_51836_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e87d52bd:;
				if (it != expr_end) {
					jule::Ptr<_1e306d2cb_Trait> _51929_t = *it;
					{
						if (((*(_51929_t))._field_Token == nullptr)) {
							return;;
						};
						_1e47818bc_indent(_self_);
						_1e47812c3_write(_self_, jule::Str::lit("struct ", 7));
						_1e47812c3_write(_self_, static__1e46b7e85_traitDecl(_51929_t));
						_1e47812c3_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1e87d52bd:;
					++it;
					goto _iter_begin_1e87d52bd;
				}
				_iter_end_1e87d52bd:;
			};
		}));
	}));
}



inline void _1e47847d2_structurePlainDecl(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e30450c7_Struct>* _53243_s) {
	{
		auto expr = &((*((*(_53243_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87cd1a6:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _53321_ins = *it;
			{
				_1e47812c3_write(_self_, jule::Str::lit("struct ", 7));
				_1e47812c3_write(_self_, static__1e46b87d2_structureIns(&(_53321_ins)));
				_1e47812c3_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e87cd1a6:;
			++it;
			goto _iter_begin_1e87cd1a6;
		}
		_iter_end_1e87cd1a6:;
	};
}



inline void _1e47849d0_structurePlainDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87dc506:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _54121_s = *it;
			{
				if (((*(_54121_s))._field_Token != nullptr)) {
					_1e47847d2_structurePlainDecl(_self_, &(_54121_s));
				};
			}
			_iter_next_1e87dc506:;
			++it;
			goto _iter_begin_1e87dc506;
		}
		_iter_end_1e87dc506:;
	};
}



inline void _1e4784c88_fieldDecl(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e30472a5_FieldIns>* _54834_f) {
	_1e47812c3_write(_self_, _1e4795e75_kind((*(_self_))._field_tc.ptr(), (*((*(_54834_f))))._field_Kind));
	_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
	_1e47812c3_write(_self_, static__1e46b8a9b_field(&((*((*(_54834_f))))._field_Decl)));
	if (((*((*(_54834_f))))._field_Default == nullptr)) {
		if (_1e479d136_shouldInitialized(&((*((*(_54834_f))))._field_Kind))) {
			_1e47812c3_write(_self_, jule::Str::lit(" = ", 3));
			_1e46b0b09_initExpr((*(_self_))._field_ec, (*((*(_54834_f))))._field_Kind);
		};
	} else {
		_1e47812c3_write(_self_, jule::Str::lit(" = ", 3));
		_1e46a6836_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_54834_f))))._field_Default))._field_Model);
	};
	_1e47812c3_write(_self_, jule::Str::lit(";", 1));
}



inline void _1e4785041_structureDestructor(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _56644_s) {
	;
	jule::Ptr<_1e305a032_Fn> _5699_disposeMethod = _1e3048dbc_FindMethod((*(_56644_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57013_disposed = static__1e3111292_Dispose(_5699_disposeMethod);;
	if ((!(_57013_disposed))) {
		return;;
	};
	_1e47812c3_write(_self_, jule::Str::lit("~", 1));
	_1e47812c3_write(_self_, static__1e46b87d2_structureIns(_56644_s));
	_1e47812c3_write(_self_, jule::Str::lit("(void) { ", 9));
	_1e47812c3_write(_self_, static__1e46b7902_func(&(_5699_disposeMethod)));
	_1e47812c3_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1e47853a4_structureOperatorEq(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Str* _58240_ident, jule::Ptr<_1e3047d55_StructIns>* _58257_s) {
	if ((!((*((*(_58257_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58257_s))))._field_Operators._field_Eq != nullptr)) {
		_1e4785b35_structureOperator(_self_, _58240_ident, &((*((*(_58257_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1e47818bc_indent(_self_);
	if (_1e32a6e82_Inline) {
		_1e47812c3_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1e47812c3_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1e47812c3_write(_self_, (*(_58240_ident)));
	_1e47812c3_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58257_s))))._field_Fields.len() > 0LL)) {
		_1e47814c1_addIndent(_self_);
		_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
		_1e47818bc_indent(_self_);
		_1e47812c3_write(_self_, jule::Str::lit("return ", 7));
		_1e47814c1_addIndent(_self_);
		jule::Bool _60517_writed = false;;
		{
			auto expr = &((*((*(_58257_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e87eb57b:;
			if (it != expr_end) {
				jule::Ptr<_1e30472a5_FieldIns> _60625_f = *it;
				{
					jule::Ptr<_1e3047d55_StructIns> _60817_strct = _1e31a43bd_Struct((*(_60625_f))._field_Kind.ptr());;
					if ((((_60817_strct != nullptr) && ((*(_60817_strct))._field_Decl != nullptr)) && (*((*(_60817_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1e87eb57b;
					};
					if (_60517_writed) {
						_1e47812c3_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60517_writed=true;
					_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
					_1e47818bc_indent(_self_);
					_1e47812c3_write(_self_, jule::Str::lit("this->", 6));
					jule::Str _61917_fIdent = static__1e46b8a9b_field(&((*(_60625_f))._field_Decl));;
					_1e47812c3_write(_self_, _61917_fIdent);
					_1e47812c3_write(_self_, jule::Str::lit(" == _other.", 11));
					_1e47812c3_write(_self_, _61917_fIdent);
				}
				_iter_next_1e87eb57b:;
				++it;
				goto _iter_begin_1e87eb57b;
			}
			_iter_end_1e87eb57b:;
		};
		_1e47816be_doneIndent(_self_);
		if ((!(_60517_writed))) {
			_1e47812c3_write(_self_, jule::Str::lit("true", 4));
		};
		_1e47812c3_write(_self_, jule::Str::lit(";\n", 2));
		_1e47816be_doneIndent(_self_);
		_1e47818bc_indent(_self_);
		_1e47812c3_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1e4785717_structureOperatorNotEq(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Str* _63843_ident, jule::Ptr<_1e3047d55_StructIns>* _63860_s) {
	if ((!((*((*(_63860_s))))._field_Comparable))) {
		return;;
	};
	_1e47818bc_indent(_self_);
	if (_1e32a6e82_Inline) {
		_1e47812c3_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1e47812c3_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1e47812c3_write(_self_, (*(_63843_ident)));
	_1e47812c3_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1e4785b35_structureOperator(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Str* _65238_ident, jule::Ptr<_1e305ce36_FnIns>* _65255_f, jule::Str _65266_op) {
	if (((*(_65255_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6579_unary = ((*((*(_65255_f))))._field_Params.len() == 1LL);;
	jule::Bool _6589_assignment = _1e305a4a5_IsVoid((*((*(_65255_f))))._field_Decl.ptr());;
	_1e47818bc_indent(_self_);
	if (_1e32a6e82_Inline) {
		_1e47812c3_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6589_assignment) {
		_1e47812c3_write(_self_, (*(_65238_ident)));
		_1e47812c3_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1e31a2d4a_Prim((*((*(_65255_f))))._field_Result.ptr()) == nullptr)) {
			_1e47812c3_write(_self_, (*(_65238_ident)));
		} else {
			_1e47812c3_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1e47812c3_write(_self_, jule::Str::lit(" operator", 9));
	_1e47812c3_write(_self_, _65266_op);
	_1e47812c3_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6579_unary))) {
		jule::Ptr<_1e305be8a_ParamIns> _68017_p = (*((*(_65255_f))))._field_Params[1LL];;
		_1e47812c3_write(_self_, _1e4794ced_paramIns((*(_self_))._field_tc.ptr(), &(_68017_p)));
		_1e47812c3_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1e47812c3_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6589_assignment))) {
		_1e47812c3_write(_self_, jule::Str::lit("return ", 7));
	};
	_1e47812c3_write(_self_, static__1e46b7bbb_funcIns(_65255_f));
	if ((!(_6579_unary))) {
		_1e47812c3_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6589_assignment) {
			_1e47812c3_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1e47812c3_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1e4785ddd_structureOperators(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _70143_s) {
	jule::Str _7029_ident = static__1e46b87d2_structureIns(_70143_s);;
	_1e47853a4_structureOperatorEq(_self_, &(_7029_ident), _70143_s);
	_1e4785717_structureOperatorNotEq(_self_, &(_7029_ident), _70143_s);
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1e4785b35_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1e4786196_structureInsDecl(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _74041_s) {
	{
		auto expr = &((*((*(_74041_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e881d3d3:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _74121_m = *it;
			{
				if (_1e478ddd5_isHeadDecl(&(_74121_m))) {
					_1e478763c_funcDecl(_self_, &(_74121_m), false);
				};
			}
			_iter_next_1e881d3d3:;
			++it;
			goto _iter_begin_1e881d3d3;
		}
		_iter_end_1e881d3d3:;
	};
	_1e47812c3_write(_self_, jule::Str::lit("struct ", 7));
	jule::Str _7489_outIdent = static__1e46b87d2_structureIns(_74041_s);;
	_1e47812c3_write(_self_, _7489_outIdent);
	_1e47812c3_write(_self_, jule::Str::lit(" {\n", 3));
	_1e47814c1_addIndent(_self_);
	{
		auto expr = &((*((*(_74041_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e882010a:;
		if (it != expr_end) {
			jule::Ptr<_1e30472a5_FieldIns> _75421_f = *it;
			{
				_1e47818bc_indent(_self_);
				_1e4784c88_fieldDecl(_self_, &(_75421_f));
				_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1e882010a:;
			++it;
			goto _iter_begin_1e882010a;
		}
		_iter_end_1e882010a:;
	};
	_1e47818bc_indent(_self_);
	_1e4785041_structureDestructor(_self_, _74041_s);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	_1e4785ddd_structureOperators(_self_, _74041_s);
	_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
	_1e47816be_doneIndent(_self_);
	_1e47818bc_indent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("};", 2));
}



inline void _1e478644e_structureDecl(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e30450c7_Struct>* _77238_s) {
	{
		auto expr = &((*((*(_77238_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8823d45:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _77321_ins = *it;
			{
				_1e4786196_structureInsDecl(_self_, &(_77321_ins));
			}
			_iter_next_1e8823d45:;
			++it;
			goto _iter_begin_1e8823d45;
		}
		_iter_end_1e8823d45:;
	};
}



inline void _1e478664c_structureDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88246a3:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _77921_s = *it;
			{
				if (((*(_77921_s))._field_Token != nullptr)) {
					_1e478644e_structureDecl(_self_, &(_77921_s));
					_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1e88246a3:;
			++it;
			goto _iter_begin_1e88246a3;
		}
		_iter_end_1e88246a3:;
	};
}



inline void _1e478684a_structureMethodDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e882564e:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _78821_s = *it;
			{
				if (((*(_78821_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_78821_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e8827695:;
						if (it != expr_end) {
							jule::Ptr<_1e3047d55_StructIns> _79029_ins = *it;
							{
								{
									auto expr = &((*(_79029_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1e88280e1:;
									if (it != expr_end) {
										jule::Ptr<_1e305a032_Fn> _79133_m = *it;
										{
											if ((!(_1e478ddd5_isHeadDecl(&(_79133_m))))) {
												_1e47825b0_pushResult(_self_, &(_79133_m));
												_1e478763c_funcDecl(_self_, &(_79133_m), false);
											};
										}
										_iter_next_1e88280e1:;
										++it;
										goto _iter_begin_1e88280e1;
									}
									_iter_end_1e88280e1:;
								};
							}
							_iter_next_1e8827695:;
							++it;
							goto _iter_begin_1e8827695;
						}
						_iter_end_1e8827695:;
					};
				};
			}
			_iter_next_1e882564e:;
			++it;
			goto _iter_begin_1e882564e;
		}
		_iter_end_1e882564e:;
	};
}



inline void _1e4786b03_paramsDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>* _80336_params) {
	if (((*(_80336_params)).len() == 0LL)) {
		_1e47812c3_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1e47812c3_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80336_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8827de3:;
		if (it != expr_end) {
			jule::I64 _81014_i = it - expr->begin();
			jule::Ptr<_1e305be8a_ParamIns> _81021_p = *it;
			{
				_1e47812c3_write(_self_, _1e4794ced_paramIns((*(_self_))._field_tc.ptr(), &(_81021_p)));
				if ((((*(_80336_params)).len() - _81014_i) > 1LL)) {
					_1e47812c3_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1e8827de3:;
			++it;
			_81014_i++;
			goto _iter_begin_1e8827de3;
		}
		_iter_end_1e8827de3:;
	};
	_1e47812c3_write(_self_, jule::Str::lit(")", 1));
}



inline void _1e4786e66_funcHead(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305ce36_FnIns>* _82033_f, jule::Bool _82044_ptr) {
	if ((((!(_82044_ptr)) && _1e32a6e82_Inline) && (!(_1e305a9c2_IsEntryPoint((*((*(_82033_f))))._field_Decl.ptr()))))) {
		_1e47812c3_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1e47954a2_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _82033_f);
	if (_82044_ptr) {
		_1e47812c3_write(_self_, jule::Str::lit("(*", 2));
		_1e47812c3_write(_self_, static__1e46b7bbb_funcIns(_82033_f));
		_1e47812c3_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
		_1e47812c3_write(_self_, static__1e46b7bbb_funcIns(_82033_f));
	};
}



inline void _1e47872c9_funcDeclIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305ce36_FnIns>* _83536_f, jule::Bool _83547_ptr) {
	_1e47818bc_indent(_self_);
	_1e4786e66_funcHead(_self_, _83536_f, _83547_ptr);
	_1e4786b03_paramsDecls(_self_, &((*((*(_83536_f))))._field_Params));
	_1e47812c3_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1e478763c_funcDecl(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305a032_Fn>* _84233_f, jule::Bool _84241_ptr) {
	{
		auto expr = &((*((*(_84233_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8832590:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _84321_c = *it;
			{
				_1e47872c9_funcDeclIns(_self_, &(_84321_c), _84241_ptr);
			}
			_iter_next_1e8832590:;
			++it;
			goto _iter_begin_1e8832590;
		}
		_iter_end_1e8832590:;
	};
}



inline void _1e4787a5a_funcDeclTrait(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e306d2cb_Trait>* _84838_t, jule::Ptr<_1e305a032_Fn>* _84854_f, jule::Bool _84862_ptr) {
	{
		auto expr = &((*((*(_84854_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8833926:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _84921_c = *it;
			{
				jule::Ptr<_1e31a06e9_TypeKind> _85017_k = (*((*(_84921_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_84838_t)), 2)});
				_1e47872c9_funcDeclIns(_self_, &(_84921_c), _84862_ptr);
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=_85017_k;
			}
			_iter_next_1e8833926:;
			++it;
			goto _iter_begin_1e8833926;
		}
		_iter_end_1e8833926:;
	};
}



inline void _1e4787c58_funcDecls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _85835_pkg) mutable -> void {
		_1e478caa4_iterFiles(_85835_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _85936_file) mutable -> void {
			{
				auto expr = &((*((*(_85936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e8837e69:;
				if (it != expr_end) {
					jule::Ptr<_1e305a032_Fn> _86029_f = *it;
					{
						if (((!((*(_86029_f))._field_Binded)) && ((*(_86029_f))._field_Token != nullptr))) {
							_1e47825b0_pushResult(_self_, &(_86029_f));
							_1e478763c_funcDecl(_self_, &(_86029_f), false);
						};
					}
					_iter_next_1e8837e69:;
					++it;
					goto _iter_begin_1e8837e69;
				}
				_iter_end_1e8837e69:;
			};
		}));
	}));
}



inline void _1e47880bb_traitDataTypeMethods(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e306d2cb_Trait>* _87045_owner, jule::Ptr<_1e306d2cb_Trait>* _87065_t) {
	{
		auto expr = &((*((*(_87065_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8837b17:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _87121_m = *it;
			{
				jule::Ptr<_1e305ce36_FnIns> _87217_ins = (*(_87121_m))._field_Instances[0LL];;
				jule::Ptr<_1e305be8a_ParamIns> _87317_p = (*(_87217_ins))._field_Params[0LL];;
				(*(_87317_p))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_87065_t)), 2)});
				{
					auto expr = (*(_87217_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1e883b610:;
					if (it != expr_end) {
						jule::I64 _87718_i = it - expr.begin();
						jule::Ptr<_1e305be8a_ParamIns> _87725_ip = *it;
						{
							if (_1e3011aaa_IsAnonIdent((*((*(_87725_ip))._field_Decl))._field_Ident)) {
								(*((*(_87725_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _22892d7e3_Itoa(_87718_i));
							};
						}
						_iter_next_1e883b610:;
						++it;
						_87718_i++;
						goto _iter_begin_1e883b610;
					}
					_iter_end_1e883b610:;
				};
				if ((!(_2252e7bd8_Production))) {
					jule::Ptr<_1e305be8a_ParamIns> _88321_lp = (*(_87217_ins))._field_Params[((*(_87217_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88321_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1e8840c30:;
							{
								goto _match_end_1e883e008;
							}
						}
						else {
							_case_begin_1e883e05d:;
							{
								{ jule::Slice<jule::Ptr<_1e305be8a_ParamIns>> &__jule_push_dest = (*(_87217_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1e305be8a_ParamIns>(_1e305be8a_ParamIns{._field_Decl=jule::new_ptr<_1e305855d_Param>(_1e305855d_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e478ecc6_customType>(_1e478ecc6_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1e883e008:;
					};
				};
				_1e47825b0_pushResult(_self_, &(_87121_m));
				_1e4787a5a_funcDeclTrait(_self_, _87045_owner, &(_87121_m), true);
			}
			_iter_next_1e8837b17:;
			++it;
			goto _iter_begin_1e8837b17;
		}
		_iter_end_1e8837b17:;
	};
}



inline void _1e47882b9_traitDataTypes(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _90635_pkg) mutable -> void {
		_1e478caa4_iterFiles(_90635_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _90736_file) mutable -> void {
			{
				auto expr = &((*((*(_90736_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e8842baa:;
				if (it != expr_end) {
					jule::Ptr<_1e306d2cb_Trait> _90829_t = *it;
					{
						if (((*(_90829_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_90829_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1e8842baa;
						};
						_1e47812c3_write(_self_, jule::Str::lit("struct ", 7));
						_1e47812c3_write(_self_, static__1e46b7e85_traitDecl(_90829_t));
						_1e47812c3_write(_self_, jule::Str::lit("MptrData", 8));
						_1e47812c3_write(_self_, jule::Str::lit(" {\n", 3));
						_1e47814c1_addIndent(_self_);
						_1e47880bb_traitDataTypeMethods(_self_, &(_90829_t), &(_90829_t));
						_1e47816be_doneIndent(_self_);
						_1e47818bc_indent(_self_);
						_1e47812c3_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1e8842baa:;
					++it;
					goto _iter_begin_1e8842baa;
				}
				_iter_end_1e8842baa:;
			};
		}));
	}));
}



inline void _1e4788572_paramIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305be8a_ParamIns>* _92933_p) {
	_1e47812c3_write(_self_, _1e4794ced_paramIns((*(_self_))._field_tc.ptr(), _92933_p));
	_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
	_1e47812c3_write(_self_, static__1e46b824e_param(&((*((*(_92933_p))))._field_Decl)));
}



inline void _1e478882a_paramsIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>* _93534_params) {
	if (((*(_93534_params)).len() == 0LL)) {
		_1e47812c3_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1e47812c3_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _93534_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8847d25:;
		if (it != expr_end) {
			jule::I64 _94114_i = it - expr->begin();
			jule::Ptr<_1e305be8a_ParamIns> _94121_p = *it;
			{
				_1e4788572_paramIns(_self_, &(_94121_p));
				if ((((*(_93534_params)).len() - _94114_i) > 1LL)) {
					_1e47812c3_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1e8847d25:;
			++it;
			_94114_i++;
			goto _iter_begin_1e8847d25;
		}
		_iter_end_1e8847d25:;
	};
	_1e47812c3_write(_self_, jule::Str::lit(")", 1));
}



inline void _1e4788b8d_varInitExpr(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e310ed40_Var>* _95036_v, jule::Fn<void(void)> _95045_init) {
	if ((*((*(_95036_v))))._field_Statically) {
		_1e47812c3_write(_self_, jule::Str::lit("static ", 7));
	};
	_1e47812c3_write(_self_, _1e4795e75_kind((*(_self_))._field_tc.ptr(), (*((*((*(_95036_v))))._field_Kind))._field_Kind));
	_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95036_v))))._field_Reference) {
		_1e47812c3_write(_self_, jule::Str::lit("*", 1));
	};
	_1e47812c3_write(_self_, static__1e46b8d65_var((*(_95036_v))));
	if ((_95045_init != nullptr)) {
		_1e47812c3_write(_self_, jule::Str::lit(" = ", 3));
		_95045_init();
	};
	_1e47812c3_write(_self_, jule::Str::lit(";", 1));
}



inline void _1e4788e46_var(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e310ed40_Var> _96827_v) {
	if (_1e30117e1_IsIgnoreIdent((*(_96827_v))._field_Ident)) {
		return;;
	};
	if ((((*(_96827_v))._field_Value != nullptr) && ((*((*(_96827_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_96827_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_96827_v))._field_Reference) {
				_1e4788b8d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1e47812c3_write(_self_, jule::Str::lit("&(", 2));
					_1e46b0851_model((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
					_1e47812c3_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1e4788b8d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1e46a6836_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1e4788b8d_varInitExpr(_self_, &(_96827_v), nullptr);
		return;;
	};
	if ((*(_96827_v))._field_Reference) {
		_1e4788b8d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e47812c3_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1e479d136_shouldInitialized(&((*((*(_96827_v))._field_Kind))._field_Kind))) {
		_1e4788b8d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e46b0b09_initExpr((*(_self_))._field_ec, (*((*(_96827_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1e4788b8d_varInitExpr(_self_, &(_96827_v), nullptr);
}



inline void _1e47891ee_funcIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305ce36_FnIns>* _99932_f) {
	_1e4786e66_funcHead(_self_, _99932_f, false);
	_1e478882a_paramsIns(_self_, &((*((*(_99932_f))))._field_Params));
	_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
	_1e46a0610_funcScope((*(_self_))._field_sc, (*(_99932_f)));
	if (((*((*(_99932_f))))._field_Scope != nullptr)) {
		_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1e47894a7_func(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305a032_Fn>* _100929_f) {
	{
		auto expr = &((*((*(_100929_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e885a1ab:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _101021_ins = *it;
			{
				_1e47891ee_funcIns(_self_, &(_101021_ins));
			}
			_iter_next_1e885a1ab:;
			++it;
			goto _iter_begin_1e885a1ab;
		}
		_iter_end_1e885a1ab:;
	};
}



inline void _1e478981a_funcTrait(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e477e6cd_traitHash>* _101534_hash, jule::Ptr<_1e305a032_Fn>* _101557_f) {
	jule::Str _10169_ident = (*((*(_101557_f))))._field_Ident;;
	{
		auto expr = &((*((*(_101557_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e885b355:;
		if (it != expr_end) {
			jule::Ptr<_1e305ce36_FnIns> _101721_ins = *it;
			{
				(*(_101721_ins))._field_Scope=nullptr;
				_227713453_StrBuilder _102017_s = static__22771371c_New(static_cast<jule::I64>((((((*((*(_101557_f))))._field_Ident.len() + _10169_ident.len()) + (*((*(_101534_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_22771c02d_WriteStr(&_102017_s, _10169_ident);
				_22771c2d6_WriteByte(&_102017_s, '_');
				_22771c02d_WriteStr(&_102017_s, (*((*(_101534_hash))))._field_ti);
				_22771c2d6_WriteByte(&_102017_s, '_');
				_22771c02d_WriteStr(&_102017_s, _22892d7e3_Itoa((*((*(_101534_hash))))._field_i));
				(*((*(_101557_f))))._field_Ident=_22771c825_Str(&_102017_s);
				jule::Ptr<_1e31a06e9_TypeKind> _102917_k = (*((*(_101721_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*((*(_101534_hash))))._field_t, 2)});
				_1e47891ee_funcIns(_self_, &(_101721_ins));
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=_102917_k;
			}
			_iter_next_1e885b355:;
			++it;
			goto _iter_begin_1e885b355;
		}
		_iter_end_1e885b355:;
	};
	(*((*(_101557_f))))._field_Ident=_10169_ident;
}



inline void _1e4789b7d_traitWrapper(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e305a032_Fn>* _103737_m, jule::Ptr<_1e477e6cd_traitHash>* _103750_hash) {
	_1e478981a_funcTrait(_self_, _103750_hash, _103737_m);
	if (((*((*(_103750_hash))))._field_s == nullptr)) {
		if (_2252e7bd8_Production) {
			_1e47812c3_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1e47812c3_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10499_ptr = (!(_1e3058e10_IsRef((*((*(_103737_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1e305a032_Fn> _105113_sm = _1e3048dbc_FindMethod((*((*(_103750_hash))))._field_s.ptr(), (*((*(_103737_m))))._field_Ident, false);;
	if (((_105113_sm == nullptr) || ((*(_105113_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1e47814c1_addIndent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("{\n", 2));
	_1e47818bc_indent(_self_);
	if (((*(_105113_sm))._field_Exceptional || (!(_1e305a4a5_IsVoid(_105113_sm.ptr()))))) {
		_1e47812c3_write(_self_, jule::Str::lit("return ", 7));
	};
	_1e47812c3_write(_self_, static__1e46b7902_func(&(_105113_sm)));
	_1e47812c3_write(_self_, jule::Str::lit("(", 1));
	if (_10499_ptr) {
		_1e47812c3_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1e47812c3_write(_self_, _1e479432a_structureIns((*(_self_))._field_tc.ptr(), (*((*(_103750_hash))))._field_s));
		_1e47812c3_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_2252e7bd8_Production))) {
			_1e47812c3_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1e47812c3_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1e47812c3_write(_self_, _1e4793ed9_structure((*(_self_))._field_tc.ptr(), (*(_105113_sm))._field_Owner));
		_1e47812c3_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_103737_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e886776d:;
		if (it != expr_end) {
			jule::Ptr<_1e305855d_Param> _107716_mp = *it;
			{
				_1e47812c3_write(_self_, jule::Str::lit(", ", 2));
				_1e47812c3_write(_self_, static__1e46b824e_param(&(_107716_mp)));
			}
			_iter_next_1e886776d:;
			++it;
			goto _iter_begin_1e886776d;
		}
		_iter_end_1e886776d:;
	};
	_1e47812c3_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1e47816be_doneIndent(_self_);
}



inline void _1e4789d7b_traitWrappers(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e886c795:;
		if (it != expr_end) {
			jule::Ptr<_1e477e6cd_traitHash> _108621_hash = *it;
			{
				{
					auto expr = &((*((*(_108621_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e886d1be:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _108725_m = *it;
						{
							_1e4789b7d_traitWrapper(_self_, &(_108725_m), &(_108621_hash));
						}
						_iter_next_1e886d1be:;
						++it;
						goto _iter_begin_1e886d1be;
					}
					_iter_end_1e886d1be:;
				};
			}
			_iter_next_1e886c795:;
			++it;
			goto _iter_begin_1e886c795;
		}
		_iter_end_1e886c795:;
	};
}



inline void _1e478a1de_traitDataMethods(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e306d2cb_Trait>* _109341_t, jule::Ptr<_1e477e6cd_traitHash>* _109353_hash) {
	{
		auto expr = &((*((*(_109341_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e886dcb3:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _109421_m = *it;
			{
				jule::Str _109513_mIdent = static__1e46b7902_func(&(_109421_m));;
				_1e47818bc_indent(_self_);
				_1e47812c3_write(_self_, jule::Str::lit(".", 1));
				_1e47812c3_write(_self_, _109513_mIdent);
				_1e47812c3_write(_self_, jule::Str::lit("=", 1));
				_1e47812c3_write(_self_, _109513_mIdent);
				_1e47812c3_write(_self_, jule::Str::lit("_", 1));
				_1e47812c3_write(_self_, (*((*(_109353_hash))))._field_ti);
				_1e47812c3_write(_self_, jule::Str::lit("_", 1));
				_1e47812c3_write(_self_, _22892d7e3_Itoa((*((*(_109353_hash))))._field_i));
				_1e47812c3_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1e886dcb3:;
			++it;
			goto _iter_begin_1e886dcb3;
		}
		_iter_end_1e886dcb3:;
	};
}



inline void _1e478a552_traitData(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e477e6cd_traitHash>* _110934_hash, jule::Ptr<_1e306d2cb_Trait>* _110957_old) {
	if (((*((*((*(_110934_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _11139_ident = static__1e46b7e85_traitDecl((*((*(_110934_hash))))._field_t);;
	if (((*((*(_110934_hash))))._field_t != (*(_110957_old)))) {
		if (((*(_110957_old)) != nullptr)) {
			_1e47816be_doneIndent(_self_);
			_1e47818bc_indent(_self_);
			_1e47812c3_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1e47812c3_write(_self_, jule::Str::lit("static ", 7));
		_1e47812c3_write(_self_, _11139_ident);
		_1e47812c3_write(_self_, jule::Str::lit("MptrData ", 9));
		_1e47812c3_write(_self_, _11139_ident);
		_1e47812c3_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_110957_old))=(*((*(_110934_hash))))._field_t;
		_1e47814c1_addIndent(_self_);
	};
	_1e47818bc_indent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("{\n", 2));
	_1e47814c1_addIndent(_self_);
	_1e478a1de_traitDataMethods(_self_, &((*((*(_110934_hash))))._field_t), _110934_hash);
	_1e47816be_doneIndent(_self_);
	_1e47818bc_indent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1e478a750_traitDatas(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	jule::Ptr<_1e306d2cb_Trait> _113817_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88790ed:;
		if (it != expr_end) {
			jule::Ptr<_1e477e6cd_traitHash> _113921_hash = *it;
			{
				_1e478a552_traitData(_self_, &(_113921_hash), &(_113817_old));
			}
			_iter_next_1e88790ed:;
			++it;
			goto _iter_begin_1e88790ed;
		}
		_iter_end_1e88790ed:;
	};
	if ((_113817_old != nullptr)) {
		_1e47816be_doneIndent(_self_);
		_1e47818bc_indent(_self_);
		_1e47812c3_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1e478a94d_globals(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e887ae68:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _115021_v = *it;
			{
				_1e47812c3_write(_self_, _1e4795e75_kind((*(_self_))._field_tc.ptr(), (*((*(_115021_v))._field_Kind))._field_Kind));
				_1e47812c3_write(_self_, jule::Str::lit(" ", 1));
				_1e47812c3_write(_self_, static__1e46b8d65_var(_115021_v));
				_1e47812c3_write(_self_, jule::Str::lit(" = ", 3));
				_1e46b0851_model((*(_self_))._field_ec, (*((*((*(_115021_v))._field_Value))._field_Data))._field_Model);
				_1e47812c3_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1e887ae68:;
			++it;
			goto _iter_begin_1e887ae68;
		}
		_iter_end_1e887ae68:;
	};
}



inline void _1e478ab4b_decls(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e4784529_traitDecls(_self_);
	_1e47849d0_structurePlainDecls(_self_);
	_1e478664c_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_22771cca9_Len(&(*(_self_))._field_Obj));
	_1e478684a_structureMethodDecls(_self_);
	_1e4787c58_funcDecls(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	_1e47882b9_traitDataTypes(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	_1e4789d7b_traitWrappers(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	_1e478a750_traitDatas(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_22771cca9_Len(&(*(_self_))._field_Obj));
	_1e478a94d_globals(_self_);
}



inline void _1e478ae04_structureMethods(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _117841_s) {
	{
		auto expr = &((*((*(_117841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8883ca6:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _117921_f = *it;
			{
				_1e47894a7_func(_self_, &(_117921_f));
				_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1e8883ca6:;
			++it;
			goto _iter_begin_1e8883ca6;
		}
		_iter_end_1e8883ca6:;
	};
}



inline void _1e478b1ac_structureOstream(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _118541_s) {
	_1e47818bc_indent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1e47812c3_write(_self_, static__1e46b87d2_structureIns(_118541_s));
	_1e47812c3_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1e47814c1_addIndent(_self_);
	_1e47818bc_indent(_self_);
	jule::Ptr<_1e305a032_Fn> _119313_fts = _1e3048dbc_FindMethod((*(_118541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1e311155b_Str(_119313_fts)) {
		_1e47812c3_write(_self_, jule::Str::lit("_Stream << ", 11));
		_1e47812c3_write(_self_, static__1e46b7902_func(&(_119313_fts)));
		_1e47812c3_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_118541_s))))._field_Decl))._field_Ident);
		_1e47812c3_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_118541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e888887c:;
			if (it != expr_end) {
				jule::I64 _120318_i = it - expr->begin();
				jule::Ptr<_1e30472a5_FieldIns> _120325_f = *it;
				{
					_1e47818bc_indent(_self_);
					_1e47812c3_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1e46b15bb_cstrBytes(&((*(_self_))._field_Obj), (*((*(_120325_f))._field_Decl))._field_Ident);
					_1e47812c3_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1e3047d55_StructIns> _121017_strct = _1e31a43bd_Struct((*(_120325_f))._field_Kind.ptr());;
					if ((((_121017_strct != nullptr) && ((*(_121017_strct))._field_Decl != nullptr)) && (*((*(_121017_strct))._field_Decl))._field_Binded)) {
						_1e47812c3_write(_self_, jule::Str::lit(" cpp.", 5));
						_1e47812c3_write(_self_, static__1e46b8a9b_field(&((*(_120325_f))._field_Decl)));
						_1e47812c3_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1e47812c3_write(_self_, jule::Str::lit("\" << _Src.", 10));
						_1e47812c3_write(_self_, static__1e46b8a9b_field(&((*(_120325_f))._field_Decl)));
					};
					if (((_120318_i + 1LL) < (*((*(_118541_s))))._field_Fields.len())) {
						_1e47812c3_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1e47812c3_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1e888887c:;
				++it;
				_120318_i++;
				goto _iter_begin_1e888887c;
			}
			_iter_end_1e888887c:;
		};
		_1e47818bc_indent(_self_);
		_1e47812c3_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1e47818bc_indent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1e47816be_doneIndent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("}", 1));
}



inline void _1e478b465_structureIns(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e3047d55_StructIns>* _123637_s) {
	_1e478ae04_structureMethods(_self_, _123637_s);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	_1e478b1ac_structureOstream(_self_, _123637_s);
}



inline void _1e478b71d_structure(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e30450c7_Struct>* _124234_s) {
	{
		auto expr = &((*((*(_124234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8893007:;
		if (it != expr_end) {
			jule::Ptr<_1e3047d55_StructIns> _124321_ins = *it;
			{
				_1e478b465_structureIns(_self_, &(_124321_ins));
				_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1e8893007:;
			++it;
			goto _iter_begin_1e8893007;
		}
		_iter_end_1e8893007:;
	};
}



inline void _1e478b91b_structures(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8893854:;
		if (it != expr_end) {
			jule::Ptr<_1e30450c7_Struct> _125021_s = *it;
			{
				if (((*(_125021_s))._field_Token != nullptr)) {
					_1e478b71d_structure(_self_, &(_125021_s));
					_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1e8893854:;
			++it;
			goto _iter_begin_1e8893854;
		}
		_iter_end_1e8893854:;
	};
}



inline void _1e478bb19_funcs(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _125935_pkg) mutable -> void {
		_1e478caa4_iterFiles(_125935_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _126036_file) mutable -> void {
			{
				auto expr = &((*((*(_126036_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e8897abc:;
				if (it != expr_end) {
					jule::Ptr<_1e305a032_Fn> _126129_f = *it;
					{
						if (((!(_2252e727b_Test)) && _1e479cd6c_hasDirective(&((*(_126129_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1e8897abc;
						};
						if (((!((*(_126129_f))._field_Binded)) && ((*(_126129_f))._field_Token != nullptr))) {
							_1e47894a7_func(_self_, &(_126129_f));
							_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1e8897abc:;
					++it;
					goto _iter_begin_1e8897abc;
				}
				_iter_end_1e8897abc:;
			};
		}));
	}));
}



inline void _1e478bdc2_pushInit(jule::Ptr<_1e4780b1e_ObjectCoder> _self_, jule::Ptr<_1e30beddd_Package>* _127433_pkg) {
	_1e478caa4_iterFiles(_127433_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)>([=](jule::Ptr<_1e3169ad1_SymbolTable>* _127532_file) mutable -> void {
		{
			auto expr = &((*((*(_127532_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e889a65d:;
			if (it != expr_end) {
				jule::Ptr<_1e305a032_Fn> _127620_f = *it;
				{
					if ((*(_127620_f))._field_Ident.equal("init", 4)) {
						_1e47818bc_indent(_self_);
						_1e47812c3_write(_self_, static__1e46b7902_func(&(_127620_f)));
						_1e47812c3_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1e889a65d:;
				++it;
				goto _iter_begin_1e889a65d;
			}
			_iter_end_1e889a65d:;
		};
	}));
}



inline void _1e478c0c0_initCaller(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e47812c3_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1e47814c1_addIndent(_self_);
	_1e478412d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e30beddd_Package>*)>([=](jule::Ptr<_1e30beddd_Package>* _128935_pkg) mutable -> void {
		_1e478bdc2_pushInit(_self_, _128935_pkg);
	}));
	_1e47816be_doneIndent(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1e478c2bd_end(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e47812c3_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2252e727b_Test) {
		_1e47812c3_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1e47812c3_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1e47812c3_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1e478c4bb_serializeHead(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e4783d75_prepareStructures(_self_);
	_1e478432b_buildTraitMap(_self_);
	_1e47836c1_head(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
	_1e478ab4b_decls(_self_);
	if ((_22771cca9_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _132417_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_22771d2c6_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_132417_head).append(_22771d2c6_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_22771cca9_Len(&(*(_self_))._field_resultDecls);
		(_132417_head).append(_22771d2c6_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_22771d57e_SetBuf(&(*(_self_))._field_Obj, _132417_head);
		};
	};
	_1e47812c3_write(_self_, jule::Str::lit("\n", 1));
	_1e478b91b_structures(_self_);
	_1e478bb19_funcs(_self_);
	_1e478c0c0_initCaller(_self_);
	_1e47812c3_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_22771cca9_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _133817_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_22771d2c6_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_133817_head).append(_22771d2c6_Buf(&(*(_self_))._field_anyObj));;
		(_133817_head).append(_22771d2c6_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_22771d57e_SetBuf(&(*(_self_))._field_Obj, _133817_head);
		};
	};
}



inline void _1e478c6b9_Serialize(jule::Ptr<_1e4780b1e_ObjectCoder> _self_) {
	_1e478c4bb_serializeHead(_self_);
	_1e478c2bd_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1e4780b1e_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ccbaa5_ObjectDeadCode> static__1e3ccc04a_new(jule::Ptr<_1e3b9cbb8_IR>* _3424_ir) {
	return jule::new_ptr<_1e3ccbaa5_ObjectDeadCode>(_1e3ccbaa5_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1e75c2ead_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e306d2cb_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1e306d2cb_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e75c4c29:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1e75c4a2b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75c4c90:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e75c4c90:;
			++it;
			_5213_i++;
			goto _iter_begin_1e75c4c90;
		}
		_iter_end_1e75c4c90:;
	};
	return false;;
}

inline jule::Bool _1e75c8a0d_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e305ce36_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1e305ce36_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e75ca5ae:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1e75ca504:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75cb2c4:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e75cb2c4:;
			++it;
			_5213_i++;
			goto _iter_begin_1e75cb2c4;
		}
		_iter_end_1e75cb2c4:;
	};
	return false;;
}

inline jule::Bool _1e75ce01e_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e3047d55_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1e3047d55_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e75d419a:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1e75d4013:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75d4277:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e75d4277:;
			++it;
			_5213_i++;
			goto _iter_begin_1e75d4277;
		}
		_iter_end_1e75d4277:;
	};
	return false;;
}

inline jule::Bool _1e75d6895_isLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e310ed40_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e75d84e0:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1e75d83be:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75d8479:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e75d8479:;
			++it;
			_5213_i++;
			goto _iter_begin_1e75d8479;
		}
		_iter_end_1e75d8479:;
	};
	return false;;
}



inline void _1e75c3376_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e306d2cb_Trait> _6035_t) {
	{
		
{
			_case_begin_1e75c6e3a:;
			{
				{ jule::Slice<jule::Ptr<_1e306d2cb_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1e75c6c3c:;
	};
}

inline void _1e75c8d93_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e305ce36_FnIns> _6035_t) {
	{
		
{
			_case_begin_1e75cce52:;
			{
				{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1e75ccd31:;
	};
}

inline void _1e75cec56_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e3047d55_StructIns> _6035_t) {
	{
		
{
			_case_begin_1e75d154e:;
			{
				{ jule::Slice<jule::Ptr<_1e3047d55_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1e75d13b7:;
	};
}

inline void _1e75d6c5d_pushLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e310ed40_Var> _6035_t) {
	{
		
{
			_case_begin_1e75daa86:;
			{
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1e75da9cb:;
	};
}



inline void _1e3d0c344_setReferencesAsLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e30610e3_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1e30617ca_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1e3061b1b_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1e75c1d47:;
					{
						jule::Ptr<_1e306d2cb_Trait> _8221_t = _7917_ref.cast_ptr<_1e306d2cb_Trait>(&__jule_any_type10);;
						if (_1e75c2ead_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1e75c1231;
						};
						_1e75c3376_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e75c4278:;
							if (it != expr_end) {
								jule::Ptr<_1e305a032_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e75c69a6:;
										if (it != expr_end) {
											jule::Ptr<_1e305ce36_FnIns> _8833_mins = *it;
											{
												if (_1e75c8a0d_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1e75c69a6;
												};
												_1e75c8d93_pushLive(_self_, _8833_mins);
												_1e3d0c344_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1e75c69a6:;
											++it;
											goto _iter_begin_1e75c69a6;
										}
										_iter_end_1e75c69a6:;
									};
								}
								_iter_next_1e75c4278:;
								++it;
								goto _iter_begin_1e75c4278;
							}
							_iter_end_1e75c4278:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1e75c1dad:;
					{
						jule::Ptr<_1e305ce36_FnIns> _9721_f = _7917_ref.cast_ptr<_1e305ce36_FnIns>(&__jule_any_type7);;
						if (_1e75c8a0d_isLive(_self_, &(_9721_f))) {
							goto _match_end_1e75c15d8;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1e75ce01e_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1e75cec56_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1e3d0c344_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1e75c8d93_pushLive(_self_, _9721_f);
						_1e3d0c344_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1e75c1e24:;
					{
						jule::Ptr<_1e310ed40_Var> _11021_v = _7917_ref.cast_ptr<_1e310ed40_Var>(&__jule_any_type8);;
						if (_1e75d6895_isLive(_self_, &(_11021_v))) {
							goto _match_end_1e75c15d8;
						};
						_1e75d6c5d_pushLive(_self_, _11021_v);
						_1e3d0c344_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1e75c1e9b:;
					{
						jule::Ptr<_1e3047d55_StructIns> _11721_s = _7917_ref.cast_ptr<_1e3047d55_StructIns>(&__jule_any_type9);;
						if (_1e75ce01e_isLive(_self_, &(_11721_s))) {
							goto _match_end_1e75c15d8;
						};
						_1e75cec56_pushLive(_self_, _11721_s);
						_1e3d0c344_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e75dbbca:;
							if (it != expr_end) {
								jule::Ptr<_1e305a032_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e75dd8ad:;
										if (it != expr_end) {
											jule::Ptr<_1e305ce36_FnIns> _12433_ins = *it;
											{
												if (_1e75c8a0d_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1e75dd8ad;
												};
												if (_1e3d10017_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1e75c8d93_pushLive(_self_, _12433_ins);
													_1e3d0c344_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1e75dd8ad:;
											++it;
											goto _iter_begin_1e75dd8ad;
										}
										_iter_end_1e75dd8ad:;
									};
								}
								_iter_next_1e75dbbca:;
								++it;
								goto _iter_begin_1e75dbbca;
							}
							_iter_end_1e75dbbca:;
						};
					}
				}
				_match_end_1e75c15d8:;
			};
		}
	_iter_next_1e75c1231:;
	}
	_iter_end_1e75c1231:;;
}



inline void _1e3d0c5ec_inits(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e30beddd_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75d6026:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e75de20a:;
					if (it != expr_end) {
						jule::Ptr<_1e305a032_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1e305ce36_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1e3d0c344_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1e75de20a:;
						++it;
						goto _iter_begin_1e75de20a;
					}
					_iter_end_1e75de20a:;
				};
			}
			_iter_next_1e75d6026:;
			++it;
			goto _iter_begin_1e75d6026;
		}
		_iter_end_1e75d6026:;
	};
}



inline void _1e3d0c8a5_collectLivePackage(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e30beddd_Package>* _15343_pkg) {
	_1e3d0c5ec_inits(_self_, _15343_pkg);
	if (_2252e727b_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e75e3022:;
			if (it != expr_end) {
				jule::Ptr<_1e3169ad1_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e75e396d:;
						if (it != expr_end) {
							jule::Ptr<_1e305a032_Fn> _16029_f = *it;
							{
								if (_1e3d0eb4e_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1e305ce36_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1e3d0c344_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1e75e396d:;
							++it;
							goto _iter_begin_1e75e396d;
						}
						_iter_end_1e75e396d:;
					};
				}
				_iter_next_1e75e3022:;
				++it;
				goto _iter_begin_1e75e3022;
			}
			_iter_end_1e75e3022:;
		};
	};
}



inline void _1e3d0caa3_collectLive(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75e462d:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1e3d0c8a5_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1e75e462d:;
			++it;
			goto _iter_begin_1e75e462d;
		}
		_iter_end_1e75e462d:;
	};
	_1e3d0c8a5_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1e305a032_Fn> _18013_main = _1e30c1472_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1e305ce36_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1e305ce36_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1e3d0c344_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1e3d0cd5b_removeDeadGlobals(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e310ed40_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1e310ed40_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1e75d6895_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1e75e9721;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1e75e9721:;
	}
	_iter_end_1e75e9721:;;
}



inline void _1e3d0d114_removeDeadFns(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e305a032_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1e305a032_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1e305ce36_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1e75c8a0d_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1e75eba20;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1e75eba20:;
			}
			_iter_end_1e75eba20:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1e75e98ec;
			};
			(_19913_i)++;
		}
	_iter_next_1e75e98ec:;
	}
	_iter_end_1e75e98ec:;;
}



inline void _1e3d0d3bc_removeDeadStructs(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e30450c7_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1e30450c7_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1e3047d55_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1e3d0d114_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1e75ce01e_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1e76001c7;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1e76001c7:;
			}
			_iter_end_1e76001c7:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1e75ee6c1;
			};
			(_22013_i)++;
		}
	_iter_next_1e75ee6c1:;
	}
	_iter_end_1e75ee6c1:;;
}



inline void _1e3d0d675_removeDeadTraits(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e306d2cb_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1e306d2cb_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1e75c2ead_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1e76038d4;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1e30450c7_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1e76040cc;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1e76040cc:;
			}
			_iter_end_1e76040cc:;;
			(_24213_i)++;
		}
	_iter_next_1e76038d4:;
	}
	_iter_end_1e76038d4:;;
}



inline void _1e3d0d92d_removeDeadsFile(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e3169ad1_SymbolTable>* _26240_file) {
	_1e3d0d114_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1e3d0d3bc_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1e3d0d675_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1e3d0cd5b_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1e3d0dbd6_removeDeadsPackage(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_, jule::Ptr<_1e30beddd_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7608a2c:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _27021_file = *it;
			{
				_1e3d0d92d_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1e7608a2c:;
			++it;
			goto _iter_begin_1e7608a2c;
		}
		_iter_end_1e7608a2c:;
	};
}



inline void _1e3d0ddd4_removeDeads(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e760938a:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1e3d0dbd6_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1e760938a:;
			++it;
			goto _iter_begin_1e760938a;
		}
		_iter_end_1e760938a:;
	};
	_1e3d0dbd6_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1e3d0e0d2_elimanate(jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _self_) {
	_1e3d0caa3_collectLive(_self_);
	_1e3d0ddd4_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1e3ccbaa5_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1e3b9cbb8_IR__jule_tuple_s_2277b1ce8_Log static__1e3b9d12a_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1e3b9cbb8_IR__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	jule::Ptr<_1e3b9a204_JuleImporter> _2813_importer = static__1e3b9a600_New(_1e3b9eb10_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1e30224c2_Ast>> _2913_files;;
	jule::Slice<_2277b1ce8_Log> _2924_logs;;
	({
		__jule_tuple_sx_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b9bada_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1e30beddd_Package> _3913_pkg;;
	({
		__jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e31c18b3_AnalyzePackage(_2913_files, jule::Trait<_1e30b90a2_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1e3b9cbb8_IR> _4413_ir = jule::new_ptr<_1e3b9cbb8_IR>(_1e3b9cbb8_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1e3b9a886_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1e3b9e901_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e3b9d614_appendStructs(_1e3b9cbb8_IR* _self_, jule::Ptr<_1e30beddd_Package>* _5633_p, jule::Slice<jule::Ptr<_1e30450c7_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e758957e:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e7589e97:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1e30450c7_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1e7589e97:;
						++it;
						goto _iter_begin_1e7589e97;
					}
					_iter_end_1e7589e97:;
				};
			}
			_iter_next_1e758957e:;
			++it;
			goto _iter_begin_1e758957e;
		}
		_iter_end_1e758957e:;
	};
}



inline jule::Slice<jule::Ptr<_1e30450c7_Struct>> _1e3b9d89a_GetAllStructures(_1e3b9cbb8_IR* _self_) {
	jule::Slice<jule::Ptr<_1e30450c7_Struct>> _6917_buffer = nullptr;;
	_1e3b9d614_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e758aea9:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1e3b9d614_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1e758aea9:;
			++it;
			goto _iter_begin_1e758aea9;
		}
		_iter_end_1e758aea9:;
	};
	return _6917_buffer;;
}



inline void _1e3b9dc0d_appendGlobals(_1e3b9cbb8_IR* _self_, jule::Ptr<_1e30beddd_Package>* _7933_p, jule::Slice<jule::Ptr<_1e310ed40_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e758c85c:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e758d275:;
					if (it != expr_end) {
						jule::Ptr<_1e310ed40_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1e758d275:;
						++it;
						goto _iter_begin_1e758d275;
					}
					_iter_end_1e758d275:;
				};
			}
			_iter_next_1e758c85c:;
			++it;
			goto _iter_begin_1e758c85c;
		}
		_iter_end_1e758c85c:;
	};
}



inline jule::Slice<jule::Ptr<_1e310ed40_Var>> _1e3b9de94_GetAllGlobals(_1e3b9cbb8_IR* _self_) {
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _9217_buffer = nullptr;;
	_1e3b9dc0d_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e758d9e5:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1e3b9dc0d_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1e758d9e5:;
			++it;
			goto _iter_begin_1e758d9e5;
		}
		_iter_end_1e758d9e5:;
	};
	return _9217_buffer;;
}



inline void _1e3b9e192_Order(_1e3b9cbb8_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1e3b9d89a_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1e3b9de94_GetAllGlobals(_self_);
	static__1e3ba1073_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1e3ba12a4_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1e3b9cbb8_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e30481c9_Str(_1e3047d55_StructIns* _self_) {
	_227713453_StrBuilder _23913_kind = static__22771371c_New(32LL);;
	_22771c02d_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_22771c2d6_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e613c09a:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1e319dd13_InsGeneric> *_24320_g = it;
				{
					_22771c02d_WriteStr(&_23913_kind, _1e31a0ab2_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_22771c2d6_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1e613c09a:;
				++it;
				_24317_i++;
				goto _iter_begin_1e613c09a;
			}
			_iter_end_1e613c09a:;
		};
		_22771c2d6_WriteByte(&_23913_kind, ']');
	};
	return _22771c825_Str(&_23913_kind);;
}



inline jule::Bool _1e304851a_Equal(jule::Ptr<_1e3047d55_StructIns> _self_, jule::Ptr<_1e31a06e9_TypeKind> _25521_other) {
	jule::Ptr<_1e3047d55_StructIns> _2569_s = _1e31a43bd_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1e31a0e03_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1e61413bd:;
	}
	_iter_end_1e61413bd:;;
	return true;;
}



inline jule::Bool _1e30489c1_Same(_1e3047d55_StructIns* _self_, jule::Ptr<_1e3047d55_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6143238:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1e319dd13_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1e319dd13_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1e31a0e03_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1e6143238:;
			++it;
			_28713_i++;
			goto _iter_begin_1e6143238;
		}
		_iter_end_1e6143238:;
	};
	return true;;
}



inline jule::Ptr<_1e305a032_Fn> _1e3048dbc_FindMethod(_1e3047d55_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61465e3:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1e61465e3:;
			++it;
			goto _iter_begin_1e61465e3;
		}
		_iter_end_1e61465e3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30472a5_FieldIns> _1e304920d_FindField(_1e3047d55_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6147913:;
		if (it != expr_end) {
			jule::Ptr<_1e30472a5_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1e6147913:;
			++it;
			goto _iter_begin_1e6147913;
		}
		_iter_end_1e6147913:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e310ed40_Var> _1e304954e_FindStatic(_1e3047d55_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6148b34:;
		if (it != expr_end) {
			jule::Ptr<_1e310ed40_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1e6148b34:;
			++it;
			goto _iter_begin_1e6148b34;
		}
		_iter_end_1e6148b34:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1e3047d55_StructIns _Src) {
	_Stream << _1e30481c9_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_227870e84_Cmd> static__2278713a2_New(jule::Str _2619_path) {
	return jule::new_ptr<_227870e84_Cmd>(_227870e84_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _2278715a0_Spawn(_227870e84_Cmd* _self_) {
	({
		auto except = _2278c16ee_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _227871a34_Wait(_227870e84_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _2278c1b83_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _2278c16ee_spawn(_227870e84_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_226315b4a_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1e56760da:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e5675507:;
			{
				_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _2278c149b_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_2278c126a_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _2278bc585_Itoa(static_cast<jule::I64>(_2252e8403_GetLastErrno()));;
				{
					_226329840_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10113_code.len())));
				};
				_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_2278c2e92_Exit(1LL);
			}
		}
		else {
			_case_begin_1e5670d82:;
			{
				_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10813_n = _22632906a_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_226329411_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2278b7c67_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_2278c2425_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1e5673428:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2278c1b83_wait(_227870e84_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_2278c2678_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _227870e84_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _2262c54bc_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _226306377_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1e484186c:;
		}
		_iter_end_1e484186c:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1e4841cbd:;
		}
		_iter_end_1e4841cbd:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I64 _2252e8403_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _226315b4a_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _226315ebe_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _2263163ed_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _226316772_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _226316c6c_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _226317036_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _226317300_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _226317c07_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _226317ec1_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _22631828a_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _22632906a_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _226329411_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _226329840_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _226329a71_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _226401483_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1e4897054_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _22640d7ae_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1e4897054_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _22640da78_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _226401483_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _22640dd42_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	jule::Str _595_s = _22640da78_BytesStr(_5817_b);;
	{
		if (_5817_b.data.ref != nullptr) {
			_595_s.buffer.ref = _5817_b.data.ref;
			_595_s.buffer.add_ref();
		};
	};
	return _595_s;;
}



inline jule::Slice<jule::U8> _22640e10b_BytesFromStr(jule::Str _7017_s) {
	jule::Slice<jule::U8> _719_b = _22640d7ae_StrBytes(_7017_s);;
	{
		if (_7017_s.buffer.ref != nullptr) {
			_719_b.data.ref = _7017_s.buffer.ref;
			_719_b.data.add_ref();
		};
	};
	return _719_b;;
}



inline jule::I64 _226437376_getLastOsError(void) {
	jule::I64 _305_err = _2252e8403_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e48a0304:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e489ebb6:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1e489ec3d:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1e489ecb5:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e48a0029:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e48a0090:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e48a0106:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1e489eb3e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1e489ead9:;
	};
}



inline jule::Slice<jule::Str> _226438410_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2264388a5_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _226439301_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _226439301_getwd(void) {
	jule::U8* _119_buff = _226316772_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_226437376_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _226306377_BytePtrToStr(_119_buff);;
	{
		_2262c54bc_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _227538aa3_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_227598be0__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2275a22e2_isExcludingLatin(_227542d10_Letter, _7613_r);;
}



inline jule::Bool _2275a1665_is16(jule::Slice<_22759e8c7_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e551c745:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_22759e8c7_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1e551c745:;
				++it;
				_19313_i++;
				goto _iter_begin_1e551c745;
			}
			_iter_end_1e551c745:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_22759e8c7_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1e551b4d0:;
	}
	_iter_end_1e551b4d0:;;
	return false;;
}



inline jule::Bool _2275a19d9_is32(jule::Slice<_22759ee05_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e552373a:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_22759ee05_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1e552373a:;
				++it;
				_23013_i++;
				goto _iter_begin_1e552373a;
			}
			_iter_end_1e552373a:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_22759ee05_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1e55203a2:;
	}
	_iter_end_1e55203a2:;;
	return false;;
}



inline jule::Bool _2275a22e2_isExcludingLatin(jule::Ptr<_2275a03ab_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22759e8c7_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _2275a1665_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22759ee05_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _2275a19d9_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _2275a25ab_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_227598be0__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2275a22e2_isExcludingLatin(_227549366_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _2276ace14_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _2276abc6a_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_2276ac2ed_acceptRange _1965_accept = _2276ac60b_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2276ad255_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _2276abc6a_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_2276ac2ed_acceptRange _2435_accept = _2276ac60b_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2276ad51e_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2805_end = _27619_p.len();;
	jule::I64 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_2276b0048_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_1e5563b43;
			};
		}
	_iter_next_1e5563b43:;
	}
	_iter_end_1e5563b43:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _2276ae377_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _2276ae6eb_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _2276ae6eb_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1e557753b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1e557785a:;
			{
				_41242_r=128LL;
				goto _case_begin_1e55754c3;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1e55754c3:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1e557545c:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1e55753e6:;
	};
}



inline jule::I64 _2276aec7e_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1e557eec2;
			};
			jule::U8 _4829_x = _2276abc6a_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1e557eec2;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1e557eec2;
			};
			_2276ac2ed_acceptRange _4929_accept = _2276ac60b_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1e557eec2:;
	}
	_iter_end_1e557eec2:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2276b0048_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _2276da381_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e559dd04:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1e559dd04:;
			++it;
			_399_i++;
			goto _iter_begin_1e559dd04;
		}
		_iter_end_1e559dd04:;
	};
	return -1LL;;
}



inline jule::I64 _2276ecbac_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_1e55a0773:;
	}
	_iter_end_1e55a0773:;;
	return -1LL;;
}



inline jule::I64 _2276ed053_FindByteStr(jule::Str _6716_s, jule::U8 _6724_b) {
	return static_cast<jule::I64>(_2276da381_FindByte(_22640d7ae_StrBytes(_6716_s), _6724_b));;
}



inline jule::I64 _2276ed3c7_FindLastByteStr(jule::Str _7220_s, jule::U8 _7228_b) {
	return static_cast<jule::I64>(_2276ecbac_FindLastByte(_22640d7ae_StrBytes(_7220_s), _7228_b));;
}



inline jule::Str _2276ed680_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_227713453_StrBuilder _209_ss = static__22771371c_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_22771c02d_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_1e55bd6a3:;
	}
	_iter_end_1e55bd6a3:;;
	return _22640dd42_StrFromBytes(_22771d2c6_Buf(&_209_ss));;
}



inline jule::Bool _2276edb03_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _329_i = 0LL;;
	for (; (_329_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_329_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_329_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_329_i])) {
				return false;;
			};
		}
	_iter_next_1e55c1354:;
	}
	_iter_end_1e55c1354:;;
	return true;;
}



inline jule::Bool _2276ede77_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _2276edb03_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _2276ee42d_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _529_i = 0LL;;
	for (; (_529_i < (*(_4624_sub)).len()); (_529_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _529_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _529_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1e55c319c:;
	}
	_iter_end_1e55c319c:;;
	return true;;
}



inline jule::Bool _2276ee76e_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _2276ee42d_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _2276eeb9d_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_2276edb03_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1e55c5e08:;
	}
	_iter_end_1e55c5e08:;;
	return -1LL;;
}



inline jule::I64 _227700561_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _949_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_949_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1e55c90a4:;
	for (; (_949_j >= 0LL); (_949_j)--) {
		{
			jule::I64 _10013_k = _949_j;;
			jule::I64 _10113_z = 0LL;;
			for (; (_10113_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10013_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10113_z + 1LL));
				_10013_k = ___jule_assign_arg;
				_10113_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10013_k] != _9323_sub[_10113_z])) {
						goto _iter_next_1e55c8bec;
					};
				}
			_iter_next_1e55c9a99:;
			}
			_iter_end_1e55c9a99:;;
			return _949_j;;
		}
	_iter_next_1e55c8bec:;
	}
	_iter_end_1e55c8bec:;;
	return -1LL;;
}



inline jule::I64 _2277008d5_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_227700561_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _227702134_FindLastByte(jule::Str _17917_s, jule::U8 _17925_b) {
	return static_cast<jule::I64>(_2276ed3c7_FindLastByteStr(_17917_s, _17925_b));;
}



inline jule::I64 _227702662_FindRune(jule::Str _18613_s, jule::I32 _18621_r) {
	jule::I64 _1879_i = 0LL;;
	while ((_1879_i < _18613_s.len())) {
		{
			jule::I32 _1899_br = 0;;
			jule::I64 _18913_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ad255_DecodeRuneStr(_18613_s.slice(_1879_i));
				_1899_br = __jule_assign_result.__jule_result_arg0;
				_18913_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18621_r == _1899_br)) {
				return _1879_i;;
			};
			_1879_i+=_18913_n;
		}
	_iter_next_1e55d2343:;
	}
	_iter_end_1e55d2343:;;
	return -1LL;;
}



inline jule::I64 _227702d5a_FindAny(jule::Str _21712_s, jule::Str _21720_runes) {
	jule::I64 _2189_i = 0LL;;
	while ((_2189_i < _21712_s.len())) {
		{
			jule::I32 _2209_r = 0;;
			jule::I64 _22012_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ad255_DecodeRuneStr(_21712_s.slice(_2189_i));
				_2209_r = __jule_assign_result.__jule_result_arg0;
				_22012_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_227702662_FindRune(_21720_runes, _2209_r) != -1LL)) {
				return _2189_i;;
			};
			_2189_i+=_22012_n;
		}
	_iter_next_1e55d5412:;
	}
	_iter_end_1e55d5412:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _22770360d_Split(jule::Str _24810_s, jule::Str _24818_sub, jule::I64 _24832_n) {
	jule::I64 _2499_cap = _24832_n;;
	if ((_24832_n < 0LL)) {
		_2499_cap=16LLU;
	};
	jule::Slice<jule::Str> _2539_parts = jule::Slice<jule::Str>::alloc(0LL, _2499_cap);;
	if ((_24832_n == 0LL)) {
		return _2539_parts;;
	};
	if ((_24832_n < 0LL)) {
		_24832_n=static_cast<jule::I64>(_24810_s.len());
	};
	jule::I64 _2609_i = 0LL;;
	for (; (_24832_n > 0LL); (_24832_n)--) {
		{
			jule::I64 _2629_j = _2276eeb9d_FindAt(_24810_s, _24818_sub, _2609_i);;
			if ((_2629_j == -1LL)) {
				goto _iter_end_1e55da11a;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2539_parts; __jule_push_dest.push(_24810_s.slice(_2609_i, _2629_j)); };
			_2609_i=static_cast<jule::I64>((_2629_j + _24818_sub.len()));
		}
	_iter_next_1e55da11a:;
	}
	_iter_end_1e55da11a:;;
	if (((_24832_n > 0LL) && (_2609_i < _24810_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2539_parts; __jule_push_dest.push(_24810_s.slice(_2609_i)); };
	};
	return _2539_parts;;
}



inline jule::Bool _227703982_Contains(jule::Str _27613_s, jule::Str _27621_sub) {
	return (_2276eeb9d_FindAt(_27613_s, _27621_sub, 0LL) != -1LL);;
}



inline jule::Bool _2277044ee_ContainsAny(jule::Str _29116_s, jule::Str _29124_runes) {
	return (_227702d5a_FindAny(_29116_s, _29124_runes) != -1LL);;
}



inline jule::I64 _227704873_Count(jule::Str _29710_s, jule::Str _29718_sub) {
	if ((_29718_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _3019_n = 0LL;;
	jule::I64 _3029_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3049_j = _2276eeb9d_FindAt(_29710_s, _29718_sub, _3029_i);;
			if ((_3049_j == -1LL)) {
				goto _iter_end_1e55de927;
			};
			(_3019_n)++;
			_3029_i=static_cast<jule::I64>((_3049_j + _29718_sub.len()));
		}
	_iter_next_1e55de927:;
	}
	_iter_end_1e55de927:;;
	return _3019_n;;
}



inline jule::Str _227704d5c_Replace(jule::Str _31712_s, jule::Str _31720_sub, jule::Str _31730_new, jule::I64 _31744_n) {
	if (((_31744_n == 0LL) || (_31720_sub == _31730_new))) {
		return _31712_s;;
	};
	jule::I64 _3225_m = _227704873_Count(_31712_s, _31720_sub);;
	if ((_3225_m == 0LL)) {
		return _31712_s;;
	};
	if (((_31744_n < 0LL) || (_3225_m < _31744_n))) {
		_31744_n=_3225_m;
	};
	_227713453_StrBuilder _3309_ss = static__22771371c_New(static_cast<jule::I64>((_31712_s.len() + (_31744_n * (_31730_new.len() - _31720_sub.len())))));;
	jule::I64 _3319_i = 0LL;;
	for (; (_31744_n > 0LL); (_31744_n)--) {
		{
			jule::I64 _3339_j = _2276eeb9d_FindAt(_31712_s, _31720_sub, _3319_i);;
			if ((_3339_j == -1LL)) {
				goto _iter_end_1e55e7b0b;
			};
			_22771c02d_WriteStr(&_3309_ss, _31712_s.slice(_3319_i, _3339_j));
			_22771c02d_WriteStr(&_3309_ss, _31730_new);
			_3319_i=static_cast<jule::I64>((_3339_j + _31720_sub.len()));
		}
	_iter_next_1e55e7b0b:;
	}
	_iter_end_1e55e7b0b:;;
	_22771c02d_WriteStr(&_3309_ss, _31712_s.slice(_3319_i));
	return _22640dd42_StrFromBytes(_22771d2c6_Buf(&_3309_ss));;
}



inline void _227705a50_trimLeft(jule::Slice<jule::U8>* _37218_s, jule::Str _37229_cutset) {
	jule::I64 _3739_i = 0LL;;
	while ((_3739_i < (*(_37218_s)).len())) {
		{
			jule::I32 _3759_r = 0;;
			jule::I64 _37512_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_37218_s)).slice(_3739_i));
				_3759_r = __jule_assign_result.__jule_result_arg0;
				_37512_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_227702662_FindRune(_37229_cutset, _3759_r) == -1LL)) {
				((*(_37218_s))).mut_slice(_3739_i);;
				return;;
			};
			_3739_i+=_37512_n;
		}
	_iter_next_1e55ec58e:;
	}
	_iter_end_1e55ec58e:;;
	(*(_37218_s))=nullptr;
}



inline jule::Str _227705dc4_TrimLeft(jule::Str _38713_s, jule::Str _38721_cutset) {
	jule::Slice<jule::U8> _3889_bytes = _22640d7ae_StrBytes(_38713_s);;
	_227705a50_trimLeft(&(_3889_bytes), _38721_cutset);
	return static_cast<jule::Str>(_3889_bytes);;
}



inline void _2277022ee_trimRight(jule::Slice<jule::U8>* _39319_s, jule::Str _39330_cutset) {
	jule::I64 _3949_i = (*(_39319_s)).len();;
	while ((_3949_i > 0LL)) {
		{
			jule::I32 _3969_r = 0;;
			jule::I64 _39612_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ad51e_DecodeLastRune((*(_39319_s)).slice(0LL, _3949_i));
				_3969_r = __jule_assign_result.__jule_result_arg0;
				_39612_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_227702662_FindRune(_39330_cutset, _3969_r) == -1LL)) {
				((*(_39319_s))).mut_slice(0LL, _3949_i);;
				return;;
			};
			_3949_i-=_39612_n;
		}
	_iter_next_1e55ee97b:;
	}
	_iter_end_1e55ee97b:;;
	(*(_39319_s))=nullptr;
}



inline jule::Str _2277069da_Trim(jule::Str _4169_s, jule::Str _41617_cutset) {
	jule::Slice<jule::U8> _4179_bytes = _22640d7ae_StrBytes(_4169_s);;
	_227705a50_trimLeft(&(_4179_bytes), _41617_cutset);
	_2277022ee_trimRight(&(_4179_bytes), _41617_cutset);
	return static_cast<jule::Str>(_4179_bytes);;
}



inline jule::Str _227706d5e_Join(jule::Slice<jule::Str> _4259_parts, jule::Str _42523_sep) {
	{
		auto _match_expr{ _4259_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e5602a28:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e5602aa0:;
			{
				return _4259_parts[0LL];;
			}
		}
		_match_end_1e560283b:;
	};
	jule::I64 _4329_n = 0LL;;
	{
		auto expr = &(_4259_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5602d36:;
		if (it != expr_end) {
			jule::Str *_43312_part = it;
			{
				_4329_n+=(*(_43312_part)).len();
				(_4329_n)++;
			}
			_iter_next_1e5602d36:;
			++it;
			goto _iter_begin_1e5602d36;
		}
		_iter_end_1e5602d36:;
	};
	_227713453_StrBuilder _4379_s = static__22771371c_New(_4329_n);;
	_22771c02d_WriteStr(&_4379_s, _4259_parts[0LL]);
	{
		auto expr = _4259_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e5603a07:;
		if (it != expr_end) {
			jule::Str *_43912_part = it;
			{
				_22771c02d_WriteStr(&_4379_s, _42523_sep);
				_22771c02d_WriteStr(&_4379_s, (*(_43912_part)));
			}
			_iter_next_1e5603a07:;
			++it;
			goto _iter_begin_1e5603a07;
		}
		_iter_end_1e5603a07:;
	};
	return _22640dd42_StrFromBytes(_22771d2c6_Buf(&_4379_s));;
}



inline jule::Str _22771eb02_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _2277228e6_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _22772231e_IsPathSep(_1105_originalPath[0LL])) && _22772231e_IsPathSep(_1105_originalPath[1LL]))) {
			return _2277201c9_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _22772231e_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_22771dc99_lazyBuff _1289_out = _22771dc99_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_22771e4a3_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_22772231e_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1e5614c27:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _22772231e_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1e56118d3:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _22772231e_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1e5611949:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1e5617994:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_22772231e_IsPathSep(static_cast<jule::U8>(_22771e1ea_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1e5618522:;
									}
									_iter_end_1e5618522:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1e5617d3a:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_22771e4a3_append(&_1289_out, 47LLU);
									};
									_22771e4a3_append(&_1289_out, '.');
									_22771e4a3_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1e5617cc4:;
						};
					}
				}
				else {
					_case_begin_1e561186c:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_22771e4a3_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_22772231e_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_22771e4a3_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1e561471b:;
						}
						_iter_end_1e561471b:;;
					}
				}
				_match_end_1e561153c:;
			};
		}
	_iter_next_1e5610e87:;
	}
	_iter_end_1e5610e87:;;
	if ((_1289_out._field_w == 0LL)) {
		_22771e4a3_append(&_1289_out, '.');
	};
	return _2277201c9_FromSlash(_22771e739_string(&_1289_out));;
}



inline jule::Str _2277201c9_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _22772051a_Join(jule::Slice<jule::Str> _2269_elem) {
	return _227723001_join(_2269_elem);;
}



inline jule::Str _2277207d4_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_22772231e_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1e561b6e0:;
	}
	_iter_end_1e561b6e0:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _227720a9d_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227722c37_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _227720d67_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _22772231e_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1e561dd85:;
	}
	_iter_end_1e561dd85:;;
	(_25513_path).mut_slice(_2277214c7_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_22772231e_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1e5620370:;
	}
	_iter_end_1e5620370:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _22772120d_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _2277214c7_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_22772231e_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1e5622141:;
	}
	_iter_end_1e5622141:;;
	jule::Str _2925_dir = _22771eb02_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _2277214c7_VolumeName(jule::Str _30415_path) {
	return _2277201c9_FromSlash(_30415_path.slice(0LL, _2277228e6_volumeNameLen(_30415_path)));;
}



inline jule::Bool _22772231e_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _22772262c_IsAbs(jule::Str _5310_path) {
	return _2276ede77_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _2277228e6_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _227722c37_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_22772262c_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _22771eb02_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _2264388a5_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _227723001_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _227723001_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e562a4e0:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _22771eb02_Clean(_227706d5e_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1e562a4e0:;
			++it;
			_749_i++;
			goto _iter_begin_1e562a4e0;
		}
		_iter_end_1e562a4e0:;
	};
	return jule::Str();;
}



inline jule::I64 _22634496a_getLastFsError(void) {
	jule::I64 _725_err = _2252e8403_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e5637c17:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e56373ba:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1e56375b8:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1e563762e:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e5637695:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e563770b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1e5637d49:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e5637db0:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1e5637e26:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1e5637e8c:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e5638014:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1e563808b:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e5638113:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e563818a:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e5638212:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1e5638289:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1e5638311:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e5638388:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1e5638410:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1e5638487:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1e563850e:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1e5638586:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e563860d:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1e5638685:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1e563870c:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1e5638784:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1e563880b:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1e5638883:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1e5637552:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1e56374ec:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _2278b7c67_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _109_neg = ((*(_922_b)) == '-');;
	if (_109_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1e565ad28:;
	}
	_iter_end_1e565ad28:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_109_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _2278bc585_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _2278bc893_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_89_x))))));;
	};
	return _2278bc893_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_89_x)));;
}



inline jule::Str _2278bc893_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _219_i = (_209_buf.len() - 1LL);;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU))));
			(_219_i)--;
			_1613_x=_239_q;
		}
	_iter_next_1e56629de:;
	}
	_iter_end_1e56629de:;;
	_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1613_x)));
	(_209_buf).mut_slice(_219_i);;
	return _22640dd42_StrFromBytes(_209_buf);;
}



inline jule::Slice<char*> _2278c0de6_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e567e7ec:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1e567e7ec:;
			++it;
			_379_i++;
			goto _iter_begin_1e567e7ec;
		}
		_iter_end_1e567e7ec:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _2278c126a_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _2278c0de6_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _2278c149b_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56822c2:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _549_i = _2276ed053_FindByteStr((*(_5312_env)), '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1e56822c2:;
			++it;
			goto _iter_begin_1e56822c2;
		}
		_iter_end_1e56822c2:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _2278c2425_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1e568666c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e56825be:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1e56835d1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1e56863a3:;
	};
}



inline jule::I64 _2278c2678_getLastProcessError(void) {
	return _2278c2425_processErrorFromCode(static_cast<jule::I64>(_2252e8403_GetLastErrno()));;
}



inline void _2278c2e92_Exit(jule::I64 _129_code) {
	_226329a71_Exit(_129_code);
}



inline jule::Str _2278c31a1_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2277a4aee_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _2277a4da7_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2277242aa_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56ae2cc:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1e56ae2cc:;
			++it;
			goto _iter_begin_1e56ae2cc;
		}
		_iter_end_1e56ae2cc:;
	};
	return false;;
}



inline jule::Bool _2277a5171_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2277a2d61_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56b0069:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1e56b0069:;
			++it;
			goto _iter_begin_1e56b0069;
		}
		_iter_end_1e56b0069:;
	};
	{
		auto expr = &(_2277a4a00_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56aee9d:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1e56aee9d:;
			++it;
			goto _iter_begin_1e56aee9d;
		}
		_iter_end_1e56aee9d:;
	};
	return false;;
}



inline jule::Str _2277b225a_Logf(jule::Str _3169_fmt, jule::Slice<jule::Any> _31622_args) {
	return _2277b2bea_applyFmt(_3169_fmt, _31622_args);;
}



inline jule::Str _2277b2568_argToStr(jule::Any _32013_arg) {
	{
		auto &_match_expr{ _32013_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e56b070c:;
			{
				return _32013_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1e56b219d:;
			{
				return jule::Str::from_byte(_32013_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e56b2214:;
			{
				return jule::Str::from_rune(_32013_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1e56b1ac6:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1e56b1a71:;
	};
}



inline jule::I64 _2277b2832_findNextFmt(jule::Str _33316_fmt) {
	{
		auto expr = &(_33316_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56b2e7e:;
		if (it != expr_end) {
			jule::I64 _3349_i = it - expr->begin();
			jule::U8 *_33412_b = it;
			{
				if (((*(_33412_b)) == '@')) {
					return _3349_i;;
				};
			}
			_iter_next_1e56b2e7e:;
			++it;
			_3349_i++;
			goto _iter_begin_1e56b2e7e;
		}
		_iter_end_1e56b2e7e:;
	};
	return -1LL;;
}



inline jule::Str _2277b2bea_applyFmt(jule::Str _34217_fmt, jule::Slice<jule::Any> _34227_args) {
	_227713453_StrBuilder _3439_s = static__22771371c_New(32LL);;
	{
		auto expr = &(_34227_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e56b38ca:;
		if (it != expr_end) {
			jule::Any *_34412_arg = it;
			{
				jule::I64 _3459_i = _2277b2832_findNextFmt(_34217_fmt);;
				if ((_3459_i == -1LL)) {
					goto _iter_end_1e56b38ca;
				};
				_22771c02d_WriteStr(&_3439_s, _34217_fmt.slice(0LL, _3459_i));
				_22771c02d_WriteStr(&_3439_s, _2277b2568_argToStr((*(_34412_arg))));
				(_34217_fmt).mut_slice((_3459_i + 1LL));;
			}
			_iter_next_1e56b38ca:;
			++it;
			goto _iter_begin_1e56b38ca;
		}
		_iter_end_1e56b38ca:;
	};
	_22771c02d_WriteStr(&_3439_s, _34217_fmt);
	return _22771c825_Str(&_3439_s);;
}



inline jule::Bool _2277b3a64_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _2277b4eb6_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _2277b5291_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _2277b555a_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2277b589b_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _2277b5b65_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _2277b5e2e_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _2277b61e8_IsUnix(jule::Str _5511_os) {
	return (_2277b5291_IsDarwin(_5511_os) || _2277b555a_IsLinux(_5511_os));;
}



inline jule::Bool _2277b658e_Is32Bit(jule::Str _5812_arch) {
	return _2277b589b_IsI386(_5812_arch);;
}



inline jule::Bool _2277b6858_Is64Bit(jule::Str _6112_arch) {
	return (_2277b5b65_IsAmd64(_6112_arch) || _2277b5e2e_IsArm64(_6112_arch));;
}



inline void _2278c447c_init(void) {
	jule::Str _259_path = _2278c31a1_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2278c39a9_PathWd=({
			auto except = _2264388a5_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_2278c3701_PathExec=_22772120d_Dir(_259_path);
		_2278c349d_PathStdlib=_22772051a_Join(jule::Slice<jule::Str>::make({_2278c3701_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_2278c3cb7_PathApi=_22772051a_Join(jule::Slice<jule::Str>::make({_2278c3701_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _2288beeb0_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _2288c78ad_Len64(_6119_x)));;
}



inline jule::I64 _2288c0e17_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_2288c1b3d_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _2288c1874_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2288c05cb__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _2288c1b3d_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2288c0b92__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _2288c75e4_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _2288c78ad_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2288c864a_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2288c9e54_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _2287ca162_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2287ca470_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2287ca739_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2287caa7a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2287cd132_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1e579abe3:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_2288d2b60_IsInf(_4714_f, 0LL) || _2288d2555_IsNaN(_4714_f)) {
			_case_begin_1e579ac6a:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1e579ab16:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2288d2e29_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _2287ca739_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2287caa7a_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _2288d2247_NaN(void) {
	return static_cast<jule::F64>(_2287caa7a_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _2288d2555_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _2288d281e_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2287caa7a_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2287caa7a_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _2288d2b60_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _2288d2e29_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_2288d52d3_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _2288d48ed_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_2288d2555_IsNaN(_1118_x) || _2288d2b60_IsInf(_1118_x, 1LL)) {
			_case_begin_1e57d73e4:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1e57d746b:;
			{
				return static_cast<jule::F64>(_2288d2247_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1e57d74e3:;
			{
				return static_cast<jule::F64>(_2288d281e_Inf(-1LL));;
			}
		}
		_match_end_1e57d7328:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2287cd132_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _2288d52d3_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2287caa7a_F64FromBits(static_cast<jule::U64>((_2287ca739_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _2288dbecc_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _2288d52d3_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1e5846b6d:;
		}
		_iter_end_1e5846b6d:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _2288dc7d5_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2287cd132_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_2288d48ed_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _228916ab7_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bit_size) {
	return _22640dd42_StrFromBytes(_2289171a0_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _22891a5d2_max(static_cast<jule::I64>((_7932_prec + 4LL)), 24LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bit_size));;
}



inline jule::Slice<jule::U8> _2289171a0_genericFtoa(jule::Slice<jule::U8> _8620_dst, jule::F64 _8633_val, jule::U8 _8643_fmt, jule::I64 _8658_prec, jule::I64 _8669_bit_size) {
	jule::U64 _879_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_228248cbd_floatInfo> _8813_flt = nullptr;;
	{
		auto &_match_expr{ _8669_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1e5a3cb44:;
			{
				_879_bits=static_cast<jule::U64>(static_cast<jule::U64>(_2287ca162_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8633_val)))));
				_8813_flt=((jule::Ptr<_228248cbd_floatInfo>)((&(_228915c92_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5a3c968:;
			{
				_879_bits=static_cast<jule::U64>(_2287ca739_F64Bits(_8633_val));
				_8813_flt=((jule::Ptr<_228248cbd_floatInfo>)((&(_22891608e_f64info))));
			}
		}
		else {
			_case_begin_1e5a3c2d6:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:97:9"));;
			}
		}
		_match_end_1e5a3c281:;
	};
	jule::Bool _1005_neg = ((_879_bits >> ((*(_8813_flt))._field_expbits + (*(_8813_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1019_exp = (static_cast<jule::I64>((_879_bits >> (*(_8813_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8813_flt))._field_expbits) - 1LL)));;
	jule::U64 _1029_mant = (_879_bits & ((static_cast<jule::U64>(1LLU) << (*(_8813_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1019_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8813_flt))._field_expbits) - 1LL)))) {
			_case_begin_1e5a41340:;
			{
				{
					
					if ((_1029_mant != 0LLU)) {
						_case_begin_1e5a430ab:;
						{
							return jule::append(_8620_dst,_22640d7ae_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1005_neg) {
						_case_begin_1e5a4240c:;
						{
							return jule::append(_8620_dst,_22640d7ae_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1e5a42396:;
						{
							return jule::append(_8620_dst,_22640d7ae_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1e5a422ca:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e5a4142d:;
			{
				(_1019_exp)++;
			}
		}
		else {
			_case_begin_1e5a3c6b0:;
			{
				_1029_mant|=(static_cast<jule::U64>(1LLU) << (*(_8813_flt))._field_mantbits);
			}
		}
		_match_end_1e5a40d56:;
	};
	_1019_exp+=(*(_8813_flt))._field_bias;
	if ((_8643_fmt == 'b')) {
		return _2289196d0_fmtB(_8620_dst, _1005_neg, _1029_mant, _1019_exp, &((*(_8813_flt))));;
	};
	if (((_8643_fmt == 'x') || (_8643_fmt == 'X'))) {
		return _228919dd9_fmtX(_8620_dst, _8658_prec, _8643_fmt, _1005_neg, _1029_mant, _1019_exp, &((*(_8813_flt))));;
	};
	;
	_228916534_decimalSlice _1369_digs = _228916534_decimalSlice{};;
	jule::Bool _1379_ok = false;;
	jule::Bool _1395_shortest = (_8658_prec < 0LL);;
	if (_1395_shortest) {
		_1369_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_228925499_ryuFtoaShortest(&(_1369_digs), _1029_mant, static_cast<jule::I64>((_1019_exp - static_cast<jule::I64>((*(_8813_flt))._field_mantbits))), &((*(_8813_flt))));
		_1379_ok=true;
		{
			auto &_match_expr{ _8643_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5a46653:;
				{
					_8658_prec=static_cast<jule::I64>(_22891a5d2_max(static_cast<jule::I64>((_1369_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5a466b9:;
				{
					_8658_prec=static_cast<jule::I64>(_22891a5d2_max(static_cast<jule::I64>((_1369_digs._field_nd - _1369_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5a46730:;
				{
					_8658_prec=_1369_digs._field_nd;
				}
			}
			_match_end_1e5a4583e:;
		};
	} else if ((_8643_fmt != 'f')) {
		jule::I64 _15613_digits = _8658_prec;;
		{
			auto &_match_expr{ _8643_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5a48710:;
				{
					(_15613_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5a456c9:;
				{
					if ((_8658_prec == 0LL)) {
						_8658_prec=1LL;
					};
					_15613_digits=_8658_prec;
				}
			}
			else {
				_case_begin_1e5a48369:;
				{
					_15613_digits=1LL;
				}
			}
			_match_end_1e5a457b7:;
		};
		if (((_8669_bit_size == 32LL) && (_15613_digits <= 9LL))) {
			_1369_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2289241ce_ryuFtoaFixed32(&(_1369_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1029_mant)), static_cast<jule::I64>((_1019_exp - static_cast<jule::I64>((*(_8813_flt))._field_mantbits))), _15613_digits);
			_1379_ok=true;
		} else if ((_15613_digits <= 18LL)) {
			_1369_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_228924674_ryuFtoaFixed64(&(_1369_digs), _1029_mant, static_cast<jule::I64>((_1019_exp - static_cast<jule::I64>((*(_8813_flt))._field_mantbits))), _15613_digits);
			_1379_ok=true;
		};
	};
	if ((!(_1379_ok))) {
		return _2289178a9_bigFtoa(_8620_dst, _8658_prec, _8643_fmt, _1005_neg, _1029_mant, _1019_exp, &((*(_8813_flt))));;
	};
	return _228918080_fmtDigits(_8620_dst, _1395_shortest, _1005_neg, _1369_digs, _8658_prec, _8643_fmt);;
}



inline jule::Slice<jule::U8> _2289178a9_bigFtoa(jule::Slice<jule::U8> _18616_dst, jule::I64 _18633_prec, jule::U8 _18644_fmt, jule::Bool _18655_neg, jule::U64 _1875_mant, jule::I64 _18716_exp, _228248cbd_floatInfo* _18727_flt) {
	_2289292b1_decimal _1889_d = _2289292b1_decimal{};;
	_228929668_assign(&_1889_d, _1875_mant);
	_228929921_shift(&_1889_d, static_cast<jule::I64>((_18716_exp - static_cast<jule::I64>((*(_18727_flt))._field_mantbits))));
	_228916534_decimalSlice _1919_digs = _228916534_decimalSlice{};;
	jule::Bool _1925_shortest = (_18633_prec < 0LL);;
	if (_1925_shortest) {
		_2289184d1_roundShortest(&(_1889_d), _1875_mant, _18716_exp, _18727_flt);
		_1919_digs=_228916534_decimalSlice{._field_d=_1889_d._field_d.slice(0LL), ._field_nd=_1889_d._field_nd, ._field_dp=_1889_d._field_dp, };
		{
			auto &_match_expr{ _18644_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5a4e22c:;
				{
					_18633_prec=static_cast<jule::I64>((_1919_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5a5000d:;
				{
					_18633_prec=static_cast<jule::I64>(_22891a5d2_max(static_cast<jule::I64>((_1919_digs._field_nd - _1919_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5a50074:;
				{
					_18633_prec=_1919_digs._field_nd;
				}
			}
			_match_end_1e5a4eda9:;
		};
	} else {
		{
			auto &_match_expr{ _18644_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5a4deb8:;
				{
					_22892a23a_round(&_1889_d, static_cast<jule::I64>((_18633_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5a4e040:;
				{
					_22892a23a_round(&_1889_d, static_cast<jule::I64>((_1889_d._field_dp + _18633_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5a4e0b7:;
				{
					if ((_18633_prec == 0LL)) {
						_18633_prec=1LL;
					};
					_22892a23a_round(&_1889_d, _18633_prec);
				}
			}
			_match_end_1e5a51707:;
		};
		_1919_digs=_228916534_decimalSlice{._field_d=_1889_d._field_d.slice(0LL), ._field_nd=_1889_d._field_nd, ._field_dp=_1889_d._field_dp, };
	};
	return _228918080_fmtDigits(_18616_dst, _1925_shortest, _18655_neg, _1919_digs, _18633_prec, _18644_fmt);;
}



inline jule::Slice<jule::U8> _228918080_fmtDigits(jule::Slice<jule::U8> _22318_dst, jule::Bool _22331_shortest, jule::Bool _22347_neg, _228916534_decimalSlice _2245_digs, jule::I64 _22429_prec, jule::U8 _22440_fmt) {
	{
		auto &_match_expr{ _22440_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1e5a54a4b:;
			{
				return _228918a75_fmtE(_22318_dst, _22347_neg, _2245_digs, _22429_prec, _22440_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e5a54ab2:;
			{
				return _22891905e_fmtF(_22318_dst, _22347_neg, _2245_digs, _22429_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1e5a54b28:;
			{
				jule::I64 _23213_eprec = _22429_prec;;
				if (((_23213_eprec > _2245_digs._field_nd) && (_2245_digs._field_nd >= _2245_digs._field_dp))) {
					_23213_eprec=_2245_digs._field_nd;
				};
				if (_22331_shortest) {
					_23213_eprec=6LL;
				};
				jule::I64 _2429_exp = (_2245_digs._field_dp - 1LL);;
				if (((_2429_exp < -4LL) || (_2429_exp >= _23213_eprec))) {
					if ((_22429_prec > _2245_digs._field_nd)) {
						_22429_prec=_2245_digs._field_nd;
					};
					return _228918a75_fmtE(_22318_dst, _22347_neg, _2245_digs, static_cast<jule::I64>((_22429_prec - 1LL)), static_cast<jule::U8>(((_22440_fmt + 'e') - 'g')));;
				};
				if ((_22429_prec > _2245_digs._field_dp)) {
					_22429_prec=_2245_digs._field_nd;
				};
				return _22891905e_fmtF(_22318_dst, _22347_neg, _2245_digs, static_cast<jule::I64>(_22891a5d2_max(static_cast<jule::I64>((_22429_prec - _2245_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1e5a5495d:;
	};
	return jule::append(_22318_dst,jule::Slice<jule::U8>::make({'%',_22440_fmt}));;
}



inline void _2289184d1_roundShortest(_2289292b1_decimal* _26123_d, jule::U64 _26135_mant, jule::I64 _26146_exp, _228248cbd_floatInfo* _26157_flt) {
	if ((_26135_mant == 0LLU)) {
		(*(_26123_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2825_minexp = ((*(_26157_flt))._field_bias + 1LL);;
	if (((_26146_exp > _2825_minexp) && ((332LL * ((*(_26123_d))._field_dp - (*(_26123_d))._field_nd)) >= (100LL * (_26146_exp - static_cast<jule::I64>((*(_26157_flt))._field_mantbits)))))) {
		return;;
	};
	_2289292b1_decimal _2919_upper = _2289292b1_decimal{};;
	_228929668_assign(&_2919_upper, static_cast<jule::U64>(((_26135_mant << 1LLU) + 1LLU)));
	_228929921_shift(&_2919_upper, static_cast<jule::I64>(((_26146_exp - static_cast<jule::I64>((*(_26157_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3019_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3029_explo = 0LL;;
	if (((_26135_mant > (1LLU << (*(_26157_flt))._field_mantbits)) || (_26146_exp == _2825_minexp))) {
		_3019_mantlo=static_cast<jule::U64>((_26135_mant - 1LLU));
		_3029_explo=_26146_exp;
	} else {
		_3019_mantlo=static_cast<jule::U64>(((_26135_mant << 1LLU) - 1LLU));
		_3029_explo=static_cast<jule::I64>((_26146_exp - 1LL));
	};
	_2289292b1_decimal _3109_lower = _2289292b1_decimal{};;
	_228929668_assign(&_3109_lower, static_cast<jule::U64>(((_3019_mantlo << 1LLU) + 1LLU)));
	_228929921_shift(&_3109_lower, static_cast<jule::I64>(((_3029_explo - static_cast<jule::I64>((*(_26157_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3175_inclusive = ((_26135_mant & 1LL) == 0LLU);;
	jule::U8 _3309_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3349_ui = 0LL;;
	for (; ; (_3349_ui)++) {
		{
			jule::I64 _3399_mi = ((_3349_ui - _2919_upper._field_dp) + (*(_26123_d))._field_dp);;
			if ((_3399_mi >= (*(_26123_d))._field_nd)) {
				goto _iter_end_1e5a6076b;
			};
			jule::I64 _3439_li = ((_3349_ui - _2919_upper._field_dp) + _3109_lower._field_dp);;
			jule::U8 _34413_l = static_cast<jule::U8>(48LLU);;
			if (((_3439_li >= 0LL) && (_3439_li < _3109_lower._field_nd))) {
				_34413_l=_3109_lower._field_d[_3439_li];
			};
			jule::U8 _34813_m = static_cast<jule::U8>(48LLU);;
			if ((_3399_mi >= 0LL)) {
				_34813_m=(*(_26123_d))._field_d[_3399_mi];
			};
			jule::U8 _35213_u = static_cast<jule::U8>(48LLU);;
			if ((_3349_ui < _2919_upper._field_nd)) {
				_35213_u=_2919_upper._field_d[_3349_ui];
			};
			jule::Bool _3609_okdown = ((_34413_l != _34813_m) || (_3175_inclusive && ((_3439_li + 1LL) == _3109_lower._field_nd)));;
			{
				
				if (((_3309_upperdelta == 0LLU) && ((_34813_m + 1LLU) < _35213_u))) {
					_case_begin_1e5a648e6:;
					{
						_3309_upperdelta=2LLU;
					}
				}
				else if (((_3309_upperdelta == 0LLU) && (_34813_m != _35213_u))) {
					_case_begin_1e5a6496d:;
					{
						_3309_upperdelta=1LLU;
					}
				}
				else if (((_3309_upperdelta == 1LLU) && ((_34813_m != '9') || (_35213_u != '0')))) {
					_case_begin_1e5a649e5:;
					{
						_3309_upperdelta=2LLU;
					}
				}
				_match_end_1e5a6482a:;
			};
			jule::Bool _3819_okup = ((_3309_upperdelta > 0LLU) && ((_3175_inclusive || (_3309_upperdelta > 1LLU)) || ((_3349_ui + 1LL) < _2919_upper._field_nd)));;
			{
				
				if ((_3609_okdown && _3819_okup)) {
					_case_begin_1e5a67355:;
					{
						_22892a23a_round(_26123_d, static_cast<jule::I64>((_3399_mi + 1LL)));
						return;;
					}
				}
				else if (_3609_okdown) {
					_case_begin_1e5a673cc:;
					{
						_228929bc9_roundDown(_26123_d, static_cast<jule::I64>((_3399_mi + 1LL)));
						return;;
					}
				}
				else if (_3819_okup) {
					_case_begin_1e5a67454:;
					{
						_228929e82_roundUp(_26123_d, static_cast<jule::I64>((_3399_mi + 1LL)));
						return;;
					}
				}
				_match_end_1e5a672de:;
			};
		}
	_iter_next_1e5a6076b:;
	}
	_iter_end_1e5a6076b:;;
}



inline jule::Slice<jule::U8> _228918a75_fmtE(jule::Slice<jule::U8> _40013_dst, jule::Bool _40026_neg, _228916534_decimalSlice _40037_d, jule::I64 _40054_prec, jule::U8 _40065_fmt) {
	if (_40026_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4079_ch = '0';;
	if ((_40037_d._field_nd != 0LL)) {
		_4079_ch=_40037_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push(_4079_ch); };
	if ((_40054_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push('.'); };
		jule::I64 _41613_i = 1LL;;
		jule::I64 _4179_m = _22891a25d_min(_40037_d._field_nd, static_cast<jule::I64>((_40054_prec + 1LL)));;
		if ((_41613_i < _4179_m)) {
			(_40013_dst).append(_40037_d._field_d.slice(_41613_i, _4179_m));;
			_41613_i=_4179_m;
		};
		for (; (_41613_i <= _40054_prec); (_41613_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1e5a6a688:;
		}
		_iter_end_1e5a6a688:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push(_40065_fmt); };
	jule::I64 _4299_exp = (_40037_d._field_dp - 1LL);;
	if ((_40037_d._field_nd == 0LL)) {
		_4299_exp=0LL;
	};
	if ((_4299_exp < 0LL)) {
		_4079_ch='-';
		_4299_exp=static_cast<jule::I64>((-(_4299_exp)));
	} else {
		_4079_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.push(_4079_ch); };
	{
		
		if ((_4299_exp < 10LL)) {
			_case_begin_1e5a6ee40:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4299_exp) + '0'))); };
			}
		}
		else if ((_4299_exp < 100LL)) {
			_case_begin_1e5a6d812:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4299_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4299_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1e5a6d79b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40013_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4299_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4299_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4299_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1e5a6ca64:;
	};
	return _40013_dst;;
}



inline jule::Slice<jule::U8> _22891905e_fmtF(jule::Slice<jule::U8> _45513_dst, jule::Bool _45526_neg, _228916534_decimalSlice _45537_d, jule::I64 _45554_prec) {
	if (_45526_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45513_dst; __jule_push_dest.push('-'); };
	};
	if ((_45537_d._field_dp > 0LL)) {
		jule::I64 _46313_m = _22891a25d_min(_45537_d._field_nd, _45537_d._field_dp);;
		(_45513_dst).append(_45537_d._field_d.slice(0LL, _46313_m));;
		for (; (_46313_m < _45537_d._field_dp); (_46313_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45513_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1e5a724e7:;
		}
		_iter_end_1e5a724e7:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45513_dst; __jule_push_dest.push('0'); };
	};
	if ((_45554_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45513_dst; __jule_push_dest.push('.'); };
		jule::I64 _47413_i = 0LL;;
		for (; (_47413_i < _45554_prec); (_47413_i)++) {
			{
				jule::U8 _47617_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47713_j = (_45537_d._field_dp + _47413_i);;
				if (((0LL <= _47713_j) && (_47713_j < _45537_d._field_nd))) {
					_47617_ch=_45537_d._field_d[_47713_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45513_dst; __jule_push_dest.push(_47617_ch); };
			}
		_iter_next_1e5a73471:;
		}
		_iter_end_1e5a73471:;;
	};
	return _45513_dst;;
}



inline jule::Slice<jule::U8> _2289196d0_fmtB(jule::Slice<jule::U8> _48813_dst, jule::Bool _48826_neg, jule::U64 _48837_mant, jule::I64 _48852_exp, _228248cbd_floatInfo* _48863_flt) {
	if (_48826_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48813_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22892e492_fmtBits(_48813_dst, _48837_mant, 10LL, false, true);
		_48813_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48813_dst; __jule_push_dest.push('p'); };
	_48852_exp-=static_cast<jule::I64>((*(_48863_flt))._field_mantbits);
	if ((_48852_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48813_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22892e492_fmtBits(_48813_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48852_exp)), 10LL, (_48852_exp < 0LL), true);
		_48813_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48813_dst;;
}



inline jule::Slice<jule::U8> _228919dd9_fmtX(jule::Slice<jule::U8> _51013_dst, jule::I64 _51026_prec, jule::U8 _51037_fmt, jule::Bool _51048_neg, jule::U64 _5119_mant, jule::I64 _51124_exp, _228248cbd_floatInfo* _51135_flt) {
	if ((_5119_mant == 0LLU)) {
		_51124_exp=0LL;
	};
	_5119_mant<<=(60LLU - (*(_51135_flt))._field_mantbits);
	while (((_5119_mant != 0LLU) && ((_5119_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5119_mant<<=1LLU;
			(_51124_exp)--;
		}
	_iter_next_1e5a76683:;
	}
	_iter_end_1e5a76683:;;
	if (((_51026_prec >= 0LL) && (_51026_prec < 15LL))) {
		jule::U64 _5259_shift = static_cast<jule::U64>((_51026_prec << 2LLU));;
		jule::U64 _5269_extra = ((_5119_mant << _5259_shift) & 1152921504606846975LLU);;
		_5119_mant>>=(60LLU - _5259_shift);
		if (((_5269_extra | (_5119_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5119_mant)++;
		};
		_5119_mant<<=(60LLU - _5259_shift);
		if (((_5119_mant & 2305843009213693952LLU) != 0LLU)) {
			_5119_mant>>=1LLU;
			(_51124_exp)++;
		};
	};
	jule::Str _5399_hex = jule::Str();;
	if ((_51037_fmt == 'X')) {
		_5399_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5399_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51048_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51037_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5119_mant >> 60LLU) & 1LLU))))); };
	_5119_mant<<=4LLU;
	if (((_51026_prec < 0LL) && (_5119_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push('.'); };
		while ((_5119_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push(_5399_hex[static_cast<jule::I64>(((_5119_mant >> 60LLU) & 15LLU))]); };
				_5119_mant<<=4LLU;
			}
		_iter_next_1e5a7dd3e:;
		}
		_iter_end_1e5a7dd3e:;;
	} else if ((_51026_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push('.'); };
		jule::I64 _56213_i = 0LL;;
		for (; (_56213_i < _51026_prec); (_56213_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push(_5399_hex[static_cast<jule::I64>(((_5119_mant >> 60LLU) & 15LLU))]); };
				_5119_mant<<=4LLU;
			}
		_iter_next_1e5a800d7:;
		}
		_iter_end_1e5a800d7:;;
	};
	jule::U8 _5709_ch = static_cast<jule::U8>(80LLU);;
	if ((_51037_fmt == _22891b12c_lower(_51037_fmt))) {
		_5709_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push(_5709_ch); };
	if ((_51124_exp < 0LL)) {
		_5709_ch='-';
		_51124_exp=static_cast<jule::I64>((-(_51124_exp)));
	} else {
		_5709_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.push(_5709_ch); };
	{
		
		if ((_51124_exp < 100LL)) {
			_case_begin_1e5a7c37b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51124_exp < 1000LL)) {
			_case_begin_1e5a7c3e2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51124_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1e5a824b3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51013_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51124_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51124_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51124_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1e5a80505:;
	};
	return _51013_dst;;
}



inline jule::I64 _22891a25d_min(jule::I64 _5958_a, jule::I64 _59516_b) {
	if ((_5958_a < _59516_b)) {
		return _5958_a;;
	};
	return _59516_b;;
}



inline jule::I64 _22891a5d2_max(jule::I64 _6028_a, jule::I64 _60216_b) {
	if ((_6028_a > _60216_b)) {
		return _6028_a;;
	};
	return _60216_b;;
}



inline jule::U8 _22891b12c_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__227c360b3_ConvError _22891b5a0_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__227c360b3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1e5a887c7:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1e5a886c8:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_22891b12c_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1e5a8a224:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_22891b12c_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1e5a8a147:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_22891b12c_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1e5a89d17:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1e5a89ca1:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1e5a89bd5:;
					};
				};
			}
		}
		else {
			_case_begin_1e5a87b5b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1e5a87ead:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1e5a8deb4:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e5a8d007:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1e5a8dada:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1e5a8da1e:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1e5a8e767:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5a8db62:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1e5a8e712:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5a9047c:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1e5a91c86:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _22891b12c_lower(_10912_c)) && (_22891b12c_lower(_10912_c) <= 'z'))) {
						_case_begin_1e5a91b76:;
						{
							_11013_d=static_cast<jule::U8>(((_22891b12c_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1e5a9179c:;
						{
							goto _iter_next_1e5a9047c;
						}
					}
					else {
						_case_begin_1e5a91736:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1e5a916c0:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1e5a9047c:;
			++it;
			goto _iter_begin_1e5a9047c;
		}
		_iter_end_1e5a9047c:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _22891b9ce_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__227c360b3_ConvError __jule_assign_result = _22891b5a0_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _22891be85_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__227c360b3_ConvError __jule_assign_result = _22891b5a0_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _22891cb78_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2287caa7a_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _2288beeb0_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_4122_man, _22891d9d1_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_4122_man, _22891d9d1_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2287caa7a_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _22891d0b8_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2287ca470_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _2288beeb0_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_11022_man, _22891d9d1_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_11022_man, _22891d9d1_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_2287ca470_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _22891ee11_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1e5ab3eea:;
	}
	_iter_end_1e5ab3eea:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22892021e_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1e5ab732d:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1e5ab73a5;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1e5ab73a5:;
			{
				jule::I64 _8813_caseN = _22891ee11_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2288d281e_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1e5ab742c:;
			{
				if ((_22891ee11_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2288d2247_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1e5ab7262:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2289204d8_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1e5abc5ec:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1e5abc872:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1e5abc7a6:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_22891b12c_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1e5ac1a1e:;
					{
						goto _iter_next_1e5abc0ad;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1e5ac1a96:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1e5ac63c5;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1e5abc0ad;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1e5ac1b1d:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1e5abc0ad;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1e5abc0ad;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _22891b12c_lower(_1389_c))) && (_22891b12c_lower(_1389_c) <= 'f'))) {
					_case_begin_1e5ac1b95:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_22891b12c_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1e5abc0ad;
					}
				}
				_match_end_1e5ac1942:;
			};
			goto _iter_end_1e5abc0ad;
		}
	_iter_next_1e5abc0ad:;
	}
	_iter_end_1e5abc0ad:;;
	_julec_label_1e5ac63c5:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_22891b12c_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1e5ac932e;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1e5ac932e:;
		}
		_iter_end_1e5ac932e:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _228922067_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _22891608e_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1e5ad2b62:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1e5ad2bd9:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_22892140c_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _22892140c_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1e5ad2c61:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_22892140c_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e5ad2612:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _228922496_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _228915c92_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1e5ad7051:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1e5ad70c8:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_22892174d_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _22892174d_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1e5ad7150:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_22892174d_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e5ad6a01:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__227c360b3_ConvError _228922a3a_atofHex(_228248cbd_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__227c360b3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1e5adbce2:;
	}
	_iter_end_1e5adbce2:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1e5adce36:;
	}
	_iter_end_1e5adce36:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1e5adcc38:;
	}
	_iter_end_1e5adcc38:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _228915c92_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_2287ca470_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2287caa7a_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__227c360b3_ConvError _228922e14_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22892021e_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2289204d8_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__227c360b3_ConvError __jule_assign_result = _228922a3a_atofHex(&(_228915c92_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _228922496_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _22891d0b8_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _22891d0b8_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2289292b1_decimal _6679_d = _2289292b1_decimal{};;
	if ((!(_228920b7b_set(&_6679_d, _22640d7ae_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _228920ebc_floatBits(&_6679_d, &(_228915c92_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2287ca470_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError _2289231cd_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22892021e_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2289204d8_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__227c360b3_ConvError __jule_assign_result = _228922a3a_atofHex(&(_22891608e_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _228922067_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _22891cb78_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _22891cb78_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2289292b1_decimal _7249_d = _2289292b1_decimal{};;
	if ((!(_228920b7b_set(&_7249_d, _22640d7ae_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _228920ebc_floatBits(&_7249_d, &(_22891608e_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2287caa7a_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError _228923552_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_assign_result = _228922e14_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_assign_result = _2289231cd_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _2289238c6_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__227c360b3_ConvError __jule_assign_result = _228923552_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _2289241ce_ryuFtoaFixed32(_228916534_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _2288c75e4_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_228925763_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927127_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _2289278ca_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_228924ec1_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _228924674_ryuFtoaFixed64(_228916534_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _2288c78ad_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_228925763_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927556_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _2289278ca_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_228924ec1_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _228924ec1_formatDecimal(_228916534_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _2289249b5_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1e5b1ee13:;
	}
	_iter_end_1e5b1ee13:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 0LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 0LLU))];
			_2319_v=_23313_v1;
		}
	_iter_next_1e5b20078:;
	}
	_iter_end_1e5b20078:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _2319_v) + 1LLU))];
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _2319_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1e5b284d2:;
	}
	_iter_end_1e5b284d2:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _228925499_ryuFtoaShortest(_228916534_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _228248cbd_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_2288c1b3d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_228926577_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _228925e5b_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_228926577_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_228925763_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _228915c92_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927127_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927127_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927127_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927556_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927556_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _228927556_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_2289278ca_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_2289278ca_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_2289278ca_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_228926577_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _228925763_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _228925a2c_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _228925e5b_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _228248cbd_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _228926577_ryuDigits(_228916534_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _228927b94_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _228927b94_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _228927b94_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_228926be8_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_228926be8_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1e5b44872:;
		}
		_iter_end_1e5b44872:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_228926be8_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1e5b470d3:;
	}
	_iter_end_1e5b470d3:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1e5b46bc6:;
	}
	_iter_end_1e5b46bc6:;;
}



inline void _228926be8_ryuDigits32(_228916534_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1e5b49910;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1e5b49910:;
	}
	_iter_end_1e5b49910:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 0LLU))];
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1e5b4a69c:;
	}
	_iter_end_1e5b4a69c:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _228927127_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _22891d9d1_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_228925a2c_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _228927556_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _22891d9d1_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_228925a2c_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c9e54_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2288c864a_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _2289278ca_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1e5b5d3a2:;
	}
	_iter_end_1e5b5d3a2:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _228927b94_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _22892ab0e_trim(_2289292b1_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1e5b618e4:;
	}
	_iter_end_1e5b618e4:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _22892adea_rightShift(_2289292b1_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1e5b64c16:;
				}
				_iter_end_1e5b64c16:;;
				goto _iter_end_1e5b63462;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1e5b63462:;
	}
	_iter_end_1e5b63462:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1e5b666eb:;
	}
	_iter_end_1e5b666eb:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1e5b66982:;
	}
	_iter_end_1e5b66982:;;
	(*(_28420_a))._field_nd=_2869_w;
	_22892ab0e_trim(_28420_a);
}



inline jule::Bool _22892b3a1_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1e5b6a205:;
	}
	_iter_end_1e5b6a205:;;
	return false;;
}



inline void _22892b659_leftShift(_2289292b1_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _228928bb7_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_22892b3a1_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_228928bb7_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1e5b6c218:;
	}
	_iter_end_1e5b6c218:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1e5b6d637:;
	}
	_iter_end_1e5b6d637:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_22892ab0e_trim(_35219_a);
}



inline jule::Bool _22892b9cd_shouldRoundUp(_2289292b1_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _22892d161_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _22892db34_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _648_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22892e492_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_648_s = __jule_assign_result.__jule_result_arg1;
	});
	return _648_s;;
}



inline jule::Str _22892d529_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _22892db34_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _758_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22892e492_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_758_s = __jule_assign_result.__jule_result_arg1;
	});
	return _758_s;;
}



inline jule::Str _22892d7e3_Itoa(jule::I64 _809_i) {
	return _22892d529_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _22892db34_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _22892dded_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _22892e492_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _1079_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1089_i = _1079_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14913_us = static_cast<jule::U64>(_10133_u);;
		while ((_14913_us >= 100LLU)) {
			{
				jule::U64 _15113_is = ((_14913_us % 100LL) << 1LLU);;
				_14913_us/=100LLU;
				_1089_i-=2LL;
				_1079_a[(_1089_i + 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 1LLU))];
				_1079_a[(_1089_i + 0LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 0LLU))];
			}
		_iter_next_1e5baa2bc:;
		}
		_iter_end_1e5baa2bc:;;
		jule::U64 _1599_is = (_14913_us << 1LLU);;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_1599_is + 1LLU))];
		if ((_14913_us >= 10LLU)) {
			(_1089_i)--;
			_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_1599_is)];
		};
	} else if (_22892dded_isPowerOfTwo(_10141_base)) {
		jule::U64 _1749_shift = (static_cast<jule::U64>(_2288c0e17_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _1759_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _1769_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _1759_b)) {
			{
				(_1089_i)--;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _1769_m))];
				_10133_u>>=_1749_shift;
			}
		_iter_next_1e5bb234b:;
		}
		_iter_end_1e5bb234b:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _1879_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _1879_b)) {
			{
				(_1089_i)--;
				jule::U64 _19313_q = jule::div(_10133_u,_1879_b);;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19313_q * _1879_b))))];
				_10133_u=_19313_q;
			}
		_iter_next_1e5bb4062:;
		}
		_iter_end_1e5bb4062:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_1089_i)--;
		_1079_a[_1089_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_1079_a.slice(_1089_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_1079_a.slice(_1089_i));
	return __jule_func_result;;
}



inline jule::Str _22893088e_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1e5bcb189:;
			{
				return _22892ed88_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1e5bcb200:;
			{
				return _228930152_SysUint;;
			}
		}
		else {
			_case_begin_1e5bcab4a:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1e5bc8373:;
	};
}



inline jule::I64 _228930b58_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1e5bcc300:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e5bcc432:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e5bcc498:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e5bcc50e:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1e5bcc575:;
			{
				return _22892ea8b_BitSize;;
			}
		}
		else {
			_case_begin_1e5bcbe15:;
			{
				return -1LL;;
			}
		}
		_match_end_1e5bcbd9e:;
	};
}



inline jule::Str _228930e99_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1e5bcdeb1:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1e5bce8b8:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1e5bce92e:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e5bce995:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1e5bce456:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e5bce3e0:;
	};
}



inline jule::Str _228931263_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1e5bcec4d:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1e5bd0b3e:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1e5bd0ba5:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e5bd0c1b:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1e5bd05de:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e5bd0578:;
	};
}



inline jule::Str _22893152c_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1e5bd0ed5:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e5bd1dc6:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1e5bd1876:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e5bd1810:;
	};
}



inline jule::Bool _228932176_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _2289238c6_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _228932440_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1e5bd6c88:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e5bd66a0:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e5bd5292:;
	};
}



inline jule::I64 _228932709_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1e5bd7a25:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1e5bd7ad0:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1e5bd7b46:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e5bd7063:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e5bd75d5:;
	};
}



inline jule::I64 _2289329c3_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1e5bd9582:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1e5bd963c:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1e5bd96a3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e5bd9043:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e5bd8b36:;
	};
}



inline void _228932b49_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2278c434a_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1e5bda4ea:;
				{
					_22892ea8b_BitSize=64LLU;
					_22892ed88_SysInt=jule::Str::lit("i64", 3);
					_228930152_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1e5bda583:;
				{
					_22892ea8b_BitSize=32LLU;
					_22892ed88_SysInt=jule::Str::lit("i32", 3);
					_228930152_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1e5bda473:;
		};
	};
}



inline void _228932cc0_init(void) {
	_228932b49_UpdateTarget();
}



inline jule::I64 _228936a82_MinI(jule::Str _6113_k) {
	_6113_k=_22893088e_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1e5bd9829:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e5bdc6d9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e5bdc750:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e5bdc7b6:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1e5bd996c:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5bd9917:;
	};
}



inline jule::I64 _228936d90_MaxI(jule::Str _7913_k) {
	_7913_k=_22893088e_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1e5bdca5d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e5bddce5:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e5bddd5b:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e5bdddc2:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1e5bdd476:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5bddb80:;
	};
}



inline jule::U64 _228937159_MaxU(jule::Str _9713_k) {
	_9713_k=_22893088e_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1e5bde169:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e5be0401:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1e5be0467:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1e5be04cd:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1e5bdea82:;
			{
				return 0LLU;;
			}
		}
		_match_end_1e5be028b:;
	};
}



inline jule::F64 _22893738a_Min(jule::Str _11512_k) {
	_11512_k=_22893088e_RealKindOf(_11512_k);
	jule::I64 _1175_i = _228936a82_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e5be2931:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e5be236a:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1e5be1d09:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5be20c3:;
	};
}



inline jule::F64 _228937654_Max(jule::Str _13312_k) {
	_13312_k=_22893088e_RealKindOf(_13312_k);
	jule::I64 _1355_i = _228936d90_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _228937159_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e5be4999:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e5be43d3:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1e5be3cc8:;
			{
				return 0LL;;
			}
		}
		_match_end_1e5be4119:;
	};
}



inline jule::Bool _228937ac7_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _228937dd5_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _22893819e_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _2289384e0_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _2289387a9_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _228938a73_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _228938d3c_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _2289391d3_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _22893949c_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _228939766_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _228939ada_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1e5be9ebb:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1e5bea2c9:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1e5bea54e:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1e5bea5b5:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1e5bea62b:;
			{
				return _228937ac7_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e5bea692:;
			{
				return _228937dd5_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e5bea7a2:;
			{
				return _22893819e_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e5bea818:;
			{
				return _2289384e0_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1e5bea87e:;
			{
				return _2289387a9_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e5bea8e5:;
			{
				return _228938a73_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1e5bea96c:;
			{
				return _228938d3c_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1e5bea9e4:;
			{
				return _2289391d3_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e5beaa6b:;
			{
				return _22893949c_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e5beaae3:;
			{
				return _228939766_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1e5beab6a:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1e5beabe2:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1e5bea131:;
			{
				return false;;
			}
		}
		_match_end_1e5be3d72:;
	};
}



inline jule::Bool _228939da4_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _22893a16d_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _22893a437_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _22893a701_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _22893ab74_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _22893ae3d_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _22893b207_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _22893b4c1_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _22893b845_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1e5c02ca4:;
			{
				return _22893c89b_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1e5c03117:;
			{
				return _22893cba9_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1e5c0318e:;
			{
				return _22893cba9_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e5c033e2:;
			{
				return _228939da4_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e5c03469:;
			{
				return _22893a16d_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e5c034e1:;
			{
				return _22893a437_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e5c03568:;
			{
				return _22893a701_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1e5c03645:;
			{
				return _22893ab74_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1e5c036bc:;
			{
				return _22893ae3d_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e5c03744:;
			{
				return _22893b207_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e5c037bb:;
			{
				return _22893b4c1_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1e5c03843:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5c02ea2:;
			{
				return false;;
			}
		}
		_match_end_1e5c02e2a:;
	};
}



inline jule::Bool _22893c89b_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _22893cba9_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _22893ce73_IsInt(jule::Str _4610_k) {
	return (_22893c89b_IsSigInt(_4610_k) || _22893cba9_IsUnsigInt(_4610_k));;
}



inline jule::Bool _22893d2b4_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _22893d57d_IsNum(jule::Str _5610_k) {
	return (_22893ce73_IsInt(_5610_k) || _22893d2b4_IsFloat(_5610_k));;
}



inline jule::Bool _22893d847_IsSigNum(jule::Str _6113_k) {
	return (_22893c89b_IsSigInt(_6113_k) || _22893d2b4_IsFloat(_6113_k));;
}



inline void _228947a71_lshiftUnsig(_22893da56_Const* _59021_c, _22893da56_Const* _59032_x) {
	jule::U64 _5915_l = _228941482_AsU64(_59021_c);;
	jule::U64 _5925_r = _228941482_AsU64(_59032_x);;
	_228941c79_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _228947da1_rshiftUnsig(_22893da56_Const* _59621_c, _22893da56_Const* _59632_x) {
	jule::U64 _5975_l = _228941482_AsU64(_59621_c);;
	jule::U64 _5985_r = _228941482_AsU64(_59632_x);;
	_228941c79_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1e300e5be_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_20cac7502_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5ca92bc:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1e5ca92bc:;
			++it;
			goto _iter_begin_1e5ca92bc;
		}
		_iter_end_1e5ca92bc:;
	};
	return false;;
}



inline jule::Bool _1e300e8cc_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_20cb6d4bb_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5ca9630:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1e5ca9630:;
			++it;
			goto _iter_begin_1e5ca9630;
		}
		_iter_end_1e5ca9630:;
	};
	return false;;
}



inline jule::Bool _1e300eed7_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1e30102a1_IsRawStr(_36410_k)));;
}



inline jule::Bool _1e30102a1_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1e301056a_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1e3010e94_IsFloat(jule::Str _38012_k) {
	if (_2276ede77_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _2277044ee_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _2277044ee_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1e301125d_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1e30117e1_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1e3011aaa_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1e301213d_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_20cac7205_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5cb1a88:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1e5cb1a88:;
			++it;
			goto _iter_begin_1e5cb1a88;
		}
		_iter_end_1e5cb1a88:;
	};
	return false;;
}



inline jule::Bool _1e30125b1_IsLetter(jule::I32 _42913_r) {
	return _227538aa3_IsLetter(_42913_r);;
}



inline jule::Bool _1e3012b44_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1e3012e0d_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1e30131c7_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1e3013491_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1e5cb57b2:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1e5cb5839:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1e5cb58b1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e5cb56e6:;
			{
				return false;;
			}
		}
		_match_end_1e5cb464b:;
	};
}



inline jule::Bool _1e301375a_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1e3013a24_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_20cb6dab5_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5cb71ba:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1e5cb71ba:;
			++it;
			goto _iter_begin_1e5cb71ba;
		}
		_iter_end_1e5cb71ba:;
	};
	return false;;
}



inline jule::Bool _1e3013cdd_IsAssignOp(jule::U64 _49515_id) {
	if (_1e3013a24_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_20cb6ddb2_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5cb94a8:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1e5cb94a8:;
			++it;
			goto _iter_begin_1e5cb94a8;
		}
		_iter_end_1e5cb94a8:;
	};
	return false;;
}



inline jule::Ptr<_1e301464b_File> _1e30159e3_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1e301464b_File>(_1e301464b_File{._field_Path=_5715_path, });;
}



inline _2277b1ce8_Log _1e301753e_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1e301464b_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_2277b225a_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1e3017907_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5cc3e74:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1e5cc3e74:;
			++it;
			_1149_i++;
			goto _iter_begin_1e5cc3e74;
		}
		_iter_end_1e5cc3e74:;
	};
	return true;;
}



inline jule::Str _1e3017c7b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1e3012b44_IsDecimal(_1289_b))))) {
				goto _iter_end_1e5cc5bbd;
			};
		}
	_iter_next_1e5cc5bbd:;
	}
	_iter_end_1e5cc5bbd:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1e3018144_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1e3017c7b_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1e30184b8_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1e5cc87e7:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1e3012b44_IsDecimal(_1689_b)) {
					_case_begin_1e5cc93db:;
					{
						goto _iter_next_1e5cc83da;
					}
				}
				else if (_1e3019dc1_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1e5cc9463:;
					{
						return _1e3018144_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1e5cc9320:;
					{
						goto _iter_end_1e5cc83da;
					}
				}
				_match_end_1e5cc92a9:;
			};
		}
	_iter_next_1e5cc83da:;
	}
	_iter_end_1e5cc83da:;;
	return jule::Str();;
}



inline jule::Str _1e301883c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1e3017c7b_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1e3018bb1_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1e3017c7b_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1e3019145_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1e3017c7b_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1e3012b44_IsDecimal(_2019_b))))) {
				goto _iter_end_1e5cd238e;
			};
		}
	_iter_next_1e5cd238e:;
	}
	_iter_end_1e5cd238e:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1e301940e_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1e5cd411b:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1e5cd4b22:;
					{
						__jule_func_result = _1e3019145_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1e5cd4b99:;
					{
						goto _iter_next_1e5cd41a4;
					}
				}
				else if (_1e3019a4c_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1e5cd4c21:;
					{
						__jule_func_result = _1e3017c7b_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1e3012b44_IsDecimal(_2209_b)))) {
					_case_begin_1e5cd4c98:;
					{
						goto _iter_end_1e5cd41a4;
					}
				}
				_match_end_1e5cd4a45:;
			};
		}
	_iter_next_1e5cd41a4:;
	}
	_iter_end_1e5cd41a4:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1e30196c8_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1e3017907_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1e3012e0d_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1e5cd79b0;
			};
		}
	_iter_next_1e5cd79b0:;
	}
	_iter_end_1e5cd79b0:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1e3019a4c_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1e3019dc1_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1e301a245_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1e5cda51d:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1e3012b44_IsDecimal(_2769_b)) {
					_case_begin_1e5cdb354:;
					{
						goto _iter_next_1e5cda7d7;
					}
				}
				else if (_1e3019dc1_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1e5cdb3cb:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1e5cdb288:;
					{
						goto _iter_end_1e5cda7d7;
					}
				}
				_match_end_1e5cdb222:;
			};
		}
	_iter_next_1e5cda7d7:;
	}
	_iter_end_1e5cda7d7:;;
	return false;;
}



inline jule::Bool _1e301a5b9_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1e5cdc685:;
			{
				goto _case_begin_1e5cdc70c;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1e5cdc70c:;
			{
				goto _case_begin_1e5cdc784;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1e5cdc784:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e5cdc5a8:;
			{
				return true;;
			}
		}
		_match_end_1e5cdc4dc:;
	};
}



inline jule::Bool _1e301a93d_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1e5cde401:;
			{
				goto _case_begin_1e5cde478;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1e5cde478:;
			{
				goto _case_begin_1e5cde500;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1e5cde500:;
			{
				goto _case_begin_1e5cde753;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1e5cde753:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e5cddee4:;
			{
				return true;;
			}
		}
		_match_end_1e5cdde28:;
	};
}



inline jule::Str _1e301adb1_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1e3019145_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1e3019a4c_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1e3017c7b_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1e30131c7_IsOctal(_3399_b))))) {
				goto _iter_end_1e5ce2b63;
			};
		}
	_iter_next_1e5ce2b63:;
	}
	_iter_end_1e5ce2b63:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1e301b17a_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1e5ce6c33:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1e301a5b9_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1e5ce788d:;
					{
						__jule_func_result = _1e3018bb1_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1e301a93d_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1e5ce7915:;
					{
						__jule_func_result = _1e301883c_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1e3019dc1_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1e5ce798c:;
					{
						__jule_func_result = _1e3018144_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1e301a245_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1e5ce7a14:;
					{
						__jule_func_result = _1e30184b8_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1e3013491_IsHex(_3729_b))))) {
					_case_begin_1e5ce7a8b:;
					{
						goto _iter_end_1e5ce6e75;
					}
				}
				_match_end_1e5ce77a0:;
			};
		}
	_iter_next_1e5ce6e75:;
	}
	_iter_end_1e5ce6e75:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1e301b4ee_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1e3013491_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1e5cea110:;
	}
	_iter_end_1e5cea110:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1e301b7b8_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1e301b4ee_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1e301ba82_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1e301b4ee_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1e301bd4b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1e301b4ee_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1e301c115_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1e30131c7_IsOctal((*(_42616_txt))[1LL]))) || (!(_1e30131c7_IsOctal((*(_42616_txt))[2LL])))) || (!(_1e30131c7_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_2277b1ce8_Log> _1e3022109_Lex(jule::Ptr<_1e301464b_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1e301c885_lex _8149_lex = _1e301c885_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1e302069b_newLine(&_8149_lex);
	_1e301d479_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1e30d8b4e_FindModuleFile(jule::Slice<jule::Ptr<_2263463d9_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5d79cc7:;
		if (it != expr_end) {
			jule::Ptr<_2263463d9_DirEntry> *_1412_d = it;
			{
				if (((!(_22634a60d_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1e5d79cc7:;
			++it;
			goto _iter_begin_1e5d79cc7;
		}
		_iter_end_1e5d79cc7:;
	};
	return false;;
}



inline jule::Str _1e30d8e07_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2263463d9_DirEntry>> _2713_dirents = ({
				auto except = static__227723551_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1e5d7ada5;
				} jule::Slice<jule::Ptr<_2263463d9_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1e30d8b4e_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_22772120d_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1e5d7ada5;
			};
		}
	_iter_next_1e5d7ada5:;
	}
	_iter_end_1e5d7ada5:;;
	return jule::Str();;
}



inline jule::Slice<_2277b1ce8_Log> _1e30d91c1_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__226348ae5_Read(_22772051a_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_2277b1ce8_Log>::make({_2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _2277069da_Trim(_22640da78_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_2277b1ce8_Log>::make({_2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1e30d9a51_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ad255_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2275a25ab_IsUpper(_145_r);;
}



inline jule::Bool _1e3132725_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1e314e016_ToRune(jule::Str _2011_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	jule::Slice<jule::U8> _225_bytes = _22640d7ae_StrBytes(_2011_lit).slice(1LL, (_2011_lit.len() - 1LL));;
	if (((_225_bytes[0LL] == '\\') && (_225_bytes.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1e314ec1a_runeFromEsqSeq(_225_bytes, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune(_225_bytes);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1e314e2be_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1e314e610_ToStr(jule::Str _4710_lit) {
	if ((_4710_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4710_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e5d86b4c:;
		if (it != expr_end) {
			jule::U8 *_5412_b = it;
			{
				if ((((*(_5412_b)) >= 128LLU) || ((*(_5412_b)) == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1e5d86b4c;
				};
			}
			_iter_next_1e5d86b4c:;
			++it;
			goto _iter_begin_1e5d86b4c;
		}
		_iter_end_1e5d86b4c:;
	};
	if (_539_isPure) {
		return _4710_lit.slice(1LL, (_4710_lit.len() - 1LL));;
	};
	jule::Slice<jule::U8> _675_bytes = _22640d7ae_StrBytes(_4710_lit).slice(1LL, (_4710_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _675_bytes.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _675_bytes.len())) {
		{
			jule::U8 _719_b = _675_bytes[_699_i];;
			if ((_719_b == '\\')) {
				(_689_s).append(_1e315008e_strEsqSeq(_675_bytes, &(_699_i)));;
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune(_675_bytes.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_2276ae377_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1e5d88ac7:;
	}
	_iter_end_1e5d88ac7:;;
	return _22640dd42_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1e314e8c9_tryBtoaCommonEsq(jule::Slice<jule::U8> _8321_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_bytes.len() < 2LL) || (_8321_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1e5d8b4d1:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e5d8b558:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e5d8b5d0:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1e5d8b657:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1e5d8b6ce:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e5d8b756:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1e5d8b7cd:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1e5d8b855:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1e5d8b8cc:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1e5d8b954:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1e5d8b38d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1e314ec1a_runeFromEsqSeq(jule::Slice<jule::U8> _11319_bytes, jule::I64* _11339_i) {
	jule::U8 _1145_b = 0;;
	jule::Bool _1148_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1e314e8c9_tryBtoaCommonEsq(_11319_bytes.slice((*(_11339_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11339_i)))++;
	if (_1148_ok) {
		((*(_11339_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1145_b));;
	};
	{
		auto &_match_expr{ _11319_bytes[(*(_11339_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1e5d9068e:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _22891b9ce_ParseUint(_22640da78_BytesStr(_11319_bytes.slice(((*(_11339_i)) + 1LL), ((*(_11339_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11339_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e5d90edb:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _22891b9ce_ParseUint(_22640da78_BytesStr(_11319_bytes.slice(((*(_11339_i)) + 1LL), ((*(_11339_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11339_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e5d91052:;
			{
				;
				jule::Slice<jule::U8> _1349_seq = _11319_bytes.slice(((*(_11339_i)) + 1LL), ((*(_11339_i)) + 3LL));;
				(*(_11339_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _22891b9ce_ParseUint(_22640da78_BytesStr(_1349_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1e5d8ea56:;
			{
				;
				jule::Slice<jule::U8> _1399_seq = _11319_bytes.slice((*(_11339_i)), ((*(_11339_i)) + 3LL));;
				(*(_11339_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _22891b9ce_ParseUint(_22640da78_BytesStr(_1399_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1e5d8ea01:;
	};
}



inline jule::Slice<jule::U8> _1e315008e_strEsqSeq(jule::Slice<jule::U8> _14514_bytes, jule::I64* _14534_i) {
	jule::I32 _1465_r = _1e314ec1a_runeFromEsqSeq(_14514_bytes, _14534_i);;
	if ((_1465_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1465_r))});;
	};
	return _22640e10b_BytesFromStr(jule::Str::from_rune(_1465_r));;
}



inline jule::I64 _1e327c81a_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1e5dbae06:;
	}
	_iter_end_1e5dbae06:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1e327cb8e_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2276ace14_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1e5dbd447:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1e5dbd524:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1e5dbcd70:;
			};
		}
	_iter_next_1e5dbc6aa:;
	}
	_iter_end_1e5dbc6aa:;;
	return nullptr;;
}



inline void _1e327ce7a_FmtByDefault(_227713453_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_22771c02d_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1e5dbe976:;
			{
				_22771c02d_WriteStr(_4722_buf, _228916ab7_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e5dc015d:;
			{
				_22771c02d_WriteStr(_4722_buf, _228916ab7_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1e5dbeb1e:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d529_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1e5dbeb85:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d529_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e5dc0290:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d529_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e5dc0306:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d529_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1e5dc036c:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d161_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1e5dc03d3:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d161_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1e5dc0449:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d161_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e5dc04b0:;
			{
				_22771c02d_WriteStr(_4722_buf, _22892d161_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e5dc0526:;
			{
				_22771c02d_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e5dc058c:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_22771c02d_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_22771c02d_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1e5dbe46a:;
			{
				_22771c02d_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1e5dbd821:;
	};
}



inline void _1e327d398_applyFmtByDefault(_227713453_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1e327ce7a_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1e327d7e9_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _227713453_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1e327d398_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_22771c02d_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_22771bc75_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1e327db3a_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _22640e10b_BytesFromStr(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1e327c81a_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_227713453_StrBuilder _1269_buf = static__22771371c_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1e327c81a_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_22771bc75_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1e327cb8e_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1e5dcb444;
			};
			_1e327d7e9_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_22771bc75_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1e5dcb444;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1e5dcb444:;
	}
	_iter_end_1e5dcb444:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_22771bc75_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _22771d2c6_Buf(&_1269_buf);;
}



inline jule::Str _1e3280b5e_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _22640dd42_StrFromBytes(_1e327db3a_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1e3060213_parameterUsesGenerics(jule::Ptr<_1e305be8a_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>* _38446_generics) {
	if (_1e3058b79_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1e31bae51_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1e31a78bb_TypeSymbol> _1e3062963_buildType(jule::Ptr<_1e302446e_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1e3171049_Value> _1e3062c71_buildExpr(jule::Ptr<_1e30287a3_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e306303a_buildTypeAlias(jule::Ptr<_1e303acd2_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1e3062963_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1e30421d4_Field> _1e306337b_buildField(jule::Ptr<_1e303e5aa_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1e30421d4_Field>(_1e30421d4_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1e3062963_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1e30421d4_Field>> _1e3063645_buildFields(jule::Slice<jule::Ptr<_1e303e5aa_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1e30421d4_Field>> _1359_fields = jule::Slice<jule::Ptr<_1e30421d4_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e617c9e2:;
		if (it != expr_end) {
			jule::Ptr<_1e303e5aa_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e30421d4_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1e306337b_buildField(_13617_decl)); };
			}
			_iter_next_1e617c9e2:;
			++it;
			goto _iter_begin_1e617c9e2;
		}
		_iter_end_1e617c9e2:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1e30450c7_Struct> _1e306390e_buildStruct(jule::Ptr<_1e303eea1_StructDecl> _14220_decl) {
	return jule::new_ptr<_1e30450c7_Struct>(_1e30450c7_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1e3063645_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1e305855d_Param> _1e3063bc8_buildParam(jule::Ptr<_1e3034bcc_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1e305855d_Param>(_1e305855d_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1e3062963_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1e305855d_Param>> _1e306406e_buildParams(jule::Slice<jule::Ptr<_1e3034bcc_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1e305855d_Param>> _1669_params = jule::Slice<jule::Ptr<_1e305855d_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61818e7:;
		if (it != expr_end) {
			jule::Ptr<_1e3034bcc_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e305855d_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1e3063bc8_buildParam(_16717_decl)); };
			}
			_iter_next_1e61818e7:;
			++it;
			goto _iter_begin_1e61818e7;
		}
		_iter_end_1e61818e7:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1e3057ccc_RetType> _1e3064338_buildRetType(jule::Ptr<_1e3027362_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e3057ccc_RetType>(_1e3057ccc_RetType{._field_Kind=_1e3062963_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1e305a032_Fn> _1e3064602_buildFunc(jule::Ptr<_1e303612e_FnDecl> _18318_decl) {
	return jule::new_ptr<_1e305a032_Fn>(_1e305a032_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1e3064338_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1e306406e_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1e305a032_Fn>> _1e30648bb_buildMethods(jule::Slice<jule::Ptr<_1e303612e_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1e305a032_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1e305a032_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6186842:;
		if (it != expr_end) {
			jule::Ptr<_1e303612e_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e305a032_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1e3064602_buildFunc(_20317_decl)); };
			}
			_iter_next_1e6186842:;
			++it;
			goto _iter_begin_1e6186842;
		}
		_iter_end_1e6186842:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>> _1e3064b85_buildTraitInherits(jule::Slice<jule::Ptr<_1e302446e_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6187524:;
		if (it != expr_end) {
			jule::Ptr<_1e302446e_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1e31a78bb_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1e3062963_buildType(_21117_it)); };
			}
			_iter_next_1e6187524:;
			++it;
			goto _iter_begin_1e6187524;
		}
		_iter_end_1e6187524:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e3064e4e_buildTrait(jule::Ptr<_1e30406dd_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1e306d2cb_Trait>(_1e306d2cb_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1e3064b85_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1e30648bb_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1e306ee59_EnumItem> _1e3065218_buildEnumItem(jule::Ptr<_1e303c795_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1e306ee59_EnumItem>(_1e306ee59_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1e3062c71_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _1e30654d2_buildEnumItems(jule::Slice<jule::Ptr<_1e303c795_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1e306ee59_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e618a989:;
		if (it != expr_end) {
			jule::Ptr<_1e303c795_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e306ee59_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1e3065218_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1e618a989:;
			++it;
			goto _iter_begin_1e618a989;
		}
		_iter_end_1e618a989:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1e30709c6_Enum> _1e3065955_buildEnum(jule::Ptr<_1e303d356_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1e30709c6_Enum>(_1e30709c6_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1e3062963_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1e30654d2_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1e3071b09_TypeEnumItem> _1e3065c1e_buildTypeEnumItem(jule::Ptr<_1e303db81_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1e3071b09_TypeEnumItem>(_1e3071b09_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1e3062963_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> _1e3065ed8_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e303db81_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e618dad0:;
		if (it != expr_end) {
			jule::Ptr<_1e303db81_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e3071b09_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1e3065c1e_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1e618dad0:;
			++it;
			goto _iter_begin_1e618dad0;
		}
		_iter_end_1e618dad0:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30662a2_buildTypeEnum(jule::Ptr<_1e303e2e1_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1e30721d1_TypeEnum>(_1e30721d1_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1e3065ed8_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1e310ed40_Var> _1e306656b_buildVar(jule::Ptr<_1e303720c_VarDecl> _27817_decl) {
	return jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1e3062963_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1e3062c71_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1e30613ce_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1e310ed40_Var>> _1e3066835_buildVars(jule::Slice<jule::Ptr<_1e303720c_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1e310ed40_Var>> _2969_vars = jule::Slice<jule::Ptr<_1e310ed40_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e61932cc:;
		if (it != expr_end) {
			jule::Ptr<_1e303720c_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1e306656b_buildVar(_29717_decl)); };
			}
			_iter_next_1e61932cc:;
			++it;
			goto _iter_begin_1e61932cc;
		}
		_iter_end_1e61932cc:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1e3095655_Impl> _1e3066aee_buildImpl(jule::Ptr<_1e3040d4d_Impl> _30318_decl) {
	return jule::new_ptr<_1e3095655_Impl>(_1e3095655_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1e30648bb_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1e3066835_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1e316ee05_Data> _1e3091145_buildAsComptimeMethodData(jule::Ptr<_1e305ce36_FnIns>* _141635_f) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_1e30bbeb7_ImportInfo> _1e3091453_findComptimePackage(jule::Ptr<_1e30dc955_Sema>* _142429_s) {
	return _1e30dcdea_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e30bbeb7_ImportInfo>)>([=](jule::Ptr<_1e30bbeb7_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1e316ee05_Data> _1e30917c7_buildComptimeTypeInfoData(jule::Ptr<_1e30dc955_Sema>* _143035_s, jule::Ptr<_1e31a06e9_TypeKind>* _143050_t) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_1e30dc290_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3091a08_buildComptimeValue(jule::Ptr<_1e316ee05_Data>* _143828_d) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e308a55c_comptimeValue>(_1e308a55c_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _1e30949c8_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1e31a06e9_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1e6344cec:;
			{
				jule::Ptr<_1e31a82c3_Prim> _1459_prim = _1e31a2d4a_Prim((*(_14234_g)).ptr());;
				if ((_1459_prim == nullptr)) {
					return false;;
				};
				return _22893d847_IsSigNum((*(_1459_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1e634aa28:;
			{
				jule::Ptr<_1e31a82c3_Prim> _1519_prim = _1e31a2d4a_Prim((*(_14234_g)).ptr());;
				if ((_1519_prim == nullptr)) {
					return false;;
				};
				return _22893cba9_IsUnsigInt((*(_1519_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1e634aa8e:;
			{
				jule::Ptr<_1e31a82c3_Prim> _1579_prim = _1e31a2d4a_Prim((*(_14234_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _22893d2b4_IsFloat((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1e634ac04:;
			{
				jule::Ptr<_1e31a82c3_Prim> _1639_prim = _1e31a2d4a_Prim((*(_14234_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _22893d57d_IsNum((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1e634ac6a:;
			{
				return _1e31a207a_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1e634acd1:;
			{
				return (!(_1e31a207a_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1e634ad47:;
			{
				return _1e31a1ce4_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1e634ae57:;
			{
				return _1e31a2311_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1e63498e5:;
			{
				return false;;
			}
		}
		_match_end_1e6349890:;
	};
}



inline jule::Bool _1e3094cd6_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1e3092cc3_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e635117c:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1e635117c:;
			++it;
			goto _iter_begin_1e635117c;
		}
		_iter_end_1e635117c:;
	};
	return false;;
}



inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e3097866_newScopeCheckerBase(jule::Ptr<_1e30dc955_Sema>* _5829_s, jule::Ptr<_1e305ce36_FnIns> _5843_owner) {
	return jule::new_ptr<_1e30a2d8d_scopeChecker>(_1e30a2d8d_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1e3169ad1_SymbolTable>(), });;
}



inline jule::Ptr<_1e30a2d8d_scopeChecker> _1e3097c2e_newScopeChecker(jule::Ptr<_1e30dc955_Sema>* _6625_s, jule::Ptr<_1e305ce36_FnIns> _6639_owner) {
	jule::Ptr<_1e30a2d8d_scopeChecker> _679_base = _1e3097866_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e30a18e7_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e30a1e7a_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1e30a18e7_scopeLabel> _1e30980a3_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1e30a2d8d_scopeChecker> _7637_scope) {
	jule::Ptr<_1e30a18e7_scopeLabel> _779_label = _1e30a6897_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1e30a6897_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1e636e4db:;
	}
	_iter_end_1e636e4db:;;
	return _779_label;;
}



inline jule::Bool _1e309846b_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1e309aa89_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e6370e7c:;
			{
				jule::Ptr<_1e304e2bd_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e6370ee3:;
			{
				jule::Ptr<_1e316ee05_Data> _989_d = _9021_Model.cast_ptr<_1e316ee05_Data>(&__jule_any_type24);;
				return _1e309846b_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1e6370e27:;
	};
	return false;;
}



inline jule::Bool _1e30987e0_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1e309aa89_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e6372bb5:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1e309aa89_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e6372c2b:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1e309b9be_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e6372ca3:;
			{
				jule::Ptr<_1e309c8c1_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1e309c8c1_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1e309846b_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e6372d2a:;
			{
				jule::Ptr<_1e309be75_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1e309be75_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1e309846b_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1e309846b_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e637304a:;
			{
				jule::Ptr<_1e309ebc0_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1e309ebc0_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e63758bb:;
					if (it != expr_end) {
						jule::Ptr<_1e30a0808_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e6377a44:;
								if (it != expr_end) {
									jule::Ptr<_1e316ee05_Data> *_12420_expr = it;
									{
										if (_1e309846b_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1e6377a44:;
									++it;
									goto _iter_begin_1e6377a44;
								}
								_iter_end_1e6377a44:;
							};
						}
						_iter_next_1e63758bb:;
						++it;
						goto _iter_begin_1e63758bb;
					}
					_iter_end_1e63758bb:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e63730c2:;
			{
				jule::Ptr<_1e309b6c2_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1e309b6c2_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e6377109:;
					if (it != expr_end) {
						jule::Ptr<_1e309aea7_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1e309846b_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1e6377109:;
						++it;
						goto _iter_begin_1e6377109;
					}
					_iter_end_1e6377109:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e6373149:;
			{
				jule::Ptr<_1e316ee05_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1e316ee05_Data>(&__jule_any_type24);;
				return _1e309846b_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1e63674b2:;
			{
				return false;;
			}
		}
		_match_end_1e6372852:;
	};
}



inline jule::I64 _1e3098b64_countMatchType(jule::Ptr<_1e309ebc0_Match>* _14720_m, jule::Ptr<_1e31a06e9_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1e31a0ab2_Str((*(_14732_t)).ptr());;
	_julec_label_1e637bd78:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e637ba59:;
		if (it != expr_end) {
			jule::Ptr<_1e30a0808_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1e637ba59;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e637cbae:;
					if (it != expr_end) {
						jule::Ptr<_1e316ee05_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1e637ba59;
							};
							if ((_1495_kind == _1e31a0ab2_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1e31a06e9_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1e637cbae:;
						++it;
						goto _iter_begin_1e637cbae;
					}
					_iter_end_1e637cbae:;
				};
			}
			_iter_next_1e637ba59:;
			++it;
			goto _iter_begin_1e637ba59;
		}
		_iter_end_1e637ba59:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1e316ee05_Data>> _1e3098e2d_getDatasFromTupleData(jule::Ptr<_1e316ee05_Data>* _17131_d) {
	if ((_1e31a4b71_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1e638217a:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1e30529db_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1e637eb39:;
				{
					jule::Ptr<_1e31ad3b6_Tuple> _17717_t = _1e31a4b71_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1e316ee05_Data>> _17817_r = jule::Slice<jule::Ptr<_1e316ee05_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e6380a3b:;
						if (it != expr_end) {
							jule::Ptr<_1e31a06e9_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1e316ee05_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1e6380a3b:;
							++it;
							goto _iter_begin_1e6380a3b;
						}
						_iter_end_1e6380a3b:;
					};
					return _17817_r;;
				}
			}
			_match_end_1e637ead4:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e316ee05_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1e30997e1_checkMut(jule::Ptr<_1e30dc955_Sema>* _20618_s, jule::Ptr<_1e316ee05_Data>* _20629_left, jule::Ptr<_1e316ee05_Data> _20646_right, jule::Ptr<_20cb74604_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1e6385139:;
			{
				_1e30e0590_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1e31a207a_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1e63851b1:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1e31a43bd_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1e30e0590_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e638506d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e6384eb3:;
	};
}



inline jule::Bool _1e3099cca_checkAssign(jule::Ptr<_1e30dc955_Sema>* _22521_s, jule::Ptr<_1e316ee05_Data>* _22536_left, jule::Ptr<_1e316ee05_Data> _22553_right, jule::Ptr<_20cb74604_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e305ce36_FnIns> _2265_f = _1e31a4137_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1e30e0590_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1e31707c9_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1e638a628:;
			{
				_1e30e0590_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1e30e0903_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1e638a6a0:;
			{
				_1e30e0590_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1e30997e1_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1e638a727:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e638a55c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e6389bcc:;
	};
}



inline jule::Bool _1e309a094_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1e638a969:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1e3032e1c_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1e638cb47:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e638adba:;
			{
				return false;;
			}
		}
		_match_end_1e638c790:;
	};
}



inline jule::Bool _1e309a35d_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1e638d164:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e638d98e:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1e316ee05_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1e638eb7c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e638eb16:;
						{
							return false;;
						}
					}
					_match_end_1e638eab1:;
				};
			}
		}
		else {
			_case_begin_1e638d73b:;
			{
				return false;;
			}
		}
		_match_end_1e638d6d6:;
	};
}



inline jule::Bool _1e309a627_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e638e4d9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e638ecd1:;
			{
				return false;;
			}
		}
		_match_end_1e638e198:;
	};
}



inline jule::U64 _1e30b4e5a_removeEqFromOp(jule::U64 _213819_op) {
	{
		auto &_match_expr{ _213819_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e63902cb:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1e6390d59:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1e6390dc0:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1e6390ee1:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1e6391057:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1e63910bd:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1e6391145:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1e63911bc:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1e6391288:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1e63912ee:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1e6390a4b:;
			{
				return _213819_op;;
			}
		}
		_match_end_1e63909d5:;
	};
}



inline jule::Ptr<_1e310ed40_Var> _1e30b949d_findVarInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e654c664:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e310ed40_Var> _4813_v = _1e316a461_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1e654c664:;
			++it;
			goto _iter_begin_1e654c664;
		}
		_iter_end_1e654c664:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e30b9921_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e654da50:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1e319e907_TypeAlias> _6013_ta = _1e316a85c_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1e654da50:;
			++it;
			goto _iter_begin_1e654da50;
		}
		_iter_end_1e654da50:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30450c7_Struct> _1e30b9d50_findStructInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e654ee3b:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e30450c7_Struct> _7213_s = _1e316ac58_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1e654ee3b:;
			++it;
			goto _iter_begin_1e654ee3b;
		}
		_iter_end_1e654ee3b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e305a032_Fn> _1e30ba306_findFnInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6551327:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e305a032_Fn> _8413_f = _1e316b154_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1e6551327:;
			++it;
			goto _iter_begin_1e6551327;
		}
		_iter_end_1e6551327:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e306d2cb_Trait> _1e30ba647_findTraitInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6551921:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e306d2cb_Trait> _9613_t = _1e316b495_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1e6551921:;
			++it;
			goto _iter_begin_1e6551921;
		}
		_iter_end_1e6551921:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30709c6_Enum> _1e30ba9bb_findEnumInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65536d1:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e30709c6_Enum> _10813_e = _1e316b7d6_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1e65536d1:;
			++it;
			goto _iter_begin_1e65536d1;
		}
		_iter_end_1e65536d1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e30721d1_TypeEnum> _1e30bad40_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e65548d0:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e30721d1_TypeEnum> _12013_e = _1e316bb27_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1e65548d0:;
			++it;
			goto _iter_begin_1e65548d0;
		}
		_iter_end_1e65548d0:;
	};
	return nullptr;;
}



inline jule::Any _1e30bb37e_defByIdentPackage(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6555d21:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1e316cae5_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1e6555d21:;
			++it;
			goto _iter_begin_1e6555d21;
		}
		_iter_end_1e6555d21:;
	};
	return nullptr;;
}



inline jule::Bool _1e30c23b8_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _2276ede77_HasPrefix((*(_35518_f)), _22772051a_Join(jule::Slice<jule::Str>::make({_2278c349d_PathStdlib,_35526_p})));;
}



inline jule::Bool _1e30da0e5_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e6566815:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e656687b:;
			{
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1e30da0e5_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e65668e2:;
			{
				jule::Ptr<_1e30514bd_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1e30514bd_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1e30da0e5_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e6566969:;
			{
				jule::Ptr<_1e304c6b7_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1e31a3367_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1e31a30d1_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1e30da0e5_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e6566b56:;
			{
				jule::Ptr<_1e304eb4d_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45);;
				return _1e30da0e5_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1e656679e:;
			{
				return false;;
			}
		}
		_match_end_1e656633c:;
	};
}



inline _2277b1ce8_Log _1e30da623_compilerErr(jule::Ptr<_20cb74604_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_2277b1ce8_Log _469_log = _2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_2277b225a_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1e301562a_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1e30da997_impIsLookupable(jule::Ptr<_1e30bbeb7_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1e30be849_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1e30dac50_appendRetVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>* _7123_dest, jule::Ptr<_1e305ce36_FnIns>* _7142_f) {
	if ((_1e305a4a5_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e31a06e9_TypeKind>> _769_types = _1e305e135_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6571e6e:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _7717_ident = *it;
			{
				if ((_1e30117e1_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1e3011aaa_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1e6571e6e;
				};
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1e6571e6e:;
			++it;
			_7710_i++;
			goto _iter_begin_1e6571e6e;
		}
		_iter_end_1e6571e6e:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1e30db03b_appendParamVars(jule::Slice<jule::Ptr<_1e310ed40_Var>>* _10125_dest, jule::Ptr<_1e305ce36_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6576638:;
		if (it != expr_end) {
			jule::Ptr<_1e305be8a_ParamIns> _10617_p = *it;
			{
				if ((_1e30117e1_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1e3011aaa_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1e6576638;
				};
				jule::Ptr<_1e310ed40_Var> _11113_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(), ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()}), });;
				{
					
					if (_1e3058b79_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1e657b1a9:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e31a0243_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1e3058e10_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1e3058e10_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31abcee_Sptr>(_1e31abcee_Sptr{._field_Elem=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1e657ab7b:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31ac7c2_Slc>(_1e31ac7c2_Slc{._field_Elem=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1e657a829:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1e657a708:;
				};
				{ jule::Slice<jule::Ptr<_1e310ed40_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1e6576638:;
			++it;
			goto _iter_begin_1e6576638;
		}
		_iter_end_1e6576638:;
	};
}



inline void _1e30db327_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e319e907_TypeAlias>>* _16134_dest, jule::Ptr<_1e305ce36_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6583920:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1e319dd13_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1e3031679_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1e6583920:;
			++it;
			_17110_i++;
			goto _iter_begin_1e6583920;
		}
		_iter_end_1e6583920:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1e3047d55_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e6585537:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1e319dd13_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1e3031679_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1e319e907_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1e6585537:;
				++it;
				_18514_i++;
				goto _iter_begin_1e6585537;
			}
			_iter_end_1e6585537:;
		};
	};
}



inline jule::Ptr<_1e3169ad1_SymbolTable> _1e30db69b_findFile(jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>* _19918_files, jule::Ptr<_1e301464b_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6588183:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1e6588183:;
			++it;
			goto _iter_begin_1e6588183;
		}
		_iter_end_1e6588183:;
	};
	return nullptr;;
}



inline void _1e30dbb52_pushSuggestion(_2277b1ce8_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_2277b225a_Logf(_20841_fmt, _20854_args);
}



inline void _1e310d129_pushImplemented(jule::Ptr<_1e306d2cb_Trait> _286424_t, jule::Ptr<_1e30450c7_Struct>* _286440_d) {
	_julec_label_1e658b043:;
	{
		
		if (((*(_286424_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1e658b75d:;
			{
				{
					auto expr = &((*(_286424_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e658c51c:;
					if (it != expr_end) {
						jule::Ptr<_1e30450c7_Struct> _286816_s = *it;
						{
							if ((_286816_s == (*(_286440_d)))) {
								goto _match_end_1e658b263;
							};
						}
						_iter_next_1e658c51c:;
						++it;
						goto _iter_begin_1e658c51c;
					}
					_iter_end_1e658c51c:;
				};
				goto _case_begin_1e658b2c9;
			}
		}
		else {
			_case_begin_1e658b2c9:;
			{
				{ jule::Slice<jule::Ptr<_1e30450c7_Struct>> &__jule_push_dest = (*(_286424_t))._field_Implemented; __jule_push_dest.push((*(_286440_d))); };
			}
		}
		_match_end_1e658b263:;
	};
	{
		auto expr = &((*(_286424_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e658ce68:;
		if (it != expr_end) {
			jule::Ptr<_1e31a78bb_TypeSymbol> _287717_i = *it;
			{
				_1e310d129_pushImplemented(_1e31a4654_Trait((*(_287717_i))._field_Kind.ptr()), _286440_d);
			}
			_iter_next_1e658ce68:;
			++it;
			goto _iter_begin_1e658ce68;
		}
		_iter_end_1e658ce68:;
	};
}



inline void _1e310d415_pushImplements(jule::Ptr<_1e30450c7_Struct>* _288224_s, jule::Ptr<_1e306d2cb_Trait> _288240_t) {
	_julec_label_1e658e002:;
	{
		
		if (((*((*(_288224_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1e658e71c:;
			{
				{
					auto expr = &((*((*(_288224_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e65904cb:;
					if (it != expr_end) {
						jule::Ptr<_1e306d2cb_Trait> _288616_b = *it;
						{
							if ((_288616_b == _288240_t)) {
								goto _match_end_1e658e222;
							};
						}
						_iter_next_1e65904cb:;
						++it;
						goto _iter_begin_1e65904cb;
					}
					_iter_end_1e65904cb:;
				};
				goto _case_begin_1e658e288;
			}
		}
		else {
			_case_begin_1e658e288:;
			{
				{ jule::Slice<jule::Ptr<_1e306d2cb_Trait>> &__jule_push_dest = (*((*(_288224_s))))._field_Implements; __jule_push_dest.push(_288240_t); };
			}
		}
		_match_end_1e658e222:;
	};
	{
		auto expr = &((*(_288240_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6590e27:;
		if (it != expr_end) {
			jule::Ptr<_1e31a78bb_TypeSymbol> _289517_i = *it;
			{
				_1e310d415_pushImplements(_288224_s, _1e31a4654_Trait((*(_289517_i))._field_Kind.ptr()));
			}
			_iter_next_1e6590e27:;
			++it;
			goto _iter_begin_1e6590e27;
		}
		_iter_end_1e6590e27:;
	};
}



inline jule::Bool _1e3150831_traitHasReferenceReceiver(jule::Ptr<_1e306d2cb_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e681c79c:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1e681c79c;
				};
				jule::Ptr<_1e305855d_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1e3058e10_IsRef(_349_p.ptr()) && _1e3058b79_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1e681c79c:;
			++it;
			goto _iter_begin_1e681c79c;
		}
		_iter_end_1e681c79c:;
	};
	return false;;
}



inline jule::Bool _1e3150bb6_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1e316ee05_Data>* _4233_d) {
	jule::Str _435_value = _228916ab7_FmtFloat(static_cast<jule::F64>(_228941718_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _228932176_CheckBitFloat(_435_value, static_cast<jule::I64>(_228930b58_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1e315103a_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1e316ee05_Data>* _4730_d) {
	jule::F64 _485_min = _22893738a_Min(_4718_kind);;
	jule::F64 _495_max = _228937654_Max(_4718_kind);;
	{
		
		if (_228943561_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1e6824012:;
			{
				jule::F64 _529_x = _228940e65_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2288dbecc_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_228942cad_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1e6824089:;
			{
				jule::F64 _599_x = _228941718_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_228942a27_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1e6824111:;
			{
				jule::F64 _649_x = _228941718_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1e6823dd0:;
	};
	return false;;
}



inline jule::Bool _1e3151403_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1e316ee05_Data>* _7032_d) {
	jule::F64 _715_max = _228937654_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1e3132725_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_22894042b_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_228943561_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1e6829479:;
			{
				jule::F64 _789_x = _228940e65_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2288dbecc_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_228942cad_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1e68294e0:;
			{
				jule::F64 _889_x = _228941718_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_228942a27_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1e6829556:;
			{
				jule::F64 _939_x = _228941718_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1e6828b3d:;
	};
	return false;;
}



inline jule::Bool _1e3151777_intAssignable(jule::Str _9918_kind, jule::Ptr<_1e316ee05_Data>* _9930_d) {
	{
		
		if (_22893c89b_IsSigInt(_9918_kind)) {
			_case_begin_1e682dbba:;
			{
				return _1e315103a_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_22893cba9_IsUnsigInt(_9918_kind)) {
			_case_begin_1e682dc42:;
			{
				return _1e3151403_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1e682d626:;
			{
				return false;;
			}
		}
		_match_end_1e682ccb8:;
	};
}



inline void _1e315ce37_checkMutRiskOfStructLit(jule::Ptr<_1e30dc955_Sema>* _94433_s, jule::Ptr<_1e304d08b_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e682e528:;
		if (it != expr_end) {
			jule::Ptr<_1e304cbe5_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1e682e528;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1e31a207a_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1e30e0590_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1e682e528:;
			++it;
			goto _iter_begin_1e682e528;
		}
		_iter_end_1e682e528:;
	};
}



inline jule::Ptr<_1e31a06e9_TypeKind> _1e31639cb_lenKind(void) {
	return _1e3283315_primInt;;
}



inline jule::Bool _1e3163d2d_isGoodValueToInfer(jule::Ptr<_1e316ee05_Data>* _140824_d) {
	return (!(_1e31702ac_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1e302388b_Directive> _1e3198769_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _420523_directives, jule::Str _420554_d) {
	{
		auto expr = _420523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e695cd71:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _420617_dr = *it;
			{
				if (((*((*(_420617_dr))._field_Tag))._field_Kind == _420554_d)) {
					return _420617_dr;;
				};
			}
			_iter_next_1e695cd71:;
			++it;
			goto _iter_begin_1e695cd71;
		}
		_iter_end_1e695cd71:;
	};
	return nullptr;;
}



inline jule::Any _1e3198b32_findBuiltinsImport(jule::Str* _421424_ident, jule::Ptr<_1e30bbeb7_ImportInfo> _421436_imp) {
	return _1e3286a66_findPackageBuiltinDef(&((*(_421436_imp))._field_LinkPath), _421424_ident);;
}



inline void _1e3198d63_fitBitsize(jule::Ptr<_1e316ee05_Data>* _422120_d) {
	jule::Ptr<_1e31a82c3_Prim> _42229_prim = _1e31a2d4a_Prim((*((*(_422120_d))))._field_Kind.ptr());;
	jule::I64 _42235_z = _228930b58_BitsizeOf(_1e31a8614_Str(_42229_prim.ptr()));;
	if ((_42235_z == 64LLU)) {
		return;;
	};
	jule::I64 _42289_k = 0LL;;
	{
		
		if (_228942a27_IsI64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1e6961429:;
			{
				_42289_k=static_cast<jule::I64>(_228932709_BitsizeOfInt(static_cast<jule::I64>(_22894042b_ReadI64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_228930e99_IntFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1e3285735_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_228942cad_IsU64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1e69614a1:;
			{
				_42289_k=static_cast<jule::I64>(_2289329c3_BitsizeOfUint(static_cast<jule::U64>(_2289406b2_ReadU64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_228931263_UintFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1e3285735_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_228943561_IsF64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1e6961528:;
			{
				_42289_k=static_cast<jule::I64>(_228932440_BitsizeOfFloat(static_cast<jule::F64>(_228940e65_ReadF64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_22893152c_FloatFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1e3285735_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1e696135d:;
	};
}



inline void _1e3199193_makeStructLitAlloc(jule::Ptr<_1e316ee05_Data>* _425128_d, jule::Ptr<_1e304d08b_StructLitExprModel>* _425143_lit) {
	(*((*(_425128_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31abcee_Sptr>(_1e31abcee_Sptr{._field_Elem=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*((*(_425143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_425128_d))))._field_Model=jule::Any(jule::new_ptr<_1e304d388_AllocStructLitExprModel>(_1e304d388_AllocStructLitExprModel{._field_Lit=(*(_425143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1e310ed40_Var> _1e3199517_buildErrorVar(jule::Ptr<_1e309aa89_Scope>* _426223_s, jule::Ptr<_1e302c4cc_FnCallExpr>* _426239_fc) {
	return jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Scope=(*(_426223_s)), ._field_Token=(*((*(_426239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>()}), });;
}



inline jule::Any _1e319988b_findBuiltinsSema(jule::Str* _427722_ident, jule::Ptr<_1e30dc955_Sema> _427738_s) {
	{
		auto expr = &((*((*(_427738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e696b467:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _427817_imp = *it;
			{
				if (((*(_427817_imp))._field_ImportAll || _1e30be849_existIdent(_427817_imp.ptr(), (*(_427722_ident))))) {
					jule::Any _428017_def = _1e3198b32_findBuiltinsImport(_427722_ident, _427817_imp);;
					if ((_428017_def != nullptr)) {
						return _428017_def;;
					};
				};
			}
			_iter_next_1e696b467:;
			++it;
			goto _iter_begin_1e696b467;
		}
		_iter_end_1e696b467:;
	};
	jule::Str _42889_ppath = _1e3014cbc_Dir((*((*(_427738_s))._field_file))._field_File.ptr());;
	if (_2276ede77_HasPrefix(_42889_ppath, _2278c349d_PathStdlib)) {
		(_42889_ppath).mut_slice(_2278c349d_PathStdlib.len());;
		_42889_ppath=(jule::Str::lit("std", 3) + _227704d5c_Replace(_42889_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1e3286a66_findPackageBuiltinDef(&(_42889_ppath), _427722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1e3199b55_isOkForShifting(jule::Ptr<_1e316ee05_Data>* _430225_d) {
	if (_1e31707c9_IsConst((*(_430225_d)).ptr())) {
		{
			
			if (_228942a27_IsI64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1e696ea42:;
				{
					return (_22894042b_ReadI64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_228942cad_IsU64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1e696eab9:;
				{
					return true;;
				}
			}
			else if (_228943561_IsF64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1e696eb41:;
				{
					return (_228940e65_ReadF64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1e696e965:;
				{
					return false;;
				}
			}
			_match_end_1e696e899:;
		};
	};
	jule::Ptr<_1e31a82c3_Prim> _43155_prim = _1e31a2d4a_Prim((*((*(_430225_d))))._field_Kind.ptr());;
	return ((_43155_prim != nullptr) && _22893ce73_IsInt(_1e31a8614_Str(_43155_prim.ptr())));;
}



inline jule::Bool _1e319a02e_isInstancedStruct(jule::Ptr<_1e3047d55_StructIns> _431922_s) {
	return ((*((*(_431922_s))._field_Decl))._field_Generics.len() == (*(_431922_s))._field_Generics.len());;
}



inline jule::Bool _1e319a3a3_isPtrArithmeticCompatible(jule::Ptr<_1e316ee05_Data>* _432335_l, jule::Ptr<_1e316ee05_Data>* _432350_r) {
	jule::Ptr<_1e31b05b6_Ptr> _43245_ptr = _1e31a3367_Ptr((*((*(_432350_r))))._field_Kind.ptr());;
	if ((_43245_ptr != nullptr)) {
		return _1e31a0e03_Equal((*(_1e31a3367_Ptr((*((*(_432335_l))))._field_Kind.ptr())))._field_Elem, (*(_43245_ptr))._field_Elem);;
	};
	if (_1e31707c9_IsConst((*(_432350_r)).ptr())) {
		return _1e3151777_intAssignable(jule::Str::lit("int", 3), _432350_r);;
	};
	_1e3151c61_typeCompatibilityChecker _43319_tcc = _1e3151c61_typeCompatibilityChecker{._field_dest=_1e3283315_primInt, ._field_src=(*((*(_432350_r))))._field_Kind, };;
	return _1e3153427_check(&_43319_tcc);;
}



inline void _1e319a68e_applyCastKindModel(jule::Ptr<_1e316ee05_Data>* _433828_d, jule::Ptr<_1e31a06e9_TypeKind>* _433843_t) {
	(*((*(_433828_d))))._field_Model=jule::Any(jule::new_ptr<_1e304d91b_CastingExprModel>(_1e304d91b_CastingExprModel{._field_Expr=(*((*(_433828_d))))._field_Model, ._field_Kind=(*(_433843_t)), ._field_ExprKind=(*((*(_433828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1e319a97a_applyCastKind(jule::Ptr<_1e316ee05_Data>* _434623_d, jule::Ptr<_1e31a06e9_TypeKind>* _434638_t) {
	_1e319a68e_applyCastKindModel(_434623_d, _434638_t);
	(*((*(_434623_d))))._field_Kind=(*(_434638_t));
}



inline jule::Ptr<_1e316ee05_Data> _1e319ab89_buildVoidData(void) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3282017_primVoid, });;
}



inline jule::Str _1e319ae53_checkDataForIntegerIndexing(jule::Ptr<_1e316ee05_Data>* _435737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_435737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1e31a2d4a_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1e69786a5:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_22893ce73_IsInt(_1e31a8614_Str(_1e31a2d4a_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1e697871b:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1e31707c9_IsConst((*(_435737_d)).ptr())) {
			_case_begin_1e6978782:;
			{
				if ((_228941718_AsF64((*((*(_435737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1e31a2d4a_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr) || _1e31707c9_IsConst((*(_435737_d)).ptr()) || (_22893088e_RealKindOf(_1e31a8614_Str(_1e31a2d4a_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr())) != _22893088e_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1e6978809:;
			{
				_1e319a97a_applyCastKind(_435737_d, &(_1e3283315_primInt));
			}
		}
		_match_end_1e6978353:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1e319b23e_applyCastModelByEnum(jule::Ptr<_1e316ee05_Data>* _438230_d, jule::Ptr<_1e30709c6_Enum> _438244_e) {
	if ((_438244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _43865_p = _1e31a2d4a_Prim((*((*(_438244_e))._field_Kind))._field_Kind.ptr());;
	if (_1e31ab75a_IsStr(_43865_p.ptr())) {
		return;;
	};
	_1e319a68e_applyCastKindModel(_438230_d, &((*((*(_438244_e))._field_Kind))._field_Kind));
}



inline void _1e319b52a_castConstByType(jule::Str* _439321_t, jule::Ptr<_1e316ee05_Data>* _439334_d) {
	{
		
		if (_22893c89b_IsSigInt((*(_439321_t)))) {
			_case_begin_1e697e28d:;
			{
				{
					auto _match_expr{ _228930b58_BitsizeOf(_22893088e_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e697ede8:;
						{
							_2289419c1_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2289411eb_AsI64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e697ee5e:;
						{
							_2289419c1_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_2289411eb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e697eec5:;
						{
							_2289419c1_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_2289411eb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e698003b:;
						{
							_2289419c1_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_2289411eb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1e697eaa7:;
				};
			}
		}
		else if (_22893cba9_IsUnsigInt((*(_439321_t)))) {
			_case_begin_1e697e315:;
			{
				{
					auto _match_expr{ _228930b58_BitsizeOf(_22893088e_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e6983eb8:;
						{
							_228941c79_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_228941482_AsU64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e698402e:;
						{
							_228941c79_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_228941482_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e6984095:;
						{
							_228941c79_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_228941482_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e698410b:;
						{
							_228941c79_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_228941482_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1e697e843:;
				};
			}
		}
		else if (_22893d2b4_IsFloat((*(_439321_t)))) {
			_case_begin_1e697e38c:;
			{
				{
					auto _match_expr{ _228930b58_BitsizeOf(_22893088e_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e6988033:;
						{
							_228942593_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_228941718_AsF64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e69880aa:;
						{
							_228942593_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_228941718_AsF64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1e69844b3:;
				};
			}
		}
		_match_end_1e697e16c:;
	};
}



inline void _1e319b9c0_updateModelToGenericIns(jule::Any* _442733_m, jule::Ptr<_1e305ce36_FnIns>* _442752_f) {
	{
		auto &_match_expr{ (*(_442733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e6987065:;
			{
				(*(_442733_m))=jule::Any((*(_442752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e69883c9:;
			{
				(*((*(_442733_m)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_442752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1e6988440:;
			{
				(*((*(_442733_m)).cast_ptr<_1e3052315_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_442752_f));
			}
		}
		_match_end_1e6987010:;
	};
}



inline jule::Bool _1e319bd44_pushSubIdentFromExpr(jule::Any _443829_expr, jule::Ptr<_1e3024d76_SubIdentTypeDecl>* _443850_t) {
	{
		auto &_match_expr{ _443829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e698b8b6:;
			{
				jule::Ptr<_1e302a1cd_IdentExpr> _444113_e = _443829_expr.cast_ptr<_1e302a1cd_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_444113_e))._field_Token, ._field_Ident=(*(_444113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1e698b92c:;
			{
				jule::Ptr<_1e302b8b6_SubIdentExpr> _444713_e = _443829_expr.cast_ptr<_1e302b8b6_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1e319bd44_pushSubIdentFromExpr((*((*(_444713_e))._field_Expr))._field_Kind, _443850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1e3024a79_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1e3024a79_IdentTypeDecl>(_1e3024a79_IdentTypeDecl{._field_Token=(*(_444713_e))._field_Ident, ._field_Ident=(*((*(_444713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1e698b850:;
			{
				return false;;
			}
		}
		_match_end_1e698aa08:;
	};
	return true;;
}



inline jule::Str _1e319c10d_constoa(jule::Ptr<_22893da56_Const>* _446113_c) {
	{
		
		if (_228942a27_IsI64((*(_446113_c)).ptr())) {
			_case_begin_1e6990744:;
			{
				return _22892d529_FmtInt(static_cast<jule::I64>(_22894042b_ReadI64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else if (_228942cad_IsU64((*(_446113_c)).ptr())) {
			_case_begin_1e698be9e:;
			{
				return _22892d161_FmtUint(static_cast<jule::U64>(_2289406b2_ReadU64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1e698bac5:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e69906bc:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e319c482_evalEnumStatic(jule::Ptr<_1e30709c6_Enum>* _447224_enm, jule::Ptr<_1e306ee59_EnumItem>* _447241_item) {
	jule::Ptr<_1e316ee05_Data> _44739_d = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>((*(_447224_enm)), 3)}), });;
	if (((*(_447241_item)) != nullptr)) {
		(*(_44739_d))._field_Constant=jule::new_ptr<_22893da56_Const>((*((*((*((*((*(_447241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44739_d))._field_Model=jule::Any((*(_44739_d))._field_Constant, &__jule_any_type19);
		_1e319b23e_applyCastModelByEnum(&(_44739_d), (*(_447224_enm)));
	};
	return _44739_d;;
}



inline jule::Ptr<_1e304d08b_StructLitExprModel> _1e319c74b_isLitBased(jule::Any* _448920_m) {
	{
		auto &_match_expr{ (*(_448920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e6993c97:;
			{
				return (*(_448920_m)).cast_ptr<_1e304d08b_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e6993d0d:;
			{
				return (*((*(_448920_m)).cast_ptr<_1e304d388_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e6993d74:;
			{
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _449613_ssi = (*(_448920_m)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1e319c74b_isLitBased(&((*((*(_449613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e6993dda:;
			{
				jule::Ptr<_1e304d91b_CastingExprModel> _449913_c = (*(_448920_m)).cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92);;
				return _1e319c74b_isLitBased(&((*(_449913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1e6993acc:;
			{
				return nullptr;;
			}
		}
		_match_end_1e69925ae:;
	};
}



inline void _1e319ca37_makeImplicitDeref(jule::Ptr<_1e316ee05_Data>* _450627_d, jule::Ptr<_20cb74604_Token> _450641_baseToken) {
	jule::Ptr<_1e304c6b7_UnaryExprModel> _45079_unary = jule::new_ptr<_1e304c6b7_UnaryExprModel>(_1e304c6b7_UnaryExprModel{._field_Expr=jule::new_ptr<_1e316ee05_Data>((*((*(_450627_d))))), ._field_Op=jule::new_ptr<_20cb74604_Token>((*(_450641_baseToken)))});;
	(*((*(_45079_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45079_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_450627_d))))._field_Model=jule::Any(_45079_unary, &__jule_any_type110);
}



inline void _1e6a73904_updateRefer(jule::Ptr<_1e30610e3_ReferenceStack> _451723_ref, jule::Ptr<_1e305ce36_FnIns>* _451746_old, jule::Ptr<_1e305ce36_FnIns>* _451759_new) {
	{
		auto expr = &((*(_451723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6a75076:;
		if (it != expr_end) {
			jule::I64 _45189_i = it - expr->begin();
			jule::Any _451812_sym = *it;
			{
				if ((__jule_any_type7_compare(_451812_sym, (*(_451746_old))))) {
					(*(_451723_ref))._field_buffer[_45189_i]=jule::Any((*(_451759_new)), &__jule_any_type7);
				};
			}
			_iter_next_1e6a75076:;
			++it;
			_45189_i++;
			goto _iter_begin_1e6a75076;
		}
		_iter_end_1e6a75076:;
	};
}



inline jule::Bool _1e31bae51_kindUsesGenerics(jule::Ptr<_1e31a06e9_TypeKind>* _171026_k, jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>* _171041_generics) {
	{
		auto expr = _171041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6e4ed46:;
		if (it != expr_end) {
			jule::Ptr<_1e3031679_GenericDecl> *_171112_g = it;
			{
				if (static__1e31baa22_exist(&((*((*(_171112_g))))._field_Ident), _171026_k)) {
					return true;;
				};
			}
			_iter_next_1e6e4ed46:;
			++it;
			goto _iter_begin_1e6e4ed46;
		}
		_iter_end_1e6e4ed46:;
	};
	return false;;
}



inline jule::Bool _1e31bb319_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _172022_directives, jule::Str _172053_tag) {
	{
		auto expr = _172022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6e50220:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _172117_dr = *it;
			{
				if (((*((*(_172117_dr))._field_Tag))._field_Kind == _172053_tag)) {
					return true;;
				};
			}
			_iter_next_1e6e50220:;
			++it;
			goto _iter_begin_1e6e50220;
		}
		_iter_end_1e6e50220:;
	};
	return false;;
}



inline jule::Bool _1e31bb5d3_canGetPtr(jule::Ptr<_1e316ee05_Data>* _172919_d) {
	{
		
		if ((!((*((*(_172919_d))))._field_Lvalue)) || _1e31707c9_IsConst((*(_172919_d)).ptr())) {
			_case_begin_1e6e51dd1:;
			{
				return false;;
			}
		}
		else if ((_1e31a4137_Fn((*((*(_172919_d))))._field_Kind.ptr()) != nullptr) || (_1e31a35ed_Enum((*((*(_172919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6e51e58:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e6e511cc:;
			{
				return true;;
			}
		}
		_match_end_1e6e5140d:;
	};
}



inline jule::Bool _1e31bb924_isValidForSptrType(jule::Ptr<_1e31a06e9_TypeKind>* _174128_t) {
	jule::Ptr<_1e3047d55_StructIns> _17429_s = _1e31a43bd_Struct((*(_174128_t)).ptr());;
	if ((((_17429_s != nullptr) && ((*(_17429_s))._field_Decl != nullptr)) && (*((*(_17429_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1e31bbbdd_isValidForRef(jule::Ptr<_1e31a06e9_TypeKind>* _175023_t) {
	return (_1e31a4137_Fn((*(_175023_t)).ptr()) == nullptr);;
}



inline jule::Bool _1e31bbea7_isBuiltinStrConvertable(jule::Ptr<_1e31a06e9_TypeKind>* _175333_t) {
	return ((((!(_1e31a1a5d_Void((*(_175333_t)).ptr()))) && (_1e31a4137_Fn((*(_175333_t)).ptr()) == nullptr)) && (_1e31a4b71_Tup((*(_175333_t)).ptr()) == nullptr)) && (!(_1e31a4e07_comptime((*(_175333_t)).ptr()))));;
}



inline jule::Str _1e31bc271_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>* _175727_tokens) {
	if ((((*(_175727_tokens)).len() == 1LL) && ((*((*(_175727_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17619_n = 0LL;;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6e57997:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_176212_token = it;
			{
				_17619_n+=(*((*(_176212_token))))._field_Kind.len();
				_17619_n+=2LL;
			}
			_iter_next_1e6e57997:;
			++it;
			goto _iter_begin_1e6e57997;
		}
		_iter_end_1e6e57997:;
	};
	_227713453_StrBuilder _17669_s = static__22771371c_New(_17619_n);;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6e55841:;
		if (it != expr_end) {
			jule::I64 _17679_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> *_176712_token = it;
			{
				_22771c02d_WriteStr(&_17669_s, (*((*(_176712_token))))._field_Kind);
				if ((((*(_175727_tokens)).len() - _17679_i) > 1LL)) {
					_22771c02d_WriteStr(&_17669_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1e6e55841:;
			++it;
			_17679_i++;
			goto _iter_begin_1e6e55841;
		}
		_iter_end_1e6e55841:;
	};
	return _22771c825_Str(&_17669_s);;
}



inline jule::Ptr<_1e31a82c3_Prim> _1e31bc617_buildPrimType(jule::Str _177618_kind) {
	return jule::new_ptr<_1e31a82c3_Prim>(_1e31a82c3_Prim{._field_Kind=_177618_kind});;
}



inline void _1e31bcbbc_applyImplicitCast(jule::Ptr<_1e31a06e9_TypeKind>* _180427_dest, jule::Ptr<_1e316ee05_Data>* _180449_d) {
	if (_1e31a17c7_IsNil((*((*(_180449_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e31a82c3_Prim> _18085_destPrim = _1e31a2d4a_Prim((*(_180427_dest)).ptr());;
	jule::Ptr<_1e31a82c3_Prim> _18095_prim = _1e31a2d4a_Prim((*((*(_180449_d))))._field_Kind.ptr());;
	if ((_18085_destPrim != nullptr)) {
		if (_1e31ab9e1_IsAny(_18085_destPrim.ptr())) {
			if (((_18095_prim == nullptr) || (!(_1e31ab9e1_IsAny(_18095_prim.ptr()))))) {
				_1e319a97a_applyCastKind(_180449_d, _180427_dest);
			};
			return;;
		};
		if (((((((!(_1e31a1541_Binded((*((*(_180449_d))))._field_Kind.ptr()))) && (!((*((*((*(_180449_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180449_d))))._field_Lvalue))) && (!(_1e31707c9_IsConst((*(_180449_d)).ptr())))) && (_18095_prim != nullptr)) && _22893d57d_IsNum((*(_18095_prim))._field_Kind))) {
			_1e319a97a_applyCastKind(_180449_d, _180427_dest);
		};
		return;;
	};
	jule::Ptr<_1e306d2cb_Trait> _18285_dt = _1e31a4654_Trait((*(_180427_dest)).ptr());;
	if ((_18285_dt != nullptr)) {
		jule::Ptr<_1e306d2cb_Trait> _18309_bt = _1e31a4654_Trait((*((*(_180449_d))))._field_Kind.ptr());;
		if (((_18309_bt == nullptr) || (_18309_bt != _18285_dt))) {
			_1e319a68e_applyCastKindModel(_180449_d, _180427_dest);
			return;;
		};
	};
	if (((_1e31a3884_TypeEnum((*(_180427_dest)).ptr()) != nullptr) && (_1e31a3884_TypeEnum((*((*(_180449_d))))._field_Kind.ptr()) == nullptr))) {
		_1e319a68e_applyCastKindModel(_180449_d, _180427_dest);
		return;;
	};
}



inline jule::Bool _1e31bce86_validTypeForXof(jule::Ptr<_1e31a06e9_TypeKind>* _184325_t) {
	return ((!(_1e31a1a5d_Void((*(_184325_t)).ptr()))) && (_1e31a4137_Fn((*(_184325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log _1e31c1011_buildSymbols(jule::Ptr<_1e30224c2_Ast>* _1622_ast, jule::Trait<_1e30b90a2_Importer>* _1638_importer, jule::Ptr<_1e30671b5_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	jule::Ptr<_1e30671b5_symbolBuilder> _179_sb = jule::new_ptr<_1e30671b5_symbolBuilder>(_1e30671b5_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1e306c6a4_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log _1e31c1484_analyzePackage(jule::Slice<jule::Ptr<_1e30224c2_Ast>>* _3024_files, jule::Trait<_1e30b90a2_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7071451:;
		if (it != expr_end) {
			jule::Ptr<_1e30224c2_Ast> _3317_f = *it;
			{
				jule::Ptr<_1e3169ad1_SymbolTable> _3413_table;;
				jule::Slice<_2277b1ce8_Log> _3424_errors;;
				({
					__jule_tuple_x_1e3169ad1_SymbolTable__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e31c1011_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1e3169ad1_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1e7071451:;
			++it;
			goto _iter_begin_1e7071451;
		}
		_iter_end_1e7071451:;
	};
	jule::Ptr<_1e30dc955_Sema> _419_sema = jule::new_ptr<_1e30dc955_Sema>(_1e30dc955_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1e30dbd2d_commonSemaMeta>()});;
	_1e310b369_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1e30beddd_Package> _509_pkg = jule::new_ptr<_1e30beddd_Package>(_1e30beddd_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log _1e31c18b3_AnalyzePackage(jule::Slice<jule::Ptr<_1e30224c2_Ast>> _7423_files, jule::Trait<_1e30b90a2_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1e30beddd_Package> _789_package;;
	jule::Slice<_2277b1ce8_Log> _7822_logs;;
	({
		__jule_tuple_x_1e30beddd_Package__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e31c1484_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1e305ce36_FnIns> _1e32815dd_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1e707a13b:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _2820_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3287748_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1e707a2e5:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _3120_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3287b77_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1e707a36c:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _3420_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e32880a6_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1e707a3e4:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _3720_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328868e_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1e707a46b:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _4020_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3288abd_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1e707a6be:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _4320_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3288eec_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1e707a746:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _4620_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3289915_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1e707a7bd:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _4920_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328b0a9_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1e707a845:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _5220_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328b85c_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1e707a922:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _5520_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328c275_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1e707a999:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _5820_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328c6a4_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1e707a26d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e707715a:;
	};
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e32818eb_primTypeAlias(jule::Ptr<_1e31a06e9_TypeKind>* _6523_k) {
	return jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1e310ed40_Var> _1e3285504_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1e7083045:;
			{
				static jule::Ptr<_1e310ed40_Var> _9620_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(_1e31a78bb_TypeSymbol{._field_Kind=_1e3281c09_primNil}), ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Constant=static__22893ecbb_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1e70830ab:;
			{
				static jule::Ptr<_1e310ed40_Var> _11120_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Constant=static__22893e529_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1e7083122:;
			{
				static jule::Ptr<_1e310ed40_Var> _12420_v = jule::new_ptr<_1e310ed40_Var>(_1e310ed40_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1e3285735_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1e3171049_Value>(_1e3171049_Value{._field_Data=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Constant=static__22893e529_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1e7082ece:;
			{
				return nullptr;;
			}
		}
		_match_end_1e7082011:;
	};
}



inline jule::Ptr<_1e319e907_TypeAlias> _1e3285735_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1e7086653:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _14420_t = _1e32818eb_primTypeAlias(&(_1e32822d1_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1e7087eb2:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _14720_t = _1e32818eb_primTypeAlias(&(_1e32825de_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1e7088259:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _15020_t = _1e32818eb_primTypeAlias(&(_1e32828a8_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1e70882c0:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _15320_t = _1e32818eb_primTypeAlias(&(_1e3282b72_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1e7088336:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _15620_t = _1e32818eb_primTypeAlias(&(_1e3282e3b_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1e708839c:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _15920_t = _1e32818eb_primTypeAlias(&(_1e3283315_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1e708849b:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _16220_t = _1e32818eb_primTypeAlias(&(_1e32835ce_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1e7088512:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _16520_t = _1e32818eb_primTypeAlias(&(_1e3283898_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1e7088578:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _16820_t = _1e32818eb_primTypeAlias(&(_1e3283e2b_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1e70885de:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _17120_t = _1e32818eb_primTypeAlias(&(_1e32844ae_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1e7088666:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _17420_t = _1e32818eb_primTypeAlias(&(_1e3284778_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1e70886dd:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _17720_t = _1e32818eb_primTypeAlias(&(_1e3284beb_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1e7088765:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _18020_t = _1e32818eb_primTypeAlias(&(_1e3284eb5_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1e70887dc:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _18320_t = _1e32818eb_primTypeAlias(&(_1e328527e_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1e7088864:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _18620_t = _1e32818eb_primTypeAlias(&(_1e32841e5_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1e70888db:;
			{
				static jule::Ptr<_1e319e907_TypeAlias> _18920_t = _1e32818eb_primTypeAlias(&(_1e3283b62_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1e7087d19:;
			{
				return nullptr;;
			}
		}
		_match_end_1e7086785:;
	};
}



inline jule::Any _1e32859ee_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1e310ed40_Var> _1979_v = _1e3285504_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1e305ce36_FnIns> _2019_f = _1e32815dd_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1e319e907_TypeAlias> _2059_ta = _1e3285735_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1e3285cb8_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1e7092e23:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _21520_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3291532_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1e7092e89:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _21820_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3291961_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e7092807:;
			{
				return nullptr;;
			}
		}
		_match_end_1e70918b1:;
	};
}



inline jule::Any _1e3286082_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1e709482b:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _22820_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328ee37_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1e7094892:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _23120_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3290366_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1e7094908:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _23420_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3290795_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e70947b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1e7093e02:;
	};
}



inline jule::Any _1e3286428_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1e7096c4b:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _24420_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328cc7b_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1e7096cc3:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _24720_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328d144_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Range", 5)) {
			_case_begin_1e7096d4a:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _25020_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328d83c_builtinCallerStdComptimeRange), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1e709717a:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _25320_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328dc6b_builtinCallerStdComptimeLine), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1e70971e1:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _25620_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328e19a_builtinCallerStdComptimeFile), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1e7097257:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _25920_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328e5c9_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1e70972bd:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _26220_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e328ea08_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e7096bd5:;
			{
				return nullptr;;
			}
		}
		_match_end_1e7096322:;
	};
}



inline jule::Any _1e32866e2_findBuiltinDefStdJuleIntegrated(jule::Str* _26937_ident) {
	{
		auto &_match_expr{ (*(_26937_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1e709ba20:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _27220_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3290bc4_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1e709ba86:;
			{
				static jule::Ptr<_1e305ce36_FnIns> _27520_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_Decl=jule::new_ptr<_1e305a032_Fn>(_1e305a032_Fn{._field_Generics=jule::Slice<jule::Ptr<_1e3031679_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3291103_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e709b9a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1e709b0e6:;
	};
}



inline jule::Any _1e3286a66_findPackageBuiltinDef(jule::Str* _28727_linkPath, jule::Str* _28743_ident) {
	{
		auto &_match_expr{ (*(_28727_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1e709dd85:;
			{
				return _1e3286428_findBuiltinDefStdComptime(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1e709ddeb:;
			{
				return _1e3285cb8_findBuiltinDefStdDebug(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1e709de62:;
			{
				return _1e3286082_findBuiltinDefStdMem(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1e709dec8:;
			{
				return _1e32866e2_findBuiltinDefStdJuleIntegrated(_28743_ident);;
			}
		}
		else {
			_case_begin_1e709dbba:;
			{
				return nullptr;;
			}
		}
		_match_end_1e709db65:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3286e95_builtinCallerCommonPlain(jule::Ptr<_1e3171ae9_Eval>* _30234_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _30249_fc, jule::Ptr<_1e316ee05_Data>* _30271_d) {
	jule::Ptr<_1e305ce36_FnIns> _3039_f = _1e31a4137_Fn((*((*(_30271_d))))._field_Kind.ptr());;
	_1e315a4d9_fnCallArgChecker _3059_fcac = _1e315a4d9_fnCallArgChecker{._field_e=(*(_30234_e)), ._field_args=(*((*(_30249_fc))))._field_Args, ._field_errorToken=(*((*(_30249_fc))))._field_Token, ._field_f=_3039_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1e315ca91_check(&_3059_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1e304e2bd_FnCallExprModel> _3169_model = jule::new_ptr<_1e304e2bd_FnCallExprModel>(_1e304e2bd_FnCallExprModel{._field_Token=(*((*(_30249_fc))))._field_Token, ._field_Func=_3039_f, ._field_Expr=(*((*(_30271_d))))._field_Model, ._field_Args=_3059_fcac._field_argModels, });;
	if (((*(_3039_f))._field_Result == nullptr)) {
		(*(_30271_d))=_1e319ab89_buildVoidData();
	} else {
		(*(_30271_d))=jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=(*(_3039_f))._field_Result, });
	};
	(*((*(_30271_d))))._field_Model=jule::Any(_3169_model, &__jule_any_type34);
	return (*(_30271_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3287319_builtinCallerError(jule::Ptr<_1e3171ae9_Eval>* _33528_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _33543_fc) {
	if (((*((*(_33543_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_33528_e)).ptr(), (*((*(_33543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33543_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _3439_expr = _1e318ed59_evalExpr((*(_33528_e)), (*((*(_33543_fc))))._field_Args[0LL]);;
	if ((_3439_expr == nullptr)) {
		return nullptr;;
	};
	if (_1e31702ac_IsNil(_3439_expr.ptr())) {
		_1e3172149_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e316ee05_Data> _3529_d = _1e319ab89_buildVoidData();;
	(*(_3529_d))._field_Model=jule::Any(jule::new_ptr<_1e3055aee_BuiltinErrorCallExprModel>(_1e3055aee_BuiltinErrorCallExprModel{._field_Err=_3439_expr}), &__jule_any_type23);
	return _3529_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3287748_builtinCallerOut(jule::Ptr<_1e3171ae9_Eval>* _35726_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _35741_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_35741_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_35726_e)).ptr(), (*((*(_35741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35741_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _3669_expr = _1e318ed59_evalExpr((*(_35726_e)), (*((*(_35741_fc))))._field_Args[0LL]);;
	if ((_3669_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e31bbea7_isBuiltinStrConvertable(&((*(_3669_expr))._field_Kind))))) {
		_1e3172149_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _3769_d = _1e319ab89_buildVoidData();;
	(*(_3769_d))._field_Model=jule::Any(jule::new_ptr<_1e3052db5_BuiltinOutCallExprModel>(_1e3052db5_BuiltinOutCallExprModel{._field_Expr=(*(_3669_expr))._field_Model, }), &__jule_any_type27);
	return _3769_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3287b77_builtinCallerOutln(jule::Ptr<_1e3171ae9_Eval>* _38128_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _38143_fc, jule::Ptr<_1e316ee05_Data>* _38165_d) {
	(*(_38165_d))=_1e3287748_builtinCallerOut(_38128_e, _38143_fc, _38165_d);
	if (((*(_38165_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38165_d))))._field_Model=jule::Any(jule::new_ptr<_1e305328e_BuiltinOutlnCallExprModel>(_1e305328e_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38165_d))))._field_Model.cast_ptr<_1e3052db5_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38165_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e32880a6_builtinCallerNew(jule::Ptr<_1e3171ae9_Eval>* _39326_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _39341_fc, jule::Ptr<_1e316ee05_Data>* _39363_d) {
	if (((*((*(_39341_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_39326_e)).ptr(), (*((*(_39341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39341_fc))))._field_Args.len() > 2LL)) {
		_1e3172149_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _4029_t = _1e318e045_evalExprKind((*(_39326_e)), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4029_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4029_t))._field_Decl))) {
		_1e3172149_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1e31bb924_isValidForSptrType(&((*(_4029_t))._field_Kind))))) {
		jule::Ptr<_1e3047d55_StructIns> _41313_s = _1e31a43bd_Struct((*(_4029_t))._field_Kind.ptr());;
		if ((((_41313_s != nullptr) && ((*(_41313_s))._field_Decl != nullptr)) && (*((*(_41313_s))._field_Decl))._field_Binded)) {
			_1e3172149_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39363_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e31abcee_Sptr>(_1e31abcee_Sptr{._field_Elem=(*(_4029_t))._field_Kind}), 21)});
	if (((*((*(_39341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1e31a06e9_TypeKind> _42713_old = (*((*(_39326_e))))._field_prefix;;
		(*((*(_39326_e))))._field_prefix=(*(_4029_t))._field_Kind;
		jule::Ptr<_1e316ee05_Data> _43013_init = _1e318ed59_evalExpr((*(_39326_e)), (*((*(_39341_fc))))._field_Args[1LL]);;
		(*((*(_39326_e))))._field_prefix=_42713_old;
		if ((_43013_init != nullptr)) {
			jule::Ptr<_20cb74604_Token> _43517_token = (*((*((*(_39341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1e30eb5ac_checkValidityForInitExpr((*((*(_39326_e))))._field_s, (!((*((*(_39326_e))))._field_immutable)), false, &((*(_4029_t))._field_Kind), &(_43013_init), &(_43517_token));
			_1e30e809d_checkAssignType((*((*(_39326_e))))._field_s, false, &((*(_4029_t))._field_Kind), &(_43013_init), _43517_token);
			(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1e3053668_BuiltinNewCallExprModel>(_1e3053668_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, ._field_Init=(*(_43013_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1e3053668_BuiltinNewCallExprModel>(_1e3053668_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39363_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328868e_builtinCallerPanic(jule::Ptr<_1e3171ae9_Eval>* _45528_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _45543_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_45543_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45543_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_45528_e)).ptr(), (*((*((*(_45543_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _4649_expr = _1e318ed59_evalExpr((*(_45528_e)), (*((*(_45543_fc))))._field_Args[0LL]);;
	if ((_4649_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1e31a2d4a_Prim((*(_4649_expr))._field_Kind.ptr()) == nullptr) || (!(_1e31ab75a_IsStr(_1e31a2d4a_Prim((*(_4649_expr))._field_Kind.ptr()).ptr()))))) {
		_1e3172149_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e316ee05_Data> _4739_d = _1e319ab89_buildVoidData();;
	(*(_4739_d))._field_Model=jule::Any(jule::new_ptr<_1e3053a42_BuiltinPanicCallExprModel>(_1e3053a42_BuiltinPanicCallExprModel{._field_Token=(*((*(_45543_fc))))._field_Token, ._field_Expr=(*(_4649_expr))._field_Model}), &__jule_any_type29);
	return _4739_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3288abd_builtinCallerMake(jule::Ptr<_1e3171ae9_Eval>* _48127_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _48142_fc, jule::Ptr<_1e316ee05_Data>* _48164_d) {
	if (((*((*(_48142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48142_fc))))._field_Args.len() == 1LL)) {
			_1e3172149_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1e3172149_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48142_fc))))._field_Args.len() > 3LL)) {
		_1e3172149_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _4949_t = _1e318e045_evalExprKind((*(_48127_e)), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4949_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4949_t))._field_Decl))) {
		_1e3172149_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1e31a3da1_Slc((*(_4949_t))._field_Kind.ptr()) == nullptr)) {
		_1e3172149_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_4949_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48164_d))))._field_Kind=(*(_4949_t))._field_Kind;
	jule::Ptr<_1e316ee05_Data> _5099_lenExpr = _1e318ed59_evalExpr(_1e30e76eb_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[1LL]);;
	if ((_5099_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1e317ad34_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_5099_lenExpr), (*((*((*(_48142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1e305449e_BuiltinMakeCallExprModel> _5169_model = jule::new_ptr<_1e305449e_BuiltinMakeCallExprModel>(_1e305449e_BuiltinMakeCallExprModel{._field_Kind=(*(_4949_t))._field_Kind, ._field_Len=(*(_5099_lenExpr))._field_Model, });;
	(*((*(_48164_d))))._field_Model=jule::Any(_5169_model, &__jule_any_type114);
	if (((*((*(_48142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1e316ee05_Data> _52213_capExpr = _1e318ed59_evalExpr(_1e30e76eb_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[2LL]);;
		if ((_52213_capExpr == nullptr)) {
			return (*(_48164_d));;
		};
		_1e317ad34_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_52213_capExpr), (*((*((*(_48142_fc))))._field_Args[2LL]))._field_Token);
		(*(_5169_model))._field_Cap=(*(_52213_capExpr))._field_Model;
	};
	return (*(_48164_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3288eec_builtinCallerAppend(jule::Ptr<_1e3171ae9_Eval>* _53229_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _53244_fc, jule::Ptr<_1e316ee05_Data>* _53266_d) {
	if (((*((*(_53244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53244_fc))))._field_Args.len() == 1LL)) {
			_1e3172149_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1e3172149_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _5429_t = _1e318ed59_evalExpr((*(_53229_e)), (*((*(_53244_fc))))._field_Args[0LL]);;
	if ((_5429_t == nullptr)) {
		return nullptr;;
	};
	if ((_1e31a3da1_Slc((*(_5429_t))._field_Kind.ptr()) == nullptr)) {
		_1e3172149_pushErr((*(_53229_e)).ptr(), (*((*((*(_53244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _5529_f = jule::new_ptr<_1e305ce36_FnIns>(_1e305ce36_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e305be8a_ParamIns>>::make({jule::new_ptr<_1e305be8a_ParamIns>(_1e305be8a_ParamIns{._field_Decl=jule::new_ptr<_1e305855d_Param>(_1e305855d_Param{._field_Mutable=true, }), ._field_Kind=(*(_5429_t))._field_Kind}),jule::new_ptr<_1e305be8a_ParamIns>(_1e305be8a_ParamIns{._field_Decl=jule::new_ptr<_1e305855d_Param>(_1e305855d_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1e31a3da1_Slc((*(_5429_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5429_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1e316ee05_Data>(jule::Ptr<_1e3171ae9_Eval>*,jule::Ptr<_1e302c4cc_FnCallExpr>*,jule::Ptr<_1e316ee05_Data>*)>(_1e3286e95_builtinCallerCommonPlain), });;
	(*((*(_53266_d))))._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(_5529_f, 1)});
	(*(_53266_d))=_1e3286e95_builtinCallerCommonPlain(_53229_e, _53244_fc, _53266_d);
	if (((*(_53266_d)) != nullptr)) {
		jule::Ptr<_1e304e2bd_FnCallExprModel> _57613_model = (*((*(_53266_d))))._field_Model.cast_ptr<_1e304e2bd_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53266_d))))._field_Model=jule::Any(jule::new_ptr<_1e3054878_BuiltinAppendCallExprModel>(_1e3054878_BuiltinAppendCallExprModel{._field_Dest=(*(_57613_model))._field_Args[0LL], ._field_Elements=(*(_57613_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53266_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e32894d6_callerCopySlice(jule::Ptr<_1e316ee05_Data>* _58525_dest, jule::Ptr<_1e3171ae9_Eval>* _58543_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _58558_fc, jule::Ptr<_1e316ee05_Data>* _58580_d) {
	if ((!((*((*(_58525_dest))))._field_Mutable))) {
		_1e3172149_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e316ee05_Data> _5909_src = _1e318ed59_evalExpr((*(_58543_e)), (*((*(_58558_fc))))._field_Args[1LL]);;
	if ((_5909_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e31ac7c2_Slc> _5949_slc = _1e31a3da1_Slc((*(_5909_src))._field_Kind.ptr());;
	if ((_5949_slc != nullptr)) {
		if (((!((*(_5909_src))._field_Mutable)) && _1e31a207a_Mutable((*(_5949_slc))._field_Elem.ptr()))) {
			_1e3172149_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1e31a0e03_Equal((*((*(_58525_dest))))._field_Kind, (*(_5909_src))._field_Kind)))) {
			_1e3172149_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1e31a82c3_Prim> _6049_destPrim = _1e31a2d4a_Prim((*(_1e31a3da1_Slc((*((*(_58525_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1e31a82c3_Prim> _6059_prim = _1e31a2d4a_Prim((*(_5909_src))._field_Kind.ptr());;
		if (((((_6049_destPrim == nullptr) || (_6059_prim == nullptr)) || (!(_1e31ab75a_IsStr(_6059_prim.ptr())))) || (!(_1e31a9bba_IsU8(_6049_destPrim.ptr()))))) {
			_1e3172149_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58580_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_58580_d))))._field_Model=jule::Any(jule::new_ptr<_1e3055725_BuiltinCopyCallExprModel>(_1e3055725_BuiltinCopyCallExprModel{._field_Dest=(*(_58525_dest)), ._field_Src=_5909_src}), &__jule_any_type31);
	return (*(_58580_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3289915_builtinCallerCopy(jule::Ptr<_1e3171ae9_Eval>* _61927_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _61942_fc, jule::Ptr<_1e316ee05_Data>* _61964_d) {
	if (((*((*(_61942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61942_fc))))._field_Args.len() == 1LL)) {
			_1e3172149_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1e3172149_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61942_fc))))._field_Args.len() > 2LL)) {
		_1e3172149_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _6329_dest = _1e318ed59_evalExpr((*(_61927_e)), (*((*(_61942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6329_dest == nullptr)) {
			_case_begin_1e70eeda3:;
			{
				return nullptr;;
			}
		}
		else if ((_1e31a3da1_Slc((*(_6329_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e7100a74:;
			{
				return _1e32894d6_callerCopySlice(&(_6329_dest), _61927_e, _61942_fc, _61964_d);;
			}
		}
		else {
			_case_begin_1e70eea1d:;
			{
				_1e3172149_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e70ee9b8:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e3289c89_callerLenSlice(jule::Ptr<_1e316ee05_Data>* _64424_expr, jule::Ptr<_1e316ee05_Data>* _64442_d) {
	(*((*(_64442_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_64442_d))))._field_Model=jule::Any(jule::new_ptr<_1e3054b75_BuiltinLenCallExprModel>(_1e3054b75_BuiltinLenCallExprModel{._field_Expr=(*(_64424_expr))}), &__jule_any_type115);
	return (*(_64442_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328a10d_callerLenMap(jule::Ptr<_1e316ee05_Data>* _65222_expr, jule::Ptr<_1e316ee05_Data>* _65240_d) {
	(*((*(_65240_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_65240_d))))._field_Model=jule::Any(jule::new_ptr<_1e3054b75_BuiltinLenCallExprModel>(_1e3054b75_BuiltinLenCallExprModel{._field_Expr=(*(_65222_expr))}), &__jule_any_type115);
	return (*(_65240_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328a482_callerLenArr(jule::Ptr<_1e316ee05_Data>* _66022_expr, jule::Ptr<_1e316ee05_Data>* _66040_d) {
	(*((*(_66040_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_66040_d))))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1e31a3b1a_Arr((*((*(_66022_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66040_d))))._field_Model=jule::Any((*((*(_66040_d))))._field_Constant, &__jule_any_type19);
	return (*(_66040_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328a806_callerLenStr(jule::Ptr<_1e316ee05_Data>* _66722_expr, jule::Ptr<_1e316ee05_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1e31639cb_lenKind();
	if (_1e31707c9_IsConst((*(_66722_expr)).ptr())) {
		(*((*(_66740_d))))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_228940bce_ReadStr((*((*(_66722_expr))))._field_Constant.ptr()).len())));
		(*((*(_66740_d))))._field_Model=jule::Any((*((*(_66740_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1e3054b75_BuiltinLenCallExprModel>(_1e3054b75_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	};
	return (*(_66740_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328ab7a_callerLenComptime(jule::Ptr<_1e316ee05_Data>* _68027_d, jule::I64 _68037_n) {
	(*((*(_68027_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_68027_d))))._field_Constant=static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68037_n)));
	(*((*(_68027_d))))._field_Model=jule::Any((*((*(_68027_d))))._field_Constant, &__jule_any_type19);
	return (*(_68027_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328b0a9_builtinCallerLen(jule::Ptr<_1e3171ae9_Eval>* _68726_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _68741_fc, jule::Ptr<_1e316ee05_Data>* _68763_d) {
	if (((*((*(_68741_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_68726_e)).ptr(), (*((*(_68741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68741_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _6959_dest = _1e318ea18_evalExpr1((*(_68726_e)), (*((*(_68741_fc))))._field_Args[0LL]);;
	{
		
		if ((_6959_dest == nullptr)) {
			_case_begin_1e710bd6b:;
			{
				return nullptr;;
			}
		}
		else if ((_1e31a3da1_Slc((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710ca3c:;
			{
				return _1e3289c89_callerLenSlice(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1e31a3b1a_Arr((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710caa3:;
			{
				return _1e328a482_callerLenArr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1e31a48da_Map((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710cb19:;
			{
				return _1e328a10d_callerLenMap(&(_6959_dest), _68763_d);;
			}
		}
		else if (((_1e31a2d4a_Prim((*(_6959_dest))._field_Kind.ptr()) != nullptr) && _1e31ab75a_IsStr(_1e31a2d4a_Prim((*(_6959_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1e710ba4c:;
			{
				return _1e328a806_callerLenStr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1e31a518d_comptimeStructFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710bab3:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a518d_comptimeStructFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1e31a56aa_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710bb29:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a56aa_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1e31a647a_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710bb90:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a647a_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1e31a5bc7_comptimeParams((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710cbd5:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a5bc7_comptimeParams((*(_6959_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1e31a6997_comptimeStatics((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710cc4b:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a6997_comptimeStatics((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1e31a74d1_comptimeFiles((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e710ccb2:;
			{
				return _1e328ab7a_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1e31a74d1_comptimeFiles((*(_6959_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1e710b9d6:;
			{
				_1e3172149_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e710b981:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e328b42d_callerCapSlice(jule::Ptr<_1e316ee05_Data>* _72524_expr, jule::Ptr<_1e316ee05_Data>* _72542_d) {
	(*((*(_72542_d))))._field_Kind=_1e31639cb_lenKind();
	(*((*(_72542_d))))._field_Model=jule::Any(jule::new_ptr<_1e3054e72_BuiltinCapCallExprModel>(_1e3054e72_BuiltinCapCallExprModel{._field_Expr=(*(_72524_expr))}), &__jule_any_type116);
	return (*(_72542_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328b85c_builtinCallerCap(jule::Ptr<_1e3171ae9_Eval>* _73326_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _73341_fc, jule::Ptr<_1e316ee05_Data>* _73363_d) {
	if (((*((*(_73341_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_73326_e)).ptr(), (*((*(_73341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73341_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _7419_dest = _1e318ed59_evalExpr((*(_73326_e)), (*((*(_73341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7419_dest == nullptr)) {
			_case_begin_1e711b9d5:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7419_dest))._field_Decl) {
			_case_begin_1e711c6a6:;
			{
				_1e3172149_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e31a3da1_Slc((*(_7419_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e711c71c:;
			{
				return _1e328b42d_callerCapSlice(&(_7419_dest), _73363_d);;
			}
		}
		else {
			_case_begin_1e711b650:;
			{
				_1e3172149_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e711b5ea:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e328bd46_callerDeleteMap(jule::Ptr<_1e3171ae9_Eval>* _75625_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _75640_fc, jule::Ptr<_1e316ee05_Data>* _75662_expr, jule::Ptr<_1e316ee05_Data>* _75680_d) {
	if ((!((*((*(_75662_expr))))._field_Mutable))) {
		_1e3172149_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75680_d))=_1e319ab89_buildVoidData();
	jule::Ptr<_1e305534b_BuiltinDeleteCallExprModel> _7619_model = jule::new_ptr<_1e305534b_BuiltinDeleteCallExprModel>(_1e305534b_BuiltinDeleteCallExprModel{._field_Dest=(*(_75662_expr)), });;
	if (((*((*(_75640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1e316ee05_Data> _76513_key = _1e318ed59_evalExpr((*(_75625_e)), (*((*(_75640_fc))))._field_Args[1LL]);;
		{
			
			if ((_76513_key == nullptr)) {
				_case_begin_1e71230e6:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76513_key))._field_Decl) {
				_case_begin_1e7121d5e:;
				{
					_1e3172149_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1e7121ce8:;
				{
					;
					jule::Ptr<_1e31a06e9_TypeKind> _77417_keyType = (*(_1e31a48da_Map((*((*(_75662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1e30e809d_checkAssignType((*((*(_75625_e))))._field_s, false, &(_77417_keyType), &(_76513_key), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1e7121c82:;
		};
		(*(_7619_model))._field_Key=_76513_key;
	};
	(*((*(_75680_d))))._field_Model=jule::Any(_7619_model, &__jule_any_type32);
	return (*(_75680_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328c275_builtinCallerDelete(jule::Ptr<_1e3171ae9_Eval>* _78529_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _78544_fc, jule::Ptr<_1e316ee05_Data>* _78566_d) {
	if (((*((*(_78544_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_78529_e)).ptr(), (*((*(_78544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78544_fc))))._field_Args.len() > 2LL)) {
		_1e3172149_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _7939_dest = _1e318ed59_evalExpr((*(_78529_e)), (*((*(_78544_fc))))._field_Args[0LL]);;
	{
		
		if ((_7939_dest == nullptr)) {
			_case_begin_1e7128daa:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7939_dest))._field_Decl) {
			_case_begin_1e7129a7b:;
			{
				_1e3172149_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e31a48da_Map((*(_7939_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e7129ae2:;
			{
				return _1e328bd46_callerDeleteMap(_78529_e, _78544_fc, &(_7939_dest), _78566_d);;
			}
		}
		else {
			_case_begin_1e7128a25:;
			{
				_1e3172149_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e71289c0:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e328c6a4_builtinCallerAssert(jule::Ptr<_1e3171ae9_Eval>* _80829_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _80844_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_80844_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80844_fc))))._field_Args.len() > 2LL)) {
		_1e3172149_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _8179_expr = _1e318ed59_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[0LL]);;
	if ((_8179_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1e31a2d4a_Prim((*(_8179_expr))._field_Kind.ptr()) == nullptr) || (!(_1e31ab4c4_IsBool(_1e31a2d4a_Prim((*(_8179_expr))._field_Kind.ptr()).ptr()))))) {
		_1e3172149_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e3053ee8_BuiltinAssertCallExprModel> _8269_model = jule::new_ptr<_1e3053ee8_BuiltinAssertCallExprModel>(_1e3053ee8_BuiltinAssertCallExprModel{._field_Token=(*((*(_80844_fc))))._field_Token, ._field_Expr=(*(_8179_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80844_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1e316ee05_Data> _83413_log = _1e318ed59_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[1LL]);;
		if ((_83413_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1e31707c9_IsConst(_83413_log.ptr()))) || (_1e31a2d4a_Prim((*(_83413_log))._field_Kind.ptr()) == nullptr)) || (!(_1e31ab75a_IsStr(_1e31a2d4a_Prim((*(_83413_log))._field_Kind.ptr()).ptr()))))) {
			_1e3172149_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_83413_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8269_model))._field_Log=_228940bce_ReadStr((*(_83413_log))._field_Constant.ptr());
	};
	jule::Ptr<_1e316ee05_Data> _8479_d = _1e319ab89_buildVoidData();;
	(*(_8479_d))._field_Model=jule::Any(_8269_model, &__jule_any_type30);
	return _8479_d;;
}



inline jule::Ptr<_1e316ee05_Data> _1e328cc7b_builtinCallerStdComptimeTypeOf(jule::Ptr<_1e3171ae9_Eval>* _85240_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _85255_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_85255_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*(_85255_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85255_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _8619_d = _1e318e045_evalExprKind((*(_85240_e)), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8619_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e305ce36_FnIns> _8655_f = _1e31a4137_Fn((*(_8619_d))._field_Kind.ptr());;
	if ((_8655_f != nullptr)) {
		if (_1e305e3bb_IsBuiltin(_8655_f.ptr())) {
			_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8655_f))._field_Generics.len() != (*((*(_8655_f))._field_Decl))._field_Generics.len())) {
			_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1e3047d55_StructIns> _8765_s = _1e31a43bd_Struct((*(_8619_d))._field_Kind.ptr());;
	if (((_8765_s != nullptr) && ((*(_8765_s))._field_Generics.len() != (*((*(_8765_s))._field_Decl))._field_Generics.len()))) {
		_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1e31a4e07_comptime((*(_8619_d))._field_Kind.ptr())) {
		_1e3172149_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_8619_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e30917c7_buildComptimeTypeInfoData(&((*((*(_85240_e))))._field_s), &((*(_8619_d))._field_Kind));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328d144_builtinCallerStdComptimeValueOf(jule::Ptr<_1e3171ae9_Eval>* _88841_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _88856_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_88856_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_88841_e)).ptr(), (*((*(_88856_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88856_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _8969_d = _1e318ed59_evalExpr((*(_88841_e)), (*((*(_88856_fc))))._field_Args[0LL]);;
	if ((_8969_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e3163d2d_isGoodValueToInfer(&(_8969_d))))) {
		_1e3172149_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_8969_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1e3091a08_buildComptimeValue(&(_8969_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind> _90818_kind) {
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e3074579_comptimeRange>(_1e3074579_comptimeRange{._field_kind=_90818_kind}), 5)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e328d83c_builtinCallerStdComptimeRange(jule::Ptr<_1e3171ae9_Eval>* _91839_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _91854_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_91854_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91854_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_91839_e)).ptr(), (*((*((*(_91854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _9279_d = _1e318e045_evalExprKind((*(_91839_e)), (*((*((*(_91854_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9279_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1e31a518d_comptimeStructFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714ba7b:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a518d_comptimeStructFields((*(_9279_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1e31a56aa_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714aa36:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a56aa_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1e31a647a_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714aa9c:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a647a_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1e31a5bc7_comptimeParams((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714ab13:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a5bc7_comptimeParams((*(_9279_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1e31a6997_comptimeStatics((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714a6c3:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a6997_comptimeStatics((*(_9279_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1e31a74d1_comptimeFiles((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e714a739:;
			{
				return _1e328d40d_rangeData(jule::Trait<_1e307438c_comptimeRangeKind>(_1e31a74d1_comptimeFiles((*(_9279_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1e714a65c:;
			{
				_1e3172149_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_9279_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e714a3a4:;
	};
}



inline jule::Ptr<_1e316ee05_Data> _1e328dc6b_builtinCallerStdComptimeLine(jule::Ptr<_1e3171ae9_Eval>* _95038_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _95053_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_95053_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_95038_e)).ptr(), (*((*((*(_95053_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_22893da56_Const> _9549_constant = static__22893de96_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_95053_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3283315_primInt, ._field_Model=jule::Any(_9549_constant, &__jule_any_type19), ._field_Constant=_9549_constant});;
}



inline jule::Ptr<_1e316ee05_Data> _1e328e19a_builtinCallerStdComptimeFile(jule::Ptr<_1e3171ae9_Eval>* _96238_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _96253_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_96253_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_96238_e)).ptr(), (*((*((*(_96253_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e308e4a6_comptimeFile>(_1e308e4a6_comptimeFile{._field_file=(*((*((*(_96238_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e328e5c9_builtinCallerStdComptimeFiles(jule::Ptr<_1e3171ae9_Eval>* _97539_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _97554_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_97554_fc))))._field_Args.len() > 0LL)) {
		_1e3172149_pushErr((*(_97539_e)).ptr(), (*((*((*(_97554_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=jule::new_ptr<_1e31a06e9_TypeKind>(_1e31a06e9_TypeKind{._field_Kind=jule::Trait<_1e31a0243_Kind>(jule::new_ptr<_1e308cdab_comptimeFiles>(_1e308cdab_comptimeFiles{._field_files=(*((*((*(_97539_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e328ea08_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1e3171ae9_Eval>* _98843_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _98858_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_98858_fc))))._field_Args.len() > 2LL)) {
		_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 0LL)) {
		_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 1LL)) {
		_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e715dd35:;
			{
				goto _match_end_1e715c839;
			}
		}
		else {
			_case_begin_1e715c8a0:;
			{
				_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e31724ac_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e715c839:;
	};
	jule::Ptr<_20cb74604_Token> _10099_ident = (*((*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1e302a1cd_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98843_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e71600de:;
			{
				goto _match_end_1e715ec15;
			}
		}
		else {
			_case_begin_1e715ec6a:;
			{
				_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1e715ec15:;
	};
	jule::Ptr<_1e30a2d8d_scopeChecker> _10189_sc = (*((*(_98843_e))))._field_lookup.cast_ptr<_1e30a2d8d_scopeChecker>(0);;
	jule::Ptr<_1e319e907_TypeAlias> _10199_alias = jule::new_ptr<_1e319e907_TypeAlias>(_1e319e907_TypeAlias{._field_Scope=(*(_10189_sc))._field_tree, ._field_Public=_1e30d9a51_IsPub((*(_10099_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10099_ident, ._field_Ident=(*(_10099_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1e31a78bb_TypeSymbol>(), });;
	jule::Ptr<_1e316ee05_Data> _10299_t = _1e318e386_eval1((*(_98843_e)), (*((*(_98858_fc))))._field_Args[1LL]);;
	if ((_10299_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10299_t))._field_Decl) {
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_10299_t))._field_Kind;
	} else {
		jule::Ptr<_1e308404a_comptimeTypeInfo> _103613_cti = _1e31a6711_comptimeTypeInfo((*(_10299_t))._field_Kind.ptr());;
		if ((_103613_cti == nullptr)) {
			_1e3172149_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1e31724ac_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_103613_cti))._field_base;
	};
	_1e30a7645_checkTypeAlias(_10189_sc, &(_10199_alias));
	return _1e319ab89_buildVoidData();;
}



inline jule::Ptr<_1e316ee05_Data> _1e328ee37_builtinCallerStdMemSizeOf(jule::Ptr<_1e3171ae9_Eval>* _104835_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _104850_fc, jule::Ptr<_1e316ee05_Data>* ) {
	jule::Ptr<_1e316ee05_Data> _10499_result = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3282e3b_primUint, });;
	if (((*((*(_104850_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_104835_e)).ptr(), (*((*(_104850_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10499_result;;
	};
	if (((*((*(_104850_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _10619_d = _1e318e045_evalExprKind((*(_104835_e)), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10619_d == nullptr)) {
		return _10499_result;;
	};
	if ((!(_1e31bce86_validTypeForXof(&((*(_10619_d))._field_Kind))))) {
		_1e3172149_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_10619_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10499_result))._field_Model=jule::Any(jule::new_ptr<_1e30516aa_SizeofExprModel>(_1e30516aa_SizeofExprModel{._field_Expr=(*(_10619_d))._field_Model}), &__jule_any_type117);
	return _10499_result;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3290366_builtinCallerStdMemAlignOf(jule::Ptr<_1e3171ae9_Eval>* _107336_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _107351_fc, jule::Ptr<_1e316ee05_Data>* ) {
	jule::Ptr<_1e316ee05_Data> _10749_result = jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e3282e3b_primUint, });;
	if (((*((*(_107351_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_107336_e)).ptr(), (*((*(_107351_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10749_result;;
	};
	if (((*((*(_107351_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _10869_d = _1e318e045_evalExprKind((*(_107336_e)), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10869_d == nullptr)) {
		return _10749_result;;
	};
	if ((!(_1e31bce86_validTypeForXof(&((*(_10869_d))._field_Kind))))) {
		_1e3172149_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1e31a0ab2_Str((*(_10869_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10749_result))._field_Model=jule::Any(jule::new_ptr<_1e305632a_AlignofExprModel>(_1e305632a_AlignofExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type118);
	return _10749_result;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3290795_builtinCallerStdMemFree(jule::Ptr<_1e3171ae9_Eval>* _109833_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _109848_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_109848_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_109833_e)).ptr(), (*((*(_109848_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109848_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _11079_d = _1e318ed59_evalExpr((*(_109833_e)), (*((*(_109848_fc))))._field_Args[0LL]);;
	if ((_11079_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e31a282d_PerformsRC((*(_11079_d))._field_Kind.ptr())))) {
		_1e3172149_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e316ee05_Data> _11169_result = _1e319ab89_buildVoidData();;
	(*(_11169_result))._field_Model=jule::Any(jule::new_ptr<_1e30570ea_FreeExprModel>(_1e30570ea_FreeExprModel{._field_Expr=(*(_11079_d))._field_Model}), &__jule_any_type33);
	return _11169_result;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3290bc4_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e3171ae9_Eval>* _112145_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _112160_fc, jule::Ptr<_1e316ee05_Data>* ) {
	if (((*((*(_112160_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_112145_e)).ptr(), (*((*(_112160_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_112160_fc))))._field_Args.len() > 1LL)) {
		_1e3172149_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1e316ee05_Data> _11309_d = _1e318ed59_evalExpr((*(_112145_e)), (*((*(_112160_fc))))._field_Args[0LL]);;
	if ((_11309_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e31bbea7_isBuiltinStrConvertable(&((*(_11309_d))._field_Kind))))) {
		_1e3172149_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e316ee05_Data>(_1e316ee05_Data{._field_Kind=_1e32825de_primStr, ._field_Model=jule::Any(jule::new_ptr<_1e3056924_IntegratedToStrExprModel>(_1e3056924_IntegratedToStrExprModel{._field_Expr=(*(_11309_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1e316ee05_Data> _1e3291103_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e3171ae9_Eval>* _114844_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _114859_fc, jule::Ptr<_1e316ee05_Data>* _114881_d) {
	if ((!(_1e3172b3e_isUnsafe((*(_114844_e)).ptr())))) {
		_1e3172149_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_114859_fc))))._field_Args.len() < 1LL)) {
		_1e3172149_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _11589_argd = _1e318ed59_evalExpr((*(_114844_e)), (*((*(_114859_fc))))._field_Args[0LL]);;
	if ((_11589_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1e31a2d4a_Prim((*(_11589_argd))._field_Kind.ptr()) == nullptr) || (!(_1e31ab75a_IsStr(_1e31a2d4a_Prim((*(_11589_argd))._field_Kind.ptr()).ptr()))))) {
		_1e3172149_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1e31a0ab2_Str((*(_11589_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1e31707c9_IsConst(_11589_argd.ptr()))) || (!(_2289432ca_IsStr((*(_11589_argd))._field_Constant.ptr()))))) {
		_1e3172149_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e316ee05_Data> _11739_r = _1e319ab89_buildVoidData();;
	jule::Ptr<_1e305ce36_FnIns> _11759_f = _1e31a4137_Fn((*((*(_114881_d))))._field_Kind.ptr());;
	if (((*(_11759_f))._field_Generics.len() > 0LL)) {
		(*(_11739_r))._field_Kind=(*((*(_11759_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1e3056ced_BackendEmitExprModel> _11809_model = jule::new_ptr<_1e3056ced_BackendEmitExprModel>(_1e3056ced_BackendEmitExprModel{._field_Code=_228940bce_ReadStr((*(_11589_argd))._field_Constant.ptr()), });;
	if (((*((*(_114859_fc))))._field_Args.len() > 1LL)) {
		(*(_11809_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_114859_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_114859_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1e7187666:;
			if (it != expr_end) {
				jule::Ptr<_1e30287a3_Expr> _118621_arg = *it;
				{
					_11589_argd=_1e318e386_eval1((*(_114844_e)), _118621_arg);
					if ((_11589_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11809_model))._field_Exprs; __jule_push_dest.push((*(_11589_argd))._field_Model); };
				}
				_iter_next_1e7187666:;
				++it;
				goto _iter_begin_1e7187666;
			}
			_iter_end_1e7187666:;
		};
	};
	(*(_11739_r))._field_Model=jule::Any(_11809_model, &__jule_any_type25);
	return _11739_r;;
}



inline jule::Ptr<_1e316ee05_Data> _1e3291532_builtinCallerStdDebugOut(jule::Ptr<_1e3171ae9_Eval>* _119934_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _119949_fc, jule::Ptr<_1e316ee05_Data>* _119971_d) {
	(*(_119971_d))=_1e3287748_builtinCallerOut(_119934_e, _119949_fc, _119971_d);
	if (((*(_119971_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119971_d))))._field_Model.cast_ptr<_1e3052db5_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_119971_d));;
}



inline jule::Ptr<_1e316ee05_Data> _1e3291961_builtinCallerStdDebugOutln(jule::Ptr<_1e3171ae9_Eval>* _120836_e, jule::Ptr<_1e302c4cc_FnCallExpr>* _120851_fc, jule::Ptr<_1e316ee05_Data>* _120873_d) {
	(*(_120873_d))=_1e3287b77_builtinCallerOutln(_120836_e, _120851_fc, _120873_d);
	if (((*(_120873_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_120873_d))))._field_Model.cast_ptr<_1e305328e_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_120873_d));;
}



inline jule::Ptr<_1e3b1be01_FileInfo> _1e3b63398_ParseFile(jule::Ptr<_1e301464b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e3b1be01_FileInfo> _279_finf = jule::new_ptr<_1e3b1be01_FileInfo>();;
	({
		__jule_tuple_x_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log __jule_assign_result = _1e3b63970_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log _1e3b63970_parseFileset(jule::Ptr<_1e301464b_File> _5521_f) {
	__jule_tuple_x_1e30224c2_Ast__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	jule::Ptr<_1e3b83e13_parser> _569_p = jule::new_ptr<_1e3b83e13_parser>();;
	_1e3b94d25_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1e3034490_ScopeTree> _1e3b643dd_newScope(void) {
	return jule::new_ptr<_1e3034490_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1e3b64773_isSt(jule::Ptr<_20cb74604_Token> _499_current, jule::Ptr<_20cb74604_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e3b64ae7_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20cb74604_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_20cb74604_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1e300e8cc_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e3b64eb0_nextStPos(jule::Slice<jule::Ptr<_20cb74604_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_20cb74604_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e7214957:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1e3b64ae7_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3b64773_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1e72145d3;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1e7213758;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e72149ce:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3b64773_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1e72145d3;
							};
						};
						goto _iter_next_1e7213758;
					}
				}
				_match_end_1e72148e1:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1e7213758;
			};
			if ((_709_i > _6833_start)) {
				if (_1e3b64ae7_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1e7213758;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3b64773_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3b64773_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1e7213758;
			};
			_julec_label_1e72145d3:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1e7213758:;
	}
	_iter_end_1e7213758:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_20cb74604_Token__jule_tuple_bool _1e3b65334_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_20cb74604_Token>> _13028_tokens) {
	__jule_tuple_sx_20cb74604_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e3b64eb0_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_20cb74604_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_20cb74604_Token__jule_tuple_bool __jule_assign_result = _1e3b65334_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e3b65664_stmt>> _1e3b65a1b_splitStmts(jule::Slice<jule::Ptr<_20cb74604_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1e3b65664_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1e3b65664_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_20cb74604_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_20cb74604_Token__jule_tuple_bool __jule_assign_result = _1e3b65334_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1e3b65664_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1e3b65664_stmt>(_1e3b65664_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1e721dbd6:;
	}
	_iter_end_1e721dbd6:;;
	return _1539_stmts;;
}



inline jule::Bool _1e3b7dced_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1e3b7e10b_isTypeRange(jule::Slice<jule::Ptr<_20cb74604_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72c9c70:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_20cb74604_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e72cc987:;
						if (it != expr_end) {
							jule::Ptr<_20cb74604_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1e72cd757:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1e72cc987;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1e72cd7ce:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1e72cc987;
										}
									}
									_match_end_1e72cd68b:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1e3b7dced_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1e72cc987:;
							++it;
							goto _iter_begin_1e72cc987;
						}
						_iter_end_1e72cc987:;
					};
					return true;;
				};
				if ((!(_1e3b7dced_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1e72c9c70:;
			++it;
			_8949_i++;
			goto _iter_begin_1e72c9c70;
		}
		_iter_end_1e72c9c70:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b7e3c5_getBlockExpr(jule::Slice<jule::Ptr<_20cb74604_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72d0209:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1e72d111c:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1e72d1194:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1e72d102e;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e72d121b:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e72d1293:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1e72d102e:;
				};
			}
			_iter_next_1e72d0209:;
			++it;
			_9289_i++;
			goto _iter_begin_1e72d0209;
		}
		_iter_end_1e72d0209:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token _1e3b7e78d_splitDelim(jule::Slice<jule::Ptr<_20cb74604_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72d4351:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e72d5143:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1e72d4351;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e72d51ba:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1e72d5242:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_20cb74604_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_20cb74604_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1e72d5066:;
				};
			}
			_iter_next_1e72d4351:;
			++it;
			_9599_i++;
			goto _iter_begin_1e72d4351;
		}
		_iter_end_1e72d4351:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1e3b7ea57_findLowestPrecOp(jule::Slice<jule::Ptr<_20cb74604_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e72d7b6d:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1e72d89b5:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1e72d8a3c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1e72d8a3c:;
						{
							(_9919_braceN)++;
							goto _iter_next_1e72d7b6d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1e72d8ab4:;
						{
							(_9919_braceN)--;
							goto _iter_next_1e72d7b6d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1e72d8b3b:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1e72d7b6d;
						}
					}
					_match_end_1e72d88c7:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1e72da09e:;
						{
							goto _iter_next_1e72d7b6d;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1e72da126:;
						{
							goto _iter_next_1e72d7b6d;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1e72da19d:;
						{
							goto _iter_next_1e72d7b6d;
						}
					}
					else if ((!(_1e300e8cc_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1e72da225:;
						{
							goto _iter_next_1e72d7b6d;
						}
					}
					_match_end_1e72d9d4b:;
				};
				jule::Ptr<_20cb74604_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1e300e5be_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e72d7b6d;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_20cb74604_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1e72d7b6d;
						};
					};
				};
				jule::U8 _10399_p = _1e300e206_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1e72d7b6d:;
			++it;
			_9939_i++;
			goto _iter_begin_1e72d7b6d;
		}
		_iter_end_1e72d7b6d:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1e302a1cd_IdentExpr> _1e3b7ed21_buildIdentExpr(jule::Ptr<_20cb74604_Token>* _104824_token) {
	return jule::new_ptr<_1e302a1cd_IdentExpr>(_1e302a1cd_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_20cb74604_Token__jule_tuple_int _1e3b800da_getRangeExprTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>* _105628_tokens) {
	__jule_tuple_sx_20cb74604_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_20cb74604_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e72e1869:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e72e18e1:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1e72e1803:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1e72e0c53:;
	}
	_iter_end_1e72e0c53:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e3b80ddd_checkAssignTokens(jule::Slice<jule::Ptr<_20cb74604_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1e301375a_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7377aed:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e73786d1:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e7378758:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1e7378615:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1e73795e4:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1e737965a:;
						{
							goto _iter_next_1e7377aed;
						}
					}
					else if (_1e3013cdd_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1e73796d2:;
						{
							return true;;
						}
					}
					_match_end_1e737954a:;
				};
			}
			_iter_next_1e7377aed:;
			++it;
			goto _iter_begin_1e7377aed;
		}
		_iter_end_1e7377aed:;
	};
	return false;;
}



inline _2277b1ce8_Log _1e3b820ba_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1e301464b_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_2277b225a_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_20cb74604_Token>> _1e3b825b5_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_20cb74604_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_20cb74604_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_20cb74604_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1e737e451:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1e737e4c8:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1e737e3da:;
			};
		}
	_iter_next_1e737d7b3:;
	}
	_iter_end_1e737d7b3:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token _1e3b8287e_rangeLast(jule::Slice<jule::Ptr<_20cb74604_Token>>* _9919_tokens) {
	__jule_tuple_sx_20cb74604_Token__jule_tuple_sx_20cb74604_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_20cb74604_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1e7383059:;
					{
						(_1099_braceN)++;
						goto _iter_next_1e738250e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1e73830d1:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1e7382ee3:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1e738250e:;
	}
	_iter_end_1e738250e:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log _1e3b82d35_parts(jule::Slice<jule::Ptr<_20cb74604_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_20cb74604_Token__jule_tuple_s_2277b1ce8_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> _14213_parts = nullptr;;
	jule::Slice<_2277b1ce8_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e73811ab:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_20cb74604_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1e738bea8:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1e73811ab;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1e738c030:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1e738bddc:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1e73811ab;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_2277b1ce8_Log _16617_err = _1e3b820ba_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_2277b1ce8_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1e73811ab:;
			++it;
			_1479_i++;
			goto _iter_begin_1e73811ab;
		}
		_iter_end_1e73811ab:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20cb74604_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_20cb74604_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1e3b830ee_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1e7390176:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1e73901dc:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1e7390253:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1e7390110:;
			{
				return _18320_left;;
			}
		}
		_match_end_1e738b1b6:;
	};
}



inline _2277b1ce8_Log _1e3b8352d_compilerErr(jule::Ptr<_20cb74604_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_2277b225a_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1e301562a_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1e3b838c4_pushSuggestion(_2277b1ce8_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_2277b225a_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1e302446e_TypeDecl> _1e3b95809_buildVoidType(void) {
	return jule::new_ptr<_1e302446e_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1e3386a9a_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1e754289a:;
			{
				__jule_func_result.__jule_result_arg0=_2277b4eb6_IsWindows(_2278c4081_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1e7542911:;
			{
				__jule_func_result.__jule_result_arg0=_2277b5291_IsDarwin(_2278c4081_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1e75425e2:;
			{
				__jule_func_result.__jule_result_arg0=_2277b555a_IsLinux(_2278c4081_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1e7542658:;
			{
				__jule_func_result.__jule_result_arg0=_2277b61e8_IsUnix(_2278c4081_Os);
			}
		}
		else {
			_case_begin_1e7542092:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1e75424d2:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1e3386bdd_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1e7544b22:;
			{
				__jule_func_result.__jule_result_arg0=_2277b589b_IsI386(_2278c434a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1e7544803:;
			{
				__jule_func_result.__jule_result_arg0=_2277b5b65_IsAmd64(_2278c434a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1e7544869:;
			{
				__jule_func_result.__jule_result_arg0=_2277b5e2e_IsArm64(_2278c434a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1e75448d0:;
			{
				__jule_func_result.__jule_result_arg0=_2277b6858_Is64Bit(_2278c434a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1e7544946:;
			{
				__jule_func_result.__jule_result_arg0=_2277b658e_Is32Bit(_2278c434a_Arch);
			}
		}
		else {
			_case_begin_1e75442a3:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1e75446e3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e33a218c_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_227720d67_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _2277207d4_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _227702134_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386a9a_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386bdd_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_227702134_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386a9a_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386bdd_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386bdd_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386a9a_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e3386a9a_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1e33a3314_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_2278c4081_Os); };
	if (_2277b61e8_IsUnix(_2278c4081_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1e33a3589_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_2278c434a_Arch); };
	if (_2277b6858_Is64Bit(_2278c434a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_2277b658e_Is32Bit(_2278c434a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1e33a3875_initVars(jule::Slice<jule::Str>* _5518_vars, _1e33a2ee5_CompileInfo* _5532_info) {
	_1e33a3314_setOsVars(_5518_vars);
	_1e33a3589_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1e754e621:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1e754e698:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1e754e5bb:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1e7550831:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1e7550897:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1e755091e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1e7550a62:;
	};
}



inline jule::Slice<jule::U8> _1e3b99940_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__226348ae5_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_2278c2e92_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _2277b1ce8_Log _1e3b99c1a_flatCompilerErr(jule::Str _4120_text) {
	return _2277b1ce8_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1e3b9e538_pushPasses(jule::Ptr<_1e30beddd_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e757dc7c:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _11217_f = *it;
			{
				_julec_label_1e757e640:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e757e80a:;
					if (it != expr_end) {
						_1e3062600_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1e757e80a;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e7580751:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1e757e80a;
										};
									}
									_iter_next_1e7580751:;
									++it;
									goto _iter_begin_1e7580751;
								}
								_iter_end_1e7580751:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1e757e80a:;
						++it;
						goto _iter_begin_1e757e80a;
					}
					_iter_end_1e757e80a:;
				};
			}
			_iter_next_1e757dc7c:;
			++it;
			goto _iter_begin_1e757dc7c;
		}
		_iter_end_1e757dc7c:;
	};
}



inline jule::Slice<jule::Str> _1e3b9e901_getAllUniquePasses(jule::Ptr<_1e30beddd_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1e30bbeb7_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1e3b9e538_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7581d90:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1e3b9e538_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1e7581d90:;
			++it;
			goto _iter_begin_1e7581d90;
		}
		_iter_end_1e7581d90:;
	};
	return _12913_passes;;
}



inline _1e33a2ee5_CompileInfo _1e3b9eb10_buildCompileInfo(void) {
	_1e33a2ee5_CompileInfo _1429_info = _1e33a2ee5_CompileInfo{._field_Prod=_2252e7bd8_Production, ._field_Test=_2252e727b_Test, };;
	{
		auto &_match_expr{ _2252e5422_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1e758316b:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1e7583226:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1e7581a0a:;
	};
	{
		auto &_match_expr{ _2252e6962_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1e7583cd7:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1e7582500:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1e75835ab:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1e7584029:;
	};
	return _1429_info;;
}



inline void _1e3d0e412_EliminateDefines(jule::Ptr<_1e3b9cbb8_IR>* _29026_ir) {
	jule::Ptr<_1e3ccbaa5_ObjectDeadCode> _2919_ocd = static__1e3ccc04a_new(_29026_ir);;
	_1e3d0e0d2_elimanate(_2919_ocd);
}



inline jule::Ptr<_1e302388b_Directive> _1e3d0e7ca_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75bc3e7:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1e75bc3e7:;
			++it;
			goto _iter_begin_1e75bc3e7;
		}
		_iter_end_1e75bc3e7:;
	};
	return nullptr;;
}



inline jule::Bool _1e3d0eb4e_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1e3d0e7ca_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1e3d10017_isTraitMethod(jule::Ptr<_1e3047d55_StructIns>* _31123_owner, jule::Ptr<_1e305ce36_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75bd63a:;
		if (it != expr_end) {
			jule::Ptr<_1e306d2cb_Trait> _31217_t = *it;
			{
				if ((_1e306de7a_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1e75bd63a:;
			++it;
			goto _iter_begin_1e75bd63a;
		}
		_iter_end_1e75bd63a:;
	};
	return false;;
}



inline void _1e3d1401b_eliminateDeadCodeOfScope(jule::Ptr<_1e309aa89_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1e309d42c_Label>> _2425_labels = jule::Slice<jule::Ptr<_1e309d42c_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1e309d806_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1e309d806_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1e3d10d1a_scopeDeadCode> _2449_sdc = jule::new_ptr<_1e3d10d1a_scopeDeadCode>(_1e3d10d1a_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e309d42c_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e309d806_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1e3d13bdb_optimizeStmts(_2449_sdc);
	};
}



inline void _1e3d14291_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e305a032_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e760bdc6:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e760ea22:;
					if (it != expr_end) {
						jule::Ptr<_1e305ce36_FnIns> _25621_ins = *it;
						{
							_1e3d1401b_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1e760ea22:;
						++it;
						goto _iter_begin_1e760ea22;
					}
					_iter_end_1e760ea22:;
				};
			}
			_iter_next_1e760bdc6:;
			++it;
			goto _iter_begin_1e760bdc6;
		}
		_iter_end_1e760bdc6:;
	};
}



inline void _1e3d144c2_eliminateFunctionsScopePackage(jule::Ptr<_1e30beddd_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e760e846:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _26317_f = *it;
			{
				_1e3d14291_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1e760e846:;
			++it;
			goto _iter_begin_1e760e846;
		}
		_iter_end_1e760e846:;
	};
}



inline void _1e3d1477a_eliminateScopePackage(jule::Ptr<_1e30beddd_Package>* _26831_pkg) {
	_1e3d144c2_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1e3d149ab_EliminateScopes(jule::Ptr<_1e3b9cbb8_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1e30bbeb7_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1e3d1477a_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1e761142a:;
	}
	_iter_end_1e761142a:;;
	_1e3d1477a_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1e3291ca2_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1e329216a_equalConst(jule::Ptr<_22893da56_Const> _2115_l, jule::Ptr<_22893da56_Const> _2126_r) {
	{
		
		if (_228942a27_IsI64(_2115_l.ptr())) {
			_case_begin_1e7694029:;
			{
				return (_228942a27_IsI64(_2126_r.ptr()) && (_22894042b_ReadI64(_2115_l.ptr()) == _22894042b_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_228942cad_IsU64(_2115_l.ptr())) {
			_case_begin_1e76940a1:;
			{
				return (_228942cad_IsU64(_2126_r.ptr()) && (_2289406b2_ReadU64(_2115_l.ptr()) == _2289406b2_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_228943561_IsF64(_2115_l.ptr())) {
			_case_begin_1e7694359:;
			{
				return (_228943561_IsF64(_2126_r.ptr()) && (_228940e65_ReadF64(_2115_l.ptr()) == _228940e65_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_2289432ca_IsStr(_2115_l.ptr())) {
			_case_begin_1e76943c0:;
			{
				return (_2289432ca_IsStr(_2126_r.ptr()) && (_228940bce_ReadStr(_2115_l.ptr()) == _228940bce_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_228943044_IsBool(_2115_l.ptr())) {
			_case_begin_1e7694436:;
			{
				return (_228943044_IsBool(_2126_r.ptr()) && (_228940948_ReadBool(_2115_l.ptr()) == _228940948_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_2289437e7_IsNil(_2115_l.ptr())) {
			_case_begin_1e769449c:;
			{
				return _2289437e7_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1e7693e19:;
			{
				return false;;
			}
		}
		_match_end_1e7693bd8:;
	};
}



inline jule::Bool _1e32924de_equalCasting(jule::Ptr<_1e304d91b_CastingExprModel> _4017_l, jule::Ptr<_1e304d91b_CastingExprModel> _4039_r) {
	if ((!(_1e31a0e03_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1e329338b_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1e329281e_equalUnary(jule::Ptr<_1e304c6b7_UnaryExprModel> _4715_l, jule::Ptr<_1e304c6b7_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1e329338b_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1e3292b93_equalIndexing(jule::Ptr<_1e304eb4d_IndexingExprModel> _5418_l, jule::Ptr<_1e304eb4d_IndexingExprModel> _5441_r) {
	return (_1e329338b_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1e329338b_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1e3293017_equalBinary(jule::Ptr<_1e304c2dd_BinopExprModel> _5916_l, jule::Ptr<_1e304c2dd_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1e329338b_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _1e329338b_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _1e329338b_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1e3291ca2_typeData(&(_7016_l)) != _1e3291ca2_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e76a3005:;
			{
				return (_7016_l.cast_ptr<_1e310ed40_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1e310ed40_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e76a307c:;
			{
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1e329338b_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e76a3104:;
			{
				return _1e329216a_equalConst(_7016_l.cast_ptr<_22893da56_Const>(&__jule_any_type19), _7030_r.cast_ptr<_22893da56_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e76a3313:;
			{
				return _1e32924de_equalCasting(_7016_l.cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1e304d91b_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e76a3379:;
			{
				return _1e329281e_equalUnary(_7016_l.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e76a33e0:;
			{
				return _1e3292b93_equalIndexing(_7016_l.cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1e304eb4d_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e76a3456:;
			{
				return _1e3293017_equalBinary(_7016_l.cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1e76a2e8e:;
			{
				return false;;
			}
		}
		_match_end_1e76a2d90:;
	};
}



inline jule::Bool _1e329b6c4_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _2276ede77_HasPrefix((*(_45118_f)), _22772051a_Join(jule::Slice<jule::Str>::make({_2278c349d_PathStdlib,_45126_p})));;
}



inline jule::Bool _1e329b9d2_isConstantValidConditionalCase(jule::Ptr<_1e309aea7_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e76a85e3:;
			{
				jule::Ptr<_22893da56_Const> _4589_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_22893da56_Const>(&__jule_any_type19);;
				return (_228943044_IsBool(_4589_c.ptr()) && _228940948_ReadBool(_4589_c.ptr()));;
			}
		}
		_match_end_1e76a858d:;
	};
	return false;;
}



inline jule::Bool _1e329bc9b_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e76a89ab:;
			{
				jule::Ptr<_22893da56_Const> _4679_c = (*(_46423_expr)).cast_ptr<_22893da56_Const>(&__jule_any_type19);;
				return (_228943044_IsBool(_4679_c.ptr()) && (!(_228940948_ReadBool(_4679_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e76a8a22:;
			{
				jule::Ptr<_1e304c2dd_BinopExprModel> _4709_m = (*(_46423_expr)).cast_ptr<_1e304c2dd_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_4709_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1e329bc9b_isUnreachableExpr(&((*((*(_4709_m))._field_Left))._field_Model)) || _1e329bc9b_isUnreachableExpr(&((*((*(_4709_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1e76a8956:;
	};
	return false;;
}



inline jule::Bool _1e329c0dc_isConstantValidMatchCase(jule::Ptr<_1e30a0808_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76a9e30:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> *_48012_expr = it;
			{
				if (((_1e31707c9_IsConst((*(_48012_expr)).ptr()) && _228943044_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _228940948_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1e76a9e30:;
			++it;
			goto _iter_begin_1e76a9e30;
		}
		_iter_end_1e76a9e30:;
	};
	return false;;
}



inline jule::Bool _1e329c3a6_isUnreachableConditionalCase(jule::Ptr<_1e309aea7_If>* _48834_i) {
	return _1e329bc9b_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _1e329c670_isUnreachableMatchCase(jule::Ptr<_1e30a0808_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e76ae264:;
		if (it != expr_end) {
			jule::Ptr<_1e316ee05_Data> *_49312_expr = it;
			{
				if ((!(_1e329bc9b_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1e76ae264:;
			++it;
			goto _iter_begin_1e76ae264;
		}
		_iter_end_1e76ae264:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1e32a547a_checkForBitShiftOpt(jule::Ptr<_1e304bce3_OperandExprModel>* _46125_l, jule::Ptr<_1e304bce3_OperandExprModel>* _46148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_22893ce73_IsInt(_1e31a0ab2_Str((*((*(_46125_l))))._field_Kind.ptr())))) || (!(_22893ce73_IsInt(_1e31a0ab2_Str((*((*(_46148_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_46148_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e7707b70:;
			{
				goto _match_end_1e7708bd7;
			}
		}
		else {
			_case_begin_1e7708c3c:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1e7708bd7:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_228941482_AsU64((*((*(_46148_r))))._field_Model.cast_ptr<_22893da56_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4755_j = _2288dc7d5_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4765_z = static_cast<jule::U64>(_4755_j);;
	if ((static_cast<jule::F64>(_4765_z) != _4755_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4765_z;
	return __jule_func_result;;
}



inline jule::Bool _1e32a5843_areSameLvalueExprModel(jule::Any* _48428_l, jule::Any* _48443_r) {
	{
		auto &_match_expr{ (*(_48428_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e770bbda:;
			{
				return ((*(_48443_r)) == (*(_48428_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e770bc51:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1e770c5e2:;
						{
							goto _match_end_1e770c889;
						}
					}
					else {
						_case_begin_1e770c8de:;
						{
							return false;;
						}
					}
					_match_end_1e770c889:;
				};
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _4979_lsi = (*(_48428_l)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1e3051d5e_StructSubIdentExprModel> _4989_rsi = (*(_48443_r)).cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_4979_lsi))._field_Field != (*(_4989_rsi))._field_Field)) {
					return false;;
				};
				return _1e32a5843_areSameLvalueExprModel(&((*((*(_4979_lsi))._field_Expr))._field_Model), &((*((*(_4989_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e770bcb7:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1e770e9ce:;
						{
							jule::Ptr<_1e304c6b7_UnaryExprModel> _51013_ul = (*(_48428_l)).cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1e304c6b7_UnaryExprModel> _51113_ur = (*(_48443_r)).cast_ptr<_1e304c6b7_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_51013_ul))._field_Op))._field_Id != (*((*(_51113_ur))._field_Op))._field_Id) || ((*((*(_51013_ul))._field_Op))._field_Kind != (*((*(_51113_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1e32a5843_areSameLvalueExprModel(&((*((*(_51013_ul))._field_Expr))._field_Model), &((*((*(_51113_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1e770e979:;
				};
			}
		}
		_match_end_1e770b58b:;
	};
	return false;;
}



inline void _1e32a815e_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1e32a6019_Copy=_305_l1;
	_1e32a6327_Deadcode=_305_l1;
	_1e32a65e1_Append=_305_l1;
	_1e32a68ee_Math=_305_l1;
	_1e32a6bb8_Access=_305_l1;
	_1e32a6e82_Inline=_305_l1;
	_1e32a724b_Ptr=_305_l1;
	_1e32a7625_Cond=_305_l1;
	_1e32a78de_Str=_305_l1;
	_1e32a7ba8_Slice=_305_l1;
	_1e32a7e72_Assign=_305_l1;
}



inline void _1e3d1de16_detectEnabled(void) {
	_1e3d1bb17_exprEnabled=(((_1e32a724b_Ptr || _1e32a68ee_Math) || _1e32a6bb8_Access) || _1e32a7625_Cond);
	_1e3d1be25_scopeEnabled=(((((_1e32a7625_Cond || _1e32a65e1_Append) || _1e32a6019_Copy) || _1e32a78de_Str) || _1e32a7ba8_Slice) || _1e32a7e72_Assign);
}



inline void _1e3d47bed_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2278c2e92_Exit(1LL);
}



inline jule::U64 _1e47785b7_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1e46a09c8_isCopyOptimizable(jule::Ptr<_1e316ee05_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e784ada1:;
			{
				return false;;
			}
		}
		_match_end_1e784ad4b:;
	};
	return true;;
}



inline jule::Bool _1e46a0d91_isIterCopyOptimizable(jule::Ptr<_1e316ee05_Data>* _83427_expr, jule::Ptr<_1e310ed40_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_1e31a207a_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _1e46b0ec2_decomposeCommonEsq(jule::U8 _147623_b) {
	{
		auto &_match_expr{ _147623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1e8551875:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e8551ed5:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e8551a40:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1e8551aa6:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1e8551b1c:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1e8551b83:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1e85521a0:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1e8552216:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1e855227c:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1e85522e3:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1e85519c9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e85472c7:;
	};
}



inline jule::Str _1e46b12d0_sbtoa(jule::U8 _150310_b) {
	if ((_150310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_150310_b < 128LLU)) {
		jule::Str _15089_seq = _1e46b0ec2_decomposeCommonEsq(_150310_b);;
		if (!(_15089_seq).empty()) {
			return _15089_seq;;
		};
		if (((32LL <= _150310_b) && (_150310_b <= 126LLU))) {
			return jule::Str::from_byte(_150310_b);;
		};
	};
	jule::Str _15165_seq = _22892d161_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_150310_b)), 8LL);;
	if ((_15165_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15165_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15165_seq);;
}



inline void _1e46b15bb_cstrBytes(_227713453_StrBuilder* _152319_s, jule::Str _152334_ctx) {
	{
		auto expr = &(_152334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8556869:;
		if (it != expr_end) {
			jule::U8 *_152412_b = it;
			{
				_22771c02d_WriteStr(_152319_s, _1e46b12d0_sbtoa((*(_152412_b))));
			}
			_iter_next_1e8556869:;
			++it;
			goto _iter_begin_1e8556869;
		}
		_iter_end_1e8556869:;
	};
}



inline void _1e46b18eb_cstrLit(_227713453_StrBuilder* _152917_s, jule::Str _152932_ctx) {
	_22771c2d6_WriteByte(_152917_s, '\"');
	_1e46b15bb_cstrBytes(_152917_s, _152932_ctx);
	_22771c2d6_WriteByte(_152917_s, '\"');
}



inline void _1e46b1c92_ftoa(_227713453_StrBuilder* _153514_s, jule::F64 _153529_f, jule::I64 _153537_bitsize) {
	if ((_153537_bitsize != 32LL)) {
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::I64>(_153529_f)))) {
			_1e46b207d_itoa(_153514_s, static_cast<jule::I64>(static_cast<jule::I64>(_153529_f)));
			return;;
		};
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::U64>(_153529_f)))) {
			_1e46b2369_utoa(_153514_s, static_cast<jule::U64>(static_cast<jule::U64>(_153529_f)));
			return;;
		};
	};
	jule::Str _15465_m = _228916ab7_FmtFloat(_153529_f, 'f', -1LL, _153537_bitsize);;
	_22771c02d_WriteStr(_153514_s, _15465_m);
	if ((!(_227703982_Contains(_15465_m, jule::Str::lit(".", 1))))) {
		_22771c02d_WriteStr(_153514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1e46b207d_itoa(_227713453_StrBuilder* _155314_s, jule::I64 _155329_x) {
	{
		
		if ((_155329_x == jule::MAX_I64)) {
			_case_begin_1e855ad79:;
			{
				_22771c02d_WriteStr(_155314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_155329_x == jule::MIN_I64)) {
			_case_begin_1e855ae01:;
			{
				_22771c02d_WriteStr(_155314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1e855ac69:;
	};
	_22771c02d_WriteStr(_155314_s, _22892d529_FmtInt(_155329_x, 10LL));
	if (_2277b6858_Is64Bit(jule::Str::lit("arm64", 5))) {
		_22771c2d6_WriteByte(_155314_s, 'L');
	};
	_22771c2d6_WriteByte(_155314_s, 'L');
}



inline void _1e46b2369_utoa(_227713453_StrBuilder* _157014_s, jule::U64 _157029_x) {
	{
		
		if ((_157029_x == jule::MAX_U64)) {
			_case_begin_1e855d002:;
			{
				_22771c02d_WriteStr(_157014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1e855ce03:;
	};
	_22771c02d_WriteStr(_157014_s, _22892d161_FmtUint(_157029_x, 10LL));
	if (_2277b6858_Is64Bit(jule::Str::lit("arm64", 5))) {
		_22771c2d6_WriteByte(_157014_s, 'L');
	};
	_22771c02d_WriteStr(_157014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1e46b2743_isForwarded(jule::Ptr<_1e309aa89_Scope>* _158417_s) {
	jule::Any _15855_last = (*((*(_158417_s))))._field_Stmts[((*((*(_158417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15855_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e856018b:;
			{
				{
					auto &_match_expr{ (*(_15855_last.cast_ptr<_1e316ee05_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1e8561005:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e8560e8e:;
						{
							return false;;
						}
					}
					_match_end_1e8560e39:;
				};
			}
		}
		else {
			_case_begin_1e856028a:;
			{
				return true;;
			}
		}
		_match_end_1e855e6b8:;
	};
}



inline jule::Bool _1e46b2a0c_isExprComesFromBind(jule::Ptr<_1e316ee05_Data>* _159925_d) {
	{
		auto &_match_expr{ (*((*(_159925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e85616ed:;
			{
				return (*((*((*(_159925_d))))._field_Model.cast_ptr<_1e310ed40_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e8561764:;
			{
				return (*((*((*((*((*(_159925_d))))._field_Model.cast_ptr<_1e3051d5e_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1e8561687:;
			{
				return false;;
			}
		}
		_match_end_1e8561632:;
	};
}



inline jule::Bool _1e46b2cc6_isAny(jule::Ptr<_1e31a06e9_TypeKind>* _161115_t) {
	if ((_1e31a3884_TypeEnum((*(_161115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1e31a82c3_Prim> _16155_prim = _1e31a2d4a_Prim((*(_161115_t)).ptr());;
	return ((_16155_prim != nullptr) && _1e31ab9e1_IsAny(_16155_prim.ptr()));;
}



inline void _1e478caa4_iterFiles(jule::Ptr<_1e30beddd_Package>* _135119_pkg, jule::Fn<void(jule::Ptr<_1e3169ad1_SymbolTable>*)> _135134_f) {
	{
		auto expr = &((*((*(_135119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8761d82:;
		if (it != expr_end) {
			jule::Ptr<_1e3169ad1_SymbolTable> _135217_file = *it;
			{
				_135134_f(&(_135217_file));
			}
			_iter_next_1e8761d82:;
			++it;
			goto _iter_begin_1e8761d82;
		}
		_iter_end_1e8761d82:;
	};
}



inline jule::Str _1e478cdb2_concatAllParts(jule::Slice<jule::Ptr<_20cb74604_Token>> _135819_parts) {
	jule::I64 _13599_n = 0LL;;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8762a86:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_136012_part = it;
			{
				_13599_n+=(*((*(_136012_part))))._field_Kind.len();
			}
			_iter_next_1e8762a86:;
			++it;
			goto _iter_begin_1e8762a86;
		}
		_iter_end_1e8762a86:;
	};
	if ((_13599_n == 0LL)) {
		return jule::Str();;
	};
	_227713453_StrBuilder _13669_s = static__22771371c_New(_13599_n);;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8762a31:;
		if (it != expr_end) {
			jule::Ptr<_20cb74604_Token> *_136712_p = it;
			{
				_22771c02d_WriteStr(&_13669_s, (*((*(_136712_p))))._field_Kind);
			}
			_iter_next_1e8762a31:;
			++it;
			goto _iter_begin_1e8762a31;
		}
		_iter_end_1e8762a31:;
	};
	return _22771c825_Str(&_13669_s);;
}



inline jule::Bool _1e478d236_containsTraitMethod(jule::Ptr<_1e306d2cb_Trait>* _137429_t, jule::Str* _137441_ident) {
	{
		auto expr = &((*((*(_137429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e876510a:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _137512_m = *it;
			{
				if (((*(_137512_m))._field_Ident == (*(_137441_ident)))) {
					return true;;
				};
			}
			_iter_next_1e876510a:;
			++it;
			goto _iter_begin_1e876510a;
		}
		_iter_end_1e876510a:;
	};
	return false;;
}



inline void _1e478d566_pushMethodsFromInherit(jule::Ptr<_1e306d2cb_Trait>* _138632_dest, jule::Ptr<_1e306d2cb_Trait>* _138651_src) {
	_1e478d852_pushMethodsFromInherits(_138632_dest, _138651_src);
	{
		auto expr = &((*((*(_138651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8765acd:;
		if (it != expr_end) {
			jule::Ptr<_1e305a032_Fn> _138817_m = *it;
			{
				if ((!(_1e478d236_containsTraitMethod(_138632_dest, &((*(_138817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1e305a032_Fn>> &__jule_push_dest = (*((*(_138632_dest))))._field_Methods; __jule_push_dest.push(_138817_m); };
				};
			}
			_iter_next_1e8765acd:;
			++it;
			goto _iter_begin_1e8765acd;
		}
		_iter_end_1e8765acd:;
	};
}



inline void _1e478d852_pushMethodsFromInherits(jule::Ptr<_1e306d2cb_Trait>* _139733_dest, jule::Ptr<_1e306d2cb_Trait>* _139752_src) {
	{
		auto expr = &((*((*(_139752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8766bbc:;
		if (it != expr_end) {
			jule::Ptr<_1e31a78bb_TypeSymbol> _139817_inh = *it;
			{
				jule::Ptr<_1e306d2cb_Trait> _139913_t2 = _1e31a4654_Trait((*(_139817_inh))._field_Kind.ptr());;
				_1e478d566_pushMethodsFromInherit(_139733_dest, &(_139913_t2));
			}
			_iter_next_1e8766bbc:;
			++it;
			goto _iter_begin_1e8766bbc;
		}
		_iter_end_1e8766bbc:;
	};
}



inline jule::Bool _1e478db1b_isOpMethod(jule::Ptr<_1e305a032_Fn>* _140516_m) {
	if ((((*((*(_140516_m))))._field_Generics.len() > 0LL) || ((*((*(_140516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1e305ce36_FnIns> _14095_mi = (*((*(_140516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1e478ddd5_isHeadDecl(jule::Ptr<_1e305a032_Fn>* _142120_m) {
	if ((((*((*(_142120_m))))._field_Generics.len() > 0LL) || ((*((*(_142120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1e478db1b_isOpMethod(_142120_m)) {
		return true;;
	};
	jule::Ptr<_1e305ce36_FnIns> _14289_mi = (*((*(_142120_m))))._field_Instances[0LL];;
	;
	return static__1e3111292_Dispose(_1e3048dbc_FindMethod((*(_14289_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1e302388b_Directive> _1e479c9a4_findDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88a910b:;
		if (it != expr_end) {
			jule::Ptr<_1e302388b_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1e88a910b:;
			++it;
			goto _iter_begin_1e88a910b;
		}
		_iter_end_1e88a910b:;
	};
	return nullptr;;
}



inline jule::Bool _1e479cd6c_hasDirective(jule::Slice<jule::Ptr<_1e302388b_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1e479c9a4_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _1e479d136_shouldInitialized(jule::Ptr<_1e31a06e9_TypeKind>* _49727_t) {
	jule::Ptr<_1e31a82c3_Prim> _4985_prim = _1e31a2d4a_Prim((*(_49727_t)).ptr());;
	if ((_4985_prim != nullptr)) {
		return ((!(_1e31ab9e1_IsAny(_4985_prim.ptr()))) && (!(_1e31ab75a_IsStr(_4985_prim.ptr()))));;
	};
	{
		
		if ((_1e31a30d1_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88abcac:;
			{
				return false;;
			}
		}
		else if ((_1e31a48da_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88abd23:;
			{
				return false;;
			}
		}
		else if ((_1e31a3da1_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88abd9a:;
			{
				return false;;
			}
		}
		else if ((_1e31a4654_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88abe22:;
			{
				return false;;
			}
		}
		else if ((_1e31a4137_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88abe99:;
			{
				return false;;
			}
		}
		else if ((_1e31a3b1a_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88ac021:;
			{
				jule::Ptr<_1e31aeae3_Arr> _51413_arr = _1e31a3b1a_Arr((*(_49727_t)).ptr());;
				return _1e479d136_shouldInitialized(&((*(_51413_arr))._field_Elem));;
			}
		}
		else if ((_1e31a43bd_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1e88ac098:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e88ab053:;
			{
				return true;;
			}
		}
		_match_end_1e88aad33:;
	};
}



inline void _2278c7491_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _2278c7716_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _2278c72a4_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_2278c72a4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e895ba1b:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1e895ba1b:;
			++it;
			goto _iter_begin_1e895ba1b;
		}
		_iter_end_1e895ba1b:;
	};
	_227713453_StrBuilder _499_s = static__22771371c_New(32LL);;
	;
	{
		auto expr = &(_2278c72a4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e895d028:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_22771c02d_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_22771c02d_WriteStr(&_499_s, _2276ed680_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_22771c02d_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_22771c2d6_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1e895d028:;
			++it;
			_519_i++;
			goto _iter_begin_1e895d028;
		}
		_iter_end_1e895d028:;
	};
	jule::outln(_499_s);
}



inline void _2278c7947_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _2278c7b45_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _2278c7cbb_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _2278c7eec_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1e8964062:;
			{
				_2278c7b45_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1e8963e85:;
			{
				_2278c7cbb_toolDistarch();
			}
		}
		else {
			_case_begin_1e8962a88:;
			{
				_2278c7491_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1e8963a45:;
	};
}



inline void _2278c822d_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: darwin", 24));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _2252e5422_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _2252e6962_CppStd));
}



inline void _2278c853b_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1e896776e:;
			{
				({
					auto except = static__226348e8b_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_2278c7491_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1e8966361:;
			{
				_2278c7491_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1e89672b8:;
	};
}



inline jule::Bool _2278c8805_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1e896863d:;
			{
				_2278c7716_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1e89686b5:;
			{
				_2278c7947_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1e896873c:;
			{
				_2278c7eec_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1e89687b4:;
			{
				_2278c822d_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1e8968cc0:;
			{
				_2278c853b_mod(_15320_args);
			}
		}
		else {
			_case_begin_1e89685c7:;
			{
				return false;;
			}
		}
		_match_end_1e8967ede:;
	};
	return true;;
}



inline void _2278c897b_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _226438410_Args();;
	if ((_1899_args.len() < 2LL)) {
		_2278c897b_showInfo();
		return;;
	};
	if (_2278c8805_processCommand(&(_1899_args))) {
		return;;
	};
	_1e481dd44_compileCommand(&(_1899_args));
}



inline void _1e481ab43_init(void) {
	_2252e5422_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_226348144_File> _1e481ae1d_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _22772120d_Dir((*(_4316_path)));;
	({
		auto except = static__226346dbd_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__227723782_Create(_445_dir);
				if (!except.ok()) {
					_1e3d47bed_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__22634882b_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1e3d47bed_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1e481b094_clearObjects(void) {
	({
		auto except = static__22634553c_Remove(_1e481c293_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2277239b3_Remove(_1e481a3d4_OutDir);
}



inline void _1e481b3c4_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_227870e84_Cmd> _739_cmd = static__2278713a2_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_22770360d_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _2278715a0_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1e896eba5:;
					{
						static__1e3d1e312_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1e896e48a:;
					{
						static__1e3d1e312_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1e896e699:;
					{
						static__1e3d1e312_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1e896e600:;
			};
			_1e3d47bed_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _227871a34_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2252e5422_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1e3d1e312_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1e3d47bed_Throw(jule::Str());
	};
	_1e481b094_clearObjects();
}



inline jule::Bool _1e481b68d_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _227702134_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _2277a5171_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1e481b8be_pushCompCmdClang(_227713453_StrBuilder* _10726_cmd) {
	_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2252e6962_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1e89732c4:;
			{
				_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1e8972339:;
			{
				_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1e8973406:;
			{
				_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1e897326e:;
	};
	_22771c2d6_WriteByte(_10726_cmd, ' ');
	if (_2252e7bd8_Production) {
		_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_22771c02d_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1e481bb00_pushCompCmdGcc(_227713453_StrBuilder* _13324_cmd) {
	_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2252e6962_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1e8976492:;
			{
				_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1e89749ce:;
			{
				_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1e8974a45:;
			{
				_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1e897643c:;
	};
	_22771c2d6_WriteByte(_13324_cmd, ' ');
	if (_2252e7bd8_Production) {
		_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_22771c02d_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1e481c084_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1e3b9cbb8_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_2252e670e_CompilerPath);;
	_227713453_StrBuilder _1619_cmd = static__22771371c_New(64LL);;
	{
		auto &_match_expr{ _2252e5422_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1e8979055:;
			{
				_1e481bb00_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1e8979682:;
			{
				_1e481b8be_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1e8979220:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8979891:;
		if (it != expr_end) {
			jule::Ptr<_1e30bbeb7_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1e481b68d_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_22771c02d_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_22771c2d6_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1e8979891:;
			++it;
			goto _iter_begin_1e8979891;
		}
		_iter_end_1e8979891:;
	};
	if (!(_1e481a989_Out).empty()) {
		_22771c02d_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_22771c02d_WriteStr(&_1619_cmd, _1e481a989_Out);
		_22771c2d6_WriteByte(&_1619_cmd, ' ');
	};
	_22771c02d_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e897c476:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_22771c2d6_WriteByte(&_1619_cmd, ' ');
				_22771c02d_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1e897c476:;
			++it;
			goto _iter_begin_1e897c476;
		}
		_iter_end_1e897c476:;
	};
	if (_2278c4081_Os.equal("windows", 7)) {
		_22771c02d_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _22771c825_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1e481c293_getCompilePath(void) {
	return _22772051a_Join(jule::Slice<jule::Str>::make({_1e481a3d4_OutDir,_1e481a6c0_OutName}));;
}



inline void _1e481c4c4_applyTargetIndependentOptimizations(jule::Ptr<_1e3b9cbb8_IR>* _20545_ir) {
	jule::Ptr<_1e3d1c134_Optimizer> _2069_opt = static__1e3d1c5a7_New(_20545_ir);;
	_1e3d1db91_Optimize(_2069_opt.ptr());
}



inline void _1e481c64a_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2252e5422_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e897db70:;
			{
				_1e3d47bed_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1e897e698:;
			{
				if ((_2252e670e_CompilerPath).empty()) {
					_2252e670e_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1e897e70e:;
			{
				if ((_2252e670e_CompilerPath).empty()) {
					_2252e670e_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1e897e632:;
			{
				_1e3d47bed_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2252e5422_Compiler));
			}
		}
		_match_end_1e897e247:;
	};
}



inline void _1e481c87b_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1e3d47bed_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1e481caac_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1e3d47bed_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1e481ccdd_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1e3d47bed_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _22770360d_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1e3d47bed_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1e481caac_checkTargetOs(_2535_os);
		_2278c4081_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1e481c87b_checkTargetArch(_2539_arch);
		_2278c434a_Arch=_2539_arch;
	};
	_228932b49_UpdateTarget();
}



inline void _1e481d01e_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1e3d47bed_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1e89864e6:;
			{
				goto _match_end_1e8985b66;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1e898655c:;
			{
				_1e32a815e_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1e8985d75:;
			{
				_1e3d47bed_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1e8985b66:;
	};
}



inline void _1e481d3a4_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2252e6962_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1e89861e9:;
			{
				goto _match_end_1e898699c;
			}
		}
		else {
			_case_begin_1e8986a02:;
			{
				_1e3d47bed_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _2252e6962_CppStd));
			}
		}
		_match_end_1e898699c:;
	};
}



inline jule::Slice<jule::Str> _1e481d618_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1e4815478_FlagSet> _2969_fs = static__1e4815764_New();;
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e481a989_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2252e6be8_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2252e6eb2_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2252e5422_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2252e670e_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2252e7bd8_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2252e7545_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2252e791e_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1e8988938_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2252e6962_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a6019_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a6327_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a65e1_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a68ee_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a6bb8_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a6e82_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a724b_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a7625_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a78de_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a7ba8_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1e8990b3d_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e32a7e72_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1e4816600_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1e3d47bed_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1e481c64a_checkCompilerFlag();
	_1e481d3a4_checkCppStdFlag();
	_1e481ccdd_checkTargetFlag(&(_2949_target));
	_1e481d01e_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1e481d849_setupSemaFlags(jule::I64* _33424_flags) {
	if (_2252e6be8_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e3b9cbb8_IR> _1e481db13_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1e481d618_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1e481d849_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1e3d47bed_Throw(_2277b225a_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1e3d47bed_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227720a9d_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1e3d47bed_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_22634a234_Status> _3575_inf = ({
		auto except = static__226346dbd_Of(_2278c349d_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1e3d47bed_Throw(_2277b225a_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_22634a234_Status>(nullptr);});
	});;
	if ((!(_22634a60d_IsDir(_3575_inf.ptr())))) {
		_1e3d47bed_Throw(_2277b225a_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e3b9cbb8_IR> _3659_ir;;
	jule::Slice<_2277b1ce8_Log> _36513_logs;;
	({
		__jule_tuple_x_1e3b9cbb8_IR__jule_tuple_s_2277b1ce8_Log __jule_assign_result = static__1e3b9d12a_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1e3d47bed_Throw(_2277b225a_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1e3d4722a_PrintLogs(&(_36513_logs));
		_1e3d47bed_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1e481dd44_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_2252e727b_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1e3b9cbb8_IR> _3869_ir = _1e481db13_buildIr(_38024_args);;
	;
	if ((!(_2252e727b_Test))) {
		jule::Ptr<_1e305a032_Fn> _39113_main = _1e30c1472_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1e3d47bed_Throw(_2277b225a_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1e481c4c4_applyTargetIndependentOptimizations(&(_3869_ir));
	_1e3b9e192_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1e481c293_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1e481c084_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1e4780b1e_ObjectCoder> _4059_oc = static__1e478101a_New(&(_3869_ir), _1e477e106_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_2252e727b_Test) {
		jule::Ptr<_1e46b3b73_TestCoder> _41013_tc = static__1e46b40b3_New(&(_4059_oc));;
		_1e46b5438_Serialize(_41013_tc);
	} else {
		_1e478c6b9_Serialize(_4059_oc);
	};
	jule::Ptr<_226348144_File> _4169_file = _1e481ae1d_openOutput(&(_4025_compPath));;
	({
		auto except = _2263459c1_Write(_4169_file.ptr(), _22771d2c6_Buf(&(*(_4059_oc))._field_Obj));
		if (!except.ok()) {
			_1e3d47bed_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2263496c8_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_2252e6eb2_Transpilation))) {
		_1e481b3c4_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_2278c447c_init();
	_228932cc0_init();
	_1e481ab43_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}