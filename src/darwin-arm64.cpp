// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 1/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _1ac150845_Importer{};
struct _1a9a0475c_Kind{};
struct _1a9a20701_Lookup{};
struct _1ade32b97_CommonFlag{};
struct _1e65e8314_Range16;
struct _1e65e8787_Range32;
struct _1e65e8c0a_RangeTable;
struct _1e66adee0_acceptRange;
struct _1e66b701a_lazyBuff;
struct _1e49337e9_DirEntry;
struct _1e4935532_Directory;
struct _1e563252a_File;
struct _1e56328e3_Status;
struct _1e6786408_Cmd;
struct _1e6735e35_Log;
struct _1e6a5c800_Token;
struct _1e6a62b8a_File;
struct _1e6a64be2_kindPair;
struct _1e6a6a7db_lex;
struct _1b3916a1c_Ast;
struct _1b3917732_Node;
struct _1b3917b2d_Directive;
struct _1b394b326_TypeDecl;
struct _1b394b8dc_IdentTypeDecl;
struct _1b394c03b_SubIdentTypeDecl;
struct _1b394c3e3_NamespaceTypeDecl;
struct _1b394c6ce_SptrTypeDecl;
struct _1b394caca_SlcTypeDecl;
struct _1b394cdb6_TupleTypeDecl;
struct _1b394d1a2_PtrTypeDecl;
struct _1b394d834_ArrTypeDecl;
struct _1b394e082_MapTypeDecl;
struct _1b394e439_RetTypeDecl;
struct _1b3950847_Expr;
struct _1b3950b33_RangeExpr;
struct _1b39511d8_UseExpr;
struct _1b39514c4_TupleExpr;
struct _1b395187b_LitExpr;
struct _1b3952085_UnsafeExpr;
struct _1b395243c_CoExpr;
struct _1b39528b0_IdentExpr;
struct _1b39530b9_UnaryExpr;
struct _1b3953471_VariadicExpr;
struct _1b3953828_CastExpr;
struct _1b3953bd0_NsSelectionExpr;
struct _1b3954153_SubIdentExpr;
struct _1b39545c6_BinopExpr;
struct _1b3954b15_FnCallExpr;
struct _1b3955594_FieldExprPair;
struct _1b3955ce2_StructLit;
struct _1b3956265_BraceLit;
struct _1b3956c7c_KeyValPair;
struct _1b3957200_SliceExpr;
struct _1b3957a91_IndexingExpr;
struct _1b395819b_SlicingExpr;
struct _1b3958487_Constraint;
struct _1b395890a_GenericDecl;
struct _1b3958cb2_LabelSt;
struct _1b3959169_GotoSt;
struct _1b3959455_FallSt;
struct _1b3959a60_AssignLeft;
struct _1b395a09e_AssignSt;
struct _1b395b039_Stmt;
struct _1b395b644_ScopeTree;
struct _1b395bd1a_ParamDecl;
struct _1b395d13a_FnDecl;
struct _1b395e119_VarDecl;
struct _1b395e4c1_RetSt;
struct _1b395eb31_Iter;
struct _1b3960406_WhileKind;
struct _1b3960c97_RangeKind;
struct _1b396114e_BreakSt;
struct _1b3961506_ContSt;
struct _1b3961979_If;
struct _1b3961d31_Else;
struct _1b39622a4_Conditional;
struct _1b396297a_TypeAliasDecl;
struct _1b3962ded_Case;
struct _1b39635c4_MatchCase;
struct _1b3963d66_UseDecl;
struct _1b39642d9_EnumItemDecl;
struct _1b3964d12_EnumDecl;
struct _1b3965818_TypeEnumItemDecl;
struct _1b3965a16_TypeEnumDecl;
struct _1b3966066_FieldDecl;
struct _1b39668c4_StructDecl;
struct _1b3966ece_TraitDecl;
struct _1b39675d9_Impl;
struct _1a9956c86_Const;
struct _1ac106026_floatInfo;
struct _1ac106510_decimalSlice;
struct _1ac116e38_leftCheat;
struct _1ac117950_decimal;
struct _1b392dea7_Field;
struct _1b393d417_Operators;
struct _1b393b9dc_Struct;
struct _1b3944154_FieldIns;
struct _1a99b529a_OperandExprModel;
struct _1a99b5487_BinopExprModel;
struct _1a99b5674_UnaryExprModel;
struct _1a99b5861_StructArgExprModel;
struct _1a99b5a4d_StructLitExprModel;
struct _1a99b5c3a_AllocStructLitExprModel;
struct _1a99b5e27_CastingExprModel;
struct _1a99b6114_FnCallExprModel;
struct _1a99b6301_SliceExprModel;
struct _1a99b64dd_IndexingExprModel;
struct _1a99b66ca_AnonFnExprModel;
struct _1a99b68b7_KeyValPairExprModel;
struct _1a99b6aa4_MapExprModel;
struct _1a99b6c91_SlicingExprModel;
struct _1a99b6e7d_TraitSubIdentExprModel;
struct _1a99b739b_StructSubIdentExprModel;
struct _1a99b7588_StructStaticIdentExprModel;
struct _1a99b7775_ArrayExprModel;
struct _1a99b7962_CommonIdentExprModel;
struct _1a99b7b4e_CommonSubIdentExprModel;
struct _1a99b7d3b_TupleExprModel;
struct _1a99b8028_BuiltinOutCallExprModel;
struct _1a99b8215_BuiltinOutlnCallExprModel;
struct _1a99b8402_BuiltinCloneCallExprModel;
struct _1a99b85de_BuiltinNewCallExprModel;
struct _1a99b87cb_BuiltinPanicCallExprModel;
struct _1a99b89b8_BuiltinAssertCallExprModel;
struct _1a99b8ba5_BuiltinMakeCallExprModel;
struct _1a99b8d92_BuiltinAppendCallExprModel;
struct _1a99b907e_BuiltinCopyCallExprModel;
struct _1a99b926b_BuiltinErrorCallExprModel;
struct _1a99b716a_SizeofExprModel;
struct _1a99b98cb_AlignofExprModel;
struct _1a99b9ab8_RuneExprModel;
struct _1a99b9ca5_IntegratedToStrExprModel;
struct _1a99b9e92_BackendEmitExprModel;
struct _1a99ba17e_FreeExprModel;
struct _1a99ba712_RetType;
struct _1a99badc7_Param;
struct _1a99bc714_Fn;
struct _1a99be4e6_ParamIns;
struct _1a99c03b5_FnIns;
struct _1a99c3286_ReferenceStack;
struct _1a99c4650_Pass;
struct _1a99c8ae9_symbolBuilder;
struct _1b2551bec_Trait;
struct _1b255334c_EnumItem;
struct _1b2553d42_Enum;
struct _1b2554d76_TypeEnumItem;
struct _1b255543c_TypeEnum;
struct _1ac12c624_constraintChecker;
struct _1ac12e68c_Impl;
struct _1ac1346e7_Scope;
struct _1ac134ae3_If;
struct _1ac134dce_Else;
struct _1ac135253_Conditional;
struct _1ac13553e_InfIter;
struct _1ac1359b2_WhileIter;
struct _1ac136397_RangeIter;
struct _1ac136793_ContSt;
struct _1ac136b4a_BreakSt;
struct _1ac136e36_Label;
struct _1ac137222_GotoSt;
struct _1ac1375c9_Postfix;
struct _1ac137a4c_Assign;
struct _1ac137e04_MultiAssign;
struct _1ac138443_Match;
struct _1ac138e8d_Case;
struct _1ac139543_FallSt;
struct _1ac1399b6_RetSt;
struct _1ac13a0c1_scopeLabel;
struct _1ac13a544_scopeGoto;
struct _1ac13b358_scopeChecker;
struct _1ac14c435_directiveChecker;
struct _1ac1530c8_ImportInfo;
struct _1ac156032_Package;
struct _1ac15b224_Sema;
struct _1ac179d36_missingRetChecker;
struct _1ac17b9e7_IterRelation;
struct _1ac17c960_Var;
struct _1ac17d488_FuncPattern;
struct _1ac1adb28_typeCompatibilityChecker;
struct _1ac1b0751_assignTypeChecker;
struct _1ac1b216a_dynamicTypeAnnotation;
struct _1ac1b6966_fnCallArgChecker;
struct _1ac1b9370_structLitChecker;
struct _1ac1bae54_rangeChecker;
struct _1ac1bd0aa_retTypeChecker;
struct _1ac1bee58_SymbolTable;
struct _1ac1c4bb6_Data;
struct _1ac1c5c3e_Value;
struct _1ac1c6734_Eval;
struct _1a99e67b5_unaryEval;
struct _1a99e8597_binaryEval;
struct _1a9a0345e_InsGeneric;
struct _1a9a03e98_TypeAlias;
struct _1a9a04b8b_TypeKind;
struct _1a9a08ce4_TypeSymbol;
struct _1a9a09663_Prim;
struct _1a9a0cde7_Sptr;
struct _1a9a0d854_Slc;
struct _1a9a0e3d2_Tuple;
struct _1a9a0ee0a_Map;
struct _1a9a109ee_Arr;
struct _1a9a1145b_Ptr;
struct _1a9a123a2_referencer;
struct _1a9a130ea_typeChecker;
struct _1a9a1a80b_identTypeLookup;
struct _1aca241a2_FileInfo;
struct _1aca6c904_stmt;
struct _1aca6d22e_scopeParser;
struct _1aca7a58d_exprBuilder;
struct _1aca858c8_assignInfo;
struct _1aca88e1a_parser;
struct _1aca9a1d4_typeBuilder;
struct _1ac1ecddc_CompileInfo;
struct _1ac1ee240_directiveEval;
struct _1aca1ec91_JuleImporter;
struct _1aca9e507_OrderedDefines;
struct _1aca9e75a_defineOrderer;
struct _1acb92155_liveTable;
struct _1acbc3d68_scopeDeadCode;
struct _1acbc7cc3_exprDeadCode;
struct _1b256d587_UnsafeBinopExprModel;
struct _1b25d173d_UnsafeIndexingExprModel;
struct _1a9b7901e_PushToSliceExprModel;
struct _1b25dd283_MutSlicingExprModel;
struct _1a9b6b53e_StrInsertBeginExprModel;
struct _1a9ace606_scopeOptimizer;
struct _1b25d042e_exprOptimizer;
struct _1acb9c627_Optimizer;
struct _1ac568da1_AnsiEscape;
struct _1ac56a7cb_Logger;
struct _1ac3dd330_AbsTime;
struct _1ac3dd9c3_Time;
struct _1ac367595_scopeCoder;
struct _1ac3700d6_exprCoder;
struct _1ac37ced4_deriveCoder;
struct _1ac37e414_TestCoder;
struct _1ac381a65_identCoder;
struct _1ac3e3ce7_SerializationInfo;
struct _1ac3e3ed4_traitHash;
struct _1ac3e9c10_customType;
struct _1ac3ea507_typeCoder;
struct _1b17c3e81_Flag;
struct _1b17c7b44_Flag;
struct _1b17cb62b_Flag;
struct _1b17d0157_Flag;
struct _1b17d3b3e_Flag;
struct _1ade34616_FlagSet;
struct _1aca5966b_IR;
struct _1b3967d9d_StructIns;
struct _1acb924da_ObjectDeadCode;
struct _1ac3e41c1_ObjectCoder;
struct _1ade36cde_ArgParser;
struct _1e65e8314_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_1e65e8314_Range16(void) = default;

	inline bool operator==(_1e65e8314_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1e65e8314_Range16 _other) { return !this->operator==(_other); }


};
struct _1e65e8787_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_1e65e8787_Range32(void) = default;

	inline bool operator==(_1e65e8787_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1e65e8787_Range32 _other) { return !this->operator==(_other); }


};
struct _1e65e8c0a_RangeTable {
	jule::Slice<_1e65e8314_Range16> _field_R16 = jule::Slice<_1e65e8314_Range16>();
	jule::Slice<_1e65e8787_Range32> _field_R32 = jule::Slice<_1e65e8787_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_1e65e8c0a_RangeTable(void) = default;

	inline bool operator==(_1e65e8c0a_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_1e65e8c0a_RangeTable _other) { return !this->operator==(_other); }


};
struct _1e66adee0_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1e66adee0_acceptRange(void) = default;

	inline bool operator==(_1e66adee0_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1e66adee0_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e570e8c1_index(_1e66b701a_lazyBuff*, jule::I64);
inline void _1e57100ca_append(_1e66b701a_lazyBuff*, jule::U8);
inline jule::Str _1e5712b7c_string(_1e66b701a_lazyBuff*);
struct _1e66b701a_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_1e66b701a_lazyBuff(void) = default;

	inline bool operator==(_1e66b701a_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_1e66b701a_lazyBuff _other) { return !this->operator==(_other); }


};
struct _1e49337e9_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_1e56328e3_Status> _field_Stat = jule::Ptr<_1e56328e3_Status>();
	

	_1e49337e9_DirEntry(void) = default;

	inline bool operator==(_1e49337e9_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1e49337e9_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>> static__1e568c8a4_Read(jule::Str);
inline jule::VoidExceptional static__1e569977e_Create(jule::Str);
inline jule::VoidExceptional static__1e567653b_Remove(jule::Str);
struct _1e4935532_Directory {
	

	_1e4935532_Directory(void) = default;

	inline bool operator==(_1e4935532_Directory _other) { return true; }

	inline bool operator!=(_1e4935532_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e563252a_File>> static__1e4887099_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1e4887dd0_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1e488995e_Write(_1e563252a_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1e488a443_Read(_1e563252a_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1e563252a_File> static__1e4934344_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1e563252a_File>> static__1e4934520_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1e49365aa_Read(jule::Str);
inline jule::VoidExceptional static__1e493719e_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1e49384be_Seek(_1e563252a_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1e493571e_Close(_1e563252a_File*);
struct _1e563252a_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1e563252a_File(void) = default;

	inline bool operator==(_1e563252a_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1e563252a_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e56328e3_Status>> static__1e488bac6_Of(jule::Str);
inline jule::Bool _1e4884b02_IsDir(_1e56328e3_Status*);
inline jule::Bool _1e4885163_IsReg(_1e56328e3_Status*);
struct _1e56328e3_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_1e56328e3_Status(void) = default;

	inline bool operator==(_1e56328e3_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e56328e3_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6786408_Cmd> static__1e6786837_New(jule::Str);
inline jule::Exceptional<jule::I64> _1e6786a9b_Spawn(_1e6786408_Cmd*);
inline jule::Exceptional<jule::I64> _1e6789a05_spawn(_1e6786408_Cmd*);
struct _1e6786408_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_1e6786408_Cmd(void) = default;

	inline bool operator==(_1e6786408_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_1e6786408_Cmd _other) { return !this->operator==(_other); }


};
struct _1e6735e35_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_1e6735e35_Log(void) = default;

	inline bool operator==(_1e6735e35_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1e6735e35_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e6a5cba7_Prec(_1e6a5c800_Token*);
struct _1e6a5c800_Token {
	jule::Ptr<_1e6a62b8a_File> _field_File = jule::Ptr<_1e6a62b8a_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1e6a5c800_Token(void) = default;

	inline bool operator==(_1e6a5c800_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1e6a5c800_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6a63097_IsOk(_1e6a62b8a_File*);
inline void _1e6a6331c_Fill(_1e6a62b8a_File*, jule::Slice<jule::U8>);
inline jule::Str _1e6a63581_Dir(_1e6a62b8a_File*);
inline jule::Str _1e6a637e5_Name(_1e6a62b8a_File*);
inline jule::Uintptr _1e6a63a59_Addr(_1e6a62b8a_File*);
inline jule::Str _1e6a63d67_GetRow(_1e6a62b8a_File*, jule::I64);
struct _1e6a62b8a_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	

	_1e6a62b8a_File(void) = default;

	inline bool operator==(_1e6a62b8a_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1e6a62b8a_File _other) { return !this->operator==(_other); }


};
struct _1e6a64be2_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1e6a64be2_kindPair(void) = default;

	inline bool operator==(_1e6a64be2_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1e6a64be2_kindPair _other) { return !this->operator==(_other); }


};
inline void _1e6a6ad80_pushErr(_1e6a6a7db_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1e6a6b19e_pushErrTok(_1e6a6a7db_lex*, jule::Ptr<_1e6a5c800_Token>&, jule::Str);
inline void _1e6a6b37a_lex(_1e6a6a7db_lex*);
inline jule::Str _1e6a6b688_id(_1e6a6a7db_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e6a6b8ec_resume(_1e6a6a7db_lex*);
inline void _1e6a6bb72_lexLineComment(_1e6a6a7db_lex*, jule::Ptr<_1e6a5c800_Token>&);
inline void _1e6a6bde7_lexRangeComment(_1e6a6a7db_lex*, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Str _1e6a6c205_num(_1e6a6a7db_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e6a6c513_escapeSeq(_1e6a6a7db_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e6a6c8ba_getRune(_1e6a6a7db_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1e6a6cbc8_lexRune(_1e6a6a7db_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e6a6ce3c_lexStr(_1e6a6a7db_lex*);
inline jule::Bool _1e6a6d1a1_isFirstTokenOfLine(_1e6a6a7db_lex*);
inline void _1e6a6d37c_newLine(_1e6a6a7db_lex*);
inline jule::Bool _1e6a6d877_isOp(_1e6a6a7db_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1e6a6dc2e_lexBasicOps(_1e6a6a7db_lex*, jule::Slice<jule::U8>, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1e6a6e0d6_lexId(_1e6a6a7db_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1e6a6e48d_lexNum(_1e6a6a7db_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1e6a5c800_Token> _1e6a6e702_token(_1e6a6a7db_lex*);
struct _1e6a6a7db_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Ptr<_1e6a62b8a_File> _field_file = jule::Ptr<_1e6a62b8a_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1e6735e35_Log> _field_errors = jule::Slice<_1e6735e35_Log>();
	

	_1e6a6a7db_lex(void) = default;

	inline bool operator==(_1e6a6a7db_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e6a6a7db_lex _other) { return !this->operator==(_other); }


};
struct _1b3916a1c_Ast {
	jule::Ptr<_1e6a62b8a_File> _field_File = jule::Ptr<_1e6a62b8a_File>();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Slice<jule::Ptr<_1b3963d66_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1b3963d66_UseDecl>>();
	jule::Slice<_1b3917732_Node> _field_Nodes = jule::Slice<_1b3917732_Node>();
	

	_1b3916a1c_Ast(void) = default;

	inline bool operator==(_1b3916a1c_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1b3916a1c_Ast _other) { return !this->operator==(_other); }


};
struct _1b3917732_Node {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1b3917732_Node(void) = default;

	inline bool operator==(_1b3917732_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b3917732_Node _other) { return !this->operator==(_other); }


};
struct _1b3917b2d_Directive {
	jule::Ptr<_1e6a5c800_Token> _field_Tag = jule::Ptr<_1e6a5c800_Token>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Args = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	

	_1b3917b2d_Directive(void) = default;

	inline bool operator==(_1b3917b2d_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1b3917b2d_Directive _other) { return !this->operator==(_other); }


};
struct _1b394b326_TypeDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1b394b326_TypeDecl(void) = default;

	inline bool operator==(_1b394b326_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b394b326_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b394bc50_IsPrim(_1b394b8dc_IdentTypeDecl*);
struct _1b394b8dc_IdentTypeDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>();
	

	_1b394b8dc_IdentTypeDecl(void) = default;

	inline bool operator==(_1b394b8dc_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1b394b8dc_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394c03b_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b394b8dc_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1b394b8dc_IdentTypeDecl>>();
	

	_1b394c03b_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1b394c03b_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1b394c03b_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394c3e3_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b394c3e3_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1b394c3e3_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b394c3e3_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394c6ce_SptrTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Elem = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b394c6ce_SptrTypeDecl(void) = default;

	inline bool operator==(_1b394c6ce_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b394c6ce_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394caca_SlcTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Elem = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b394caca_SlcTypeDecl(void) = default;

	inline bool operator==(_1b394caca_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b394caca_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394cdb6_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>();
	

	_1b394cdb6_TupleTypeDecl(void) = default;

	inline bool operator==(_1b394cdb6_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1b394cdb6_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b394d504_IsUnsafe(_1b394d1a2_PtrTypeDecl*);
struct _1b394d1a2_PtrTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Elem = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b394d1a2_PtrTypeDecl(void) = default;

	inline bool operator==(_1b394d1a2_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b394d1a2_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b394dc0d_AutoSized(_1b394d834_ArrTypeDecl*);
struct _1b394d834_ArrTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Elem = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b3950847_Expr> _field_Size = jule::Ptr<_1b3950847_Expr>();
	

	_1b394d834_ArrTypeDecl(void) = default;

	inline bool operator==(_1b394d834_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1b394d834_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394e082_MapTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Key = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Val = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b394e082_MapTypeDecl(void) = default;

	inline bool operator==(_1b394e082_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b394e082_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b394e439_RetTypeDecl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	

	_1b394e439_RetTypeDecl(void) = default;

	inline bool operator==(_1b394e439_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1b394e439_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b3950847_Expr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1b3950847_Expr(void) = default;

	inline bool operator==(_1b3950847_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b3950847_Expr _other) { return !this->operator==(_other); }


};
struct _1b3950b33_RangeExpr {
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3950b33_RangeExpr(void) = default;

	inline bool operator==(_1b3950b33_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3950b33_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1b39511d8_UseExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b39511d8_UseExpr(void) = default;

	inline bool operator==(_1b39511d8_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b39511d8_UseExpr _other) { return !this->operator==(_other); }


};
struct _1b39514c4_TupleExpr {
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	

	_1b39514c4_TupleExpr(void) = default;

	inline bool operator==(_1b39514c4_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b39514c4_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3951bcd_IsNil(_1b395187b_LitExpr*);
struct _1b395187b_LitExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1b395187b_LitExpr(void) = default;

	inline bool operator==(_1b395187b_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b395187b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1b3952085_UnsafeExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3952085_UnsafeExpr(void) = default;

	inline bool operator==(_1b3952085_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3952085_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1b395243c_CoExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b395243c_CoExpr(void) = default;

	inline bool operator==(_1b395243c_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b395243c_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3952c12_IsSelf(_1b39528b0_IdentExpr*);
struct _1b39528b0_IdentExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1b39528b0_IdentExpr(void) = default;

	inline bool operator==(_1b39528b0_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1b39528b0_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1b39530b9_UnaryExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Op = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b39530b9_UnaryExpr(void) = default;

	inline bool operator==(_1b39530b9_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b39530b9_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1b3953471_VariadicExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3953471_VariadicExpr(void) = default;

	inline bool operator==(_1b3953471_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3953471_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1b3953828_CastExpr {
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3953828_CastExpr(void) = default;

	inline bool operator==(_1b3953828_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3953828_CastExpr _other) { return !this->operator==(_other); }


};
struct _1b3953bd0_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Ns = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Ptr<_1e6a5c800_Token> _field_Ident = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3953bd0_NsSelectionExpr(void) = default;

	inline bool operator==(_1b3953bd0_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b3953bd0_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1b3954153_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1e6a5c800_Token> _field_Ident = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3954153_SubIdentExpr(void) = default;

	inline bool operator==(_1b3954153_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b3954153_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1b39545c6_BinopExpr {
	jule::Ptr<_1b3950847_Expr> _field_Left = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b3950847_Expr> _field_Right = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1e6a5c800_Token> _field_Op = jule::Ptr<_1e6a5c800_Token>();
	

	_1b39545c6_BinopExpr(void) = default;

	inline bool operator==(_1b39545c6_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b39545c6_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3954e78_Unhandled(_1b3954b15_FnCallExpr*);
inline jule::Bool _1b39551dc_Ignored(_1b3954b15_FnCallExpr*);
struct _1b3954b15_FnCallExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Args = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Exception = jule::Ptr<_1b395b644_ScopeTree>();
	

	_1b3954b15_FnCallExpr(void) = default;

	inline bool operator==(_1b3954b15_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1b3954b15_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b39558e6_IsTargeted(_1b3955594_FieldExprPair*);
struct _1b3955594_FieldExprPair {
	jule::Ptr<_1e6a5c800_Token> _field_Field = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3955594_FieldExprPair(void) = default;

	inline bool operator==(_1b3955594_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3955594_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1b3955ce2_StructLit {
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	

	_1b3955ce2_StructLit(void) = default;

	inline bool operator==(_1b3955ce2_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1b3955ce2_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b39568d6_IsEmpty(_1b3956265_BraceLit*);
struct _1b3956265_BraceLit {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	

	_1b3956265_BraceLit(void) = default;

	inline bool operator==(_1b3956265_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1b3956265_BraceLit _other) { return !this->operator==(_other); }


};
struct _1b3956c7c_KeyValPair {
	jule::Ptr<_1b3950847_Expr> _field_Key = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b3950847_Expr> _field_Val = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1e6a5c800_Token> _field_Colon = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3956c7c_KeyValPair(void) = default;

	inline bool operator==(_1b3956c7c_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1b3956c7c_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3957552_IsEmpty(_1b3957200_SliceExpr*);
struct _1b3957200_SliceExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	

	_1b3957200_SliceExpr(void) = default;

	inline bool operator==(_1b3957200_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1b3957200_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1b3957a91_IndexingExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b3950847_Expr> _field_Index = jule::Ptr<_1b3950847_Expr>();
	

	_1b3957a91_IndexingExpr(void) = default;

	inline bool operator==(_1b3957a91_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b3957a91_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1b395819b_SlicingExpr {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b3950847_Expr> _field_Start = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b3950847_Expr> _field_To = jule::Ptr<_1b3950847_Expr>();
	

	_1b395819b_SlicingExpr(void) = default;

	inline bool operator==(_1b395819b_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1b395819b_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1b3958487_Constraint {
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>();
	

	_1b3958487_Constraint(void) = default;

	inline bool operator==(_1b3958487_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1b3958487_Constraint _other) { return !this->operator==(_other); }


};
struct _1b395890a_GenericDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b3958487_Constraint> _field_Constraint = jule::Ptr<_1b3958487_Constraint>();
	

	_1b395890a_GenericDecl(void) = default;

	inline bool operator==(_1b395890a_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1b395890a_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1b3958cb2_LabelSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1b3958cb2_LabelSt(void) = default;

	inline bool operator==(_1b3958cb2_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b3958cb2_LabelSt _other) { return !this->operator==(_other); }


};
struct _1b3959169_GotoSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_Label = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3959169_GotoSt(void) = default;

	inline bool operator==(_1b3959169_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b3959169_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b3959455_FallSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3959455_FallSt(void) = default;

	inline bool operator==(_1b3959455_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1b3959455_FallSt _other) { return !this->operator==(_other); }


};
struct _1b3959a60_AssignLeft {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b3959a60_AssignLeft(void) = default;

	inline bool operator==(_1b3959a60_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b3959a60_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1b395a09e_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1e6a5c800_Token> _field_Setter = jule::Ptr<_1e6a5c800_Token>();
	jule::Slice<jule::Ptr<_1b3959a60_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1b3959a60_AssignLeft>>();
	jule::Ptr<_1b3950847_Expr> _field_Right = jule::Ptr<_1b3950847_Expr>();
	

	_1b395a09e_AssignSt(void) = default;

	inline bool operator==(_1b395a09e_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b395a09e_AssignSt _other) { return !this->operator==(_other); }


};
struct _1b395b039_Stmt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1b395b039_Stmt(void) = default;

	inline bool operator==(_1b395b039_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b395b039_Stmt _other) { return !this->operator==(_other); }


};
struct _1b395b644_ScopeTree {
	jule::Ptr<_1b395b644_ScopeTree> _field_Parent = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1b395b039_Stmt> _field_Stmts = jule::Slice<_1b395b039_Stmt>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	

	_1b395b644_ScopeTree(void) = default;

	inline bool operator==(_1b395b644_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1b395b644_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b395c17d_IsSelf(_1b395bd1a_ParamDecl*);
inline jule::Bool _1b395c3e2_IsRef(_1b395bd1a_ParamDecl*);
struct _1b395bd1a_ParamDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1b395bd1a_ParamDecl(void) = default;

	inline bool operator==(_1b395bd1a_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b395bd1a_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b395d48c_IsAnon(_1b395d13a_FnDecl*);
struct _1b395d13a_FnDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	jule::Ptr<_1b394e439_RetTypeDecl> _field_Result = jule::Ptr<_1b394e439_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>>();
	

	_1b395d13a_FnDecl(void) = default;

	inline bool operator==(_1b395d13a_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1b395d13a_FnDecl _other) { return !this->operator==(_other); }


};
struct _1b395e119_VarDecl {
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b395e119_VarDecl(void) = default;

	inline bool operator==(_1b395e119_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b395e119_VarDecl _other) { return !this->operator==(_other); }


};
struct _1b395e4c1_RetSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b395e4c1_RetSt(void) = default;

	inline bool operator==(_1b395e4c1_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b395e4c1_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b395ee83_IsInf(_1b395eb31_Iter*);
struct _1b395eb31_Iter {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	

	_1b395eb31_Iter(void) = default;

	inline bool operator==(_1b395eb31_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b395eb31_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3960758_IsWhileNext(_1b3960406_WhileKind*);
struct _1b3960406_WhileKind {
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1e6a5c800_Token> _field_NextToken = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3960406_WhileKind(void) = default;

	inline bool operator==(_1b3960406_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1b3960406_WhileKind _other) { return !this->operator==(_other); }


};
struct _1b3960c97_RangeKind {
	jule::Ptr<_1e6a5c800_Token> _field_InToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b395e119_VarDecl> _field_KeyA = jule::Ptr<_1b395e119_VarDecl>();
	jule::Ptr<_1b395e119_VarDecl> _field_KeyB = jule::Ptr<_1b395e119_VarDecl>();
	

	_1b3960c97_RangeKind(void) = default;

	inline bool operator==(_1b3960c97_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b3960c97_RangeKind _other) { return !this->operator==(_other); }


};
struct _1b396114e_BreakSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_Label = jule::Ptr<_1e6a5c800_Token>();
	

	_1b396114e_BreakSt(void) = default;

	inline bool operator==(_1b396114e_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b396114e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b3961506_ContSt {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_Label = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3961506_ContSt(void) = default;

	inline bool operator==(_1b3961506_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b3961506_ContSt _other) { return !this->operator==(_other); }


};
struct _1b3961979_If {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	

	_1b3961979_If(void) = default;

	inline bool operator==(_1b3961979_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b3961979_If _other) { return !this->operator==(_other); }


};
struct _1b3961d31_Else {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	

	_1b3961d31_Else(void) = default;

	inline bool operator==(_1b3961d31_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b3961d31_Else _other) { return !this->operator==(_other); }


};
struct _1b39622a4_Conditional {
	jule::Ptr<_1b3961979_If> _field_Head = jule::Ptr<_1b3961979_If>();
	jule::Slice<jule::Ptr<_1b3961979_If>> _field_Tail = jule::Slice<jule::Ptr<_1b3961979_If>>();
	jule::Ptr<_1b3961d31_Else> _field_Default = jule::Ptr<_1b3961d31_Else>();
	

	_1b39622a4_Conditional(void) = default;

	inline bool operator==(_1b39622a4_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b39622a4_Conditional _other) { return !this->operator==(_other); }


};
struct _1b396297a_TypeAliasDecl {
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b396297a_TypeAliasDecl(void) = default;

	inline bool operator==(_1b396297a_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b396297a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1b3962ded_Case {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	

	_1b3962ded_Case(void) = default;

	inline bool operator==(_1b3962ded_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1b3962ded_Case _other) { return !this->operator==(_other); }


};
struct _1b39635c4_MatchCase {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Slice<jule::Ptr<_1b3962ded_Case>> _field_Cases = jule::Slice<jule::Ptr<_1b3962ded_Case>>();
	jule::Ptr<_1b3961d31_Else> _field_Default = jule::Ptr<_1b3961d31_Else>();
	

	_1b39635c4_MatchCase(void) = default;

	inline bool operator==(_1b39635c4_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b39635c4_MatchCase _other) { return !this->operator==(_other); }


};
struct _1b3963d66_UseDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Selected = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1b3963d66_UseDecl(void) = default;

	inline bool operator==(_1b3963d66_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1b3963d66_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b396463b_AutoExpr(_1b39642d9_EnumItemDecl*);
struct _1b39642d9_EnumItemDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	

	_1b39642d9_EnumItemDecl(void) = default;

	inline bool operator==(_1b39642d9_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b39642d9_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b3965395_DefaultTyped(_1b3964d12_EnumDecl*);
struct _1b3964d12_EnumDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3964d12_EnumDecl(void) = default;

	inline bool operator==(_1b3964d12_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1b3964d12_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1b3965818_TypeEnumItemDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1b3965818_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1b3965818_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b3965818_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b3965a16_TypeEnumDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	

	_1b3965a16_TypeEnumDecl(void) = default;

	inline bool operator==(_1b3965a16_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1b3965a16_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1b3966066_FieldDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1b394b326_TypeDecl> _field_Kind = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b3950847_Expr> _field_Default = jule::Ptr<_1b3950847_Expr>();
	

	_1b3966066_FieldDecl(void) = default;

	inline bool operator==(_1b3966066_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b3966066_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1b39668c4_StructDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b3966066_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1b3966066_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	

	_1b39668c4_StructDecl(void) = default;

	inline bool operator==(_1b39668c4_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1b39668c4_StructDecl _other) { return !this->operator==(_other); }


};
struct _1b3966ece_TraitDecl {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1b395d13a_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1b395d13a_FnDecl>>();
	

	_1b3966ece_TraitDecl(void) = default;

	inline bool operator==(_1b3966ece_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1b3966ece_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b396794c_IsTraitImpl(_1b39675d9_Impl*);
inline jule::Bool _1b3967bb1_IsStructImpl(_1b39675d9_Impl*);
struct _1b39675d9_Impl {
	jule::Ptr<_1e6a5c800_Token> _field_End = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Base = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Dest = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Slice<jule::Ptr<_1b395d13a_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1b395d13a_FnDecl>>();
	jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1b395e119_VarDecl>>();
	

	_1b39675d9_Impl(void) = default;

	inline bool operator==(_1b39675d9_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1b39675d9_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9956c86_Const> static__1a99abd0d_NewI64(jule::I64);
inline jule::Ptr<_1a9956c86_Const> static__1a99abe40_NewU64(jule::U64);
inline jule::Ptr<_1a9956c86_Const> static__1a99ac0c7_NewBool(jule::Bool);
inline jule::Ptr<_1a9956c86_Const> static__1a99ac36e_NewStr(jule::Str);
inline jule::Ptr<_1a9956c86_Const> static__1a99ac616_NewF64(jule::F64);
inline jule::Ptr<_1a9956c86_Const> static__1a99ac814_NewNil(void);
inline jule::I64 _1a99ace0d_ReadI64(_1a9956c86_Const*);
inline jule::U64 _1a99ad172_ReadU64(_1a9956c86_Const*);
inline jule::Bool _1a99ad3d6_ReadBool(_1a9956c86_Const*);
inline jule::Str _1a99ad64a_ReadStr(_1a9956c86_Const*);
inline jule::F64 _1a99ad8ae_ReadF64(_1a9956c86_Const*);
inline jule::I64 _1a99adb23_AsI64(_1a9956c86_Const*);
inline jule::U64 _1a99add87_AsU64(_1a9956c86_Const*);
inline jule::F64 _1a99ae0eb_AsF64(_1a9956c86_Const*);
inline void _1a99ae371_SetI64(_1a9956c86_Const*, jule::I64);
inline void _1a99ae5e6_SetU64(_1a9956c86_Const*, jule::U64);
inline void _1a99ae86b_SetBool(_1a9956c86_Const*, jule::Bool);
inline void _1a99aeae1_SetStr(_1a9956c86_Const*, jule::Str);
inline void _1a99aed66_SetF64(_1a9956c86_Const*, jule::F64);
inline void _1a99b0042_SetNil(_1a9956c86_Const*);
inline jule::Bool _1a99b02a6_IsI64(_1a9956c86_Const*);
inline jule::Bool _1a99b051a_IsU64(_1a9956c86_Const*);
inline jule::Bool _1a99b077e_IsBool(_1a9956c86_Const*);
inline jule::Bool _1a99b09e3_IsStr(_1a9956c86_Const*);
inline jule::Bool _1a99b0c57_IsF64(_1a9956c86_Const*);
inline jule::Bool _1a99b0ebb_IsNil(_1a9956c86_Const*);
inline jule::Bool _1a99b12c9_AreSameTypes(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b15d7_And(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b18e5_Or(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b1c03_Eq(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b2011_Lt(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b231e_LtEq(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b262c_Gt(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b293a_GtEq(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b2c48_Add(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b3056_Sub(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b3364_Mul(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b3672_Div(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b3980_Mod(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b3c8d_BitwiseAnd(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b409b_BitwiseOr(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b43a9_Xor(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b46b7_Lshift(_1a9956c86_Const*, _1a9956c86_Const);
inline jule::Bool _1a99b49c5_Rshift(_1a9956c86_Const*, _1a9956c86_Const);
struct _1a9956c86_Const {
	jule::Any _field_data = jule::Any();
	

	_1a9956c86_Const(void) = default;

	inline jule::Bool operator==(_1a9956c86_Const _other) { return _1a99b1c03_Eq(this, _other); }

	inline bool operator!=(_1a9956c86_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a9956c86_Const _other) { return _1a99b262c_Gt(this, _other); }

	inline jule::Bool operator>=(_1a9956c86_Const _other) { return _1a99b293a_GtEq(this, _other); }

	inline jule::Bool operator<(_1a9956c86_Const _other) { return _1a99b2011_Lt(this, _other); }

	inline jule::Bool operator<=(_1a9956c86_Const _other) { return _1a99b231e_LtEq(this, _other); }


};
struct _1ac106026_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1ac106026_floatInfo(void) = default;

	inline bool operator==(_1ac106026_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ac106026_floatInfo _other) { return !this->operator==(_other); }


};
struct _1ac106510_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1ac106510_decimalSlice(void) = default;

	inline bool operator==(_1ac106510_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1ac106510_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1ac116e38_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1ac116e38_leftCheat(void) = default;

	inline bool operator==(_1ac116e38_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ac116e38_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac10e815_set(_1ac117950_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1ac10eb23_floatBits(_1ac117950_decimal*, _1ac106026_floatInfo&);
inline void _1ac117d29_assign(_1ac117950_decimal*, jule::U64);
inline void _1ac11809e_shift(_1ac117950_decimal*, jule::I64);
inline void _1ac118324_roundDown(_1ac117950_decimal*, jule::I64);
inline void _1ac118599_roundUp(_1ac117950_decimal*, jule::I64);
inline void _1ac11881e_round(_1ac117950_decimal*, jule::I64);
inline jule::U64 _1ac118a83_roundedInteger(_1ac117950_decimal*);
struct _1ac117950_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1ac117950_decimal(void) = default;

	inline bool operator==(_1ac117950_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ac117950_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b3944154_FieldIns> _1b391cced_instance(jule::Ptr<_1b392dea7_Field>);
struct _1b392dea7_Field {
	jule::Ptr<_1b393b9dc_Struct> _field_Owner = jule::Ptr<_1b393b9dc_Struct>();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Ptr<_1b3950847_Expr> _field_Default = jule::Ptr<_1b3950847_Expr>();
	

	_1b392dea7_Field(void) = default;

	inline bool operator==(_1b392dea7_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b392dea7_Field _other) { return !this->operator==(_other); }


};
struct _1b393d417_Operators {
	jule::Ptr<_1a99c03b5_FnIns> _field_Eq = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Gt = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_GtEq = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Lt = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_LtEq = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Shl = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Shr = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Add = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Sub = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Div = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Mul = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Mod = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitAnd = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitOr = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitXor = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Neg = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Pos = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitNot = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_AddAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_SubAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_DivAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_MulAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_ModAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_ShlAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_ShrAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitOrAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitAndAssign = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99c03b5_FnIns> _field_BitXorAssign = jule::Ptr<_1a99c03b5_FnIns>();
	

	_1b393d417_Operators(void) = default;

	inline bool operator==(_1b393d417_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1b393d417_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b3967d9d_StructIns> _1b3923de2_instance(jule::Ptr<_1b393b9dc_Struct>);
inline jule::Ptr<_1b3967d9d_StructIns> _1b392815a_appendInstance(_1b393b9dc_Struct*, jule::Ptr<_1b3967d9d_StructIns>&);
inline jule::Ptr<_1a99bc714_Fn> _1b392ae0a_FindMethod(_1b393b9dc_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac17c960_Var> _1b392be1c_FindStatic(_1b393b9dc_Struct*, jule::Str);
inline jule::Ptr<_1b392dea7_Field> _1b392b35b_FindField(_1b393b9dc_Struct*, jule::Str);
inline jule::Bool _1b392d638_IsImplements(_1b393b9dc_Struct*, jule::Ptr<_1b2551bec_Trait>);
inline jule::Bool _1b392ca44_IsDerives(_1b393b9dc_Struct*, jule::Str);
inline jule::Bool _1b39317e5_IsUses(_1b393b9dc_Struct*, jule::Ptr<_1b393b9dc_Struct>);
inline jule::Bool _1b3931eaa_HasRefAccessible(_1b393b9dc_Struct*);
struct _1b393b9dc_Struct {
	jule::Ptr<_1ac15b224_Sema> _field_sema = jule::Ptr<_1ac15b224_Sema>();
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1b393b9dc_Struct>>();
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1b393b9dc_Struct>>();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b392dea7_Field>> _field_Fields = jule::Slice<jule::Ptr<_1b392dea7_Field>>();
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a99bc714_Fn>>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Statics = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1b2551bec_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1b2551bec_Trait>>();
	jule::Slice<jule::Ptr<_1b3967d9d_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1b3967d9d_StructIns>>();
	

	_1b393b9dc_Struct(void) = default;

	inline bool operator==(_1b393b9dc_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1b393b9dc_Struct _other) { return !this->operator==(_other); }


};
struct _1b3944154_FieldIns {
	jule::Ptr<_1b392dea7_Field> _field_Decl = jule::Ptr<_1b392dea7_Field>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Default = jule::Ptr<_1ac1c4bb6_Data>();
	

	_1b3944154_FieldIns(void) = default;

	inline bool operator==(_1b3944154_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b3944154_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a99b529a_OperandExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1a99b529a_OperandExprModel(void) = default;

	inline bool operator==(_1a99b529a_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a99b529a_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5487_BinopExprModel {
	jule::Ptr<_1a99b529a_OperandExprModel> _field_Left = jule::Ptr<_1a99b529a_OperandExprModel>();
	jule::Ptr<_1a99b529a_OperandExprModel> _field_Right = jule::Ptr<_1a99b529a_OperandExprModel>();
	jule::Ptr<_1e6a5c800_Token> _field_Op = jule::Ptr<_1e6a5c800_Token>();
	

	_1a99b5487_BinopExprModel(void) = default;

	inline bool operator==(_1a99b5487_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a99b5487_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5674_UnaryExprModel {
	jule::Ptr<_1ac1c4bb6_Data> _field_Expr = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1e6a5c800_Token> _field_Op = jule::Ptr<_1e6a5c800_Token>();
	

	_1a99b5674_UnaryExprModel(void) = default;

	inline bool operator==(_1a99b5674_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a99b5674_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5861_StructArgExprModel {
	jule::Ptr<_1b3944154_FieldIns> _field_Field = jule::Ptr<_1b3944154_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1a99b5861_StructArgExprModel(void) = default;

	inline bool operator==(_1a99b5861_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b5861_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5a4d_StructLitExprModel {
	jule::Ptr<_1b3967d9d_StructIns> _field_Strct = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Slice<jule::Ptr<_1a99b5861_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1a99b5861_StructArgExprModel>>();
	

	_1a99b5a4d_StructLitExprModel(void) = default;

	inline bool operator==(_1a99b5a4d_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1a99b5a4d_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5c3a_AllocStructLitExprModel {
	jule::Ptr<_1a99b5a4d_StructLitExprModel> _field_Lit = jule::Ptr<_1a99b5a4d_StructLitExprModel>();
	

	_1a99b5c3a_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a99b5c3a_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a99b5c3a_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b5e27_CastingExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_ExprKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a99b5e27_CastingExprModel(void) = default;

	inline bool operator==(_1a99b5e27_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a99b5e27_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b6114_FnCallExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Func = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1ac1346e7_Scope> _field_Except = jule::Ptr<_1ac1346e7_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1a99b6114_FnCallExprModel(void) = default;

	inline bool operator==(_1a99b6114_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1a99b6114_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b6301_SliceExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_ElemKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1a99b6301_SliceExprModel(void) = default;

	inline bool operator==(_1a99b6301_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a99b6301_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b64dd_IndexingExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Expr = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Index = jule::Ptr<_1ac1c4bb6_Data>();
	

	_1a99b64dd_IndexingExprModel(void) = default;

	inline bool operator==(_1a99b64dd_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a99b64dd_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b66ca_AnonFnExprModel {
	jule::Ptr<_1a99c03b5_FnIns> _field_Func = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1a99b66ca_AnonFnExprModel(void) = default;

	inline bool operator==(_1a99b66ca_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1a99b66ca_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b68b7_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1a99b68b7_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a99b68b7_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a99b68b7_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b6aa4_MapExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_KeyKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_ValKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Slice<jule::Ptr<_1a99b68b7_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1a99b68b7_KeyValPairExprModel>>();
	

	_1a99b6aa4_MapExprModel(void) = default;

	inline bool operator==(_1a99b6aa4_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1a99b6aa4_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b6c91_SlicingExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1a99b6c91_SlicingExprModel(void) = default;

	inline bool operator==(_1a99b6c91_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a99b6c91_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b6e7d_TraitSubIdentExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a99bc714_Fn> _field_Method = jule::Ptr<_1a99bc714_Fn>();
	jule::Ptr<_1b2551bec_Trait> _field_Trt = jule::Ptr<_1b2551bec_Trait>();
	

	_1a99b6e7d_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a99b6e7d_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a99b6e7d_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b739b_StructSubIdentExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Expr = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_ExprKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1a99c03b5_FnIns> _field_Method = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1b3944154_FieldIns> _field_Field = jule::Ptr<_1b3944154_FieldIns>();
	

	_1a99b739b_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a99b739b_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field;
	}

	inline bool operator!=(_1a99b739b_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b7588_StructStaticIdentExprModel {
	jule::Ptr<_1b3967d9d_StructIns> _field_Structure = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a99c03b5_FnIns> _field_Method = jule::Ptr<_1a99c03b5_FnIns>();
	

	_1a99b7588_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a99b7588_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a99b7588_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b7775_ArrayExprModel {
	jule::Ptr<_1a9a109ee_Arr> _field_Kind = jule::Ptr<_1a9a109ee_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1a99b7775_ArrayExprModel(void) = default;

	inline bool operator==(_1a99b7775_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a99b7775_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b7962_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1a99b7962_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a99b7962_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a99b7962_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b7b4e_CommonSubIdentExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_ExprKind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1a99b7b4e_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a99b7b4e_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a99b7b4e_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b7d3b_TupleExprModel {
	jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _field_Datas = jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>();
	

	_1a99b7d3b_TupleExprModel(void) = default;

	inline bool operator==(_1a99b7d3b_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1a99b7d3b_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b8028_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1a99b8028_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a99b8028_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a99b8028_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b8215_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1a99b8215_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a99b8215_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a99b8215_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b8402_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a99b8402_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a99b8402_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b8402_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b85de_BuiltinNewCallExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1a99b85de_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a99b85de_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a99b85de_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b87cb_BuiltinPanicCallExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1a99b87cb_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a99b87cb_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b87cb_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b89b8_BuiltinAssertCallExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1a99b89b8_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a99b89b8_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a99b89b8_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b8ba5_BuiltinMakeCallExprModel {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1a99b8ba5_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a99b8ba5_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a99b8ba5_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b8d92_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1a99b8d92_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a99b8d92_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a99b8d92_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b907e_BuiltinCopyCallExprModel {
	jule::Ptr<_1ac1c4bb6_Data> _field_Dest = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Src = jule::Ptr<_1ac1c4bb6_Data>();
	

	_1a99b907e_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1a99b907e_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a99b907e_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b926b_BuiltinErrorCallExprModel {
	jule::Ptr<_1a99c03b5_FnIns> _field_Func = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1a99b926b_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a99b926b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a99b926b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b716a_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a99b716a_SizeofExprModel(void) = default;

	inline bool operator==(_1a99b716a_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b716a_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b98cb_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a99b98cb_AlignofExprModel(void) = default;

	inline bool operator==(_1a99b98cb_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b98cb_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b9ab8_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1a99b9ab8_RuneExprModel(void) = default;

	inline bool operator==(_1a99b9ab8_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a99b9ab8_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b9ca5_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a99b9ca5_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a99b9ca5_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99b9ca5_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a99b9e92_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1a99b9e92_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a99b9e92_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1a99b9e92_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a99ba17e_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1a99ba17e_FreeExprModel(void) = default;

	inline bool operator==(_1a99ba17e_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a99ba17e_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a99ba712_RetType {
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Idents = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	

	_1a99ba712_RetType(void) = default;

	inline bool operator==(_1a99ba712_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1a99ba712_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a99be4e6_ParamIns> _1a99bb290_instance(jule::Ptr<_1a99badc7_Param>);
inline jule::Bool _1a99bb504_IsSelf(_1a99badc7_Param*);
inline jule::Bool _1a99bb768_IsRef(_1a99badc7_Param*);
struct _1a99badc7_Param {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1a99badc7_Param(void) = default;

	inline bool operator==(_1a99badc7_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a99badc7_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a99bcb76_IsVoid(_1a99bc714_Fn*);
inline jule::Bool _1a99bcdda_IsMethod(_1a99bc714_Fn*);
inline jule::Bool _1a99bd14e_IsEntryPoint(_1a99bc714_Fn*);
inline jule::Bool _1a99bd3b3_IsInit(_1a99bc714_Fn*);
inline jule::Bool _1a99bd627_IsAnon(_1a99bc714_Fn*);
inline jule::Bool _1a99bd88b_AnyVar(_1a99bc714_Fn*);
inline jule::Ptr<_1a99c03b5_FnIns> _1a99bdb00_instanceForce(jule::Ptr<_1a99bc714_Fn>);
inline jule::Ptr<_1a99c03b5_FnIns> _1a99bdd64_instance(jule::Ptr<_1a99bc714_Fn>);
inline jule::Ptr<_1a99c03b5_FnIns> _1a99be13e_appendInstance(_1a99bc714_Fn*, jule::Ptr<_1a99c03b5_FnIns>&);
struct _1a99bc714_Fn {
	jule::Ptr<_1ac15b224_Sema> _field_sema = jule::Ptr<_1ac15b224_Sema>();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	jule::Ptr<_1a99ba712_RetType> _field_Result = jule::Ptr<_1a99ba712_RetType>();
	jule::Slice<jule::Ptr<_1a99badc7_Param>> _field_Params = jule::Slice<jule::Ptr<_1a99badc7_Param>>();
	jule::Ptr<_1b393b9dc_Struct> _field_Owner = jule::Ptr<_1b393b9dc_Struct>();
	jule::Slice<jule::Ptr<_1a99c03b5_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1a99c03b5_FnIns>>();
	

	_1a99bc714_Fn(void) = default;

	inline bool operator==(_1a99bc714_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1a99bc714_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a99be8c0_Str(_1a99be4e6_ParamIns*);
struct _1a99be4e6_ParamIns {
	jule::Ptr<_1a99badc7_Param> _field_Decl = jule::Ptr<_1a99badc7_Param>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a99be4e6_ParamIns(void) = default;

	inline bool operator==(_1a99be4e6_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a99be4e6_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a99c06e5_Str(_1a99c03b5_FnIns*);
inline jule::Bool _1a99c0a03_Equals(jule::Ptr<_1a99c03b5_FnIns>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1a99c0e65_EqualsFn(jule::Ptr<_1a99c03b5_FnIns>, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Bool _1a99c1273_equalsTrait(jule::Ptr<_1a99c03b5_FnIns>, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _1a99c14d7_Types(_1a99c03b5_FnIns*);
inline jule::Bool _1a99c174b_IsBuiltin(_1a99c03b5_FnIns*);
inline jule::Bool _1a99c19b0_IsAnon(_1a99c03b5_FnIns*);
inline jule::Bool _1a99c1cbd_Same(_1a99c03b5_FnIns*, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Str _1a99c20cb_GetKindStr(_1a99c03b5_FnIns*, jule::Bool);
struct _1a99c03b5_FnIns {
	jule::Ptr<_1b3967d9d_StructIns> _field_Owner = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Ptr<_1a99bc714_Fn> _field_Decl = jule::Ptr<_1a99bc714_Fn>();
	jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>();
	jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Result = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	jule::Ptr<_1a99c3286_ReferenceStack> _field_Refers = jule::Ptr<_1a99c3286_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1a99c03b5_FnIns(void) = default;

	inline bool operator==(_1a99c03b5_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a99c03b5_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a99c3286_ReferenceStack> static__1a99c3572_new(void);
inline jule::I64 _1a99c3907_Len(_1a99c3286_ReferenceStack*);
inline jule::Any _1a99c3c15_At(_1a99c3286_ReferenceStack*, jule::I64);
inline void _1a99c3e8a_Push(_1a99c3286_ReferenceStack*, jule::Any);
inline jule::Bool _1b0915c61_Exist(_1a99c3286_ReferenceStack*, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Bool _1b092a6e3_Exist(_1a99c3286_ReferenceStack*, jule::Ptr<_1ac17c960_Var>);
inline jule::Bool _1aec30213_Exist(_1a99c3286_ReferenceStack*, jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Bool _1b0b68d71_Exist(_1a99c3286_ReferenceStack*, jule::Ptr<_1b2551bec_Trait>);
struct _1a99c3286_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1a99c3286_ReferenceStack(void) = default;

	inline bool operator==(_1a99c3286_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a99c3286_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a99c4650_Pass {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1a99c4650_Pass(void) = default;

	inline bool operator==(_1a99c4650_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a99c4650_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a99c8ae9_symbolBuilder> _1a99c90a0_getRoot(jule::Ptr<_1a99c8ae9_symbolBuilder>);
inline void _1a99c9468_pushErr(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1e6a5c800_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a99c9831_pushErrText(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1e6a5c800_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a99c9b50_pushSuggestion(_1a99c8ae9_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a99ca007_checkCppUseDeclPath(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca2d2_buildCppHeaderImport(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca5e0_buildStdImport(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca8ed_buildIdentImport(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99cac0b_buildImport(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Bool _1a99cb019_checkDuplicateUseDecl(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1ac1530c8_ImportInfo>&);
inline void _1a99cb338_implImportSelections(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1ac1530c8_ImportInfo>&, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Str _1a99cb646_getAsLinkPath(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Str);
inline void _1b254e090_pushCycleError(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1a99c8ae9_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1b254e458_pushCrossCycleError(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1a99c8ae9_symbolBuilder>&, jule::Ptr<_1ac1530c8_ImportInfo>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1b254e810_checkImportCycles(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1ac1530c8_ImportInfo>, jule::Ptr<_1b3963d66_UseDecl>&);
inline void _1b254ebea_checkPackageAccessibility(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1b25500b3_importPackage(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1ac1530c8_ImportInfo>&, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1b25503c1_importUseDecl(jule::Ptr<_1a99c8ae9_symbolBuilder>, jule::Ptr<_1b3963d66_UseDecl>&);
inline void _1b255059c_importUseDecls(jule::Ptr<_1a99c8ae9_symbolBuilder>);
inline void _1b2550822_appendNode(_1a99c8ae9_symbolBuilder*, _1b3917732_Node&);
inline void _1b25509ed_appendNodes(_1a99c8ae9_symbolBuilder*);
inline void _1b2550c73_pushDirectivePass(_1a99c8ae9_symbolBuilder*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1b2550e4e_appendTopDirectives(_1a99c8ae9_symbolBuilder*);
inline void _1b255112a_build(jule::Ptr<_1a99c8ae9_symbolBuilder>);
struct _1a99c8ae9_symbolBuilder {
	jule::Ptr<_1a99c8ae9_symbolBuilder> _field_owner = jule::Ptr<_1a99c8ae9_symbolBuilder>();
	jule::Trait<_1ac150845_Importer> _field_importer = jule::Trait<_1ac150845_Importer>();
	jule::Slice<_1e6735e35_Log> _field_errors = jule::Slice<_1e6735e35_Log>();
	jule::Ptr<_1b3916a1c_Ast> _field_ast = jule::Ptr<_1b3916a1c_Ast>();
	jule::Ptr<_1ac1bee58_SymbolTable> _field_table = jule::Ptr<_1ac1bee58_SymbolTable>();
	

	_1a99c8ae9_symbolBuilder(void) = default;

	inline bool operator==(_1a99c8ae9_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a99c8ae9_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b25520e8_Str(_1b2551bec_Trait*);
inline jule::Bool _1b2552406_Equals(jule::Ptr<_1b2551bec_Trait>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1b2552769_IsBuiltin(_1b2551bec_Trait*);
inline jule::Ptr<_1a99bc714_Fn> _1b2552a77_FindMethod(_1b2551bec_Trait*, jule::Str);
struct _1b2551bec_Trait {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a99bc714_Fn>>();
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1b393b9dc_Struct>>();
	

	_1b2551bec_Trait(void) = default;

	inline bool operator==(_1b2551bec_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1b2551bec_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b2553737_AutoExpr(_1b255334c_EnumItem*);
struct _1b255334c_EnumItem {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac1c5c3e_Value> _field_Value = jule::Ptr<_1ac1c5c3e_Value>();
	

	_1b255334c_EnumItem(void) = default;

	inline bool operator==(_1b255334c_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b255334c_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1b25541a5_Str(_1b2553d42_Enum*);
inline jule::Bool _1b25544b3_Equals(jule::Ptr<_1b2553d42_Enum>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Ptr<_1b255334c_EnumItem> _1b2554903_FindItem(_1b2553d42_Enum*, jule::Str);
struct _1b2553d42_Enum {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Slice<jule::Ptr<_1b255334c_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1b255334c_EnumItem>>();
	

	_1b2553d42_Enum(void) = default;

	inline bool operator==(_1b2553d42_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1b2553d42_Enum _other) { return !this->operator==(_other); }


};
struct _1b2554d76_TypeEnumItem {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	

	_1b2554d76_TypeEnumItem(void) = default;

	inline bool operator==(_1b2554d76_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b2554d76_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1b255576c_Str(_1b255543c_TypeEnum*);
inline jule::Bool _1b2555a7a_Equals(jule::Ptr<_1b255543c_TypeEnum>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Ptr<_1b2554d76_TypeEnumItem> _1b2555e76_FindItem(_1b255543c_TypeEnum*, jule::Str);
struct _1b255543c_TypeEnum {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>>();
	

	_1b255543c_TypeEnum(void) = default;

	inline bool operator==(_1b255543c_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1b255543c_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)> _1ac12ca53_readyFn(jule::Ptr<_1ac12c624_constraintChecker>);
inline jule::Bool _1ac12ccb7_readyFi(jule::Ptr<_1ac12c624_constraintChecker>);
inline jule::Bool _1ac12d02b_readySi(jule::Ptr<_1ac12c624_constraintChecker>);
inline jule::Bool _1ac12d290_ready(jule::Ptr<_1ac12c624_constraintChecker>);
inline jule::Bool _1ac12d504_check(jule::Ptr<_1ac12c624_constraintChecker>);
struct _1ac12c624_constraintChecker {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>();
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>();
	jule::Ptr<_1a99c03b5_FnIns> _field_fi = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1b3967d9d_StructIns> _field_si = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Ptr<_1e6a5c800_Token> _field_et = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1ac12c624_constraintChecker(void) = default;

	inline bool operator==(_1ac12c624_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1ac12c624_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac12ea88_IsTraitImpl(_1ac12e68c_Impl*);
inline jule::Bool _1ac12ecec_IsStructImpl(_1ac12e68c_Impl*);
struct _1ac12e68c_Impl {
	jule::Ptr<_1b394b326_TypeDecl> _field_Base = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1b394b326_TypeDecl> _field_Dest = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a99bc714_Fn>>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Statics = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	

	_1ac12e68c_Impl(void) = default;

	inline bool operator==(_1ac12e68c_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1ac12e68c_Impl _other) { return !this->operator==(_other); }


};
struct _1ac1346e7_Scope {
	jule::Ptr<_1ac1346e7_Scope> _field_Parent = jule::Ptr<_1ac1346e7_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1ac1346e7_Scope(void) = default;

	inline bool operator==(_1ac1346e7_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1ac1346e7_Scope _other) { return !this->operator==(_other); }


};
struct _1ac134ae3_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	

	_1ac134ae3_If(void) = default;

	inline bool operator==(_1ac134ae3_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac134ae3_If _other) { return !this->operator==(_other); }


};
struct _1ac134dce_Else {
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	

	_1ac134dce_Else(void) = default;

	inline bool operator==(_1ac134dce_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac134dce_Else _other) { return !this->operator==(_other); }


};
struct _1ac135253_Conditional {
	jule::Slice<jule::Ptr<_1ac134ae3_If>> _field_Elifs = jule::Slice<jule::Ptr<_1ac134ae3_If>>();
	jule::Ptr<_1ac134dce_Else> _field_Default = jule::Ptr<_1ac134dce_Else>();
	

	_1ac135253_Conditional(void) = default;

	inline bool operator==(_1ac135253_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac135253_Conditional _other) { return !this->operator==(_other); }


};
struct _1ac13553e_InfIter {
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	

	_1ac13553e_InfIter(void) = default;

	inline bool operator==(_1ac13553e_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac13553e_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac135d58_IsWhileNext(_1ac1359b2_WhileIter*);
struct _1ac1359b2_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	

	_1ac1359b2_WhileIter(void) = default;

	inline bool operator==(_1ac1359b2_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac1359b2_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ac136397_RangeIter {
	jule::Ptr<_1ac1c4bb6_Data> _field_Expr = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	jule::Ptr<_1ac17c960_Var> _field_KeyA = jule::Ptr<_1ac17c960_Var>();
	jule::Ptr<_1ac17c960_Var> _field_KeyB = jule::Ptr<_1ac17c960_Var>();
	

	_1ac136397_RangeIter(void) = default;

	inline bool operator==(_1ac136397_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ac136397_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ac136793_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1ac136793_ContSt(void) = default;

	inline bool operator==(_1ac136793_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ac136793_ContSt _other) { return !this->operator==(_other); }


};
struct _1ac136b4a_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1ac136b4a_BreakSt(void) = default;

	inline bool operator==(_1ac136b4a_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ac136b4a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ac136e36_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1ac136e36_Label(void) = default;

	inline bool operator==(_1ac136e36_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac136e36_Label _other) { return !this->operator==(_other); }


};
struct _1ac137222_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1ac137222_GotoSt(void) = default;

	inline bool operator==(_1ac137222_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac137222_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ac1375c9_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1ac1375c9_Postfix(void) = default;

	inline bool operator==(_1ac1375c9_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac1375c9_Postfix _other) { return !this->operator==(_other); }


};
struct _1ac137a4c_Assign {
	jule::Ptr<_1a99b529a_OperandExprModel> _field_L = jule::Ptr<_1a99b529a_OperandExprModel>();
	jule::Ptr<_1a99b529a_OperandExprModel> _field_R = jule::Ptr<_1a99b529a_OperandExprModel>();
	jule::Ptr<_1e6a5c800_Token> _field_Op = jule::Ptr<_1e6a5c800_Token>();
	

	_1ac137a4c_Assign(void) = default;

	inline bool operator==(_1ac137a4c_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac137a4c_Assign _other) { return !this->operator==(_other); }


};
struct _1ac137e04_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1ac137e04_MultiAssign(void) = default;

	inline bool operator==(_1ac137e04_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1ac137e04_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac13894e_IsGenericTypeMatch(_1ac138443_Match*);
struct _1ac138443_Match {
	jule::Ptr<_1ac1c4bb6_Data> _field_Expr = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1ac138e8d_Case>> _field_Cases = jule::Slice<jule::Ptr<_1ac138e8d_Case>>();
	jule::Ptr<_1ac138e8d_Case> _field_Default = jule::Ptr<_1ac138e8d_Case>();
	

	_1ac138443_Match(void) = default;

	inline bool operator==(_1ac138443_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac138443_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac139257_isDefault(_1ac138e8d_Case*);
struct _1ac138e8d_Case {
	jule::Ptr<_1ac138443_Match> _field_Owner = jule::Ptr<_1ac138443_Match>();
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>();
	jule::Ptr<_1ac138e8d_Case> _field_Next = jule::Ptr<_1ac138e8d_Case>();
	

	_1ac138e8d_Case(void) = default;

	inline bool operator==(_1ac138e8d_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1ac138e8d_Case _other) { return !this->operator==(_other); }


};
struct _1ac139543_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1ac139543_FallSt(void) = default;

	inline bool operator==(_1ac139543_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ac139543_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac1399b6_RetSt {
	jule::Ptr<_1a99c03b5_FnIns> _field_Func = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Vars = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1ac1399b6_RetSt(void) = default;

	inline bool operator==(_1ac1399b6_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac1399b6_RetSt _other) { return !this->operator==(_other); }


};
struct _1ac13a0c1_scopeLabel {
	jule::Ptr<_1e6a5c800_Token> _field_token = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1ac136e36_Label> _field_label = jule::Ptr<_1ac136e36_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1ac13b358_scopeChecker> _field_scope = jule::Ptr<_1ac13b358_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1ac13a0c1_scopeLabel(void) = default;

	inline bool operator==(_1ac13a0c1_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ac13a0c1_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ac13a544_scopeGoto {
	jule::Ptr<_1b3959169_GotoSt> _field_gt = jule::Ptr<_1b3959169_GotoSt>();
	jule::Ptr<_1ac13b358_scopeChecker> _field_scope = jule::Ptr<_1ac13b358_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1ac13a544_scopeGoto(void) = default;

	inline bool operator==(_1ac13a544_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ac13a544_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac13b7a9_FindPackage(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac13bab7_SelectPackage(_1ac13b358_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
inline jule::Ptr<_1ac17c960_Var> _1ac13be6e_FindVar(_1ac13b358_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac13c326_FindTypeAlias(_1ac13b358_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac13c6cd_FindStruct(_1ac13b358_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac13ca85_FindFn(_1ac13b358_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac13cd93_FindTrait(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac13d1a1_FindEnum(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac13d4ae_FindTypeEnum(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Bool _1ac13d7de_isUnsafe(jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Bool _1ac13da53_isRoot(_1ac13b358_scopeChecker*);
inline void _1ac13dc2e_stop(_1ac13b358_scopeChecker*);
inline jule::Bool _1ac13de93_stopped(_1ac13b358_scopeChecker*);
inline jule::Bool _1ac13e207_isDeferred(jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Ptr<_1ac13b358_scopeChecker> _1ac13e46b_getRoot(jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Ptr<_1ac13b358_scopeChecker> _1ac13e6d0_getHardRoot(jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Ptr<_1ac136e36_Label> _1ac13e9dd_findLabel(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac13eceb_findLabelScope(jule::Ptr<_1ac13b358_scopeChecker>, jule::Str);
inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac140109_findLabelAll(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Bool _1ac1404b1_isDuplicatedIdent(_1ac13b358_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1ac140736_checkVarDecl(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395e119_VarDecl>);
inline void _1ac1409ab_checkTypeAliasDecl(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b396297a_TypeAliasDecl>);
inline jule::Ptr<_1ac1346e7_Scope> _1ac140c20_getChild(_1ac13b358_scopeChecker*);
inline void _1ac1410d8_checkChildSsc(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395b644_ScopeTree>&, jule::Ptr<_1ac1346e7_Scope>&, jule::Ptr<_1ac13b358_scopeChecker>&);
inline jule::Ptr<_1ac1346e7_Scope> _1ac141490_checkChildSc(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395b644_ScopeTree>&, jule::Ptr<_1ac13b358_scopeChecker>&);
inline jule::Ptr<_1ac1346e7_Scope> _1ac14179d_checkChild(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395b644_ScopeTree>&);
inline void _1ac141a23_checkAnonScope(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395b644_ScopeTree>);
inline void _1ac141d42_processErrorCall(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>&, jule::Ptr<_1e6a5c800_Token>);
inline void _1ac1420b7_checkExpr(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3950847_Expr>);
inline void _1ac14233c_checkCoExpr(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395243c_CoExpr>);
inline jule::Ptr<_1ac134ae3_If> _1ac14264a_checkIf(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3961979_If>);
inline jule::Ptr<_1ac134dce_Else> _1ac142958_checkElse(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3961d31_Else>);
inline void _1ac142bcd_checkConditional(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39622a4_Conditional>);
inline void _1ac143140_checkIterScopeSsc(jule::Ptr<_1ac13b358_scopeChecker>, jule::Uintptr, jule::Ptr<_1b395b644_ScopeTree>, jule::Ptr<_1ac1346e7_Scope>&, jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Ptr<_1ac1346e7_Scope> _1ac143591_checkIterScopeSc(jule::Ptr<_1ac13b358_scopeChecker>, jule::Uintptr, jule::Ptr<_1b395b644_ScopeTree>, jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Ptr<_1ac1346e7_Scope> _1ac143948_checkIterScope(jule::Ptr<_1ac13b358_scopeChecker>, jule::Uintptr, jule::Ptr<_1b395b644_ScopeTree>&);
inline void _1ac143bbd_checkInfIter(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395eb31_Iter>&);
inline void _1ac143e43_checkWhileIter(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395eb31_Iter>&);
inline void _1ac1441b8_checkRangeIter(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395eb31_Iter>&);
inline void _1ac14443d_checkIter(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395eb31_Iter>);
inline jule::Bool _1ac14474b_checkValidContLabel(jule::Ptr<_1ac13b358_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ac144a59_checkValidBreakLabel(jule::Ptr<_1ac13b358_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ac136793_ContSt> _1ac144d67_checkContValidScope(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3961506_ContSt>);
inline void _1ac1450dc_checkCont(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3961506_ContSt>);
inline void _1ac145362_checkLabel(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3958cb2_LabelSt>);
inline void _1ac1455d7_pushGoto(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3959169_GotoSt>);
inline void _1ac14585c_checkPostfix(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395a09e_AssignSt>);
inline jule::Bool _1ac145b6a_isNewAssignIdent(_1ac13b358_scopeChecker*, jule::Str);
inline jule::Bool _1ac1460bb_checkStructureAssignOp(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1b395a09e_AssignSt>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1ac146341_checkSingleAssign(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395a09e_AssignSt>&);
inline void _1ac14686e_processEndPartOfMultiAssign(_1ac13b358_scopeChecker*, jule::Ptr<_1ac137e04_MultiAssign>, jule::Ptr<_1b395a09e_AssignSt>, jule::Ptr<_1b3959a60_AssignLeft>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1ac1c4bb6_Data>);
inline void _1ac146b05_checkRetMultiAssign(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395a09e_AssignSt>&);
inline void _1ac146d7a_checkMultiAssign(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395a09e_AssignSt>&);
inline void _1ac147100_checkAssignSt(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395a09e_AssignSt>);
inline jule::Ptr<_1ac1346e7_Scope> _1ac1474a7_checkCaseScope(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1ac138e8d_Case>&, jule::Ptr<_1b395b644_ScopeTree>&);
inline jule::Ptr<_1ac138e8d_Case> _1ac1479a2_checkCase(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1ac138443_Match>, jule::I64, jule::Ptr<_1b3962ded_Case>, jule::Ptr<_1ac1c4bb6_Data>);
inline void _1ac147d6a_checkCases(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39635c4_MatchCase>&, jule::Ptr<_1ac138443_Match>, jule::Ptr<_1ac1c4bb6_Data>);
inline jule::Ptr<_1ac138e8d_Case> _1ac148222_checkDefault(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1ac138443_Match>, jule::Ptr<_1b3961d31_Else>);
inline void _1ac148497_checkComptimePanic(_1ac13b358_scopeChecker*, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1ac1487b6_pushTypeMatch(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1ac138443_Match>, jule::Ptr<_1b39635c4_MatchCase>&);
inline void _1ac148a3b_checkTypeMatch(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39635c4_MatchCase>&);
inline void _1ac148cb1_checkCommonMatch(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39635c4_MatchCase>&);
inline void _1ac149036_checkMatch(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39635c4_MatchCase>);
inline void _1ac1492ab_checkFall(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b3959455_FallSt>);
inline jule::Ptr<_1ac136b4a_BreakSt> _1ac1495b9_checkBreakWithLabel(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b396114e_BreakSt>);
inline jule::Ptr<_1ac136b4a_BreakSt> _1ac1498c7_checkPlainBreak(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b396114e_BreakSt>);
inline void _1ac149b4c_checkBreak(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b396114e_BreakSt>);
inline void _1ac149dc2_checkRet(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395e4c1_RetSt>);
inline void _1ac14a147_checkUseExpr(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b39511d8_UseExpr>);
inline void _1ac14a3bc_checkNode(jule::Ptr<_1ac13b358_scopeChecker>, jule::Any&);
inline void _1ac14a598_checkResult(jule::Ptr<_1ac13b358_scopeChecker>);
inline void _1ac14a774_checkTree(jule::Ptr<_1ac13b358_scopeChecker>);
inline void _1ac14aa93_checkGoto(_1ac13b358_scopeChecker*, jule::Ptr<_1ac13a544_scopeGoto>&, jule::Ptr<_1ac13a0c1_scopeLabel>&);
inline void _1ac14ac6e_checkGotos(_1ac13b358_scopeChecker*);
inline void _1ac14ae4a_checkLabels(_1ac13b358_scopeChecker*);
inline void _1ac14b126_checkVars(_1ac13b358_scopeChecker*);
inline void _1ac14b302_checkAliases(_1ac13b358_scopeChecker*);
inline void _1ac14b621_check(jule::Ptr<_1ac13b358_scopeChecker>, jule::Ptr<_1b395b644_ScopeTree>&, jule::Ptr<_1ac1346e7_Scope>&);
inline jule::Ptr<_1ac13b358_scopeChecker> _1ac14b885_newChildChecker(jule::Ptr<_1ac13b358_scopeChecker>);
struct _1ac13b358_scopeChecker {
	jule::Ptr<_1e6a5c800_Token> _field_calledFrom = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Ptr<_1a99c03b5_FnIns> _field_owner = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1ac13b358_scopeChecker> _field_parent = jule::Ptr<_1ac13b358_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1ac1bee58_SymbolTable> _field_table = jule::Ptr<_1ac1bee58_SymbolTable>();
	jule::Ptr<_1ac1346e7_Scope> _field_scope = jule::Ptr<_1ac1346e7_Scope>();
	jule::Ptr<_1b395b644_ScopeTree> _field_tree = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Ptr<_1a99c03b5_FnIns> _field_result = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac13a0c1_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ac13a0c1_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac13a544_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ac13a544_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1ac13b358_scopeChecker(void) = default;

	inline bool operator==(_1ac13b358_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ac13b358_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1ac14c875_checkCdef(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14caea_checkTypedef(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14cd70_checkDerive(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14d0e5_checkNamespace(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14d36a_checkDeprecated(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14d5e0_checkTest(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14d865_checkDirective(_1ac14c435_directiveChecker*, jule::Ptr<_1b3917b2d_Directive>&);
inline void _1ac14da41_check(_1ac14c435_directiveChecker*);
struct _1ac14c435_directiveChecker {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1b3917b2d_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1b3917b2d_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1ac14c435_directiveChecker(void) = default;

	inline bool operator==(_1ac14c435_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ac14c435_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1535e5_FindPackage(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac153903_SelectPackage(_1ac1530c8_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
inline jule::Ptr<_1ac17c960_Var> _1ac153caa_FindVar(_1ac1530c8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac154162_FindTypeAlias(_1ac1530c8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac154519_FindStruct(_1ac1530c8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac1548c1_FindFn(_1ac1530c8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac154bce_FindTrait(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac154edc_FindEnum(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac1552ea_FindTypeEnum(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Bool _1ac155691_isLookupable(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Bool _1ac15599e_existIdent(_1ac1530c8_ImportInfo*, jule::Str);
inline jule::Bool _1ac155c35_isAccessibleViaSelection(_1ac1530c8_ImportInfo*);
struct _1ac1530c8_ImportInfo {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_Selected = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Ptr<_1ac156032_Package> _field_Package = jule::Ptr<_1ac156032_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1ac1530c8_ImportInfo(void) = default;

	inline bool operator==(_1ac1530c8_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1ac1530c8_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15650a_FindPackage(_1ac156032_Package*, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac156818_SelectPackage(_1ac156032_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
inline jule::Ptr<_1ac17c960_Var> _1ac156bc0_FindVar(_1ac156032_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac157077_FindTypeAlias(_1ac156032_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac15742e_FindStruct(_1ac156032_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac1577d6_FindFn(_1ac156032_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac157ae4_FindTrait(_1ac156032_Package*, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac157e02_FindEnum(_1ac156032_Package*, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac158210_FindTypeEnum(_1ac156032_Package*, jule::Str);
struct _1ac156032_Package {
	jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>();
	

	_1ac156032_Package(void) = default;

	inline bool operator==(_1ac156032_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1ac156032_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15b741_FindPackage(_1ac15b224_Sema*, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15ba4e_SelectPackage(_1ac15b224_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
inline jule::Ptr<_1ac17c960_Var> _1ac15be06_FindVar(_1ac15b224_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac15c2ad_FindTypeAlias(_1ac15b224_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac15c665_FindStruct(_1ac15b224_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac15ca1c_FindFn(_1ac15b224_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac15cd2a_FindTrait(_1ac15b224_Sema*, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac15d138_FindEnum(_1ac15b224_Sema*, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac15d446_FindTypeEnum(_1ac15b224_Sema*, jule::Str);
inline jule::Bool _1ac15d798_isFlag(_1ac15b224_Sema*, jule::I64);
inline void _1ac15da1d_setCurrentFile(_1ac15b224_Sema*, jule::Ptr<_1ac1bee58_SymbolTable>);
inline void _1ac15ddd6_pushErr(_1ac15b224_Sema*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac15e205_pushSugggestion(_1ac15b224_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac15e5ac_isAccessibleDefine(_1ac15b224_Sema*, jule::Bool, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac15ea0d_isDuplicatedIdent(_1ac15b224_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1ac15ed2c_checkDirectives(jule::Ptr<_1ac15b224_Sema>, jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Any);
inline jule::Bool _1ac16027d_checkGenericQuantity(_1ac15b224_Sema*, jule::I64, jule::I64, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac160657_isDuplicatedImportSelection(_1ac15b224_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1ac160a20_getImportDef(_1ac15b224_Sema*, jule::Str, jule::Ptr<_1ac1530c8_ImportInfo>&);
inline jule::Bool _1ac160d2d_checkImportSelections(_1ac15b224_Sema*, jule::Ptr<_1ac1530c8_ImportInfo>&);
inline jule::Bool _1ac16113b_isUseAliasDuplication(_1ac15b224_Sema*, jule::Ptr<_1ac1530c8_ImportInfo>&);
inline jule::Bool _1ac161449_checkImport(_1ac15b224_Sema*, jule::Ptr<_1ac1530c8_ImportInfo>&);
inline void _1ac161625_checkImports(_1ac15b224_Sema*);
inline void _1ac161801_implFileImpls(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac1619cc_implImpls(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac161ba8_checkEnums(jule::Ptr<_1ac15b224_Sema>);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac1621a3_buildTypeWithRefers(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b394b326_TypeDecl>&, jule::Trait<_1a9a20701_Lookup>, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>, jule::Ptr<_1a9a123a2_referencer>);
inline jule::Bool _1ac16269d_checkTypeWithRefers(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a08ce4_TypeSymbol>&, jule::Trait<_1a9a20701_Lookup>, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>, jule::Ptr<_1a9a123a2_referencer>);
inline jule::Ptr<_1ac12c624_constraintChecker> _1ac162912_constraintChecker(jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1ac162cb9_checkType(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a08ce4_TypeSymbol>&, jule::Trait<_1a9a20701_Lookup>);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac16321a_buildTypeWithGenerics(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b394b326_TypeDecl>&, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>, jule::Ptr<_1a99c3286_ReferenceStack>);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac163528_buildType(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b394b326_TypeDecl>&);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac163836_selectType(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b394b326_TypeDecl>&);
inline jule::Ptr<_1ac1c6734_Eval> _1ac163c87_evalpd(jule::Ptr<_1ac15b224_Sema>, jule::Trait<_1a9a20701_Lookup>, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac17c960_Var>);
inline jule::Ptr<_1ac1c6734_Eval> _1ac16413e_evalp(jule::Ptr<_1ac15b224_Sema>, jule::Trait<_1a9a20701_Lookup>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Ptr<_1ac1c6734_Eval> _1ac16444c_eval(jule::Ptr<_1ac15b224_Sema>, jule::Trait<_1a9a20701_Lookup>);
inline jule::Bool _1ac164947_checkAssignType(jule::Ptr<_1ac15b224_Sema>, jule::Bool, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac164d98_checkTypeCompatibility(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac165272_buildNonGenericTypeKind(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b394b326_TypeDecl>&, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>&);
inline void _1ac16552a_buildFnNonGenericTypeKinds(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Ptr<_1a99c03b5_FnIns> _1ac165849_getTraitCheckFnKind(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline jule::Bool _1ac165c9a_checkConstraintsFn(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1e6a5c800_Token>&, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Bool _1ac1661eb_checkConstraintsStruct(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1e6a5c800_Token>&, jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Bool _1ac1665a3_fnEnvironment(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)>);
inline void _1ac166828_checkFnParamKind(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99be4e6_ParamIns>&);
inline jule::Bool _1ac166b36_reloadFnInsTypes(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Bool _1ac1670a9_checkRefValidityForInitExpr(jule::Ptr<_1ac15b224_Sema>, jule::Bool, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1ac167681_checkValidityForInitExpr(jule::Ptr<_1ac15b224_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1ac167a49_checkTypeAliasDeclKind(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a03e98_TypeAlias>&, jule::Trait<_1a9a20701_Lookup>);
inline void _1ac167d68_checkTypeAliasDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a03e98_TypeAlias>&, jule::Trait<_1a9a20701_Lookup>);
inline void _1ac16ce4a_checkTypeAliasDeclDup(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a9a03e98_TypeAlias>&);
inline jule::Bool _1ac16d1ae_checkTypeAliasDecls(jule::Ptr<_1ac15b224_Sema>);
inline void _1b069c50e_checkEnumItemsDup(_1ac15b224_Sema*, jule::Slice<jule::Ptr<_1b255334c_EnumItem>>);
inline void _1b06a7eba_checkEnumItemsDup(_1ac15b224_Sema*, jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>>);
inline void _1ac16d6a9_checkEnumItemsStr(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b2553d42_Enum>&);
inline void _1ac16d92e_checkEnumItemsInt(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b2553d42_Enum>&);
inline void _1ac16dba4_checkEnumDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b2553d42_Enum>&);
inline void _1ac16de29_checkTypeEnumDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b255543c_TypeEnum>&);
inline jule::Bool _1ac16e18d_checkEnumDecls(jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1ac16e402_checkTypeEnumDecls(jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1ac16e710_checkDeclGenerics(_1ac15b224_Sema*, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>&);
inline jule::Bool _1ac16ea1d_checkFnDeclParamsDup(_1ac15b224_Sema*, jule::Ptr<_1a99bc714_Fn>&);
inline jule::Bool _1ac16ed2b_checkFnDeclResultDup(_1ac15b224_Sema*, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac1700a1_checkFnDeclPrototype(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac170326_checkTraitDeclMethod(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac17059b_checkTraitDeclMethods(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b2551bec_Trait>&);
inline void _1ac170821_checkTraitDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b2551bec_Trait>&);
inline jule::Bool _1ac170a85_checkTraitDecls(jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1ac170e3c_checkTraitImplMethods(_1ac15b224_Sema*, jule::Ptr<_1b2551bec_Trait>&, jule::Ptr<_1ac12e68c_Impl>&);
inline jule::Bool _1ac1712e4_implToStruct(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&, jule::Ptr<_1ac12e68c_Impl>&);
inline void _1ac171569_implTrait(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac12e68c_Impl>&);
inline void _1ac1717de_implStruct(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac12e68c_Impl>&);
inline void _1ac171a64_implImpl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac12e68c_Impl>&);
inline void _1ac171d83_checkVarDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac17c960_Var>&, jule::Trait<_1a9a20701_Lookup>);
inline void _1ac172108_checkGlobalVarDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac17c960_Var>&);
inline jule::Bool _1ac17236c_checkGlobalDecls(jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1ac172724_checkStructTraitImpl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&, jule::Ptr<_1b2551bec_Trait>&);
inline jule::Bool _1ac172a32_checkStructImpls(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Bool _1ac172d40_checkStructFields(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac1730b5_checkStructDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Bool _1ac173329_checkStructDecls(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac17359e_checkFnDecl(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline jule::Bool _1ac173813_checkFnDecls(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac173bcb_pushCycleError(_1ac15b224_Sema*, jule::Ptr<_1b393b9dc_Struct>&, jule::Ptr<_1b393b9dc_Struct>&, jule::Str&);
inline jule::Bool _1ac17412c_checkCrossCycle(_1ac15b224_Sema*, jule::Ptr<_1b393b9dc_Struct>&, jule::Ptr<_1b393b9dc_Struct>&, jule::Str&);
inline jule::Bool _1ac1745a0_checkStructDeriveIllegalCycles(_1ac15b224_Sema*, jule::Str, jule::Ptr<_1b393b9dc_Struct>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1748e1_checkStructInsDeriveClone(_1ac15b224_Sema*, jule::Ptr<_1b3967d9d_StructIns>);
inline void _1ac174acd_checkPackageDecls(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac174e1e_checkDataForTypeInference(_1ac15b224_Sema*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline void _1ac1751a5_checkVar(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac17c960_Var>&);
inline void _1ac1754c4_checkTypeVar(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1ac17c960_Var>&, jule::Trait<_1a9a20701_Lookup>);
inline void _1ac1756a0_checkGlobalTypes(jule::Ptr<_1ac15b224_Sema>);
inline jule::Ptr<_1a99c03b5_FnIns> _1ac175a57_readyToCheckFn(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac175d76_checkTypeMethod(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1a99bc714_Fn>&);
inline jule::Ptr<_1a99c03b5_FnIns> _1ac1762c7_checkStructInsOp(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1a99bc714_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>);
inline jule::Bool _1ac17667e_checkStructEnv(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac176a36_precheckStructIns(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1e6a5c800_Token>);
inline void _1ac176cab_checkStructIns(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac177031_checkTypeStruct(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac17720c_checkStructTypes(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac1774a4_checkStructInsOperators(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b3967d9d_StructIns>);
inline void _1ac17773a_precheckStructType(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac177916_precheckStructTypes(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac177b8b_checkRets(_1ac15b224_Sema*, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1ac177eaa_checkFnInsSc(_1ac15b224_Sema*, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1ac13b358_scopeChecker>&);
inline void _1ac1782c9_checkFnInsCaller(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1e6a5c800_Token>);
inline void _1ac17854e_checkFnIns(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1ac1787c4_checkTypeFn(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac178a49_checkTestFn(_1ac15b224_Sema*, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1ac178cbe_precheckTypeFn(jule::Ptr<_1ac15b224_Sema>, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac178e9a_precheckFnTypes(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac179176_checkFnTypes(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac179352_checkPackageTypes(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac17952d_setFileSemaFields(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac179709_setSemaFields(jule::Ptr<_1ac15b224_Sema>);
inline void _1ac17997e_check(jule::Ptr<_1ac15b224_Sema>, jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&);
struct _1ac15b224_Sema {
	jule::Slice<_1e6735e35_Log> _field_errors = jule::Slice<_1e6735e35_Log>();
	jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>();
	jule::Ptr<_1ac1bee58_SymbolTable> _field_file = jule::Ptr<_1ac1bee58_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1ac15b224_Sema(void) = default;

	inline bool operator==(_1ac15b224_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1ac15b224_Sema _other) { return !this->operator==(_other); }


};
inline _1ac179d36_missingRetChecker static__1ac17a1ee_new(void);
inline jule::Bool _1ac17a4c9_checkConditional(_1ac179d36_missingRetChecker*, jule::Ptr<_1ac135253_Conditional>);
inline jule::Bool _1ac17a7d7_checkMatch(_1ac179d36_missingRetChecker*, jule::Ptr<_1ac138443_Match>);
inline jule::Bool _1ac17aae5_checkInfIter(_1ac179d36_missingRetChecker*, jule::Ptr<_1ac13553e_InfIter>);
inline jule::Bool _1ac17ae03_checkScope(_1ac179d36_missingRetChecker*, jule::Ptr<_1ac1346e7_Scope>);
inline jule::Bool _1ac17b211_check(_1ac179d36_missingRetChecker*, jule::Ptr<_1ac1346e7_Scope>);
struct _1ac179d36_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1ac179d36_missingRetChecker(void) = default;

	inline bool operator==(_1ac179d36_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1ac179d36_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1ac17b9e7_IterRelation {
	jule::Ptr<_1ac17c960_Var> _field_Range = jule::Ptr<_1ac17c960_Var>();
	

	_1ac17b9e7_IterRelation(void) = default;

	inline bool operator==(_1ac17b9e7_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1ac17b9e7_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac17cd17_IsInitialized(_1ac17c960_Var*);
inline jule::Bool _1ac17d07b_IsTypeInferred(_1ac17c960_Var*);
struct _1ac17c960_Var {
	jule::Ptr<_1ac1346e7_Scope> _field_Scope = jule::Ptr<_1ac1346e7_Scope>();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Ptr<_1ac1c5c3e_Value> _field_Value = jule::Ptr<_1ac1c5c3e_Value>();
	jule::Ptr<_1a99c3286_ReferenceStack> _field_Refers = jule::Ptr<_1a99c3286_ReferenceStack>();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Ptr<_1ac17b9e7_IterRelation> _field_IterRelation = jule::Ptr<_1ac17b9e7_IterRelation>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Depends = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	

	_1ac17c960_Var(void) = default;

	inline bool operator==(_1ac17c960_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1ac17c960_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1ac17db09_Dispose(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac17dda1_Str(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac17e1e2_logical(jule::Ptr<_1a99bc714_Fn>&, jule::Str);
inline jule::Bool static__1ac17e489_Eq(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac17e731_Gt(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac17e9c8_GtEq(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac17ec70_Lt(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac180017_LtEq(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac180358_result(jule::Ptr<_1a99bc714_Fn>&, jule::Str);
inline jule::Bool static__1ac180600_Shl(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac180897_Shr(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac180b3e_Add(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac180dd6_Sub(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac18117d_Div(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac181425_Mul(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac1816bc_Mod(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac181964_BitAnd(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac181c0b_BitOr(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac181ea3_BitXor(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac1822e4_unary(jule::Ptr<_1a99bc714_Fn>&, jule::Str);
inline jule::Bool static__1ac18258b_Neg(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac182833_Pos(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac182aca_BitNot(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac182e1b_assign(jule::Ptr<_1a99bc714_Fn>&, jule::Str);
inline jule::Bool static__1ac1831b3_AddAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac18345a_SubAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac183702_DivAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac183999_MulAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac183c41_ModAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac183ed8_ShlAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac184280_ShrAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac184527_BitOrAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac1847be_BitAndAssign(jule::Ptr<_1a99bc714_Fn>);
inline jule::Bool static__1ac184a66_BitXorAssign(jule::Ptr<_1a99bc714_Fn>);
struct _1ac17d488_FuncPattern {
	

	_1ac17d488_FuncPattern(void) = default;

	inline bool operator==(_1ac17d488_FuncPattern _other) { return true; }

	inline bool operator!=(_1ac17d488_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1ac1ae145_pushErr(_1ac1adb28_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac1ae3a9_checkTrait(_1ac1adb28_typeCompatibilityChecker*);
inline jule::Bool _1ac1ae61d_checkPtr(_1ac1adb28_typeCompatibilityChecker*);
inline jule::Bool _1ac1ae882_checkPrim(_1ac1adb28_typeCompatibilityChecker*);
inline jule::Bool _1ac1aec39_typeEnum(_1ac1adb28_typeCompatibilityChecker*, jule::Ptr<_1b255543c_TypeEnum>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1aee9d_checkTypeEnum(_1ac1adb28_typeCompatibilityChecker*);
inline jule::Bool _1ac1b0212_check(_1ac1adb28_typeCompatibilityChecker*);
struct _1ac1adb28_typeCompatibilityChecker {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_dest = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_src = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	

	_1ac1adb28_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1ac1adb28_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ac1adb28_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1ac1b0bb3_pushErr(_1ac1b0751_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac1b0e27_checkValidity(_1ac1b0751_assignTypeChecker*);
inline jule::Bool _1ac1b118b_checkConst(_1ac1b0751_assignTypeChecker*);
inline jule::Bool _1ac1b1400_isPrim(_1ac1b0751_assignTypeChecker*);
inline jule::Bool _1ac1b1664_checkCompatibility(_1ac1b0751_assignTypeChecker*);
inline jule::Bool _1ac1b18c8_check(_1ac1b0751_assignTypeChecker*);
struct _1ac1b0751_assignTypeChecker {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_dest = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1ac1c4bb6_Data> _field_d = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	

	_1ac1b0751_assignTypeChecker(void) = default;

	inline bool operator==(_1ac1b0751_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ac1b0751_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b05ba4b5_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1b05b9b02_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1b05bbd9b_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1b05c2ea1_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b2a50_annotateConstraintMap(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b2d5d_annotateConstraintTup(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b316b_annotateConstraintFn(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b349b_annotateConstraintIdent(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b37ba_annotateConstraint(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline void _1ac1b3ad9_pushGeneric(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::I64);
inline jule::Bool _1ac1b3de7_annotatePrim(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b4205_annotateArr(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b4513_annotateSlc(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b48ba_checkMapKey(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b4bc8_annotateMap(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b4ed6_annotateFn(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b52e4_annotatePtr(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b5602_annotateSptr(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b5910_annotateStruct(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b5c1d_annotateAny(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b602b_annotateKind(_1ac1b216a_dynamicTypeAnnotation*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac1b6290_annotate(_1ac1b216a_dynamicTypeAnnotation*);
struct _1ac1b216a_dynamicTypeAnnotation {
	jule::Ptr<_1ac1c6734_Eval> _field_e = jule::Ptr<_1ac1c6734_Eval>();
	jule::Ptr<_1a99c03b5_FnIns> _field_f = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Ptr<_1a99be4e6_ParamIns> _field_p = jule::Ptr<_1a99be4e6_ParamIns>();
	jule::Ptr<_1ac1c4bb6_Data> _field_a = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1a9a04b8b_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1b394b326_TypeDecl> _field_c = jule::Ptr<_1b394b326_TypeDecl>();
	

	_1ac1b216a_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1ac1b216a_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1ac1b216a_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1ac1b6eb6_pushErrToken(_1ac1b6966_fnCallArgChecker*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac1b72d5_pushErr(_1ac1b6966_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>> _1ac1b7549_getParams(_1ac1b6966_fnCallArgChecker*);
inline jule::Bool _1ac1b7857_checkCounts(_1ac1b6966_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>&);
inline jule::Bool _1ac1b7ca8_checkArg(_1ac1b6966_fnCallArgChecker*, jule::Ptr<_1a99be4e6_ParamIns>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Bool _1ac1b8160_push(_1ac1b6966_fnCallArgChecker*, jule::Ptr<_1a99be4e6_ParamIns>&, jule::Ptr<_1b3950847_Expr>);
inline jule::Bool _1ac1b8517_pushVariadic(_1ac1b6966_fnCallArgChecker*, jule::Ptr<_1a99be4e6_ParamIns>&, jule::I64);
inline jule::Bool _1ac1b8825_checkArgs(_1ac1b6966_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>&);
inline jule::Bool _1ac1b8aab_checkDynamicTypeAnnotation(_1ac1b6966_fnCallArgChecker*);
inline jule::Bool _1ac1b8d31_check(_1ac1b6966_fnCallArgChecker*);
struct _1ac1b6966_fnCallArgChecker {
	jule::Ptr<_1ac1c6734_Eval> _field_e = jule::Ptr<_1ac1c6734_Eval>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_args = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1a99c03b5_FnIns> _field_f = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1ac1b6966_fnCallArgChecker(void) = default;

	inline bool operator==(_1ac1b6966_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1ac1b6966_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1ac1b987b_pushErr(_1ac1b9370_structLitChecker*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac1b9b9a_pushSugggestion(_1ac1b9370_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac1ba063_pushMatch(_1ac1b9370_structLitChecker*, jule::Ptr<_1b3944154_FieldIns>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline void _1ac1ba382_checkPair(_1ac1b9370_structLitChecker*, jule::Ptr<_1b3955594_FieldExprPair>&, jule::Slice<jule::Ptr<_1b3950847_Expr>>&);
inline jule::Bool _1ac1ba690_readyExprs(_1ac1b9370_structLitChecker*, jule::Slice<jule::Ptr<_1b3950847_Expr>>&);
inline void _1ac1ba915_check(_1ac1b9370_structLitChecker*, jule::Slice<jule::Ptr<_1b3950847_Expr>>&);
struct _1ac1b9370_structLitChecker {
	jule::Ptr<_1ac1c6734_Eval> _field_e = jule::Ptr<_1ac1c6734_Eval>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Ptr<_1b3967d9d_StructIns> _field_s = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Slice<jule::Ptr<_1a99b5861_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a99b5861_StructArgExprModel>>();
	

	_1ac1b9370_structLitChecker(void) = default;

	inline bool operator==(_1ac1b9370_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ac1b9370_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac17c960_Var> _1ac1bb3e9_buildVar(_1ac1bae54_rangeChecker*, jule::Ptr<_1b395e119_VarDecl>&);
inline void _1ac1bb5c5_setSizeKey(_1ac1bae54_rangeChecker*);
inline void _1ac1bb98d_checkRangeExprValidity(_1ac1bae54_rangeChecker*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac17c960_Var>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline void _1ac1bbb69_checkSlice(_1ac1bae54_rangeChecker*);
inline void _1ac1bbd45_checkArray(_1ac1bae54_rangeChecker*);
inline void _1ac1bc021_checkMapKeyA(_1ac1bae54_rangeChecker*);
inline void _1ac1bc1ec_checkMapKeyB(_1ac1bae54_rangeChecker*);
inline void _1ac1bc3c8_checkMap(_1ac1bae54_rangeChecker*);
inline void _1ac1bc5a4_checkStr(_1ac1bae54_rangeChecker*);
inline jule::Bool _1ac1bc818_check(_1ac1bae54_rangeChecker*);
struct _1ac1bae54_rangeChecker {
	jule::Ptr<_1ac13b358_scopeChecker> _field_sc = jule::Ptr<_1ac13b358_scopeChecker>();
	jule::Ptr<_1b3960c97_RangeKind> _field_rang = jule::Ptr<_1b3960c97_RangeKind>();
	jule::Ptr<_1ac136397_RangeIter> _field_Kind = jule::Ptr<_1ac136397_RangeIter>();
	jule::Ptr<_1ac1c4bb6_Data> _field_d = jule::Ptr<_1ac1c4bb6_Data>();
	

	_1ac1bae54_rangeChecker(void) = default;

	inline bool operator==(_1ac1bae54_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ac1bae54_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1ac1bd561_prepareTypes(_1ac1bd0aa_retTypeChecker*);
inline void _1ac1bd7d6_prepareExprs(_1ac1bd0aa_retTypeChecker*, jule::Ptr<_1b3950847_Expr>&);
inline void _1ac1bd9b2_retVars(_1ac1bd0aa_retTypeChecker*);
inline void _1ac1bdb8d_checkExprs(_1ac1bd0aa_retTypeChecker*);
inline jule::Bool _1ac1bde9b_check(_1ac1bd0aa_retTypeChecker*, jule::Ptr<_1b3950847_Expr>&);
struct _1ac1bd0aa_retTypeChecker {
	jule::Ptr<_1ac13b358_scopeChecker> _field_sc = jule::Ptr<_1ac13b358_scopeChecker>();
	jule::Ptr<_1a99c03b5_FnIns> _field_f = jule::Ptr<_1a99c03b5_FnIns>();
	jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>();
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_vars = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_model = jule::Any();
	

	_1ac1bd0aa_retTypeChecker(void) = default;

	inline bool operator==(_1ac1bd0aa_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ac1bd0aa_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1c0475_FindPackage(_1ac1bee58_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1c0783_SelectPackage(_1ac1bee58_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
inline jule::Ptr<_1ac17c960_Var> _1ac1c0b3a_FindVar(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac1c0ee2_FindTypeAlias(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac1c1399_FindStruct(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac1c1751_FindFn(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac1c1a5e_FindTrait(_1ac1bee58_SymbolTable*, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac1c1d6c_FindEnum(_1ac1bee58_SymbolTable*, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac1c217a_FindTypeEnum(_1ac1bee58_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac17c960_Var> _1ac1c26ec_findVar(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac1c2b4d_findTypeAlias(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1ac1c3005_defByIdent(_1ac1bee58_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1ac1c3456_isDuplicatedIdent(_1ac1bee58_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1ac1bee58_SymbolTable {
	jule::Ptr<_1e6a62b8a_File> _field_File = jule::Ptr<_1e6a62b8a_File>();
	jule::Slice<_1a99c4650_Pass> _field_Passes = jule::Slice<_1a99c4650_Pass>();
	jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Vars = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>();
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1b393b9dc_Struct>>();
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1a99bc714_Fn>>();
	jule::Slice<jule::Ptr<_1b2551bec_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1b2551bec_Trait>>();
	jule::Slice<jule::Ptr<_1b2553d42_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1b2553d42_Enum>>();
	jule::Slice<jule::Ptr<_1b255543c_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1b255543c_TypeEnum>>();
	jule::Slice<jule::Ptr<_1ac12e68c_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1ac12e68c_Impl>>();
	

	_1ac1bee58_SymbolTable(void) = default;

	inline bool operator==(_1ac1bee58_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1ac1bee58_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac1c50a1_IsNil(_1ac1c4bb6_Data*);
inline jule::Bool _1ac1c5315_IsVoid(_1ac1c4bb6_Data*);
inline jule::Bool _1ac1c5579_IsConst(_1ac1c4bb6_Data*);
inline jule::Bool _1ac1c5887_GoodOperand(_1ac1c4bb6_Data*, jule::Ptr<_1ac1c4bb6_Data>&);
struct _1ac1c4bb6_Data {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1a9956c86_Const> _field_Constant = jule::Ptr<_1a9956c86_Const>();
	

	_1ac1c4bb6_Data(void) = default;

	inline bool operator==(_1ac1c4bb6_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ac1c4bb6_Data _other) { return !this->operator==(_other); }


};
struct _1ac1c5c3e_Value {
	jule::Ptr<_1b3950847_Expr> _field_Expr = jule::Ptr<_1b3950847_Expr>();
	jule::Ptr<_1ac1c4bb6_Data> _field_Data = jule::Ptr<_1ac1c4bb6_Data>();
	

	_1ac1c5c3e_Value(void) = default;

	inline bool operator==(_1ac1c5c3e_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac1c5c3e_Value _other) { return !this->operator==(_other); }


};
inline void _1ac1c6c40_pushErr(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac1c705e_pushSugggestion(_1ac1c6734_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac1c723a_allowBuiltin(_1ac1c6734_Eval*);
inline void _1ac1c7416_disallowBuiltin(_1ac1c6734_Eval*);
inline jule::Bool _1a99cb7cd_isUnsafe(_1ac1c6734_Eval*);
inline jule::Bool _1a99cb9ed_isGlobal(_1ac1c6734_Eval*);
inline jule::Bool _1a99cbd0b_applyNumericPrefix(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc070_litNil(_1ac1c6734_Eval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc37d_litStr(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc68b_litBool(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc999_litRune(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ccca7_litFloat(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd0b5_litInt(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd3c3_litNum(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd6d1_evalLit(_1ac1c6734_Eval*, jule::Ptr<_1b395187b_LitExpr>);
inline jule::Any _1a99cd9de_findBuiltins(_1ac1c6734_Eval*, jule::Str);
inline jule::Any _1a99cdd96_getDef(_1ac1c6734_Eval*, jule::Str, jule::Bool);
inline void _1b0913434_pushReference(_1ac1c6734_Eval*, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1b092813b_pushReference(_1ac1c6734_Eval*, jule::Ptr<_1ac17c960_Var>&);
inline void _1aec2c8c5_pushReference(_1ac1c6734_Eval*, jule::Ptr<_1b3967d9d_StructIns>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ce429__evalEnum(_1ac1c6734_Eval*, jule::Ptr<_1b2553d42_Enum>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ce7d1_evalEnum(_1ac1c6734_Eval*, jule::Ptr<_1b2553d42_Enum>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ceade__evalTypeEnum(_1ac1c6734_Eval*, jule::Ptr<_1b255543c_TypeEnum>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99cee96_evalTypeEnum(_1ac1c6734_Eval*, jule::Ptr<_1b255543c_TypeEnum>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d02a4__evalStruct(_1ac1c6734_Eval*, jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d065b_evalStruct(_1ac1c6734_Eval*, jule::Ptr<_1b3967d9d_StructIns>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d0969_evalFnIns(_1ac1c6734_Eval*, jule::Ptr<_1a99c03b5_FnIns>);
inline void _1a99d0c88_checkDeprecated(_1ac1c6734_Eval*, jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d1140_evalFn(_1ac1c6734_Eval*, jule::Ptr<_1a99bc714_Fn>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d1508_pushIllegalCycleError(_1ac1c6734_Eval*, jule::Ptr<_1ac17c960_Var>&, jule::Ptr<_1ac17c960_Var>&, jule::Str&);
inline jule::Bool _1a99d18b0_checkCrossCycle(_1ac1c6734_Eval*, jule::Ptr<_1ac17c960_Var>&, jule::Str&);
inline jule::Bool _1a99d1c67_checkIllegalCycles(_1ac1c6734_Eval*, jule::Ptr<_1ac17c960_Var>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d211e_evalVar(_1ac1c6734_Eval*, jule::Ptr<_1ac17c960_Var>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d24c6_evalTypeAlias(_1ac1c6734_Eval*, jule::Ptr<_1a9a03e98_TypeAlias>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d287d_evalDef(_1ac1c6734_Eval*, jule::Any, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d2b8b_evalIdent(_1ac1c6734_Eval*, jule::Ptr<_1b39528b0_IdentExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d2e99_evalUnary(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b39530b9_UnaryExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d32a7_evalVariadic(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3953471_VariadicExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d35b5_evalUnsafe(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3952085_UnsafeExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d38c3_evalArr(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3957200_SliceExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d3d24_evalExpSlc(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3957200_SliceExpr>, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Any);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d4132_evalSliceExpr(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3957200_SliceExpr>);
inline void _1a99d4473_checkIntegerIndexingByData(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d47c5_indexingPtr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline void _1a99d4b8d_indexingArr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline void _1a99d5056_indexingSlc(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline void _1a99d541e_indexingMap(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline void _1a99d57d7_indexingStr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline void _1a99d5ba0_toIndexing(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline jule::Bool _1a99d6123_pushGenericsFromExprSubIdent(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954153_SubIdentExpr>&, jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>&, jule::Ptr<_1b3950847_Expr>&);
inline jule::Bool _1a99d64db_pushGenericsFromData(jule::Ptr<_1ac1c6734_Eval>, jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>&, jule::Ptr<_1b3950847_Expr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d681b_evalIdentDeclFromIndexing(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline jule::Bool _1a99d6c7d_checkGenericFn(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1e6a5c800_Token>&, jule::Any&);
inline void _1a99d70be_evalFnGenericFromIndexing(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b3957a91_IndexingExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d73dd_evalIndexing(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3957a91_IndexingExpr>);
inline std::tuple<jule::Ptr<_1ac1c4bb6_Data>,jule::Ptr<_1ac1c4bb6_Data>> _1a99d76eb_evalSlicingExprs(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b395819b_SlicingExpr>&);
inline void _1a99d7971_slicingArr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99d7d39_slicingStr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99d829b_checkSlicing(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b395819b_SlicingExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99d85a9_evalSlicing(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b395819b_SlicingExpr>);
inline void _1a99d8972_castPtr(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d8d3a_castStruct(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d9203_castRef(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d95bb_castSlc(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d98da_castStr(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99d9ca3_castInt(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99da16b_castNum(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99da534_castPrim(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99da853_castConstant(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99dac1b_castTypeEnum(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99db16c_evalCastByTypeNData(_1ac1c6734_Eval*, jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99db5bd_evalCastT(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1b3950847_Expr>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99db8cb_evalCast(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3953828_CastExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99dbbd9_evalNsSelection(_1ac1c6734_Eval*, jule::Ptr<_1b3953bd0_NsSelectionExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc13a_evalStructLitExplicit(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3967d9d_StructIns>, jule::Slice<jule::Ptr<_1b3950847_Expr>>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc448_evalStructLit(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3955ce2_StructLit>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc756_evalType(_1ac1c6734_Eval*, jule::Ptr<_1b394b326_TypeDecl>);
inline void _1a99dca75_callTypeFn(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99dcd94_callBuiltinFn(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99dd1d5_checkFnOfConcurrentCall(_1ac1c6734_Eval*, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1e6a5c800_Token>);
inline void _1a99dd5d1_processExceptionalHandler(_1ac1c6734_Eval*, jule::Ptr<_1a99c03b5_FnIns>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99dd911_callFn(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ddc1e_evalFnCall(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954b15_FnCallExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99de0c6_evalEnumStatic(_1ac1c6734_Eval*, jule::Ptr<_1b2553d42_Enum>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99de47d_evalTypeEnumStatic(_1ac1c6734_Eval*, jule::Ptr<_1b255543c_TypeEnum>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99de835_evalStructStatic(_1ac1c6734_Eval*, jule::Ptr<_1b3967d9d_StructIns>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99dec86_evalTraitSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1b2551bec_Trait>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0281_evalStructSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1b3967d9d_StructIns>, jule::Ptr<_1b3954153_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0638_evalSliceSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e09e0_evalArraySubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0d97_evalMapSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e124e_evalStrSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e155c_evalIntTypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e186a_evalUintTypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e1b78_evalI8TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e1e86_evalI16TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2294_evalI32TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e25a2_evalI64TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e28b0_evalU8TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2bbd_evalU16TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2ecb_evalU32TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e32d9_evalU64TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e35e7_evalF32TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e3905_evalF64TypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e3cac_evalPrimStatic(_1ac1c6734_Eval*, jule::Str, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4164_evalTypeStatic(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1b3954153_SubIdentExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e451b_evalObjSubIdent(_1ac1c6734_Eval*, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1b3954153_SubIdentExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4829_evalSubIdent(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3954153_SubIdentExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4b37_evalTuple(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b39514c4_TupleExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4ede_evalMap(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1a9a0ee0a_Map>, jule::Ptr<_1b3956265_BraceLit>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e52ec_evalBraceLit(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3956265_BraceLit>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e560a_evalAnonFn(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b395d13a_FnDecl>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e5918_evalBinop(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b39545c6_BinopExpr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e5c26_evalExprKind(jule::Ptr<_1ac1c6734_Eval>, jule::Any);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e6034_eval(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3950847_Expr>);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e6342_evalExpr(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1b3950847_Expr>);
struct _1ac1c6734_Eval {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Trait<_1a9a20701_Lookup> _field_lookup = jule::Trait<_1a9a20701_Lookup>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_prefix = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1ac17c960_Var> _field_owner = jule::Ptr<_1ac17c960_Var>();
	jule::Ptr<_1b3944154_FieldIns> _field_field = jule::Ptr<_1b3944154_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1ac1c6734_Eval(void) = default;

	inline bool operator==(_1ac1c6734_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ac1c6734_Eval _other) { return !this->operator==(_other); }


};
inline _1a99e67b5_unaryEval static__1a99e6c7c_new(jule::Ptr<_1ac1c6734_Eval>);
inline void _1a99e6e58_minus(_1a99e67b5_unaryEval*);
inline void _1a99e7134_plus(_1a99e67b5_unaryEval*);
inline void _1a99e7310_caret(_1a99e67b5_unaryEval*);
inline void _1a99e74db_excl(_1a99e67b5_unaryEval*);
inline void _1a99e76b7_star(_1a99e67b5_unaryEval*);
inline void _1a99e7893_amper(_1a99e67b5_unaryEval*);
inline void _1a99e7a6e_typeDecl(_1a99e67b5_unaryEval*);
inline void _1a99e7c4a_evalData(_1a99e67b5_unaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e8058_eval(_1a99e67b5_unaryEval*, jule::Ptr<_1b39530b9_UnaryExpr>);
struct _1a99e67b5_unaryEval {
	jule::Ptr<_1ac1c6734_Eval> _field_e = jule::Ptr<_1ac1c6734_Eval>();
	jule::Ptr<_1ac1c4bb6_Data> _field_d = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1b39530b9_UnaryExpr> _field_u = jule::Ptr<_1b39530b9_UnaryExpr>();
	

	_1a99e67b5_unaryEval(void) = default;

	inline bool operator==(_1a99e67b5_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a99e67b5_unaryEval _other) { return !this->operator==(_other); }


};
inline _1a99e8597_binaryEval static__1a99e8b5d_newPlain(jule::Ptr<_1ac1c6734_Eval>);
inline _1a99e8597_binaryEval static__1a99e8e9e_new(jule::Ptr<_1ac1c6734_Eval>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1a99e9213_checkTypeCompatibility(_1a99e8597_binaryEval*);
inline jule::Bool _1a99e94aa_checkStructCommonOperatorCompatibility(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9752_evalNil(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e99b6_evalEnum(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9c2a_evalTypeEnum(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9e8e_evalSptr(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea203_evalPtr(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea467_evalArr(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea6cb_evalSlc(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea940_evalFn(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99eaba4_evalStruct(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99eae18_evalTrait(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb17c_evalAny(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb3e1_evalBool(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb655_evalStr(_1a99e8597_binaryEval*);
inline void _1a99eb831_setTypeToGreater(_1a99e8597_binaryEval*);
inline void _1a99eba73_checkModData(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99ebc4e_mod(_1a99e8597_binaryEval*);
inline jule::Bool _1a99ec106_numbersAreCompatibile(_1a99e8597_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec36a_evalFloat(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec5ce_evalInt(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec843_evalPrim(_1a99e8597_binaryEval*);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ecaa7_evalOp(_1a99e8597_binaryEval*);
inline void _1a99ecd2c_evalConst(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99ed0a2_checkData(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99ed27d_checkDatas(_1a99e8597_binaryEval*);
inline void _1a99ed503_setModel(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99ed778_postEval(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99edb30_solveExplicit(_1a99e8597_binaryEval*, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a99ede3d_eval(_1a99e8597_binaryEval*, jule::Ptr<_1b39545c6_BinopExpr>&);
struct _1a99e8597_binaryEval {
	jule::Ptr<_1ac1c6734_Eval> _field_e = jule::Ptr<_1ac1c6734_Eval>();
	jule::Ptr<_1ac1c4bb6_Data> _field_l = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1ac1c4bb6_Data> _field_r = jule::Ptr<_1ac1c4bb6_Data>();
	jule::Ptr<_1e6a5c800_Token> _field_op = jule::Ptr<_1e6a5c800_Token>();
	

	_1a99e8597_binaryEval(void) = default;

	inline bool operator==(_1a99e8597_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a99e8597_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a9a0345e_InsGeneric {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>();
	

	_1a9a0345e_InsGeneric(void) = default;

	inline bool operator==(_1a9a0345e_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a9a0345e_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1a9a03e98_TypeAlias {
	jule::Ptr<_1b395b644_ScopeTree> _field_Scope = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1a9a08ce4_TypeSymbol> _field_Kind = jule::Ptr<_1a9a08ce4_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>();
	

	_1a9a03e98_TypeAlias(void) = default;

	inline bool operator==(_1a9a03e98_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1a9a03e98_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a05087_Str(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a05395_Equals(jule::Ptr<_1a9a04b8b_TypeKind>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1a9a0584b_CppLinked(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a05ab0_IsNil(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a05d24_Void(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a06088_Mutable(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a062ec_NilCompatible(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a06561_PerformsRC(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a067c5_SupportsCloning(_1a9a04b8b_TypeKind*);
inline jule::Bool _1a9a06a39_Variadicable(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a09663_Prim> _1a9a06c9d_Prim(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a07012_Sptr(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a1145b_Ptr> _1a9a07276_Ptr(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1b2553d42_Enum> _1a9a074da_Enum(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a0774e_TypeEnum(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a109ee_Arr> _1a9a079b3_Arr(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a0d854_Slc> _1a9a07c27_Slc(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a99c03b5_FnIns> _1a9a07e8b_Fn(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1b3967d9d_StructIns> _1a9a08200_Struct(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1b2551bec_Trait> _1a9a08464_Trait(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a0ee0a_Map> _1a9a086c8_Map(_1a9a04b8b_TypeKind*);
inline jule::Ptr<_1a9a0e3d2_Tuple> _1a9a0893c_Tup(_1a9a04b8b_TypeKind*);
struct _1a9a04b8b_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1a9a0475c_Kind> _field_Kind = jule::Trait<_1a9a0475c_Kind>();
	

	_1a9a04b8b_TypeKind(void) = default;

	inline bool operator==(_1a9a04b8b_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a9a04b8b_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9a0919b_checked(_1a9a08ce4_TypeSymbol*);
inline void _1a9a09377_removeKind(_1a9a08ce4_TypeSymbol*);
struct _1a9a08ce4_TypeSymbol {
	jule::Ptr<_1b394b326_TypeDecl> _field_Decl = jule::Ptr<_1b394b326_TypeDecl>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Kind = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a08ce4_TypeSymbol(void) = default;

	inline bool operator==(_1a9a08ce4_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a9a08ce4_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a099c6_Str(_1a9a09663_Prim*);
inline jule::Bool _1a9a09cd4_Equals(jule::Ptr<_1a9a09663_Prim>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1a9a0a257_IsConstraint(_1a9a09663_Prim*);
inline jule::Bool _1a9a0a4bb_IsI8(_1a9a09663_Prim*);
inline jule::Bool _1a9a0a730_IsI16(_1a9a09663_Prim*);
inline jule::Bool _1a9a0a994_IsI32(_1a9a09663_Prim*);
inline jule::Bool _1a9a0ac08_IsI64(_1a9a09663_Prim*);
inline jule::Bool _1a9a0ae6c_IsU8(_1a9a09663_Prim*);
inline jule::Bool _1a9a0b1d1_IsU16(_1a9a09663_Prim*);
inline jule::Bool _1a9a0b445_IsU32(_1a9a09663_Prim*);
inline jule::Bool _1a9a0b6a9_IsU64(_1a9a09663_Prim*);
inline jule::Bool _1a9a0b91d_IsF32(_1a9a09663_Prim*);
inline jule::Bool _1a9a0bb82_IsF64(_1a9a09663_Prim*);
inline jule::Bool _1a9a0bde6_IsInt(_1a9a09663_Prim*);
inline jule::Bool _1a9a0c15a_IsUint(_1a9a09663_Prim*);
inline jule::Bool _1a9a0c3be_IsUintptr(_1a9a09663_Prim*);
inline jule::Bool _1a9a0c633_IsBool(_1a9a09663_Prim*);
inline jule::Bool _1a9a0c897_IsStr(_1a9a09663_Prim*);
inline jule::Bool _1a9a0cb0b_IsAny(_1a9a09663_Prim*);
struct _1a9a09663_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1a9a09663_Prim(void) = default;

	inline bool operator==(_1a9a09663_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a9a09663_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a0d25a_Str(_1a9a0cde7_Sptr*);
inline jule::Bool _1a9a0d568_Equals(jule::Ptr<_1a9a0cde7_Sptr>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1a9a0cde7_Sptr {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Elem = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a0cde7_Sptr(void) = default;

	inline bool operator==(_1a9a0cde7_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a9a0cde7_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a0dd60_Str(_1a9a0d854_Slc*);
inline jule::Bool _1a9a0e16d_Equals(jule::Ptr<_1a9a0d854_Slc>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1a9a0d854_Slc {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Elem = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a0d854_Slc(void) = default;

	inline bool operator==(_1a9a0d854_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a9a0d854_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a0e745_Str(_1a9a0e3d2_Tuple*);
inline jule::Bool _1a9a0ea53_Equals(jule::Ptr<_1a9a0e3d2_Tuple>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1a9a0e3d2_Tuple {
	jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>();
	

	_1a9a0e3d2_Tuple(void) = default;

	inline bool operator==(_1a9a0e3d2_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1a9a0e3d2_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a1026d_Str(_1a9a0ee0a_Map*);
inline jule::Bool _1a9a1057b_Equals(jule::Ptr<_1a9a0ee0a_Map>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1a9a0ee0a_Map {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Key = jule::Ptr<_1a9a04b8b_TypeKind>();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Val = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a0ee0a_Map(void) = default;

	inline bool operator==(_1a9a0ee0a_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a9a0ee0a_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a10d62_Str(_1a9a109ee_Arr*);
inline jule::Bool _1a9a11170_Equals(jule::Ptr<_1a9a109ee_Arr>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1a9a109ee_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Elem = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a109ee_Arr(void) = default;

	inline bool operator==(_1a9a109ee_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a9a109ee_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a117be_Str(_1a9a1145b_Ptr*);
inline jule::Bool _1a9a11acc_Equals(jule::Ptr<_1a9a1145b_Ptr>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1a9a11e2e_IsUnsafe(_1a9a1145b_Ptr*);
struct _1a9a1145b_Ptr {
	jule::Ptr<_1a9a04b8b_TypeKind> _field_Elem = jule::Ptr<_1a9a04b8b_TypeKind>();
	

	_1a9a1145b_Ptr(void) = default;

	inline bool operator==(_1a9a1145b_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a9a1145b_Ptr _other) { return !this->operator==(_other); }


};
struct _1a9a123a2_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1a9a123a2_referencer(void) = default;

	inline bool operator==(_1a9a123a2_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a9a123a2_referencer _other) { return !this->operator==(_other); }


};
inline void _1a9a13804_pushErr(_1a9a130ea_typeChecker*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a9a139d0_allowBuiltin(_1a9a130ea_typeChecker*);
inline void _1a9a13bab_disallowBuiltin(_1a9a130ea_typeChecker*);
inline jule::Ptr<_1a9a09663_Prim> _1a9a13eb9_buildPrim(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&);
inline void _1b0b641ac_pushReference(_1a9a130ea_typeChecker*, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1b0b67259_pushReference(_1a9a130ea_typeChecker*, jule::Ptr<_1b2551bec_Trait>&);
inline void _1a9a144b4_pushReferenceByKind(_1a9a130ea_typeChecker*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline void _1a9a1487c_pushCycleError(_1a9a130ea_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1a9a14c34_checkCrossCycle(_1a9a130ea_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1a9a150db_checkIllegalCycles(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1a9a0475c_Kind> _1a9a15493_fromTypeAlias(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1a9a03e98_TypeAlias>&);
inline jule::Ptr<_1b2553d42_Enum> _1a9a1584a_fromEnum(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1b2553d42_Enum>&);
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a15c02_fromTypeEnum(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1b255543c_TypeEnum>&);
inline jule::Ptr<_1b2551bec_Trait> _1a9a160a9_fromTrait(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1b2551bec_Trait>&);
inline jule::Bool _1a9a16461_checkStructIns(_1a9a130ea_typeChecker*, jule::Ptr<_1b3967d9d_StructIns>&, jule::Ptr<_1e6a5c800_Token>&);
inline void _1a9a16708_appendUsedStructReference(_1a9a130ea_typeChecker*, jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Ptr<_1b3967d9d_StructIns> _1a9a16ac1_buildStructInstance(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Ptr<_1b3967d9d_StructIns> _1a9a16e78_fromStruct(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&, jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Trait<_1a9a0475c_Kind> _1a9a17286_getDef(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>&);
inline jule::Trait<_1a9a0475c_Kind> _1a9a17594_buildIdent(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b8dc_IdentTypeDecl>);
inline jule::Trait<_1a9a0475c_Kind> _1a9a178a2_buildSubIdent(_1a9a130ea_typeChecker*, jule::Ptr<_1b394c03b_SubIdentTypeDecl>);
inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a17bb0_buildSptrFromType(_1a9a130ea_typeChecker*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a17ebd_buildSptr(_1a9a130ea_typeChecker*, jule::Ptr<_1b394c6ce_SptrTypeDecl>);
inline jule::Ptr<_1a9a1145b_Ptr> _1a9a182cb_buildPtrFromType(_1a9a130ea_typeChecker*, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Ptr<_1a9a1145b_Ptr> _1a9a185d9_buildPtr(_1a9a130ea_typeChecker*, jule::Ptr<_1b394d1a2_PtrTypeDecl>);
inline jule::Ptr<_1a9a0d854_Slc> _1a9a188e7_buildSlc(_1a9a130ea_typeChecker*, jule::Ptr<_1b394caca_SlcTypeDecl>);
inline jule::Ptr<_1a9a109ee_Arr> _1a9a18c05_buildArr(_1a9a130ea_typeChecker*, jule::Ptr<_1b394d834_ArrTypeDecl>);
inline jule::Ptr<_1a9a0ee0a_Map> _1a9a19013_buildMap(_1a9a130ea_typeChecker*, jule::Ptr<_1b394e082_MapTypeDecl>);
inline jule::Ptr<_1a9a0e3d2_Tuple> _1a9a19321_buildTuple(_1a9a130ea_typeChecker*, jule::Ptr<_1b394cdb6_TupleTypeDecl>);
inline jule::Bool _1a9a1962e_checkFnTypes(_1a9a130ea_typeChecker*, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Ptr<_1a99c03b5_FnIns> _1a9a1993c_buildFn(_1a9a130ea_typeChecker*, jule::Ptr<_1b395d13a_FnDecl>);
inline jule::Trait<_1a9a0475c_Kind> _1a9a19c4a_buildByNamespace(_1a9a130ea_typeChecker*, jule::Ptr<_1b394c3e3_NamespaceTypeDecl>);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1a9a1a058_build(_1a9a130ea_typeChecker*, jule::Any&);
inline jule::Ptr<_1a9a04b8b_TypeKind> _1a9a1a366_checkDecl(_1a9a130ea_typeChecker*, jule::Ptr<_1b394b326_TypeDecl>&);
inline void _1a9a1a5db_check(_1a9a130ea_typeChecker*, jule::Ptr<_1a9a08ce4_TypeSymbol>&);
struct _1a9a130ea_typeChecker {
	jule::Ptr<_1ac15b224_Sema> _field_s = jule::Ptr<_1ac15b224_Sema>();
	jule::Trait<_1a9a20701_Lookup> _field_lookup = jule::Trait<_1a9a20701_Lookup>();
	jule::Ptr<_1a9a123a2_referencer> _field_referencer = jule::Ptr<_1a9a123a2_referencer>();
	jule::Ptr<_1a99c3286_ReferenceStack> _field_refers = jule::Ptr<_1a99c3286_ReferenceStack>();
	jule::Ptr<_1e6a5c800_Token> _field_errorToken = jule::Ptr<_1e6a5c800_Token>();
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a9a03e98_TypeAlias> _field_ownerAlias = jule::Ptr<_1a9a03e98_TypeAlias>();
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1a9a130ea_typeChecker(void) = default;

	inline bool operator==(_1a9a130ea_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a9a130ea_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a9a1ac4b_identTypeDecl(jule::Str&, jule::Ptr<_1b394b8dc_IdentTypeDecl>);
inline jule::Bool static__1a9a1b08c_exist(jule::Str&, jule::Any&);
struct _1a9a1a80b_identTypeLookup {
	

	_1a9a1a80b_identTypeLookup(void) = default;

	inline bool operator==(_1a9a1a80b_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a9a1a80b_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1aca241a2_FileInfo {
	jule::Ptr<_1b3916a1c_Ast> _field_Ast = jule::Ptr<_1b3916a1c_Ast>();
	jule::Slice<_1e6735e35_Log> _field_Errors = jule::Slice<_1e6735e35_Log>();
	

	_1aca241a2_FileInfo(void) = default;

	inline bool operator==(_1aca241a2_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1aca241a2_FileInfo _other) { return !this->operator==(_other); }


};
struct _1aca6c904_stmt {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1aca6c904_stmt(void) = default;

	inline bool operator==(_1aca6c904_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1aca6c904_stmt _other) { return !this->operator==(_other); }


};
inline void _1aca6d8b1_stop(_1aca6d22e_scopeParser*);
inline jule::Bool _1aca6db25_stopped(_1aca6d22e_scopeParser*);
inline jule::Bool _1aca6dd89_finished(_1aca6d22e_scopeParser*);
inline jule::Bool _1aca6e0ed_isLastSt(_1aca6d22e_scopeParser*);
inline void _1aca6e41c_pushErr(_1aca6d22e_scopeParser*, jule::Ptr<_1e6a5c800_Token>, jule::Str);
inline void _1aca6e73b_pushSuggestion(_1aca6d22e_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1aca6e9b1_insertAsNext(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1aca6c904_stmt> _1aca6ec25_next(_1aca6d22e_scopeParser*);
inline jule::Ptr<_1b395b644_ScopeTree> _1aca700cc_buildScope(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1b395e119_VarDecl> _1aca703da_buildVarSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b395e4c1_RetSt> _1aca706e8_buildRetSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395eb31_Iter> _1aca70a06_buildWhileNextIter(_1aca6d22e_scopeParser*, jule::Ptr<_1aca6c904_stmt>&);
inline jule::Ptr<_1b3960406_WhileKind> _1aca70d14_buildWhileIterKind(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca71122_getRangeKindKeysTokens(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b395e119_VarDecl> _1aca71430_buildRangeKindKey(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _1aca7173d_buildRangeKindKeys(_1aca6d22e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>&);
inline void _1aca71a7e_setupRangeKindKeysPlain(_1aca6d22e_scopeParser*, jule::Ptr<_1b3960c97_RangeKind>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca71dd1_setupRangeKindKeysExplicit(_1aca6d22e_scopeParser*, jule::Ptr<_1b3960c97_RangeKind>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca72211_setupRangeKindKeys(_1aca6d22e_scopeParser*, jule::Ptr<_1b3960c97_RangeKind>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3960c97_RangeKind> _1aca72662_buildRangeIterKind(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Any _1aca72a19_buildCommonIterKind(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1b395eb31_Iter> _1aca72d27_buildCommonIter(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395eb31_Iter> _1aca73135_buildIterSt(_1aca6d22e_scopeParser*, jule::Ptr<_1aca6c904_stmt>&);
inline jule::Ptr<_1b396114e_BreakSt> _1aca73443_buildBreakSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3961506_ContSt> _1aca73751_buildContSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3961979_If> _1aca73a5e_buildIf(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3961d31_Else> _1aca73d6c_buildElse(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39622a4_Conditional> _1aca7417a_buildIfElseChain(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395243c_CoExpr> _1aca74488_buildCoCallSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3959169_GotoSt> _1aca74796_buildGotoSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3959455_FallSt> _1aca74aa4_buildFallSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca74db2_buildTypeAliasSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca75324_pushCaseExpr(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Ptr<_1e6a5c800_Token>, jule::Bool, jule::Slice<jule::Ptr<_1b3950847_Expr>>&);
inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca756cb_buildCaseExprs(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Bool);
inline jule::Ptr<_1b395b644_ScopeTree> _1aca759d9_buildCaseScope(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Ptr<_1b3962ded_Case>,jule::Bool> _1aca75d91_buildCase(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1b3962ded_Case>>,jule::Ptr<_1b3961d31_Else>> _1aca76248_buildCases(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Bool);
inline jule::Ptr<_1b39635c4_MatchCase> _1aca76556_buildMatchCase(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395b644_ScopeTree> _1aca76864_buildScopeSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3958cb2_LabelSt> _1aca76b72_buildLabelSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1aca76e80_buildIdSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1aca858c8_assignInfo> _1aca7728d_buildAssignInfo(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3959a60_AssignLeft> _1aca7759b_buildAssignL(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b3959a60_AssignLeft>> _1aca778a9_buildAssignLs(_1aca6d22e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>&);
inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca77bb7_buildPlainAssign(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca77ec5_buildDeclAssign(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca782d3_buildAssignSt(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39511d8_UseExpr> _1aca785e1_buildUseExpr(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca788ee_buildSt(_1aca6d22e_scopeParser*, jule::Ptr<_1aca6c904_stmt>&);
inline void _1aca78c1d_build(_1aca6d22e_scopeParser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1b395b644_ScopeTree>&);
struct _1aca6d22e_scopeParser {
	jule::Ptr<_1aca88e1a_parser> _field_p = jule::Ptr<_1aca88e1a_parser>();
	jule::Ptr<_1b395b644_ScopeTree> _field_s = jule::Ptr<_1b395b644_ScopeTree>();
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1aca6c904_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1aca6d22e_scopeParser(void) = default;

	inline bool operator==(_1aca6d22e_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1aca6d22e_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1aca7ad96_pushErr(_1aca7a58d_exprBuilder*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aca7b1b5_pushSuggestion(_1aca7a58d_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b39514c4_TupleExpr> _1aca7b4c3_buildTuple(_1aca7a58d_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>&);
inline jule::Ptr<_1b395187b_LitExpr> _1aca7b7d1_buildLit(_1aca7a58d_exprBuilder*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca7bade_buildPrimitiveType(_1aca7a58d_exprBuilder*, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Any _1aca7bdec_buildSingle(_1aca7a58d_exprBuilder*, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1b39528b0_IdentExpr> _1aca7c20a_buildCppLinkedIdent(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39530b9_UnaryExpr> _1aca7c518_buildUnary(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3954153_SubIdentExpr> _1aca7c826_buildObjSubIdent(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3953bd0_NsSelectionExpr> _1aca7cb34_buildNsSubIdent(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca7ce42_buildType(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca7d250_buildSubIdent(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3953471_VariadicExpr> _1aca7d55d_buildVariadic(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Any _1aca7d86b_buildOpRight(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3950b33_RangeExpr> _1aca7db9b_buildBetweenParentheses(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3953828_CastExpr> _1aca7deba_tryBuildCast(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca7e383_pushArg(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1b3950847_Expr>>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca7e691_buildArgs(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _1aca7e99e_buildCallGenerics(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3954b15_FnCallExpr> _1aca7ee00_buildFnCall(_1aca7a58d_exprBuilder*, jule::Ptr<_1e6a5c800_Token>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca8020d_buildParenthesesRange(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3952085_UnsafeExpr> _1aca8051b_buildUnsafeExpr(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395d13a_FnDecl> _1aca80829_buildAnonFn(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca80b37_buildUnsafe(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca81000_pushRangeLitPart(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Ptr<_1e6a5c800_Token>, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca81330_getBraceRangeLitExprParts(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3955594_FieldExprPair> _1aca8164e_buildFieldExprPair(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3950847_Expr> _1aca8195c_buildStructLitExpr(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca81c6a_buildStructLitExprs(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3955ce2_StructLit> _1aca8209a_buildTypedStructLiteral(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3950847_Expr> _1aca823b9_buildBraceLitPart(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3956265_BraceLit> _1aca826c7_buildBraceLit(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca829d5_buildBraceRange(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca82ce3_getEnumerableParts(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3957200_SliceExpr> _1aca83101_buildSlice(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3957a91_IndexingExpr> _1aca83552_buildIndexing(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Ptr<_1b395819b_SlicingExpr> _1aca83ae6_buildSlicing(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>&, jule::Ptr<_1e6a5c800_Token>);
inline jule::Any _1aca83e04_buildBracketRange(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Any _1aca84212_buildData(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39545c6_BinopExpr> _1aca845b9_buildBinop(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64);
inline jule::Any _1aca848c7_build(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca84bd5_buildKind(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3950847_Expr> _1aca84ee3_buildFromTokens(_1aca7a58d_exprBuilder*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
struct _1aca7a58d_exprBuilder {
	jule::Ptr<_1aca88e1a_parser> _field_p = jule::Ptr<_1aca88e1a_parser>();
	

	_1aca7a58d_exprBuilder(void) = default;

	inline bool operator==(_1aca7a58d_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1aca7a58d_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1aca858c8_assignInfo {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_l = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_r = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Ptr<_1e6a5c800_Token> _field_setter = jule::Ptr<_1e6a5c800_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1aca858c8_assignInfo(void) = default;

	inline bool operator==(_1aca858c8_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1aca858c8_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1aca8924a_stop(_1aca88e1a_parser*);
inline jule::Bool _1aca894ae_stopped(_1aca88e1a_parser*);
inline void _1aca89877_pushErr(_1aca88e1a_parser*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aca89b96_pushSuggestion(_1aca88e1a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b3950847_Expr> _1aca89ea4_buildExpr(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3917b2d_Directive> _1aca8a2b2_buildDirective(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca8a537_pushDirective(_1aca88e1a_parser*, jule::Ptr<_1b3917b2d_Directive>);
inline jule::Ptr<_1b395b644_ScopeTree> _1aca8a8de_buildScope(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>);
inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca8ad40__buildType(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca8b291_buildType(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca8b59e_buildTypeAliasDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca8b8bd_buildVarTypeAndExpr(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b395e119_VarDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca8bbdc_buildVarCommon(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b395e119_VarDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca8c0a5_buildVarBegin(_1aca88e1a_parser*, jule::Ptr<_1b395e119_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b395e119_VarDecl> _1aca8c3b3_buildVar(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395890a_GenericDecl> _1aca8c6c1_buildGeneric(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _1aca8ca78_buildGenerics(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Ptr<_1e6a5c800_Token>&);
inline jule::Ptr<_1b395bd1a_ParamDecl> _1aca8cd86_buildSelfParam(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca8d24e_paramTypeBegin(_1aca88e1a_parser*, jule::Ptr<_1b395bd1a_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca8d56d_buildParamType(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b395bd1a_ParamDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca8d88c_buildParamBody(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b395bd1a_ParamDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395bd1a_ParamDecl> _1aca8db9a_buildParam(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca8de20_checkParams(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>> _1aca8e2c7_buildParams(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1b394e439_RetTypeDecl>,jule::Bool> _1aca8e67e_buildMultiRetType(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1b394e439_RetTypeDecl>,jule::Bool> _1aca8ea36_buildRetType(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64&);
inline jule::Ptr<_1b395d13a_FnDecl> _1aca8ee87_buildFnPrototype(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1b395d13a_FnDecl> _1aca903d8_buildFn(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca906e6_getUseDeclSelectors(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca90a15_buildCppUseDecl(_1aca88e1a_parser*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca90d34_buildStdUseDecl(_1aca88e1a_parser*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca91153_buildIdentUseDecl(_1aca88e1a_parser*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca91472_parseUseDecl(_1aca88e1a_parser*, jule::Ptr<_1b3963d66_UseDecl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3963d66_UseDecl> _1aca91829_buildUseDecl(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>, jule::Bool);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca91bd1_buildTypeEnumItemKind(jule::Ptr<_1aca88e1a_parser>, jule::I64&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>> _1aca91ede_buildTypeEnumItems(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3965a16_TypeEnumDecl> _1aca922ec_buildTypeEnumDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3950847_Expr> _1aca926a4_buildEnumItemExpr(jule::Ptr<_1aca88e1a_parser>, jule::I64&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>> _1aca929b2_buildEnumItems(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3964d12_EnumDecl> _1aca92cc0_buildEnumDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Any _1aca930cd_buildNodeEnumDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b3966066_FieldDecl> _1aca933db_buildField(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Slice<jule::Ptr<_1b3966066_FieldDecl>> _1aca936e9_buildStructDeclFields(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b39668c4_StructDecl> _1aca93a07_buildStructDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca93c7c_checkMethodReceiver(_1aca88e1a_parser*, jule::Ptr<_1b395d13a_FnDecl>&);
inline jule::Slice<jule::Ptr<_1b395d13a_FnDecl>> _1aca9408a_buildTraitMethods(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3966ece_TraitDecl> _1aca94398_buildTraitDecl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b395d13a_FnDecl> _1aca946a6_buildCppLinkFn(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b395e119_VarDecl> _1aca949b4_buildCppLinkVar(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b39668c4_StructDecl> _1aca94cc2_buildCppLinkStruct(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca950d0_buildCppLinkTypeAlias(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3963d66_UseDecl> _1aca953dd_buildCppLinkUse(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Any _1aca956eb_buildCppLink(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b395d13a_FnDecl> _1aca95a09_getMethod(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca95d28_parseImplBody(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b39675d9_Impl>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39675d9_Impl> _1aca96136_buildImpl(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Any _1aca96444_buildNodeData(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca96763_applyFnMeta(_1aca88e1a_parser*, jule::Ptr<_1b395d13a_FnDecl>&, jule::Bool);
inline void _1aca96a82_applyMeta(_1aca88e1a_parser*, _1b3917732_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1aca96db2_buildGeneralScopeNodeData(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline void _1aca970c1_pushUseDecl(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1b3963d66_UseDecl>&);
inline jule::Bool _1aca973ce_pushMetaNodes(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline _1b3917732_Node _1aca976dc_parseNode(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca97962_appendNode(jule::Ptr<_1aca88e1a_parser>, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca97dc4_removeRange(_1aca88e1a_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::I64>&);
inline void _1aca9828c_pushWrongOrderCloseErr(_1aca88e1a_parser*, jule::Ptr<_1e6a5c800_Token>&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::I64>&);
inline void _1aca986ee_pushRangeClose(_1aca88e1a_parser*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Slice<jule::I64>&);
inline void _1aca98974_checkRanges(_1aca88e1a_parser*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline void _1aca98be9_parse(jule::Ptr<_1aca88e1a_parser>, jule::Ptr<_1e6a62b8a_File>&);
struct _1aca88e1a_parser {
	jule::Ptr<_1b3916a1c_Ast> _field_ast = jule::Ptr<_1b3916a1c_Ast>();
	jule::Slice<jule::Ptr<_1b3917b2d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1b3917b2d_Directive>>();
	jule::Slice<_1e6735e35_Log> _field_errors = jule::Slice<_1e6735e35_Log>();
	

	_1aca88e1a_parser(void) = default;

	inline bool operator==(_1aca88e1a_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aca88e1a_parser _other) { return !this->operator==(_other); }


};
inline void _1aca9a778_pushErr(_1aca9a1d4_typeBuilder*, jule::Ptr<_1e6a5c800_Token>, jule::Str);
inline void _1aca9aa97_pushSuggestion(_1aca9a1d4_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9ad0b_buildPrim(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9b070_buildNamespace(_1aca9a1d4_typeBuilder*);
inline jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _1aca9b2d4_buildGenerics(_1aca9a1d4_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca9b548_identGenerics(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9b7ac_buildIdent(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9ba21_buildCppLink(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9bc85_buildFn(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9bee9_buildPtr(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c25d_buildSptr(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c4c2_buildOp(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c736_buildSlc(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c99a_buildArr(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9cd52_buildMap(_1aca9a1d4_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9d0b6_buildEnumerable(_1aca9a1d4_typeBuilder*);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca9d32a_step(_1aca9a1d4_typeBuilder*);
inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca9d58e_build(_1aca9a1d4_typeBuilder*);
struct _1aca9a1d4_typeBuilder {
	jule::Ptr<_1aca88e1a_parser> _field_p = jule::Ptr<_1aca88e1a_parser>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1aca9a1d4_typeBuilder(void) = default;

	inline bool operator==(_1aca9a1d4_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1aca9a1d4_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1ac1ecddc_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1ac1ecddc_CompileInfo(void) = default;

	inline bool operator==(_1ac1ecddc_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ac1ecddc_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ac1ee790_pushErr(_1ac1ee240_directiveEval*, jule::Ptr<_1e6a5c800_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1ac1eeb47_splitOperans(_1ac1ee240_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Bool _1ac1eee55_evalDirectiveIdent(_1ac1ee240_directiveEval*, jule::Str);
inline jule::Bool _1ac200263_evalDirectivePart(_1ac1ee240_directiveEval*, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Bool _1ac2004c7_eval(_1ac1ee240_directiveEval*);
struct _1ac1ee240_directiveEval {
	jule::Slice<_1e6735e35_Log> _field_logs = jule::Slice<_1e6735e35_Log>();
	jule::Ptr<_1b3917b2d_Directive> _field_d = jule::Ptr<_1b3917b2d_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1ac1ee240_directiveEval(void) = default;

	inline bool operator==(_1ac1ee240_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1ac1ee240_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aca1ec91_JuleImporter> static__1aca25219_New(_1ac1ecddc_CompileInfo);
inline jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _1aca2603e_AllPackages(_1aca1ec91_JuleImporter*);
inline void _1aca2786a_SetModPath(_1aca1ec91_JuleImporter*, jule::Str);
inline jule::Str _1aca38826_GetModPath(_1aca1ec91_JuleImporter*);
inline jule::Str _1aca455d0_ModById(_1aca1ec91_JuleImporter*, jule::I64);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1aca4bdbc_GetImport(_1aca1ec91_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1b3916a1c_Ast>>,jule::Slice<_1e6735e35_Log>> _1aca53e3a_ImportPackage(_1aca1ec91_JuleImporter*, jule::Str, jule::Bool);
inline void _1aca59506_Imported(_1aca1ec91_JuleImporter*, jule::Ptr<_1ac1530c8_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1e6735e35_Log>> _1aca2d266_isPassBuildDirectives(_1aca1ec91_JuleImporter*, jule::Ptr<_1b3916a1c_Ast>&);
struct _1aca1ec91_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1aca1ec91_JuleImporter(void) = default;

	inline bool operator==(_1aca1ec91_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1aca1ec91_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1aca9e507_OrderedDefines {
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1b393b9dc_Struct>>();
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_Globals = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	

	_1aca9e507_OrderedDefines(void) = default;

	inline bool operator==(_1aca9e507_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1aca9e507_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b103426e_isCommonOrdered(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>&, jule::Ptr<_1b393b9dc_Struct>);
inline jule::Bool _1b103c62e_isCommonOrdered(jule::Slice<jule::Ptr<_1ac17c960_Var>>&, jule::Ptr<_1ac17c960_Var>);
inline void _1b10302ae_orderCommon(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>&);
inline void _1b10304ce_orderCommon(jule::Slice<jule::Ptr<_1ac17c960_Var>>&);
inline void static__1acaa012e_orderStructures(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>&);
inline void static__1acaa033d_orderVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>&);
struct _1aca9e75a_defineOrderer {
	

	_1aca9e75a_defineOrderer(void) = default;

	inline bool operator==(_1aca9e75a_defineOrderer _other) { return true; }

	inline bool operator!=(_1aca9e75a_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1acb92155_liveTable {
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _field_vars = jule::Slice<jule::Ptr<_1ac17c960_Var>>();
	jule::Slice<jule::Ptr<_1a99c03b5_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1a99c03b5_FnIns>>();
	jule::Slice<jule::Ptr<_1b3967d9d_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1b3967d9d_StructIns>>();
	jule::Slice<jule::Ptr<_1b2551bec_Trait>> _field_traits = jule::Slice<jule::Ptr<_1b2551bec_Trait>>();
	

	_1acb92155_liveTable(void) = default;

	inline bool operator==(_1acb92155_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1acb92155_liveTable _other) { return !this->operator==(_other); }


};
inline void _1acbc4341_optimizeChild(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1acbc45d8_optimizeBodyChildExceptional(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1acbc486e_optimizeBodyChild(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1acbc4ae4_optimizeExprModel(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Any&);
inline void _1acbc4cc0_eliminateFollowed(_1acbc3d68_scopeDeadCode*);
inline void _1acbc5045_pushGoto(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac137222_GotoSt>);
inline void _1acbc52ba_pushLabel(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac136e36_Label>);
inline void _1acbc5540_optimizeRangeIter(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac136397_RangeIter>);
inline void _1acbc57b5_optimizeWhileIter(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac1359b2_WhileIter>);
inline void _1acbc5a3a_optimizeInfIter(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac13553e_InfIter>);
inline void _1acbc5cb0_optimizeConditional(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac135253_Conditional>);
inline void _1acbc6035_optimizeMatch(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac138443_Match>);
inline void _1acbc62aa_optimizeAssign(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac137a4c_Assign>);
inline void _1acbc6530_optimizeMultiAssign(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Ptr<_1ac137e04_MultiAssign>);
inline void _1acbc67a5_optimizeStmt(jule::Ptr<_1acbc3d68_scopeDeadCode>, jule::Any);
inline void _1acbc6981_optimizeStmts(jule::Ptr<_1acbc3d68_scopeDeadCode>);
struct _1acbc3d68_scopeDeadCode {
	jule::Ptr<_1acbc3d68_scopeDeadCode> _field_parent = jule::Ptr<_1acbc3d68_scopeDeadCode>();
	jule::Ptr<_1ac1346e7_Scope> _field_s = jule::Ptr<_1ac1346e7_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac136e36_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ac136e36_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac137222_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ac137222_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1acbc3d68_scopeDeadCode(void) = default;

	inline bool operator==(_1acbc3d68_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1acbc3d68_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1acbc7cc3_exprDeadCode static__1acbc83bc_new(jule::Ptr<_1acbc3d68_scopeDeadCode>&);
inline void _1acbc8642_binary(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b5487_BinopExprModel>);
inline void _1acbc88b7_unary(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b5674_UnaryExprModel>);
inline void _1acbc8b3c_structureLit(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b5a4d_StructLitExprModel>);
inline void _1acbc8db2_allocStructure(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>);
inline void _1acbc9137_casting(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b5e27_CastingExprModel>);
inline void _1acbc93ac_args(_1acbc7cc3_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1acbc9632_funcCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b6114_FnCallExprModel>);
inline void _1acbc98a7_slice(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b6301_SliceExprModel>);
inline void _1acbc9b2c_array(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b7775_ArrayExprModel>);
inline void _1acbc9da2_indexing(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b64dd_IndexingExprModel>);
inline void _1acbca127_anonFunc(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b66ca_AnonFnExprModel>);
inline void _1acbca39c_map(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b6aa4_MapExprModel>);
inline void _1acbca622_slicing(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b6c91_SlicingExprModel>);
inline void _1acbca897_traitSub(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>);
inline void _1acbcab1c_structureSub(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b739b_StructSubIdentExprModel>);
inline void _1acbcad92_commonSub(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>);
inline void _1acbcb117_tuple(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b7d3b_TupleExprModel>);
inline void _1acbcb38c_newCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>);
inline void _1acbcb612_outCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>);
inline void _1acbcb887_outlnCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>);
inline void _1acbcbb0c_panicCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>);
inline void _1acbcbd82_assertCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>);
inline void _1acbcc107_errorCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>);
inline void _1acbcc37c_makeCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>);
inline void _1acbcc602_appendCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>);
inline void _1acbcc877_cloneCall(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>);
inline void _1acbccaec_sizeof(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b716a_SizeofExprModel>);
inline void _1acbccd72_alignof(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b98cb_AlignofExprModel>);
inline void _1acbcd0e7_integratedToStr(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>);
inline void _1acbcd36c_free(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99ba17e_FreeExprModel>);
inline void _1acbcd5e2_backendEmit(_1acbc7cc3_exprDeadCode*, jule::Ptr<_1a99b9e92_BackendEmitExprModel>);
inline void _1acbcd867_optimize(_1acbc7cc3_exprDeadCode*, jule::Any&);
struct _1acbc7cc3_exprDeadCode {
	jule::Ptr<_1acbc3d68_scopeDeadCode> _field_s = jule::Ptr<_1acbc3d68_scopeDeadCode>();
	

	_1acbc7cc3_exprDeadCode(void) = default;

	inline bool operator==(_1acbc7cc3_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1acbc7cc3_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1b256d587_UnsafeBinopExprModel {
	jule::Ptr<_1a99b5487_BinopExprModel> _field_Node = jule::Ptr<_1a99b5487_BinopExprModel>();
	

	_1b256d587_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1b256d587_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b256d587_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b25d173d_UnsafeIndexingExprModel {
	jule::Ptr<_1a99b64dd_IndexingExprModel> _field_Node = jule::Ptr<_1a99b64dd_IndexingExprModel>();
	

	_1b25d173d_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1b25d173d_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b25d173d_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a9b7901e_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1a99b6301_SliceExprModel> _field_Elems = jule::Ptr<_1a99b6301_SliceExprModel>();
	

	_1a9b7901e_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a9b7901e_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a9b7901e_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b25dd283_MutSlicingExprModel {
	jule::Ptr<_1e6a5c800_Token> _field_Token = jule::Ptr<_1e6a5c800_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1b25dd283_MutSlicingExprModel(void) = default;

	inline bool operator==(_1b25dd283_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b25dd283_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a9b6b53e_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1a9b6b53e_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a9b6b53e_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a9b6b53e_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9ace606_scopeOptimizer> static__1b257d9a4_new(jule::Ptr<_1ac1346e7_Scope>);
inline void _1b2596208_setCurrentStmt(_1a9ace606_scopeOptimizer*, jule::Any);
inline void _1b25b12bc_optimizeData(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac1c4bb6_Data>);
inline void _1b25b3115_optimizeVar(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac17c960_Var>);
inline void _1b25b4303_optimizeConditional(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac135253_Conditional>);
inline void _1b25b4a51_buildDefaultConstatTrueCase(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac138e8d_Case>, jule::I64&, jule::Ptr<_1ac138443_Match>&);
inline void _1b25b6646_optimizeMatch(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac138443_Match>);
inline void _1b25b7834_optimizeRangeIter(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac136397_RangeIter>);
inline void _1b25b8082_optimizeWhileIter(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac1359b2_WhileIter>);
inline jule::Bool _1b25c0919_substr(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac137a4c_Assign>);
inline jule::Bool _1b25c1497_strInsert(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac137a4c_Assign>);
inline jule::Bool _1b25c2355_strAssign(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac137a4c_Assign>);
inline void _1b25b649d_optimizeAssign(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac137a4c_Assign>);
inline void _1b25c3323_optimizeMultiAssign(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac137e04_MultiAssign>);
inline void _1b25c41d1_optimizeRet(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac1399b6_RetSt>);
inline void _1b25d2211_optimizeStmt(_1a9ace606_scopeOptimizer*, jule::Any);
inline void _1b25d5159_optimizeChild(_1a9ace606_scopeOptimizer*, jule::Ptr<_1ac1346e7_Scope>);
inline void _1b25d5b93_optimize(_1a9ace606_scopeOptimizer*);
struct _1a9ace606_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1ac1346e7_Scope> _field_scope = jule::Ptr<_1ac1346e7_Scope>();
	

	_1a9ace606_scopeOptimizer(void) = default;

	inline bool operator==(_1a9ace606_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9ace606_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a9ac5d17_optimize(jule::Any&);
inline jule::Bool _1a9acd3a2_strCond(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5487_BinopExprModel>);
inline void _1a9b6c133_binary(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5487_BinopExprModel>);
inline void _1aa028434_unary(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5674_UnaryExprModel>);
inline void _1aa0474db_structureLit(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5a4d_StructLitExprModel>);
inline void _1b25da46c_allocStructure(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>);
inline void _1a9ab3a3b_casting(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b5e27_CastingExprModel>);
inline void _1a9ab45a8_args(_1b25d042e_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1aa068364_scope(_1b25d042e_exprOptimizer*, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1aa069497_funcCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b6114_FnCallExprModel>);
inline void _1aa06e601_slice(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b6301_SliceExprModel>);
inline void _1aa07475a_array(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b7775_ArrayExprModel>);
inline void _1b25d1d8c_indexing(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b64dd_IndexingExprModel>);
inline void _1b26365d9_anonFunc(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b66ca_AnonFnExprModel>);
inline void _1aa027cb3_map(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b6aa4_MapExprModel>);
inline void _1b2580599_slicing(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b6c91_SlicingExprModel>);
inline void _1b25829db_traitSub(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>);
inline void _1b25c01cc_structureSub(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b739b_StructSubIdentExprModel>);
inline void _1aa079b7d_commonSub(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>);
inline void _1b2556e33_tuple(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b7d3b_TupleExprModel>);
inline void _1b25d372e_newCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>);
inline void _1b25d7ce9_outCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>);
inline void _1aa0279a5_outlnCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>);
inline void _1aa0bae99_panicCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>);
inline void _1aa0bb0cb_assertCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>);
inline void _1aa0bb20d_errorCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>);
inline void _1aa0bb340_makeCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>);
inline void _1aa0bb472_appendCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>);
inline void _1aa0bb5a4_cloneCall(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>);
inline void _1aa0bb6d6_sizeof(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b716a_SizeofExprModel>);
inline void _1aa0bb818_alignof(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b98cb_AlignofExprModel>);
inline void _1aa0bb94a_integratedToStr(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>);
inline void _1aa0bba7c_free(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99ba17e_FreeExprModel>);
inline void _1aa0bbbae_backendEmit(_1b25d042e_exprOptimizer*, jule::Ptr<_1a99b9e92_BackendEmitExprModel>);
inline void _1aa0bbce1_do(_1b25d042e_exprOptimizer*);
struct _1b25d042e_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1b25d042e_exprOptimizer(void) = default;

	inline bool operator==(_1b25d042e_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1b25d042e_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acb9c627_Optimizer> static__1acb0b058_New(jule::Ptr<_1aca5966b_IR>&);
inline void _1acacec96_optimizeGlobal(_1acb9c627_Optimizer*, jule::Ptr<_1ac17c960_Var>&);
inline void _1acb3e9a4_optimizeFunction(_1acb9c627_Optimizer*, jule::Ptr<_1a99bc714_Fn>&);
inline void _1acb43ce9_optimizeStruct(_1acb9c627_Optimizer*, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1acb47946_optimizeGlobals(_1acb9c627_Optimizer*, jule::Ptr<_1ac156032_Package>&);
inline void _1acb4dc9e_optimizeFunctions(_1acb9c627_Optimizer*, jule::Ptr<_1ac156032_Package>&);
inline void _1acb56e0b_optimizeStructs(_1acb9c627_Optimizer*, jule::Ptr<_1ac156032_Package>&);
inline void _1acb62510_optimizePackage(_1acb9c627_Optimizer*, jule::Ptr<_1ac156032_Package>&);
inline void _1acb66b41_Optimize(_1acb9c627_Optimizer*);
struct _1acb9c627_Optimizer {
	jule::Ptr<_1aca5966b_IR> _field_ir = jule::Ptr<_1aca5966b_IR>();
	

	_1acb9c627_Optimizer(void) = default;

	inline bool operator==(_1acb9c627_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1acb9c627_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1ac567cc3_Reset(void);
inline void static__1ac5690d2_Print(jule::Str, jule::Str);
struct _1ac568da1_AnsiEscape {
	

	_1ac568da1_AnsiEscape(void) = default;

	inline bool operator==(_1ac568da1_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ac568da1_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ac56aa84_LogFlat(_1e6735e35_Log&);
inline void static__1ac56ac93_LogError(_1e6735e35_Log&);
inline void static__1ac56aea2_Log(_1e6735e35_Log&);
inline void static__1ac56b1b1_PrintLogs(jule::Slice<_1e6735e35_Log>&);
struct _1ac56a7cb_Logger {
	

	_1ac56a7cb_Logger(void) = default;

	inline bool operator==(_1ac56a7cb_Logger _other) { return true; }

	inline bool operator!=(_1ac56a7cb_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1ac3dd6d7_Unix(_1ac3dd330_AbsTime*);
struct _1ac3dd330_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1ac3dd330_AbsTime(void) = default;

	inline bool operator==(_1ac3dd330_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ac3dd330_AbsTime _other) { return !this->operator==(_other); }


};
inline _1ac3dd9c3_Time static__1ac3ddd69_Unix(jule::U64);
inline _1ac3dd9c3_Time static__1ac3de067_Now(void);
inline jule::U64 _1ac3de4b8_Unix(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3de72c_Day(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3de991_Month(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3dec05_Year(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3dee69_Second(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3e01cd_Minute(_1ac3dd9c3_Time*);
inline jule::U64 _1ac3e0442_Hour(_1ac3dd9c3_Time*);
inline _1ac3dd330_AbsTime _1ac3e06a6_Abs(_1ac3dd9c3_Time*);
struct _1ac3dd9c3_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1ac3dd9c3_Time(void) = default;

	inline bool operator==(_1ac3dd9c3_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ac3dd9c3_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac367595_scopeCoder> static__1ac367bb1_new(jule::Ptr<_1ac3e41c1_ObjectCoder>&);
inline void _1ac367e36_rangeIndexIter(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136397_RangeIter>&);
inline void _1ac3681ab_rangeHashmapIter(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136397_RangeIter>&);
inline void _1ac368431_ifCase(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac134ae3_If>);
inline void _1ac3686a6_conditional(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac135253_Conditional>);
inline void _1ac36892b_infIter(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac13553e_InfIter>);
inline void _1ac368ba1_whileIter(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1359b2_WhileIter>);
inline void _1ac368e26_rangeIter(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136397_RangeIter>);
inline void _1ac36919b_cont(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136793_ContSt>);
inline void _1ac369421_label(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136e36_Label>);
inline void _1ac369696_gotoSt(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac137222_GotoSt>);
inline void _1ac36991b_postfix(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1375c9_Postfix>);
inline void _1ac369b91_assign(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac137a4c_Assign>);
inline void _1ac369e16_multiAssign(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac137e04_MultiAssign>);
inline jule::Fn<void(void)> _1ac36a224_matchExpr(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac138443_Match>);
inline void _1ac36a543_case(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac138443_Match>, jule::Ptr<_1ac138e8d_Case>);
inline void _1ac36a7b8_matchSt(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac138443_Match>);
inline void _1ac36aa3d_fallSt(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac139543_FallSt>);
inline void _1ac36acb3_breakSt(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac136b4a_BreakSt>);
inline void _1ac36b038_retWithVars(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1399b6_RetSt>);
inline void _1ac36b2ad_retTuple(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1399b6_RetSt>);
inline void _1ac36b533_retWithExprs(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1399b6_RetSt>);
inline void _1ac36b7a8_retSt(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1399b6_RetSt>);
inline void _1ac36bca3_var(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac17c960_Var>);
inline void _1ac36c028_st(jule::Ptr<_1ac367595_scopeCoder>, jule::Any);
inline void _1ac36c29d_scopeStmts(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1346e7_Scope>&);
inline void _1ac36c523_scope(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1ac1346e7_Scope>);
inline void _1ac36c798_funcScope(jule::Ptr<_1ac367595_scopeCoder>, jule::Ptr<_1a99c03b5_FnIns>);
struct _1ac367595_scopeCoder {
	jule::Ptr<_1ac3e41c1_ObjectCoder> _field_oc = jule::Ptr<_1ac3e41c1_ObjectCoder>();
	

	_1ac367595_scopeCoder(void) = default;

	inline bool operator==(_1ac367595_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac367595_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac3700d6_exprCoder> static__1ac3704d2_new(jule::Ptr<_1ac3e41c1_ObjectCoder>&);
inline void _1ac370757_string(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9956c86_Const>&);
inline void _1ac3709cc_boolean(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9956c86_Const>&);
inline void _1ac370ba8_nilLit(jule::Ptr<_1ac3700d6_exprCoder>);
inline jule::Bool _1ac370eb6_ftoaSpecialCases(jule::Ptr<_1ac3700d6_exprCoder>, jule::F64&);
inline void _1ac37123b_float32(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9956c86_Const>&);
inline void _1ac3714b1_float64(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9956c86_Const>&);
inline void _1ac3717d0_constant(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9956c86_Const>, jule::Bool);
inline void _1ac371b98_divByZeroBinary(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1e6a5c800_Token>&, jule::Ptr<_1a99b529a_OperandExprModel>&, jule::Ptr<_1a99b529a_OperandExprModel>&);
inline void _1ac371e1d_unsafeBinary(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5487_BinopExprModel>);
inline void _1ac372193_binary(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5487_BinopExprModel>);
inline void _1ac372418_var(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1ac17c960_Var>);
inline void _1ac37268d_structureIns(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1b3967d9d_StructIns>);
inline void _1ac372913_unary(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5674_UnaryExprModel>);
inline void _1ac372b88_structureLit(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5a4d_StructLitExprModel>);
inline void _1ac372e0d_allocStructure(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>);
inline void _1ac373183_casting(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b5e27_CastingExprModel>);
inline void _1ac373408_args(jule::Ptr<_1ac3700d6_exprCoder>, jule::Slice<jule::Any>);
inline void _1ac37367d_modelForCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Any);
inline void _1ac373903_pushCallInf(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6114_FnCallExprModel>&);
inline jule::Bool _1ac373c11_isWrapped(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6114_FnCallExprModel>&);
inline void _1ac373e86_pureFuncCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6114_FnCallExprModel>&);
inline void _1ac37420b_funcCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6114_FnCallExprModel>);
inline void _1ac374481_slice(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6301_SliceExprModel>);
inline void _1ac374706_indexing(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b64dd_IndexingExprModel>);
inline void _1ac37497b_unsafeIndexing(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1b25d173d_UnsafeIndexingExprModel>);
inline void _1ac374c01_anonFunc(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b66ca_AnonFnExprModel>);
inline void _1ac374e76_map(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6aa4_MapExprModel>);
inline void _1ac3751eb_slicing(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6c91_SlicingExprModel>);
inline void _1ac375471_traitSub(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>);
inline void _1ac3756e6_structureSub(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b739b_StructSubIdentExprModel>);
inline void _1ac37596b_commonIdent(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b7962_CommonIdentExprModel>);
inline void _1ac375be1_commonSub(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>);
inline void _1ac375e66_array(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b7775_ArrayExprModel>);
inline void _1ac3761db_funcInsCommon(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99c03b5_FnIns>);
inline void _1ac376461_funcIns(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99c03b5_FnIns>);
inline void _1ac3766d6_tuple(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b7d3b_TupleExprModel>);
inline void _1ac37695b_newCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>);
inline void _1ac376bd1_outCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>);
inline void _1ac376e56_outlnCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>);
inline void _1ac3771cb_panicCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>);
inline void _1ac377451_assertCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>);
inline void _1ac3776c6_errorCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>);
inline void _1ac37794b_copyCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b907e_BuiltinCopyCallExprModel>);
inline void _1ac377bc1_makeCallSlice(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>&);
inline void _1ac377e46_makeCallStr(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>&);
inline void _1ac3781bb_makeCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>);
inline void _1ac378441_pushToSlice(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9b7901e_PushToSliceExprModel>);
inline void _1ac3786b6_appendCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>);
inline void _1ac37893b_cloneCall(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>);
inline void _1ac378bb1_sizeof(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b716a_SizeofExprModel>);
inline void _1ac378e36_alignof(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b98cb_AlignofExprModel>);
inline jule::Str _1ac379244_runeLit(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b9ab8_RuneExprModel>);
inline void _1ac3794b9_structureStatic(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b7588_StructStaticIdentExprModel>);
inline void _1ac37973e_integratedToStr(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>);
inline void _1ac3799b4_backendEmit(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99b9e92_BackendEmitExprModel>);
inline void _1ac379c39_free(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a99ba17e_FreeExprModel>);
inline void _1ac379eae_mutSlicing(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1b25dd283_MutSlicingExprModel>);
inline void _1ac37a234_strInsertBegin(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel>);
inline void _1ac37a4a9_model(jule::Ptr<_1ac3700d6_exprCoder>, jule::Any);
inline void _1ac37a72e_expr(jule::Ptr<_1ac3700d6_exprCoder>, jule::Any);
inline void _1ac37a9a4_val(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1ac1c5c3e_Value>);
inline void _1ac37ac29_initExpr(jule::Ptr<_1ac3700d6_exprCoder>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1ac3700d6_exprCoder {
	jule::Ptr<_1ac3e41c1_ObjectCoder> _field_oc = jule::Ptr<_1ac3e41c1_ObjectCoder>();
	

	_1ac3700d6_exprCoder(void) = default;

	inline bool operator==(_1ac3700d6_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac3700d6_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ac37d28c_cloneFuncDecl(jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Str static__1ac37d534_cloneFuncDef(jule::Ptr<_1b393b9dc_Struct>&);
struct _1ac37ced4_deriveCoder {
	

	_1ac37ced4_deriveCoder(void) = default;

	inline bool operator==(_1ac37ced4_deriveCoder _other) { return true; }

	inline bool operator!=(_1ac37ced4_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac37e414_TestCoder> static__1ac37e887_New(jule::Ptr<_1ac3e41c1_ObjectCoder>&);
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac37eaeb_findTestingPackage(jule::Ptr<_1ac37e414_TestCoder>);
inline void _1ac37ed71_appendTest(jule::Ptr<_1ac37e414_TestCoder>, jule::Ptr<_1a99c03b5_FnIns>);
inline void _1ac3800e6_appendPackageTests(jule::Ptr<_1ac37e414_TestCoder>, jule::Ptr<_1ac156032_Package>&);
inline jule::Bool _1ac38035a_readyTestingPackage(jule::Ptr<_1ac37e414_TestCoder>);
inline void _1ac380536_callTmReset(jule::Ptr<_1ac37e414_TestCoder>);
inline void _1ac380712_callTmFailed(jule::Ptr<_1ac37e414_TestCoder>);
inline void _1ac3808dd_callTmSkipped(jule::Ptr<_1ac37e414_TestCoder>);
inline void _1ac380ab9_Serialize(jule::Ptr<_1ac37e414_TestCoder>);
struct _1ac37e414_TestCoder {
	jule::Ptr<_1b3967d9d_StructIns> _field_t = jule::Ptr<_1b3967d9d_StructIns>();
	jule::Ptr<_1a99bc714_Fn> _field_tmReset = jule::Ptr<_1a99bc714_Fn>();
	jule::Ptr<_1a99bc714_Fn> _field_tmFailed = jule::Ptr<_1a99bc714_Fn>();
	jule::Ptr<_1a99bc714_Fn> _field_tmSkipped = jule::Ptr<_1a99bc714_Fn>();
	jule::Ptr<_1ac3e41c1_ObjectCoder> _field_oc = jule::Ptr<_1ac3e41c1_ObjectCoder>();
	

	_1ac37e414_TestCoder(void) = default;

	inline bool operator==(_1ac37e414_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac37e414_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ac382071_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1ac38245b_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1ac382703_func(jule::Ptr<_1a99bc714_Fn>&);
inline jule::Str static__1ac38299a_funcIns(jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Str static__1ac382c42_traitDecl(jule::Ptr<_1b2551bec_Trait>);
inline jule::Str static__1ac382ed9_param(jule::Ptr<_1a99badc7_Param>&);
inline jule::Str static__1ac383281_structure(jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Str static__1ac383528_structureIns(jule::Ptr<_1b3967d9d_StructIns>&);
inline jule::Str static__1ac3837c0_field(jule::Ptr<_1b392dea7_Field>&);
inline jule::Str static__1ac383a67_var(jule::Ptr<_1ac17c960_Var>);
inline jule::Str static__1ac383d0e_iterBegin(jule::Uintptr);
inline jule::Str static__1ac3840a6_iterEnd(jule::Uintptr);
inline jule::Str static__1ac38434d_iterNext(jule::Uintptr);
inline jule::Str static__1ac3845e5_label(jule::Str&);
inline jule::Str static__1ac38488c_matchEnd(jule::Uintptr);
inline jule::Str static__1ac384b34_caseBegin(jule::Uintptr);
struct _1ac381a65_identCoder {
	

	_1ac381a65_identCoder(void) = default;

	inline bool operator==(_1ac381a65_identCoder _other) { return true; }

	inline bool operator!=(_1ac381a65_identCoder _other) { return !this->operator==(_other); }


};
struct _1ac3e3ce7_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1ac3e3ce7_SerializationInfo(void) = default;

	inline bool operator==(_1ac3e3ce7_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ac3e3ce7_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ac3e3ed4_traitHash {
	jule::Ptr<_1b2551bec_Trait> _field_t = jule::Ptr<_1b2551bec_Trait>();
	jule::Ptr<_1b3967d9d_StructIns> _field_s = jule::Ptr<_1b3967d9d_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1ac3e3ed4_traitHash(void) = default;

	inline bool operator==(_1ac3e3ed4_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ac3e3ed4_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac3e9ec9_Str(_1ac3e9c10_customType*);
inline jule::Bool _1ac3ea2d7_Equals(jule::Ptr<_1ac3e9c10_customType>, jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1ac3e9c10_customType {
	jule::Str _field_kind = jule::Str();
	

	_1ac3e9c10_customType(void) = default;

	inline bool operator==(_1ac3e9c10_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ac3e9c10_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ac3eaa35_toType(jule::Str);
inline jule::Str static__1ac3eaccc_prim(jule::Ptr<_1a9a09663_Prim>);
inline jule::Str static__1ac3eb074_tuple(jule::Ptr<_1a9a0e3d2_Tuple>);
inline jule::Str static__1ac3eb31b_asSptr(jule::Str);
inline jule::Str static__1ac3eb5b3_asPtr(jule::Str);
inline jule::Str static__1ac3eb85a_sptr(jule::Ptr<_1a9a0cde7_Sptr>);
inline jule::Str static__1ac3ebb02_ptr(jule::Ptr<_1a9a1145b_Ptr>);
inline jule::Str static__1ac3ebd99_enumDecl(jule::Ptr<_1b2553d42_Enum>);
inline jule::Str static__1ac3ec141_typeEnumDecl(jule::Ptr<_1b255543c_TypeEnum>);
inline jule::Str static__1ac3ec3d8_asSlice(jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Str static__1ac3ec680_slice(jule::Ptr<_1a9a0d854_Slc>);
inline jule::Str static__1ac3ec927_map(jule::Ptr<_1a9a0ee0a_Map>);
inline jule::Str static__1ac3ecbbe_traitIdent(jule::Str);
inline jule::Str static__1ac3ece66_traitDecl(jule::Ptr<_1b2551bec_Trait>);
inline jule::Str static__1ac3ed20d_structure(jule::Ptr<_1b393b9dc_Struct>);
inline jule::Str static__1ac3ed4a5_structureIns(jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Str static__1ac3ed74c_array(jule::Ptr<_1a9a109ee_Arr>);
inline jule::Str static__1ac3edc8b_paramIns(jule::Ptr<_1a99be4e6_ParamIns>&);
inline jule::Str static__1ac3ee2ca_funcInsResult(jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Str static__1ac3ee572_anonFunc(jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Str static__1ac3ee819_func(jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Str static__1ac3eeab1_kind(jule::Ptr<_1a9a04b8b_TypeKind>);
struct _1ac3ea507_typeCoder {
	

	_1ac3ea507_typeCoder(void) = default;

	inline bool operator==(_1ac3ea507_typeCoder _other) { return true; }

	inline bool operator!=(_1ac3ea507_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b17c3832_name(_1b17c3e81_Flag*);
inline jule::Str _1b17c436b_what(_1b17c3e81_Flag*);
inline void _1b17c449d_reset(_1b17c3e81_Flag*);
inline jule::I32 _1b17c45d0_short(_1b17c3e81_Flag*);
struct _1b17c3e81_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1b17c3e81_Flag(void) = default;

	inline bool operator==(_1b17c3e81_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1b17c3e81_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b17c768d_name(_1b17c7b44_Flag*);
inline jule::Str _1b17c7e0d_what(_1b17c7b44_Flag*);
inline void _1b17c8040_reset(_1b17c7b44_Flag*);
inline jule::I32 _1b17c8172_short(_1b17c7b44_Flag*);
struct _1b17c7b44_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1b17c7b44_Flag(void) = default;

	inline bool operator==(_1b17c7b44_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1b17c7b44_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b17cb175_name(_1b17cb62b_Flag*);
inline jule::Str _1b17cb8e5_what(_1b17cb62b_Flag*);
inline void _1b17cba27_reset(_1b17cb62b_Flag*);
inline jule::I32 _1b17cbb59_short(_1b17cb62b_Flag*);
struct _1b17cb62b_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1b17cb62b_Flag(void) = default;

	inline bool operator==(_1b17cb62b_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1b17cb62b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b17ceba1_name(_1b17d0157_Flag*);
inline jule::Str _1b17d0421_what(_1b17d0157_Flag*);
inline void _1b17d0553_reset(_1b17d0157_Flag*);
inline jule::I32 _1b17d0685_short(_1b17d0157_Flag*);
struct _1b17d0157_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1b17d0157_Flag(void) = default;

	inline bool operator==(_1b17d0157_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1b17d0157_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b17d3688_name(_1b17d3b3e_Flag*);
inline jule::Str _1b17d3e08_what(_1b17d3b3e_Flag*);
inline void _1b17d403a_reset(_1b17d3b3e_Flag*);
inline jule::I32 _1b17d416c_short(_1b17d3b3e_Flag*);
struct _1b17d3b3e_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1b17d3b3e_Flag(void) = default;

	inline bool operator==(_1b17d3b3e_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1b17d3b3e_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ade34616_FlagSet> static__1ade34902_new(void);
inline jule::Trait<_1ade32b97_CommonFlag> _1ade34d86_find_flag(_1ade34616_FlagSet*, jule::Str);
inline jule::Trait<_1ade32b97_CommonFlag> _1ade35194_find_flag_short(_1ade34616_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ade32b97_CommonFlag>> _1ade35408_flags(_1ade34616_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ade35716_parse(_1ade34616_FlagSet*, jule::Slice<jule::Str>);
inline void _1ade358e2_reset(_1ade34616_FlagSet*);
inline jule::Ptr<_1b17d3b3e_Flag> _1b1858169_add_flag_common(_1ade34616_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b17d0157_Flag> _1b1861c88_add_flag_common(_1ade34616_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b1856134_add_var(_1ade34616_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b185ec64_add_var(_1ade34616_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ade34616_FlagSet {
	jule::Slice<jule::Trait<_1ade32b97_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1ade32b97_CommonFlag>>();
	

	_1ade34616_FlagSet(void) = default;

	inline bool operator==(_1ade34616_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1ade34616_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1aca5966b_IR>,jule::Slice<_1e6735e35_Log>> static__1aca267ae_Build(jule::Str, jule::I64);
inline void _1aca51aa3_appendStructs(_1aca5966b_IR*, jule::Ptr<_1ac156032_Package>&, jule::Slice<jule::Ptr<_1b393b9dc_Struct>>&);
inline jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _1aca1d1ac_GetAllStructures(_1aca5966b_IR*);
inline void _1aca59858_appendGlobals(_1aca5966b_IR*, jule::Ptr<_1ac156032_Package>&, jule::Slice<jule::Ptr<_1ac17c960_Var>>&);
inline jule::Slice<jule::Ptr<_1ac17c960_Var>> _1ac9b20b8_GetAllGlobals(_1aca5966b_IR*);
inline void _1aca9d77b_Order(_1aca5966b_IR*);
struct _1aca5966b_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1ac156032_Package> _field_Main = jule::Ptr<_1ac156032_Package>();
	jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>>();
	_1aca9e507_OrderedDefines _field_Ordered = _1aca9e507_OrderedDefines();
	

	_1aca5966b_IR(void) = default;

	inline bool operator==(_1aca5966b_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1aca5966b_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1b393d6c0_Str(_1b3967d9d_StructIns*);
inline jule::Bool _1b393e836_Equals(jule::Ptr<_1b3967d9d_StructIns>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1b3941b8a_Same(_1b3967d9d_StructIns*, jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Ptr<_1a99bc714_Fn> _1b3942eaa_FindMethod(_1b3967d9d_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1b3944154_FieldIns> _1b39459c4_FindField(_1b3967d9d_StructIns*, jule::Str);
struct _1b3967d9d_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1b393b9dc_Struct> _field_Decl = jule::Ptr<_1b393b9dc_Struct>();
	jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>();
	jule::Slice<jule::Ptr<_1b3944154_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1b3944154_FieldIns>>();
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1a99bc714_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1a99c3286_ReferenceStack> _field_Refers = jule::Ptr<_1a99c3286_ReferenceStack>();
	_1b393d417_Operators _field_Operators = _1b393d417_Operators();
	

	_1b3967d9d_StructIns(void) = default;

	inline bool operator==(_1b3967d9d_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1b3967d9d_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acb924da_ObjectDeadCode> static__1acb929b3_new(jule::Ptr<_1aca5966b_IR>&);
inline jule::Bool _1b1067add_isLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1b2551bec_Trait>&);
inline jule::Bool _1b106d8b3_isLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Bool _1b1074a40_isLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1b3967d9d_StructIns>&);
inline jule::Bool _1b107b959_isLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac17c960_Var>&);
inline void _1b1068182_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1b2551bec_Trait>);
inline void _1b1071ee3_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1a99c03b5_FnIns>);
inline void _1b10750c3_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1b3967d9d_StructIns>);
inline void _1b1080342_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac17c960_Var>);
inline void _1acbc0b12_setReferencesAsLive(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1a99c3286_ReferenceStack>&);
inline void _1acbc0d87_inits(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac156032_Package>&);
inline void _1acbc110c_collectLivePackage(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac156032_Package>&);
inline void _1acbc12d8_collectLive(jule::Ptr<_1acb924da_ObjectDeadCode>);
inline void _1acbc155d_removeDeadGlobals(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac17c960_Var>>&);
inline void _1acbc17d3_removeDeadFns(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a99bc714_Fn>>&);
inline void _1acbc1a58_removeDeadStructs(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b393b9dc_Struct>>&);
inline void _1acbc1ccd_removeDeadTraits(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b2551bec_Trait>>&);
inline void _1acbc2053_removeDeadsFile(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac1bee58_SymbolTable>&);
inline void _1acbc22c8_removeDeadsPackage(jule::Ptr<_1acb924da_ObjectDeadCode>, jule::Ptr<_1ac156032_Package>&);
inline void _1acbc24a4_removeDeads(jule::Ptr<_1acb924da_ObjectDeadCode>);
inline void _1acbc2680_elimanate(jule::Ptr<_1acb924da_ObjectDeadCode>);
struct _1acb924da_ObjectDeadCode {
	_1acb92155_liveTable _field_live = _1acb92155_liveTable();
	jule::Ptr<_1aca5966b_IR> _field_ir = jule::Ptr<_1aca5966b_IR>();
	

	_1acb924da_ObjectDeadCode(void) = default;

	inline bool operator==(_1acb924da_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1acb924da_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac3e41c1_ObjectCoder> static__1ac3c71e8_New(jule::Ptr<_1aca5966b_IR>&, _1ac3e3ce7_SerializationInfo);
inline void _1ac3c7528_write(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Str);
inline void _1ac3c7cba_addIndent(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3c8caa_doneIndent(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3c9508_indent(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline jule::I64 _1ac3b887c_findTypeOffset(_1ac3e41c1_ObjectCoder*, jule::Ptr<_1b2551bec_Trait>, jule::Ptr<_1a9a04b8b_TypeKind>);
inline void _1ac3ca8e4_locInfo(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1e6a5c800_Token>&);
inline void _1ac3aa022_head(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3c8518_links(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3ad850_prepareStructures(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3b568c_iterPackages(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>);
inline void _1ac3b5c20_buildTraitMap(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3b6ade_traitDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3b72a4_structurePlainDecl(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac3b7969_structurePlainDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3b812e_fieldDecl(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3944154_FieldIns>&);
inline void _1ac3aec19_structureDestructor(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e4765_structureDeriveDefsDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e4897_structureOperatorEq(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Str&, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e49c9_structureOperatorNotEq(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Str&, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e4b0b_structureOperator(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Str&, jule::Ptr<_1a99c03b5_FnIns>&, jule::Str);
inline void _1ac3e4c3d_structureOperators(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e4d70_structureInsDecl(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e4ea2_structureDecl(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac3e50d4_structureDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e5216_paramsDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>&);
inline void _1ac3e5348_funcHead(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1a99c03b5_FnIns>&, jule::Bool);
inline void _1ac3e547a_funcDecl(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1a99bc714_Fn>&, jule::Bool);
inline void _1ac3e55ac_funcDecls(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e56de_traitDataTypes(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e5821_paramIns(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1a99be4e6_ParamIns>&);
inline void _1ac3e5a0d_paramsIns(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>&);
inline void _1ac3e5d2c_varInitExpr(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1ac17c960_Var>&, jule::Fn<void(void)>);
inline void _1ac3e60a2_var(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1ac17c960_Var>);
inline void _1ac3e6327_func(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1a99bc714_Fn>&);
inline void _1ac3e6503_traitWrappers(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e66ce_traitDatas(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e68aa_globals(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e6a86_decls(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e6d0b_structureMethods(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e7081_structureDeriveDefs(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e7306_structureOstream(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e757b_structureIns(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b3967d9d_StructIns>&);
inline void _1ac3e7801_structure(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1b393b9dc_Struct>&);
inline void _1ac3e79cc_structures(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e7ba8_funcs(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e7e2d_pushInit(jule::Ptr<_1ac3e41c1_ObjectCoder>, jule::Ptr<_1ac156032_Package>&);
inline void _1ac3e8109_initCaller(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e82d5_end(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e84b1_serializeHead(jule::Ptr<_1ac3e41c1_ObjectCoder>);
inline void _1ac3e868c_Serialize(jule::Ptr<_1ac3e41c1_ObjectCoder>);
struct _1ac3e41c1_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1aca5966b_IR> _field_ir = jule::Ptr<_1aca5966b_IR>();
	_1ac3e3ce7_SerializationInfo _field_info = _1ac3e3ce7_SerializationInfo();
	jule::Slice<jule::Ptr<_1ac3e3ed4_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1ac3e3ed4_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1ac3700d6_exprCoder> _field_ec = jule::Ptr<_1ac3700d6_exprCoder>();
	jule::Ptr<_1ac367595_scopeCoder> _field_sc = jule::Ptr<_1ac367595_scopeCoder>();
	

	_1ac3e41c1_ObjectCoder(void) = default;

	inline bool operator==(_1ac3e41c1_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1ac3e41c1_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1b17e7ca7_parse_integer(_1ade36cde_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1b1800b4a_parse_integer(_1ade36cde_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1ade375d6_get_data(_1ade36cde_ArgParser*);
inline jule::VoidExceptional _1ade37828_process_flag(_1ade36cde_ArgParser*, jule::Trait<_1ade32b97_CommonFlag>&);
inline jule::VoidExceptional _1ade37a9d_single_dash(_1ade36cde_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1ade37d23_double_dash(_1ade36cde_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1ade37eee_try_arg(_1ade36cde_ArgParser*);
inline jule::VoidExceptional _1ade381ca_parse(_1ade36cde_ArgParser*);
struct _1ade36cde_ArgParser {
	_1ade34616_FlagSet _field_set = _1ade34616_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1ade36cde_ArgParser(void) = default;

	inline bool operator==(_1ade36cde_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ade36cde_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1e49bece7_Free(void*);
inline jule::Str _1e49d47bd_BytePtrToStr(jule::U8*);
inline jule::I64 _1e4868dd3_GetLastErrno(void);
inline jule::I64 _1e5609d1b_Stat(jule::U8*, struct stat*);
inline jule::I64 _1e5609e4d_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1e560a080_Getcwd(jule::U8*, jule::U64);
inline DIR* _1e560a1b2_Opendir(jule::U8*);
inline struct dirent* _1e560a2e4_Readdir(DIR*);
inline jule::I64 _1e560a657_Closedir(DIR*);
inline jule::I64 _1e560a9ed_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1e560ab30_Rmdir(jule::U8*);
inline jule::I64 _1e560ac62_Unlink(jule::U8*);
inline jule::I64 _1e5619028_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1e5619413_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1e5619787_Close(jule::I64);
inline jule::I64 _1e5619b72_Write(jule::I64, void*, jule::U64);
inline void _1e5619d81_Exit(jule::I64);
inline jule::I64 _1e56be496_getLastOsError(void);
inline jule::Slice<jule::Str> _1e56c050d_Args(void);
inline jule::Exceptional<jule::Str> _1e56c0981_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1e56c1344_getwd(void);
inline jule::Slice<jule::U8> _1e575bb3d_Stobs(jule::Str&);
inline jule::Bool _1e6577a13_IsLetter(jule::I32);
inline jule::Bool _1e65e9dc6_is16(jule::Slice<_1e65e8314_Range16>, jule::U16);
inline jule::Bool _1e65ea217_is32(jule::Slice<_1e65e8787_Range32>, jule::U32);
inline jule::Bool _1e65ea9a9_isExcludingLatin(jule::Ptr<_1e65e8c0a_RangeTable>, jule::I32);
inline std::tuple<jule::I32,jule::I64> _1e66aeac3_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1e66b0189_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1e66b0e37_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1e66b1278_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1e66b17b7_RuneCountStr(jule::Str);
inline jule::Bool _1e66b1a5e_RuneStart(jule::U8);
inline jule::Str _1e6646340_Repeat(jule::Str, jule::I64);
inline jule::Bool _1e66475d8_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e6671d4e_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1e667a066_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e6682821_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1e6645b25_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e6664380_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e66694a6_FindLast(jule::Str, jule::Str);
inline jule::I64 _1e66b2b09_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1e66b309e_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1e66b3577_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1e66b3984_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1e66b3cc5_Contains(jule::Str, jule::Str);
inline jule::Bool _1e66b4798_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1e66b4ad9_Count(jule::Str, jule::Str);
inline jule::Str _1e66b506d_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1e66b2dc3_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e66b6129_TrimLeft(jule::Str, jule::Str);
inline void _1e66b63d2_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e66b6a64_Trim(jule::Str, jule::Str);
inline jule::Str _1e66b6da5_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1e572790b_Clean(jule::Str);
inline jule::Str _1e572ed75_FromSlash(jule::Str);
inline jule::Str _1e57374cb_Join(jule::Slice<jule::Str>);
inline jule::Str _1e5738ee4_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e57169d8_Abs(jule::Str);
inline jule::Str _1e571b449_Base(jule::Str);
inline jule::Str _1e571ec88_Dir(jule::Str);
inline jule::Str _1e574893d_VolumeName(jule::Str);
inline jule::Bool _1e574c436_IsPathSep(jule::U8);
inline jule::Bool _1e571dcdc_IsAbs(jule::Str);
inline jule::I64 _1e57228b2_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e57423b5_abs(jule::Str);
inline jule::Str _1e57459a1_join(jule::Slice<jule::Str>);
inline jule::I64 _1e48862da_getLastFsError(void);
inline jule::I64 _1e6785b77_getLastProcessError(void);
inline jule::Slice<char*> _1e6788dcd_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _1e678932e_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1e6789719_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1e678a330_Exit(jule::I64);
inline jule::Str _1e678a52d_Executable(void);
inline jule::Bool _1e67293ce_IsStdHeaderPath(jule::Str);
inline jule::Bool _1e6729511_IsValidHeaderExt(jule::Str);
inline jule::Bool _1e6729764_IsValidCppExt(jule::Str);
inline jule::Str _1e6736375_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e6736661_argToStr(jule::Any);
inline jule::I64 _1e6736908_findNextFmt(jule::Str);
inline jule::Str _1e6736c8d_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6737d5a_IsTopDirective(jule::Str);
inline jule::Bool _1e673928a_IsWindows(jule::Str);
inline jule::Bool _1e6739543_IsDarwin(jule::Str);
inline jule::Bool _1e67397da_IsLinux(jule::Str);
inline jule::Bool _1e6739b09_IsI386(jule::Str);
inline jule::Bool _1e6739da1_IsAmd64(jule::Str);
inline jule::Bool _1e673a148_IsArm64(jule::Str);
inline jule::Bool _1e673a3e0_IsUnix(jule::Str);
inline jule::Bool _1e673a764_Is32Bit(jule::Str);
inline jule::Bool _1e673aa0b_Is64Bit(jule::Str);
inline void _1e6747dc0_init(void);
inline jule::Bool _1e6a5d009_IsUnaryOp(jule::Str);
inline jule::Bool _1e6a5d2e5_IsBinOp(jule::Str);
inline jule::Bool _1e6a5d8ab_IsStr(jule::Str);
inline jule::Bool _1e6a5db53_IsRawStr(jule::Str);
inline jule::Bool _1e6a5ddea_IsRune(jule::Str);
inline jule::Bool _1e6a5e516_IsBool(jule::Str);
inline jule::Bool _1e6a5e7ad_IsFloat(jule::Str);
inline jule::Bool _1e6a5ea55_IsNum(jule::Str);
inline jule::Bool _1e6a60094_IsIgnoreIdent(jule::Str);
inline jule::Bool _1e6a6033b_IsAnonIdent(jule::Str);
inline jule::Bool _1e6a6087a_IsSpace(jule::I32);
inline jule::Bool _1e6a60ccb_IsLetter(jule::I32);
inline jule::Bool _1e6a6131a_IsDecimal(jule::U8);
inline jule::Bool _1e6a615b2_IsBinary(jule::U8);
inline jule::Bool _1e6a61859_IsOctal(jule::U8);
inline jule::Bool _1e6a61b01_IsHex(jule::U8);
inline jule::Bool _1e6a61d98_IsAssign(jule::U64);
inline jule::Bool _1e6a62140_IsPostfixOp(jule::Str);
inline jule::Bool _1e6a623d7_IsAssignOp(jule::Str);
inline jule::Ptr<_1e6a62b8a_File> _1e6a641b9_NewFileSet(jule::Str);
inline _1e6735e35_Log _1e6a659e5_makeErr(jule::I64, jule::I64, jule::Ptr<_1e6a62b8a_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e6a65d7a_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1e6a661bb_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a66551_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a66892_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a66bd3_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a67024_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a67475_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a6771c_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1e6a679b4_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1e6a67d05_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1e6a68146_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1e6a68487_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e6a687c8_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e6a68b19_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a6906a_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1e6a69312_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1e6a69653_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e6a698ea_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e6a69bb4_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e6a69d6d_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1e6a6a104_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1e6735e35_Log> _1e6a6eaed_Lex(jule::Ptr<_1e6a62b8a_File>, jule::I64);
inline void _1a99b4d38_lshiftUnsig(_1a9956c86_Const&, _1a9956c86_Const&);
inline void _1a99b5135_rshiftUnsig(_1a9956c86_Const&, _1a9956c86_Const&);
inline jule::I64 _1ac0b716e_LeadingZeros64(jule::U64);
inline jule::I64 _1ac0b81c5_TrailingZeros(jule::U64);
inline jule::I64 _1ac0b8abb_TrailingZeros32(jule::U32);
inline jule::I64 _1ac0b8d63_TrailingZeros64(jule::U64);
inline jule::I64 _1ac0be5d8_Len32(jule::U32);
inline jule::I64 _1ac0be880_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ac0c0540_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ac0c1bc3_Mul64(jule::U64, jule::U64);
inline jule::U32 _1b37e617c_F32Bits(jule::F32);
inline jule::F32 _1b37e6468_F32FromBits(jule::U32);
inline jule::U64 _1b37e6710_F64Bits(jule::F64);
inline jule::F64 _1b37e6a2e_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1b37e913b_Frexp(jule::F64);
inline jule::F64 _1ac053b99_NaN(void);
inline jule::Bool _1ac054ace_IsNaN(jule::F64);
inline jule::F64 _1ac056570_Inf(jule::I64);
inline jule::Bool _1ac05bdd3_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1ac05d4de_normalize(jule::F64);
inline jule::F64 _1ac06d6a8_Log(jule::F64);
inline jule::F64 _1ac07512c_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1ac0ca56c_Modf(jule::F64);
inline jule::F64 _1ac0cad31_Log2(jule::F64);
inline jule::Str _1b37a7dca_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1b37ce8d5_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1ac106851_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ac106026_floatInfo&);
inline jule::Slice<jule::U8> _1ac106ea0_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1ac106510_decimalSlice, jule::I64, jule::U8);
inline void _1ac10739b_roundShortest(_1ac117950_decimal&, jule::U64, jule::I64, _1ac106026_floatInfo&);
inline jule::Slice<jule::U8> _1ac1078c9_fmtE(jule::Slice<jule::U8>, jule::Bool, _1ac106510_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1ac107d5d_fmtF(jule::Slice<jule::U8>, jule::Bool, _1ac106510_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1ac108468_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1ac106026_floatInfo&);
inline jule::Slice<jule::U8> _1ac108ad9_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ac106026_floatInfo&);
inline jule::I64 _1ac108e2a_min(jule::I64, jule::I64);
inline jule::I64 _1ac10926b_max(jule::I64, jule::I64);
inline jule::U8 _1ac109e1a_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1ac10a349_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1ac10a734_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1ac10ab96_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1ac10b7ac_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1ac10bba8_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1ac10da78_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1ac10dd75_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ac10e11c_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1ac110b79_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1ac111064_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1ac11163b_atofHex(jule::Str, _1ac106026_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1ac1119e3_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac111c8a_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac1120cb_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1ac11241c_ParseFloat(jule::Str, jule::I64);
inline void _1ac112b8c_ryuFtoaFixed32(_1ac106510_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1ac1130cc_ryuFtoaFixed64(_1ac106510_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1ac113907_formatDecimal(_1ac106510_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1ac113d7a_ryuFtoaShortest(_1ac106510_decimalSlice&, jule::U64, jule::I64, _1ac106026_floatInfo&);
inline jule::I64 _1ac114122_mulByLog2Log10(jule::I64);
inline jule::I64 _1ac1143b9_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ac1147a4_computeBounds(jule::U64, jule::I64, _1ac106026_floatInfo&);
inline void _1ac114d48_ryuDigits(_1ac106510_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1ac115431_ryuDigits32(_1ac106510_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ac11581b_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ac115c06_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1ac116047_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1ac1162de_divmod1e9(jule::U64);
inline void _1ac119138_trim(_1ac117950_decimal&);
inline void _1ac1193e1_rightShift(_1ac117950_decimal&, jule::U64);
inline jule::Bool _1ac119853_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1ac119ac8_leftShift(_1ac117950_decimal&, jule::U64);
inline jule::Bool _1ac119e19_shouldRoundUp(_1ac117950_decimal&, jule::I64);
inline jule::Str _1ac11b69b_FmtUint(jule::U64, jule::I64);
inline jule::Str _1ac11ba31_FmtInt(jule::I64, jule::I64);
inline jule::Str _1ac11bcc8_Itoa(jule::I64);
inline jule::Str _1ac11c0e7_small(jule::I64);
inline jule::Bool _1ac11c38e_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ac11c8bc_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1ac11dda7_RealKindOf(jule::Str);
inline jule::I64 _1ac11e14e_BitsizeOf(jule::Str);
inline jule::Str _1ac11e46d_IntFromBits(jule::I64);
inline jule::Str _1ac11e715_UintFromBits(jule::I64);
inline jule::Str _1ac11e9ac_FloatFromBits(jule::I64);
inline jule::Bool _1ac12055c_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1ac120804_BitsizeOfFloat(jule::F64);
inline jule::I64 _1ac120a9b_BitsizeOfInt(jule::I64);
inline jule::I64 _1ac120d43_BitsizeOfUint(jule::U64);
inline void _1ac120ea8_UpdateTarget(void);
inline void _1ac12111d_init(void);
inline jule::F64 _1ac125474_Min(jule::Str);
inline jule::F64 _1ac125760_Max(jule::Str);
inline jule::Bool _1ac125ad4_IsI8Compatible(jule::Str);
inline jule::Bool _1ac125dc0_IsI16Compatible(jule::Str);
inline jule::Bool _1ac126167_IsI32Compatible(jule::Str);
inline jule::Bool _1ac126486_IsI64Compatible(jule::Str);
inline jule::Bool _1ac12672d_IsU8Compatible(jule::Str);
inline jule::Bool _1ac1269c5_IsU16Compatible(jule::Str);
inline jule::Bool _1ac126c6c_IsU32Compatible(jule::Str);
inline jule::Bool _1ac1270e1_IsU64Compatible(jule::Str);
inline jule::Bool _1ac127388_IsF32Compatible(jule::Str);
inline jule::Bool _1ac127630_IsF64Compatible(jule::Str);
inline jule::Bool _1ac127971_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ac127c18_IsI16Greater(jule::Str);
inline jule::Bool _1ac127eb0_IsI32Greater(jule::Str);
inline jule::Bool _1ac128257_IsI64Greater(jule::Str);
inline jule::Bool _1ac1284ee_IsU16Greater(jule::Str);
inline jule::Bool _1ac128950_IsU32Greater(jule::Str);
inline jule::Bool _1ac128be7_IsU64Greater(jule::Str);
inline jule::Bool _1ac128e8e_IsF32Greater(jule::Str);
inline jule::Bool _1ac129236_IsF64Greater(jule::Str);
inline jule::Bool _1ac129577_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ac12a5ab_IsSigInt(jule::Str);
inline jule::Bool _1ac12a897_IsUnsigInt(jule::Str);
inline jule::Bool _1ac12ab3e_IsInt(jule::Str);
inline jule::Bool _1ac12ae5d_IsFloat(jule::Str);
inline jule::Bool _1ac12b205_IsNum(jule::Str);
inline jule::Bool _1ac12b49c_IsSigNum(jule::Str);
inline jule::Bool _1ac195b76_IsAscii(jule::I32);
inline jule::I32 _1ac195ca8_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1ac1acac2_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1ac1acd7a_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1ac1ad122_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1ac1ad430_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1ac1ad771_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1ac2d1267_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1ac2d1a2b_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a9a6dd04_fmtByDefault(jule::Any&);
inline jule::Slice<jule::U8> _1a9a6d5d9_applyFmtByDefault(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a9a71db2_applyFmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a9a7e919_formatBytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ac3001dc_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a99c24c7_parameterUsesGenerics(jule::Ptr<_1a99badc7_Param>&, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>&);
inline jule::Ptr<_1a9a08ce4_TypeSymbol> _1a99c49a2_buildType(jule::Ptr<_1b394b326_TypeDecl>);
inline jule::Ptr<_1ac1c5c3e_Value> _1a99c4c8d_buildExpr(jule::Ptr<_1b3950847_Expr>);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a99c5035_buildTypeAlias(jule::Ptr<_1b396297a_TypeAliasDecl>);
inline jule::Ptr<_1b392dea7_Field> _1a99c5354_buildField(jule::Ptr<_1b3966066_FieldDecl>);
inline jule::Slice<jule::Ptr<_1b392dea7_Field>> _1a99c55eb_buildFields(jule::Slice<jule::Ptr<_1b3966066_FieldDecl>>&);
inline jule::Ptr<_1b393b9dc_Struct> _1a99c5893_buildStruct(jule::Ptr<_1b39668c4_StructDecl>);
inline jule::Ptr<_1a99badc7_Param> _1a99c5b3a_buildParam(jule::Ptr<_1b395bd1a_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a99badc7_Param>> _1a99c5eae_buildParams(jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>>&);
inline jule::Ptr<_1a99ba712_RetType> _1a99c6256_buildRetType(jule::Ptr<_1b394e439_RetTypeDecl>);
inline jule::Ptr<_1a99bc714_Fn> _1a99c64ed_buildFn(jule::Ptr<_1b395d13a_FnDecl>);
inline jule::Slice<jule::Ptr<_1a99bc714_Fn>> _1a99c6795_buildMethods(jule::Slice<jule::Ptr<_1b395d13a_FnDecl>>&);
inline jule::Ptr<_1b2551bec_Trait> _1a99c6a3c_buildTrait(jule::Ptr<_1b3966ece_TraitDecl>);
inline jule::Ptr<_1b255334c_EnumItem> _1a99c6cd4_buildEnumItem(jule::Ptr<_1b39642d9_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b255334c_EnumItem>> _1a99c707b_buildEnumItems(jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>>&);
inline jule::Ptr<_1b2553d42_Enum> _1a99c7323_buildEnum(jule::Ptr<_1b3964d12_EnumDecl>);
inline jule::Ptr<_1b2554d76_TypeEnumItem> _1a99c7774_buildTypeEnumItem(jule::Ptr<_1b3965818_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>> _1a99c7a1b_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>>&);
inline jule::Ptr<_1b255543c_TypeEnum> _1a99c7cb3_buildTypeEnum(jule::Ptr<_1b3965a16_TypeEnumDecl>);
inline jule::Ptr<_1ac17c960_Var> _1a99c805a_buildVar(jule::Ptr<_1b395e119_VarDecl>);
inline jule::Slice<jule::Ptr<_1ac17c960_Var>> _1a99c8302_buildVars(jule::Slice<jule::Ptr<_1b395e119_VarDecl>>);
inline jule::Ptr<_1ac12e68c_Impl> _1a99c8599_buildImpl(jule::Ptr<_1b39675d9_Impl>);
inline jule::Bool _1ac12d900_matchConstraint(jule::Str&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1ac12dbdb_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1ac13b358_scopeChecker> _1ac131727_newScopeCheckerBase(jule::Ptr<_1ac15b224_Sema>&, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Ptr<_1ac13b358_scopeChecker> _1ac131aac_newScopeChecker(jule::Ptr<_1ac15b224_Sema>&, jule::Ptr<_1a99c03b5_FnIns>);
inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac131ded_findLabelParent(jule::Str, jule::Ptr<_1ac13b358_scopeChecker>);
inline jule::Bool _1ac132283_modelIsGotoScope(jule::Any, jule::Ptr<_1ac1346e7_Scope>&);
inline jule::Bool _1ac1325c4_stmtIsGotoScope(jule::Any&, jule::Ptr<_1ac1346e7_Scope>&);
inline jule::I64 _1ac132915_countMatchType(jule::Ptr<_1ac138443_Match>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _1ac132bac_getDatasFromTupleData(jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Slice<jule::Any> _1ac133064_getExprModels(jule::Any&);
inline jule::Bool _1ac1334e8_checkMut(jule::Ptr<_1ac15b224_Sema>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac13397c_checkAssign(jule::Ptr<_1ac15b224_Sema>&, jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c4bb6_Data>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1ac133c24_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1ac133ebb_isValidStForNextSt(jule::Any&);
inline jule::Bool _1ac134263_stmtIsDef(jule::Any&);
inline jule::Ptr<_1ac17c960_Var> _1ac150bca_findVarInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac151109_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1b393b9dc_Struct> _1ac1514e4_findStructInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a99bc714_Fn> _1ac151956_findFnInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1b2551bec_Trait> _1ac151c64_findTraitInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1b2553d42_Enum> _1ac1520a5_findEnumInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1b255543c_TypeEnum> _1ac1523e6_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Str);
inline jule::Bool _1ac15860b_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1ac159365_isValidModelForRef(jule::Any&);
inline _1e6735e35_Log _1ac15980a_compilerErr(jule::Ptr<_1e6a5c800_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac159b4b_impIsLookupable(jule::Ptr<_1ac1530c8_ImportInfo>&, jule::Str);
inline void _1ac159e48_appendRetVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>&, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1ac15a201_appendParamVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>&, jule::Ptr<_1a99c03b5_FnIns>&);
inline void _1ac15a4cb_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Ptr<_1ac1bee58_SymbolTable> _1ac15a82d_findFile(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>&, jule::Ptr<_1e6a62b8a_File>&);
inline void _1ac15ac90_pushSugggestion(_1e6735e35_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac19e069_traitHasReferenceReceiver(jule::Ptr<_1b2551bec_Trait>&);
inline jule::Bool _1ac196094_floatAssignable(jule::Str, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1ac1961c6_sigAssignable(jule::Str, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1ac1ac7b4_unsigAssignable(jule::Str, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1ac1ac8e6_intAssignable(jule::Str, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1b3917b2d_Directive> _1a99ee339_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline jule::Any _1a99ee6be_findBuiltinsImport(jule::Str, jule::Ptr<_1ac1530c8_ImportInfo>);
inline void _1a99ee8cd_fitBitsize(jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a99eebca_makeStructLitAlloc(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1a99b5a4d_StructLitExprModel>&);
inline jule::Ptr<_1ac17c960_Var> _1a9a0001b_buildErrorVar(jule::Ptr<_1ac1346e7_Scope>&, jule::Ptr<_1b3954b15_FnCallExpr>&);
inline jule::Any _1a9a0035c_findBuiltinsSema(jule::Str, jule::Ptr<_1ac15b224_Sema>);
inline jule::Bool _1a9a00604_isOkForShifting(jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1a9a009ab_isInstancedStruct(jule::Ptr<_1b3967d9d_StructIns>);
inline jule::Bool _1a9a00c75_isPtrArithmeticCompatibleInt(jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a9a00eb7_applyCastKindModel(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline void _1a9a01270_applyCastKind(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a0146d_buildVoidData(void);
inline jule::Str _1a9a01737_checkDataForIntegerIndexing(jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a9a01a01_applyCastModelByEnum(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1b2553d42_Enum>);
inline void _1a9a01ca9_castConstByType(jule::Str&, jule::Ptr<_1ac1c4bb6_Data>&);
inline void _1a9a022b5_updateModelToGenericIns(jule::Any&, jule::Ptr<_1a99c03b5_FnIns>&);
inline jule::Bool _1a9a02507_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1b394c03b_SubIdentTypeDecl>&);
inline jule::Bool _1a9a1b488_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>&);
inline jule::Bool _1a9a1b81d_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline jule::Bool _1a9a1bab5_canGetPtr(jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1a9a1bdd4_isValidForSptrType(jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1a9a1c17b_isValidForRef(jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Bool _1a9a1c445_isBuiltinStrConvertable(jule::Ptr<_1a9a04b8b_TypeKind>&);
inline jule::Str _1a9a1c6ba_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1a9a09663_Prim> _1a9a1ca72_buildPrimType(jule::Str);
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1cd19_getStructFromKind(jule::Ptr<_1a9a04b8b_TypeKind>);
inline jule::Bool _1a9a1d0b1_isPrim(jule::Str);
inline void _1a9a1d369_applyImplicitCast(jule::Ptr<_1a9a04b8b_TypeKind>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline std::tuple<jule::Ptr<_1ac1bee58_SymbolTable>,jule::Slice<_1e6735e35_Log>> _1a9a2125c_buildSymbols(jule::Ptr<_1b3916a1c_Ast>&, jule::Trait<_1ac150845_Importer>&, jule::Ptr<_1a99c8ae9_symbolBuilder>);
inline std::tuple<jule::Ptr<_1ac156032_Package>,jule::Slice<_1e6735e35_Log>> _1a9a2168b_analyzePackage(jule::Slice<jule::Ptr<_1b3916a1c_Ast>>&, jule::Trait<_1ac150845_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1ac156032_Package>,jule::Slice<_1e6735e35_Log>> _1a9a21a76_AnalyzePackage(jule::Slice<jule::Ptr<_1b3916a1c_Ast>>, jule::Trait<_1ac150845_Importer>, jule::I64);
inline jule::Ptr<_1a99c03b5_FnIns> _1a9a2ab18_findBuiltinFn(jule::Str);
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a2ca1b_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1a9a2d5ee_findBuiltinDef(jule::Str);
inline jule::Any _1a9a2e116_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1a9a57e0e_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1ac2edeee_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1ac2ed097_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7e320_builtinCallerCommonPlain(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2d24cc_builtinCallerCommon(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ed9b0_builtinCallerCommonMut(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7eebe_builtinCallerError(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ea490_builtinCallerOut(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ecd88_builtinCallerOutln(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a2b93d_builtinCallerNew(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a6d111_builtinCallerPanic(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2c8a89_builtinCallerMake(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2d08a4_builtinCallerAppend(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2e9b43_callerCopySlice(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7da17_callerCopyStr(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a29254_builtinCallerCopy(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac2dca9d_builtinCallerClone(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a45715_builtinCallerAssert(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a3135a_builtinCallerStdMemSizeOf(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1a9a61a3e_builtinCallerStdMemAlignOf(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac30cc22_builtinCallerStdMemFree(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d151_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d56e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d9ae_builtinCallerStdDebugOut(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Ptr<_1ac1c4bb6_Data> _1ac30dd99_builtinCallerStdDebugOutln(jule::Ptr<_1ac1c6734_Eval>&, jule::Ptr<_1b3954b15_FnCallExpr>&, jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1ac20e030_FindModuleFile(jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>&);
inline jule::Str _1ac20e162_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1e6735e35_Log> _1ac20e3e8_CheckModuleFile(jule::Str);
inline jule::Ptr<_1aca241a2_FileInfo> _1aca6a89c_ParseFile(jule::Ptr<_1e6a62b8a_File>);
inline std::tuple<jule::Ptr<_1b3916a1c_Ast>,jule::Slice<_1e6735e35_Log>> _1aca6adca_parseFileset(jule::Ptr<_1e6a62b8a_File>);
inline jule::Ptr<_1b395b644_ScopeTree> _1aca6b7d2_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1aca6bae0_isSt(jule::Ptr<_1e6a5c800_Token>, jule::Ptr<_1e6a5c800_Token>);
inline jule::Bool _1aca6be31_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1aca6c2b6_nextStPos(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Bool> _1aca6c607_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Slice<jule::Ptr<_1aca6c904_stmt>> _1aca6cc9a_splitStmts(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca7969c_getBlockExpr(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca799ee_splitDelim(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::U64);
inline jule::I64 _1aca79c96_findLowestPrecOp(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b39528b0_IdentExpr> _1aca7a0b5_buildIdentExpr(jule::Ptr<_1e6a5c800_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::I64> _1aca7a35c_getRangeExprTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Bool _1aca85c6e_checkAssignTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline _1e6735e35_Log _1aca86b60_makeErr(jule::I64, jule::I64, jule::Ptr<_1e6a62b8a_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca87105_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca8739c_rangeLast(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>,jule::Slice<_1e6735e35_Log>> _1aca8780e_partsKind(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>,jule::Slice<_1e6735e35_Log>> _1aca87be9_parts(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1aca87e91_getCloseKindOfBrace(jule::Str);
inline _1e6735e35_Log _1aca8837b_compilerErr(jule::Ptr<_1e6a5c800_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1aca887aa_pushSuggestion(_1e6735e35_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1aca88a52_tokstoa(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca99623_buildVoidType(void);
inline jule::Ptr<_1b394b326_TypeDecl> _1aca99887_buildPrimType(jule::Ptr<_1e6a5c800_Token>);
inline jule::I64 _1aca99bc8_mapColon(jule::Slice<jule::Ptr<_1e6a5c800_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1ac1d35cb_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1ac1d37eb_checkArch(jule::Str);
inline jule::Bool _1ac1ec00c_isPassFileAnnotation(jule::Str);
inline void _1ac1ed1ea_setOsVars(jule::Slice<jule::Str>&);
inline void _1ac1ed44d_setArchVars(jule::Slice<jule::Str>&);
inline void _1ac1ed706_initVars(jule::Slice<jule::Str>&, _1ac1ecddc_CompileInfo&);
inline jule::Slice<jule::U8> _1ac9bc920_readBuff(jule::Str);
inline _1e6735e35_Log _1aca1da4d_flatCompilerErr(jule::Str);
inline void _1aca9d8ad_pushPasses(jule::Ptr<_1ac156032_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1aca9da56_getAllUniquePasses(jule::Ptr<_1ac156032_Package>&, jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>>);
inline _1ac1ecddc_CompileInfo _1aca9dc54_buildCompileInfo(void);
inline void _1acbc2949_EliminateDefines(jule::Ptr<_1aca5966b_IR>&);
inline jule::Ptr<_1b3917b2d_Directive> _1acbc2cce_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline jule::Bool _1acbc3120_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline void _1acbc6c6c_eliminateDeadCodeOfScope(jule::Ptr<_1ac1346e7_Scope>);
inline void _1acbc7003_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a99bc714_Fn>>&);
inline void _1acbc7245_eliminateFunctionsScopePackage(jule::Ptr<_1ac156032_Package>&);
inline void _1acbc74dc_eliminateScopePackage(jule::Ptr<_1ac156032_Package>&);
inline void _1acbc76eb_EliminateScopes(jule::Ptr<_1aca5966b_IR>&);
inline jule::Bool _1b25d6721_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1b2638630_isConstantValidConditionalCase(jule::Ptr<_1ac134ae3_If>&);
inline jule::Bool _1b26572a8_isUnreachableExpr(jule::Any&);
inline jule::Bool _1b265d9da_isConstantValidMatchCase(jule::Ptr<_1ac138e8d_Case>&);
inline jule::Bool _1a9a89c76_isUnreachableConditionalCase(jule::Ptr<_1ac134ae3_If>&);
inline jule::Bool _1a9a9bb89_isUnreachableMatchCase(jule::Ptr<_1ac138e8d_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1aa0bbe23_checkForBitShiftOpt(jule::Ptr<_1a99b529a_OperandExprModel>&, jule::Ptr<_1a99b529a_OperandExprModel>&);
inline void _1aa0bce24_PushOptLevel(jule::I64);
inline void _1acb6836d_detectEnabled(void);
inline void _1ac56bb2e_Throw(jule::Str);
inline jule::U64 _1ac3e34ab_unix(void);
inline jule::U64 _1ac3e37ec_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1ac3e3b82_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1ac36caea_isCopyOptimizable(jule::Ptr<_1ac1c4bb6_Data>&);
inline jule::Bool _1ac36ce80_isIterCopyOptimizable(jule::Ptr<_1ac1c4bb6_Data>&, jule::Ptr<_1ac17c960_Var>&);
inline jule::Str _1ac37b07b_decomposeCommonEsq(jule::U8);
inline jule::Str _1ac37b367_sbtoa(jule::U8);
inline jule::Str _1ac37b60e_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1ac37b92d_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1ac37bc3b_ftoa(jule::F64, jule::I64);
inline jule::Str _1ac37bed3_itoa(jule::I64);
inline jule::Str _1ac37c27a_utoa(jule::U64);
inline jule::Bool _1ac37c632_isForwarded(jule::Ptr<_1ac1346e7_Scope>&);
inline jule::Bool _1ac37c8eb_isBuiltinCallHasDebuginf(jule::Ptr<_1a99b6114_FnCallExprModel>&);
inline void _1ac3e8a00_iterFiles(jule::Ptr<_1ac156032_Package>&, jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>);
inline void _1ac3e8c53_prepareStructure(jule::Ptr<_1b393b9dc_Struct>&);
inline jule::Str _1ac3e8eea_concatAllParts(jule::Slice<jule::Ptr<_1e6a5c800_Token>>);
inline jule::Ptr<_1b3917b2d_Directive> _1ac402421_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline jule::Bool _1ac4027a6_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>&, jule::Str);
inline void _1e67046a6_printErrorMessage(jule::Str);
inline void _1e671838a_help(jule::Slice<jule::Str>&);
inline void _1e6718ad8_version(jule::Slice<jule::Str>&);
inline void _1e671a48b_toolDistos(void);
inline void _1e671abd9_toolDistarch(void);
inline void _1e671b437_tool(jule::Slice<jule::Str>&);
inline void _1e67055a8_julenv(jule::Slice<jule::Str>&);
inline void _1e672829b_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1e482c8d0_processCommand(jule::Slice<jule::Str>&);
inline void _1e671be71_showInfo(void);
void entry_point(void);
inline void _1ac427787_init(void);
inline jule::Ptr<_1e563252a_File> _1ac429338_openOutput(jule::Str&);
inline void _1ade17990_clearObjects(void);
inline void _1ac42196d_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ac4213da_isCppSourceFile(jule::Str);
inline void _1ac425ae8_pushCompCmdClang(jule::Str&);
inline void _1ac423cc2_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1ade2b674_genCompileCmd(jule::Str, jule::Ptr<_1aca5966b_IR>&);
inline jule::Str _1ac423255_getCompilePath(void);
inline void _1ac4237d8_applyTargetIndependentOptimizations(jule::Ptr<_1aca5966b_IR>&);
inline void _1ade13749_checkCompilerFlag(void);
inline void _1ac420ede_checkTargetArch(jule::Str);
inline void _1ac424d4a_checkTargetOs(jule::Str);
inline void _1ac424e7c_checkTargetFlag(jule::Str&);
inline void _1ade383ea_checkOptFlag(jule::Str&);
inline void _1ade3875d_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ade38890_checkFlags(jule::Slice<jule::Str>&);
inline void _1ade389c2_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1aca5966b_IR> _1ade38b04_buildIr(jule::Slice<jule::Str>&);
inline void _1ade38c36_compileCommand(jule::Slice<jule::Str>&);


struct _1ac150845_ImporterMptrData {
	void(*_1ac14e767_SetModPath)(jule::Trait<_1ac150845_Importer>, jule::Str);
	jule::Str(*_1ac14e9a9_GetModPath)(jule::Trait<_1ac150845_Importer>);
	jule::Str(*_1ac14ecb7_ModById)(jule::Trait<_1ac150845_Importer>, jule::I64);
	jule::Ptr<_1ac1530c8_ImportInfo>(*_1ac1500c5_GetImport)(jule::Trait<_1ac150845_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1b3916a1c_Ast>>,jule::Slice<_1e6735e35_Log>>(*_1ac15047c_ImportPackage)(jule::Trait<_1ac150845_Importer>, jule::Str, jule::Bool);
	void(*_1ac150702_Imported)(jule::Trait<_1ac150845_Importer>, jule::Ptr<_1ac1530c8_ImportInfo>);
};

struct _1a9a0475c_KindMptrData {
	jule::Str(*_1a9a0430b_Str)(jule::Trait<_1a9a0475c_Kind>);
	jule::Bool(*_1a9a04619_Equals)(jule::Trait<_1a9a0475c_Kind>, jule::Ptr<_1a9a04b8b_TypeKind>);
};

struct _1a9a20701_LookupMptrData {
	jule::Ptr<_1ac1530c8_ImportInfo>(*_1a9a1d8a8_FindPackage)(jule::Trait<_1a9a20701_Lookup>, jule::Str);
	jule::Ptr<_1ac1530c8_ImportInfo>(*_1a9a1dbb6_SelectPackage)(jule::Trait<_1a9a20701_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>);
	jule::Ptr<_1ac17c960_Var>(*_1a9a1e06d_FindVar)(jule::Trait<_1a9a20701_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a9a03e98_TypeAlias>(*_1a9a1e425_FindTypeAlias)(jule::Trait<_1a9a20701_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b393b9dc_Struct>(*_1a9a1e7cc_FindStruct)(jule::Trait<_1a9a20701_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a99bc714_Fn>(*_1a9a1eb84_FindFn)(jule::Trait<_1a9a20701_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b2551bec_Trait>(*_1a9a1ee92_FindTrait)(jule::Trait<_1a9a20701_Lookup>, jule::Str);
	jule::Ptr<_1b2553d42_Enum>(*_1a9a202a0_FindEnum)(jule::Trait<_1a9a20701_Lookup>, jule::Str);
	jule::Ptr<_1b255543c_TypeEnum>(*_1a9a205ad_FindTypeEnum)(jule::Trait<_1a9a20701_Lookup>, jule::Str);
};

struct _1ade32b97_CommonFlagMptrData {
	jule::Str(*_1ac4209b1_name)(jule::Trait<_1ade32b97_CommonFlag>);
	jule::I32(*_1ac420ae3_short)(jule::Trait<_1ade32b97_CommonFlag>);
	jule::Str(*_1ac420c25_what)(jule::Trait<_1ade32b97_CommonFlag>);
	void(*_1ac420dac_reset)(jule::Trait<_1ade32b97_CommonFlag>);
};



inline void _1ac14e767_SetModPath_0(jule::Trait<_1ac150845_Importer> _self_, jule::Str _1733_path) {
	_1aca2786a_SetModPath(_self_.safe_ptr<_1aca1ec91_JuleImporter>(), _1733_path);
}
inline jule::Str _1ac14e9a9_GetModPath_0(jule::Trait<_1ac150845_Importer> _self_) {
	return _1aca38826_GetModPath(_self_.safe_ptr<_1aca1ec91_JuleImporter>());
}
inline jule::Str _1ac14ecb7_ModById_0(jule::Trait<_1ac150845_Importer> _self_, jule::I64 _2526_id) {
	return _1aca455d0_ModById(_self_.safe_ptr<_1aca1ec91_JuleImporter>(), _2526_id);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1500c5_GetImport_0(jule::Trait<_1ac150845_Importer> _self_, jule::Str _3132_path) {
	return _1aca4bdbc_GetImport(_self_.safe_ptr<_1aca1ec91_JuleImporter>(), _3132_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1b3916a1c_Ast>>,jule::Slice<_1e6735e35_Log>> _1ac15047c_ImportPackage_0(jule::Trait<_1ac150845_Importer> _self_, jule::Str _3736_path, jule::Bool _3747_update_mod) {
	return _1aca53e3a_ImportPackage(_self_.safe_ptr<_1aca1ec91_JuleImporter>(), _3736_path, _3747_update_mod);
}
inline void _1ac150702_Imported_0(jule::Trait<_1ac150845_Importer> _self_, jule::Ptr<_1ac1530c8_ImportInfo> _4135__0) {
	_1aca59506_Imported(_self_.safe_ptr<_1aca1ec91_JuleImporter>(), _4135__0);
}
inline jule::Str _1a9a0430b_Str_0(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1b393d6c0_Str(_self_.safe_ptr<_1b3967d9d_StructIns>());
}
inline jule::Bool _1a9a04619_Equals_0(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1b393e836_Equals(_self_.data.as<_1b3967d9d_StructIns>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_1(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a99c06e5_Str(_self_.safe_ptr<_1a99c03b5_FnIns>());
}
inline jule::Bool _1a9a04619_Equals_1(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a99c0a03_Equals(_self_.data.as<_1a99c03b5_FnIns>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_2(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1b25520e8_Str(_self_.safe_ptr<_1b2551bec_Trait>());
}
inline jule::Bool _1a9a04619_Equals_2(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1b2552406_Equals(_self_.data.as<_1b2551bec_Trait>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_3(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1b25541a5_Str(_self_.safe_ptr<_1b2553d42_Enum>());
}
inline jule::Bool _1a9a04619_Equals_3(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1b25544b3_Equals(_self_.data.as<_1b2553d42_Enum>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_4(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1b255576c_Str(_self_.safe_ptr<_1b255543c_TypeEnum>());
}
inline jule::Bool _1a9a04619_Equals_4(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1b2555a7a_Equals(_self_.data.as<_1b255543c_TypeEnum>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_5(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a05087_Str(_self_.safe_ptr<_1a9a04b8b_TypeKind>());
}
inline jule::Bool _1a9a04619_Equals_5(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a05395_Equals(_self_.data.as<_1a9a04b8b_TypeKind>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_6(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a099c6_Str(_self_.safe_ptr<_1a9a09663_Prim>());
}
inline jule::Bool _1a9a04619_Equals_6(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a09cd4_Equals(_self_.data.as<_1a9a09663_Prim>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_7(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a0d25a_Str(_self_.safe_ptr<_1a9a0cde7_Sptr>());
}
inline jule::Bool _1a9a04619_Equals_7(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a0d568_Equals(_self_.data.as<_1a9a0cde7_Sptr>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_8(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a0dd60_Str(_self_.safe_ptr<_1a9a0d854_Slc>());
}
inline jule::Bool _1a9a04619_Equals_8(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a0e16d_Equals(_self_.data.as<_1a9a0d854_Slc>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_9(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a0e745_Str(_self_.safe_ptr<_1a9a0e3d2_Tuple>());
}
inline jule::Bool _1a9a04619_Equals_9(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a0ea53_Equals(_self_.data.as<_1a9a0e3d2_Tuple>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_10(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a1026d_Str(_self_.safe_ptr<_1a9a0ee0a_Map>());
}
inline jule::Bool _1a9a04619_Equals_10(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a1057b_Equals(_self_.data.as<_1a9a0ee0a_Map>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_11(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a10d62_Str(_self_.safe_ptr<_1a9a109ee_Arr>());
}
inline jule::Bool _1a9a04619_Equals_11(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a11170_Equals(_self_.data.as<_1a9a109ee_Arr>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_12(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1a9a117be_Str(_self_.safe_ptr<_1a9a1145b_Ptr>());
}
inline jule::Bool _1a9a04619_Equals_12(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1a9a11acc_Equals(_self_.data.as<_1a9a1145b_Ptr>(), _5626_other);
}
inline jule::Str _1a9a0430b_Str_13(jule::Trait<_1a9a0475c_Kind> _self_) {
	return _1ac3e9ec9_Str(_self_.safe_ptr<_1ac3e9c10_customType>());
}
inline jule::Bool _1a9a04619_Equals_13(jule::Trait<_1a9a0475c_Kind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _5626_other) {
	return _1ac3ea2d7_Equals(_self_.data.as<_1ac3e9c10_customType>(), _5626_other);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1d8a8_FindPackage_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _934_ident) {
	return _1ac13b7a9_FindPackage(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _934_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1dbb6_SelectPackage_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _1336_selector) {
	return _1ac13bab7_SelectPackage(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _1336_selector);
}
inline jule::Ptr<_1ac17c960_Var> _1a9a1e06d_FindVar_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1ac13be6e_FindVar(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a1e425_FindTypeAlias_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1ac13c326_FindTypeAlias(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1e7cc_FindStruct_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1ac13c6cd_FindStruct(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1a99bc714_Fn> _1a9a1eb84_FindFn_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1ac13ca85_FindFn(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1b2551bec_Trait> _1a9a1ee92_FindTrait_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3332_ident) {
	return _1ac13cd93_FindTrait(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _3332_ident);
}
inline jule::Ptr<_1b2553d42_Enum> _1a9a202a0_FindEnum_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac13d1a1_FindEnum(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a205ad_FindTypeEnum_0(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _4135_ident) {
	return _1ac13d4ae_FindTypeEnum(_self_.safe_ptr<_1ac13b358_scopeChecker>(), _4135_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1d8a8_FindPackage_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _934_ident) {
	return _1ac1535e5_FindPackage(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _934_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1dbb6_SelectPackage_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _1336_selector) {
	return _1ac153903_SelectPackage(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _1336_selector);
}
inline jule::Ptr<_1ac17c960_Var> _1a9a1e06d_FindVar_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1ac153caa_FindVar(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a1e425_FindTypeAlias_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1ac154162_FindTypeAlias(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1e7cc_FindStruct_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1ac154519_FindStruct(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1a99bc714_Fn> _1a9a1eb84_FindFn_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1ac1548c1_FindFn(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1b2551bec_Trait> _1a9a1ee92_FindTrait_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3332_ident) {
	return _1ac154bce_FindTrait(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _3332_ident);
}
inline jule::Ptr<_1b2553d42_Enum> _1a9a202a0_FindEnum_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac154edc_FindEnum(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a205ad_FindTypeEnum_1(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _4135_ident) {
	return _1ac1552ea_FindTypeEnum(_self_.safe_ptr<_1ac1530c8_ImportInfo>(), _4135_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1d8a8_FindPackage_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _934_ident) {
	return _1ac15650a_FindPackage(_self_.safe_ptr<_1ac156032_Package>(), _934_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1dbb6_SelectPackage_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _1336_selector) {
	return _1ac156818_SelectPackage(_self_.safe_ptr<_1ac156032_Package>(), _1336_selector);
}
inline jule::Ptr<_1ac17c960_Var> _1a9a1e06d_FindVar_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1ac156bc0_FindVar(_self_.safe_ptr<_1ac156032_Package>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a1e425_FindTypeAlias_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1ac157077_FindTypeAlias(_self_.safe_ptr<_1ac156032_Package>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1e7cc_FindStruct_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1ac15742e_FindStruct(_self_.safe_ptr<_1ac156032_Package>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1a99bc714_Fn> _1a9a1eb84_FindFn_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1ac1577d6_FindFn(_self_.safe_ptr<_1ac156032_Package>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1b2551bec_Trait> _1a9a1ee92_FindTrait_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3332_ident) {
	return _1ac157ae4_FindTrait(_self_.safe_ptr<_1ac156032_Package>(), _3332_ident);
}
inline jule::Ptr<_1b2553d42_Enum> _1a9a202a0_FindEnum_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac157e02_FindEnum(_self_.safe_ptr<_1ac156032_Package>(), _3731_ident);
}
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a205ad_FindTypeEnum_2(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _4135_ident) {
	return _1ac158210_FindTypeEnum(_self_.safe_ptr<_1ac156032_Package>(), _4135_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1d8a8_FindPackage_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _934_ident) {
	return _1ac15b741_FindPackage(_self_.safe_ptr<_1ac15b224_Sema>(), _934_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1dbb6_SelectPackage_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _1336_selector) {
	return _1ac15ba4e_SelectPackage(_self_.safe_ptr<_1ac15b224_Sema>(), _1336_selector);
}
inline jule::Ptr<_1ac17c960_Var> _1a9a1e06d_FindVar_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1ac15be06_FindVar(_self_.safe_ptr<_1ac15b224_Sema>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a1e425_FindTypeAlias_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1ac15c2ad_FindTypeAlias(_self_.safe_ptr<_1ac15b224_Sema>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1e7cc_FindStruct_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1ac15c665_FindStruct(_self_.safe_ptr<_1ac15b224_Sema>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1a99bc714_Fn> _1a9a1eb84_FindFn_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1ac15ca1c_FindFn(_self_.safe_ptr<_1ac15b224_Sema>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1b2551bec_Trait> _1a9a1ee92_FindTrait_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3332_ident) {
	return _1ac15cd2a_FindTrait(_self_.safe_ptr<_1ac15b224_Sema>(), _3332_ident);
}
inline jule::Ptr<_1b2553d42_Enum> _1a9a202a0_FindEnum_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac15d138_FindEnum(_self_.safe_ptr<_1ac15b224_Sema>(), _3731_ident);
}
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a205ad_FindTypeEnum_3(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _4135_ident) {
	return _1ac15d446_FindTypeEnum(_self_.safe_ptr<_1ac15b224_Sema>(), _4135_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1d8a8_FindPackage_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _934_ident) {
	return _1ac1c0475_FindPackage(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _934_ident);
}
inline jule::Ptr<_1ac1530c8_ImportInfo> _1a9a1dbb6_SelectPackage_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _1336_selector) {
	return _1ac1c0783_SelectPackage(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _1336_selector);
}
inline jule::Ptr<_1ac17c960_Var> _1a9a1e06d_FindVar_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1ac1c0b3a_FindVar(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a1e425_FindTypeAlias_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1ac1c0ee2_FindTypeAlias(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1b393b9dc_Struct> _1a9a1e7cc_FindStruct_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1ac1c1399_FindStruct(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1a99bc714_Fn> _1a9a1eb84_FindFn_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1ac1c1751_FindFn(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1b2551bec_Trait> _1a9a1ee92_FindTrait_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3332_ident) {
	return _1ac1c1a5e_FindTrait(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _3332_ident);
}
inline jule::Ptr<_1b2553d42_Enum> _1a9a202a0_FindEnum_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _3731_ident) {
	return _1ac1c1d6c_FindEnum(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _3731_ident);
}
inline jule::Ptr<_1b255543c_TypeEnum> _1a9a205ad_FindTypeEnum_4(jule::Trait<_1a9a20701_Lookup> _self_, jule::Str _4135_ident) {
	return _1ac1c217a_FindTypeEnum(_self_.safe_ptr<_1ac1bee58_SymbolTable>(), _4135_ident);
}
inline jule::Str _1ac4209b1_name_0(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c3832_name(_self_.safe_ptr<_1b17c3e81_Flag>());
}
inline jule::I32 _1ac420ae3_short_0(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c45d0_short(_self_.safe_ptr<_1b17c3e81_Flag>());
}
inline jule::Str _1ac420c25_what_0(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c436b_what(_self_.safe_ptr<_1b17c3e81_Flag>());
}
inline void _1ac420dac_reset_0(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	_1b17c449d_reset(_self_.safe_ptr<_1b17c3e81_Flag>());
}
inline jule::Str _1ac4209b1_name_1(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c768d_name(_self_.safe_ptr<_1b17c7b44_Flag>());
}
inline jule::I32 _1ac420ae3_short_1(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c8172_short(_self_.safe_ptr<_1b17c7b44_Flag>());
}
inline jule::Str _1ac420c25_what_1(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17c7e0d_what(_self_.safe_ptr<_1b17c7b44_Flag>());
}
inline void _1ac420dac_reset_1(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	_1b17c8040_reset(_self_.safe_ptr<_1b17c7b44_Flag>());
}
inline jule::Str _1ac4209b1_name_2(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17cb175_name(_self_.safe_ptr<_1b17cb62b_Flag>());
}
inline jule::I32 _1ac420ae3_short_2(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17cbb59_short(_self_.safe_ptr<_1b17cb62b_Flag>());
}
inline jule::Str _1ac420c25_what_2(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17cb8e5_what(_self_.safe_ptr<_1b17cb62b_Flag>());
}
inline void _1ac420dac_reset_2(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	_1b17cba27_reset(_self_.safe_ptr<_1b17cb62b_Flag>());
}
inline jule::Str _1ac4209b1_name_3(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17ceba1_name(_self_.safe_ptr<_1b17d0157_Flag>());
}
inline jule::I32 _1ac420ae3_short_3(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17d0685_short(_self_.safe_ptr<_1b17d0157_Flag>());
}
inline jule::Str _1ac420c25_what_3(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17d0421_what(_self_.safe_ptr<_1b17d0157_Flag>());
}
inline void _1ac420dac_reset_3(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	_1b17d0553_reset(_self_.safe_ptr<_1b17d0157_Flag>());
}
inline jule::Str _1ac4209b1_name_4(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17d3688_name(_self_.safe_ptr<_1b17d3b3e_Flag>());
}
inline jule::I32 _1ac420ae3_short_4(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17d416c_short(_self_.safe_ptr<_1b17d3b3e_Flag>());
}
inline jule::Str _1ac420c25_what_4(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	return _1b17d3e08_what(_self_.safe_ptr<_1b17d3b3e_Flag>());
}
inline void _1ac420dac_reset_4(jule::Trait<_1ade32b97_CommonFlag> _self_) {
	_1b17d403a_reset(_self_.safe_ptr<_1b17d3b3e_Flag>());
}


static _1ac150845_ImporterMptrData _1ac150845_Importer_mptr_data[] = {
	{
		._1ac14e767_SetModPath=_1ac14e767_SetModPath_0,
		._1ac14e9a9_GetModPath=_1ac14e9a9_GetModPath_0,
		._1ac14ecb7_ModById=_1ac14ecb7_ModById_0,
		._1ac1500c5_GetImport=_1ac1500c5_GetImport_0,
		._1ac15047c_ImportPackage=_1ac15047c_ImportPackage_0,
		._1ac150702_Imported=_1ac150702_Imported_0,
	},
};
static _1a9a0475c_KindMptrData _1a9a0475c_Kind_mptr_data[] = {
	{
		._1a9a0430b_Str=_1a9a0430b_Str_0,
		._1a9a04619_Equals=_1a9a04619_Equals_0,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_1,
		._1a9a04619_Equals=_1a9a04619_Equals_1,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_2,
		._1a9a04619_Equals=_1a9a04619_Equals_2,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_3,
		._1a9a04619_Equals=_1a9a04619_Equals_3,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_4,
		._1a9a04619_Equals=_1a9a04619_Equals_4,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_5,
		._1a9a04619_Equals=_1a9a04619_Equals_5,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_6,
		._1a9a04619_Equals=_1a9a04619_Equals_6,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_7,
		._1a9a04619_Equals=_1a9a04619_Equals_7,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_8,
		._1a9a04619_Equals=_1a9a04619_Equals_8,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_9,
		._1a9a04619_Equals=_1a9a04619_Equals_9,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_10,
		._1a9a04619_Equals=_1a9a04619_Equals_10,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_11,
		._1a9a04619_Equals=_1a9a04619_Equals_11,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_12,
		._1a9a04619_Equals=_1a9a04619_Equals_12,
	},
	{
		._1a9a0430b_Str=_1a9a0430b_Str_13,
		._1a9a04619_Equals=_1a9a04619_Equals_13,
	},
};
static _1a9a20701_LookupMptrData _1a9a20701_Lookup_mptr_data[] = {
	{
		._1a9a1d8a8_FindPackage=_1a9a1d8a8_FindPackage_0,
		._1a9a1dbb6_SelectPackage=_1a9a1dbb6_SelectPackage_0,
		._1a9a1e06d_FindVar=_1a9a1e06d_FindVar_0,
		._1a9a1e425_FindTypeAlias=_1a9a1e425_FindTypeAlias_0,
		._1a9a1e7cc_FindStruct=_1a9a1e7cc_FindStruct_0,
		._1a9a1eb84_FindFn=_1a9a1eb84_FindFn_0,
		._1a9a1ee92_FindTrait=_1a9a1ee92_FindTrait_0,
		._1a9a202a0_FindEnum=_1a9a202a0_FindEnum_0,
		._1a9a205ad_FindTypeEnum=_1a9a205ad_FindTypeEnum_0,
	},
	{
		._1a9a1d8a8_FindPackage=_1a9a1d8a8_FindPackage_1,
		._1a9a1dbb6_SelectPackage=_1a9a1dbb6_SelectPackage_1,
		._1a9a1e06d_FindVar=_1a9a1e06d_FindVar_1,
		._1a9a1e425_FindTypeAlias=_1a9a1e425_FindTypeAlias_1,
		._1a9a1e7cc_FindStruct=_1a9a1e7cc_FindStruct_1,
		._1a9a1eb84_FindFn=_1a9a1eb84_FindFn_1,
		._1a9a1ee92_FindTrait=_1a9a1ee92_FindTrait_1,
		._1a9a202a0_FindEnum=_1a9a202a0_FindEnum_1,
		._1a9a205ad_FindTypeEnum=_1a9a205ad_FindTypeEnum_1,
	},
	{
		._1a9a1d8a8_FindPackage=_1a9a1d8a8_FindPackage_2,
		._1a9a1dbb6_SelectPackage=_1a9a1dbb6_SelectPackage_2,
		._1a9a1e06d_FindVar=_1a9a1e06d_FindVar_2,
		._1a9a1e425_FindTypeAlias=_1a9a1e425_FindTypeAlias_2,
		._1a9a1e7cc_FindStruct=_1a9a1e7cc_FindStruct_2,
		._1a9a1eb84_FindFn=_1a9a1eb84_FindFn_2,
		._1a9a1ee92_FindTrait=_1a9a1ee92_FindTrait_2,
		._1a9a202a0_FindEnum=_1a9a202a0_FindEnum_2,
		._1a9a205ad_FindTypeEnum=_1a9a205ad_FindTypeEnum_2,
	},
	{
		._1a9a1d8a8_FindPackage=_1a9a1d8a8_FindPackage_3,
		._1a9a1dbb6_SelectPackage=_1a9a1dbb6_SelectPackage_3,
		._1a9a1e06d_FindVar=_1a9a1e06d_FindVar_3,
		._1a9a1e425_FindTypeAlias=_1a9a1e425_FindTypeAlias_3,
		._1a9a1e7cc_FindStruct=_1a9a1e7cc_FindStruct_3,
		._1a9a1eb84_FindFn=_1a9a1eb84_FindFn_3,
		._1a9a1ee92_FindTrait=_1a9a1ee92_FindTrait_3,
		._1a9a202a0_FindEnum=_1a9a202a0_FindEnum_3,
		._1a9a205ad_FindTypeEnum=_1a9a205ad_FindTypeEnum_3,
	},
	{
		._1a9a1d8a8_FindPackage=_1a9a1d8a8_FindPackage_4,
		._1a9a1dbb6_SelectPackage=_1a9a1dbb6_SelectPackage_4,
		._1a9a1e06d_FindVar=_1a9a1e06d_FindVar_4,
		._1a9a1e425_FindTypeAlias=_1a9a1e425_FindTypeAlias_4,
		._1a9a1e7cc_FindStruct=_1a9a1e7cc_FindStruct_4,
		._1a9a1eb84_FindFn=_1a9a1eb84_FindFn_4,
		._1a9a1ee92_FindTrait=_1a9a1ee92_FindTrait_4,
		._1a9a202a0_FindEnum=_1a9a202a0_FindEnum_4,
		._1a9a205ad_FindTypeEnum=_1a9a205ad_FindTypeEnum_4,
	},
};
static _1ade32b97_CommonFlagMptrData _1ade32b97_CommonFlag_mptr_data[] = {
	{
		._1ac4209b1_name=_1ac4209b1_name_0,
		._1ac420ae3_short=_1ac420ae3_short_0,
		._1ac420c25_what=_1ac420c25_what_0,
		._1ac420dac_reset=_1ac420dac_reset_0,
	},
	{
		._1ac4209b1_name=_1ac4209b1_name_1,
		._1ac420ae3_short=_1ac420ae3_short_1,
		._1ac420c25_what=_1ac420c25_what_1,
		._1ac420dac_reset=_1ac420dac_reset_1,
	},
	{
		._1ac4209b1_name=_1ac4209b1_name_2,
		._1ac420ae3_short=_1ac420ae3_short_2,
		._1ac420c25_what=_1ac420c25_what_2,
		._1ac420dac_reset=_1ac420dac_reset_2,
	},
	{
		._1ac4209b1_name=_1ac4209b1_name_3,
		._1ac420ae3_short=_1ac420ae3_short_3,
		._1ac420c25_what=_1ac420c25_what_3,
		._1ac420dac_reset=_1ac420dac_reset_3,
	},
	{
		._1ac4209b1_name=_1ac4209b1_name_4,
		._1ac420ae3_short=_1ac420ae3_short_4,
		._1ac420c25_what=_1ac420c25_what_4,
		._1ac420dac_reset=_1ac420dac_reset_4,
	},
};


jule::Str _1ac4299ed_OutDir = jule::Str("dist", 4);
jule::Str _1ac42b4e4_OutName = jule::Str("ir.cpp", 6);
jule::Str _1ac42c14e_Out = jule::Str();
jule::Str _1e4728468_Compiler = jule::Str();
jule::Str _1e47d5ab9_CompilerPath = jule::Str();
jule::Str _1e47d5d2d_CppStd = jule::Str("cpp17", 5);
jule::Bool _1e47d6092_Shadowing = false;
jule::Bool _1e47d636c_Transpilation = false;
jule::Bool _1e47d667a_Test = false;
jule::Bool _1e47d6988_RC = true;
jule::Bool _1e47d6da6_Safety = true;
jule::Bool _1e47d71b4_Production = false;
jule::Ptr<_1e65e8c0a_RangeTable> _1e6579c68__L = jule::new_ptr<_1e65e8c0a_RangeTable>(_1e65e8c0a_RangeTable{._field_R16=jule::Slice<_1e65e8314_Range16>::make({_1e65e8314_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1e65e8314_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1e65e8314_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1e65e8314_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1e65e8314_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1e65e8314_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1e65e8314_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1e65e8314_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1e65e8314_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1e65e8314_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1e65e8314_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1e65e8314_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1e65e8314_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1e65e8314_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1e65e8314_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1e65e8314_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1e65e8314_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1e65e8314_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1e65e8314_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1e65e8314_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1e65e8314_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1e65e8314_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1e65e8314_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1e65e8314_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1e65e8314_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1e65e8314_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1e65e8314_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1e65e8314_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1e65e8314_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1e65e8314_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1e65e8314_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1e65e8314_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1e65e8314_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1e65e8314_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1e65e8314_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1e65e8314_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1e65e8314_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1e65e8314_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1e65e8314_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1e65e8314_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1e65e8314_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1e65e8314_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1e65e8314_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1e65e8314_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1e65e8314_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1e65e8787_Range32>::make({_1e65e8787_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1e65e8787_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1e65e8787_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1e65e8787_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1e65e8787_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1e65e8787_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1e65e8787_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1e65e8787_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1e65e8787_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1e65e8787_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1e65e8787_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1e65e8787_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1e65e8787_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1e65e8787_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1e65e8787_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1e65e8787_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1e65e8787_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1e65e8787_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1e65e8787_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1e65e8787_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1e65e8787_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1e65e8787_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1e65e8787_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1e65e8787_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1e65e8787_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1e65e8787_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1e65e8787_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Array<jule::Str,4> _1e47e0b90_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1e6727cb2_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1e67292e1_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1e676eaa6_PathStdlib = jule::Str();
jule::Str _1e6771965_PathExec = jule::Str();
jule::Str _1e67740b6_PathWd = jule::Str();
jule::Str _1e6784758_PathApi = jule::Str();
jule::Array<jule::I32,5> _1e69ad2ab_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1e69ad520_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1e69ad861_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1e6a56cc2_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1e6a57113_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1e6a64be2_kindPair,47> _1e6a65176_keywords = jule::Array<_1e6a64be2_kindPair,47>({_1e6a64be2_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1e6a64be2_kindPair,39> _1e6a6550b_basicOps = jule::Array<_1e6a64be2_kindPair,39>({_1e6a64be2_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e6a64be2_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1ac0b7823__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1ac0b7e72__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1ac106026_floatInfo _1b37b8a9a_f32info = _1ac106026_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1ac106026_floatInfo _1b37c7724_f64info = _1ac106026_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1ac10c714_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1ac10e4b3_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1ac110063_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1ac1103e8_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1ac113462_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ac116e38_leftCheat> _1ac1173bc_leftCheats = jule::Slice<_1ac116e38_leftCheat>::make({_1ac116e38_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ac116e38_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1ac116e38_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1ac116e38_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1ac116e38_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1ac116e38_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1ac116e38_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1ac116e38_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1ac116e38_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1ac116e38_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1ac116e38_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1ac116e38_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1ac116e38_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1ac116e38_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1ac116e38_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1ac116e38_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1ac116e38_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1ac116e38_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1ac116e38_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1ac116e38_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1ac116e38_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1ac116e38_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1ac116e38_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1ac116e38_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1ac116e38_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1ac116e38_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1ac116e38_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1ac116e38_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1ac116e38_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1ac116e38_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1ac116e38_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1ac116e38_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1ac116e38_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1ac116e38_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1ac116e38_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1ac116e38_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1ac116e38_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1ac116e38_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1ac116e38_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1ac116e38_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1ac116e38_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1ac116e38_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1ac116e38_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1ac116e38_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1ac116e38_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1ac116e38_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1ac116e38_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1ac116e38_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1ac116e38_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1ac116e38_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1ac116e38_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1ac116e38_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1ac116e38_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1ac116e38_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1ac116e38_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1ac116e38_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1ac116e38_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1ac116e38_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1ac116e38_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1ac116e38_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1ac116e38_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1ac11d071_BitSize = 0LL;
jule::Str _1ac11d3c3_SysInt = jule::Str();
jule::Str _1ac11d6d1_SysUint = jule::Str();
jule::Slice<jule::Str> _1ac12bd71_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1b25786a2_Copy = false;
jule::Bool _1b25988d1_Deadcode = false;
jule::Bool _1b25b0a5d_Append = false;
jule::Bool _1b25b2dd4_Math = false;
jule::Bool _1b25b1d4a_Access = false;
jule::Bool _1b25d4e28_Inline = false;
jule::Bool _1b2635363_Ptr = false;
jule::Bool _1b2635891_Cond = false;
jule::Bool _1acace59d_exprEnabled = false;
jule::Bool _1acad0703_scopeEnabled = false;
jule::Array<jule::U64,12> _1ac3dc8c3_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_1e65e8c0a_RangeTable> _1e6582985_Letter = _1e6579c68__L;
jule::Str _1e678503e_Os = jule::Str("darwin", 6);
jule::Str _1e676e721_Arch = jule::Str("arm64", 5);
jule::Array<_1e66adee0_acceptRange,16> _1e66ae353_acceptRanges = jule::Array<_1e66adee0_acceptRange,16>({_1e66adee0_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1e66adee0_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1e66adee0_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1e66adee0_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1e66adee0_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1e670d7d1_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Array<jule::U8,256> _1e66ad96d_first = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1e65e2000__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _1e65e8314_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e65e8787_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e65e8c0a_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e66adee0_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e570e8c1_index(_1e66b701a_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1e57100ca_append(_1e66b701a_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1e5712b7c_string(_1e66b701a_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e66b701a_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e49337e9_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>> static__1e568c8a4_Read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1e49337e9_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>();
	DIR* _1617_dir = _1e560a1b2_Opendir((&(_1524_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>>(_1e48862da_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1e560a2e4_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1ae7c3191;
			};
			jule::Str _2517_name = _1e49d47bd_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1e56328e3_Status> _2621_stat = ({
				auto except = static__1e488bac6_Of(_1e57374cb_Join(jule::Slice<jule::Str>::make({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>>(except.error);
				} jule::Ptr<_1e56328e3_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1e49337e9_DirEntry>(_1e49337e9_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1ae7c3191:;
	}
	_iter_end_1ae7c3191:;;
	_1e560a657_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1e569977e_Create(jule::Str _3926_path) {
	if ((_1e560a9ed_Mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_1e48862da_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e567653b_Remove(jule::Str _5126_path) {
	if ((_1e560ab30_Rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1e48862da_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e4935532_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e563252a_File>> static__1e4887099_Open(jule::Str _1824_path, jule::I64 _1835_flag, jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _1e5609e4d_Open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e563252a_File>>(_1e48862da_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_1e563252a_File>>(jule::Any(),static__1e4934344_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__1e4887dd0_Remove(jule::Str _3026_path) {
	if ((_1e560ac62_Unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1e48862da_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e488995e_Write(_1e563252a_File* _self_, jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	};
	_4445_n=static_cast<jule::I64>(_1e5619b72_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e48862da_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _1e488a443_Read(_1e563252a_File* _self_, jule::Slice<jule::U8> _6431_buff) {
	jule::I64 _6448_n = jule::I64();
	if ((_6431_buff.len() == 0LL)) {
		_6448_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6448_n);
	};
	_6448_n=static_cast<jule::I64>(_1e5619413_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6431_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6431_buff.len()))));
	if ((_6448_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e48862da_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6448_n);
}



inline jule::Ptr<_1e563252a_File> static__1e4934344_New(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_1e563252a_File>(_1e563252a_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_1e563252a_File>> static__1e4934520_Create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1e563252a_File>>(jule::Any(),({
		auto except = static__1e4887099_Open(_5526_path,((static_cast<jule::I64>(1538LL) | 1538LL) | 1538LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1e563252a_File>>(except.error);
		} jule::Ptr<_1e563252a_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1e49365aa_Read(jule::Str _6724_path) {
	jule::Ptr<_1e56328e3_Status> _6813_s = ({
		auto except = static__1e488bac6_Of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e56328e3_Status>();});
	});;
	if ((!(_1e4885163_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1e563252a_File> _7817_f = ({
		auto except = static__1e4887099_Open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e563252a_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1e493571e_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _1e488a443_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1e493719e_Write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_1e563252a_File> _9217_f = ({
		auto except = static__1e4887099_Open(_9125_path,((static_cast<jule::I64>(1537LL) | 1537LL) | 1537LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1e563252a_File>();});
	});;
	({
		auto except = _1e488995e_Write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1e493571e_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e49384be_Seek(_1e563252a_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _1e5619028_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e48862da_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1e493571e_Close(_1e563252a_File* _self_) {
	if ((_1e5619787_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1e48862da_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e563252a_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e56328e3_Status>> static__1e488bac6_Of(jule::Str _1122_path) {
	if (_1122_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1e56328e3_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1e5609d1b_Stat((&(_1122_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e56328e3_Status>>(jule::Any(),jule::new_ptr<_1e56328e3_Status>(_1e56328e3_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1e56328e3_Status>>(_1e48862da_getLastFsError());
}



inline jule::Bool _1e4884b02_IsDir(_1e56328e3_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1e4885163_IsReg(_1e56328e3_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1e56328e3_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6786408_Cmd> static__1e6786837_New(jule::Str _2023_path) {
	return jule::new_ptr<_1e6786408_Cmd>(_1e6786408_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _1e6786a9b_Spawn(_1e6786408_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1e6789a05_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1e6789a05_spawn(_1e6786408_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ae7e6add:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ae7e7eda:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_1e678932e_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_1e6789719_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_1e678a330_Exit(255LL);
			}
		}
		_match_end_1ae7e7d86:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e6785b77_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6786408_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6735e35_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e6a5cba7_Prec(_1e6a5c800_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ae8993ee:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ae899465:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ae898d05:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ae898d6b:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ae898dd2:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1ae898ab3:;
			{
				return 0LLU;
			}
		}
		_match_end_1ae898a5d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a5c800_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6a63097_IsOk(_1e6a62b8a_File* _self_) {
	({
		auto except = static__1e488bac6_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1e56328e3_Status>();});
	});
	return true;
}



inline void _1e6a6331c_Fill(_1e6a62b8a_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_Data=_2331_data;
}



inline jule::Str _1e6a63581_Dir(_1e6a62b8a_File* _self_) {
	return _1e571ec88_Dir((*_self_)._field_Path);
}



inline jule::Str _1e6a637e5_Name(_1e6a62b8a_File* _self_) {
	return _1e571b449_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1e6a63a59_Addr(_1e6a62b8a_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1e6a63d67_GetRow(_1e6a62b8a_File* _self_, jule::I64 _4425_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1ae89e080;
			};
			(_4517_n)++;
			if ((_4517_n == _4425_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1ae89e080:;
	}
	_iter_end_1ae89e080:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a62b8a_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a64be2_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a6ad80_pushErr(_1e6a6a7db_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e6a659e5_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _1e6a6b19e_pushErrTok(_1e6a6a7db_lex* _self_, jule::Ptr<_1e6a5c800_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e6a659e5_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _1e6a6b37a_lex(_1e6a6a7db_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1e6a6d37c_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1e6a5c800_Token> _47321_token = _1e6a6e702_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1ad117399:;
	}
	_iter_end_1ad117399:;;
}



inline jule::Str _1e6a6b688_id(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _1e66aeac3_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_1e6a60ccb_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _1e66aeac3_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1e6a6131a_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1e6a60ccb_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1ad11a5bc:;
	}
	_iter_end_1ad11a5bc:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1e6a6b8ec_resume(_1e6a6a7db_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_1e6a6087a_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ad120281:;
						{
							_1e6a6d37c_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ad1202e7:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ad11d1a2:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1ad11ecdb:;
				};
				goto _iter_next_1ad11d45a;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1ad11e1a3;
					};
				}
			_iter_next_1ad11e1a3:;
			}
			_iter_end_1ad11e1a3:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_1ad11d45a:;
	}
	_iter_end_1ad11d45a:;;
	return nullptr;
}



inline void _1e6a6bb72_lexLineComment(_1e6a6a7db_lex* _self_, jule::Ptr<_1e6a5c800_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1ad122bce;
			};
		}
	_iter_next_1ad122bce:;
	}
	_iter_end_1ad122bce:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _1e6a6bde7_lexRangeComment(_1e6a6a7db_lex* _self_, jule::Ptr<_1e6a5c800_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1ad126089;
			};
			if ((_55417_r == '\n')) {
				_1e6a6d37c_newLine(&(*_self_));
				goto _iter_next_1ad126089;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ad126089:;
	}
	_iter_end_1ad126089:;;
	_1e6a6ad80_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1e6a6c205_num(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_1e6a69312_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1e6a6906a_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1e6a679b4_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1e6a6771c_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _1e6a6c513_escapeSeq(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ad131160:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ad130d63:;
			{
				_60117_seq=_1e6a698ea_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ad130dc9:;
			{
				_60117_seq=_1e6a69bb4_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ad130e40:;
			{
				_60117_seq=_1e6a69d6d_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1ad1305e3:;
			{
				_60117_seq=_1e6a6a104_byteEscape(_60029_txt);
			}
		}
		_match_end_1ad130c20:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1e6a6ad80_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _1e6a6c8ba_getRune(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _1e6a6c513_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _1e66aeac3_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _1e6a6cbc8_lexRune(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1ad13808a;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_1e6a6ad80_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1e6a6d37c_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _1e6a6c8ba_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_1e66b17b7_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1ad13808a;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1ad13808a:;
	}
	_iter_end_1ad13808a:;;
	if ((_64217_n == 0LL)) {
		_1e6a6ad80_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1e6a6ad80_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _1e6a6ce3c_lexStr(_1e6a6a7db_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1ad13e0c4;
			};
			if ((_68717_ch == '\n')) {
				_1e6a6d37c_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_1e6a6ad80_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _1e6a6c8ba_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_1e66b17b7_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1ad13e0c4;
			};
		}
	_iter_next_1ad13e0c4:;
	}
	_iter_end_1ad13e0c4:;;
	return _67917_s;
}



inline jule::Bool _1e6a6d1a1_isFirstTokenOfLine(_1e6a6a7db_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1e6a6d37c_newLine(_1e6a6a7db_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1e6a6d877_isOp(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1e6a5c800_Token>& _72066_t) {
	if ((!(_1e6a65d7a_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _1e6a6dc2e_lexBasicOps(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1e6a5c800_Token>& _73048_tok) {
	{
		auto &expr = _1e6a6550b_basicOps;
		auto it = expr.begin();
		_iter_begin_1ad1456b3:;
		if (it != expr.end()) {
			_1e6a64be2_kindPair &_73116_pair = *it;
			{
				if (_1e6a6d877_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_1ad1456b3:;
			++it;
			goto _iter_begin_1ad1456b3;
		}
		_iter_end_1ad1456b3:;
	};
	return false;
}



inline jule::Bool _1e6a6e0d6_lexId(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_1e6a5c800_Token>& _74043_t) {
	jule::Str _74113_lex = _1e6a6b688_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1e6a6e48d_lexNum(_1e6a6a7db_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_1e6a5c800_Token>& _75044_t) {
	jule::Str _75113_lex = _1e6a6c205_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1e6a5c800_Token> _1e6a6e702_token(_1e6a6a7db_lex* _self_) {
	jule::Ptr<_1e6a5c800_Token> _76217_t = jule::new_ptr<_1e6a5c800_Token>(_1e6a5c800_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1e6a6b8ec_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1e6a6e48d_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ad14ba3d:;
			{
				goto _match_end_1ad14a597;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1ad14baa4:;
			{
				_76217_t.get()._field_Kind=_1e6a6cbc8_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1ad14c6a9:;
			{
				_76217_t.get()._field_Kind=_1e6a6ce3c_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_1e6a65d7a_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1ad14c720:;
			{
				_1e6a6bb72_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1e6a65d7a_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1ad14c786:;
			{
				_1e6a6bde7_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6d877_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1e6a6dc2e_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ad14aeb0:;
			{
				goto _match_end_1ad14a597;
			}
		}
		else if (_1e6a6e0d6_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ad14b026:;
			{
				{
					auto &expr = _1e6a65176_keywords;
					auto it = expr.begin();
					_iter_begin_1ad152c97:;
					if (it != expr.end()) {
						_1e6a64be2_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1ad152c97;
							};
						}
						_iter_next_1ad152c97:;
						++it;
						goto _iter_begin_1ad152c97;
					}
					_iter_end_1ad152c97:;
				};
			}
		}
		else {
			_case_begin_1ad14ae49:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _1e66aeac3_DecodeRune(_76713_txt);
				_1e6a6ad80_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_1ad14a597:;
	};
	(*_self_)._field_column+=_1e66b17b7_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a6a7db_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3916a1c_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3917732_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3917b2d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394b326_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b394bc50_IsPrim(_1b394b8dc_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1b394b8dc_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394c03b_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394c3e3_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394c6ce_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394caca_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394cdb6_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b394d504_IsUnsafe(_1b394d1a2_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b394d1a2_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b394dc0d_AutoSized(_1b394d834_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b394d834_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394e082_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b394e439_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3950847_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3950b33_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39511d8_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39514c4_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3951bcd_IsNil(_1b395187b_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1b395187b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3952085_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395243c_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3952c12_IsSelf(_1b39528b0_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1b39528b0_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39530b9_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3953471_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3953828_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3953bd0_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3954153_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39545c6_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3954e78_Unhandled(_1b3954b15_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1b39551dc_Ignored(_1b3954b15_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3954b15_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b39558e6_IsTargeted(_1b3955594_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3955594_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3955ce2_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b39568d6_IsEmpty(_1b3956265_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3956265_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3956c7c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3957552_IsEmpty(_1b3957200_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3957200_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3957a91_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395819b_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3958487_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395890a_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3958cb2_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3959169_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3959455_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3959a60_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395a09e_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395b039_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395b644_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b395c17d_IsSelf(_1b395bd1a_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1b395c3e2_IsRef(_1b395bd1a_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1b395bd1a_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b395d48c_IsAnon(_1b395d13a_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1b395d13a_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395e119_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b395e4c1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b395ee83_IsInf(_1b395eb31_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b395eb31_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3960758_IsWhileNext(_1b3960406_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3960406_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3960c97_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396114e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3961506_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3961979_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3961d31_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39622a4_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396297a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3962ded_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39635c4_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3963d66_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b396463b_AutoExpr(_1b39642d9_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b39642d9_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b3965395_DefaultTyped(_1b3964d12_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b3964d12_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3965818_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3965a16_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3966066_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39668c4_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3966ece_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b396794c_IsTraitImpl(_1b39675d9_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1b3967bb1_IsStructImpl(_1b39675d9_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b39675d9_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9956c86_Const> static__1a99abd0d_NewI64(jule::I64 _1326_x) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=jule::Any(_1326_x)});
}



inline jule::Ptr<_1a9956c86_Const> static__1a99abe40_NewU64(jule::U64 _1626_x) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=jule::Any(_1626_x)});
}



inline jule::Ptr<_1a9956c86_Const> static__1a99ac0c7_NewBool(jule::Bool _1927_x) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=jule::Any(_1927_x)});
}



inline jule::Ptr<_1a9956c86_Const> static__1a99ac36e_NewStr(jule::Str _2226_x) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=jule::Any(_2226_x)});
}



inline jule::Ptr<_1a9956c86_Const> static__1a99ac616_NewF64(jule::F64 _2526_x) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=jule::Any(_2526_x)});
}



inline jule::Ptr<_1a9956c86_Const> static__1a99ac814_NewNil(void) {
	return jule::new_ptr<_1a9956c86_Const>(_1a9956c86_Const{._field_data=nullptr});
}



inline jule::I64 _1a99ace0d_ReadI64(_1a9956c86_Const* _self_) {
	if ((!(_1a99b02a6_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a99ad172_ReadU64(_1a9956c86_Const* _self_) {
	if ((!(_1a99b051a_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a99ad3d6_ReadBool(_1a9956c86_Const* _self_) {
	if ((!(_1a99b077e_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a99ad64a_ReadStr(_1a9956c86_Const* _self_) {
	if ((!(_1a99b09e3_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a99ad8ae_ReadF64(_1a9956c86_Const* _self_) {
	if ((!(_1a99b0c57_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a99adb23_AsI64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ae8d0732:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ae8d0798:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ae8d0105:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ae8d0028:;
			{
				return 0LL;
			}
		}
		_match_end_1ae8ce81e:;
	};
}



inline jule::U64 _1a99add87_AsU64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ae8d16cd:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ae8d226c:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ae8d22d3:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ae8d0875:;
			{
				return 0LLU;
			}
		}
		_match_end_1ae8d0820:;
	};
}



inline jule::F64 _1a99ae0eb_AsF64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ae8d3218:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ae8d3ca7:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ae8d3d1d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1ae8d1d1b:;
			{
				return 0LL;
			}
		}
		_match_end_1ae8d1cb6:;
	};
}



inline void _1a99ae371_SetI64(_1a9956c86_Const* _self_, jule::I64 _13529_x) {
	(*_self_)._field_data=jule::Any(_13529_x);
}



inline void _1a99ae5e6_SetU64(_1a9956c86_Const* _self_, jule::U64 _13829_x) {
	(*_self_)._field_data=jule::Any(_13829_x);
}



inline void _1a99ae86b_SetBool(_1a9956c86_Const* _self_, jule::Bool _14130_x) {
	(*_self_)._field_data=jule::Any(_14130_x);
}



inline void _1a99aeae1_SetStr(_1a9956c86_Const* _self_, jule::Str _14429_x) {
	(*_self_)._field_data=jule::Any(_14429_x);
}



inline void _1a99aed66_SetF64(_1a9956c86_Const* _self_, jule::F64 _14729_x) {
	(*_self_)._field_data=jule::Any(_14729_x);
}



inline void _1a99b0042_SetNil(_1a9956c86_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1a99b02a6_IsI64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ae626632:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae620296:;
			{
				return false;
			}
		}
		_match_end_1ae620241:;
	};
}



inline jule::Bool _1a99b051a_IsU64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ae62708e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae626e90:;
			{
				return false;
			}
		}
		_match_end_1ae626d6e:;
	};
}



inline jule::Bool _1a99b077e_IsBool(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ae627b94:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae627875:;
			{
				return false;
			}
		}
		_match_end_1ae627567:;
	};
}



inline jule::Bool _1a99b09e3_IsStr(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ae6286bc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae62839d:;
			{
				return false;
			}
		}
		_match_end_1ae6267ec:;
	};
}



inline jule::Bool _1a99b0c57_IsF64(_1a9956c86_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ae6291e5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae628dc6:;
			{
				return false;
			}
		}
		_match_end_1ae628ab8:;
	};
}



inline jule::Bool _1a99b0ebb_IsNil(_1a9956c86_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1a99b12c9_AreSameTypes(_1a9956c86_Const* _self_, _1a9956c86_Const _21031_x) {
	{
		
		if ((_1a99b02a6_IsI64(&(*_self_)) == _1a99b02a6_IsI64(&_21031_x))) {
			_case_begin_1ae62aa87:;
			{
				return true;
			}
		}
		else if ((_1a99b051a_IsU64(&(*_self_)) == _1a99b051a_IsU64(&_21031_x))) {
			_case_begin_1ae62a328:;
			{
				return true;
			}
		}
		else if ((_1a99b0c57_IsF64(&(*_self_)) == _1a99b0c57_IsF64(&_21031_x))) {
			_case_begin_1ae62a3a0:;
			{
				return true;
			}
		}
		else if ((_1a99b077e_IsBool(&(*_self_)) == _1a99b077e_IsBool(&_21031_x))) {
			_case_begin_1ae62a427:;
			{
				return true;
			}
		}
		else if ((_1a99b09e3_IsStr(&(*_self_)) == _1a99b09e3_IsStr(&_21031_x))) {
			_case_begin_1ae62a49e:;
			{
				return true;
			}
		}
		else if ((_1a99b0ebb_IsNil(&(*_self_)) == _1a99b0ebb_IsNil(&_21031_x))) {
			_case_begin_1ae62a746:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae62a2a1:;
			{
				return false;
			}
		}
		_match_end_1ae62a1c4:;
	};
}



inline jule::Bool _1a99b15d7_And(_1a9956c86_Const* _self_, _1a9956c86_Const _23522_x) {
	{
		
		if ((_1a99b077e_IsBool(&(*_self_)) && _1a99b077e_IsBool(&_23522_x))) {
			_case_begin_1ae8d9d9b:;
			{
				return (_1a99ad3d6_ReadBool(&(*_self_)) && _1a99ad3d6_ReadBool(&_23522_x));
			}
		}
		else {
			_case_begin_1ae8d961a:;
			{
				return false;
			}
		}
		_match_end_1ae8d953d:;
	};
}



inline jule::Bool _1a99b18e5_Or(_1a9956c86_Const* _self_, _1a9956c86_Const _24621_x) {
	{
		
		if ((_1a99b077e_IsBool(&(*_self_)) && _1a99b077e_IsBool(&_24621_x))) {
			_case_begin_1ae8db298:;
			{
				return (_1a99ad3d6_ReadBool(&(*_self_)) || _1a99ad3d6_ReadBool(&_24621_x));
			}
		}
		else {
			_case_begin_1ae8da20e:;
			{
				return false;
			}
		}
		_match_end_1ae8da132:;
	};
}



inline jule::Bool _1a99b1c03_Eq(_1a9956c86_Const* _self_, _1a9956c86_Const _25721_x) {
	{
		
		if (_1a99b0ebb_IsNil(&(*_self_))) {
			_case_begin_1ae8dc71c:;
			{
				return _1a99b0ebb_IsNil(&_25721_x);
			}
		}
		else if (_1a99b077e_IsBool(&(*_self_))) {
			_case_begin_1ae8dbee1:;
			{
				return (_1a99b077e_IsBool(&_25721_x) && (_1a99ad3d6_ReadBool(&(*_self_)) == _1a99ad3d6_ReadBool(&_25721_x)));
			}
		}
		else if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ae8dc057:;
			{
				return (_1a99b09e3_IsStr(&_25721_x) && (_1a99ad64a_ReadStr(&(*_self_)) == _1a99ad64a_ReadStr(&_25721_x)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ae8dc0ce:;
			{
				return (_1a99ace0d_ReadI64(&(*_self_)) == _1a99adb23_AsI64(&_25721_x));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ae8dc156:;
			{
				return (_1a99ad172_ReadU64(&(*_self_)) == _1a99add87_AsU64(&_25721_x));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ae8dc3ed:;
			{
				return (_1a99ad8ae_ReadF64(&(*_self_)) == _1a99ae0eb_AsF64(&_25721_x));
			}
		}
		else {
			_case_begin_1ae8db62d:;
			{
				return false;
			}
		}
		_match_end_1ae8db551:;
	};
}



inline jule::Bool _1a99b2011_Lt(_1a9956c86_Const* _self_, _1a9956c86_Const _28421_x) {
	{
		
		if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ac1d726c:;
			{
				return (_1a99b09e3_IsStr(&_28421_x) && (_1a99ad64a_ReadStr(&(*_self_)) < _1a99ad64a_ReadStr(&_28421_x)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac1d7de9:;
			{
				return (_1a99ace0d_ReadI64(&(*_self_)) < _1a99adb23_AsI64(&_28421_x));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac1da072:;
			{
				return (_1a99ad172_ReadU64(&(*_self_)) < _1a99add87_AsU64(&_28421_x));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac1e073c:;
			{
				return (_1a99ad8ae_ReadF64(&(*_self_)) < _1a99ae0eb_AsF64(&_28421_x));
			}
		}
		else {
			_case_begin_1ac1d3db2:;
			{
				return false;
			}
		}
		_match_end_1ac2163bc:;
	};
}



inline jule::Bool _1a99b231e_LtEq(_1a9956c86_Const* _self_, _1a9956c86_Const _30723_x) {
	{
		
		if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ac5c9a5a:;
			{
				return (_1a99b09e3_IsStr(&_30723_x) && (_1a99ad64a_ReadStr(&(*_self_)) <= _1a99ad64a_ReadStr(&_30723_x)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac6110d0:;
			{
				return (_1a99ace0d_ReadI64(&(*_self_)) <= _1a99adb23_AsI64(&_30723_x));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac615e70:;
			{
				return (_1a99ad172_ReadU64(&(*_self_)) <= _1a99add87_AsU64(&_30723_x));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac630a39:;
			{
				return (_1a99ad8ae_ReadF64(&(*_self_)) <= _1a99ae0eb_AsF64(&_30723_x));
			}
		}
		else {
			_case_begin_1ac5b7185:;
			{
				return false;
			}
		}
		_match_end_1ac6e48ab:;
	};
}



inline jule::Bool _1a99b262c_Gt(_1a9956c86_Const* _self_, _1a9956c86_Const _33021_x) {
	{
		
		if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ac86e2a5:;
			{
				return (_1a99b09e3_IsStr(&_33021_x) && (_1a99ad64a_ReadStr(&(*_self_)) > _1a99ad64a_ReadStr(&_33021_x)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac88a9ca:;
			{
				return (_1a99ace0d_ReadI64(&(*_self_)) > _1a99adb23_AsI64(&_33021_x));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac88abd9:;
			{
				return (_1a99ad172_ReadU64(&(*_self_)) > _1a99add87_AsU64(&_33021_x));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac88cd62:;
			{
				return (_1a99ad8ae_ReadF64(&(*_self_)) > _1a99ae0eb_AsF64(&_33021_x));
			}
		}
		else {
			_case_begin_1ac721b2a:;
			{
				return false;
			}
		}
		_match_end_1ac6e3844:;
	};
}



inline jule::Bool _1a99b293a_GtEq(_1a9956c86_Const* _self_, _1a9956c86_Const _35323_x) {
	{
		
		if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ac59d3be:;
			{
				return (_1a99b09e3_IsStr(&_35323_x) && (_1a99ad64a_ReadStr(&(*_self_)) >= _1a99ad64a_ReadStr(&_35323_x)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac59d18d:;
			{
				return (_1a99ace0d_ReadI64(&(*_self_)) >= _1a99adb23_AsI64(&_35323_x));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac5a8396:;
			{
				return (_1a99ad172_ReadU64(&(*_self_)) >= _1a99add87_AsU64(&_35323_x));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac5bce16:;
			{
				return (_1a99ad8ae_ReadF64(&(*_self_)) >= _1a99ae0eb_AsF64(&_35323_x));
			}
		}
		else {
			_case_begin_1e70027cd:;
			{
				return false;
			}
		}
		_match_end_1e6ee5073:;
	};
}



inline jule::Bool _1a99b2c48_Add(_1a9956c86_Const* _self_, _1a9956c86_Const _37426_x) {
	{
		
		if (_1a99b09e3_IsStr(&(*_self_))) {
			_case_begin_1ac8c5174:;
			{
				if ((!(_1a99b09e3_IsStr(&_37426_x)))) {
					return false;
				};
				_1a99aeae1_SetStr(&(*_self_), (_1a99ad64a_ReadStr(&(*_self_)) + _1a99ad64a_ReadStr(&_37426_x)));
			}
		}
		else if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac8ae56a:;
			{
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ad8ae_ReadF64(&(*_self_)) + _1a99ae0eb_AsF64(&_37426_x))));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac8ae5d1:;
			{
				if (_1a99b0c57_IsF64(&_37426_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) + _1a99ad8ae_ReadF64(&_37426_x))));
				} else {
					_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) + _1a99adb23_AsI64(&_37426_x))));
				};
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac8ce0d4:;
			{
				if (_1a99b0c57_IsF64(&_37426_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) + _1a99ad8ae_ReadF64(&_37426_x))));
				} else {
					_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) + _1a99add87_AsU64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1ac897ba2:;
			{
				return false;
			}
		}
		_match_end_1ac869679:;
	};
	return true;
}



inline jule::Bool _1a99b3056_Sub(_1a9956c86_Const* _self_, _1a9956c86_Const _40326_x) {
	{
		
		if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac2181d2:;
			{
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ad8ae_ReadF64(&(*_self_)) - _1a99ae0eb_AsF64(&_40326_x))));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac218248:;
			{
				if (_1a99b0c57_IsF64(&_40326_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) - _1a99ad8ae_ReadF64(&_40326_x))));
				} else {
					_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) - _1a99adb23_AsI64(&_40326_x))));
				};
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac66d0b5:;
			{
				if (_1a99b0c57_IsF64(&_40326_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) - _1a99ad8ae_ReadF64(&_40326_x))));
				} else {
					_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) - _1a99add87_AsU64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1ac8b9e38:;
			{
				return false;
			}
		}
		_match_end_1ac909065:;
	};
	return true;
}



inline jule::Bool _1a99b3364_Mul(_1a9956c86_Const* _self_, _1a9956c86_Const _42726_x) {
	{
		
		if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac680d42:;
			{
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ad8ae_ReadF64(&(*_self_)) * _1a99ae0eb_AsF64(&_42726_x))));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac680da8:;
			{
				if (_1a99b0c57_IsF64(&_42726_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) * _1a99ad8ae_ReadF64(&_42726_x))));
				} else {
					_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) * _1a99adb23_AsI64(&_42726_x))));
				};
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac680e1e:;
			{
				if (_1a99b0c57_IsF64(&_42726_x)) {
					_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>((_1a99ae0eb_AsF64(&(*_self_)) * _1a99ad8ae_ReadF64(&_42726_x))));
				} else {
					_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) * _1a99add87_AsU64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1ac86b280:;
			{
				return false;
			}
		}
		_match_end_1ac66809e:;
	};
	return true;
}



inline jule::Bool _1a99b3672_Div(_1a9956c86_Const* _self_, _1a9956c86_Const _45526_x) {
	{
		
		if (_1a99b0c57_IsF64(&(*_self_))) {
			_case_begin_1ac66dcdb:;
			{
				jule::F64 _45817_l = _1a99ae0eb_AsF64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a99ad8ae_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac66dd52:;
			{
				jule::F64 _46417_l = _1a99ae0eb_AsF64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a99ae0eb_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac66e8e1:;
			{
				jule::F64 _47017_l = _1a99ae0eb_AsF64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1a99aed66_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1a99ae0eb_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1ac5db8b3:;
			{
				return false;
			}
		}
		_match_end_1ac88c5ae:;
	};
	return true;
}



inline jule::Bool _1a99b3980_Mod(_1a9956c86_Const* _self_, _1a9956c86_Const _48426_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac86816c:;
			{
				jule::I64 _48717_l = _1a99adb23_AsI64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1a99ace0d_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac657005:;
			{
				jule::U64 _49317_l = _1a99add87_AsU64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1a99ad172_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1ac868d2c:;
			{
				return false;
			}
		}
		_match_end_1ac868c72:;
	};
	return true;
}



inline jule::Bool _1a99b3c8d_BitwiseAnd(_1a9956c86_Const* _self_, _1a9956c86_Const _50633_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac94dc25:;
			{
				_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) & _1a99adb23_AsI64(&_50633_x))));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac94dc8b:;
			{
				_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) & _1a99add87_AsU64(&_50633_x))));
			}
		}
		else {
			_case_begin_1ac88c16e:;
			{
				return false;
			}
		}
		_match_end_1ac88b3c1:;
	};
	return true;
}



inline jule::Bool _1a99b409b_BitwiseOr(_1a9956c86_Const* _self_, _1a9956c86_Const _52032_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac950342:;
			{
				_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) | _1a99adb23_AsI64(&_52032_x))));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac9503a8:;
			{
				_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) | _1a99add87_AsU64(&_52032_x))));
			}
		}
		else {
			_case_begin_1ac9502cb:;
			{
				return false;
			}
		}
		_match_end_1ac950221:;
	};
	return true;
}



inline jule::Bool _1a99b43a9_Xor(_1a9956c86_Const* _self_, _1a9956c86_Const _53426_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac951b07:;
			{
				_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_1a99ace0d_ReadI64(&(*_self_)) ^ _1a99adb23_AsI64(&_53426_x))));
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac951b6d:;
			{
				_1a99ae5e6_SetU64(&(*_self_), static_cast<jule::U64>((_1a99ad172_ReadU64(&(*_self_)) ^ _1a99add87_AsU64(&_53426_x))));
			}
		}
		else {
			_case_begin_1ac951a91:;
			{
				return false;
			}
		}
		_match_end_1ac9519d6:;
	};
	return true;
}



inline jule::Bool _1a99b46b7_Lshift(_1a9956c86_Const* _self_, _1a9956c86_Const _54829_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac954214:;
			{
				jule::I64 _55117_l = _1a99adb23_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a99add87_AsU64(&_54829_x);;
					_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1a99b4d38_lshiftUnsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac9539d8:;
			{
				_1a99b4d38_lshiftUnsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1ac953972:;
			{
				return false;
			}
		}
		_match_end_1ac953895:;
	};
	return true;
}



inline jule::Bool _1a99b49c5_Rshift(_1a9956c86_Const* _self_, _1a9956c86_Const _56829_x) {
	{
		
		if (_1a99b02a6_IsI64(&(*_self_))) {
			_case_begin_1ac956c2d:;
			{
				jule::I64 _57117_l = _1a99adb23_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a99add87_AsU64(&_56829_x);;
					_1a99ae371_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1a99b5135_rshiftUnsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1a99b051a_IsU64(&(*_self_))) {
			_case_begin_1ac956502:;
			{
				_1a99b5135_rshiftUnsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1ac95648b:;
			{
				return false;
			}
		}
		_match_end_1ac9563ae:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9956c86_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac106026_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac106510_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac116e38_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac10e815_set(_1ac117950_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1aeedae3b:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1aeedaea2:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1aeedac93:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1aeedd23a:;
					{
						goto _iter_next_1aeedc976;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1aeedd2b2:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1aeedc976;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1aeedd339:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1aeedc976;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1aeedc976;
					}
				}
				_match_end_1aeedd108:;
			};
			goto _iter_end_1aeedc976;
		}
	_iter_next_1aeedc976:;
	}
	_iter_end_1aeedc976:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1ac109e1a_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1aeee5c7b;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1aeee5c7b:;
		}
		_iter_end_1aeee5c7b:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1ac10eb23_floatBits(_1ac117950_decimal* _self_, _1ac106026_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1ac10e4b3_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1ac10e4b3_powtab[(*_self_)._field_dp];
			};
			_1ac11809e_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1aeeec788:;
	}
	_iter_end_1aeeec788:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1ac10e4b3_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1ac10e4b3_powtab[(-((*_self_)._field_dp))];
			};
			_1ac11809e_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1aeeece92:;
	}
	_iter_end_1aeeece92:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1ac11809e_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1ac11809e_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1ac118a83_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1ac117d29_assign(_1ac117950_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1b000b0d2:;
	}
	_iter_end_1b000b0d2:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1b000c5bc:;
	}
	_iter_end_1b000c5bc:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1ac119138_trim((*_self_));
}



inline void _1ac11809e_shift(_1ac117950_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1b000dc3e:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1b000dcb6:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1ac119ac8_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1b000e3e3:;
				}
				_iter_end_1b000e3e3:;;
				_1ac119ac8_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1b000dd3d:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1ac1193e1_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1b00104c1:;
				}
				_iter_end_1b00104c1:;;
				_1ac1193e1_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1b000db0c:;
	};
}



inline void _1ac118324_roundDown(_1ac117950_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1ac119138_trim((*_self_));
}



inline void _1ac118599_roundUp(_1ac117950_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1b001376b:;
	}
	_iter_end_1b001376b:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1ac11881e_round(_1ac117950_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1ac119e19_shouldRoundUp((*_self_),_41124_nd)) {
		_1ac118599_roundUp(&(*_self_), _41124_nd);
	} else {
		_1ac118324_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1ac118a83_roundedInteger(_1ac117950_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1b00165a4:;
	}
	_iter_end_1b00165a4:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1b0019145:;
	}
	_iter_end_1b0019145:;;
	if (_1ac119e19_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac117950_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b3944154_FieldIns> _1b391cced_instance(jule::Ptr<_1b392dea7_Field> _self_) {
	return jule::new_ptr<_1b3944154_FieldIns>(_1b3944154_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1b392dea7_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b393d417_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b3967d9d_StructIns> _1b3923de2_instance(jule::Ptr<_1b393b9dc_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1b3967d9d_StructIns> _9917_ins = jule::new_ptr<_1b3967d9d_StructIns>(_1b3967d9d_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1b3944154_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Refers=static__1a99c3572_new(), });;
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b03c3e6c:;
		if (it != expr.end()) {
			jule::Ptr<_1b392dea7_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1b391cced_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_Mutable)) && (_10521_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1a9a06088_Mutable(_10521_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b03c3e6c:;
			++it;
			goto _iter_begin_1b03c3e6c;
		}
		_iter_end_1b03c3e6c:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1a99bc714_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1b03c71c3:;
			if (it != expr.end()) {
				jule::Ptr<_1a99bc714_Fn> _11625_f = *it;
				{
					jule::Ptr<_1a99bc714_Fn> _11725_fins = jule::new_ptr<_1a99bc714_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_11725_fins);;
				}
				_iter_next_1b03c71c3:;
				++it;
				goto _iter_begin_1b03c71c3;
			}
			_iter_end_1b03c71c3:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1b3967d9d_StructIns> _1b392815a_appendInstance(_1b393b9dc_Struct* _self_, jule::Ptr<_1b3967d9d_StructIns>& _12838_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b03c966a:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _13421_ains = *it;
			{
				if (_1b3941b8a_Same(_13421_ains.ptr(), _12838_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1b03c966a:;
			++it;
			goto _iter_begin_1b03c966a;
		}
		_iter_end_1b03c966a:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}



inline jule::Ptr<_1a99bc714_Fn> _1b392ae0a_FindMethod(_1b393b9dc_Struct* _self_, jule::Str _14633_ident, jule::Bool _14645_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b03cabbb:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_Statically == _14645_statically) && (_14721_f.get()._field_Ident == _14633_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1b03cabbb:;
			++it;
			goto _iter_begin_1b03cabbb;
		}
		_iter_end_1b03cabbb:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac17c960_Var> _1b392be1c_FindStatic(_1b393b9dc_Struct* _self_, jule::Str _15733_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1b03cbded:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_Ident == _15733_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1b03cbded:;
			++it;
			goto _iter_begin_1b03cbded;
		}
		_iter_end_1b03cbded:;
	};
	return nullptr;
}



inline jule::Ptr<_1b392dea7_Field> _1b392b35b_FindField(_1b393b9dc_Struct* _self_, jule::Str _16832_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b03ccd88:;
		if (it != expr.end()) {
			jule::Ptr<_1b392dea7_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_Ident == _16832_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1b03ccd88:;
			++it;
			goto _iter_begin_1b03ccd88;
		}
		_iter_end_1b03ccd88:;
	};
	return nullptr;
}



inline jule::Bool _1b392d638_IsImplements(_1b393b9dc_Struct* _self_, jule::Ptr<_1b2551bec_Trait> _17831_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1b03cd361:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> &_17916_it = *it;
			{
				if ((_17831_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1b03cd361:;
			++it;
			goto _iter_begin_1b03cd361;
		}
		_iter_end_1b03cd361:;
	};
	return false;
}



inline jule::Bool _1b392ca44_IsDerives(_1b393b9dc_Struct* _self_, jule::Str _18828_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1b03ce373:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_Args.len() == 1LL) && (_18916_d.get()._field_Args[0LL].get()._field_Kind == _18828_ident))) {
						return true;
					};
				};
			}
			_iter_next_1b03ce373:;
			++it;
			goto _iter_begin_1b03ce373;
		}
		_iter_end_1b03ce373:;
	};
	return false;
}



inline jule::Bool _1b39317e5_IsUses(_1b393b9dc_Struct* _self_, jule::Ptr<_1b393b9dc_Struct> _20025_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1b03d1b28:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> &_20116_u = *it;
			{
				while ((_20025_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1b03d23cb:;
				}
				_iter_end_1b03d23cb:;;
			}
			_iter_next_1b03d1b28:;
			++it;
			goto _iter_begin_1b03d1b28;
		}
		_iter_end_1b03d1b28:;
	};
	return false;
}



inline jule::Bool _1b3931eaa_HasRefAccessible(_1b393b9dc_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b03d25c9:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_Params.len() > 0LL) && _1a99bb768_IsRef(_21116_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1b03d25c9:;
			++it;
			goto _iter_begin_1b03d25c9;
		}
		_iter_end_1b03d25c9:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1b393b9dc_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3944154_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b529a_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5487_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5674_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5861_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5a4d_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5c3a_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b5e27_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b6114_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b6301_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b64dd_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b66ca_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b68b7_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b6aa4_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b6c91_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b6e7d_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b739b_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b7588_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b7775_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b7962_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b7b4e_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b7d3b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b8028_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b8215_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b8402_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b85de_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b87cb_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b89b8_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b8ba5_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b8d92_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b907e_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b926b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b716a_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b98cb_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b9ab8_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b9ca5_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99b9e92_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99ba17e_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99ba712_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a99be4e6_ParamIns> _1a99bb290_instance(jule::Ptr<_1a99badc7_Param> _self_) {
	return jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1a99bb504_IsSelf(_1a99badc7_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1a99bb768_IsRef(_1a99badc7_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1a99badc7_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a99bcb76_IsVoid(_1a99bc714_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1a99bcdda_IsMethod(_1a99bc714_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1a99bd14e_IsEntryPoint(_1a99bc714_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1a99bd3b3_IsInit(_1a99bc714_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1a99bd627_IsAnon(_1a99bc714_Fn* _self_) {
	return _1e6a6033b_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1a99bd88b_AnyVar(_1a99bc714_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a99bdb00_instanceForce(jule::Ptr<_1a99bc714_Fn> _self_) {
	jule::Ptr<_1a99c03b5_FnIns> _10017_ins = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ac1346e7_Scope>(), ._field_Refers=static__1a99c3572_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b03e5e5b:;
		if (it != expr.end()) {
			jule::Ptr<_1a99badc7_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1a99bb290_instance(_10721_p));;
			}
			_iter_next_1b03e5e5b:;
			++it;
			goto _iter_begin_1b03e5e5b;
		}
		_iter_end_1b03e5e5b:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a99bdd64_instance(jule::Ptr<_1a99bc714_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1a99bdb00_instanceForce(_self_);
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a99be13e_appendInstance(_1a99bc714_Fn* _self_, jule::Ptr<_1a99c03b5_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b03ea009:;
		if (it != expr.end()) {
			jule::Ptr<_1a99c03b5_FnIns> _14421_ains = *it;
			{
				if (_1a99c1cbd_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1b03ea009:;
			++it;
			goto _iter_begin_1b03ea009;
		}
		_iter_end_1b03ea009:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99bc714_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a99be8c0_Str(_1a99be4e6_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1a99bb504_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1a99bb768_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1a9a05087_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99be4e6_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a99c06e5_Str(_1a99c03b5_FnIns* _self_) {
	;
	return _1a99c20cb_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1a99c0a03_Equals(jule::Ptr<_1a99c03b5_FnIns> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _21726_other) {
	jule::Ptr<_1a99c03b5_FnIns> _21813_f = _1a9a07e8b_Fn(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1a99c0e65_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1a99c0e65_EqualsFn(jule::Ptr<_1a99c03b5_FnIns> _self_, jule::Ptr<_1a99c03b5_FnIns>& _22829_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22829_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22829_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1a99bcb76_IsVoid(_self_.get()._field_Decl.ptr()) != _1a99bcb76_IsVoid(_22829_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1a99be4e6_ParamIns>,jule::Ptr<_1a99be4e6_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1a99be4e6_ParamIns>,jule::Ptr<_1a99be4e6_ParamIns>)>([=](jule::Ptr<_1a99be4e6_ParamIns> _23830_p1, jule::Ptr<_1a99be4e6_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1a99bb504_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1a99bb504_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1a99bb768_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1a99bb768_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1a9a05395_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22829_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22829_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1b04088a8:;
	}
	_iter_end_1b04088a8:;;
	if ((!(_1a99bcb76_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1a9a05395_Equals(_self_.get()._field_Result, _22829_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1a99c1273_equalsTrait(jule::Ptr<_1a99c03b5_FnIns> _self_, jule::Ptr<_1a99c03b5_FnIns>& _28728_other) {
	if ((!(_1a99c0e65_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _1a99c14d7_Types(_1a99c03b5_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1b040bee9:;
			{
				return nullptr;
			}
		}
		else if ((_1a9a0893c_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1b040c060:;
			{
				return jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1b040be83:;
			{
				return _1a9a0893c_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1b040bda6:;
	};
}



inline jule::Bool _1a99c174b_IsBuiltin(_1a99c03b5_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a99c19b0_IsAnon(_1a99c03b5_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1a99bd627_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1a99c1cbd_Same(_1a99c03b5_FnIns* _self_, jule::Ptr<_1a99c03b5_FnIns> _32423_f) {
	if ((((*_self_)._field_Decl != _32423_f.get()._field_Decl) || (_32423_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b04108c1:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1a9a0345e_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1a9a05395_Equals(_32916_g.get()._field_Kind, _32423_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1b04108c1:;
			++it;
			_32913_i++;
			goto _iter_begin_1b04108c1;
		}
		_iter_end_1b04108c1:;
	};
	return true;
}



inline jule::Str _1a99c20cb_GetKindStr(_1a99c03b5_FnIns* _self_, jule::Bool _34029_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34029_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1b041485e:;
			if (it != expr.end()) {
				jule::Ptr<_1a99be4e6_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1a99be8c0_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1b041485e:;
				++it;
				goto _iter_begin_1b041485e;
			}
			_iter_end_1b041485e:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1a99bcb76_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1a9a05087_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99c03b5_FnIns _Src) {
	_Stream << "FnIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Anon:" << _Src._field_Anon << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a99c3286_ReferenceStack> static__1a99c3572_new(void) {
	return jule::new_ptr<_1a99c3286_ReferenceStack>(_1a99c3286_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1a99c3907_Len(_1a99c3286_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1a99c3c15_At(_1a99c3286_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1a99c3e8a_Push(_1a99c3286_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1b0915c61_Exist(_1a99c3286_ReferenceStack* _self_, jule::Ptr<_1a99c03b5_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b091704d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1b091704d:;
			++it;
			goto _iter_begin_1b091704d;
		}
		_iter_end_1b091704d:;
	};
	return false;
}

inline jule::Bool _1b092a6e3_Exist(_1a99c3286_ReferenceStack* _self_, jule::Ptr<_1ac17c960_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b092b98b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1b092b98b:;
			++it;
			goto _iter_begin_1b092b98b;
		}
		_iter_end_1b092b98b:;
	};
	return false;
}

inline jule::Bool _1aec30213_Exist(_1a99c3286_ReferenceStack* _self_, jule::Ptr<_1b3967d9d_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1aec31544:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1aec31544:;
			++it;
			goto _iter_begin_1aec31544;
		}
		_iter_end_1aec31544:;
	};
	return false;
}

inline jule::Bool _1b0b68d71_Exist(_1a99c3286_ReferenceStack* _self_, jule::Ptr<_1b2551bec_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1b0b6a119:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1b0b6a119:;
			++it;
			goto _iter_begin_1b0b6a119;
		}
		_iter_end_1b0b6a119:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99c3286_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99c4650_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a99c8ae9_symbolBuilder> _1a99c90a0_getRoot(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_) {
	jule::Ptr<_1a99c8ae9_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1b011245d:;
	}
	_iter_end_1b011245d:;;
	return _31617_root;
}



inline void _1a99c9468_pushErr(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1e6a5c800_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac15980a_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1a99c9831_pushErrText(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1e6a5c800_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac15980a_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1a99c9b50_pushSuggestion(_1a99c8ae9_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1ac15ac90_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1a99ca007_checkCppUseDeclPath(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1b3963d66_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _1e5738ee4_Ext(_33655_path);;
	if (((!(_1e6729511_IsValidHeaderExt(_33713_ext))) && (!(_1e6729764_IsValidCppExt(_33713_ext))))) {
		_1a99c9468_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_1e56328e3_Status> _34413_info = ({
		auto except = static__1e488bac6_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1a99c9468_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_1e56328e3_Status>();});
	});;
	if (_1e4884b02_IsDir(_34413_info.ptr())) {
		_1a99c9468_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca2d2_buildCppHeaderImport(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1b3963d66_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1e67293ce_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e6a63581_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1a99ca007_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1e57169d8_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1a99c9468_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1ac1530c8_ImportInfo>(_1ac1530c8_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca5e0_buildStdImport(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1b3963d66_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1e66b506d_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e676eaa6_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1e57169d8_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1a99c9468_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1e56328e3_Status> _39513_info = ({
		auto except = static__1e488bac6_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1a99c9468_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1e56328e3_Status>();});
	});;
	if ((!(_1e4884b02_IsDir(_39513_info.ptr())))) {
		_1a99c9468_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1e66694a6_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1ac1530c8_ImportInfo>(_1ac1530c8_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1ac156032_Package>(_1ac156032_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99ca8ed_buildIdentImport(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1b3963d66_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e9a9_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1a99c9468_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a99c9b50_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1e66b506d_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_1e57374cb_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1e57169d8_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1a99c9468_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1e56328e3_Status> _44213_info = ({
		auto except = static__1e488bac6_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1a99c9468_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1e56328e3_Status>();});
	});;
	if ((!(_1e4884b02_IsDir(_44213_info.ptr())))) {
		_1a99c9468_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1e66694a6_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1ac1530c8_ImportInfo>(_1ac1530c8_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1ac156032_Package>(_1ac156032_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1a99cac0b_buildImport(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1b3963d66_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1b042e868:;
			{
				return _1a99ca2d2_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1b042eacc:;
			{
				return _1a99ca5e0_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1b042e0e8:;
			{
				return _1a99ca8ed_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1b042e01b:;
	};
}



inline jule::Bool _1a99cb019_checkDuplicateUseDecl(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1ac1530c8_ImportInfo> _48313_lpkg = _1ac1c0783_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>([=](jule::Ptr<_1ac1530c8_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1a99c9468_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1a99c9b50_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1a99cb338_implImportSelections(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _49544_imp, jule::Ptr<_1b3963d66_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1b04335d6:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1b0434164:;
					if (it != expr.end()) {
						jule::Ptr<_1e6a5c800_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1b0434164;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1a99c9468_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1a99c9b50_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1b0434164;
							};
						}
						_iter_next_1b0434164:;
						++it;
						goto _iter_begin_1b0434164;
					}
					_iter_end_1b0434164:;
				};
			}
			_iter_next_1b04335d6:;
			++it;
			goto _iter_begin_1b04335d6;
		}
		_iter_end_1b04335d6:;
	};
}



inline jule::Str _1a99cb646_getAsLinkPath(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1e6671d4e_HasPrefix(_51037_path,_1e676eaa6_PathStdlib)) {
		(_51037_path).mut_slice(_1e676eaa6_PathStdlib.len());;
		return (jule::Str("std", 3) + _1e66b506d_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1e57169d8_Abs(_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e9a9_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1e66b506d_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1b254e090_pushCycleError(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1a99c8ae9_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1e6736375_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1a99cb646_getAsLinkPath(_self_, _1e6a63581_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1a99cb646_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_1e6646340_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1b254e458_pushCrossCycleError(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1a99c8ae9_symbolBuilder>& _53340_target, jule::Ptr<_1ac1530c8_ImportInfo>& _53365_imp, jule::Ptr<_1e6a5c800_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1b254e090_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1a99c8ae9_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a99c8ae9_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1b254e090_pushCycleError(_self_, _53917_old.get()._field_owner,_1e6a63581_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1b254e090_pushCycleError(_self_, _53340_target,_1e6a63581_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1b043abb5;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1b043abb5:;
	}
	_iter_end_1b043abb5:;;
	_1a99c9468_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1b254e810_checkImportCycles(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1ac1530c8_ImportInfo> _55637_imp, jule::Ptr<_1b3963d66_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1e6a63581_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1a99c9468_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1a99cb646_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1e6a63581_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1b254e458_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1a99c8ae9_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1e6a63581_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1b254e458_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1b254ebea_checkPackageAccessibility(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1b3963d66_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1ac150845_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1ac14e9a9_GetModPath((*_self_)._field_importer) != _59262_mod) && _1e66b3cc5_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1a99c9468_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b25500b3_importPackage(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _59838_imp, jule::Ptr<_1b3963d66_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1ac1530c8_ImportInfo> _60317_port = _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac1500c5_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e9a9_GetModPath(_self_.get()._field_importer);;
		_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e767_SetModPath(_self_.get()._field_importer, _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14ecb7_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1b254ebea_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e767_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1b254e810_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e9a9_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e767_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac14e767_SetModPath(_self_.get()._field_importer, _1e676eaa6_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b3916a1c_Ast>> _62222_asts;;
		jule::Slice<_1e6735e35_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac15047c_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1b254ebea_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1b044b577:;
			if (it != expr.end()) {
				jule::Ptr<_1b3916a1c_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1ac1bee58_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1a9a2125c_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1a99c9831_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1b044b577:;
				++it;
				goto _iter_begin_1b044b577;
			}
			_iter_end_1b044b577:;
		};
	};
	_1a99cb338_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1b25503c1_importUseDecl(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_, jule::Ptr<_1b3963d66_UseDecl>& _65038_decl) {
	jule::Ptr<_1ac1530c8_ImportInfo> _65117_imp = _1a99cac0b_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1a99cb019_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1b25500b3_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1ac150845_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac150702_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1b255059c_importUseDecls(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1b045203e:;
		if (it != expr.end()) {
			jule::Ptr<_1b3963d66_UseDecl> _67221_decl = *it;
			{
				_1b25503c1_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b045203e;
				};
			}
			_iter_next_1b045203e:;
			++it;
			goto _iter_begin_1b045203e;
		}
		_iter_end_1b045203e:;
	};
}



inline void _1b2550822_appendNode(_1a99c8ae9_symbolBuilder* _self_, _1b3917732_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1b39675d9_Impl>>()) {
			_case_begin_1b0453abd:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1a99c8599_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1b39675d9_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396297a_TypeAliasDecl>>()) {
			_case_begin_1b0452803:;
			{
				jule::Ptr<_1a9a03e98_TypeAlias> _68621_ta = _1a99c5035_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1b396297a_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39668c4_StructDecl>>()) {
			_case_begin_1b04536c2:;
			{
				jule::Ptr<_1b393b9dc_Struct> _68921_srct = _1a99c5893_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1b39668c4_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b0453738:;
			{
				jule::Ptr<_1a99bc714_Fn> _69221_f = _1a99c64ed_buildFn(_68134_node._field_Data.operator jule::Ptr<_1b395d13a_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3966ece_TraitDecl>>()) {
			_case_begin_1b0454030:;
			{
				jule::Ptr<_1b2551bec_Trait> _69521_t = _1a99c6a3c_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1b3966ece_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395e119_VarDecl>>()) {
			_case_begin_1b0454096:;
			{
				jule::Ptr<_1ac17c960_Var> _69821_v = _1a99c805a_buildVar(_68134_node._field_Data.operator jule::Ptr<_1b395e119_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3964d12_EnumDecl>>()) {
			_case_begin_1b045410c:;
			{
				jule::Ptr<_1b2553d42_Enum> _70121_e = _1a99c7323_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1b3964d12_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3965a16_TypeEnumDecl>>()) {
			_case_begin_1b0454173:;
			{
				jule::Ptr<_1b255543c_TypeEnum> _70421_e = _1a99c7cb3_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1b3965a16_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1b045353a:;
			{
				_1a99c9468_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0452935:;
	};
}



inline void _1b25509ed_appendNodes(_1a99c8ae9_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1b045c962:;
		if (it != expr.end()) {
			_1b3917732_Node _71221_node = *it;
			{
				_1b2550822_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1b045c962:;
			++it;
			goto _iter_begin_1b045c962;
		}
		_iter_end_1b045c962:;
	};
}



inline void _1b2550c73_pushDirectivePass(_1a99c8ae9_symbolBuilder* _self_, jule::Ptr<_1b3917b2d_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1a99c9468_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1e6a5c800_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1a99c9468_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a5c800_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a99c9468_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1a99c9468_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1a99c4650_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1b2550e4e_appendTopDirectives(_1a99c8ae9_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1b04608aa:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1b0463869:;
						{
							_1b2550c73_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1b04637ae:;
				};
			}
			_iter_next_1b04608aa:;
			++it;
			goto _iter_begin_1b04608aa;
		}
		_iter_end_1b04608aa:;
	};
}



inline void _1b255112a_build(jule::Ptr<_1a99c8ae9_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1ac1bee58_SymbolTable>(_1ac1bee58_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1b2550e4e_appendTopDirectives(_self_.ptr());
	_1b255059c_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1b25509ed_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a99c8ae9_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b25520e8_Str(_1b2551bec_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1b2552406_Equals(jule::Ptr<_1b2551bec_Trait> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _2526_other) {
	jule::Ptr<_1b2551bec_Trait> _2613_trt = _1a9a08464_Trait(_2526_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1b2552769_IsBuiltin(_1b2551bec_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1a99bc714_Fn> _1b2552a77_FindMethod(_1b2551bec_Trait* _self_, jule::Str _3933_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b046772a:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3933_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1b046772a:;
			++it;
			goto _iter_begin_1b046772a;
		}
		_iter_end_1b046772a:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2551bec_Trait _Src) {
	_Stream << "Trait{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Implemented:" << _Src._field_Implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2553737_AutoExpr(_1b255334c_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b255334c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b25541a5_Str(_1b2553d42_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1b25544b3_Equals(jule::Ptr<_1b2553d42_Enum> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _3826_other) {
	jule::Ptr<_1b2553d42_Enum> _3913_enm = _1a9a074da_Enum(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1b255334c_EnumItem> _1b2554903_FindItem(_1b2553d42_Enum* _self_, jule::Str _4731_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1b0469ebe:;
		if (it != expr.end()) {
			jule::Ptr<_1b255334c_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4731_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1b0469ebe:;
			++it;
			goto _iter_begin_1b0469ebe;
		}
		_iter_end_1b0469ebe:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2553d42_Enum _Src) {
	_Stream << "Enum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b2554d76_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b255576c_Str(_1b255543c_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1b2555a7a_Equals(jule::Ptr<_1b255543c_TypeEnum> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _8026_other) {
	jule::Ptr<_1b255543c_TypeEnum> _8113_tenm = _1a9a0774e_TypeEnum(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1b2554d76_TypeEnumItem> _1b2555e76_FindItem(_1b255543c_TypeEnum* _self_, jule::Str _8931_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1b046c202:;
		if (it != expr.end()) {
			jule::Ptr<_1b2554d76_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8931_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1b046c202:;
			++it;
			goto _iter_begin_1b046c202;
		}
		_iter_end_1b046c202:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b255543c_TypeEnum _Src) {
	_Stream << "TypeEnum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)> _1ac12ca53_readyFn(jule::Ptr<_1ac12c624_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)>([=](jule::Ptr<_1ac15b224_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1b0479e8a:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1b395890a_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1a9a0345e_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1b0479e8a;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1b047c4dc:;
						if (it != expr.end()) {
							jule::Ptr<_1b394b326_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1a9a04b8b_TypeKind> _7229_kind = _1ac1621a3_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1a9a20701_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1b394b8dc_IdentTypeDecl>>()) {
											_case_begin_1b047e379:;
											{
												jule::Ptr<_1b394b8dc_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1ac12dbdb_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1b047e324:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1b047c4dc:;
							++it;
							goto _iter_begin_1b047c4dc;
						}
						_iter_end_1b047c4dc:;
					};
				}
				_iter_next_1b0479e8a:;
				++it;
				_6418_i++;
				goto _iter_begin_1b0479e8a;
			}
			_iter_end_1b0479e8a:;
		};
		return true;
	});
}



inline jule::Bool _1ac12ccb7_readyFi(jule::Ptr<_1ac12c624_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1ac1665a3_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1ac12ca53_readyFn(_self_)));
}



inline jule::Bool _1ac12d02b_readySi(jule::Ptr<_1ac12c624_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1ac12ca53_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1ac12d290_ready(jule::Ptr<_1ac12c624_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1ac12ccb7_readyFi(_self_);
	};
	return _1ac12d02b_readySi(_self_);
}



inline jule::Bool _1ac12d504_check(jule::Ptr<_1ac12c624_constraintChecker> _self_) {
	if ((!(_1ac12d290_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b0486370:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1a9a0345e_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1b0486370;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1b0487041:;
					if (it != expr.end()) {
						jule::Ptr<_1a9a04b8b_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1a9a09663_Prim> _12425_prim = _1a9a06c9d_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1a9a0a257_IsConstraint(_12425_prim.ptr()))) {
								if (_1ac12d900_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1b0486370;
								};
								goto _iter_next_1b0487041;
							};
							if (_1a9a05395_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1b0486370;
							};
						}
						_iter_next_1b0487041:;
						++it;
						goto _iter_begin_1b0487041;
					}
					_iter_end_1b0487041:;
				};
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1b0486370:;
			++it;
			_11914_i++;
			goto _iter_begin_1b0486370;
		}
		_iter_end_1b0486370:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac12c624_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac12ea88_IsTraitImpl(_1ac12e68c_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1ac12ecec_IsStructImpl(_1ac12e68c_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac12e68c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1346e7_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac134ae3_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac134dce_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac135253_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac13553e_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac135d58_IsWhileNext(_1ac1359b2_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1359b2_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac136397_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac136793_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac136b4a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac136e36_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac137222_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1375c9_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac137a4c_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac137e04_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac13894e_IsGenericTypeMatch(_1ac138443_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac138443_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac139257_isDefault(_1ac138e8d_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac138e8d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac139543_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1399b6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac13a0c1_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac13a544_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac13b7a9_FindPackage(_1ac13b358_scopeChecker* _self_, jule::Str _45634_ident) {
	return _1ac15b741_FindPackage((*_self_)._field_s.ptr(), _45634_ident);
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac13bab7_SelectPackage(_1ac13b358_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _46636_selector) {
	return _1ac15ba4e_SelectPackage((*_self_)._field_s.ptr(), _46636_selector);
}



inline jule::Ptr<_1ac17c960_Var> _1ac13be6e_FindVar(_1ac13b358_scopeChecker* _self_, jule::Str _47730_ident, jule::Bool _47742_cpp_linked) {
	;
	jule::Ptr<_1ac17c960_Var> _48017_v = _1ac1c26ec_findVar((*_self_)._field_table.ptr(), _47730_ident,_47742_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1ac13b358_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1ac1c26ec_findVar(_48517_parent.get()._field_table.ptr(), _47730_ident,_47742_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1b04b3248:;
	}
	_iter_end_1b04b3248:;;
	return _1ac15be06_FindVar((*_self_)._field_s.ptr(), _47730_ident,_47742_cpp_linked);
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac13c326_FindTypeAlias(_1ac13b358_scopeChecker* _self_, jule::Str _50436_ident, jule::Bool _50448_cppLinked) {
	;
	jule::Ptr<_1a9a03e98_TypeAlias> _50717_ta = _1ac1c2b4d_findTypeAlias((*_self_)._field_table.ptr(), _50436_ident,_50448_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1ac13b358_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1ac1c2b4d_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50436_ident,_50448_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1b04b60d6:;
	}
	_iter_end_1b04b60d6:;;
	return _1ac15c2ad_FindTypeAlias((*_self_)._field_s.ptr(), _50436_ident,_50448_cppLinked);
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac13c6cd_FindStruct(_1ac13b358_scopeChecker* _self_, jule::Str _52933_ident, jule::Bool _52945_cppLinked) {
	return _1ac15c665_FindStruct((*_self_)._field_s.ptr(), _52933_ident,_52945_cppLinked);
}



inline jule::Ptr<_1a99bc714_Fn> _1ac13ca85_FindFn(_1ac13b358_scopeChecker* _self_, jule::Str _53829_ident, jule::Bool _53841_cppLinked) {
	return _1ac15ca1c_FindFn((*_self_)._field_s.ptr(), _53829_ident,_53841_cppLinked);
}



inline jule::Ptr<_1b2551bec_Trait> _1ac13cd93_FindTrait(_1ac13b358_scopeChecker* _self_, jule::Str _54732_ident) {
	return _1ac15cd2a_FindTrait((*_self_)._field_s.ptr(), _54732_ident);
}



inline jule::Ptr<_1b2553d42_Enum> _1ac13d1a1_FindEnum(_1ac13b358_scopeChecker* _self_, jule::Str _55631_ident) {
	return _1ac15d138_FindEnum((*_self_)._field_s.ptr(), _55631_ident);
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac13d4ae_FindTypeEnum(_1ac13b358_scopeChecker* _self_, jule::Str _56535_ident) {
	return _1ac15d446_FindTypeEnum((*_self_)._field_s.ptr(), _56535_ident);
}



inline jule::Bool _1ac13d7de_isUnsafe(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	jule::Ptr<_1ac13b358_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1ac13da53_isRoot(_1ac13b358_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1ac13dc2e_stop(_1ac13b358_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1ac13de93_stopped(_1ac13b358_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1ac13e207_isDeferred(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	jule::Ptr<_1ac13b358_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1ac13b358_scopeChecker> _1ac13e46b_getRoot(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	jule::Ptr<_1ac13b358_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1b04c54be:;
	}
	_iter_end_1b04c54be:;;
	return _62417_root;
}



inline jule::Ptr<_1ac13b358_scopeChecker> _1ac13e6d0_getHardRoot(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	jule::Ptr<_1ac13b358_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1b04c6789:;
	}
	_iter_end_1b04c6789:;;
	return _63417_root;
}



inline jule::Ptr<_1ac136e36_Label> _1ac13e9dd_findLabel(_1ac13b358_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b04c7548:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ac136e36_Label>>()) {
						_case_begin_1b04c7d51:;
						{
							jule::Ptr<_1ac136e36_Label> _64825_label = _64521_st.operator jule::Ptr<_1ac136e36_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1b04c7c52:;
				};
			}
			_iter_next_1b04c7548:;
			++it;
			goto _iter_begin_1b04c7548;
		}
		_iter_end_1b04c7548:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac13eceb_findLabelScope(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1ac13a0c1_scopeLabel> _66117_label = _1ac140109_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac140109_findLabelAll(_1ac13b358_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1b04ca21b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac13a0c1_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1b04ca21b:;
			++it;
			goto _iter_begin_1b04ca21b;
		}
		_iter_end_1b04ca21b:;
	};
	return nullptr;
}



inline jule::Bool _1ac1404b1_isDuplicatedIdent(_1ac13b358_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1ac17c960_Var> _68513_v = _1ac13be6e_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1ac15d798_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1a9a03e98_TypeAlias> _69313_ta = _1ac13c326_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1ac15d798_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1ac140736_checkVarDecl(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395e119_VarDecl> _70436_decl) {
	jule::Ptr<_1ac17c960_Var> _70517_v = _1a99c805a_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1ac1404b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ac13dc2e_stop(_self_.ptr());
		return;;
	};
	_1ac171d83_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1a9a20701_Lookup>(_self_, 0));
	if (((!(_1ac17d07b_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1ac1754c4_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1a9a20701_Lookup>(_self_, 0));
}



inline void _1ac1409ab_checkTypeAliasDecl(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b396297a_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1a9a03e98_TypeAlias> _72917_ta = _1a99c5035_buildTypeAlias(_72842_decl);;
	if (_1ac1404b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ac13dc2e_stop(_self_.ptr());
		return;;
	};
	_1ac167d68_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1a9a20701_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1ac13dc2e_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac140c20_getChild(_1ac13b358_scopeChecker* _self_) {
	return jule::new_ptr<_1ac1346e7_Scope>(_1ac1346e7_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1ac1410d8_checkChildSsc(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395b644_ScopeTree>& _75238_tree, jule::Ptr<_1ac1346e7_Scope>& _75261_s, jule::Ptr<_1ac13b358_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1ac14b621_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac141490_checkChildSc(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395b644_ScopeTree>& _75737_tree, jule::Ptr<_1ac13b358_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1ac1346e7_Scope> _75817_s = _1ac140c20_getChild(_self_.ptr());;
	_1ac1410d8_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac14179d_checkChild(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395b644_ScopeTree>& _76335_tree) {
	jule::Ptr<_1ac13b358_scopeChecker> _76417_ssc = _1ac14b885_newChildChecker(_self_);;
	return _1ac141490_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1ac141a23_checkAnonScope(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395b644_ScopeTree> _76838_tree) {
	jule::Ptr<_1ac1346e7_Scope> _76917_s = _1ac14179d_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1ac141d42_processErrorCall(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1e6a5c800_Token> _77372_err) {
	if (_1ac13e207_isDeferred(_self_)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac13b358_scopeChecker> _77817_root = _1ac13e46b_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1ac1420b7_checkExpr(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3950847_Expr> _78633_expr) {
	jule::Ptr<_1ac1c6734_Eval> _78717_eval = _1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1ac1c4bb6_Data> _78917_d = _1a99e6342_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b04e1892:;
			{
				jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>();;
				_1ac141d42_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9e92_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b907e_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99ba17e_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b04e1a90:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1b04e174e:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b04e16e9:;
	};
}



inline void _1ac14233c_checkCoExpr(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395243c_CoExpr> _81535_expr) {
	jule::Ptr<_1ac1c6734_Eval> _81617_eval = _1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1ac1c4bb6_Data> _81817_d = _1a99e6342_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b04e6b72:;
			{
				jule::Ptr<_1a99b6114_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1a99b6114_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1a99dd1d5_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1b04e6a1d:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b04e69b8:;
	};
}



inline jule::Ptr<_1ac134ae3_If> _1ac14264a_checkIf(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3961979_If> _83931_i) {
	jule::Ptr<_1ac1346e7_Scope> _84017_s = _1ac14179d_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1ac1c4bb6_Data> _84217_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a9a09663_Prim> _84717_prim = _1a9a06c9d_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1a9a0c633_IsBool(_84717_prim.ptr()))))) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac134ae3_If>(_1ac134ae3_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1ac134dce_Else> _1ac142958_checkElse(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3961d31_Else> _85933_e) {
	return jule::new_ptr<_1ac134dce_Else>(_1ac134dce_Else{._field_Scope=_1ac14179d_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1ac142bcd_checkConditional(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39622a4_Conditional> _86540_conditional) {
	jule::Ptr<_1ac135253_Conditional> _86617_c = jule::new_ptr<_1ac135253_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1ac134ae3_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1ac14264a_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1b04eed67:;
		if (it != expr.end()) {
			jule::Ptr<_1b3961979_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1ac14264a_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1b04eed67:;
			++it;
			goto _iter_begin_1b04eed67;
		}
		_iter_end_1b04eed67:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1ac142958_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1ac143140_checkIterScopeSsc(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1b395b644_ScopeTree> _88154_tree, jule::Ptr<_1ac1346e7_Scope>& _88177_s, jule::Ptr<_1ac13b358_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1ac1410d8_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac143591_checkIterScopeSc(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1b395b644_ScopeTree> _88653_tree, jule::Ptr<_1ac13b358_scopeChecker> _88675_ssc) {
	jule::Ptr<_1ac1346e7_Scope> _88717_scope = _1ac140c20_getChild(_self_.ptr());;
	_1ac143140_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac143948_checkIterScope(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1b395b644_ScopeTree>& _89252_tree) {
	jule::Ptr<_1ac13b358_scopeChecker> _89317_ssc = _1ac14b885_newChildChecker(_self_);;
	return _1ac143591_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1ac143bbd_checkInfIter(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395eb31_Iter>& _89737_it) {
	jule::Ptr<_1ac13553e_InfIter> _89817_kind = jule::new_ptr<_1ac13553e_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1ac143948_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1ac143e43_checkWhileIter(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395eb31_Iter>& _90339_it) {
	jule::Ptr<_1b3960406_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1b3960406_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1ac143bbd_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1ac1359b2_WhileIter> _91017_kind = jule::new_ptr<_1ac1359b2_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1ac143948_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1ac1c4bb6_Data> _91521_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a9a09663_Prim> _92017_prim = _1a9a06c9d_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a9a0c633_IsBool(_92017_prim.ptr())))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1b3960758_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1ac133c24_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1ac14a3bc_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1ac133ebb_isValidStForNextSt(_94325_st)))) {
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1ac1441b8_checkRangeIter(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395eb31_Iter>& _95339_it) {
	jule::Ptr<_1b3960c97_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1b3960c97_RangeKind>();;
	jule::Ptr<_1ac1c4bb6_Data> _95617_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac136397_RangeIter> _96117_kind = jule::new_ptr<_1ac136397_RangeIter>(_1ac136397_RangeIter{._field_Expr=_95617_d, });;
	_1ac1bae54_rangeChecker _96517_rc = _1ac1bae54_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1ac1bc818_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1ac13b358_scopeChecker> _97817_ssc = _1ac14b885_newChildChecker(_self_);;
	jule::Ptr<_1ac1346e7_Scope> _97917_scope = _1ac140c20_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1ac15d798_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac1404b1_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1ac15d798_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac1404b1_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1ac143140_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1ac14443d_checkIter(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395eb31_Iter> _100333_it) {
	if (_1b395ee83_IsInf(_100333_it.ptr())) {
		_1ac143bbd_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b3960406_WhileKind>>()) {
			_case_begin_1b051caee:;
			{
				_1ac143e43_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3960c97_RangeKind>>()) {
			_case_begin_1b051c060:;
			{
				_1ac1441b8_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1b051be2d:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b051c58d:;
	};
}



inline jule::Bool _1ac14474b_checkValidContLabel(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1ac13b358_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1ac144a59_checkValidBreakLabel(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1ac13b358_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1ac138e8d_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1ac136793_ContSt> _1ac144d67_checkContValidScope(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3961506_ContSt> _105839_c) {
	if (_1ac13e207_isDeferred(_self_)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1ac136793_ContSt>();
	};
	jule::Ptr<_1ac13b358_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1b05251cd:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1b0525255:;
			{
				return jule::new_ptr<_1ac136793_ContSt>(_1ac136793_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1b0525156:;
	};
	_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ac1450dc_checkCont(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3961506_ContSt> _108229_c) {
	jule::Ptr<_1ac136793_ContSt> _108317_cont = _1ac144d67_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1ac13a0c1_scopeLabel> _108921_label = _1ac131ded_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
					_case_begin_1b052aac9:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ac13553e_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
					_case_begin_1b052db65:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ac136397_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
					_case_begin_1b052dbcb:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ac1359b2_WhileIter>()));
					}
				}
				else {
					_case_begin_1b052da11:;
					{
						_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1b052d934:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1ac14474b_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1ac145362_checkLabel(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3958cb2_LabelSt> _112934_l) {
	if ((_1ac13e9dd_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1ac136e36_Label> _113517_label = jule::new_ptr<_1ac136e36_Label>(_1ac136e36_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ac13a0c1_scopeLabel>>::make({jule::new_ptr<_1ac13a0c1_scopeLabel>(_1ac13a0c1_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1ac1455d7_pushGoto(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3959169_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ac137222_GotoSt>(_1ac137222_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ac13a544_scopeGoto>>::make({jule::new_ptr<_1ac13a544_scopeGoto>(_1ac13a544_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1ac14585c_checkPostfix(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395a09e_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b3950847_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1ac1c4bb6_Data> _116717_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1ac13397c_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1a9a07276_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9a1145b_Ptr> _117521_ptr = _1a9a07276_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1a9a11e2e_IsUnsafe(_117521_ptr.ptr())) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a9a05087_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1a9a06c9d_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ac12b205_IsNum(_1a9a06c9d_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1a9a05087_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ac1375c9_Postfix>(_1ac1375c9_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1ac145b6a_isNewAssignIdent(_1ac13b358_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1e6a60094_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1ac1c3005_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1ac1460bb_checkStructureAssignOp(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3967d9d_StructIns>& _120047_s, jule::Ptr<_1b395a09e_AssignSt>& _120067_a, jule::Ptr<_1ac1c4bb6_Data>& _120086_r) {
	jule::Ptr<_1a99c03b5_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1b05415b2:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1b0541628:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1b054253b:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1b05425a2:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1b0542618:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1b054267e:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1b05426e5:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1b05427b1:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1b0542827:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1b054288d:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b0541480:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1b393d6c0_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1b05413c5:;
	};
	if ((_120317_overload == nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1b393d6c0_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1a99be4e6_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1ac164947_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1ac146341_checkSingleAssign(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395a09e_AssignSt>& _123942_a) {
	jule::Ptr<_1ac1c4bb6_Data> _124017_l = nullptr;;
	if ((!(_1e6a60094_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1b3950847_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ac1c6734_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1ac16413e_evalp(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1ac13d7de_isUnsafe(_self_);
	jule::Ptr<_1ac1c4bb6_Data> _125717_r = _1a99e6342_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1a9a05d24_Void(_125717_r.get()._field_Kind.ptr())) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1ac13397c_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1a9a0893c_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a99b529a_OperandExprModel> _127917_lm = jule::new_ptr<_1a99b529a_OperandExprModel>(_1a99b529a_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1a99b529a_OperandExprModel> _128317_rm = jule::new_ptr<_1a99b529a_OperandExprModel>(_1a99b529a_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ac137a4c_Assign>(_1ac137a4c_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1b3967d9d_StructIns> _129021_strct = _1a9a08200_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1ac1460bb_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1a99e8597_binaryEval _129721_solver = static__1a99e8e9e_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1a99edb30_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1ac1b0751_assignTypeChecker _130617_checker = _1ac1b0751_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1ac1b18c8_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1ac14686e_processEndPartOfMultiAssign(_1ac13b358_scopeChecker* _self_, jule::Ptr<_1ac137e04_MultiAssign> _131850_st, jule::Ptr<_1b395a09e_AssignSt> _131913_a, jule::Ptr<_1b3959a60_AssignLeft> _131931_lexpr, jule::Ptr<_1ac1c4bb6_Data> _131955_l, jule::Ptr<_1ac1c4bb6_Data> _131969_r) {
	if (_1e6a60094_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_1a9a05d24_Void(_131969_r.get()._field_Kind.ptr())) {
			_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _1ac145b6a_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_1ac1404b1_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_1ac15e205_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1ac13dc2e_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1ac17c960_Var> _133721_v = jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_1ac1751a5_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_1ac15e205_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1ac13397c_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1ac167681_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_1ac1b0751_assignTypeChecker _137217_checker = _1ac1b0751_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_1ac1b18c8_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _1ac146b05_checkRetMultiAssign(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395a09e_AssignSt>& _138344_a) {
	jule::Ptr<_1ac1c4bb6_Data> _138417_rd = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _138917_r = _1ac132bac_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_1b0562490:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_1b0562517:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b0561b65:;
	};
	jule::Ptr<_1ac137e04_MultiAssign> _140017_st = jule::new_ptr<_1ac137e04_MultiAssign>(_1ac137e04_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_1a9a0893c_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_1a99b7d3b_TupleExprModel>(_1a99b7d3b_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1b05651da:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_1b3959a60_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_1ac1c4bb6_Data> _141021_l = nullptr;;
				if (((!(_1e6a60094_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_1ac145b6a_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_1b05651da;
					};
				};
				_1ac14686e_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_1b05651da:;
			++it;
			_140813_i++;
			goto _iter_begin_1b05651da;
		}
		_iter_end_1b05651da:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _1ac146d7a_checkMultiAssign(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395a09e_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b3954b15_FnCallExpr>>()) {
			_case_begin_1b0569200:;
			{
				_1ac146b05_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3952085_UnsafeExpr>>()) {
			_case_begin_1b0569277:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_1b3952085_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1b3954b15_FnCallExpr>>()) {
						_case_begin_1b056a553:;
						{
							_1ac146b05_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_1b056a4cb:;
				};
			}
		}
		_match_end_1b05689e6:;
	};
	jule::Slice<jule::Any> _143917_right = _1ac133064_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1b056b378:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1b056b400:;
			{
				_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b056b235:;
	};
	jule::Ptr<_1a99b7d3b_TupleExprModel> _145017_rightTuple = jule::new_ptr<_1a99b7d3b_TupleExprModel>();;
	jule::Ptr<_1ac137e04_MultiAssign> _145217_st = jule::new_ptr<_1ac137e04_MultiAssign>(_1ac137e04_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1b056dbc7:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_1b3959a60_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_1ac1c4bb6_Data> _145821_l = nullptr;;
				if (((!(_1e6a60094_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_1ac145b6a_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_1b056dbc7;
					};
				};
				jule::Ptr<_1b3950847_Expr> _146821_expr = jule::new_ptr<_1b3950847_Expr>(_1b3950847_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_1ac1c6734_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_1ac16413e_evalp(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0));
				};
				jule::Ptr<_1ac1c4bb6_Data> _147821_r = _1a99e6342_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_1b056dbc7;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_1ac14686e_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_1b056dbc7:;
			++it;
			_145613_i++;
			goto _iter_begin_1b056dbc7;
		}
		_iter_end_1b056dbc7:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _1ac147100_checkAssignSt(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395a09e_AssignSt> _149137_a) {
	{
		
		if (_1e6a62140_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1b05757d3:;
			{
				_1ac14585c_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_1b05754a3:;
			{
				_1ac146341_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_1b057543c:;
			{
				_1ac146d7a_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_1b0574dcb:;
	};
}



inline jule::Ptr<_1ac1346e7_Scope> _1ac1474a7_checkCaseScope(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1ac138e8d_Case>& _150235_c, jule::Ptr<_1b395b644_ScopeTree>& _150250_tree) {
	jule::Ptr<_1ac13b358_scopeChecker> _150317_ssc = _1ac14b885_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _1ac141490_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_1ac138e8d_Case> _1ac1479a2_checkCase(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1ac138443_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_1b3962ded_Case> _150856_c, jule::Ptr<_1ac1c4bb6_Data> _150875_expr) {
	jule::Ptr<_1ac138e8d_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_1ac1c6734_Eval> _151217_eval = _1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b057a783:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _151321_e = *it;
			{
				jule::Ptr<_1ac1c4bb6_Data> _151421_d = _1a99e5c26_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_1b057a783;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_1ac132915_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _1a9a05395_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_1a9a0774e_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1ac164d98_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_1b2551bec_Trait> _152929_trt = _1a9a08464_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_1ac164d98_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1b057a783;
				};
				if (_151421_d.get()._field_Decl) {
					_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1b057a783;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_1ac1b0751_assignTypeChecker _154721_checker = _1ac1b0751_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_1ac1b18c8_check(&_154721_checker);
			}
			_iter_next_1b057a783:;
			++it;
			goto _iter_begin_1b057a783;
		}
		_iter_end_1b057a783:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_1ac1474a7_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _1ac147d6a_checkCases(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39635c4_MatchCase>& _156135_m, jule::Ptr<_1ac138443_Match> _156154_rm, jule::Ptr<_1ac1c4bb6_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1ac138e8d_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b0583e2e:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_1ac138e8d_Case> _156421_case = jule::new_ptr<_1ac138e8d_Case>(_1ac138e8d_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_1b0583e2e:;
			++it;
			_156313_i++;
			goto _iter_begin_1b0583e2e;
		}
		_iter_end_1b0583e2e:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b05874a4:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_1b3962ded_Case> _157721_c = *it;
			{
				_1ac1479a2_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_1b05874a4:;
			++it;
			_157714_i++;
			goto _iter_begin_1b05874a4;
		}
		_iter_end_1b05874a4:;
	};
}



inline jule::Ptr<_1ac138e8d_Case> _1ac148222_checkDefault(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1ac138443_Match> _158236_m, jule::Ptr<_1b3961d31_Else> _158251_d) {
	jule::Ptr<_1ac138e8d_Case> _158317_def = jule::new_ptr<_1ac138e8d_Case>(_1ac138e8d_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_1ac1474a7_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _1ac148497_checkComptimePanic(_1ac13b358_scopeChecker* _self_, jule::Ptr<_1ac1346e7_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b058a7b5:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _159817_d = _159513_stmt.operator jule::Ptr<_1ac1c4bb6_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>()) {
						_case_begin_1b058b5eb:;
						{
							jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
									_case_begin_1b058c5db:;
									{
										jule::Ptr<_1a9956c86_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_1a9956c86_Const>();;
										if (_1a99b09e3_IsStr(_160425_c.ptr())) {
											_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1a99ad64a_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_1b058c542:;
							};
						}
					}
					_match_end_1b058b4a8:;
				};
			}
		}
		_match_end_1b058a760:;
	};
}



inline void _1ac1487b6_pushTypeMatch(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1ac138443_Match> _161337_tm, jule::Ptr<_1b39635c4_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1b058baa2:;
			if (it != expr.end()) {
				jule::Ptr<_1ac138e8d_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_1ac148497_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1b058baa2:;
				++it;
				goto _iter_begin_1b058baa2;
			}
			_iter_end_1b058baa2:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_1ac148222_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_1ac148497_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _1ac148a3b_checkTypeMatch(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39635c4_MatchCase>& _163739_m) {
	jule::Ptr<_1ac1c4bb6_Data> _163817_d = _1a99e6034_eval(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1a9a06c9d_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_1a9a08464_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_1a9a0774e_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac138443_Match> _164917_tm = jule::new_ptr<_1ac138443_Match>(_1ac138443_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_1ac148222_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_1ac147d6a_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_1ac1487b6_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _1ac148cb1_checkCommonMatch(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39635c4_MatchCase>& _166241_m) {
	jule::Ptr<_1ac1c4bb6_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1a99ac0c7_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ac138443_Match> _167717_mc = jule::new_ptr<_1ac138443_Match>(_1ac138443_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_1ac148222_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_1ac147d6a_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _1ac149036_checkMatch(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39635c4_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_1ac148a3b_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_1ac148cb1_checkCommonMatch(_self_, _168934_m);
}



inline void _1ac1492ab_checkFall(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b3959455_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1ac13e207_isDeferred(_self_))) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1ac138e8d_Case* _170517_case = ((_1ac138e8d_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ac139543_FallSt>(_1ac139543_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_1ac136b4a_BreakSt> _1ac1495b9_checkBreakWithLabel(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b396114e_BreakSt> _171739_b) {
	jule::Ptr<_1ac136b4a_BreakSt> _171817_brk = _1ac1498c7_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1ac13a0c1_scopeLabel> _172817_label = _1ac131ded_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
				_case_begin_1b05a5703:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ac13553e_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
				_case_begin_1b05a8c56:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ac136397_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
				_case_begin_1b011d5ce:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ac1359b2_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
				_case_begin_1b01214c2:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ac138443_Match>()));
				}
			}
			else {
				_case_begin_1b05a8b02:;
				{
					_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1b05a8a25:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_1ac144a59_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1ac144a59_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_1ac136b4a_BreakSt> _1ac1498c7_checkPlainBreak(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b396114e_BreakSt> _177535_b) {
	if (_1ac13e207_isDeferred(_self_)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac13b358_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_1b0126e9a:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_1b0127022:;
			{
				return jule::new_ptr<_1ac136b4a_BreakSt>(_1ac136b4a_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b0127099:;
			{
				return jule::new_ptr<_1ac136b4a_BreakSt>(_1ac136b4a_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1ac138e8d_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1b0126dce:;
	};
	_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ac149b4c_checkBreak(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b396114e_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1ac136b4a_BreakSt> _179921_brk = _1ac1495b9_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_1ac136b4a_BreakSt> _180417_brk = _1ac1498c7_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _1ac149dc2_checkRet(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395e4c1_RetSt> _180832_r) {
	if (_1ac13e207_isDeferred(_self_)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1399b6_RetSt> _181317_rt = jule::new_ptr<_1ac1399b6_RetSt>(_1ac1399b6_RetSt{._field_Func=_1ac13e46b_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_1ac1bd0aa_retTypeChecker> _181817_rtc = jule::new_ptr<_1ac1bd0aa_retTypeChecker>(_1ac1bd0aa_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _1ac1bde9b_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _1ac14a147_checkUseExpr(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b39511d8_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1ac13e207_isDeferred(_self_)) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1ac14a3bc_checkNode(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_1b395b644_ScopeTree>>()) {
			_case_begin_1b0135591:;
			{
				_1ac141a23_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_1b395b644_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395e119_VarDecl>>()) {
			_case_begin_1b0135085:;
			{
				_1ac140736_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_1b395e119_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396297a_TypeAliasDecl>>()) {
			_case_begin_1b0135492:;
			{
				_1ac1409ab_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_1b396297a_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3950847_Expr>>()) {
			_case_begin_1b01357d3:;
			{
				_1ac1420b7_checkExpr(_self_, _185534_node.operator jule::Ptr<_1b3950847_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395243c_CoExpr>>()) {
			_case_begin_1b013598c:;
			{
				_1ac14233c_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_1b395243c_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39622a4_Conditional>>()) {
			_case_begin_1b0135a03:;
			{
				_1ac142bcd_checkConditional(_self_, _185534_node.operator jule::Ptr<_1b39622a4_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395eb31_Iter>>()) {
			_case_begin_1b0135a69:;
			{
				_1ac14443d_checkIter(_self_, _185534_node.operator jule::Ptr<_1b395eb31_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3961506_ContSt>>()) {
			_case_begin_1b0135ad0:;
			{
				_1ac1450dc_checkCont(_self_, _185534_node.operator jule::Ptr<_1b3961506_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3958cb2_LabelSt>>()) {
			_case_begin_1b0135b46:;
			{
				_1ac145362_checkLabel(_self_, _185534_node.operator jule::Ptr<_1b3958cb2_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3959169_GotoSt>>()) {
			_case_begin_1b0135bac:;
			{
				_1ac1455d7_pushGoto(_self_, _185534_node.operator jule::Ptr<_1b3959169_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395a09e_AssignSt>>()) {
			_case_begin_1b0135c23:;
			{
				_1ac147100_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_1b395a09e_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39635c4_MatchCase>>()) {
			_case_begin_1b0135c89:;
			{
				_1ac149036_checkMatch(_self_, _185534_node.operator jule::Ptr<_1b39635c4_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3959455_FallSt>>()) {
			_case_begin_1b0135d00:;
			{
				_1ac1492ab_checkFall(_self_, _185534_node.operator jule::Ptr<_1b3959455_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396114e_BreakSt>>()) {
			_case_begin_1b0135d66:;
			{
				_1ac149b4c_checkBreak(_self_, _185534_node.operator jule::Ptr<_1b396114e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395e4c1_RetSt>>()) {
			_case_begin_1b0135dcc:;
			{
				_1ac149dc2_checkRet(_self_, _185534_node.operator jule::Ptr<_1b395e4c1_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39511d8_UseExpr>>()) {
			_case_begin_1b0135e43:;
			{
				_1ac14a147_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_1b39511d8_UseExpr>());
			}
		}
		else {
			_case_begin_1b013520b:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b013512e:;
	};
}



inline void _1ac14a598_checkResult(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	_1b395b039_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1b39511d8_UseExpr>>()) {
			_case_begin_1b0140249:;
			{
				jule::Ptr<_1b39511d8_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_1b39511d8_UseExpr>();;
				jule::Ptr<_1ac1c4bb6_Data> _189921_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_1ac1bd0aa_retTypeChecker> _190421_rtc = jule::new_ptr<_1ac1bd0aa_retTypeChecker>(_1ac1bd0aa_retTypeChecker{._field_sc=_self_, ._field_types=_1a99c14d7_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_1ac1bde9b_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3950847_Expr>>()) {
			_case_begin_1b01402b0:;
			{
				jule::Ptr<_1b3950847_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_1b3950847_Expr>();;
				jule::Ptr<_1ac1c4bb6_Data> _191221_d = _1a99e6342_evalExpr(_1ac16444c_eval(_self_.get()._field_s, jule::Trait<_1a9a20701_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
						_case_begin_1b014499b:;
						{
							jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>();;
							_1ac141d42_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_1b0144858:;
						{
							return;;
						}
					}
					_match_end_1b0144803:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3959169_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1b396114e_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1b3961506_ContSt>>() || _match_expr.type_is<jule::Ptr<_1b395e4c1_RetSt>>()) {
			_case_begin_1b013e90d:;
			{
				_1ac14a3bc_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_1b013e897:;
			{
				_1ac14a3bc_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_1b013e721:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1ac14a774_checkTree(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_1b395b039_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1ac14a3bc_checkNode(_self_, _194821_stmt._field_Data);
			if (_1ac13de93_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b0148098:;
	}
	_iter_end_1b0148098:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1ac14a598_checkResult(_self_);
	};
}



inline void _1ac14aa93_checkGoto(_1ac13b358_scopeChecker* _self_, jule::Ptr<_1ac13a544_scopeGoto>& _195933_gt, jule::Ptr<_1ac13a0c1_scopeLabel>& _195954_label) {
	jule::Ptr<_1ac13b358_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_1ae6ade39:;
	}
	_iter_end_1ae6ade39:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1ae6b1535:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_1ac1325c4_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_1ae6b1535;
					};
				}
				_iter_next_1ae6b1535:;
				++it;
				_198117_j++;
				goto _iter_begin_1ae6b1535;
			}
			_iter_end_1ae6b1535:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_1ac134263_stmtIsDef(_199121_stmt)) {
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1ae6b10a1:;
	}
	_iter_end_1ae6b10a1:;;
}



inline void _1ac14ac6e_checkGotos(_1ac13b358_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1ae6b348d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac13a544_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_1ac13a0c1_scopeLabel> _200121_label = _1ac140109_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1ae6b348d;
				};
				_200121_label.get()._field_used=true;
				_1ac14aa93_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_1ae6b348d:;
			++it;
			goto _iter_begin_1ae6b348d;
		}
		_iter_end_1ae6b348d:;
	};
}



inline void _1ac14ae4a_checkLabels(_1ac13b358_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1ae6b6936:;
		if (it != expr.end()) {
			jule::Ptr<_1ac13a0c1_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1ae6b6936:;
			++it;
			goto _iter_begin_1ae6b6936;
		}
		_iter_end_1ae6b6936:;
	};
}



inline void _1ac14b126_checkVars(_1ac13b358_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1ae6b6d21:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_1e6a60094_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_1e6a6033b_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_1ae6b6d21:;
			++it;
			goto _iter_begin_1ae6b6d21;
		}
		_iter_end_1ae6b6d21:;
	};
}



inline void _1ac14b302_checkAliases(_1ac13b358_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1ae6b8a9d:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a03e98_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_1e6a60094_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_1e6a6033b_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_1ae6b8a9d:;
			++it;
			goto _iter_begin_1ae6b8a9d;
		}
		_iter_end_1ae6b8a9d:;
	};
}



inline void _1ac14b621_check(jule::Ptr<_1ac13b358_scopeChecker> _self_, jule::Ptr<_1b395b644_ScopeTree>& _203730_tree, jule::Ptr<_1ac1346e7_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_1ac14a774_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1ac14b126_checkVars(_self_.ptr());
		_1ac14b302_checkAliases(_self_.ptr());
		if (_1ac13da53_isRoot(_self_.ptr())) {
			_1ac14ac6e_checkGotos(_self_.ptr());
			_1ac14ae4a_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1ac13b358_scopeChecker> _1ac14b885_newChildChecker(jule::Ptr<_1ac13b358_scopeChecker> _self_) {
	jule::Ptr<_1ac13b358_scopeChecker> _206117_base = _1ac131727_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac13b358_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ac14c875_checkCdef(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
			_case_begin_1ae6c138b:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a99bc714_Fn>().get()._field_CppLinked) {
					goto _match_end_1ae6c15cd;
				};
				goto _case_begin_1ae6c1633;
			}
		}
		else {
			_case_begin_1ae6c1633:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6c15cd:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ac14caea_checkTypedef(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1ae6c448d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_CppLinked) {
					goto _match_end_1ae6c3d50;
				};
				goto _case_begin_1ae6c3da5;
			}
		}
		else {
			_case_begin_1ae6c3da5:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6c3d50:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ac14cd70_checkDerive(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1ae6c63c4:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_CppLinked))) {
					goto _match_end_1ae6c65e4;
				};
				goto _case_begin_1ae6c6649;
			}
		}
		else {
			_case_begin_1ae6c6649:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ae6c65e4:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ae6ca0cb:;
		}
		else {
			_case_begin_1ae6c677b:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1ae6c9b8b:;
	};
}



inline void _1ac14d0e5_checkNamespace(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1ae6cba8e:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_CppLinked))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
			_case_begin_1ae6cb143:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a99bc714_Fn>().get()._field_CppLinked))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1ae6cb5d8:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac17c960_Var>().get()._field_CppLinked))) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1ae6cb4a6:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6cb451:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a5c800_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1ae6d4c0c:;
			{
				if ((_1a99ee339_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1b3917b2d_Directive> _11625_typedef = jule::new_ptr<_1b3917b2d_Directive>(_1b3917b2d_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1b3917b2d_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1ae6d2ad9:;
	};
}



inline void _1ac14d36a_checkDeprecated(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1ae6d5977:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_CppLinked) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
			_case_begin_1ae6d6eb7:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a99bc714_Fn>().get()._field_CppLinked) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1ae6d702d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac17c960_Var>().get()._field_CppLinked) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1ae6d68bd:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6d526d:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a5c800_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1ac14d5e0_checkTest(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
			_case_begin_1ae6de794:;
			{
				jule::Ptr<_1a99bc714_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a99bc714_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1a99bd3b3_IsInit(_16717_f.ptr())))) && (!(_1a99bd14e_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1ae6e02ab;
				};
				if (_1a99bcdda_IsMethod(_16717_f.ptr())) {
					_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1ae6e02ab;
				};
				goto _case_begin_1ae6e0311;
			}
		}
		else {
			_case_begin_1ae6e0311:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6e02ab:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ac14d865_checkDirective(_1ac14c435_directiveChecker* _self_, jule::Ptr<_1b3917b2d_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ae6e4aa7:;
			{
				_1ac14c875_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ae6e427c:;
			{
				_1ac14caea_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1ae6e42e3:;
			{
				_1ac14cd70_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ae6e4359:;
			{
				_1ac14d0e5_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ae6e43c0:;
			{
				_1ac14d36a_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ae6e5019:;
			{
				_1ac14d5e0_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ae6e5080:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1ae6e4216:;
			{
				_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1ae6e415b:;
	};
}



inline void _1ac14da41_check(_1ac14c435_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1ae6e7648:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _20821_d = *it;
			{
				_1ac14d865_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1ae6e7648:;
			++it;
			goto _iter_begin_1ae6e7648;
		}
		_iter_end_1ae6e7648:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac14c435_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1535e5_FindPackage(_1ac1530c8_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac153903_SelectPackage(_1ac1530c8_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ac17c960_Var> _1ac153caa_FindVar(_1ac1530c8_ImportInfo* _self_, jule::Str _18130_ident, jule::Bool ) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _18130_ident)))) {
		return nullptr;
	};
	return _1ac150bca_findVarInPackage((*_self_)._field_Package.get()._field_Files,_18130_ident,false);
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac154162_FindTypeAlias(_1ac1530c8_ImportInfo* _self_, jule::Str _19336_ident, jule::Bool ) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _19336_ident)))) {
		return nullptr;
	};
	return _1ac151109_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_19336_ident,false);
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac154519_FindStruct(_1ac1530c8_ImportInfo* _self_, jule::Str _20533_ident, jule::Bool ) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _20533_ident)))) {
		return nullptr;
	};
	return _1ac1514e4_findStructInPackage((*_self_)._field_Package.get()._field_Files,_20533_ident,false);
}



inline jule::Ptr<_1a99bc714_Fn> _1ac1548c1_FindFn(_1ac1530c8_ImportInfo* _self_, jule::Str _21729_ident, jule::Bool ) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _21729_ident)))) {
		return nullptr;
	};
	return _1ac151956_findFnInPackage((*_self_)._field_Package.get()._field_Files,_21729_ident,false);
}



inline jule::Ptr<_1b2551bec_Trait> _1ac154bce_FindTrait(_1ac1530c8_ImportInfo* _self_, jule::Str _22832_ident) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _22832_ident)))) {
		return nullptr;
	};
	return _1ac151c64_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_22832_ident);
}



inline jule::Ptr<_1b2553d42_Enum> _1ac154edc_FindEnum(_1ac1530c8_ImportInfo* _self_, jule::Str _23931_ident) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _23931_ident)))) {
		return nullptr;
	};
	return _1ac1520a5_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_23931_ident);
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac1552ea_FindTypeEnum(_1ac1530c8_ImportInfo* _self_, jule::Str _25035_ident) {
	if ((!(_1ac155691_isLookupable(&(*_self_), _25035_ident)))) {
		return nullptr;
	};
	return _1ac1523e6_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_25035_ident);
}



inline jule::Bool _1ac155691_isLookupable(_1ac1530c8_ImportInfo* _self_, jule::Str _25927_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1ac15599e_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1ac15599e_existIdent(&(*_self_), _25927_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1ac15599e_existIdent(_1ac1530c8_ImportInfo* _self_, jule::Str _27925_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1ae70c460:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_Kind == _27925_ident)) {
					return true;
				};
			}
			_iter_next_1ae70c460:;
			++it;
			goto _iter_begin_1ae70c460;
		}
		_iter_end_1ae70c460:;
	};
	return false;
}



inline jule::Bool _1ac155c35_isAccessibleViaSelection(_1ac1530c8_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1ac15599e_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1530c8_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15650a_FindPackage(_1ac156032_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac156818_SelectPackage(_1ac156032_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ac17c960_Var> _1ac156bc0_FindVar(_1ac156032_Package* _self_, jule::Str _30930_ident, jule::Bool _30942_cpp_linked) {
	return _1ac150bca_findVarInPackage((*_self_)._field_Files,_30930_ident,_30942_cpp_linked);
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac157077_FindTypeAlias(_1ac156032_Package* _self_, jule::Str _31536_ident, jule::Bool _31548_cpp_linked) {
	return _1ac151109_findTypeAliasInPackage((*_self_)._field_Files,_31536_ident,_31548_cpp_linked);
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac15742e_FindStruct(_1ac156032_Package* _self_, jule::Str _32133_ident, jule::Bool _32145_cpp_linked) {
	return _1ac1514e4_findStructInPackage((*_self_)._field_Files,_32133_ident,_32145_cpp_linked);
}



inline jule::Ptr<_1a99bc714_Fn> _1ac1577d6_FindFn(_1ac156032_Package* _self_, jule::Str _32729_ident, jule::Bool _32741_cpp_linked) {
	return _1ac151956_findFnInPackage((*_self_)._field_Files,_32729_ident,_32741_cpp_linked);
}



inline jule::Ptr<_1b2551bec_Trait> _1ac157ae4_FindTrait(_1ac156032_Package* _self_, jule::Str _33332_ident) {
	return _1ac151c64_findTraitInPackage((*_self_)._field_Files,_33332_ident);
}



inline jule::Ptr<_1b2553d42_Enum> _1ac157e02_FindEnum(_1ac156032_Package* _self_, jule::Str _33931_ident) {
	return _1ac1520a5_findEnumInPackage((*_self_)._field_Files,_33931_ident);
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac158210_FindTypeEnum(_1ac156032_Package* _self_, jule::Str _34535_ident) {
	return _1ac1523e6_findTypeEnumInPackage((*_self_)._field_Files,_34535_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac156032_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15b741_FindPackage(_1ac15b224_Sema* _self_, jule::Str _21934_ident) {
	return _1ac1c0475_FindPackage((*_self_)._field_file.ptr(), _21934_ident);
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac15ba4e_SelectPackage(_1ac15b224_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _22936_selector) {
	return _1ac1c0783_SelectPackage((*_self_)._field_file.ptr(), _22936_selector);
}



inline jule::Ptr<_1ac17c960_Var> _1ac15be06_FindVar(_1ac15b224_Sema* _self_, jule::Str _23930_ident, jule::Bool _23942_cpp_linked) {
	jule::Ptr<_1ac17c960_Var> _24117_v = _1ac150bca_findVarInPackage((*_self_)._field_files,_23930_ident,_23942_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae73010e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_24721_imp,_23930_ident)))) {
					goto _iter_next_1ae73010e;
				};
				_24117_v=_1ac153caa_FindVar(_24721_imp.ptr(), _23930_ident,_23942_cpp_linked);
				if (((_24117_v != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1ae73010e:;
			++it;
			goto _iter_begin_1ae73010e;
		}
		_iter_end_1ae73010e:;
	};
	return nullptr;
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac15c2ad_FindTypeAlias(_1ac15b224_Sema* _self_, jule::Str _26636_ident, jule::Bool _26648_cpp_linked) {
	jule::Ptr<_1a9a03e98_TypeAlias> _26817_ta = _1ac151109_findTypeAliasInPackage((*_self_)._field_files,_26636_ident,_26648_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae732ab2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_27421_imp,_26636_ident)))) {
					goto _iter_next_1ae732ab2;
				};
				_26817_ta=_1ac154162_FindTypeAlias(_27421_imp.ptr(), _26636_ident,_26648_cpp_linked);
				if (((_26817_ta != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1ae732ab2:;
			++it;
			goto _iter_begin_1ae732ab2;
		}
		_iter_end_1ae732ab2:;
	};
	return nullptr;
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac15c665_FindStruct(_1ac15b224_Sema* _self_, jule::Str _29333_ident, jule::Bool _29345_cppLinked) {
	jule::Ptr<_1b393b9dc_Struct> _29517_s = _1ac1514e4_findStructInPackage((*_self_)._field_files,_29333_ident,_29345_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae735565:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_30021_imp,_29333_ident)))) {
					goto _iter_next_1ae735565;
				};
				_29517_s=_1ac154519_FindStruct(_30021_imp.ptr(), _29333_ident,_29345_cppLinked);
				if (((_29517_s != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1ae735565:;
			++it;
			goto _iter_begin_1ae735565;
		}
		_iter_end_1ae735565:;
	};
	return nullptr;
}



inline jule::Ptr<_1a99bc714_Fn> _1ac15ca1c_FindFn(_1ac15b224_Sema* _self_, jule::Str _31829_ident, jule::Bool _31841_cpp_linked) {
	jule::Ptr<_1a99bc714_Fn> _32017_f = _1ac151956_findFnInPackage((*_self_)._field_files,_31829_ident,_31841_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae738018:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_32621_imp,_31829_ident)))) {
					goto _iter_next_1ae738018;
				};
				_32017_f=_1ac1548c1_FindFn(_32621_imp.ptr(), _31829_ident,_31841_cpp_linked);
				if (((_32017_f != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1ae738018:;
			++it;
			goto _iter_begin_1ae738018;
		}
		_iter_end_1ae738018:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2551bec_Trait> _1ac15cd2a_FindTrait(_1ac15b224_Sema* _self_, jule::Str _34532_ident) {
	jule::Ptr<_1b2551bec_Trait> _34717_t = _1ac151c64_findTraitInPackage((*_self_)._field_files,_34532_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae73a658:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_35321_imp,_34532_ident)))) {
					goto _iter_next_1ae73a658;
				};
				_34717_t=_1ac154bce_FindTrait(_35321_imp.ptr(), _34532_ident);
				if (((_34717_t != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1ae73a658:;
			++it;
			goto _iter_begin_1ae73a658;
		}
		_iter_end_1ae73a658:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2553d42_Enum> _1ac15d138_FindEnum(_1ac15b224_Sema* _self_, jule::Str _37231_ident) {
	jule::Ptr<_1b2553d42_Enum> _37417_e = _1ac1520a5_findEnumInPackage((*_self_)._field_files,_37231_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae73cd97:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_38021_imp,_37231_ident)))) {
					goto _iter_next_1ae73cd97;
				};
				_37417_e=_1ac154edc_FindEnum(_38021_imp.ptr(), _37231_ident);
				if (((_37417_e != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1ae73cd97:;
			++it;
			goto _iter_begin_1ae73cd97;
		}
		_iter_end_1ae73cd97:;
	};
	return nullptr;
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac15d446_FindTypeEnum(_1ac15b224_Sema* _self_, jule::Str _39935_ident) {
	jule::Ptr<_1b255543c_TypeEnum> _40117_e = _1ac1523e6_findTypeEnumInPackage((*_self_)._field_files,_39935_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae7405d6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1ac159b4b_impIsLookupable(_40721_imp,_39935_ident)))) {
					goto _iter_next_1ae7405d6;
				};
				_40117_e=_1ac1552ea_FindTypeEnum(_40721_imp.ptr(), _39935_ident);
				if (((_40117_e != nullptr) && _1ac15e5ac_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1ae7405d6:;
			++it;
			goto _iter_begin_1ae7405d6;
		}
		_iter_end_1ae7405d6:;
	};
	return nullptr;
}



inline jule::Bool _1ac15d798_isFlag(_1ac15b224_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1ac15da1d_setCurrentFile(_1ac15b224_Sema* _self_, jule::Ptr<_1ac1bee58_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1ac15ddd6_pushErr(_1ac15b224_Sema* _self_, jule::Ptr<_1e6a5c800_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac15980a_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1ac15e205_pushSugggestion(_1ac15b224_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1ac15ac90_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1ac15e5ac_isAccessibleDefine(_1ac15b224_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1e6a5c800_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1e6a63581_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1e6a63581_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1ac15ea0d_isDuplicatedIdent(_1ac15b224_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ae74729c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> &_44516_f = *it;
			{
				if (_1ac1c3456_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1ae747b60:;
					if (it != expr.end()) {
						jule::Ptr<_1ac1530c8_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1ae7489eb:;
								if (it != expr.end()) {
									jule::Ptr<_1e6a5c800_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1ae7489eb:;
									++it;
									goto _iter_begin_1ae7489eb;
								}
								_iter_end_1ae7489eb:;
							};
						}
						_iter_next_1ae747b60:;
						++it;
						goto _iter_begin_1ae747b60;
					}
					_iter_end_1ae747b60:;
				};
			}
			_iter_next_1ae74729c:;
			++it;
			goto _iter_begin_1ae74729c;
		}
		_iter_end_1ae74729c:;
	};
	return false;
}



inline void _1ac15ed2c_checkDirectives(jule::Ptr<_1ac15b224_Sema> _self_, jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _46140_d, jule::Any _46166_o) {
	_1ac14c435_directiveChecker _46217_dc = _1ac14c435_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b3917b2d_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1ac14da41_check(&_46217_dc);
}



inline jule::Bool _1ac16027d_checkGenericQuantity(_1ac15b224_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1e6a5c800_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1ae74b735:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1ae74b812:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1ae74b878:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1ae74b559:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1ae74b0c5:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1ae74aee8:;
	};
}



inline jule::Bool _1ac160657_isDuplicatedImportSelection(_1ac15b224_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ae74e7b0:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1ae74e7b0;
				};
				if (_1ac15599e_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1ae74e7b0:;
			++it;
			goto _iter_begin_1ae74e7b0;
		}
		_iter_end_1ae74e7b0:;
	};
	return false;
}



inline jule::Any _1ac160a20_getImportDef(_1ac15b224_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1ac1530c8_ImportInfo>& _50244_imp) {
	if ((_1ac2ed097_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b0627cc5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1ac1c3005_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1b0627cc5:;
			++it;
			goto _iter_begin_1b0627cc5;
		}
		_iter_end_1b0627cc5:;
	};
	return nullptr;
}



inline jule::Bool _1ac160d2d_checkImportSelections(_1ac15b224_Sema* _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _51745_imp) {
	jule::Bool _51765_ok = jule::Bool();
	_51765_ok=true;
	{
		auto &expr = _51745_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1b062a338:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> _51916_ident = *it;
			{
				if ((_51916_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1b062a338;
				};
				if (_1ac160657_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51745_imp)),_51916_ident.get()._field_Kind)) {
					_1ac15ddd6_pushErr(&(*_self_), _51916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
					_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51765_ok=false;
					goto _iter_next_1b062a338;
				};
				jule::Any _53121_def = _1ac160a20_getImportDef(&(*_self_), _51916_ident.get()._field_Kind,_51745_imp);;
				{
					auto &_match_expr{ _53121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1b062c3c3:;
						{
							goto _iter_next_1b062a338;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
						_case_begin_1b062cd41:;
						{
							jule::Ptr<_1ac17c960_Var> _53725_v = _53121_def.operator jule::Ptr<_1ac17c960_Var>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _53725_v.get()._field_Public,_53725_v.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
						_case_begin_1b062cda7:;
						{
							jule::Ptr<_1a9a03e98_TypeAlias> _54225_ta = _53121_def.operator jule::Ptr<_1a9a03e98_TypeAlias>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _54225_ta.get()._field_Public,_54225_ta.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
						_case_begin_1b062ce1d:;
						{
							jule::Ptr<_1b393b9dc_Struct> _54725_strct = _53121_def.operator jule::Ptr<_1b393b9dc_Struct>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _54725_strct.get()._field_Public,_54725_strct.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1b2551bec_Trait>>()) {
						_case_begin_1b062d99b:;
						{
							jule::Ptr<_1b2551bec_Trait> _55225_t = _53121_def.operator jule::Ptr<_1b2551bec_Trait>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _55225_t.get()._field_Public,_55225_t.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1b2553d42_Enum>>()) {
						_case_begin_1b062da12:;
						{
							jule::Ptr<_1b2553d42_Enum> _55725_e = _53121_def.operator jule::Ptr<_1b2553d42_Enum>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _55725_e.get()._field_Public,_55725_e.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1b255543c_TypeEnum>>()) {
						_case_begin_1b062da78:;
						{
							jule::Ptr<_1b255543c_TypeEnum> _56225_e = _53121_def.operator jule::Ptr<_1b255543c_TypeEnum>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _56225_e.get()._field_Public,_56225_e.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
						_case_begin_1b062dade:;
						{
							jule::Ptr<_1a99bc714_Fn> _56725_f = _53121_def.operator jule::Ptr<_1a99bc714_Fn>();;
							if (_1ac15e5ac_isAccessibleDefine(&(*_self_), _56725_f.get()._field_Public,_56725_f.get()._field_Token)) {
								goto _iter_next_1b062a338;
							};
						}
					}
					else {
						_case_begin_1b062cacc:;
						{
							_1ac15ddd6_pushErr(&(*_self_), _51916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
							_51765_ok=false;
							goto _iter_next_1b062a338;
						}
					}
					_match_end_1b062aa53:;
				};
				_1ac15ddd6_pushErr(&(*_self_), _51916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
				_1ac15e205_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51765_ok=false;
			}
			_iter_next_1b062a338:;
			++it;
			goto _iter_begin_1b062a338;
		}
		_iter_end_1b062a338:;
	};
	return _51765_ok;
}



inline jule::Bool _1ac16113b_isUseAliasDuplication(_1ac15b224_Sema* _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _58441_imp) {
	if ((_58441_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b0636a2b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _58921_imp2 = *it;
			{
				if ((_58921_imp2 == _58441_imp)) {
					goto _iter_end_1b0636a2b;
				};
				if ((_58921_imp2.get()._field_Alias == _58441_imp.get()._field_Alias)) {
					return true;
				};
				if (((_58921_imp2.get()._field_Ident == _58921_imp2.get()._field_LinkPath) && (_58921_imp2.get()._field_Ident == _58441_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1b0636a2b:;
			++it;
			goto _iter_begin_1b0636a2b;
		}
		_iter_end_1b0636a2b:;
	};
	return false;
}



inline jule::Bool _1ac161449_checkImport(_1ac15b224_Sema* _self_, jule::Ptr<_1ac1530c8_ImportInfo>& _60435_imp) {
	if ((_60435_imp.get()._field_CppLinked || (_60435_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1ac16113b_isUseAliasDuplication(&(*_self_), _60435_imp)) {
		_1ac15ddd6_pushErr(&(*_self_), _60435_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_60435_imp.get()._field_Alias)}));
		_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_60435_imp.get()._field_Duplicate))) {
		jule::Ptr<_1ac15b224_Sema> _61521_sema = jule::new_ptr<_1ac15b224_Sema>(_1ac15b224_Sema{._field_flags=(*_self_)._field_flags});;
		_1ac17997e_check(_61521_sema, _60435_imp.get()._field_Package.get()._field_Files);
		if ((_61521_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_61521_sema.get()._field_errors);
			_61521_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1ac160d2d_checkImportSelections(&(*_self_), _60435_imp);
}



inline void _1ac161625_checkImports(_1ac15b224_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b063bcc8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _62921_file = *it;
			{
				_1ac15da1d_setCurrentFile(&(*_self_), _62921_file);
				{
					auto &expr = _62921_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1b063d307:;
					if (it != expr.end()) {
						jule::Ptr<_1ac1530c8_ImportInfo> _63125_imp = *it;
						{
							jule::Bool _63221_ok = _1ac161449_checkImport(&(*_self_), _63125_imp);;
							if ((!(_63221_ok))) {
								_1ac15ddd6_pushErr(&(*_self_), _63125_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63125_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1b063d307:;
						++it;
						goto _iter_begin_1b063d307;
					}
					_iter_end_1b063d307:;
				};
			}
			_iter_next_1b063bcc8:;
			++it;
			goto _iter_begin_1b063bcc8;
		}
		_iter_end_1b063bcc8:;
	};
}



inline void _1ac161801_implFileImpls(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1b063da22:;
		if (it != expr.end()) {
			jule::Ptr<_1ac12e68c_Impl> _64321_imp = *it;
			{
				_1ac171a64_implImpl(_self_, _64321_imp);
			}
			_iter_next_1b063da22:;
			++it;
			goto _iter_begin_1b063da22;
		}
		_iter_end_1b063da22:;
	};
}



inline void _1ac1619cc_implImpls(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b06401e9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _64921_file = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _64921_file);
				_1ac161801_implFileImpls(_self_);
			}
			_iter_next_1b06401e9:;
			++it;
			goto _iter_begin_1b06401e9;
		}
		_iter_end_1b06401e9:;
	};
}



inline void _1ac161ba8_checkEnums(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b064177d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _65621_file = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _65621_file);
				_1ac16e18d_checkEnumDecls(_self_);
			}
			_iter_next_1b064177d:;
			++it;
			goto _iter_begin_1b064177d;
		}
		_iter_end_1b064177d:;
	};
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac1621a3_buildTypeWithRefers(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b394b326_TypeDecl>& _66344_t, jule::Trait<_1a9a20701_Lookup> _66367_l, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _66413_generics, jule::Ptr<_1a9a123a2_referencer> _66441_referencer) {
	_1a9a130ea_typeChecker _66517_tc = _1a9a130ea_typeChecker{._field_s=_self_, ._field_lookup=_66367_l, ._field_referencer=_66441_referencer, ._field_useGenerics=_66413_generics, };;
	{
		auto &_match_expr{ _66367_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b0643450:;
			{
				jule::Ptr<_1ac13b358_scopeChecker> _67321_hard = _1ac13e6d0_getHardRoot(_66367_l.operator jule::Ptr<_1ac13b358_scopeChecker>());;
				_66517_tc._field_refers=_67321_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b06431a8:;
	};
	if (((_66441_referencer != nullptr) && (_66441_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _66441_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
				_case_begin_1b0643906:;
				{
					_66517_tc._field_ownerAlias=_66441_referencer.get()._field_owner.operator jule::Ptr<_1a9a03e98_TypeAlias>();
				}
			}
			_match_end_1b06438a1:;
		};
	};
	return _1a9a1a366_checkDecl(&_66517_tc, _66344_t);
}



inline jule::Bool _1ac16269d_checkTypeWithRefers(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a08ce4_TypeSymbol>& _69044_t, jule::Trait<_1a9a20701_Lookup> _69064_l, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _69113_generics, jule::Ptr<_1a9a123a2_referencer> _69141_referencer) {
	jule::Bool _69168_ok = jule::Bool();
	if (_1a9a0919b_checked(_69044_t.ptr())) {
		_69168_ok = true;
		return _69168_ok;
	};
	_69044_t.get()._field_Kind=_1ac1621a3_buildTypeWithRefers(_self_, _69044_t.get()._field_Decl,_69064_l,_69113_generics,_69141_referencer);
	_69168_ok = _1a9a0919b_checked(_69044_t.ptr());
	return _69168_ok;
}



inline jule::Ptr<_1ac12c624_constraintChecker> _1ac162912_constraintChecker(jule::Ptr<_1ac15b224_Sema> _self_) {
	return jule::new_ptr<_1ac12c624_constraintChecker>(_1ac12c624_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1ac162cb9_checkType(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a08ce4_TypeSymbol>& _70534_t, jule::Trait<_1a9a20701_Lookup> _70554_l) {
	return _1ac16269d_checkTypeWithRefers(_self_, _70534_t,_70554_l,nullptr,nullptr);
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac16321a_buildTypeWithGenerics(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b394b326_TypeDecl>& _71146_t, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _71213_generics, jule::Ptr<_1a99c3286_ReferenceStack> _71241_refers) {
	jule::Ptr<_1a9a130ea_typeChecker> _71317_tc = jule::new_ptr<_1a9a130ea_typeChecker>(_1a9a130ea_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a9a20701_Lookup>(_self_, 3), ._field_refers=_71241_refers, ._field_useGenerics=_71213_generics, });;
	return _1a9a1a366_checkDecl(_71317_tc.ptr(), _71146_t);
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac163528_buildType(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b394b326_TypeDecl>& _72334_t) {
	return _1ac16321a_buildTypeWithGenerics(_self_, _72334_t,nullptr,nullptr);
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac163836_selectType(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b394b326_TypeDecl>& _72835_t) {
	jule::Ptr<_1a9a130ea_typeChecker> _72917_tc = jule::new_ptr<_1a9a130ea_typeChecker>(_1a9a130ea_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a9a20701_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a9a1a366_checkDecl(_72917_tc.ptr(), _72835_t);
}



inline jule::Ptr<_1ac1c6734_Eval> _1ac163c87_evalpd(jule::Ptr<_1ac15b224_Sema> _self_, jule::Trait<_1a9a20701_Lookup> _73930_l, jule::Ptr<_1a9a04b8b_TypeKind> _73945_p, jule::Ptr<_1ac17c960_Var> _73963_owner) {
	jule::Ptr<_1ac1c6734_Eval> _74017_e = jule::new_ptr<_1ac1c6734_Eval>(_1ac1c6734_Eval{._field_s=_self_, ._field_lookup=_73930_l, ._field_owner=_73963_owner, });;
	{
		auto &_match_expr{ _73930_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b064c107:;
			{
				_74017_e.get()._field_unsafety=_1ac13d7de_isUnsafe(_73930_l.operator jule::Ptr<_1ac13b358_scopeChecker>());
			}
		}
		_match_end_1b064c008:;
	};
	_74017_e.get()._field_prefix=_73945_p;
	return _74017_e;
}



inline jule::Ptr<_1ac1c6734_Eval> _1ac16413e_evalp(jule::Ptr<_1ac15b224_Sema> _self_, jule::Trait<_1a9a20701_Lookup> _75429_l, jule::Ptr<_1a9a04b8b_TypeKind> _75444_p) {
	return _1ac163c87_evalpd(_self_, _75429_l,_75444_p,nullptr);
}



inline jule::Ptr<_1ac1c6734_Eval> _1ac16444c_eval(jule::Ptr<_1ac15b224_Sema> _self_, jule::Trait<_1a9a20701_Lookup> _75928_l) {
	return _1ac16413e_evalp(_self_, _75928_l,nullptr);
}



inline jule::Bool _1ac164947_checkAssignType(jule::Ptr<_1ac15b224_Sema> _self_, jule::Bool _76335_destIsRef, jule::Ptr<_1a9a04b8b_TypeKind>& _76357_dest, jule::Ptr<_1ac1c4bb6_Data>& _76414_d, jule::Ptr<_1e6a5c800_Token> _76428_errorToken) {
	if (_76414_d.get()._field_Decl) {
		_1ac15ddd6_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_76335_destIsRef) {
		if ((!(_1a9a05395_Equals(_76357_dest, _76414_d.get()._field_Kind)))) {
			_1ac15ddd6_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_76357_dest.ptr())),jule::Any(_1a9a05087_Str(_76414_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1ac1b0751_assignTypeChecker> _77521_atc = jule::new_ptr<_1ac1b0751_assignTypeChecker>(_1ac1b0751_assignTypeChecker{._field_s=_self_, ._field_dest=_76357_dest, ._field_d=_76414_d, ._field_errorToken=_76428_errorToken});;
		jule::Bool _78117_ok = _1ac1b18c8_check(_77521_atc.ptr());;
		if ((!(_78117_ok))) {
			return false;
		};
	};
	if (((!(_1ac1c5579_IsConst(_76414_d.ptr()))) || (_1a9a06c9d_Prim(_76357_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79117_kind = _1a9a06c9d_Prim(_76357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ac12a5ab_IsSigInt(_79117_kind)) {
			_case_begin_1b06539c1:;
			{
				_1a99ae371_SetI64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ac12a897_IsUnsigInt(_79117_kind)) {
			_case_begin_1b0653a48:;
			{
				_1a99ae5e6_SetU64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ac12ae5d_IsFloat(_79117_kind)) {
			_case_begin_1b0653ac0:;
			{
				_1a99aed66_SetF64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a99ae0eb_AsF64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1b0653905:;
	};
	return true;
}



inline jule::Bool _1ac164d98_checkTypeCompatibility(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _80547_dest, jule::Ptr<_1a9a04b8b_TypeKind>& _80614_src, jule::Ptr<_1e6a5c800_Token>& _80635_errorToken) {
	if ((_80614_src == nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_80547_dest.ptr())),jule::Any(_1a9a05087_Str(_80614_src.ptr()))}));
		return false;
	};
	if ((_1a9a0893c_Tup(_80614_src.ptr()) != nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_80547_dest.ptr())),jule::Any(_1a9a05087_Str(_80614_src.ptr()))}));
		return false;
	};
	_1ac1adb28_typeCompatibilityChecker _82017_tcc = _1ac1adb28_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_80547_dest, ._field_src=_80614_src, ._field_errorToken=_80635_errorToken};;
	if (_1ac1b0212_check(&_82017_tcc)) {
		return true;
	};
	_1ac15ddd6_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_80547_dest.ptr())),jule::Any(_1a9a05087_Str(_80614_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1ac165272_buildNonGenericTypeKind(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b394b326_TypeDecl>& _84148_ast, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>& _84214_generics) {
	jule::Ptr<_1a9a130ea_typeChecker> _84317_tc = jule::new_ptr<_1a9a130ea_typeChecker>(_1a9a130ea_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a9a20701_Lookup>(_self_, 3), ._field_ignoreGenerics=_84214_generics, });;
	return _1a9a1a366_checkDecl(_84317_tc.ptr(), _84148_ast);
}



inline void _1ac16552a_buildFnNonGenericTypeKinds(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns>& _85151_f) {
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _85217_generics = nullptr;;
	if (_1a99bcdda_IsMethod(_85151_f.get()._field_Decl.ptr())) {
		_85217_generics=jule::append(_85151_f.get()._field_Decl.get()._field_Generics,_85151_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_85217_generics=_85151_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _85151_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b065c579:;
		if (it != expr.end()) {
			jule::Ptr<_1a99be4e6_ParamIns> _85921_p = *it;
			{
				if ((!(_1a99bb504_IsSelf(_85921_p.get()._field_Decl.ptr())))) {
					_85921_p.get()._field_Kind=_1ac165272_buildNonGenericTypeKind(_self_, _85921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_85217_generics);
				};
			}
			_iter_next_1b065c579:;
			++it;
			goto _iter_begin_1b065c579;
		}
		_iter_end_1b065c579:;
	};
	if ((!(_1a99bcb76_IsVoid(_85151_f.get()._field_Decl.ptr())))) {
		_85151_f.get()._field_Result=_1ac165272_buildNonGenericTypeKind(_self_, _85151_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_85217_generics);
	};
}



inline jule::Ptr<_1a99c03b5_FnIns> _1ac165849_getTraitCheckFnKind(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _86944_f) {
	if ((_86944_f.get()._field_Instances.len() == 1LL)) {
		return _86944_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1a99c03b5_FnIns> _87317_ins = _1a99bdb00_instanceForce(_86944_f);;
	jule::Ptr<_1a9a130ea_typeChecker> _87517_tc = jule::new_ptr<_1a9a130ea_typeChecker>(_1a9a130ea_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1a9a20701_Lookup>(_self_, 3), });;
	{
		auto &expr = _87317_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b066113d:;
		if (it != expr.end()) {
			jule::Ptr<_1a99be4e6_ParamIns> _87921_p = *it;
			{
				if ((!(_1a99bb504_IsSelf(_87921_p.get()._field_Decl.ptr())))) {
					_87921_p.get()._field_Kind=_1a9a1a366_checkDecl(_87517_tc.ptr(), _87921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1b066113d:;
			++it;
			goto _iter_begin_1b066113d;
		}
		_iter_end_1b066113d:;
	};
	if ((!(_1a99bcb76_IsVoid(_86944_f.ptr())))) {
		_87317_ins.get()._field_Result=_1a9a1a366_checkDecl(_87517_tc.ptr(), _86944_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _87317_ins;
}



inline jule::Bool _1ac165c9a_checkConstraintsFn(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns>& _89143_f, jule::Ptr<_1e6a5c800_Token>& _89159_et, jule::Ptr<_1a99c03b5_FnIns> _89175_exist) {
	jule::Ptr<_1ac12c624_constraintChecker> _89217_cc = _1ac162912_constraintChecker(_self_);;
	_89217_cc.get()._field_et=_89159_et;
	_89217_cc.get()._field_fi=_89143_f;
	if ((_89175_exist != nullptr)) {
		{
			auto &expr = _89175_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b0664471:;
			if (it != expr.end()) {
				jule::I64 _89618_i = it - expr.begin();
				jule::Ptr<_1a9a0345e_InsGeneric> _89625_g = *it;
				{
					_89143_f.get()._field_Generics[_89618_i].get()._field_Constraint=_89625_g.get()._field_Constraint;
				}
				_iter_next_1b0664471:;
				++it;
				_89618_i++;
				goto _iter_begin_1b0664471;
			}
			_iter_end_1b0664471:;
		};
	} else {
		_89217_cc.get()._field_uniq=true;
	};
	return _1ac12d504_check(_89217_cc);
}



inline jule::Bool _1ac1661eb_checkConstraintsStruct(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _90547_s, jule::Ptr<_1e6a5c800_Token>& _90567_et, jule::Ptr<_1b3967d9d_StructIns> _90583_exist) {
	jule::Ptr<_1ac12c624_constraintChecker> _90617_cc = _1ac162912_constraintChecker(_self_);;
	_90617_cc.get()._field_et=_90567_et;
	_90617_cc.get()._field_si=_90547_s;
	if ((_90583_exist != nullptr)) {
		{
			auto &expr = _90583_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b0667012:;
			if (it != expr.end()) {
				jule::I64 _91018_i = it - expr.begin();
				jule::Ptr<_1a9a0345e_InsGeneric> _91025_g = *it;
				{
					_90547_s.get()._field_Generics[_91018_i].get()._field_Constraint=_91025_g.get()._field_Constraint;
				}
				_iter_next_1b0667012:;
				++it;
				_91018_i++;
				goto _iter_begin_1b0667012;
			}
			_iter_end_1b0667012:;
		};
	} else {
		_90617_cc.get()._field_uniq=true;
	};
	return _1ac12d504_check(_90617_cc);
}



inline jule::Bool _1ac1665a3_fnEnvironment(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns>& _92238_f, jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)> _92249_algo) {
	jule::Ptr<_1ac15b224_Sema> _92317_sema = _92238_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1ac1bee58_SymbolTable> _92417_old = _92238_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1ac15da1d_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92417_old);
	});;
	jule::Ptr<_1ac1bee58_SymbolTable> _92617_file = _1ac15a82d_findFile(_92238_f.get()._field_Decl.get()._field_sema.get()._field_files,_92238_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_92617_file != nullptr)) {
		_1ac15da1d_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92617_file);
	};
	jule::I64 _93117_size = _92238_f.get()._field_Generics.len();;
	if (((_92238_f.get()._field_Decl != nullptr) && (_92238_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_93117_size+=_92238_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _93617_generics = jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>::alloc(0LL,_93117_size);;
	_1ac15a4cb_appendGenericTypeAliases(_93617_generics,_92238_f);
	jule::Bool _93913_ok = _92249_algo(_92317_sema,_93617_generics);;
	if ((_92317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_92317_sema.get()._field_errors);
		_92317_sema.get()._field_errors=nullptr;
	};
	return _93913_ok;
}



inline void _1ac166828_checkFnParamKind(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99be4e6_ParamIns>& _94941_p) {
	_94941_p.get()._field_Kind.get()._field_Variadic=_94941_p.get()._field_Decl.get()._field_Variadic;
	if ((_94941_p.get()._field_Decl.get()._field_Reference && (!(_1a9a1c17b_isValidForRef(_94941_p.get()._field_Kind))))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _94941_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_94941_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1ac166b36_reloadFnInsTypes(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns> _95640_f) {
	if ((_1a99c174b_IsBuiltin(_95640_f.ptr()) || _1a99c19b0_IsAnon(_95640_f.ptr()))) {
		return true;
	};
	return _1ac1665a3_fnEnvironment(_self_, _95640_f,jule::Fn<jule::Bool(jule::Ptr<_1ac15b224_Sema>&,jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>&)>([=](jule::Ptr<_1ac15b224_Sema>& _96043_sema, jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>& _96061_generics) mutable -> jule::Bool {
		jule::Bool _96121_ok = true;;
		{
			auto &expr = _95640_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1b0673491:;
			if (it != expr.end()) {
				jule::Ptr<_1a99be4e6_ParamIns> _96225_p = *it;
				{
					if (_1a99bb504_IsSelf(_96225_p.get()._field_Decl.ptr())) {
						if (_1a99bb768_IsRef(_96225_p.get()._field_Decl.ptr())) {
							_96225_p.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0cde7_Sptr>(_1a9a0cde7_Sptr{._field_Elem=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_95640_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_96225_p.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_95640_f.get()._field_Owner, 0)});
						};
					} else {
						_96225_p.get()._field_Kind=_1ac16321a_buildTypeWithGenerics(_96043_sema, _96225_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
						if ((_96225_p.get()._field_Kind != nullptr)) {
							_1ac166828_checkFnParamKind(_self_, _96225_p);
						} else {
							_96121_ok=false;
						};
					};
				}
				_iter_next_1b0673491:;
				++it;
				goto _iter_begin_1b0673491;
			}
			_iter_end_1b0673491:;
		};
		if ((!(_1a99bcb76_IsVoid(_95640_f.get()._field_Decl.ptr())))) {
			_95640_f.get()._field_Result=_1ac16321a_buildTypeWithGenerics(_96043_sema, _95640_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
			_96121_ok=((_95640_f.get()._field_Result != nullptr) && _96121_ok);
		};
		return _96121_ok;
	}));
}



inline jule::Bool _1ac1670a9_checkRefValidityForInitExpr(jule::Ptr<_1ac15b224_Sema> _self_, jule::Bool _99247_leftMut, jule::Ptr<_1ac1c4bb6_Data>& _99267_d, jule::Ptr<_1e6a5c800_Token>& _99282_errorToken) {
	{
		auto &_match_expr{ _99267_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b0678320:;
			{
				goto _match_end_1b0678056;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
			_case_begin_1b0678386:;
			{
				jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel> _99721_model = _99267_d.get()._field_Model.operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>();;
				if ((!(_1ac159365_isValidModelForRef(_99721_model.get()._field_Expr)))) {
					_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99721_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b06783ec:;
			{
				jule::Ptr<_1a99b739b_StructSubIdentExprModel> _100321_model = _99267_d.get()._field_Model.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>();;
				if ((!(_1ac159365_isValidModelForRef(_100321_model.get()._field_Expr.get()._field_Model)))) {
					_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100321_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7962_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>>()) {
			_case_begin_1b0678b5b:;
			{
				_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
			_case_begin_1b0678bc2:;
			{
				jule::Ptr<_1a99b5674_UnaryExprModel> _101321_unary = _99267_d.get()._field_Model.operator jule::Ptr<_1a99b5674_UnaryExprModel>();;
				if ((_101321_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1ac159365_isValidModelForRef(_99267_d.get()._field_Model)))) {
						_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1b0678056;
				};
				goto _case_begin_1b06781ee;
			}
		}
		else {
			_case_begin_1b06781ee:;
			{
				_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b0678056:;
	};
	if ((_99247_leftMut && (!(_99267_d.get()._field_Mutable)))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1ac167681_checkValidityForInitExpr(jule::Ptr<_1ac15b224_Sema> _self_, jule::Bool _103344_leftMut, jule::Bool _103359_leftRef, jule::Ptr<_1a9a04b8b_TypeKind>& _103410_leftKind, jule::Ptr<_1ac1c4bb6_Data>& _103436_d, jule::Ptr<_1e6a5c800_Token>& _103451_errorToken) {
	if (((_103344_leftMut && (!(_103436_d.get()._field_Mutable))) && _1a9a06088_Mutable(_103436_d.get()._field_Kind.ptr()))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _103451_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_103436_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_103359_leftRef) {
		if ((!(_1ac1670a9_checkRefValidityForInitExpr(_self_, _103344_leftMut,_103436_d,_103451_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1ac1b0751_assignTypeChecker> _104417_atc = jule::new_ptr<_1ac1b0751_assignTypeChecker>(_1ac1b0751_assignTypeChecker{._field_s=_self_, ._field_d=_103436_d, ._field_errorToken=_103451_errorToken});;
	return _1ac1b0e27_checkValidity(_104417_atc.ptr());
}



inline jule::Bool _1ac167a49_checkTypeAliasDeclKind(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a03e98_TypeAlias>& _105247_ta, jule::Trait<_1a9a20701_Lookup> _105267_l) {
	jule::Bool _105280_ok = jule::Bool();
	jule::Ptr<_1ac1bee58_SymbolTable> _105317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1ac15da1d_setCurrentFile(_self_.ptr(), _105317_old);
	});;
	if ((_105247_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1ac1bee58_SymbolTable> _105821_file = _1ac15a82d_findFile(_self_.get()._field_files,_105247_ta.get()._field_Token.get()._field_File);;
		if ((_105821_file != nullptr)) {
			_1ac15da1d_setCurrentFile(_self_.ptr(), _105821_file);
		};
	};
	_105280_ok=_1ac16269d_checkTypeWithRefers(_self_, _105247_ta.get()._field_Kind,_105267_l,nullptr,jule::new_ptr<_1a9a123a2_referencer>(_1a9a123a2_referencer{._field_ident=_105247_ta.get()._field_Ident, ._field_owner=jule::Any(_105247_ta), ._field_refs=(&(_105247_ta.get()._field_Refers))}));
	if (((_105280_ok && (_1a9a079b3_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1a9a079b3_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _105247_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_105280_ok=false;
	};
	return _105280_ok;
}



inline void _1ac167d68_checkTypeAliasDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a03e98_TypeAlias>& _107543_ta, jule::Trait<_1a9a20701_Lookup> _107563_l) {
	if (_1e6a60094_IsIgnoreIdent(_107543_ta.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _107543_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1ac167a49_checkTypeAliasDeclKind(_self_, _107543_ta,_107563_l);
}



inline void _1ac16ce4a_checkTypeAliasDeclDup(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a9a03e98_TypeAlias>& _108346_ta) {
	if (_1e6a60094_IsIgnoreIdent(_108346_ta.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108346_ta)),_108346_ta.get()._field_Ident,_108346_ta.get()._field_CppLinked)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_108346_ta.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ac167a49_checkTypeAliasDeclKind(_self_, _108346_ta,jule::Trait<_1a9a20701_Lookup>(_self_, 3));
}



inline jule::Bool _1ac16d1ae_checkTypeAliasDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _109541_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b068b003:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a03e98_TypeAlias> _109621_ta = *it;
			{
				_1ac16ce4a_checkTypeAliasDeclDup(_self_, _109621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_109541_ok = false;
					return _109541_ok;
				};
			}
			_iter_next_1b068b003:;
			++it;
			goto _iter_begin_1b068b003;
		}
		_iter_end_1b068b003:;
	};
	_109541_ok = true;
	return _109541_ok;
}



inline void _1b069c50e_checkEnumItemsDup(_1ac15b224_Sema* _self_, jule::Slice<jule::Ptr<_1b255334c_EnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1b069d7da:;
		if (it != expr.end()) {
			jule::Ptr<_1b255334c_EnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1b069d7da;
				} else if (_1e6a60094_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1ac15ddd6_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1b069e522:;
						if (it != expr.end()) {
							jule::Ptr<_1b255334c_EnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1b069e522;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1ac15ddd6_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1b069e522;
								};
							}
							_iter_next_1b069e522:;
							++it;
							goto _iter_begin_1b069e522;
						}
						_iter_end_1b069e522:;
					};
				};
			}
			_iter_next_1b069d7da:;
			++it;
			goto _iter_begin_1b069d7da;
		}
		_iter_end_1b069d7da:;
	};
}

inline void _1b06a7eba_checkEnumItemsDup(_1ac15b224_Sema* _self_, jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1b06a9296:;
		if (it != expr.end()) {
			jule::Ptr<_1b2554d76_TypeEnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1b06a9296;
				} else if (_1e6a60094_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1ac15ddd6_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1b06a9ecd:;
						if (it != expr.end()) {
							jule::Ptr<_1b2554d76_TypeEnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1b06a9ecd;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1ac15ddd6_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1b06a9ecd;
								};
							}
							_iter_next_1b06a9ecd:;
							++it;
							goto _iter_begin_1b06a9ecd;
						}
						_iter_end_1b06a9ecd:;
					};
				};
			}
			_iter_next_1b06a9296:;
			++it;
			goto _iter_begin_1b06a9296;
		}
		_iter_end_1b06a9296:;
	};
}



inline void _1ac16d6a9_checkEnumItemsStr(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b2553d42_Enum>& _112742_e) {
	jule::Ptr<_1ac1c6734_Eval> _112817_eval = _1ac16444c_eval(_self_, jule::Trait<_1a9a20701_Lookup>(_self_, 3));;
	{
		auto &expr = _112742_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b068cd07:;
		if (it != expr.end()) {
			jule::Ptr<_1b255334c_EnumItem> _112921_item = *it;
			{
				if (_1b2553737_AutoExpr(_112921_item.ptr())) {
					_112921_item.get()._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Data=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Constant=static__1a99ac36e_NewStr(_112921_item.get()._field_Ident)})});
					_112921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_112921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1ac1c4bb6_Data> _113825_d = _1a99e6342_evalExpr(_112817_eval, _112921_item.get()._field_Value.get()._field_Expr);;
					if ((_113825_d == nullptr)) {
						goto _iter_next_1b068cd07;
					};
					if ((!(_1ac1c5579_IsConst(_113825_d.ptr())))) {
						_1ac15ddd6_pushErr(_self_.ptr(), _112921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1ac164947_checkAssignType(_self_, false,_112742_e.get()._field_Kind.get()._field_Kind,_113825_d,_112921_item.get()._field_Token);
					_112921_item.get()._field_Value.get()._field_Data=_113825_d;
				};
			}
			_iter_next_1b068cd07:;
			++it;
			goto _iter_begin_1b068cd07;
		}
		_iter_end_1b068cd07:;
	};
}



inline void _1ac16d92e_checkEnumItemsInt(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b2553d42_Enum>& _115342_e) {
	jule::Ptr<_1a9a09663_Prim> _115413_prim = _1a9a06c9d_Prim(_115342_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _115517_max = static_cast<jule::U64>(_1ac125760_Max(_1a9a099c6_Str(_115413_prim.ptr())));;
	jule::Ptr<_1ac1c6734_Eval> _115617_eval = _1ac16444c_eval(_self_, jule::Trait<_1a9a20701_Lookup>(_self_, 3));;
	{
		auto &expr = _115342_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b0693291:;
		if (it != expr.end()) {
			jule::I64 _115714_i = it - expr.begin();
			jule::Ptr<_1b255334c_EnumItem> _115721_item = *it;
			{
				if ((_115517_max == 0LLU)) {
					_1ac15ddd6_pushErr(_self_.ptr(), _115721_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_115517_max)--;
				};
				if (_1b2553737_AutoExpr(_115721_item.ptr())) {
					_115721_item.get()._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Data=jule::new_ptr<_1ac1c4bb6_Data>()});
					{
						
						if (_1ac12a5ab_IsSigInt(_1a9a099c6_Str(_115413_prim.ptr()))) {
							_case_begin_1b0695826:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i))))));
							}
						}
						else {
							_case_begin_1b0695480:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a99abe40_NewU64(static_cast<jule::U64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i)))));
							}
						}
						_match_end_1b0695419:;
					};
					_115721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1ac1c4bb6_Data> _117525_d = _1a99e6342_evalExpr(_115617_eval, _115721_item.get()._field_Value.get()._field_Expr);;
					if ((_117525_d == nullptr)) {
						goto _iter_next_1b0693291;
					};
					if ((!(_1ac1c5579_IsConst(_117525_d.ptr())))) {
						_1ac15ddd6_pushErr(_self_.ptr(), _115721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1ac164947_checkAssignType(_self_, false,_115342_e.get()._field_Kind.get()._field_Kind,_117525_d,_115721_item.get()._field_Token);
					_115721_item.get()._field_Value.get()._field_Data=_117525_d;
				};
			}
			_iter_next_1b0693291:;
			++it;
			_115714_i++;
			goto _iter_begin_1b0693291;
		}
		_iter_end_1b0693291:;
	};
}



inline void _1ac16dba4_checkEnumDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b2553d42_Enum>& _118838_e) {
	if (_1e6a60094_IsIgnoreIdent(_118838_e.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118838_e)),_118838_e.get()._field_Ident,false)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118838_e.get()._field_Items.len() == 0LL)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
	};
	_1b069c50e_checkEnumItemsDup(_self_.ptr(), _118838_e.get()._field_Items);
	if ((_118838_e.get()._field_Kind != nullptr)) {
		if ((!(_1ac162cb9_checkType(_self_, _118838_e.get()._field_Kind,jule::Trait<_1a9a20701_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118838_e.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1a9a09663_Prim> _121517_t = _1a9a06c9d_Prim(_118838_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_121517_t == nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a9a0c897_IsStr(_121517_t.ptr())) {
			_case_begin_1b06a3d95:;
			{
				_1ac16d6a9_checkEnumItemsStr(_self_, _118838_e);
			}
		}
		else if (_1ac12ab3e_IsInt(_1a9a099c6_Str(_121517_t.ptr()))) {
			_case_begin_1b06a3adc:;
			{
				_1ac16d92e_checkEnumItemsInt(_self_, _118838_e);
			}
		}
		else {
			_case_begin_1b06a2dc7:;
			{
				_1ac15ddd6_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b06a31a2:;
	};
}



inline void _1ac16de29_checkTypeEnumDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b255543c_TypeEnum>& _123242_e) {
	if (_1e6a60094_IsIgnoreIdent(_123242_e.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123242_e)),_123242_e.get()._field_Ident,false)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123242_e.get()._field_Items.len() == 0LL)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		return;;
	};
	_1b06a7eba_checkEnumItemsDup(_self_.ptr(), _123242_e.get()._field_Items);
	{
		auto &expr = _123242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1b06a895a:;
		if (it != expr.end()) {
			jule::Ptr<_1b2554d76_TypeEnumItem> _124621_item = *it;
			{
				if ((_124621_item.get()._field_Kind == nullptr)) {
					_1ac15ddd6_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1b06a895a;
				};
				jule::Bool _125117_ok = _1ac162cb9_checkType(_self_, _124621_item.get()._field_Kind,jule::Trait<_1a9a20701_Lookup>(_self_, 3));;
				if ((!(_125117_ok))) {
					goto _iter_next_1b06a895a;
				};
				jule::Ptr<_1a9a09663_Prim> _125517_p = _1a9a06c9d_Prim(_124621_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_125517_p != nullptr) && _1a9a0cb0b_IsAny(_125517_p.ptr()))) {
					_1ac15ddd6_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b06a895a:;
			++it;
			goto _iter_begin_1b06a895a;
		}
		_iter_end_1b06a895a:;
	};
	if ((_123242_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1b2554d76_TypeEnumItem> _126121_item = _123242_e.get()._field_Items[0LL];;
		_1a9a04b8b_TypeKind _126217_tk = _1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_123242_e, 4)};;
		if (((_126121_item.get()._field_Kind.get()._field_Kind != nullptr) && _1a9a05395_Equals(_126121_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1a9a04b8b_TypeKind>)((&(_126217_tk))))))) {
			_1ac15ddd6_pushErr(_self_.ptr(), _126121_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1b255576c_Str(_123242_e.ptr()))}));
		};
	};
}



inline jule::Bool _1ac16e18d_checkEnumDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _127236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b06b2942:;
		if (it != expr.end()) {
			jule::Ptr<_1b2553d42_Enum> _127321_e = *it;
			{
				_1ac16dba4_checkEnumDecl(_self_, _127321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_127236_ok = false;
					return _127236_ok;
				};
			}
			_iter_next_1b06b2942:;
			++it;
			goto _iter_begin_1b06b2942;
		}
		_iter_end_1b06b2942:;
	};
	_127236_ok = true;
	return _127236_ok;
}



inline jule::Bool _1ac16e402_checkTypeEnumDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _128440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b06b412a:;
		if (it != expr.end()) {
			jule::Ptr<_1b255543c_TypeEnum> _128521_e = *it;
			{
				_1ac16de29_checkTypeEnumDecl(_self_, _128521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128440_ok = false;
					return _128440_ok;
				};
			}
			_iter_next_1b06b412a:;
			++it;
			goto _iter_begin_1b06b412a;
		}
		_iter_end_1b06b412a:;
	};
	_128440_ok = true;
	return _128440_ok;
}



inline jule::Bool _1ac16e710_checkDeclGenerics(_1ac15b224_Sema* _self_, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>& _129537_generics) {
	jule::Bool _129570_ok = jule::Bool();
	_129570_ok=true;
	{
		auto &expr = _129537_generics;
		auto it = expr.begin();
		_iter_begin_1b06b5967:;
		if (it != expr.end()) {
			jule::I64 _129713_i = it - expr.begin();
			jule::Ptr<_1b395890a_GenericDecl> &_129716_g = *it;
			{
				if (_1e6a60094_IsIgnoreIdent(_129716_g.get()._field_Ident)) {
					_1ac15ddd6_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129570_ok=false;
					goto _iter_next_1b06b5967;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _129537_generics;
					auto it = expr.begin();
					_iter_begin_1b06b6a12:;
					if (it != expr.end()) {
						jule::I64 _130617_j = it - expr.begin();
						jule::Ptr<_1b395890a_GenericDecl> &_130620_ct = *it;
						{
							{
								
								if ((_130617_j >= _129713_i)) {
									_case_begin_1b06b8360:;
									{
										goto _iter_end_1b06b6a12;
									}
								}
								else if ((_129716_g.get()._field_Ident == _130620_ct.get()._field_Ident)) {
									_case_begin_1b06b83d7:;
									{
										_1ac15ddd6_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129716_g.get()._field_Ident)}));
										_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129570_ok=false;
										goto _iter_end_1b06b6a12;
									}
								}
								_match_end_1b06b823e:;
							};
						}
						_iter_next_1b06b6a12:;
						++it;
						_130617_j++;
						goto _iter_begin_1b06b6a12;
					}
					_iter_end_1b06b6a12:;
				};
			}
			_iter_next_1b06b5967:;
			++it;
			_129713_i++;
			goto _iter_begin_1b06b5967;
		}
		_iter_end_1b06b5967:;
	};
	return _129570_ok;
}



inline jule::Bool _1ac16ea1d_checkFnDeclParamsDup(_1ac15b224_Sema* _self_, jule::Ptr<_1a99bc714_Fn>& _132240_f) {
	jule::Bool _132250_ok = jule::Bool();
	_132250_ok=true;
	_julec_label_check:;
	{
		auto &expr = _132240_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b06ba75d:;
		if (it != expr.end()) {
			jule::I64 _132513_i = it - expr.begin();
			jule::Ptr<_1a99badc7_Param> &_132516_p = *it;
			{
				{
					auto &expr = _132240_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b06bb4c8:;
					if (it != expr.end()) {
						jule::Ptr<_1b395890a_GenericDecl> &_132720_g = *it;
						{
							if ((_132516_p.get()._field_Ident == _132720_g.get()._field_Ident)) {
								_132250_ok=false;
								_1ac15ddd6_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
								_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1b06ba75d;
							};
						}
						_iter_next_1b06bb4c8:;
						++it;
						goto _iter_begin_1b06bb4c8;
					}
					_iter_end_1b06bb4c8:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _132240_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b06bb95c:;
					if (it != expr.end()) {
						jule::I64 _133717_j = it - expr.begin();
						jule::Ptr<_1a99badc7_Param> &_133720_jp = *it;
						{
							{
								
								if ((_133717_j >= _132513_i)) {
									_case_begin_1b06bdc5b:;
									{
										goto _iter_end_1b06bb95c;
									}
								}
								else if ((_1e6a6033b_IsAnonIdent(_132516_p.get()._field_Ident) || _1e6a6033b_IsAnonIdent(_133720_jp.get()._field_Ident))) {
									_case_begin_1b06bdcd3:;
									{
										goto _iter_end_1b06bb95c;
									}
								}
								else if ((_132516_p.get()._field_Ident == _133720_jp.get()._field_Ident)) {
									_case_begin_1b06bdd5a:;
									{
										_132250_ok=false;
										_1ac15ddd6_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
										_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1b06ba75d;
									}
								}
								_match_end_1b06bdb29:;
							};
						}
						_iter_next_1b06bb95c:;
						++it;
						_133717_j++;
						goto _iter_begin_1b06bb95c;
					}
					_iter_end_1b06bb95c:;
				};
			}
			_iter_next_1b06ba75d:;
			++it;
			_132513_i++;
			goto _iter_begin_1b06ba75d;
		}
		_iter_end_1b06ba75d:;
	};
	return _132250_ok;
}



inline jule::Bool _1ac16ed2b_checkFnDeclResultDup(_1ac15b224_Sema* _self_, jule::Ptr<_1a99bc714_Fn>& _135640_f) {
	jule::Bool _135650_ok = jule::Bool();
	_135650_ok=true;
	if (_1a99bcb76_IsVoid(_135640_f.ptr())) {
		return _135650_ok;
	};
	{
		auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1b06c192e:;
		if (it != expr.end()) {
			jule::I64 _136313_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> &_136316_v = *it;
			{
				if ((_1e6a60094_IsIgnoreIdent(_136316_v.get()._field_Kind) || _1e6a6033b_IsAnonIdent(_136316_v.get()._field_Kind))) {
					goto _iter_next_1b06c192e;
				};
				{
					auto &expr = _135640_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b06c316c:;
					if (it != expr.end()) {
						jule::Ptr<_1b395890a_GenericDecl> &_136820_g = *it;
						{
							if ((_136316_v.get()._field_Kind == _136820_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b06c316c:;
						++it;
						goto _iter_begin_1b06c316c;
					}
					_iter_end_1b06c316c:;
				};
				{
					auto &expr = _135640_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b06c4404:;
					if (it != expr.end()) {
						jule::Ptr<_1a99badc7_Param> &_137420_p = *it;
						{
							if ((_136316_v.get()._field_Kind == _137420_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b06c4404:;
						++it;
						goto _iter_begin_1b06c4404;
					}
					_iter_end_1b06c4404:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1b06c569c:;
					if (it != expr.end()) {
						jule::I64 _138217_j = it - expr.begin();
						jule::Ptr<_1e6a5c800_Token> &_138220_jv = *it;
						{
							{
								
								if ((_138217_j >= _136313_i)) {
									_case_begin_1b06c6439:;
									{
										goto _iter_end_1b06c569c;
									}
								}
								else if ((_138220_jv.get()._field_Kind == _136316_v.get()._field_Kind)) {
									_case_begin_1b06c64b1:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b06c6318:;
							};
						}
						_iter_next_1b06c569c:;
						++it;
						_138217_j++;
						goto _iter_begin_1b06c569c;
					}
					_iter_end_1b06c569c:;
				};
				goto _iter_next_1b06c192e;
				_julec_label_exist:;
				_1ac15ddd6_pushErr(&(*_self_), _136316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_v.get()._field_Kind)}));
				_1ac15e205_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135650_ok=false;
			}
			_iter_next_1b06c192e:;
			++it;
			_136313_i++;
			goto _iter_begin_1b06c192e;
		}
		_iter_end_1b06c192e:;
	};
	return _135650_ok;
}



inline void _1ac1700a1_checkFnDeclPrototype(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _140345_f) {
	if ((_140345_f.get()._field_Exceptional && _140345_f.get()._field_CppLinked)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_140345_f.get()._field_Exceptional) {
		if (_1a99bd14e_IsEntryPoint(_140345_f.ptr())) {
			_1ac15ddd6_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a99bd3b3_IsInit(_140345_f.ptr())) {
			_1ac15ddd6_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ac16e710_checkDeclGenerics(_self_.ptr(), _140345_f.get()._field_Generics)))) {
			_case_begin_1b06c97a0:;
		}
		else if ((!(_1ac16ea1d_checkFnDeclParamsDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1b06cab36:;
		}
		else if ((!(_1ac16ed2b_checkFnDeclResultDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1b06cab9c:;
		}
		_match_end_1b06c95e6:;
	};
}



inline void _1ac170326_checkTraitDeclMethod(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _142445_f) {
	if (_1e6a60094_IsIgnoreIdent(_142445_f.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _142445_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_142445_f.get()._field_sema=_self_;
	_1ac1700a1_checkFnDeclPrototype(_self_, _142445_f);
	jule::Ptr<_1a99c03b5_FnIns> _143117_ins = _1a99bdd64_instance(_142445_f);;
	_1ac166b36_reloadFnInsTypes(_self_, _143117_ins);
	_143117_ins.get()._field_reloaded=true;
	_1a99be13e_appendInstance(_142445_f.ptr(), _143117_ins);
}



inline void _1ac17059b_checkTraitDeclMethods(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b2551bec_Trait>& _143746_t) {
	{
		auto &expr = _143746_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b06ce211:;
		if (it != expr.end()) {
			jule::I64 _143814_i = it - expr.begin();
			jule::Ptr<_1a99bc714_Fn> _143821_f = *it;
			{
				_1ac170326_checkTraitDeclMethod(_self_, _143821_f);
				_143746_t.get()._field_Mutable=(_143746_t.get()._field_Mutable || _143821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _143746_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b06d0e5a:;
					if (it != expr.end()) {
						jule::I64 _144917_j = it - expr.begin();
						jule::Ptr<_1a99bc714_Fn> _144920_jf = *it;
						{
							{
								
								if ((_144917_j >= _143814_i)) {
									_case_begin_1b06d20e3:;
									{
										goto _iter_end_1b06d0e5a;
									}
								}
								else if ((_143821_f.get()._field_Ident == _144920_jf.get()._field_Ident)) {
									_case_begin_1b06d216a:;
									{
										_1ac15ddd6_pushErr(_self_.ptr(), _143821_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143821_f.get()._field_Ident)}));
										_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1b06d0e5a;
									}
								}
								_match_end_1b06d1ec2:;
							};
						}
						_iter_next_1b06d0e5a:;
						++it;
						_144917_j++;
						goto _iter_begin_1b06d0e5a;
					}
					_iter_end_1b06d0e5a:;
				};
			}
			_iter_next_1b06ce211:;
			++it;
			_143814_i++;
			goto _iter_begin_1b06ce211;
		}
		_iter_end_1b06ce211:;
	};
}



inline void _1ac170821_checkTraitDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b2551bec_Trait>& _146839_t) {
	if (_1e6a60094_IsIgnoreIdent(_146839_t.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146839_t)),_146839_t.get()._field_Ident,false)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146839_t.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ac17059b_checkTraitDeclMethods(_self_, _146839_t);
}



inline jule::Bool _1ac170a85_checkTraitDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _148037_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b06d6119:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> _148121_t = *it;
			{
				_1ac170821_checkTraitDecl(_self_, _148121_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_148037_ok = false;
					return _148037_ok;
				};
			}
			_iter_next_1b06d6119:;
			++it;
			goto _iter_begin_1b06d6119;
		}
		_iter_end_1b06d6119:;
	};
	_148037_ok = true;
	return _148037_ok;
}



inline jule::Bool _1ac170e3c_checkTraitImplMethods(_1ac15b224_Sema* _self_, jule::Ptr<_1b2551bec_Trait>& _149145_base, jule::Ptr<_1ac12e68c_Impl>& _149160_ipl) {
	jule::Bool _149174_ok = jule::Bool();
	_149174_ok=true;
	{
		auto &expr = _149160_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b06d7d96:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> &_149316_f = *it;
			{
				if ((_1b2552a77_FindMethod(_149145_base.ptr(), _149316_f.get()._field_Ident) == nullptr)) {
					_1ac15ddd6_pushErr(&(*_self_), _149316_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_149145_base.get()._field_Ident),jule::Any(_149316_f.get()._field_Ident)}));
					_149174_ok=false;
				};
			}
			_iter_next_1b06d7d96:;
			++it;
			goto _iter_begin_1b06d7d96;
		}
		_iter_end_1b06d7d96:;
	};
	return _149174_ok;
}



inline jule::Bool _1ac1712e4_implToStruct(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _150237_dest, jule::Ptr<_1ac12e68c_Impl>& _150257_ipl) {
	jule::Bool _150271_ok = jule::Bool();
	_150271_ok=true;
	{
		auto &expr = _150257_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b06da1d9:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _150621_f = *it;
			{
				if (((_1b392ae0a_FindMethod(_150237_dest.ptr(), _150621_f.get()._field_Ident,_150621_f.get()._field_Statically) != nullptr) || (_1b392b35b_FindField(_150237_dest.ptr(), _150621_f.get()._field_Ident) != nullptr))) {
					_1ac15ddd6_pushErr(_self_.ptr(), _150621_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_150621_f.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1b06da1d9;
				};
				if (((_150237_dest.get()._field_Generics.len() > 0LL) && (_150621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _150621_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1b06dc7d5:;
						if (it != expr.end()) {
							jule::Ptr<_1b395890a_GenericDecl> _151424_fg = *it;
							{
								{
									auto &expr = _150237_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1b06dd121:;
									if (it != expr.end()) {
										jule::Ptr<_1b395890a_GenericDecl> _151528_dg = *it;
										{
											if ((_151424_fg.get()._field_Ident == _151528_dg.get()._field_Ident)) {
												_1ac15ddd6_pushErr(_self_.ptr(), _151424_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_150271_ok=false;
											};
										}
										_iter_next_1b06dd121:;
										++it;
										goto _iter_begin_1b06dd121;
									}
									_iter_end_1b06dd121:;
								};
							}
							_iter_next_1b06dc7d5:;
							++it;
							goto _iter_begin_1b06dc7d5;
						}
						_iter_end_1b06dc7d5:;
					};
				};
				_1ac15ed2c_checkDirectives(_self_, _150621_f.get()._field_Directives,jule::Any(_150621_f));
				_150621_f.get()._field_sema=_self_;
				_150621_f.get()._field_Owner=_150237_dest;
				_150237_dest.get()._field_Methods = jule::alloc_for_append(_150237_dest.get()._field_Methods,1);_150237_dest.get()._field_Methods.__push(_150621_f);;
			}
			_iter_next_1b06da1d9:;
			++it;
			goto _iter_begin_1b06da1d9;
		}
		_iter_end_1b06da1d9:;
	};
	{
		auto &expr = _150257_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1b06e0013:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _153121_v = *it;
			{
				;
				if (((_1b392ae0a_FindMethod(_150237_dest.ptr(), _153121_v.get()._field_Ident,true) != nullptr) || (_1b392be1c_FindStatic(_150237_dest.ptr(), _153121_v.get()._field_Ident) != nullptr))) {
					_1ac15ddd6_pushErr(_self_.ptr(), _153121_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_153121_v.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1b06e0013;
				};
				_1ac171d83_checkVarDecl(_self_, _153121_v,jule::Trait<_1a9a20701_Lookup>(_self_, 3));
				_1ac1754c4_checkTypeVar(_self_, _153121_v,jule::Trait<_1a9a20701_Lookup>(_self_, 3));
				_150237_dest.get()._field_Statics = jule::alloc_for_append(_150237_dest.get()._field_Statics,1);_150237_dest.get()._field_Statics.__push(_153121_v);;
			}
			_iter_next_1b06e0013:;
			++it;
			goto _iter_begin_1b06e0013;
		}
		_iter_end_1b06e0013:;
	};
	return _150271_ok;
}



inline void _1ac171569_implTrait(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac12e68c_Impl>& _154634_decl) {
	jule::Ptr<_1a9a04b8b_TypeKind> _154717_base_t = _1ac163836_selectType(_self_, _154634_decl.get()._field_Base);;
	if ((_154717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2551bec_Trait> _155117_base = _1a9a08464_Trait(_154717_base_t.ptr());;
	if ((_155117_base == nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _154634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_154717_base_t.ptr()))}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _155817_destT = _1ac163836_selectType(_self_, _154634_decl.get()._field_Dest);;
	if ((_155817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b3967d9d_StructIns> _156217_destS = _1a9a08200_Struct(_155817_destT.ptr());;
	if ((_156217_destS == nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_155817_destT.ptr()))}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b393b9dc_Struct> _156917_dest = _156217_destS.get()._field_Decl;;
	if ((_1e6a63581_Dir(_156917_dest.get()._field_Token.get()._field_File.ptr()) != _1e6a63581_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_155117_base.get()._field_Implemented = jule::alloc_for_append(_155117_base.get()._field_Implemented,1);_155117_base.get()._field_Implemented.__push(_156917_dest);;
	_156917_dest.get()._field_Implements = jule::alloc_for_append(_156917_dest.get()._field_Implements,1);_156917_dest.get()._field_Implements.__push(_155117_base);;
	if ((_154634_decl.get()._field_Statics.len() > 0LL)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _154634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ac170e3c_checkTraitImplMethods(_self_.ptr(), _155117_base,_154634_decl)))) {
			_case_begin_1b06ea947:;
			{
				return;;
			}
		}
		else if ((!(_1ac1712e4_implToStruct(_self_, _156917_dest,_154634_decl)))) {
			_case_begin_1b06ea9ad:;
			{
				return;;
			}
		}
		_match_end_1b06e9b00:;
	};
}



inline void _1ac1717de_implStruct(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac12e68c_Impl>& _159135_decl) {
	jule::Ptr<_1a9a04b8b_TypeKind> _159217_destT = _1ac163836_selectType(_self_, _159135_decl.get()._field_Dest);;
	if ((_159217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b3967d9d_StructIns> _159617_destS = _1a9a08200_Struct(_159217_destT.ptr());;
	if ((_159617_destS == nullptr)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_159217_destT.ptr()))}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b393b9dc_Struct> _160317_dest = _159617_destS.get()._field_Decl;;
	if ((_1e6a63581_Dir(_160317_dest.get()._field_Token.get()._field_File.ptr()) != _1e6a63581_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ac1712e4_implToStruct(_self_, _160317_dest,_159135_decl)))) {
			_case_begin_1b0700540:;
			{
				return;;
			}
		}
		_match_end_1b06edde0:;
	};
}



inline void _1ac171a64_implImpl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac12e68c_Impl>& _161633_decl) {
	{
		
		if (_1ac12ea88_IsTraitImpl(_161633_decl.ptr())) {
			_case_begin_1b0701134:;
			{
				_1ac171569_implTrait(_self_, _161633_decl);
			}
		}
		else if (_1ac12ecec_IsStructImpl(_161633_decl.ptr())) {
			_case_begin_1b07011ab:;
			{
				_1ac1717de_implStruct(_self_, _161633_decl);
			}
		}
		_match_end_1b0701013:;
	};
}



inline void _1ac171d83_checkVarDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac17c960_Var>& _162737_decl, jule::Trait<_1a9a20701_Lookup> _162753_l) {
	if (_1e6a60094_IsIgnoreIdent(_162737_decl.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1ac17d07b_IsTypeInferred(_162737_decl.ptr())) {
		if ((!(_1ac17cd17_IsInitialized(_162737_decl.ptr())))) {
			_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1ac162cb9_checkType(_self_, _162737_decl.get()._field_Kind,_162753_l);
	};
	if ((_162737_decl.get()._field_Constant && _162737_decl.get()._field_Reference)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1ac17cd17_IsInitialized(_162737_decl.ptr())))) {
		if (_162737_decl.get()._field_Constant) {
			_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Statically) {
			_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Reference) {
			_1ac15ddd6_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1ac172108_checkGlobalVarDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac17c960_Var>& _165943_decl) {
	if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165943_decl)),_165943_decl.get()._field_Ident,_165943_decl.get()._field_CppLinked)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165943_decl.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165943_decl.get()._field_CppLinked && _165943_decl.get()._field_Constant)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165943_decl.get()._field_CppLinked)) && (!(_165943_decl.get()._field_Constant))) && (!(_165943_decl.get()._field_Statically)))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1ac15ed2c_checkDirectives(_self_, _165943_decl.get()._field_Directives,jule::Any(_165943_decl));
	_1ac171d83_checkVarDecl(_self_, _165943_decl,jule::Trait<_1a9a20701_Lookup>(_self_, 3));
}



inline jule::Bool _1ac17236c_checkGlobalDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _167638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b070ab44:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _167721_decl = *it;
			{
				_1ac172108_checkGlobalVarDecl(_self_, _167721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167638_ok = false;
					return _167638_ok;
				};
			}
			_iter_next_1b070ab44:;
			++it;
			goto _iter_begin_1b070ab44;
		}
		_iter_end_1b070ab44:;
	};
	_167638_ok = true;
	return _167638_ok;
}



inline jule::Bool _1ac172724_checkStructTraitImpl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _168745_strct, jule::Ptr<_1b2551bec_Trait>& _168766_trt) {
	jule::Bool _168781_ok = jule::Bool();
	{
		auto &expr = _168766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b070c66d:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _168821_tf = *it;
			{
				jule::Bool _168921_exist = false;;
				jule::Ptr<_1a99bc714_Fn> _169021_sf = _1b392ae0a_FindMethod(_168745_strct.ptr(), _168821_tf.get()._field_Ident,_168821_tf.get()._field_Statically);;
				jule::Ptr<_1a99c03b5_FnIns> _169117_tfK = _1ac165849_getTraitCheckFnKind(_self_, _168821_tf);;
				if ((_169021_sf != nullptr)) {
					jule::Ptr<_1a99c03b5_FnIns> _169325_sfK = _1ac165849_getTraitCheckFnKind(_self_, _169021_sf);;
					_168921_exist=(((_169117_tfK.get()._field_Decl.get()._field_Public == _169325_sfK.get()._field_Decl.get()._field_Public) && (_169117_tfK.get()._field_Decl.get()._field_Ident == _169325_sfK.get()._field_Decl.get()._field_Ident)) && _1a99c1273_equalsTrait(_169117_tfK, _169325_sfK));
				};
				if (_168921_exist) {
					jule::Ptr<_1b3917b2d_Directive> _169921_d = _1a99ee339_findDirective(_169021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_169921_d != nullptr)) {
						_1ac15ddd6_pushErr(_self_.ptr(), _169921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168781_ok=false;
				} else {
					;
					jule::Str _170625_s = _1a99c20cb_GetKindStr(_169117_tfK.ptr(), true);;
					if (_168821_tf.get()._field_Public) {
						(_170625_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1ac15ddd6_pushErr(_self_.ptr(), _168745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168766_trt.get()._field_Ident),jule::Any(_170625_s)}));
					_168781_ok=false;
				};
			}
			_iter_next_1b070c66d:;
			++it;
			goto _iter_begin_1b070c66d;
		}
		_iter_end_1b070c66d:;
	};
	return _168781_ok;
}



inline jule::Bool _1ac172a32_checkStructImpls(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _171741_s) {
	jule::Bool _171755_ok = jule::Bool();
	_171755_ok=true;
	{
		auto &expr = _171741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1b07142e0:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> _171921_trt = *it;
			{
				_171755_ok=(_1ac172724_checkStructTraitImpl(_self_, _171741_s,_171921_trt) && _171755_ok);
			}
			_iter_next_1b07142e0:;
			++it;
			goto _iter_begin_1b07142e0;
		}
		_iter_end_1b07142e0:;
	};
	return _171755_ok;
}



inline jule::Bool _1ac172d40_checkStructFields(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _172542_st) {
	jule::Bool _172557_ok = jule::Bool();
	_172557_ok=true;
	{
		auto &expr = _172542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b0715731:;
		if (it != expr.end()) {
			jule::Ptr<_1b392dea7_Field> _172721_f = *it;
			{
				_172721_f.get()._field_Owner=_172542_st;
				{
					auto &expr = _172542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1b0716325:;
					if (it != expr.end()) {
						jule::Ptr<_1b392dea7_Field> _172920_cf = *it;
						{
							if ((_172721_f == _172920_cf)) {
								goto _iter_end_1b0716325;
							} else if ((_172721_f.get()._field_Ident == _172920_cf.get()._field_Ident)) {
								_1ac15ddd6_pushErr(_self_.ptr(), _172721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172721_f.get()._field_Ident)}));
								_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172557_ok=false;
							};
						}
						_iter_next_1b0716325:;
						++it;
						goto _iter_begin_1b0716325;
					}
					_iter_end_1b0716325:;
				};
			}
			_iter_next_1b0715731:;
			++it;
			goto _iter_begin_1b0715731;
		}
		_iter_end_1b0715731:;
	};
	return _172557_ok;
}



inline void _1ac1730b5_checkStructDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _174240_s) {
	if (_1e6a60094_IsIgnoreIdent(_174240_s.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174240_s)),_174240_s.get()._field_Ident,_174240_s.get()._field_CppLinked)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174240_s.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ac15ed2c_checkDirectives(_self_, _174240_s.get()._field_Directives,jule::Any(_174240_s));
	{
		
		if ((!(_1ac16e710_checkDeclGenerics(_self_.ptr(), _174240_s.get()._field_Generics)))) {
			_case_begin_1b071a25d:;
		}
		else if ((!(_1ac172d40_checkStructFields(_self_, _174240_s)))) {
			_case_begin_1b071a2c4:;
		}
		else if ((!(_1ac172a32_checkStructImpls(_self_, _174240_s)))) {
			_case_begin_1b071a33a:;
		}
		_match_end_1b071a11a:;
	};
}



inline jule::Bool _1ac173329_checkStructDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _176038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b071b627:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _176121_s = *it;
			{
				_1ac1730b5_checkStructDecl(_self_, _176121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176038_ok = false;
					return _176038_ok;
				};
			}
			_iter_next_1b071b627:;
			++it;
			goto _iter_begin_1b071b627;
		}
		_iter_end_1b071b627:;
	};
	_176038_ok = true;
	return _176038_ok;
}



inline void _1ac17359e_checkFnDecl(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _177136_f) {
	if (_1e6a60094_IsIgnoreIdent(_177136_f.get()._field_Ident)) {
		_1ac15ddd6_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1ac15ed2c_checkDirectives(_self_, _177136_f.get()._field_Directives,jule::Any(_177136_f));
	_177136_f.get()._field_sema=_self_;
	_1ac1700a1_checkFnDeclPrototype(_self_, _177136_f);
	if (_1ac15ea0d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177136_f)),_177136_f.get()._field_Ident,_177136_f.get()._field_CppLinked)) {
		if ((_177136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1a99bc714_Fn> _178321_init = _1ac15ca1c_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178321_init != nullptr)) {
				return;;
			};
		};
		_1ac15ddd6_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177136_f.get()._field_Ident)}));
		_1ac15e205_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac173813_checkFnDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	jule::Bool _179434_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b072184c:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _179521_f = *it;
			{
				_1ac17359e_checkFnDecl(_self_, _179521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179434_ok = false;
					return _179434_ok;
				};
			}
			_iter_next_1b072184c:;
			++it;
			goto _iter_begin_1b072184c;
		}
		_iter_end_1b072184c:;
	};
	_179434_ok = true;
	return _179434_ok;
}



inline void _1ac173bcb_pushCycleError(_1ac15b224_Sema* _self_, jule::Ptr<_1b393b9dc_Struct>& _180530_st1, jule::Ptr<_1b393b9dc_Struct>& _180545_st2, jule::Str& _180564_message) {
	;
	jule::Str _180713_refers_to = _1e6736375_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_180530_st1.get()._field_Ident),jule::Any(_180545_st2.get()._field_Ident)}));;
	(_180564_message).buffer.insert(0, (((_1e6646340_Repeat(jule::Str(" ", 1),4LL) + _180713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ac17412c_checkCrossCycle(_1ac15b224_Sema* _self_, jule::Ptr<_1b393b9dc_Struct>& _181131_st1, jule::Ptr<_1b393b9dc_Struct>& _181146_st2, jule::Str& _181165_message) {
	{
		auto &expr = _181146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1b0724de4:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> &_181216_u = *it;
			{
				if ((_181216_u == _181131_st1)) {
					_1ac173bcb_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
				if ((!(_1ac17412c_checkCrossCycle(&(*_self_), _181131_st1,_181216_u,_181165_message)))) {
					_1ac173bcb_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
			}
			_iter_next_1b0724de4:;
			++it;
			goto _iter_begin_1b0724de4;
		}
		_iter_end_1b0724de4:;
	};
	return true;
}



inline jule::Bool _1ac1745a0_checkStructDeriveIllegalCycles(_1ac15b224_Sema* _self_, jule::Str _182649_derive, jule::Ptr<_1b393b9dc_Struct>& _182663_st1, jule::Ptr<_1a9a04b8b_TypeKind>& _182682_k) {
	jule::Bool _182698_ok = jule::Bool();
	jule::Ptr<_1b393b9dc_Struct> _182717_st2 = _1a9a1cd19_getStructFromKind(_182682_k);;
	if ((_182717_st2 == nullptr)) {
		_182698_ok = true;
		return _182698_ok;
	};
	if ((_182663_st1 == _182717_st2)) {
		_1ac15ddd6_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_182663_st1.get()._field_Ident)}));
		_182698_ok = false;
		return _182698_ok;
	};
	jule::Str _183917_message = jule::Str();;
	if ((!(_1ac17412c_checkCrossCycle(&(*_self_), _182663_st1,_182717_st2,_183917_message)))) {
		jule::Str _184121_errMsg = _183917_message;;
		_183917_message=jule::Str();
		_1ac173bcb_pushCycleError(&(*_self_), _182663_st1,_182717_st2,_183917_message);
		_184121_errMsg=(_184121_errMsg + _183917_message);
		_1ac15ddd6_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_184121_errMsg)}));
		_182698_ok = false;
		return _182698_ok;
	};
	_182698_ok = true;
	return _182698_ok;
}



inline jule::Bool _1ac1748e1_checkStructInsDeriveClone(_1ac15b224_Sema* _self_, jule::Ptr<_1b3967d9d_StructIns> _185148_st) {
	jule::Bool _185166_ok = jule::Bool();
	if ((!(_1b392ca44_IsDerives(_185148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_185166_ok = true;
		return _185166_ok;
	};
	{
		auto &expr = _185148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b072b637:;
		if (it != expr.end()) {
			jule::Ptr<_1b3944154_FieldIns> _185521_f = *it;
			{
				if ((_185521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b072b637;
				};
				if ((!(_1a9a067c5_SupportsCloning(_185521_f.get()._field_Kind.ptr())))) {
					_1ac15ddd6_pushErr(&(*_self_), _185148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_185521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_185166_ok = false;
					return _185166_ok;
				};
				if ((!(_1ac1745a0_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_185148_st.get()._field_Decl,_185521_f.get()._field_Kind)))) {
					_185166_ok = false;
					return _185166_ok;
				};
			}
			_iter_next_1b072b637:;
			++it;
			goto _iter_begin_1b072b637;
		}
		_iter_end_1b072b637:;
	};
	_185166_ok = true;
	return _185166_ok;
}



inline void _1ac174acd_checkPackageDecls(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b072bc31:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _187321_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _187321_f);
				if ((!(_1ac16e402_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1ac16d1ae_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b072bc31:;
			++it;
			goto _iter_begin_1b072bc31;
		}
		_iter_end_1b072bc31:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b072e2b6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _188321_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _188321_f);
				if ((!(_1ac170a85_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b072e2b6:;
			++it;
			goto _iter_begin_1b072e2b6;
		}
		_iter_end_1b072e2b6:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b07303d8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _189021_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _189021_f);
				if ((!(_1ac17236c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b07303d8:;
			++it;
			goto _iter_begin_1b07303d8;
		}
		_iter_end_1b07303d8:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ae8c237d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _189721_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _189721_f);
				{
					
					if ((!(_1ac173813_checkFnDecls(_self_)))) {
						_case_begin_1ae8e16aa:;
					}
					else if ((!(_1ac173329_checkStructDecls(_self_)))) {
						_case_begin_1ae8e2018:;
					}
					else {
						_case_begin_1ae8e1ea2:;
						{
							goto _iter_next_1ae8c237d;
						}
					}
					_match_end_1ae8e1e4c:;
				};
				return;;
			}
			_iter_next_1ae8c237d:;
			++it;
			goto _iter_begin_1ae8c237d;
		}
		_iter_end_1ae8c237d:;
	};
}



inline void _1ac174e1e_checkDataForTypeInference(_1ac15b224_Sema* _self_, jule::Ptr<_1ac1c4bb6_Data>& _190945_d, jule::Ptr<_1e6a5c800_Token>& _190956_err_token) {
	{
		
		if (_1ac1c50a1_IsNil(_190945_d.ptr())) {
			_case_begin_1ae8e2db5:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _190956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1ac1c5315_IsVoid(_190945_d.ptr())) {
			_case_begin_1ae8e2e2b:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _190956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1ae8e2e92:;
			{
				_1ac15ddd6_pushErr(&(*_self_), _190956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ae8e2d0a:;
	};
}



inline void _1ac1751a5_checkVar(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac17c960_Var>& _192033_v) {
	if (_192033_v.get()._field_CppLinked) {
		return;;
	};
	if (_1ac17d07b_IsTypeInferred(_192033_v.ptr())) {
		_192033_v.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1ac174e1e_checkDataForTypeInference(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1ac167681_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1a9a109ee_Arr> _193721_arr = _1a9a079b3_Arr(_192033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_193721_arr != nullptr)) {
			if (_193721_arr.get()._field_Auto) {
				jule::Ptr<_1a9a109ee_Arr> _194025_dataArr = _1a9a079b3_Arr(_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_194025_dataArr != nullptr)) {
					_193721_arr.get()._field_N=_194025_dataArr.get()._field_N;
				};
			};
		};
		if (_1ac164947_checkAssignType(_self_, _192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1ac167681_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_192033_v.get()._field_Reference && (!(_1a9a1c17b_isValidForRef(_192033_v.get()._field_Kind.get()._field_Kind))))) {
		_1ac15ddd6_pushErr(_self_.ptr(), _192033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_192033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_192033_v.get()._field_Constant) {
		if ((!(_1ac1c5579_IsConst(_192033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1ac15ddd6_pushErr(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_192033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1a9a0893c_Tup(_192033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_192033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1ac1754c4_checkTypeVar(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1ac17c960_Var>& _197537_decl, jule::Trait<_1a9a20701_Lookup> _197553_l) {
	if ((_197537_decl.get()._field_CppLinked || (!(_1ac17cd17_IsInitialized(_197537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1ac1c6734_Eval> _198017_eval = nullptr;;
	if ((_197537_decl.get()._field_Kind != nullptr)) {
		_198017_eval=_1ac163c87_evalpd(_self_, _197553_l,_197537_decl.get()._field_Kind.get()._field_Kind,_197537_decl);
	} else {
		_198017_eval=_1ac163c87_evalpd(_self_, _197553_l,nullptr,_197537_decl);
	};
	_198017_eval.get()._field_immutable=(!(_197537_decl.get()._field_Mutable));
	_197537_decl.get()._field_Value.get()._field_Data=_1a99e6342_evalExpr(_198017_eval, _197537_decl.get()._field_Value.get()._field_Expr);
	if ((_197537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1ac1751a5_checkVar(_self_, _197537_decl);
}



inline void _1ac1756a0_checkGlobalTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b0157be0:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _199621_decl = *it;
			{
				if (((_1ac17cd17_IsInitialized(_199621_decl.ptr()) && (_199621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1ac17d07b_IsTypeInferred(_199621_decl.ptr()) && (_199621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1ac1754c4_checkTypeVar(_self_, _199621_decl,jule::Trait<_1a9a20701_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b0157be0:;
			++it;
			goto _iter_begin_1b0157be0;
		}
		_iter_end_1b0157be0:;
	};
}



inline jule::Ptr<_1a99c03b5_FnIns> _1ac175a57_readyToCheckFn(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _200739_s, jule::Ptr<_1a99bc714_Fn>& _200759_f) {
	jule::Ptr<_1a99c03b5_FnIns> _200817_ins = _1a99bdd64_instance(_200759_f);;
	if ((_200759_f.get()._field_Instances.len() != 0LL)) {
		return _200817_ins;
	};
	_200817_ins.get()._field_Owner=_200739_s;
	_1a99be13e_appendInstance(_200759_f.ptr(), _200817_ins);
	_200817_ins.get()._field_reloaded=true;
	if (_1ac166b36_reloadFnInsTypes(_self_, _200817_ins)) {
		return _200817_ins;
	};
	return nullptr;
}



inline void _1ac175d76_checkTypeMethod(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _202140_s, jule::Ptr<_1a99bc714_Fn>& _202160_f) {
	if ((_202160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a99c03b5_FnIns> _202617_ins = _202160_f.get()._field_Instances[0LL];;
	if ((_202617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ac17854e_checkFnIns(_self_, _202617_ins);
}



inline jule::Ptr<_1a99c03b5_FnIns> _1ac1762c7_checkStructInsOp(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _203441_s, jule::Ptr<_1a99bc714_Fn>& _203461_f, jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)> _203469_p) {
	if ((((_203461_f == nullptr) || (_203461_f.get()._field_Generics.len() > 0LL)) || (!(_203469_p(_203461_f))))) {
		return nullptr;
	};
	return _203461_f.get()._field_Instances[0LL];
}



inline jule::Bool _1ac17667e_checkStructEnv(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _204439_s, jule::Ptr<_1e6a5c800_Token> _204458_errorToken) {
	jule::Bool _204480_ok = jule::Bool();
	_1a9a130ea_typeChecker _204517_tc = _1a9a130ea_typeChecker{._field_s=_204439_s.get()._field_Decl.get()._field_sema, ._field_lookup=jule::Trait<_1a9a20701_Lookup>(_204439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1a9a123a2_referencer>(_1a9a123a2_referencer{._field_ident=_204439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_204439_s.get()._field_Decl), }), ._field_refers=_204439_s.get()._field_Refers, };;
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		_204517_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>::alloc(0LL,_204439_s.get()._field_Generics.len());
		{
			auto &expr = _204439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b0162018:;
			if (it != expr.end()) {
				jule::I64 _205718_i = it - expr.begin();
				jule::Ptr<_1a9a0345e_InsGeneric> _205725_g = *it;
				{
					_204517_tc._field_useGenerics = jule::alloc_for_append(_204517_tc._field_useGenerics,1);_204517_tc._field_useGenerics.__push(jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Ident=_204439_s.get()._field_Decl.get()._field_Generics[_205718_i].get()._field_Ident, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_205725_g.get()._field_Kind}), }));;
				}
				_iter_next_1b0162018:;
				++it;
				_205718_i++;
				goto _iter_begin_1b0162018;
			}
			_iter_end_1b0162018:;
		};
	};
	jule::Ptr<_1ac1bee58_SymbolTable> _206517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1ac15da1d_setCurrentFile(_self_.ptr(), _206517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _204439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1ac1bee58_SymbolTable> _206921_file = _1ac15a82d_findFile(_self_.get()._field_files,_204439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_206921_file != nullptr)) {
			_1ac15da1d_setCurrentFile(_self_.ptr(), _206921_file);
		};
	};
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ac12c624_constraintChecker> _207621_cc = _1ac162912_constraintChecker(_self_);;
		_207621_cc.get()._field_et=_204458_errorToken;
		_207621_cc.get()._field_si=_204439_s;
		_207621_cc.get()._field_genericsA=_204517_tc._field_useGenerics;
		_207621_cc.get()._field_uniq=true;
		if ((!(_1ac12d504_check(_207621_cc)))) {
			return _204480_ok;
		};
	};
	jule::Ptr<_1ac1c6734_Eval> _208617_eval = _1ac16444c_eval(_self_, jule::Trait<_1a9a20701_Lookup>(_self_, 3));;
	_204480_ok=true;
	{
		auto &expr = _204439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b0167edb:;
		if (it != expr.end()) {
			jule::Ptr<_1b3944154_FieldIns> _208821_f = *it;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _208921_kind = _1a9a1a366_checkDecl(&_204517_tc, _208821_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_204480_ok=((_208921_kind != nullptr) && _204480_ok);
				if ((_208921_kind == nullptr)) {
					if (((_self_ != _204439_s.get()._field_Decl.get()._field_sema) && (_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b0167edb;
				};
				_208821_f.get()._field_Kind=_208921_kind;
				_204439_s.get()._field_Mutable=(_204439_s.get()._field_Mutable || ((!(_208821_f.get()._field_Decl.get()._field_Mutable)) && _1a9a06088_Mutable(_208821_f.get()._field_Kind.ptr())));
				_1ac1748e1_checkStructInsDeriveClone(_self_.ptr(), _204439_s);
				if ((_208821_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b0167edb;
				};
				_208617_eval.get()._field_prefix=_208821_f.get()._field_Kind;
				_208617_eval.get()._field_field=_208821_f;
				_208821_f.get()._field_Default=_1a99e6342_evalExpr(_208617_eval, _208821_f.get()._field_Decl.get()._field_Default);
				if ((_208821_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b0167edb;
				};
				;
				_1ac164947_checkAssignType(_self_, false,_208821_f.get()._field_Kind,_208821_f.get()._field_Default,_208821_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b0167edb:;
			++it;
			goto _iter_begin_1b0167edb;
		}
		_iter_end_1b0167edb:;
	};
	return _204480_ok;
}



inline jule::Bool _1ac176a36_precheckStructIns(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _212242_s, jule::Ptr<_1e6a5c800_Token> _212261_errorToken) {
	jule::Bool _212283_ok = jule::Bool();
	_212283_ok=_1ac17667e_checkStructEnv(_self_, _212242_s,_212261_errorToken);
	if ((!(_212283_ok))) {
		_212283_ok = false;
		return _212283_ok;
	};
	{
		auto &expr = _212242_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b016e982:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _212721_f = *it;
			{
				if ((_212721_f.get()._field_Generics.len() == 0LL)) {
					if ((_1ac175a57_readyToCheckFn(_self_, _212242_s,_212721_f) == nullptr)) {
						_212283_ok = false;
						return _212283_ok;
					};
				};
			}
			_iter_next_1b016e982:;
			++it;
			goto _iter_begin_1b016e982;
		}
		_iter_end_1b016e982:;
	};
	_212283_ok = true;
	return _212283_ok;
}



inline void _1ac176cab_checkStructIns(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns>& _213739_s) {
	{
		auto &expr = _213739_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b0171533:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _213821_f = *it;
			{
				_1ac175d76_checkTypeMethod(_self_, _213739_s,_213821_f);
			}
			_iter_next_1b0171533:;
			++it;
			goto _iter_begin_1b0171533;
		}
		_iter_end_1b0171533:;
	};
}



inline void _1ac177031_checkTypeStruct(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _214340_s) {
	if (_214340_s.get()._field_CppLinked) {
		return;;
	};
	if ((_214340_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _214340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b0172a40:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _215621_ins = *it;
			{
				_1ac176cab_checkStructIns(_self_, _215621_ins);
			}
			_iter_next_1b0172a40:;
			++it;
			goto _iter_begin_1b0172a40;
		}
		_iter_end_1b0172a40:;
	};
}



inline void _1ac17720c_checkStructTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b0173656:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _216221_s = *it;
			{
				_1ac177031_checkTypeStruct(_self_, _216221_s);
			}
			_iter_next_1b0173656:;
			++it;
			goto _iter_begin_1b0173656;
		}
		_iter_end_1b0173656:;
	};
}



inline void _1ac1774a4_checkStructInsOperators(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b3967d9d_StructIns> _216747_s) {
	{
		auto &expr = _216747_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b01749a9:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _216821_m = *it;
			{
				{
					auto &_match_expr{ _216821_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b0175735:;
						{
							_216747_s.get()._field_Operators._field_Eq=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _217165_f) mutable -> jule::Bool {
								return static__1ac17e489_Eq(_217165_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b017579b:;
						{
							_216747_s.get()._field_Operators._field_Gt=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _217365_f) mutable -> jule::Bool {
								return static__1ac17e731_Gt(_217365_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b0175823:;
						{
							_216747_s.get()._field_Operators._field_GtEq=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _217567_f) mutable -> jule::Bool {
								return static__1ac17e9c8_GtEq(_217567_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b017589a:;
						{
							_216747_s.get()._field_Operators._field_Lt=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _217765_f) mutable -> jule::Bool {
								return static__1ac17ec70_Lt(_217765_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b0175922:;
						{
							_216747_s.get()._field_Operators._field_LtEq=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _217967_f) mutable -> jule::Bool {
								return static__1ac180017_LtEq(_217967_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b0175999:;
						{
							_216747_s.get()._field_Operators._field_Shl=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _218166_f) mutable -> jule::Bool {
								return static__1ac180600_Shl(_218166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b0175a21:;
						{
							_216747_s.get()._field_Operators._field_Shr=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _218366_f) mutable -> jule::Bool {
								return static__1ac180897_Shr(_218366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b0175a98:;
						{
							_216747_s.get()._field_Operators._field_Add=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _218566_f) mutable -> jule::Bool {
								return static__1ac180b3e_Add(_218566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b0175b20:;
						{
							_216747_s.get()._field_Operators._field_Sub=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _218766_f) mutable -> jule::Bool {
								return static__1ac180dd6_Sub(_218766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b0175b97:;
						{
							_216747_s.get()._field_Operators._field_Div=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _218966_f) mutable -> jule::Bool {
								return static__1ac18117d_Div(_218966_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b0175c1e:;
						{
							_216747_s.get()._field_Operators._field_Mul=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _219166_f) mutable -> jule::Bool {
								return static__1ac181425_Mul(_219166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b0175c96:;
						{
							_216747_s.get()._field_Operators._field_Mod=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _219366_f) mutable -> jule::Bool {
								return static__1ac1816bc_Mod(_219366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b0175d1d:;
						{
							_216747_s.get()._field_Operators._field_BitAnd=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _219569_f) mutable -> jule::Bool {
								return static__1ac181964_BitAnd(_219569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b0175d95:;
						{
							_216747_s.get()._field_Operators._field_BitOr=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _219768_f) mutable -> jule::Bool {
								return static__1ac181c0b_BitOr(_219768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b0175e1c:;
						{
							_216747_s.get()._field_Operators._field_BitXor=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _219969_f) mutable -> jule::Bool {
								return static__1ac181ea3_BitXor(_219969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b0175e94:;
						{
							_216747_s.get()._field_Operators._field_Neg=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _220166_f) mutable -> jule::Bool {
								return static__1ac18258b_Neg(_220166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b017601b:;
						{
							_216747_s.get()._field_Operators._field_Pos=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _220366_f) mutable -> jule::Bool {
								return static__1ac182833_Pos(_220366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b0176093:;
						{
							_216747_s.get()._field_Operators._field_BitNot=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _220569_f) mutable -> jule::Bool {
								return static__1ac182aca_BitNot(_220569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b017611a:;
						{
							_216747_s.get()._field_Operators._field_AddAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _220772_f) mutable -> jule::Bool {
								return static__1ac1831b3_AddAssign(_220772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b0176192:;
						{
							_216747_s.get()._field_Operators._field_SubAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _220972_f) mutable -> jule::Bool {
								return static__1ac18345a_SubAssign(_220972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b0176219:;
						{
							_216747_s.get()._field_Operators._field_DivAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _221172_f) mutable -> jule::Bool {
								return static__1ac183702_DivAssign(_221172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b0176291:;
						{
							_216747_s.get()._field_Operators._field_MulAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _221372_f) mutable -> jule::Bool {
								return static__1ac183999_MulAssign(_221372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b0176318:;
						{
							_216747_s.get()._field_Operators._field_ModAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _221572_f) mutable -> jule::Bool {
								return static__1ac183c41_ModAssign(_221572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b0176390:;
						{
							_216747_s.get()._field_Operators._field_ShlAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _221772_f) mutable -> jule::Bool {
								return static__1ac183ed8_ShlAssign(_221772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b0176417:;
						{
							_216747_s.get()._field_Operators._field_ShrAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _221972_f) mutable -> jule::Bool {
								return static__1ac184280_ShrAssign(_221972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b017648e:;
						{
							_216747_s.get()._field_Operators._field_BitOrAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _222174_f) mutable -> jule::Bool {
								return static__1ac184527_BitOrAssign(_222174_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b0176516:;
						{
							_216747_s.get()._field_Operators._field_BitAndAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _222375_f) mutable -> jule::Bool {
								return static__1ac1847be_BitAndAssign(_222375_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b017658d:;
						{
							_216747_s.get()._field_Operators._field_BitXorAssign=_1ac1762c7_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1a99bc714_Fn>)>([=](jule::Ptr<_1a99bc714_Fn> _222575_f) mutable -> jule::Bool {
								return static__1ac184a66_BitXorAssign(_222575_f);
							}));
						}
					}
					_match_end_1b0175317:;
				};
			}
			_iter_next_1b01749a9:;
			++it;
			goto _iter_begin_1b01749a9;
		}
		_iter_end_1b01749a9:;
	};
}



inline void _1ac17773a_precheckStructType(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1b393b9dc_Struct>& _223043_s) {
	if (_223043_s.get()._field_CppLinked) {
		return;;
	};
	if ((_223043_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_223043_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b3967d9d_StructIns> _224121_ins = _1b3923de2_instance(_223043_s);;
		_224121_ins.get()._field_Checked=true;
		_1b392815a_appendInstance(_223043_s.ptr(), _224121_ins);
		_1ac176a36_precheckStructIns(_self_, _224121_ins,nullptr);
	};
	_1ac1774a4_checkStructInsOperators(_self_, _223043_s.get()._field_Instances[0LL]);
}



inline void _1ac177916_precheckStructTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b01a17b6:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _225121_s = *it;
			{
				_1ac17773a_precheckStructType(_self_, _225121_s);
			}
			_iter_next_1b01a17b6:;
			++it;
			goto _iter_begin_1b01a17b6;
		}
		_iter_end_1b01a17b6:;
	};
}



inline void _1ac177b8b_checkRets(_1ac15b224_Sema* _self_, jule::Ptr<_1a99c03b5_FnIns>& _225633_f) {
	if (_1a99bcb76_IsVoid(_225633_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1ac179d36_missingRetChecker _226013_mrc = static__1ac17a1ee_new();;
	jule::Bool _226113_ok = _1ac17b211_check(&_226013_mrc, _225633_f.get()._field_Scope);;
	if ((!(_226113_ok))) {
		_1ac15ddd6_pushErr(&(*_self_), _225633_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1ac177eaa_checkFnInsSc(_1ac15b224_Sema* _self_, jule::Ptr<_1a99c03b5_FnIns>& _226736_f, jule::Ptr<_1ac13b358_scopeChecker>& _226752_sc) {
	_1ac159e48_appendRetVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1ac15a201_appendParamVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1ac15a4cb_appendGenericTypeAliases(_226752_sc.get()._field_table.get()._field_TypeAliases,_226736_f);
	_1ac14b621_check(_226752_sc, _226736_f.get()._field_Decl.get()._field_Scope,_226736_f.get()._field_Scope);
	if ((!(_1ac13de93_stopped(_226752_sc.ptr())))) {
		_1ac177b8b_checkRets(&(*_self_), _226736_f);
	};
}



inline void _1ac1782c9_checkFnInsCaller(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns>& _228041_f, jule::Ptr<_1e6a5c800_Token> _228056_caller) {
	if (_228041_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1ac1bee58_SymbolTable> _228517_old = _228041_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1ac15da1d_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228517_old);
	});;
	jule::Ptr<_1ac1bee58_SymbolTable> _228717_file = _1ac15a82d_findFile(_228041_f.get()._field_Decl.get()._field_sema.get()._field_files,_228041_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_228717_file != nullptr)) {
		_1ac15da1d_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228717_file);
	};
	jule::Ptr<_1ac13b358_scopeChecker> _229217_sc = _1ac131aac_newScopeChecker(_228041_f.get()._field_Decl.get()._field_sema,_228041_f);;
	_229217_sc.get()._field_calledFrom=_228056_caller;
	_1ac177eaa_checkFnInsSc(_self_.ptr(), _228041_f,_229217_sc);
	if ((_228041_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1ac17854e_checkFnIns(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99c03b5_FnIns>& _230235_f) {
	_1ac1782c9_checkFnInsCaller(_self_, _230235_f,nullptr);
}



inline void _1ac1787c4_checkTypeFn(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _230636_f) {
	if (_230636_f.get()._field_CppLinked) {
		return;;
	};
	if ((_230636_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230636_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b01abddc:;
		if (it != expr.end()) {
			jule::Ptr<_1a99c03b5_FnIns> _231621_ins = *it;
			{
				_1ac17854e_checkFnIns(_self_, _231621_ins);
			}
			_iter_next_1b01abddc:;
			++it;
			goto _iter_begin_1b01abddc;
		}
		_iter_end_1b01abddc:;
	};
}



inline void _1ac178a49_checkTestFn(_1ac15b224_Sema* _self_, jule::Ptr<_1a99c03b5_FnIns>& _232135_f) {
	if (_232135_f.get()._field_Decl.get()._field_Public) {
		_1ac15ddd6_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_232135_f.get()._field_Params.len() != 1LL) || (_232135_f.get()._field_Result != nullptr))) {
		_1ac15ddd6_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a9a0cde7_Sptr> _233417_sptr = _1a9a07012_Sptr(_232135_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_233417_sptr == nullptr)) {
		_1ac15ddd6_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b3967d9d_StructIns> _234113_s = _1a9a08200_Struct(_233417_sptr.get()._field_Elem.ptr());;
	if (((_234113_s == nullptr) || (!(_1ac15860b_isStdPackage(_234113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1ac15ddd6_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ac15e205_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ac178cbe_precheckTypeFn(jule::Ptr<_1ac15b224_Sema> _self_, jule::Ptr<_1a99bc714_Fn>& _234939_f) {
	if (_234939_f.get()._field_CppLinked) {
		return;;
	};
	if ((_234939_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_234939_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a99c03b5_FnIns> _236021_ins = _1a99bdb00_instanceForce(_234939_f);;
		_234939_f.get()._field_Instances = jule::alloc_for_append(_234939_f.get()._field_Instances,1);_234939_f.get()._field_Instances.__push(_236021_ins);;
		_1ac166b36_reloadFnInsTypes(_self_, _236021_ins);
		_236021_ins.get()._field_reloaded=true;
		if (_1a9a1b81d_hasDirective(_234939_f.get()._field_Directives,jule::Str("test", 4))) {
			_1ac178a49_checkTestFn(_self_.ptr(), _236021_ins);
		};
	};
}



inline void _1ac178e9a_precheckFnTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b01b69b8:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> _237321_decl = *it;
			{
				{
					auto &expr = _237321_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b01b737b:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _237425_m = *it;
						{
							_1ac178cbe_precheckTypeFn(_self_, _237425_m);
						}
						_iter_next_1b01b737b:;
						++it;
						goto _iter_begin_1b01b737b;
					}
					_iter_end_1b01b737b:;
				};
			}
			_iter_next_1b01b69b8:;
			++it;
			goto _iter_begin_1b01b69b8;
		}
		_iter_end_1b01b69b8:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b01b7090:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _237821_decl = *it;
			{
				_1ac178cbe_precheckTypeFn(_self_, _237821_decl);
			}
			_iter_next_1b01b7090:;
			++it;
			goto _iter_begin_1b01b7090;
		}
		_iter_end_1b01b7090:;
	};
}



inline void _1ac179176_checkFnTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b01b8745:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _238521_decl = *it;
			{
				_1ac1787c4_checkTypeFn(_self_, _238521_decl);
			}
			_iter_next_1b01b8745:;
			++it;
			goto _iter_begin_1b01b8745;
		}
		_iter_end_1b01b8745:;
	};
}



inline void _1ac179352_checkPackageTypes(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01b905e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _239321_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _239321_f);
				_1ac1756a0_checkGlobalTypes(_self_);
				_1ac178e9a_precheckFnTypes(_self_);
				_1ac177916_precheckStructTypes(_self_);
			}
			_iter_next_1b01b905e:;
			++it;
			goto _iter_begin_1b01b905e;
		}
		_iter_end_1b01b905e:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01badc9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _240421_f = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _240421_f);
				_1ac179176_checkFnTypes(_self_);
				_1ac17720c_checkStructTypes(_self_);
			}
			_iter_next_1b01badc9:;
			++it;
			goto _iter_begin_1b01badc9;
		}
		_iter_end_1b01badc9:;
	};
}



inline void _1ac17952d_setFileSemaFields(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b01bb4b2:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _241221_f = *it;
			{
				_241221_f.get()._field_sema=_self_;
			}
			_iter_next_1b01bb4b2:;
			++it;
			goto _iter_begin_1b01bb4b2;
		}
		_iter_end_1b01bb4b2:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b01bc5c3:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _241521_st = *it;
			{
				_241521_st.get()._field_sema=_self_;
			}
			_iter_next_1b01bc5c3:;
			++it;
			goto _iter_begin_1b01bc5c3;
		}
		_iter_end_1b01bc5c3:;
	};
}



inline void _1ac179709_setSemaFields(jule::Ptr<_1ac15b224_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01bd0c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _242121_file = *it;
			{
				_1ac15da1d_setCurrentFile(_self_.ptr(), _242121_file);
				_1ac17952d_setFileSemaFields(_self_);
			}
			_iter_next_1b01bd0c9:;
			++it;
			goto _iter_begin_1b01bd0c9;
		}
		_iter_end_1b01bd0c9:;
	};
}



inline void _1ac17997e_check(jule::Ptr<_1ac15b224_Sema> _self_, jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _242730_files) {
	_self_.get()._field_files=_242730_files;
	_1ac161625_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac179709_setSemaFields(_self_);
	_1ac161ba8_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac1619cc_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac174acd_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac179352_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac15b224_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1ac179d36_missingRetChecker static__1ac17a1ee_new(void) {
	return _1ac179d36_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1ac17a4c9_checkConditional(_1ac179d36_missingRetChecker* _self_, jule::Ptr<_1ac135253_Conditional> _247035_c) {
	{
		auto &expr = _247035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b01c252e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac134ae3_If> _247121_elif = *it;
			{
				if ((_247121_elif == nullptr)) {
					return false;
				};
				if ((!(_1ac17ae03_checkScope(&(*_self_), _247121_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1b01c252e:;
			++it;
			goto _iter_begin_1b01c252e;
		}
		_iter_end_1b01c252e:;
	};
	return ((_247035_c.get()._field_Default != nullptr) && _1ac17ae03_checkScope(&(*_self_), _247035_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1ac17a7d7_checkMatch(_1ac179d36_missingRetChecker* _self_, jule::Ptr<_1ac138443_Match> _248229_m) {
	{
		auto &expr = _248229_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b01c49a4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac138e8d_Case> _248321_c = *it;
			{
				if ((_248321_c == nullptr)) {
					return false;
				};
				jule::I64 _248717_n = (*_self_)._field_breaked.len();;
				jule::Bool _248817_ok = _1ac17ae03_checkScope(&(*_self_), _248321_c.get()._field_Scope);;
				{
					
					if ((_248717_n != (*_self_)._field_breaked.len())) {
						_case_begin_1b01c6720:;
						{
							return false;
						}
					}
					else if ((!(_248817_ok))) {
						_case_begin_1b01c6797:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1b01c681e;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1b01c681e:;
						{
							(*_self_)._field_falled=false;
							if ((_248321_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1b01c49a4;
						}
					}
					_match_end_1b01c6676:;
				};
			}
			_iter_next_1b01c49a4:;
			++it;
			goto _iter_begin_1b01c49a4;
		}
		_iter_end_1b01c49a4:;
	};
	return ((_248229_m.get()._field_Default != nullptr) && _1ac17ae03_checkScope(&(*_self_), _248229_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1ac17aae5_checkInfIter(_1ac179d36_missingRetChecker* _self_, jule::Ptr<_1ac13553e_InfIter> _250831_it) {
	jule::I64 _250913_n = (*_self_)._field_breaked.len();;
	if (_1ac17ae03_checkScope(&(*_self_), _250831_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
		return true;
	};
	if ((_250913_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251517_itaddr = static_cast<jule::Uintptr>(_250831_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_250913_n);
			auto it = expr.begin();
			_iter_begin_1ae8e6c10:;
			if (it != expr.end()) {
				jule::Uintptr _251620_addr = *it;
				{
					if ((_251517_itaddr == _251620_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
						return false;
					};
				}
				_iter_next_1ae8e6c10:;
				++it;
				goto _iter_begin_1ae8e6c10;
			}
			_iter_end_1ae8e6c10:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
	};
	return true;
}



inline jule::Bool _1ac17ae03_checkScope(_1ac179d36_missingRetChecker* _self_, jule::Ptr<_1ac1346e7_Scope> _252729_s) {
	if ((_252729_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252729_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1ae8e88e3:;
		if (it != expr.end()) {
			jule::Any _253121_st = *it;
			{
				{
					auto &_match_expr{ _253121_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ac139543_FallSt>>()) {
						_case_begin_1ae8e92d9:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac136b4a_BreakSt>>()) {
						_case_begin_1ae8e9383:;
						{
							jule::Uintptr _253721_addr = _253121_st.operator jule::Ptr<_1ac136b4a_BreakSt>().get()._field_It;;
							if ((_253721_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253721_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac136793_ContSt>>()) {
						_case_begin_1ae8e93e9:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
						_case_begin_1ae8e9460:;
						{
							if (_1ac17aae5_checkInfIter(&(*_self_), _253121_st.operator jule::Ptr<_1ac13553e_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac1399b6_RetSt>>()) {
						_case_begin_1ae8e94c6:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac1346e7_Scope>>()) {
						_case_begin_1ae8e953c:;
						{
							if (_1ac17ae03_checkScope(&(*_self_), _253121_st.operator jule::Ptr<_1ac1346e7_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
						_case_begin_1ae8e95b4:;
						{
							{
								auto &_match_expr{ _253121_st.operator jule::Ptr<_1ac1c4bb6_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
									_case_begin_1ae8ed321:;
									{
										return true;
									}
								}
								_match_end_1ae8ed057:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac135253_Conditional>>()) {
						_case_begin_1ae8e963b:;
						{
							if (_1ac17a4c9_checkConditional(&(*_self_), _253121_st.operator jule::Ptr<_1ac135253_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
						_case_begin_1ae8e96b3:;
						{
							if (_1ac17a7d7_checkMatch(&(*_self_), _253121_st.operator jule::Ptr<_1ac138443_Match>())) {
								return true;
							};
						}
					}
					_match_end_1ae8e9141:;
				};
			}
			_iter_next_1ae8e88e3:;
			++it;
			goto _iter_begin_1ae8e88e3;
		}
		_iter_end_1ae8e88e3:;
	};
	return false;
}



inline jule::Bool _1ac17b211_check(_1ac179d36_missingRetChecker* _self_, jule::Ptr<_1ac1346e7_Scope> _257324_s) {
	return _1ac17ae03_checkScope(&(*_self_), _257324_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac179d36_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac17b9e7_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac17cd17_IsInitialized(_1ac17c960_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1ac17d07b_IsTypeInferred(_1ac17c960_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac17c960_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ac17db09_Dispose(jule::Ptr<_1a99bc714_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_Owner != nullptr)) && (_1027_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1027_f.get()._field_Statically))) && (!(_1027_f.get()._field_Unsafety))) && _1a99bcb76_IsVoid(_1027_f.ptr())) && (_1027_f.get()._field_Generics.len() == 0LL)) && (_1027_f.get()._field_Params.len() == 1LL)) && _1027_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1a99bb768_IsRef(_1027_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1ac17dda1_Str(jule::Ptr<_1a99bc714_Fn> _2423_f) {
	if (((((((((((_2423_f == nullptr) || (_2423_f.get()._field_Owner == nullptr)) || (_2423_f.get()._field_Ident != jule::Str("Str", 3))) || _2423_f.get()._field_Statically) || _2423_f.get()._field_Unsafety) || _1a99bcb76_IsVoid(_2423_f.ptr())) || (_2423_f.get()._field_Generics.len() != 0LL)) || (_2423_f.get()._field_Params.len() != 1LL)) || _2423_f.get()._field_Params[0LL].get()._field_Mutable) || _1a99bb768_IsRef(_2423_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a99c03b5_FnIns> _3817_ins = _2423_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a9a09663_Prim> _3913_prim = _1a9a06c9d_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1a9a0c897_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1ac17e1e2_logical(jule::Ptr<_1a99bc714_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1a99bcb76_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1a99bb768_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1a99c03b5_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a9a09663_Prim> _6413_prim = _1a9a06c9d_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1a9a0c633_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1a9a08200_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1ac17e489_Eq(jule::Ptr<_1a99bc714_Fn> _7222_f) {
	return static__1ac17e1e2_logical(_7222_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1ac17e731_Gt(jule::Ptr<_1a99bc714_Fn> _7722_f) {
	return static__1ac17e1e2_logical(_7722_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1ac17e9c8_GtEq(jule::Ptr<_1a99bc714_Fn> _8224_f) {
	return static__1ac17e1e2_logical(_8224_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1ac17ec70_Lt(jule::Ptr<_1a99bc714_Fn> _8722_f) {
	return static__1ac17e1e2_logical(_8722_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1ac180017_LtEq(jule::Ptr<_1a99bc714_Fn> _9224_f) {
	return static__1ac17e1e2_logical(_9224_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1ac180358_result(jule::Ptr<_1a99bc714_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1a99bcb76_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1a99bb768_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1a99c03b5_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1a9a08200_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1ac180600_Shl(jule::Ptr<_1a99bc714_Fn> _11823_f) {
	return static__1ac180358_result(_11823_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1ac180897_Shr(jule::Ptr<_1a99bc714_Fn> _12323_f) {
	return static__1ac180358_result(_12323_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1ac180b3e_Add(jule::Ptr<_1a99bc714_Fn> _12823_f) {
	return static__1ac180358_result(_12823_f,jule::Str("Add", 3));
}



inline jule::Bool static__1ac180dd6_Sub(jule::Ptr<_1a99bc714_Fn> _13323_f) {
	return static__1ac180358_result(_13323_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1ac18117d_Div(jule::Ptr<_1a99bc714_Fn> _13823_f) {
	return static__1ac180358_result(_13823_f,jule::Str("Div", 3));
}



inline jule::Bool static__1ac181425_Mul(jule::Ptr<_1a99bc714_Fn> _14323_f) {
	return static__1ac180358_result(_14323_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1ac1816bc_Mod(jule::Ptr<_1a99bc714_Fn> _14823_f) {
	return static__1ac180358_result(_14823_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1ac181964_BitAnd(jule::Ptr<_1a99bc714_Fn> _15326_f) {
	return static__1ac180358_result(_15326_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1ac181c0b_BitOr(jule::Ptr<_1a99bc714_Fn> _15825_f) {
	return static__1ac180358_result(_15825_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1ac181ea3_BitXor(jule::Ptr<_1a99bc714_Fn> _16326_f) {
	return static__1ac180358_result(_16326_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1ac1822e4_unary(jule::Ptr<_1a99bc714_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1a99bcb76_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1a99bb768_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a99c03b5_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1a9a08200_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1ac18258b_Neg(jule::Ptr<_1a99bc714_Fn> _18723_f) {
	return static__1ac1822e4_unary(_18723_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1ac182833_Pos(jule::Ptr<_1a99bc714_Fn> _19223_f) {
	return static__1ac1822e4_unary(_19223_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1ac182aca_BitNot(jule::Ptr<_1a99bc714_Fn> _19726_f) {
	return static__1ac1822e4_unary(_19726_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1ac182e1b_assign(jule::Ptr<_1a99bc714_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1a99bcb76_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1a99bb768_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1ac1831b3_AddAssign(jule::Ptr<_1a99bc714_Fn> _22129_f) {
	return static__1ac182e1b_assign(_22129_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1ac18345a_SubAssign(jule::Ptr<_1a99bc714_Fn> _22629_f) {
	return static__1ac182e1b_assign(_22629_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1ac183702_DivAssign(jule::Ptr<_1a99bc714_Fn> _23129_f) {
	return static__1ac182e1b_assign(_23129_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1ac183999_MulAssign(jule::Ptr<_1a99bc714_Fn> _23629_f) {
	return static__1ac182e1b_assign(_23629_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1ac183c41_ModAssign(jule::Ptr<_1a99bc714_Fn> _24129_f) {
	return static__1ac182e1b_assign(_24129_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1ac183ed8_ShlAssign(jule::Ptr<_1a99bc714_Fn> _24629_f) {
	return static__1ac182e1b_assign(_24629_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1ac184280_ShrAssign(jule::Ptr<_1a99bc714_Fn> _25129_f) {
	return static__1ac182e1b_assign(_25129_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1ac184527_BitOrAssign(jule::Ptr<_1a99bc714_Fn> _25631_f) {
	return static__1ac182e1b_assign(_25631_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1ac1847be_BitAndAssign(jule::Ptr<_1a99bc714_Fn> _26132_f) {
	return static__1ac182e1b_assign(_26132_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1ac184a66_BitXorAssign(jule::Ptr<_1a99bc714_Fn> _26632_f) {
	return static__1ac182e1b_assign(_26632_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac17d488_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ac1ae145_pushErr(_1ac1adb28_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1ac1ae3a9_checkTrait(_1ac1adb28_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1a9a05ab0_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1b2551bec_Trait> _12513_trt = _1a9a08464_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1a9a07012_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ae9372d3:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1a9a07012_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1a9a08200_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1ae9373c1;
			}
		}
		else if ((_1a9a08200_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ae9373c1:;
			{
				jule::Ptr<_1b3967d9d_StructIns> _13617_s = _1a9a08200_Struct((*_self_)._field_src.ptr());;
				if ((!(_1b392d638_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1ac19e069_traitHasReferenceReceiver(_12513_trt))) {
					_1ac1ae145_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1a9a08464_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ae937437:;
			{
				_12131_ok = (_12513_trt == _1a9a08464_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1ae936b73:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1ae936b1d:;
	};
}



inline jule::Bool _1ac1ae61d_checkPtr(_1ac1adb28_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1a9a05ab0_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1a9a1145b_Ptr> _15617_dest = _1a9a07276_Ptr((*_self_)._field_dest.ptr());;
	if (_1a9a11e2e_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1a9a05395_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1ac1ae882_checkPrim(_1ac1adb28_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1a9a09663_Prim> _16517_prim = _1a9a06c9d_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1a9a0cb0b_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1a9a05395_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1ac1aec39_typeEnum(_1ac1adb28_typeCompatibilityChecker* _self_, jule::Ptr<_1b255543c_TypeEnum>& _17328_e, jule::Ptr<_1a9a04b8b_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1ae93ee67:;
		if (it != expr.end()) {
			jule::Ptr<_1b2554d76_TypeEnumItem> _17421_item = *it;
			{
				if (_1a9a05395_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1b255543c_TypeEnum> _17821_ke = _1a9a0774e_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1ae93ee67;
				};
				if (_1ac1aec39_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1ae93ee67:;
			++it;
			goto _iter_begin_1ae93ee67;
		}
		_iter_end_1ae93ee67:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1ac1aee9d_checkTypeEnum(_1ac1adb28_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1a9a05395_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1b255543c_TypeEnum> _19317_e = _1a9a0774e_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1ac1aec39_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1ac1b0212_check(_1ac1adb28_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1a9a07276_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1ac1ae61d_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1a9a062ec_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1a9a05ab0_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1a9a06c9d_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ae94539b:;
			{
				_19726_ok = _1ac1ae882_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1a9a0774e_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ae945412:;
			{
				_19726_ok = _1ac1aee9d_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1a9a08464_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ae9456ed:;
			{
				_19726_ok = _1ac1ae3a9_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1ae944532:;
			{
				_19726_ok = _1a9a05395_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1ae9443de:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1adb28_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1b0bb3_pushErr(_1ac1b0751_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1ac1b0e27_checkValidity(_1ac1b0751_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1a9a07e8b_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae948b96:;
			{
				jule::Ptr<_1a99c03b5_FnIns> _23717_f = _1a9a07e8b_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1a99c174b_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1ae94a26e:;
						{
							_1ac1b0bb3_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1ae94a2e6:;
						{
							_1ac1b0bb3_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1a99bcdda_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1ae94a36d:;
						{
							_1ac1b0bb3_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1ae94a3e5:;
						{
							_1ac1b0bb3_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1ac15e205_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1ae94a192:;
				};
			}
		}
		else if ((_1a9a0893c_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae948c1d:;
			{
				_1ac1b0bb3_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1ae948adb:;
	};
	return _23417_valid;
}



inline jule::Bool _1ac1b118b_checkConst(_1ac1b0751_assignTypeChecker* _self_) {
	if (((((!(_1ac1c5579_IsConst((*_self_)._field_d.ptr()))) || (_1a9a06c9d_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1ac12b205_IsNum(_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1a9a06c9d_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ac12ae5d_IsFloat(_27413_kind)) {
			_case_begin_1ae952a7e:;
			{
				if ((!(_1ac196094_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1ac1b0bb3_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1ac12ab3e_IsInt(_27413_kind)) {
			_case_begin_1ae952397:;
			{
				if ((!(_1ac1ac8e6_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1ac1b0bb3_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1ae952331:;
			{
				return false;
			}
		}
		_match_end_1ae9522cb:;
	};
	return true;
}



inline jule::Bool _1ac1b1400_isPrim(_1ac1b0751_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1a9a0584b_CppLinked((*_self_)._field_dest.ptr()) || _1a9a0584b_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1a9a06c9d_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1ac1b1664_checkCompatibility(_1ac1b0751_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ae956632:;
			{
				return false;
			}
		}
		else if ((!(_1ac1b0e27_checkValidity(&(*_self_))))) {
			_case_begin_1ae9566a9:;
			{
				return false;
			}
		}
		else if (_1ac1b118b_checkConst(&(*_self_))) {
			_case_begin_1ae956731:;
			{
				return true;
			}
		}
		else if ((_1a9a074da_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9567a8:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1a9a074da_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1a9a074da_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1a9a06c9d_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ae956511;
				};
				if (_1ac127971_TypesAreCompatible(_1a9a06c9d_Prim(_1a9a074da_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1a9a06c9d_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1ac1b1400_isPrim(&(*_self_))) {
			_case_begin_1ae956830:;
			{
				jule::Ptr<_1a9a09663_Prim> _32617_dest = _1a9a06c9d_Prim((*_self_)._field_dest.ptr());;
				if (_1a9a0cb0b_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1a9a09663_Prim> _33021_src = _1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1ac127971_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1ae956511:;
	};
	return _1ac164d98_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1ac1b18c8_check(_1ac1b0751_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1ac1b1664_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1a9a1d369_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1b0751_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b05ba4b5_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394d834_ArrTypeDecl>>()) {
			_case_begin_1b05bbac1:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b05bc94b:;
						{
							_36121_elem=_1a9a079b3_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b05bc891:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394d834_ArrTypeDecl>().get()._field_Elem;
				return _1ac1b37ba_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b05bba16:;
	};
	return false;
}

inline jule::Bool _1b05b9b02_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394caca_SlcTypeDecl>>()) {
			_case_begin_1b05c0234:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b05c1158:;
						{
							_36121_elem=_1a9a07c27_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b05c1004:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394caca_SlcTypeDecl>().get()._field_Elem;
				return _1ac1b37ba_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b05c0179:;
	};
	return false;
}

inline jule::Bool _1b05bbd9b_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394d1a2_PtrTypeDecl>>()) {
			_case_begin_1b05c390d:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b05c4898:;
						{
							_36121_elem=_1a9a07276_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b05c46cd:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394d1a2_PtrTypeDecl>().get()._field_Elem;
				return _1ac1b37ba_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b05c3853:;
	};
	return false;
}

inline jule::Bool _1b05c2ea1_annotateConstraintElem(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394c6ce_SptrTypeDecl>>()) {
			_case_begin_1b05c6c52:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1b05c7c53:;
						{
							_36121_elem=_1a9a07012_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1b05c7a22:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394c6ce_SptrTypeDecl>().get()._field_Elem;
				return _1ac1b37ba_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1b05c6b97:;
	};
	return false;
}



inline jule::Bool _1ac1b2a50_annotateConstraintMap(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394e082_MapTypeDecl>>()) {
			_case_begin_1b05a822d:;
			{
				jule::Ptr<_1a9a0ee0a_Map> _38121_m = _1a9a086c8_Map(_37845_k.ptr());;
				jule::Ptr<_1b394e082_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394e082_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1ac1b37ba_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1ac1b37ba_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1b05a81c8:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1ac1b2d5d_annotateConstraintTup(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394cdb6_TupleTypeDecl>>()) {
			_case_begin_1b05abbe3:;
			{
				jule::Ptr<_1b394cdb6_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394cdb6_TupleTypeDecl>();;
				jule::Ptr<_1a9a0e3d2_Tuple> _39721_tup2 = _1a9a0893c_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1b05ad167:;
					if (it != expr.end()) {
						jule::Ptr<_1a9a04b8b_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1b05ad9a3:;
								if (it != expr.end()) {
									jule::Ptr<_1b394b326_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1ac1b37ba_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1b05ad9a3:;
									++it;
									goto _iter_begin_1b05ad9a3;
								}
								_iter_end_1b05ad9a3:;
							};
						}
						_iter_next_1b05ad167:;
						++it;
						goto _iter_begin_1b05ad167;
					}
					_iter_end_1b05ad167:;
				};
			}
		}
		_match_end_1b05abb6b:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1ac1b316b_annotateConstraintFn(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b05ade15:;
			{
				jule::Ptr<_1b395d13a_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b395d13a_FnDecl>();;
				jule::Ptr<_1a99c03b5_FnIns> _41421_f = _1a9a07e8b_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b05b0e8e:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1a99be4e6_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1ac1b37ba_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1b05b0e8e:;
						++it;
						_41518_i++;
						goto _iter_begin_1b05b0e8e;
					}
					_iter_end_1b05b0e8e:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1ac1b37ba_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1b05ad8b5:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1ac1b349b_annotateConstraintIdent(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _43147_k) {
	jule::Ptr<_1b394b8dc_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>();;
	jule::Ptr<_1b3967d9d_StructIns> _43317_s = _1a9a08200_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b05b3da4:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1b395890a_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1a9a0345e_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1ac1b3ad9_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1b05b3da4;
				};
				jule::Ptr<_1b394b326_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b05b6d0d:;
					if (it != expr.end()) {
						jule::Ptr<_1b394b326_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1b05b7a78:;
								if (it != expr.end()) {
									jule::Ptr<_1a9a0345e_InsGeneric> _44929_sg = *it;
									{
										if (_1ac1b37ba_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1b05b7a78:;
									++it;
									goto _iter_begin_1b05b7a78;
								}
								_iter_end_1b05b7a78:;
							};
						}
						_iter_next_1b05b6d0d:;
						++it;
						goto _iter_begin_1b05b6d0d;
					}
					_iter_end_1b05b6d0d:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1b05b3da4:;
			++it;
			_43413_i++;
			goto _iter_begin_1b05b3da4;
		}
		_iter_end_1b05b3da4:;
	};
	return false;
}



inline jule::Bool _1ac1b37ba_annotateConstraint(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394b8dc_IdentTypeDecl>>()) {
			_case_begin_1b05b732a:;
			{
				return _1ac1b349b_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1b05b80b7:;
	};
	{
		
		if ((_1a9a079b3_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b8abd:;
			{
				return _1b05ba4b5_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a07c27_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b8b34:;
			{
				return _1b05b9b02_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a07276_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b8b9a:;
			{
				return _1b05bbd9b_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a07012_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b9470:;
			{
				return _1b05c2ea1_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a086c8_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b94d6:;
			{
				return _1ac1b2a50_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a07e8b_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b954c:;
			{
				return _1ac1b316b_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1a9a0893c_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1b05b95b3:;
			{
				return _1ac1b2d5d_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1b05b93c6:;
			{
				return false;
			}
		}
		_match_end_1b05b9371:;
	};
}



inline void _1ac1b3ad9_pushGeneric(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1a9a0345e_InsGeneric>(_1a9a0345e_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1b395890a_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1ac1b37ba_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1ac1b3de7_annotatePrim(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1ac1b5c1d_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1ac1b4205_annotateArr(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1a9a109ee_Arr> _50017_parr = _1a9a079b3_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1a9a109ee_Arr> _50417_arr = _1a9a079b3_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1ac1b602b_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1ac1b4513_annotateSlc(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1a9a0d854_Slc> _51017_pslc = _1a9a07c27_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1a9a0d854_Slc> _51417_slc = _1a9a07c27_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1ac1b602b_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1ac1b48ba_checkMapKey(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>* _51941_k, jule::Ptr<_1a9a04b8b_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1a9a04b8b_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1ac1b602b_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1ac1b4bc8_annotateMap(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1a9a0ee0a_Map> _52817_pmap = _1a9a086c8_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1a9a0ee0a_Map> _53217_m = _1a9a086c8_Map(_52742_k.ptr());;
	_52758_ok = (_1ac1b48ba_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1ac1b48ba_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1ac1b4ed6_annotateFn(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1a99c03b5_FnIns> _53817_pf = _1a9a07e8b_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1a99c03b5_FnIns> _54217_f = _1a9a07e8b_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1b05d6b85:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1a99bcb76_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1a99bcb76_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1b05d6c0c:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1b05d6b0d:;
	};
	_53757_ok=true;
	jule::Ptr<_1a9a04b8b_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b05d85e3:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1a99be4e6_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1ac1b602b_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1b05d85e3:;
			++it;
			_55214_i++;
			goto _iter_begin_1b05d85e3;
		}
		_iter_end_1b05d85e3:;
	};
	if ((!(_1a99bcb76_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1ac1b602b_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1ac1b52e4_annotatePtr(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1a9a1145b_Ptr> _56717_pptr = _1a9a07276_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1a9a1145b_Ptr> _57117_ptr = _1a9a07276_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1ac1b602b_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1ac1b5602_annotateSptr(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1a9a0cde7_Sptr> _57717_ssptr = _1a9a07012_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1a9a0cde7_Sptr> _58117_sptr = _1a9a07012_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1ac1b602b_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1ac1b5910_annotateStruct(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1b3967d9d_StructIns> _58717_s = _1a9a08200_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1b3967d9d_StructIns> _59117_s2 = _1a9a08200_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b05e2014:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1a9a0345e_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1a9a0345e_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1a9a05395_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1b05e2014;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1ac1b602b_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1b05e2014:;
			++it;
			_59514_i++;
			goto _iter_begin_1b05e2014;
		}
		_iter_end_1b05e2014:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1ac1b5c1d_annotateAny(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1a9a05087_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b05e4e6d:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1b395890a_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1b05e4e6d;
				};
				jule::Ptr<_1a9a0345e_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1b05e6a52:;
						{
							_1ac1b3ad9_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1a9a05395_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1b05e6ac9:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1b05e690e:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1b05e4e6d:;
			++it;
			_61013_i++;
			goto _iter_begin_1b05e4e6d;
		}
		_iter_end_1b05e4e6d:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1ac1b602b_annotateKind(_1ac1b216a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1ac1b5c1d_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1b05e9add:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1a9a06c9d_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e9b54:;
			{
				_63059_ok = _1ac1b3de7_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a079b3_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e9802:;
			{
				_63059_ok = _1ac1b4205_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a07c27_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e9868:;
			{
				_63059_ok = _1ac1b4513_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a086c8_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e98ce:;
			{
				_63059_ok = _1ac1b4bc8_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a07e8b_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e9406:;
			{
				_63059_ok = _1ac1b4ed6_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a07276_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e946c:;
			{
				_63059_ok = _1ac1b52e4_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a07012_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e94d3:;
			{
				_63059_ok = _1ac1b5602_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1a9a08200_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1b05e9549:;
			{
				_63059_ok = _1ac1b5910_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1b05e9390:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1b05e933a:;
	};
}



inline jule::Bool _1ac1b6290_annotate(_1ac1b216a_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1ac1b602b_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1b216a_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1b6eb6_pushErrToken(_1ac1b6966_fnCallArgChecker* _self_, jule::Ptr<_1e6a5c800_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1ac15ddd6_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1ac1b72d5_pushErr(_1ac1b6966_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1ac1b6eb6_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>> _1ac1b7549_getParams(_1ac1b6966_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1a99bb504_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1ac1b7857_checkCounts(_1ac1b6966_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1a99bb504_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1b060618d:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b0606204:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1b060626a:;
			{
				_1ac1b72d5_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1b06060e4:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1b0608316:;
	}
	_iter_end_1b0608316:;;
	(_70817_idents).mut_slice(2LL);;
	_1ac1b72d5_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1ac1b7ca8_checkArg(_1ac1b6966_fnCallArgChecker* _self_, jule::Ptr<_1a99be4e6_ParamIns>& _71832_p, jule::Ptr<_1ac1c4bb6_Data>& _71851_arg, jule::Ptr<_1e6a5c800_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1a99c24c7_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1ac1b216a_dynamicTypeAnnotation _72225_dta = _1ac1b216a_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1ac1b6290_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1ac1b6eb6_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1ac167681_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1ac164947_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1ac1b8160_push(_1ac1b6966_fnCallArgChecker* _self_, jule::Ptr<_1a99be4e6_ParamIns>& _74528_p, jule::Ptr<_1b3950847_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1a9a04b8b_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1ac1c4bb6_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1a99e5c26_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1ac1b7ca8_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1ac1b8517_pushVariadic(_1ac1b6966_fnCallArgChecker* _self_, jule::Ptr<_1a99be4e6_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1a99b6301_SliceExprModel> _77417_model = jule::new_ptr<_1a99b6301_SliceExprModel>(_1a99b6301_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1a9a04b8b_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1b3950847_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1b3953471_VariadicExpr>>()) {
					_case_begin_1b06169b7:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1b06173d0:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1b061737a:;
			};
			jule::Ptr<_1ac1c4bb6_Data> _80321_d = _1a99e6034_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1b0615ea0;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1ac1b7ca8_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
						_case_begin_1b0619624:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1a99b6301_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1b061a46b:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1b061a207:;
				};
				(_77054_i)++;
				goto _iter_end_1b0615ea0;
			};
			_77064_ok=(_77064_ok && _1ac1b7ca8_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1b0615ea0:;
	}
	_iter_end_1b0615ea0:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1ac1b6eb6_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1ac1b8825_checkArgs(_1ac1b6966_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1a99bb504_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1a99be4e6_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b0622231:;
					{
						_84656_ok=(_1ac1b8517_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1b0620064;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1b0621a6b:;
					{
						_84656_ok=false;
						goto _iter_end_1b0620064;
					}
				}
				else {
					_case_begin_1b06216b4:;
					{
						_84656_ok=(_1ac1b8160_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1b062164d:;
			};
			(_85117_i)++;
		}
	_iter_next_1b0620064:;
	}
	_iter_end_1b0620064:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1ac1b8aab_checkDynamicTypeAnnotation(_1ac1b6966_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b078445e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a0345e_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1ac1b72d5_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1b078445e:;
			++it;
			goto _iter_begin_1b078445e;
		}
		_iter_end_1b078445e:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1ac1b8d31_check(_1ac1b6966_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>> _88817_params = _1ac1b7549_getParams(&(*_self_));;
	_88726_ok=_1ac1b7857_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1ac1b8825_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1ac1b8aab_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1b6966_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1b987b_pushErr(_1ac1b9370_structLitChecker* _self_, jule::Ptr<_1e6a5c800_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1ac1b9b9a_pushSugggestion(_1ac1b9370_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1ac1c705e_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1ac1ba063_pushMatch(_1ac1b9370_structLitChecker* _self_, jule::Ptr<_1b3944154_FieldIns>& _91833_f, jule::Ptr<_1ac1c4bb6_Data>& _91852_d, jule::Ptr<_1e6a5c800_Token>& _91867_errorToken) {
	;
	if (_1ac167681_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1ac164947_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1a99b5861_StructArgExprModel>(_1a99b5861_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1ac1ba382_checkPair(_1ac1b9370_structLitChecker* _self_, jule::Ptr<_1b3955594_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1b3950847_Expr>>& _93160_exprs) {
	jule::Ptr<_1b3944154_FieldIns> _93317_f = _1b39459c4_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1ac1b987b_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1ac1b987b_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1ac1b9b9a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1b078e513:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1b3955594_FieldExprPair>>()) {
						_case_begin_1b078edc6:;
						{
							jule::Ptr<_1b3955594_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1b3955594_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1b0790d94:;
									{
										goto _iter_end_1b078e513;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b0790e1b:;
									{
										_1ac1b987b_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1b078e513;
									}
								}
								_match_end_1b0790cd9:;
							};
						}
					}
					_match_end_1b078ec1c:;
				};
			}
			_iter_next_1b078e513:;
			++it;
			goto _iter_begin_1b078e513;
		}
		_iter_end_1b078e513:;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1ac1c4bb6_Data> _96317_d = _1a99e5c26_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1ac1ba063_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1ac1ba690_readyExprs(_1ac1b9370_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b3950847_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1b07948d1:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1b3950847_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1b3956c7c_KeyValPair>>()) {
						_case_begin_1b079563a:;
						{
							jule::Ptr<_1b3956c7c_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1b3956c7c_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
									_case_begin_1b0795ecb:;
									{
										goto _match_end_1b0796460;
									}
								}
								else {
									_case_begin_1b07966d5:;
									{
										_1ac1b987b_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1b07948d1;
									}
								}
								_match_end_1b0796460:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b3955594_FieldExprPair>(_1b3955594_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1b0795481:;
				};
			}
			_iter_next_1b07948d1:;
			++it;
			_97214_i++;
			goto _iter_begin_1b07948d1;
		}
		_iter_end_1b07948d1:;
	};
	return _97117_ok;
}



inline void _1ac1ba915_check(_1ac1b9370_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b3950847_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1ac1ba690_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1b079476b:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1b3950847_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1b3955594_FieldExprPair>>()) {
						_case_begin_1b079ea84:;
						{
							jule::Ptr<_1b3955594_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1b3955594_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1ac1b987b_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1ac1ba382_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1b079996e:;
						{
							if (_100117_paired) {
								_1ac1b987b_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1ac1b987b_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1b079476b;
							};
							jule::Ptr<_1b3944154_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1ac1b987b_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1ac1b9b9a_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a9a04b8b_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1ac1c4bb6_Data> _103225_d = _1a99e5c26_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1b079476b;
							};
							_1ac1ba063_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1b07997e8:;
				};
			}
			_iter_next_1b079476b:;
			++it;
			_100214_i++;
			goto _iter_begin_1b079476b;
		}
		_iter_end_1b079476b:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1b07a246b:;
				{
					return;;
				}
			}
			_match_end_1b07a2317:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b07a2db7:;
		}
		_iter_end_1b07a2db7:;;
		(_105021_idents).mut_slice(2LL);;
		_1ac1b987b_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1b9370_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac17c960_Var> _1ac1bb3e9_buildVar(_1ac1bae54_rangeChecker* _self_, jule::Ptr<_1b395e119_VarDecl>& _106928_decl) {
	jule::Ptr<_1ac17c960_Var> _107017_v = _1a99c805a_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1ac1bb5c5_setSizeKey(_1ac1bae54_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b07a6ad0:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1ac17b9e7_IterRelation>(_1ac17b9e7_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1ac17c960_Var>()});
			}
		}
		_match_end_1b07a6a25:;
	};
}



inline void _1ac1bb98d_checkRangeExprValidity(_1ac1bae54_rangeChecker* _self_, jule::Ptr<_1ac1c4bb6_Data>& _110046_d, jule::Ptr<_1ac17c960_Var>& _110057_key, jule::Ptr<_1a9a04b8b_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1a9a06088_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1ac167681_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1ac1bbb69_checkSlice(_1ac1bae54_rangeChecker* _self_) {
	_1ac1bb5c5_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a9a0d854_Slc> _111917_slc = _1a9a07c27_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1ac1bb98d_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1ac1bbd45_checkArray(_1ac1bae54_rangeChecker* _self_) {
	_1ac1bb5c5_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a9a109ee_Arr> _113217_arr = _1a9a079b3_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1ac1bb98d_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1ac1bc021_checkMapKeyA(_1ac1bae54_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a9a0ee0a_Map> _114417_m = _1a9a086c8_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1ac1c4bb6_Data> _114817_d = jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1ac1bb98d_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1ac1bc1ec_checkMapKeyB(_1ac1bae54_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a9a0ee0a_Map> _115917_m = _1a9a086c8_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1ac1c4bb6_Data> _116317_d = jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1ac1bb98d_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1ac1bc3c8_checkMap(_1ac1bae54_rangeChecker* _self_) {
	_1ac1bc021_checkMapKeyA(&(*_self_));
	_1ac1bc1ec_checkMapKeyB(&(*_self_));
}



inline void _1ac1bc5a4_checkStr(_1ac1bae54_rangeChecker* _self_) {
	_1ac1bb5c5_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1e6a60094_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1ac1bb3e9_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1ac1bc818_check(_1ac1bae54_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b07ba6b5:;
		}
		else if ((_1a9a07c27_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b07b99b1:;
			{
				_1ac1bbb69_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1a9a079b3_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b07b9a27:;
			{
				_1ac1bbd45_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1a9a086c8_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b07b9a8d:;
			{
				_1ac1bc3c8_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1b07b994a:;
			{
				jule::Ptr<_1a9a09663_Prim> _120117_prim = _1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1a9a0c897_IsStr(_120117_prim.ptr()))) {
					_1ac1bc5a4_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1b07b986d:;
	};
	_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1bae54_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1bd561_prepareTypes(_1ac1bd0aa_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a99c14d7_Types((*_self_)._field_f.ptr());
	};
}



inline void _1ac1bd7d6_prepareExprs(_1ac1bd0aa_retTypeChecker* _self_, jule::Ptr<_1b3950847_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39514c4_TupleExpr>>()) {
			_case_begin_1b07c08b8:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1b39514c4_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1b07c0533:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1b07c00e3:;
	};
}



inline void _1ac1bd9b2_retVars(_1ac1bd0aa_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1a99bcb76_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1ac17c960_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1ac13b358_scopeChecker> _124817_rootScope = _1ac13e46b_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1b07c34c0:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _125116_ident = *it;
			{
				if (((!(_1e6a60094_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1e6a6033b_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1b07c34c0:;
			++it;
			_125113_i++;
			goto _iter_begin_1b07c34c0;
		}
		_iter_end_1b07c34c0:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1ac1bdb8d_checkExprs(_1ac1bd0aa_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _127317_datas = jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b07c723d:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1b3950847_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1b07c723d;
				};
				jule::Ptr<_1a9a04b8b_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1ac1c4bb6_Data> _128121_d = _1a99e6342_evalExpr(_1ac16413e_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a9a20701_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1b07c723d;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1a9a06088_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1ac1b0751_assignTypeChecker _129321_ac = _1ac1b0751_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1ac1b18c8_check(&_129321_ac);
			}
			_iter_next_1b07c723d:;
			++it;
			_127414_i++;
			goto _iter_begin_1b07c723d;
		}
		_iter_end_1b07c723d:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1a99b7d3b_TupleExprModel>(_1a99b7d3b_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1ac1bde9b_check(_1ac1bd0aa_retTypeChecker* _self_, jule::Ptr<_1b3950847_Expr>& _131229_e) {
	_1ac1bd561_prepareTypes(&(*_self_));
	_1ac1bd7d6_prepareExprs(&(*_self_), _131229_e);
	_1ac1bd9b2_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1a99bd88b_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a99bcb76_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1ac15ddd6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1ac1bdb8d_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1bd0aa_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1c0475_FindPackage(_1ac1bee58_SymbolTable* _self_, jule::Str _2634_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b07d37ee:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2634_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1b07d37ee:;
			++it;
			goto _iter_begin_1b07d37ee;
		}
		_iter_end_1b07d37ee:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac1c0783_SelectPackage(_1ac1bee58_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)> _3836_selector) {
	if ((_3836_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b07d479a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _4221_pkg = *it;
			{
				if (_3836_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1b07d479a:;
			++it;
			goto _iter_begin_1b07d479a;
		}
		_iter_end_1b07d479a:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac17c960_Var> _1ac1c0b3a_FindVar(_1ac1bee58_SymbolTable* _self_, jule::Str _5230_ident, jule::Bool _5242_cppLinked) {
	return _1ac1c26ec_findVar(&(*_self_), _5230_ident,_5242_cppLinked,false);
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac1c0ee2_FindTypeAlias(_1ac1bee58_SymbolTable* _self_, jule::Str _5836_ident, jule::Bool _5848_cppLinked) {
	return _1ac1c2b4d_findTypeAlias(&(*_self_), _5836_ident,_5848_cppLinked,false);
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac1c1399_FindStruct(_1ac1bee58_SymbolTable* _self_, jule::Str _6433_ident, jule::Bool _6445_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b07d72c5:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6433_ident) && (_6521_s.get()._field_CppLinked == _6445_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1b07d72c5:;
			++it;
			goto _iter_begin_1b07d72c5;
		}
		_iter_end_1b07d72c5:;
	};
	return nullptr;
}



inline jule::Ptr<_1a99bc714_Fn> _1ac1c1751_FindFn(_1ac1bee58_SymbolTable* _self_, jule::Str _7529_ident, jule::Bool _7541_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b07d876b:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7529_ident) && (_7621_f.get()._field_CppLinked == _7541_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1b07d876b:;
			++it;
			goto _iter_begin_1b07d876b;
		}
		_iter_end_1b07d876b:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2551bec_Trait> _1ac1c1a5e_FindTrait(_1ac1bee58_SymbolTable* _self_, jule::Str _8632_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b07d99e2:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8632_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1b07d99e2:;
			++it;
			goto _iter_begin_1b07d99e2;
		}
		_iter_end_1b07d99e2:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2553d42_Enum> _1ac1c1d6c_FindEnum(_1ac1bee58_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b07da97c:;
		if (it != expr.end()) {
			jule::Ptr<_1b2553d42_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1b07da97c:;
			++it;
			goto _iter_begin_1b07da97c;
		}
		_iter_end_1b07da97c:;
	};
	return nullptr;
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac1c217a_FindTypeEnum(_1ac1bee58_SymbolTable* _self_, jule::Str _10835_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b07dae55:;
		if (it != expr.end()) {
			jule::Ptr<_1b255543c_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10835_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1b07dae55:;
			++it;
			goto _iter_begin_1b07dae55;
		}
		_iter_end_1b07dae55:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac17c960_Var> _1ac1c26ec_findVar(_1ac1bee58_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1ac17c960_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1b07dd9a2:;
		}
		_iter_end_1b07dd9a2:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1b07dd40d:;
			if (it != expr.end()) {
				jule::Ptr<_1ac17c960_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1b07dd40d:;
				++it;
				goto _iter_begin_1b07dd40d;
			}
			_iter_end_1b07dd40d:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac1c2b4d_findTypeAlias(_1ac1bee58_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1a9a03e98_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1b07e1c80:;
		}
		_iter_end_1b07e1c80:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1b07e16db:;
			if (it != expr.end()) {
				jule::Ptr<_1a9a03e98_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1b07e16db:;
				++it;
				goto _iter_begin_1b07e16db;
			}
			_iter_end_1b07e16db:;
		};
	};
	return nullptr;
}



inline jule::Any _1ac1c3005_defByIdent(_1ac1bee58_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b07e36bb:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1b07e36bb:;
			++it;
			goto _iter_begin_1b07e36bb;
		}
		_iter_end_1b07e36bb:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b07e4ee7:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a03e98_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1b07e4ee7:;
			++it;
			goto _iter_begin_1b07e4ee7;
		}
		_iter_end_1b07e4ee7:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b07e5cd9:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1b07e5cd9:;
			++it;
			goto _iter_begin_1b07e5cd9;
		}
		_iter_end_1b07e5cd9:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b07e6b64:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1b07e6b64:;
			++it;
			goto _iter_begin_1b07e6b64;
		}
		_iter_end_1b07e6b64:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b07317b3:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1b07317b3:;
			++it;
			goto _iter_begin_1b07317b3;
		}
		_iter_end_1b07317b3:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b0732b9e:;
		if (it != expr.end()) {
			jule::Ptr<_1b2553d42_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1b0732b9e:;
			++it;
			goto _iter_begin_1b0732b9e;
		}
		_iter_end_1b0732b9e:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b073382b:;
		if (it != expr.end()) {
			jule::Ptr<_1b255543c_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1b073382b:;
			++it;
			goto _iter_begin_1b073382b;
		}
		_iter_end_1b073382b:;
	};
	return nullptr;
}



inline jule::Bool _1ac1c3456_isDuplicatedIdent(_1ac1bee58_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b0734c7d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b0734c7d:;
			++it;
			goto _iter_begin_1b0734c7d;
		}
		_iter_end_1b0734c7d:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1b073619c:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a03e98_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b073619c:;
			++it;
			goto _iter_begin_1b073619c;
		}
		_iter_end_1b073619c:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b0735d4a:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b0735d4a:;
			++it;
			goto _iter_begin_1b0735d4a;
		}
		_iter_end_1b0735d4a:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1b0736eb1:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1b0736eb1:;
			++it;
			goto _iter_begin_1b0736eb1;
		}
		_iter_end_1b0736eb1:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1b0739ab8:;
		if (it != expr.end()) {
			jule::Ptr<_1b2551bec_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b0739ab8:;
			++it;
			goto _iter_begin_1b0739ab8;
		}
		_iter_end_1b0739ab8:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1b073a756:;
		if (it != expr.end()) {
			jule::Ptr<_1b2553d42_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b073a756:;
			++it;
			goto _iter_begin_1b073a756;
		}
		_iter_end_1b073a756:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1b073b735:;
		if (it != expr.end()) {
			jule::Ptr<_1b255543c_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1b073b735:;
			++it;
			goto _iter_begin_1b073b735;
		}
		_iter_end_1b073b735:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1bee58_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac1c50a1_IsNil(_1ac1c4bb6_Data* _self_) {
	return _1a9a05ab0_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1ac1c5315_IsVoid(_1ac1c4bb6_Data* _self_) {
	return _1a9a05d24_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1ac1c5579_IsConst(_1ac1c4bb6_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1ac1c5887_GoodOperand(_1ac1c4bb6_Data* _self_, jule::Ptr<_1ac1c4bb6_Data>& _9635_other) {
	if ((_1a9a0774e_TypeEnum(_9635_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1a9a06c9d_Prim(_9635_other.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_9635_other.get()._field_Kind.ptr()).ptr())))) && (_1a9a08464_Trait(_9635_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1a9a05ab0_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1c4bb6_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1c5c3e_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1c6c40_pushErr(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _1ac1c705e_pushSugggestion(_1ac1c6734_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1ac15e205_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1ac1c723a_allowBuiltin(_1ac1c6734_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1ac1c7416_disallowBuiltin(_1ac1c6734_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1a99cb7cd_isUnsafe(_1ac1c6734_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a99cb9ed_isGlobal(_1ac1c6734_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac15b224_Sema>>()) {
			_case_begin_1b076b80e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b076b6ee:;
			{
				return false;
			}
		}
		_match_end_1b076b314:;
	};
}



inline jule::Bool _1a99cbd0b_applyNumericPrefix(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_1ac1c5579_IsConst(_15942_d.ptr())))) || (_1a9a06c9d_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1a9a09663_Prim> _16613_prim = _1a9a06c9d_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1ac12ae5d_IsFloat(_1a9a099c6_Str(_16613_prim.ptr()))) {
			_case_begin_1b076e119:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>((*((*_self_)._field_prefix)));
				_1a99aed66_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a99ae0eb_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ac12a5ab_IsSigInt(_1a9a099c6_Str(_16613_prim.ptr()))) {
			_case_begin_1b076e180:;
			{
				if ((!(_1ac1961c6_sigAssignable(_1a9a099c6_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>((*((*_self_)._field_prefix)));
				_1a99ae371_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ac12a897_IsUnsigInt(_1a9a099c6_Str(_16613_prim.ptr()))) {
			_case_begin_1b076e1e6:;
			{
				if ((!(_1ac1ac7b4_unsigAssignable(_1a9a099c6_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>((*((*_self_)._field_prefix)));
				_1a99ae5e6_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1b076ddc7:;
	};
	return true;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc070_litNil(_1ac1c6734_Eval* _self_) {
	jule::Ptr<_1a9956c86_Const> _19517_constant = static__1a99ac814_NewNil();;
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc37d_litStr(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_1e6a5db53_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_1ac1acac2_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1ac1acd7a_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1a9956c86_Const> _21017_constant = static__1a99ac36e_NewStr(_20417_s);;
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc68b_litBool(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _22123_l) {
	jule::Ptr<_1a9956c86_Const> _22217_constant = static__1a99ac0c7_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cc999_litRune(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _1ac195ca8_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_1ac1c4bb6_Data> _23917_data = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Constant=static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _1ac195b76_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b9ab8_RuneExprModel>(_1a99b9ab8_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ccca7_litFloat(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _1ac11241c_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a9956c86_Const> _26317_constant = static__1a99ac616_NewF64(_26213_f);;
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd0b5_litInt(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_1e6671d4e_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_1b08e0d29:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LL;
			}
		}
		else if (_1e6671d4e_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_1b08e0a0a:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LL;
			}
		}
		else if (_1e6671d4e_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_1b08e0a71:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LL;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_1b08e06ec:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LL;
			}
		}
		else {
			_case_begin_1b08e0686:;
			{
				_27817_base=10LL;
			}
		}
		_match_end_1b08e0631:;
	};
	jule::Ptr<_1ac1c4bb6_Data> _29817_d = jule::new_ptr<_1ac1c4bb6_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _1ac10ab96_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__1a99abd0d_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _1ac10a734_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1ac1c6c40_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__1a99abe40_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_1a99cbd0b_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_1a99ee8cd_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd3c3_litNum(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr>& _33226_l) {
	{
		
		if (_1e6a5e7ad_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_1b08e8a57:;
			{
				return _1a99ccca7_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_1b08e82d7:;
			{
				return _1a99cd0b5_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_1b08e822c:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cd6d1_evalLit(_1ac1c6734_Eval* _self_, jule::Ptr<_1b395187b_LitExpr> _34126_lit) {
	{
		
		if (_1b3951bcd_IsNil(_34126_lit.ptr())) {
			_case_begin_1b08e9c34:;
			{
				return _1a99cc070_litNil(&(*_self_));
			}
		}
		else if (_1e6a5d8ab_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_1b08e9618:;
			{
				return _1a99cc37d_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_1e6a5e516_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_1b08e9690:;
			{
				return _1a99cc68b_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_1e6a5ddea_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_1b08e9717:;
			{
				return _1a99cc999_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_1e6a5ea55_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_1b08e9937:;
			{
				return _1a99cd3c3_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_1b08e90b8:;
			{
				return nullptr;
			}
		}
		_match_end_1b08e900d:;
	};
}



inline jule::Any _1a99cd9de_findBuiltins(_1ac1c6734_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1530c8_ImportInfo>>()) {
			_case_begin_1b08ea042:;
			{
				jule::Any _36121_def = _1a99ee6be_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ac1530c8_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac15b224_Sema>>()) {
			_case_begin_1b08ea0b9:;
			{
				jule::Any _36621_def = _1a9a0035c_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ac15b224_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b08ec451:;
			{
				jule::Any _37121_def = _1a9a0035c_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_1b08e9edc:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1a9a2d5ee_findBuiltinDef(_35831_ident));
}



inline jule::Any _1a99cdd96_getDef(_1ac1c6734_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_1b2553d42_Enum> _38421_enm = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a202a0_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_1b255543c_TypeEnum> _38921_tenm = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a205ad_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_1ac17c960_Var> _39517_v = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1e06d_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_1a99bc714_Fn> _40017_f = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1eb84_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_1b393b9dc_Struct> _40517_s = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1e7cc_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_1a9a03e98_TypeAlias> _41017_ta = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1e425_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_1a99cd9de_findBuiltins(&(*_self_), _38225_ident));
}



inline void _1b0913434_pushReference(_1ac1c6734_Eval* _self_, jule::Ptr<_1a99c03b5_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b09150e5:;
			{
				jule::Ptr<_1ac13b358_scopeChecker> _42121_sc = _1ac13e6d0_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>());;
				if ((!(_1b0915c61_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1a99c3e8a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1b091491e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1b0915c61_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1a99c3e8a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1b09148b9:;
	};
}

inline void _1b092813b_pushReference(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac17c960_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b0929a77:;
			{
				jule::Ptr<_1ac13b358_scopeChecker> _42121_sc = _1ac13e6d0_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>());;
				if ((!(_1b092a6e3_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1a99c3e8a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1b09293a1:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1b092a6e3_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1a99c3e8a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1b092934b:;
	};
}

inline void _1aec2c8c5_pushReference(_1ac1c6734_Eval* _self_, jule::Ptr<_1b3967d9d_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1aec2e597:;
			{
				jule::Ptr<_1ac13b358_scopeChecker> _42121_sc = _1ac13e6d0_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>());;
				if ((!(_1aec30213_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1a99c3e8a_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1aec2ddc1:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1aec30213_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1a99c3e8a_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1aec2dd6b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ce429__evalEnum(_1ac1c6734_Eval* _self_, jule::Ptr<_1b2553d42_Enum> _43228_enm) {
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ce7d1_evalEnum(_1ac1c6734_Eval* _self_, jule::Ptr<_1b2553d42_Enum> _44131_enm, jule::Ptr<_1e6a5c800_Token> _44143_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a99ce429__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ceade__evalTypeEnum(_1ac1c6734_Eval* _self_, jule::Ptr<_1b255543c_TypeEnum> _45032_enm) {
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99cee96_evalTypeEnum(_1ac1c6734_Eval* _self_, jule::Ptr<_1b255543c_TypeEnum> _45935_enm, jule::Ptr<_1e6a5c800_Token> _45951_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a99ceade__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d02a4__evalStruct(_1ac1c6734_Eval* _self_, jule::Ptr<_1b3967d9d_StructIns> _46830_s) {
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d065b_evalStruct(_1ac1c6734_Eval* _self_, jule::Ptr<_1b3967d9d_StructIns> _47833_s, jule::Ptr<_1e6a5c800_Token> _47848_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a99d0c88_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _1a99d02a4__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d0969_evalFnIns(_1ac1c6734_Eval* _self_, jule::Ptr<_1a99c03b5_FnIns> _48828_f) {
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _1a99d0c88_checkDeprecated(_1ac1c6734_Eval* _self_, jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _49739_directives, jule::Ptr<_1e6a5c800_Token> _49770_tok) {
	if (_1a99cb7cd_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1b3917b2d_Directive> _50213_d = _1a99ee339_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_1ac1c6c40_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1ac1c6c40_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d1140_evalFn(_1ac1c6734_Eval* _self_, jule::Ptr<_1a99bc714_Fn> _51329_f, jule::Ptr<_1e6a5c800_Token> _51337_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a99d0c88_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_1a99c03b5_FnIns> _52217_ins = _1a99bdd64_instance(_51329_f);;
	_1b0913434_pushReference(&(*_self_), _52217_ins);
	return _1a99d0969_evalFnIns(&(*_self_), _52217_ins);
}



inline void _1a99d1508_pushIllegalCycleError(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac17c960_Var>& _52741_v1, jule::Ptr<_1ac17c960_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _1e6736375_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_1e6646340_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a99d18b0_checkCrossCycle(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac17c960_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1b091aeb9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_1a99d1508_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_1a99d18b0_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_1a99d1508_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_1b091aeb9:;
			++it;
			goto _iter_begin_1b091aeb9;
		}
		_iter_end_1b091aeb9:;
	};
	return true;
}



inline jule::Bool _1a99d1c67_checkIllegalCycles(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac17c960_Var>& _55242_v, jule::Ptr<_1e6a5c800_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_1ac1c6c40_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_1a99d18b0_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_1a99d1508_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg=(_56721_errMsg + _56417_message);
		_1ac1c6c40_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d211e_evalVar(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac17c960_Var> _57930_v, jule::Ptr<_1e6a5c800_Token> _57939_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a99d0c88_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac15b224_Sema>>()) {
			_case_begin_1b0923b92:;
			{
				jule::Bool _59317_ok = _1a99d1c67_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b0923c4c:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _1a99cb7cd_isUnsafe(&(*_self_)))) {
					goto _match_end_1b0923b3c;
				};
				jule::Ptr<_1ac13b358_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_1b092604b:;
				}
				_iter_end_1b092604b:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_1ac1c6c40_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1b0923b3c:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_1b092813b_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_1ac1754c4_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_1a9a20701_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1ac1754c4_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1ac1c4bb6_Data> _64417_d = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _1ac17cd17_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_1a9956c86_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_1ac1c5579_IsConst(_64417_d.ptr())) {
		_1a99cbd0b_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d24c6_evalTypeAlias(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a03e98_TypeAlias> _66836_ta, jule::Ptr<_1e6a5c800_Token> _66852_errorToken) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_1a9a0475c_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1ac1c4bb6_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b3967d9d_StructIns>>()) {
			_case_begin_1b0938e93:;
			{
				_67817_d=_1a99d02a4__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_1b3967d9d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b2553d42_Enum>>()) {
			_case_begin_1b09394e3:;
			{
				_67817_d=_1a99ce429__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1b2553d42_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b255543c_TypeEnum>>()) {
			_case_begin_1b0938118:;
			{
				_67817_d=_1a99ceade__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1b255543c_TypeEnum>());
			}
		}
		else {
			_case_begin_1b0937ee7:;
			{
				_67817_d=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_1b0937e92:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d287d_evalDef(_1ac1c6734_Eval* _self_, jule::Any _70430_def, jule::Ptr<_1e6a5c800_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b093c10b:;
			{
				return _1a99d211e_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_1ac17c960_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b2553d42_Enum>>()) {
			_case_begin_1b093c172:;
			{
				return _1a99ce7d1_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_1b2553d42_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b255543c_TypeEnum>>()) {
			_case_begin_1b093c1d8:;
			{
				return _1a99cee96_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_1b255543c_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1b093c260:;
			{
				return _1a99d065b_evalStruct(&(*_self_), _1b3923de2_instance(_70430_def.operator jule::Ptr<_1b393b9dc_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99bc714_Fn>>()) {
			_case_begin_1b093c2c6:;
			{
				jule::Ptr<_1a99bc714_Fn> _71521_f = _70430_def.operator jule::Ptr<_1a99bc714_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1a99d1140_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
			_case_begin_1b093c34d:;
			{
				return _1a99d0969_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_1a99c03b5_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
			_case_begin_1b093c3c5:;
			{
				return _1a99d24c6_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_1a9a03e98_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_1b093c01d:;
	};
	_1ac1c6c40_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d2b8b_evalIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1b39528b0_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _1a99cdd96_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _1a99d287d_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d2e99_evalUnary(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b39530b9_UnaryExpr> _73333_u) {
	_1a99e67b5_unaryEval _73417_unary = static__1a99e6c7c_new(_self_);;
	return _1a99e8058_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d32a7_evalVariadic(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3953471_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_1ac1c4bb6_Data> _74817_d = _1a99e5c26_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a9a06a39_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_1ac1c6c40_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1a9a0d854_Slc> _75813_slc = _1a9a07c27_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d35b5_evalUnsafe(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3952085_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1ac1c4bb6_Data> _77117_d = _1a99e5c26_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d38c3_evalArr(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3957200_SliceExpr> _77631_s) {
	jule::Ptr<_1a9a109ee_Arr> _77817_pt = _1a9a079b3_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a9a109ee_Arr> _78017_arr = jule::new_ptr<_1a9a109ee_Arr>(_1a9a109ee_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1b3953471_VariadicExpr>>()) {
				_case_begin_1b094bb98:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1b3953471_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1b094bb43;
					};
					if (_77817_pt.get()._field_Auto) {
						_1ac1c6c40_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1b094bb43:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_1ac1c6c40_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_1a99b7775_ArrayExprModel> _81517_model = jule::new_ptr<_1a99b7775_ArrayExprModel>(_1a99b7775_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b09519a0:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _82621_elem = *it;
			{
				jule::Ptr<_1ac1c4bb6_Data> _82721_d = _1a99e5c26_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_1b09519a0;
				};
				_1ac164947_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_1b09519a0:;
			++it;
			goto _iter_begin_1b09519a0;
		}
		_iter_end_1b09519a0:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d3d24_evalExpSlc(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3957200_SliceExpr> _85134_s, jule::Ptr<_1a9a04b8b_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_1a9a0d854_Slc> _85217_slc = jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_1a99b6301_SliceExprModel> _85617_model = jule::new_ptr<_1a99b6301_SliceExprModel>(_1a99b6301_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b095728b:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _86721_elem = *it;
			{
				jule::Ptr<_1ac1c4bb6_Data> _86821_d = _1a99e5c26_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_1b095728b;
				};
				_1ac164947_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_1b095728b:;
			++it;
			goto _iter_begin_1b095728b;
		}
		_iter_end_1b095728b:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d4132_evalSliceExpr(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3957200_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a9a079b3_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b095a2e4:;
				{
					return _1a99d38c3_evalArr(_self_, _88637_s);
				}
			}
			else if ((_1a9a07c27_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b095a36b:;
				{
					jule::Ptr<_1a9a0d854_Slc> _89225_pt = _1a9a07c27_Slc(_self_.get()._field_prefix.ptr());;
					return _1a99d3d24_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1b095a1c3:;
		};
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _90517_first_elem = _1a99e5c26_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _91017_d = _1a99d3d24_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _1a99d4473_checkIntegerIndexingByData(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _91650_d, jule::Ptr<_1e6a5c800_Token> _91660_token) {
	jule::Str _91713_err_key = _1a9a01737_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b09605d5:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b0961284:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1b096098c:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1b09608b0:;
	};
}



inline void _1a99d47c5_indexingPtr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _92835_d, jule::Ptr<_1ac1c4bb6_Data>& _92850_index, jule::Ptr<_1b3957a91_IndexingExpr>& _92865_i) {
	_1a99d4473_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_1a9a1145b_Ptr> _93117_ptr = _1a9a07276_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_1a9a11e2e_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_1b09633eb:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a99cb7cd_isUnsafe(&(*_self_))))) {
			_case_begin_1b0963462:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0963297:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _1a99d4b8d_indexingArr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _94335_d, jule::Ptr<_1ac1c4bb6_Data>& _94350_index, jule::Ptr<_1b3957a91_IndexingExpr>& _94365_i) {
	jule::Ptr<_1a9a109ee_Arr> _94417_arr = _1a9a079b3_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_1a99d4473_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_1ac1c5579_IsConst(_94350_index.ptr()) && (_1a99ae0eb_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_1ac1c6c40_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a99d5056_indexingSlc(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _95235_d, jule::Ptr<_1ac1c4bb6_Data>& _95250_index, jule::Ptr<_1b3957a91_IndexingExpr>& _95265_i) {
	jule::Ptr<_1a9a0d854_Slc> _95317_slc = _1a9a07c27_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_1a99d4473_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_1ac1c5579_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
			_case_begin_1b0968b3d:;
			{
				jule::Ptr<_1a99b6301_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_1a99b6301_SliceExprModel>();;
				jule::F64 _96417_indx = _1a99ae0eb_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_1ac1c6c40_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1b0968d91:;
	};
}



inline void _1a99d541e_indexingMap(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _97435_d, jule::Ptr<_1ac1c4bb6_Data>& _97450_index, jule::Ptr<_1b3957a91_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1a9a0ee0a_Map> _97817_m = _1a9a086c8_Map(_97435_d.get()._field_Kind.ptr());;
	_1ac1b0751_assignTypeChecker _97917_atc = _1ac1b0751_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_1ac1b18c8_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _1a99d57d7_indexingStr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _98935_d, jule::Ptr<_1ac1c4bb6_Data>& _98950_index, jule::Ptr<_1b3957a91_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_1a99d4473_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_1ac1c5579_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1ac1c5579_IsConst(_98935_d.ptr())) {
		jule::Ptr<_1e6a5c800_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _1a99adb23_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _1a99ad64a_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_1ac1c6c40_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a99ae5e6_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _1a99d5ba0_toIndexing(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _101634_d, jule::Ptr<_1ac1c4bb6_Data>& _101649_index, jule::Ptr<_1b3957a91_IndexingExpr>& _101668_i) {
	{
		
		if ((_1a9a07276_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0973c9c:;
			{
				_1a99d47c5_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1a9a079b3_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0973d24:;
			{
				_1a99d4b8d_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1a9a07c27_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0973d9b:;
			{
				_1a99d5056_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1a9a086c8_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0973e23:;
			{
				_1a99d541e_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1a9a06c9d_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0973e9a:;
			{
				jule::Ptr<_1a9a09663_Prim> _103117_prim = _1a9a06c9d_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_1a9a0c897_IsStr(_103117_prim.ptr())) {
						_case_begin_1b0978213:;
						{
							_1a99d57d7_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_1b0978169:;
				};
			}
		}
		_match_end_1b0973b48:;
	};
	_1ac1c6c40_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1a99d6123_pushGenericsFromExprSubIdent(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954153_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>& _104214_generics, jule::Ptr<_1b3950847_Expr>& _104242_expr) {
	jule::Ptr<_1b394c03b_SubIdentTypeDecl> _104317_t = jule::new_ptr<_1b394c03b_SubIdentTypeDecl>();;
	if ((!(_1a9a02507_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_1ac1c6c40_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _1a99d64db_pushGenericsFromData(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>& _105245_generics, jule::Ptr<_1b3950847_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39530b9_UnaryExpr>>()) {
			_case_begin_1b097b755:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _105721_d = _1a99d2e99_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_1b39530b9_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_1ac1c6c40_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394b326_TypeDecl>>()) {
			_case_begin_1b097b7bb:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_1b394b326_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3954153_SubIdentExpr>>()) {
			_case_begin_1b097b832:;
			{
				jule::Ptr<_1b3954153_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1b3954153_SubIdentExpr>();;
				return _1a99d6123_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
			_case_begin_1b097c13a:;
			{
				jule::Ptr<_1b39528b0_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_1b39528b0_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39514c4_TupleExpr>>()) {
			_case_begin_1b097c1a1:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1b39514c4_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1b0981590:;
					if (it != expr.end()) {
						jule::Ptr<_1b3950847_Expr> _108125_texpr = *it;
						{
							if ((!(_1a99d64db_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_1b0981590:;
						++it;
						goto _iter_begin_1b0981590;
					}
					_iter_end_1b0981590:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3953bd0_NsSelectionExpr>>()) {
			_case_begin_1b097c217:;
			{
				jule::Ptr<_1b3953bd0_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_1b3953bd0_NsSelectionExpr>();;
				jule::Ptr<_1b394b8dc_IdentTypeDecl> _108821_decl = jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394c3e3_NamespaceTypeDecl>(_1b394c3e3_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_1b097b634:;
			{
				_1ac1c6c40_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b097b48b:;
	};
	return true;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d681b_evalIdentDeclFromIndexing(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3957a91_IndexingExpr>& _110950_i) {
	jule::Ptr<_1b394b326_TypeDecl> _111017_tdecl = jule::new_ptr<_1b394b326_TypeDecl>();;
	jule::Ptr<_1b394b8dc_IdentTypeDecl> _111117_decl = nullptr;;
	{
		auto &_match_expr{ _110950_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
			_case_begin_1b0985dbe:;
			{
				jule::Ptr<_1b39528b0_IdentExpr> _111421_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1b39528b0_IdentExpr>();;
				_111117_decl=jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_111421_expr.get()._field_Token, ._field_Ident=_111421_expr.get()._field_Ident, ._field_CppLinked=_111421_expr.get()._field_CppLinked, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(_111117_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3953bd0_NsSelectionExpr>>()) {
			_case_begin_1b0985e35:;
			{
				jule::Ptr<_1b3953bd0_NsSelectionExpr> _112221_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1b3953bd0_NsSelectionExpr>();;
				_111117_decl=jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_112221_expr.get()._field_Ident, ._field_Ident=_112221_expr.get()._field_Ident.get()._field_Kind, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394c3e3_NamespaceTypeDecl>(_1b394c3e3_NamespaceTypeDecl{._field_Idents=_112221_expr.get()._field_Ns, ._field_Kind=jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_111117_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_111117_decl)})}));
			}
		}
		else {
			_case_begin_1b0985d58:;
			{
				_1ac1c6c40_pushErr(_self_.ptr(), _110950_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0985d03:;
	};
	if ((!(_1a99d64db_pushGenericsFromData(_self_, _111117_decl.get()._field_Generics,_110950_i.get()._field_Index)))) {
		return nullptr;
	};
	return _1a99dc756_evalType(_self_.ptr(), _111017_tdecl);
}



inline jule::Bool _1a99d6c7d_checkGenericFn(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1a99c03b5_FnIns>& _114639_f, jule::Ptr<_1e6a5c800_Token>& _114655_et, jule::Any& _114672_model) {
	jule::Bool _114713_ok = _1ac166b36_reloadFnInsTypes(_self_.get()._field_s, _114639_f);;
	_114639_f.get()._field_reloaded=true;
	if ((!(_114713_ok))) {
		return false;
	};
	jule::Ptr<_1a99c03b5_FnIns> _115217_existInstance = _1a99be13e_appendInstance(_114639_f.get()._field_Decl.ptr(), _114639_f);;
	if ((!(_1ac165c9a_checkConstraintsFn(_self_.get()._field_s, _114639_f,_114655_et,_115217_existInstance)))) {
		return false;
	};
	if ((_115217_existInstance != nullptr)) {
		_114639_f=_115217_existInstance;
		_1a9a022b5_updateModelToGenericIns(_114672_model,_115217_existInstance);
	} else {
		_1ac1782c9_checkFnInsCaller(_self_.get()._field_s, _114639_f,_114655_et);
	};
	return true;
}



inline void _1a99d70be_evalFnGenericFromIndexing(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1ac1c4bb6_Data>& _117150_d, jule::Ptr<_1b3957a91_IndexingExpr>& _117165_i) {
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _117217_generics = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1a99d64db_pushGenericsFromData(_self_, _117217_generics,_117165_i.get()._field_Index)))) {
		_117150_d=nullptr;
		return;;
	};
	jule::Ptr<_1a99c03b5_FnIns> _117817_f = _1a9a07e8b_Fn(_117150_d.get()._field_Kind.ptr());;
	jule::I64 _117917_genericsLen = 0LL;;
	if ((_117817_f.get()._field_Decl != nullptr)) {
		_117917_genericsLen=static_cast<jule::I64>(_117817_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1ac16027d_checkGenericQuantity(_self_.get()._field_s.ptr(), _117917_genericsLen,static_cast<jule::I64>(_117217_generics.len()),_117165_i.get()._field_Expr.get()._field_Token)))) {
		_117150_d=nullptr;
		return;;
	};
	_117817_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>::alloc(0LL,_117817_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117217_generics;
		auto it = expr.begin();
		_iter_begin_1aec051e9:;
		if (it != expr.end()) {
			jule::Ptr<_1b394b326_TypeDecl> _119021_g = *it;
			{
				jule::Ptr<_1ac1c4bb6_Data> _119121_k = _1a99dc756_evalType(_self_.ptr(), _119021_g);;
				if ((_119121_k == nullptr)) {
					_117150_d=nullptr;
					return;;
				};
				_117817_f.get()._field_Generics = jule::alloc_for_append(_117817_f.get()._field_Generics,1);_117817_f.get()._field_Generics.__push(jule::new_ptr<_1a9a0345e_InsGeneric>(_1a9a0345e_InsGeneric{._field_Kind=_119121_k.get()._field_Kind, }));;
			}
			_iter_next_1aec051e9:;
			++it;
			goto _iter_begin_1aec051e9;
		}
		_iter_end_1aec051e9:;
	};
	if (_1a99c174b_IsBuiltin(_117817_f.ptr())) {
		return;;
	};
	if (_1a99d6c7d_checkGenericFn(_self_, _117817_f,_117165_i.get()._field_Expr.get()._field_Token,_117150_d.get()._field_Model)) {
		_117150_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1a9a0475c_Kind>(_117817_f, 1);
	} else {
		_117150_d=nullptr;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d73dd_evalIndexing(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3957a91_IndexingExpr> _121036_i) {
	jule::Ptr<_1a9a04b8b_TypeKind> _121117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121117_prefix;
	});;
	jule::Ptr<_1ac1c4bb6_Data> _121517_d = _1a99e5c26_evalExprKind(_self_, _121036_i.get()._field_Expr.get()._field_Kind);;
	if ((_121517_d == nullptr)) {
		return nullptr;
	};
	if (_121517_d.get()._field_Decl) {
		return _1a99d681b_evalIdentDeclFromIndexing(_self_, _121036_i);
	};
	if ((_1a9a07e8b_Fn(_121517_d.get()._field_Kind.ptr()) != nullptr)) {
		_1a99d70be_evalFnGenericFromIndexing(_self_, _121517_d,_121036_i);
		return _121517_d;
	};
	_1ac1c4bb6_Data _123017_old_d = (*(_121517_d));;
	jule::Ptr<_1ac1c4bb6_Data> _123217_index = _1a99e5c26_evalExprKind(_self_, _121036_i.get()._field_Index.get()._field_Kind);;
	if ((_123217_index == nullptr)) {
		return nullptr;
	};
	_121517_d.get()._field_Decl=false;
	_1a99d5ba0_toIndexing(_self_.ptr(), _121517_d,_123217_index,_121036_i);
	if (_1ac1c5579_IsConst(_121517_d.ptr())) {
		_121517_d.get()._field_Decl=false;
		_121517_d.get()._field_Model=static_cast<jule::Any>(_121517_d.get()._field_Constant);
	} else if (_121517_d.get()._field_Decl) {
		_121517_d.get()._field_Decl=false;
	} else {
		_121517_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b64dd_IndexingExprModel>(_1a99b64dd_IndexingExprModel{._field_Token=_121036_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>(_123017_old_d), ._field_Index=_123217_index}));
	};
	return _121517_d;
}



inline std::tuple<jule::Ptr<_1ac1c4bb6_Data>,jule::Ptr<_1ac1c4bb6_Data>> _1a99d76eb_evalSlicingExprs(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b395819b_SlicingExpr>& _126341_s) {
	jule::Ptr<_1a9a04b8b_TypeKind> _126417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_126417_prefix;
	});;
	jule::Ptr<_1ac1c4bb6_Data> _126817_l = nullptr;;
	jule::Ptr<_1ac1c4bb6_Data> _126917_r = nullptr;;
	if ((_126341_s.get()._field_Start != nullptr)) {
		_126817_l=_1a99e5c26_evalExprKind(_self_, _126341_s.get()._field_Start.get()._field_Kind);
		if ((_126817_l != nullptr)) {
			_1a99d4473_checkIntegerIndexingByData(_self_.ptr(), _126817_l,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_126817_l=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1a99abd0d_NewI64(0LL)});
		_126817_l.get()._field_Model=static_cast<jule::Any>(_126817_l.get()._field_Constant);
	};
	if ((_126341_s.get()._field_To != nullptr)) {
		_126917_r=_1a99e5c26_evalExprKind(_self_, _126341_s.get()._field_To.get()._field_Kind);
		if ((_126917_r != nullptr)) {
			_1a99d4473_checkIntegerIndexingByData(_self_.ptr(), _126917_r,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_126817_l,_126917_r);
}



inline void _1a99d7971_slicingArr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _129830_d) {
	jule::Ptr<_1a9a04b8b_TypeKind> _129917_elemType = _1a9a079b3_Arr(_129830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_129830_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_129917_elemType}), 8)});
	_129830_d.get()._field_Lvalue=false;
	_129830_d.get()._field_Mutable=(_129830_d.get()._field_Mutable || (!(_1a9a06088_Mutable(_129917_elemType.ptr()))));
}



inline void _1a99d7d39_slicingStr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _131330_d, jule::Ptr<_1ac1c4bb6_Data>& _131341_l, jule::Ptr<_1ac1c4bb6_Data>& _131352_r) {
	_131330_d.get()._field_Lvalue=false;
	_131330_d.get()._field_Mutable=true;
	if ((!(_1ac1c5579_IsConst(_131330_d.ptr())))) {
		return;;
	};
	if (((_131341_l == nullptr) || (_131352_r == nullptr))) {
		_131330_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1ac1c5579_IsConst(_131341_l.ptr()) && _1ac1c5579_IsConst(_131352_r.ptr()))) {
		jule::I64 _132617_left = _1a99adb23_AsI64(_131341_l.get()._field_Constant.ptr());;
		if ((_132617_left < 0LL)) {
			return;;
		};
		jule::Str _133117_s = _1a99ad64a_ReadStr(_131330_d.get()._field_Constant.ptr());;
		jule::I64 _133221_right = 0LL;;
		if ((_131352_r == nullptr)) {
			_133221_right=static_cast<jule::I64>(static_cast<jule::I64>(_133117_s.len()));
		} else {
			_133221_right=static_cast<jule::I64>(_1a99adb23_AsI64(_131352_r.get()._field_Constant.ptr()));
		};
		if ((_132617_left > _133221_right)) {
			return;;
		};
		_1a99aeae1_SetStr(_131330_d.get()._field_Constant.ptr(), _133117_s.slice(_132617_left,_133221_right));
		_131330_d.get()._field_Decl=true;
	} else {
		_131330_d.get()._field_Constant=nullptr;
	};
}



inline void _1a99d829b_checkSlicing(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _134936_d, jule::Ptr<_1ac1c4bb6_Data>& _134947_l, jule::Ptr<_1ac1c4bb6_Data>& _134958_r, jule::Ptr<_1b395819b_SlicingExpr>& _134969_s) {
	{
		
		if ((_1a9a079b3_Arr(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aec1c552:;
			{
				_1a99d7971_slicingArr(&(*_self_), _134936_d);
				return;;
			}
		}
		else if ((_1a9a07c27_Slc(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aec1c5c9:;
			{
				return;;
			}
		}
		else if ((_1a9a06c9d_Prim(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aec1c651:;
			{
				jule::Ptr<_1a9a09663_Prim> _135717_prim = _1a9a06c9d_Prim(_134936_d.get()._field_Kind.ptr());;
				{
					
					if (_1a9a0c897_IsStr(_135717_prim.ptr())) {
						_case_begin_1aec1eb1a:;
						{
							_1a99d7d39_slicingStr(&(*_self_), _134936_d,_134947_l,_134958_r);
							return;;
						}
					}
					_match_end_1aec1ea71:;
				};
			}
		}
		_match_end_1aec1c420:;
	};
	_1ac1c6c40_pushErr(&(*_self_), _134969_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_134936_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99d85a9_evalSlicing(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b395819b_SlicingExpr> _136835_s) {
	jule::Ptr<_1ac1c4bb6_Data> _136917_d = _1a99e5c26_evalExprKind(_self_, _136835_s.get()._field_Expr.get()._field_Kind);;
	if ((_136917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _137418_l;;
	jule::Ptr<_1ac1c4bb6_Data> _137425_r;;
	std::tie(_137418_l,_137425_r) = _1a99d76eb_evalSlicingExprs(_self_, _136835_s);
	if ((_137418_l == nullptr)) {
		return _136917_d;
	};
	_136917_d.get()._field_Decl=false;
	_1a99d829b_checkSlicing(_self_.ptr(), _136917_d,_137418_l,_137425_r,_136835_s);
	if (_1ac1c5579_IsConst(_136917_d.ptr())) {
		_136917_d.get()._field_Decl=false;
		_136917_d.get()._field_Model=static_cast<jule::Any>(_136917_d.get()._field_Constant);
	} else if (_136917_d.get()._field_Decl) {
		_136917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1a99b6c91_SlicingExprModel> _139221_model = jule::new_ptr<_1a99b6c91_SlicingExprModel>(_1a99b6c91_SlicingExprModel{._field_Token=_136835_s.get()._field_Token, ._field_Expr=_136917_d.get()._field_Model, ._field_Left=_137418_l.get()._field_Model, });;
		if ((_137425_r != nullptr)) {
			_139221_model.get()._field_Right=_137425_r.get()._field_Model;
		};
		_136917_d.get()._field_Model=static_cast<jule::Any>(_139221_model);
	};
	return _136917_d;
}



inline void _1a99d8972_castPtr(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _140530_t, jule::Ptr<_1ac1c4bb6_Data> _140548_d, jule::Ptr<_1e6a5c800_Token> _140558_errorToken) {
	jule::Ptr<_1a9a0cde7_Sptr> _140613_sptr = _1a9a07012_Sptr(_140548_d.get()._field_Kind.ptr());;
	if ((_140613_sptr != nullptr)) {
		if ((!(_1a9a05395_Equals(_1a9a07276_Ptr(_140530_t.ptr()).get()._field_Elem, _140613_sptr.get()._field_Elem)))) {
			_1ac1c6c40_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_140530_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1a99cb7cd_isUnsafe(&(*_self_))))) {
		_1ac1c6c40_pushErr(&(*_self_), _140558_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a9a09663_Prim> _141913_prim = _1a9a06c9d_Prim(_140548_d.get()._field_Kind.ptr());;
	if (((_1a9a07276_Ptr(_140548_d.get()._field_Kind.ptr()) == nullptr) && ((_141913_prim == nullptr) || (!(_1ac12ab3e_IsInt(_1a9a099c6_Str(_141913_prim.ptr()))))))) {
		_1ac1c6c40_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_140530_t.ptr()))}));
	};
	_140548_d.get()._field_Constant=nullptr;
}



inline void _1a99d8d3a_castStruct(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _142733_t, jule::Ptr<_1ac1c4bb6_Data> _142751_d, jule::Ptr<_1e6a5c800_Token> _142761_errorToken) {
	jule::Ptr<_1b2551bec_Trait> _142817_tr = _1a9a08464_Trait(_142751_d.get()._field_Kind.ptr());;
	if ((_142817_tr == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_142733_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1b3967d9d_StructIns> _143417_s = _1a9a08200_Struct(_142733_t.ptr());;
	_1aec2c8c5_pushReference(&(*_self_), _143417_s);
	if ((!(_1b392d638_IsImplements(_143417_s.get()._field_Decl.ptr(), _142817_tr)))) {
		_1ac1c6c40_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_142733_t.ptr()))}));
	};
}



inline void _1a99d9203_castRef(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _144230_t, jule::Ptr<_1ac1c4bb6_Data> _144248_d, jule::Ptr<_1e6a5c800_Token> _144258_errorToken) {
	jule::Ptr<_1a9a0cde7_Sptr> _144317_sptr = _1a9a07012_Sptr(_144230_t.ptr());;
	jule::Ptr<_1a9a1145b_Ptr> _144517_ptr = _1a9a07276_Ptr(_144248_d.get()._field_Kind.ptr());;
	if (((_144517_ptr != nullptr) && _1a9a05395_Equals(_144317_sptr.get()._field_Elem, _144517_ptr.get()._field_Elem))) {
		if ((!(_1a99cb7cd_isUnsafe(&(*_self_))))) {
			_1ac1c6c40_pushErr(&(*_self_), _144258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a9a08200_Struct(_144317_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1a99d8d3a_castStruct(&(*_self_), _144317_sptr.get()._field_Elem,_144248_d,_144258_errorToken);
		return;;
	};
	_1ac1c6c40_pushErr(&(*_self_), _144258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_144248_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_144230_t.ptr()))}));
}



inline void _1a99d95bb_castSlc(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _146330_t, jule::Ptr<_1ac1c4bb6_Data> _146348_d, jule::Ptr<_1e6a5c800_Token> _146358_errorToken) {
	if ((_1a9a074da_Enum(_146348_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1a9a06c9d_Prim(_1a9a074da_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0c897_IsStr(_1a9a06c9d_Prim(_1a9a074da_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1ac1c6c40_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_146330_t.ptr()))}));
			return;;
		};
	} else if (((_1a9a06c9d_Prim(_146348_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0c897_IsStr(_1a9a06c9d_Prim(_146348_d.get()._field_Kind.ptr()).ptr()))))) {
		_1ac1c6c40_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_146330_t.ptr()))}));
		return;;
	};
	_146330_t=_1a9a07c27_Slc(_146330_t.ptr()).get()._field_Elem;
	jule::Ptr<_1a9a09663_Prim> _147513_prim = _1a9a06c9d_Prim(_146330_t.ptr());;
	if (((_147513_prim == nullptr) || ((!(_1a9a0ae6c_IsU8(_147513_prim.ptr()))) && (!(_1a9a0a994_IsI32(_147513_prim.ptr())))))) {
		_1ac1c6c40_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_146330_t.ptr()))}));
	};
}



inline void _1a99d98da_castStr(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _148130_d, jule::Ptr<_1e6a5c800_Token> _148140_errorToken) {
	if ((_1a9a074da_Enum(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2553d42_Enum> _148321_e = _1a9a074da_Enum(_148130_d.get()._field_Kind.ptr());;
		if (((_1a9a06c9d_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1a9a0c897_IsStr(_1a9a06c9d_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a9a06c9d_Prim(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9a09663_Prim> _149017_prim = _1a9a06c9d_Prim(_148130_d.get()._field_Kind.ptr());;
		if (((!(_1a9a0ae6c_IsU8(_149017_prim.ptr()))) && (!(_1a9a0a994_IsI32(_149017_prim.ptr()))))) {
			_1ac1c6c40_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a9a05087_Str(_148130_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1a9a07c27_Slc(_148130_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a9a05087_Str(_148130_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _150217_t = _1a9a07c27_Slc(_148130_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1a9a09663_Prim> _150313_prim = _1a9a06c9d_Prim(_150217_t.ptr());;
	if (((_150313_prim == nullptr) || ((!(_1a9a0ae6c_IsU8(_150313_prim.ptr()))) && (!(_1a9a0a994_IsI32(_150313_prim.ptr())))))) {
		_1ac1c6c40_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a9a05087_Str(_148130_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1a99d9ca3_castInt(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _150930_t, jule::Ptr<_1ac1c4bb6_Data> _150948_d, jule::Ptr<_1e6a5c800_Token> _150958_errorToken) {
	if (_1ac1c5579_IsConst(_150948_d.ptr())) {
		jule::Ptr<_1a9a09663_Prim> _151117_prim = _1a9a06c9d_Prim(_150930_t.ptr());;
		{
			
			if (_1ac12a5ab_IsSigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1aec479bc:;
				{
					_1a99ae371_SetI64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ac12a897_IsUnsigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1aec47a44:;
				{
					_1a99ae5e6_SetU64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1aec47912:;
		};
	};
	if ((_1a9a074da_Enum(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2553d42_Enum> _152117_e = _1a9a074da_Enum(_150948_d.get()._field_Kind.ptr());;
		if (_1ac12b205_IsNum(_1a9a05087_Str(_152117_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a9a07012_Sptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9a09663_Prim> _152817_prim = _1a9a06c9d_Prim(_150930_t.ptr());;
		if ((!(_1a9a0c3be_IsUintptr(_152817_prim.ptr())))) {
			_1ac1c6c40_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	if ((_1a9a07276_Ptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9a09663_Prim> _153517_prim = _1a9a06c9d_Prim(_150930_t.ptr());;
		if (_1a9a0c3be_IsUintptr(_153517_prim.ptr())) {
		} else if ((!(_1a99cb7cd_isUnsafe(&(*_self_))))) {
			_1ac1c6c40_pushErr(&(*_self_), _150958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1a9a0a994_IsI32(_153517_prim.ptr()))) && (!(_1a9a0ac08_IsI64(_153517_prim.ptr())))) && (!(_1a9a0b1d1_IsU16(_153517_prim.ptr())))) && (!(_1a9a0b445_IsU32(_153517_prim.ptr())))) && (!(_1a9a0b6a9_IsU64(_153517_prim.ptr()))))) {
			_1ac1c6c40_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1a9a09663_Prim> _154613_prim = _1a9a06c9d_Prim(_150948_d.get()._field_Kind.ptr());;
	if (((_154613_prim != nullptr) && _1ac12b205_IsNum(_1a9a099c6_Str(_154613_prim.ptr())))) {
		return;;
	};
	_1ac1c6c40_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_150930_t.ptr()))}));
}



inline void _1a99da16b_castNum(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _155430_t, jule::Ptr<_1ac1c4bb6_Data> _155448_d, jule::Ptr<_1e6a5c800_Token> _155458_errorToken) {
	if (_1ac1c5579_IsConst(_155448_d.ptr())) {
		jule::Ptr<_1a9a09663_Prim> _155617_prim = _1a9a06c9d_Prim(_155430_t.ptr());;
		{
			
			if (_1ac12ae5d_IsFloat(_155617_prim.get()._field_Kind)) {
				_case_begin_1aec530c1:;
				{
					_1a99aed66_SetF64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a99ae0eb_AsF64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ac12a5ab_IsSigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1aec53148:;
				{
					_1a99ae371_SetI64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ac12a897_IsUnsigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1aec531c0:;
				{
					_1a99ae5e6_SetU64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1aec53005:;
		};
	};
	if ((_1a9a074da_Enum(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2553d42_Enum> _156817_e = _1a9a074da_Enum(_155448_d.get()._field_Kind.ptr());;
		if (_1ac12b205_IsNum(_1a9a05087_Str(_156817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a9a09663_Prim> _157413_prim = _1a9a06c9d_Prim(_155448_d.get()._field_Kind.ptr());;
	if (((_157413_prim != nullptr) && _1ac12b205_IsNum(_1a9a099c6_Str(_157413_prim.ptr())))) {
		return;;
	};
	_1ac1c6c40_pushErr(&(*_self_), _155458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_155448_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_155430_t.ptr()))}));
}



inline void _1a99da534_castPrim(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _158231_t, jule::Ptr<_1ac1c4bb6_Data> _158249_d, jule::Ptr<_1e6a5c800_Token> _158259_errorToken) {
	jule::Ptr<_1a9a09663_Prim> _158313_prim = _1a9a06c9d_Prim(_158231_t.ptr());;
	{
		
		if (_1a9a0cb0b_IsAny(_158313_prim.ptr())) {
			_case_begin_1aec58c42:;
		}
		else if (_1a9a0c897_IsStr(_158313_prim.ptr())) {
			_case_begin_1aec592b4:;
			{
				_1a99d98da_castStr(&(*_self_), _158249_d,_158259_errorToken);
			}
		}
		else if (_1ac12ab3e_IsInt(_1a9a099c6_Str(_158313_prim.ptr()))) {
			_case_begin_1aec5932a:;
			{
				_1a99d9ca3_castInt(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else if (_1ac12b205_IsNum(_1a9a099c6_Str(_158313_prim.ptr()))) {
			_case_begin_1aec59391:;
			{
				_1a99da16b_castNum(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else {
			_case_begin_1aec5924d:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _158259_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_158231_t.ptr()))}));
			}
		}
		_match_end_1aec591d7:;
	};
}



inline void _1a99da853_castConstant(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _159836_t, jule::Ptr<_1ac1c4bb6_Data>& _159855_d) {
	if (((_159855_d == nullptr) || (!(_1ac1c5579_IsConst(_159855_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a9a09663_Prim> _160213_prim = _1a9a06c9d_Prim(_159836_t.ptr());;
	_1a9a01ca9_castConstByType(_160213_prim.get()._field_Kind,_159855_d);
	_159855_d.get()._field_Model=static_cast<jule::Any>(_159855_d.get()._field_Constant);
}



inline void _1a99dac1b_castTypeEnum(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _160736_t, jule::Ptr<_1ac1c4bb6_Data>& _160755_d, jule::Ptr<_1e6a5c800_Token>& _160770_errorToken) {
	jule::I64 _160813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1ac164d98_checkTypeCompatibility((*_self_)._field_s, _160755_d.get()._field_Kind,_160736_t,_160770_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_160813_n);
		_1ac1c6c40_pushErr(&(*_self_), _160770_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_160755_d.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_160736_t.ptr()))}));
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99db16c_evalCastByTypeNData(_1ac1c6734_Eval* _self_, jule::Ptr<_1a9a04b8b_TypeKind> _161542_t, jule::Ptr<_1ac1c4bb6_Data> _161560_d, jule::Ptr<_1e6a5c800_Token> _161574_errorToken) {
	if (((_161560_d != nullptr) && _161560_d.get()._field_Decl)) {
		_1ac1c6c40_pushErr(&(*_self_), _161574_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1a9a06c9d_Prim(_161560_d.get()._field_Kind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_161560_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1aec62b91:;
			{
				if ((_1a9a074da_Enum(_161542_t.ptr()) != nullptr)) {
					_1ac1c6c40_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1a9a0774e_TypeEnum(_161542_t.ptr()) != nullptr)) {
					_1ac1c6c40_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1a9a0774e_TypeEnum(_161560_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aec62003:;
			{
				_1a99dac1b_castTypeEnum(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1a9a07276_Ptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1aec62069:;
			{
				_1a99d8972_castPtr(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1a9a07012_Sptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1aec620d0:;
			{
				_1a99d9203_castRef(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1a9a07c27_Slc(_161542_t.ptr()) != nullptr)) {
			_case_begin_1aec62146:;
			{
				_1a99d95bb_castSlc(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1a9a08200_Struct(_161542_t.ptr()) != nullptr)) {
			_case_begin_1aec62ce5:;
			{
				_1a99d8d3a_castStruct(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1a9a06c9d_Prim(_161542_t.ptr()) != nullptr)) {
			_case_begin_1aec62d5b:;
			{
				_1a99da534_castPrim(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
				_1a99da853_castConstant(&(*_self_), _161542_t,_161560_d);
			}
		}
		else {
			_case_begin_1aec61e8c:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _161574_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_161542_t.ptr()))}));
				_161560_d=nullptr;
			}
		}
		_match_end_1aec61e37:;
	};
	if ((_161560_d == nullptr)) {
		return nullptr;
	};
	_161560_d.get()._field_Mutable=(_161560_d.get()._field_Mutable || ((!(_1a9a06088_Mutable(_161560_d.get()._field_Kind.ptr()))) && _1a9a06088_Mutable(_161542_t.ptr())));
	_161560_d.get()._field_Lvalue=false;
	_161560_d.get()._field_Decl=false;
	if (((_1a9a074da_Enum(_161560_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a05395_Equals(_1a9a074da_Enum(_161560_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _161542_t))))) {
		_1a9a01270_applyCastKind(_161560_d,_161542_t);
		_161560_d.get()._field_Model.operator jule::Ptr<_1a99b5e27_CastingExprModel>().get()._field_Token=_161574_errorToken;
	} else {
		_161560_d.get()._field_Kind=_161542_t;
	};
	return _161560_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99db5bd_evalCastT(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _166834_t, jule::Ptr<_1b3950847_Expr>& _166853_e, jule::Ptr<_1e6a5c800_Token>& _166868_et) {
	jule::Ptr<_1a9a04b8b_TypeKind> _166917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_166917_prefix;
	});;
	if ((_1a9a07c27_Slc(_166834_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _166853_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1b3957200_SliceExpr>>()) {
				_case_begin_1aec6d33e:;
				{
					_self_.get()._field_prefix=_166834_t;
				}
			}
			_match_end_1aec6d42c:;
		};
	};
	jule::Ptr<_1ac1c4bb6_Data> _167817_d = _1a99e5c26_evalExprKind(_self_, _166853_e.get()._field_Kind);;
	if (((_167817_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _167817_d;
	};
	return _1a99db16c_evalCastByTypeNData(_self_.ptr(), _166834_t,_167817_d,_166868_et);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99db8cb_evalCast(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3953828_CastExpr> _168532_c) {
	jule::Ptr<_1a9a08ce4_TypeSymbol> _168617_t = _1a99c49a2_buildType(_168532_c.get()._field_Kind);;
	jule::Bool _168713_ok = _1ac162cb9_checkType(_self_.get()._field_s, _168617_t,_self_.get()._field_lookup);;
	if ((!(_168713_ok))) {
		return nullptr;
	};
	return _1a99db5bd_evalCastT(_self_, _168617_t.get()._field_Kind,_168532_c.get()._field_Expr,_168532_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99dbbd9_evalNsSelection(_1ac1c6734_Eval* _self_, jule::Ptr<_1b3953bd0_NsSelectionExpr> _169434_s) {
	jule::Str _169513_path = _1a9a1c6ba_buildLinkPathByTokens(_169434_s.get()._field_Ns);;
	jule::Ptr<_1ac1530c8_ImportInfo> _169617_imp = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1dbb6_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>([=](jule::Ptr<_1ac1530c8_ImportInfo> _169652_imp) mutable -> jule::Bool {
		if (((_169434_s.get()._field_Ns.len() == 1LL) && (_169652_imp.get()._field_Alias == _169513_path))) {
			return true;
		};
		return ((_169652_imp.get()._field_LinkPath == _169513_path) && _1ac155c35_isAccessibleViaSelection(_169652_imp.ptr()));
	}));;
	if ((_169617_imp == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _169434_s.get()._field_Ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_169513_path)}));
		return nullptr;
	};
	jule::Trait<_1a9a20701_Lookup> _170817_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a9a20701_Lookup>(_169617_imp, 1);
	;
	_1ac1c7416_disallowBuiltin(&(*_self_));
	jule::Any _171317_def = _1a99cdd96_getDef(&(*_self_), _169434_s.get()._field_Ident.get()._field_Kind,false);;
	_1ac1c723a_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_170817_lookup;
	jule::Ptr<_1ac1c4bb6_Data> _171617_d = _1a99d287d_evalDef(&(*_self_), jule::Any(_171317_def),_169434_s.get()._field_Ident);;
	return _171617_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc13a_evalStructLitExplicit(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3967d9d_StructIns> _172045_s, jule::Slice<jule::Ptr<_1b3950847_Expr>> _172113_exprs, jule::Ptr<_1e6a5c800_Token> _172133_errorToken) {
	jule::Bool _172213_ok = _1ac16027d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172045_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_172045_s.get()._field_Generics.len()),_172133_errorToken);;
	if ((!(_172213_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _172045_s.get()._field_Decl))) {
		_1ac1c6c40_pushErr(_self_.ptr(), _172133_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172045_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1aec2c8c5_pushReference(_self_.ptr(), _172045_s);
	_1a99d0c88_checkDeprecated(_self_.ptr(), _172045_s.get()._field_Decl.get()._field_Directives,_172133_errorToken);
	_1ac1b9370_structLitChecker _173517_slc = _1ac1b9370_structLitChecker{._field_e=_self_, ._field_errorToken=_172133_errorToken, ._field_s=_172045_s, };;
	_1ac1ba915_check(&_173517_slc, _172113_exprs);
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_172045_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5a4d_StructLitExprModel>(_1a99b5a4d_StructLitExprModel{._field_Strct=_172045_s, ._field_Args=_173517_slc._field_args})), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc448_evalStructLit(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3955ce2_StructLit> _175437_lit) {
	jule::Ptr<_1a9a08ce4_TypeSymbol> _175517_t = _1a99c49a2_buildType(_175437_lit.get()._field_Kind);;
	jule::Bool _175613_ok = _1ac162cb9_checkType(_self_.get()._field_s, _175517_t,_self_.get()._field_lookup);;
	if ((!(_175613_ok))) {
		return nullptr;
	};
	jule::Ptr<_1b3967d9d_StructIns> _176117_s = _1a9a08200_Struct(_175517_t.get()._field_Kind.ptr());;
	if ((_176117_s == nullptr)) {
		if ((_1a9a07012_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
			_176117_s=_1a9a08200_Struct(_1a9a07012_Sptr(_175517_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_176117_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1ac1c6c40_pushErr(_self_.ptr(), _175437_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1ac1c4bb6_Data> _177417_d = _1a99dc13a_evalStructLitExplicit(_self_, _176117_s,_175437_lit.get()._field_Exprs,_175437_lit.get()._field_Kind.get()._field_Token);;
	if ((_1a9a07012_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a99b5a4d_StructLitExprModel> _177621_model = _177417_d.get()._field_Model.operator jule::Ptr<_1a99b5a4d_StructLitExprModel>();;
		_1a99eebca_makeStructLitAlloc(_177417_d,_177621_model);
	};
	return _177417_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99dc756_evalType(_1ac1c6734_Eval* _self_, jule::Ptr<_1b394b326_TypeDecl> _178231_t) {
	jule::Ptr<_1a9a08ce4_TypeSymbol> _178317_tk = _1a99c49a2_buildType(_178231_t);;
	jule::Bool _178413_ok = _1ac162cb9_checkType((*_self_)._field_s, _178317_tk,(*_self_)._field_lookup);;
	if ((!(_178413_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=_178317_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_178317_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1a99dca75_callTypeFn(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954b15_FnCallExpr>& _179535_fc, jule::Ptr<_1ac1c4bb6_Data>& _179557_d) {
	if ((_179535_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _179535_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_179535_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _179535_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_179535_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1b3950847_Expr> _180321_arg = _179535_fc.get()._field_Args[0LL];;
		_179557_d=_1a99db5bd_evalCastT(_self_, _179557_d.get()._field_Kind,_180321_arg,_180321_arg.get()._field_Token);
		return;;
	};
	if ((_179557_d != nullptr)) {
		_179557_d.get()._field_Decl=false;
	};
}



inline void _1a99dcd94_callBuiltinFn(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954b15_FnCallExpr>& _181338_fc, jule::Ptr<_1ac1c4bb6_Data>& _181360_d) {
	_181360_d=_1a9a07e8b_Fn(_181360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_181338_fc,_181360_d);
	if ((_181360_d == nullptr)) {
		return;;
	};
	_181360_d.get()._field_Mutable=true;
}



inline void _1a99dd1d5_checkFnOfConcurrentCall(_1ac1c6734_Eval* _self_, jule::Ptr<_1a99c03b5_FnIns>& _182143_f, jule::Ptr<_1e6a5c800_Token> _182154_errorToken) {
	if (_1a99cb7cd_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _182143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aec8b47d:;
		if (it != expr.end()) {
			jule::Ptr<_1a99be4e6_ParamIns> &_182516_p = *it;
			{
				if (_182516_p.get()._field_Decl.get()._field_Reference) {
					_1ac1c6c40_pushErr(&(*_self_), _182154_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1aec8b47d:;
			++it;
			goto _iter_begin_1aec8b47d;
		}
		_iter_end_1aec8b47d:;
	};
}



inline void _1a99dd5d1_processExceptionalHandler(_1ac1c6734_Eval* _self_, jule::Ptr<_1a99c03b5_FnIns>& _183349_f, jule::Ptr<_1b3954b15_FnCallExpr>& _183365_fc, jule::Ptr<_1ac1c4bb6_Data>& _183387_d) {
	jule::Bool _183413_resultNeeded = ((!(_1a99bcb76_IsVoid(_183349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1ac13b358_scopeChecker> _183517_csc = nullptr;;
	jule::Ptr<_1ac1346e7_Scope> _183617_ch = nullptr;;
	jule::Ptr<_1a99b6114_FnCallExprModel> _183817_model = _183387_d.get()._field_Model.operator jule::Ptr<_1a99b6114_FnCallExprModel>();;
	jule::Ptr<_1ac13b358_scopeChecker> _184217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>();;
	_183517_csc=_1ac14b885_newChildChecker(_184217_sc);
	if (_183413_resultNeeded) {
		_183517_csc.get()._field_result=_183349_f;
	};
	_183617_ch=_1ac140c20_getChild(_184217_sc.ptr());
	_183365_fc.get()._field_Exception.get()._field_Parent=_184217_sc.get()._field_tree;
	_183517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_183517_csc.get()._field_table.get()._field_Vars,1);_183517_csc.get()._field_table.get()._field_Vars.__push(_1a9a0001b_buildErrorVar(_183617_ch,_183365_fc));;
	_1ac1410d8_checkChildSsc(_184217_sc, _183365_fc.get()._field_Exception,_183617_ch,_183517_csc);
	_183817_model.get()._field_Assigned=_183413_resultNeeded;
	_183817_model.get()._field_Except=_183617_ch;
	if ((_183413_resultNeeded && (_183517_csc.get()._field_result != nullptr))) {
		_1ac1c6c40_pushErr(&(*_self_), _183365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a99dd911_callFn(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954b15_FnCallExpr>& _186031_fc, jule::Ptr<_1ac1c4bb6_Data>& _186053_d) {
	jule::Ptr<_1a99c03b5_FnIns> _186117_f = _1a9a07e8b_Fn(_186053_d.get()._field_Kind.ptr());;
	if ((_1a99cb9ed_isGlobal(_self_.ptr()) && _186117_f.get()._field_Decl.get()._field_Exceptional)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1ac1c705e_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (_1a99c174b_IsBuiltin(_186117_f.ptr())) {
		_1a99dcd94_callBuiltinFn(_self_, _186031_fc,_186053_d);
		return;;
	};
	if (((!(_1a99bcdda_IsMethod(_186117_f.get()._field_Decl.ptr()))) && _1a9a1b81d_hasDirective(_186117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (((((!(_186053_d.get()._field_Mutable)) && _1a99bcdda_IsMethod(_186117_f.get()._field_Decl.ptr())) && (!(_186117_f.get()._field_Decl.get()._field_Statically))) && _186117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1a99cb7cd_isUnsafe(_self_.ptr()))) && _186117_f.get()._field_Decl.get()._field_Unsafety)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _188517_dynamicAnnotation = (((_186117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_186117_f.get()._field_Generics.len() == 0LL)) && (_186117_f.get()._field_Params.len() > 0LL));;
	if (_188517_dynamicAnnotation) {
		_186117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>::alloc(_186117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_186117_f.get()._field_Generics.len() != _186117_f.get()._field_Decl.get()._field_Generics.len())) {
		_1ac16027d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_186117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_186117_f.get()._field_Generics.len()),_186031_fc.get()._field_Token);
		_186053_d=nullptr;
		return;;
	};
	jule::Ptr<_1ac15b224_Sema> _189417_old = _self_.get()._field_s;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_186117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_189417_old != _self_.get()._field_s)) {
			_189417_old.get()._field_errors=jule::append(_189417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_189417_old;
	});;
	if ((!(_188517_dynamicAnnotation))) {
		if ((!(_186117_f.get()._field_reloaded))) {
			jule::Bool _190921_ok = _1ac166b36_reloadFnInsTypes(_self_.get()._field_s, _186117_f);;
			_186117_f.get()._field_reloaded=true;
			if ((!(_190921_ok))) {
				_186053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a99c03b5_FnIns> _191621_existInstance = _1a99be13e_appendInstance(_186117_f.get()._field_Decl.ptr(), _186117_f);;
		if ((_191621_existInstance != nullptr)) {
			_186117_f=_191621_existInstance;
		};
	} else {
		_1ac16552a_buildFnNonGenericTypeKinds(_self_.get()._field_s, _186117_f);
	};
	_1ac1b6966_fnCallArgChecker _192417_fcac = _1ac1b6966_fnCallArgChecker{._field_e=_self_, ._field_args=_186031_fc.get()._field_Args, ._field_errorToken=_186031_fc.get()._field_Token, ._field_f=_186117_f, ._field_dynamicAnnotation=_188517_dynamicAnnotation, };;
	jule::Bool _193117_ok = false;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
		_193117_ok=_1ac1b8d31_check(&_192417_fcac);
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
	} else {
		_193117_ok=_1ac1b8d31_check(&_192417_fcac);
	};
	if (_188517_dynamicAnnotation) {
		if ((!(_193117_ok))) {
			_186053_d=nullptr;
			return;;
		};
		if ((!(_1a99d6c7d_checkGenericFn(_self_, _186117_f,_186031_fc.get()._field_Token,_186053_d.get()._field_Model)))) {
			_186053_d=nullptr;
			return;;
		};
	};
	jule::Any _195117_callModel = _186053_d.get()._field_Model;;
	if (_1a99bcb76_IsVoid(_186117_f.get()._field_Decl.ptr())) {
		_186053_d=_1a9a0146d_buildVoidData();
	} else {
		_186053_d.get()._field_Kind=_186117_f.get()._field_Result;
		_186053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1a99b6114_FnCallExprModel> _196017_model = jule::new_ptr<_1a99b6114_FnCallExprModel>(_1a99b6114_FnCallExprModel{._field_Token=_186031_fc.get()._field_Token, ._field_Func=_186117_f, ._field_Expr=_195117_callModel, ._field_Args=_192417_fcac._field_argModels, });;
	_186053_d.get()._field_Model=static_cast<jule::Any>(_196017_model);
	_186053_d.get()._field_Mutable=true;
	if (_186117_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1b3954e78_Unhandled(_186031_fc.ptr())) {
				_case_begin_1ae960729:;
				{
					_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1ac1c705e_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1b39551dc_Ignored(_186031_fc.ptr())) {
				_case_begin_1ae9600ec:;
				{
					goto _match_end_1ae95eea9;
				}
			}
			else {
				_case_begin_1ae960086:;
				{
					_1a99dd5d1_processExceptionalHandler(_self_.ptr(), _186117_f,_186031_fc,_186053_d);
				}
			}
			_match_end_1ae95eea9:;
		};
	} else if ((!(_1b3954e78_Unhandled(_186031_fc.ptr())))) {
		_1ac1c6c40_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ddc1e_evalFnCall(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954b15_FnCallExpr> _198634_fc) {
	jule::Ptr<_1a9a04b8b_TypeKind> _198717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198717_prefix;
	});;
	{
		auto &_match_expr{ _198634_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
			_case_begin_1ae963331:;
			{
				if ((_198634_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1a9a7eebe_builtinCallerError(_self_,_198634_fc);
				};
			}
		}
		_match_end_1ae9632cb:;
	};
	jule::Ptr<_1ac1c4bb6_Data> _200017_d = _1a99e5c26_evalExprKind(_self_, _198634_fc.get()._field_Expr.get()._field_Kind);;
	if ((_200017_d == nullptr)) {
		return nullptr;
	};
	if (_200017_d.get()._field_Decl) {
		_1a99dca75_callTypeFn(_self_, _198634_fc,_200017_d);
		return _200017_d;
	};
	if ((_1a9a07e8b_Fn(_200017_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ac1c6c40_pushErr(_self_.ptr(), _198634_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a99dd911_callFn(_self_, _198634_fc,_200017_d);
	return _200017_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99de0c6_evalEnumStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1b2553d42_Enum> _201937_enm, jule::Ptr<_1e6a5c800_Token> _201949_ident) {
	jule::Ptr<_1ac1c4bb6_Data> _202017_d = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_201937_enm, 3)}), });;
	jule::Ptr<_1b255334c_EnumItem> _202617_item = _1b2554903_FindItem(_201937_enm.ptr(), _201949_ident.get()._field_Kind);;
	if ((_202617_item == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _201949_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201937_enm.get()._field_Ident),jule::Any(_201949_ident.get()._field_Kind)}));
	} else {
		_202017_d.get()._field_Constant=jule::new_ptr<_1a9956c86_Const>((*(_202617_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_202017_d.get()._field_Model=static_cast<jule::Any>(_202017_d.get()._field_Constant);
		_1a9a01a01_applyCastModelByEnum(_202017_d,_201937_enm);
	};
	return _202017_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99de47d_evalTypeEnumStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1b255543c_TypeEnum> _203841_enm, jule::Ptr<_1e6a5c800_Token> _203857_ident) {
	jule::Ptr<_1b2554d76_TypeEnumItem> _203917_item = _1b2555e76_FindItem(_203841_enm.ptr(), _203857_ident.get()._field_Kind);;
	if ((_203917_item == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _203857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203841_enm.get()._field_Ident),jule::Any(_203857_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1a9a074da_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae96bd62:;
			{
				return _1a99ce429__evalEnum(&(*_self_), _1a9a074da_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1a9a0774e_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae96c060:;
			{
				return _1a99ceade__evalTypeEnum(&(*_self_), _1a9a0774e_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1a9a08200_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae96b27e:;
			{
				return _1a99d02a4__evalStruct(&(*_self_), _1a9a08200_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1ae96a4d1:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _205221_d = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=_203917_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_205221_d.get()._field_Model=static_cast<jule::Any>(_205221_d.get()._field_Kind);
				return _205221_d;
			}
		}
		_match_end_1ae96a47b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99de835_evalStructStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1b3967d9d_StructIns> _206139_s, jule::Ptr<_1e6a5c800_Token> _206154_ident) {
	jule::Ptr<_1ac1c4bb6_Data> _206217_d = jule::new_ptr<_1ac1c4bb6_Data>();;
	;
	jule::Ptr<_1a99bc714_Fn> _206617_method = _1b3942eaa_FindMethod(_206139_s.ptr(), _206154_ident.get()._field_Kind,true);;
	if ((_206617_method != nullptr)) {
		if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _206617_method.get()._field_Public,_206617_method.get()._field_Token)))) {
			_1ac1c6c40_pushErr(&(*_self_), _206154_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206154_ident.get()._field_Kind)}));
			_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a99c03b5_FnIns> _207321_ins = _1a99bdd64_instance(_206617_method);;
		_207321_ins.get()._field_Owner=_206139_s;
		_1b0913434_pushReference(&(*_self_), _207321_ins);
		_206217_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7588_StructStaticIdentExprModel>(_1a99b7588_StructStaticIdentExprModel{._field_Structure=_206139_s, ._field_Expr=_206217_d.get()._field_Model, ._field_Method=_207321_ins}));
		_206217_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_207321_ins, 1)});
		return _206217_d;
	};
	jule::Ptr<_1ac17c960_Var> _208717_sttc = _1b392be1c_FindStatic(_206139_s.get()._field_Decl.ptr(), _206154_ident.get()._field_Kind);;
	if ((_208717_sttc != nullptr)) {
		return _1a99d211e_evalVar(&(*_self_), _208717_sttc,_206154_ident);
	};
	_1ac1c6c40_pushErr(&(*_self_), _206154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206139_s.get()._field_Decl.get()._field_Ident),jule::Any(_206154_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99dec86_evalTraitSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _209640_d, jule::Ptr<_1b2551bec_Trait> _209654_trt, jule::Ptr<_1e6a5c800_Token> _209671_ident) {
	jule::Ptr<_1a99bc714_Fn> _209717_f = _1b2552a77_FindMethod(_209654_trt.ptr(), _209671_ident.get()._field_Kind);;
	if ((_209717_f == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _209671_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209654_trt.get()._field_Ident),jule::Any(_209671_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a99bdd64_instance(_209717_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b6e7d_TraitSubIdentExprModel>(_1a99b6e7d_TraitSubIdentExprModel{._field_Token=_209671_ident, ._field_Expr=_209640_d.get()._field_Model, ._field_Method=_209717_f, ._field_Trt=_209654_trt})), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0281_evalStructSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _211541_d, jule::Ptr<_1b3967d9d_StructIns> _211555_s, jule::Ptr<_1b3954153_SubIdentExpr> _211574_si, jule::Bool _211593_ref) {
	jule::Ptr<_1b3944154_FieldIns> _211617_f = _1b39459c4_FindField(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind);;
	if ((_211617_f != nullptr)) {
		if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _211617_f.get()._field_Decl.get()._field_Public,_211617_f.get()._field_Decl.get()._field_Token)))) {
			_1ac1c6c40_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_211617_f.get()._field_Decl.get()._field_Ident)}));
			_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a99b739b_StructSubIdentExprModel> _212321_model = jule::new_ptr<_1a99b739b_StructSubIdentExprModel>(_1a99b739b_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*(_211541_d))), ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Field=_211617_f});;
		_211541_d.get()._field_Model=static_cast<jule::Any>(_212321_model);
		_211541_d.get()._field_Kind=_211617_f.get()._field_Kind;
		_211541_d.get()._field_Lvalue=true;
		if ((_211617_f.get()._field_Decl.get()._field_Mutable && (!(_211541_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
					_case_begin_1ae97d1d6:;
					{
						jule::Ptr<_1ac13b358_scopeChecker> _213725_scope = _1ac13e46b_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>());;
						_211541_d.get()._field_Mutable=((_213725_scope.get()._field_owner != nullptr) && (_213725_scope.get()._field_owner.get()._field_Owner == _211555_s));
					}
				}
				_match_end_1ae97d181:;
			};
		};
		return _211541_d;
	};
	;
	jule::Ptr<_1a99bc714_Fn> _214617_m = _1b3942eaa_FindMethod(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_214617_m == nullptr)) {
		_1ac1c6c40_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211555_s.get()._field_Decl.get()._field_Ident),jule::Any(_211574_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _214617_m.get()._field_Public,_214617_m.get()._field_Token)))) {
		_1ac1c6c40_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214617_m.get()._field_Ident)}));
		_1ac1c705e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1a99bb768_IsRef(_214617_m.get()._field_Params[0LL].ptr()) && (!(_211593_ref)))) {
		_1ac1c6c40_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1a99d0c88_checkDeprecated(&(*_self_), _214617_m.get()._field_Directives,_211574_si.get()._field_Ident);
	jule::Ptr<_1a99c03b5_FnIns> _216217_ins = _1a99bdd64_instance(_214617_m);;
	_216217_ins.get()._field_Owner=_211555_s;
	_1b0913434_pushReference(&(*_self_), _216217_ins);
	jule::Ptr<_1ac1c4bb6_Data> _216517_model = jule::new_ptr<_1ac1c4bb6_Data>((*(_211541_d)));;
	_211541_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b739b_StructSubIdentExprModel>(_1a99b739b_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=_216517_model, ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Method=_216217_ins, }));
	_211541_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_216217_ins, 1)});
	return _211541_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0638_evalSliceSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _217640_d, jule::Ptr<_1e6a5c800_Token> _217654_ident) {
	{
		auto &_match_expr{ _217654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ae986e04:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ae986e6a:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ae986ed1:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::make({jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_217640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ae986d8d:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _217654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_217640_d.get()._field_Kind.ptr())),jule::Any(_217654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae986b4b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e09e0_evalArraySubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _223540_d, jule::Ptr<_1e6a5c800_Token> _223554_ident) {
	{
		auto &_match_expr{ _223554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ae988213:;
			{
				jule::Ptr<_1a9956c86_Const> _223821_c = static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a9a079b3_Arr(_223540_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_223821_c), ._field_Constant=_223821_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ae98d339:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::make({jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_223540_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_223540_d.get()._field_Kind, ._field_Expr=_223540_d.get()._field_Model, ._field_Token=_223554_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ae98c316:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _223554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_223540_d.get()._field_Kind.ptr())),jule::Any(_223554_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae98c25b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e0d97_evalMapSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _227938_d, jule::Ptr<_1e6a5c800_Token> _227952_ident) {
	jule::Ptr<_1a9a0ee0a_Map> _228017_mapKind = _1a9a086c8_Map(_227938_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _227952_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ae993284:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1ae9932ea:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1ae993163:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Result=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_228017_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1ae9931c9:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Result=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_228017_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1ae99242b:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::make({jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2d24cc_builtinCallerCommon), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1ae992492:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::make({jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ed9b0_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1ae9923b5:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _227952_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a9a1026d_Str(_228017_mapKind.ptr())),jule::Any(_227952_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae99231b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e124e_evalStrSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _240138_d, jule::Ptr<_1e6a5c800_Token> _240152_ident) {
	jule::Ptr<_1a9a04b8b_TypeKind> _240217_strKind = jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _240152_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ae99bbe9:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _240521_sd = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1ac1c5579_IsConst(_240138_d.ptr())) {
					_240521_sd.get()._field_Constant=static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a99ad64a_ReadStr(_240138_d.get()._field_Constant.ptr()).len())));
					_240521_sd.get()._field_Model=static_cast<jule::Any>(_240521_sd.get()._field_Constant);
				} else {
					_240521_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _240521_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ae99bc60:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _242121_sd = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1ac1c5579_IsConst(_240138_d.ptr())) {
					_242121_sd.get()._field_Constant=static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a99ad64a_ReadStr(_240138_d.get()._field_Constant.ptr()).cap())));
					_242121_sd.get()._field_Model=static_cast<jule::Any>(_242121_sd.get()._field_Constant);
				} else {
					_242121_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _242121_sd;
			}
		}
		else {
			_case_begin_1ae99bb83:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _240152_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_240217_strKind.ptr())),jule::Any(_240152_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae99bad9:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e155c_evalIntTypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _244236_ident) {
	;
	{
		auto &_match_expr{ _244236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae99d8ee:;
			{
				jule::Ptr<_1a9956c86_Const> _244721_c = static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac125760_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_244721_c), ._field_Constant=_244721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9a3b68:;
			{
				jule::Ptr<_1a9956c86_Const> _245421_c = static__1a99abd0d_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac125474_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245421_c), ._field_Constant=_245421_c});
			}
		}
		else {
			_case_begin_1ae9a2dba:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _244236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_244236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9a2c22:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e186a_evalUintTypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _246637_ident) {
	;
	{
		auto &_match_expr{ _246637_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9a65b6:;
			{
				jule::Ptr<_1a9956c86_Const> _247121_c = static__1a99abe40_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1ac125760_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_247121_c), ._field_Constant=_247121_c});
			}
		}
		else {
			_case_begin_1ae9a684c:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _246637_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_246637_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9a67a3:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e1b78_evalI8TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _248335_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248335_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9a97c8:;
			{
				jule::Ptr<_1a9956c86_Const> _249021_c = static__1a99abd0d_NewI64(127LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249021_c), ._field_Constant=_249021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9a983e:;
			{
				jule::Ptr<_1a9956c86_Const> _249721_c = static__1a99abd0d_NewI64(-128LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249721_c), ._field_Constant=_249721_c});
			}
		}
		else {
			_case_begin_1ae9a971d:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _248335_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_248335_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9a96b8:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e1e86_evalI16TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _250936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9ad4ad:;
			{
				jule::Ptr<_1a9956c86_Const> _251621_c = static__1a99abd0d_NewI64(32767LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251621_c), ._field_Constant=_251621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9ad524:;
			{
				jule::Ptr<_1a9956c86_Const> _252321_c = static__1a99abd0d_NewI64(-32768LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252321_c), ._field_Constant=_252321_c});
			}
		}
		else {
			_case_begin_1ae9ad403:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _250936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_250936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9ad39d:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2294_evalI32TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _253536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9b2193:;
			{
				jule::Ptr<_1a9956c86_Const> _254221_c = static__1a99abd0d_NewI64(2147483647LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254221_c), ._field_Constant=_254221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9b2209:;
			{
				jule::Ptr<_1a9956c86_Const> _254921_c = static__1a99abd0d_NewI64(-2147483648LL);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254921_c), ._field_Constant=_254921_c});
			}
		}
		else {
			_case_begin_1ae9b20d8:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _253536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_253536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9b2083:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e25a2_evalI64TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _256136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9b5d78:;
			{
				jule::Ptr<_1a9956c86_Const> _256821_c = static__1a99abd0d_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256821_c), ._field_Constant=_256821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9b5dde:;
			{
				jule::Ptr<_1a9956c86_Const> _257521_c = static__1a99abd0d_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257521_c), ._field_Constant=_257521_c});
			}
		}
		else {
			_case_begin_1ae9b5cbd:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _256136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_256136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9b5c68:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e28b0_evalU8TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _258735_ident) {
	;
	;
	{
		auto &_match_expr{ _258735_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9b95da:;
			{
				jule::Ptr<_1a9956c86_Const> _259321_c = static__1a99abe40_NewU64(255LLU);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_259321_c), ._field_Constant=_259321_c});
			}
		}
		else {
			_case_begin_1ae9b8ad4:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _258735_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_258735_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9b9486:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2bbd_evalU16TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _260536_ident) {
	;
	;
	{
		auto &_match_expr{ _260536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9bbe8e:;
			{
				jule::Ptr<_1a9956c86_Const> _261121_c = static__1a99abe40_NewU64(65535LLU);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_261121_c), ._field_Constant=_261121_c});
			}
		}
		else {
			_case_begin_1ae9bb488:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _260536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_260536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9bbd3a:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e2ecb_evalU32TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _262336_ident) {
	;
	;
	{
		auto &_match_expr{ _262336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9be843:;
			{
				jule::Ptr<_1a9956c86_Const> _262921_c = static__1a99abe40_NewU64(4294967295LLU);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262921_c), ._field_Constant=_262921_c});
			}
		}
		else {
			_case_begin_1ae9bdd3c:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _262336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_262336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9be6de:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e32d9_evalU64TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _264136_ident) {
	;
	;
	{
		auto &_match_expr{ _264136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9c21e7:;
			{
				jule::Ptr<_1a9956c86_Const> _264721_c = static__1a99abe40_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_264721_c), ._field_Constant=_264721_c});
			}
		}
		else {
			_case_begin_1ae9c16e1:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _264136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_264136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9c2093:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e35e7_evalF32TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _265936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9c5371:;
			{
				jule::Ptr<_1a9956c86_Const> _266721_c = static__1a99ac616_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_266721_c), ._field_Constant=_266721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9c53d7:;
			{
				jule::Ptr<_1a9956c86_Const> _267421_c = static__1a99ac616_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_267421_c), ._field_Constant=_267421_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ae9c544d:;
			{
				jule::Ptr<_1a9956c86_Const> _268121_c = static__1a99ac616_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268121_c), ._field_Constant=_268121_c});
			}
		}
		else {
			_case_begin_1ae9c5272:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _265936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_265936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9c520b:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e3905_evalF64TypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1e6a5c800_Token> _269336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _269336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ae9ca2dd:;
			{
				jule::Ptr<_1a9956c86_Const> _270121_c = static__1a99ac616_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270121_c), ._field_Constant=_270121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ae9ca354:;
			{
				jule::Ptr<_1a9956c86_Const> _270821_c = static__1a99ac616_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270821_c), ._field_Constant=_270821_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ae9ca3ba:;
			{
				jule::Ptr<_1a9956c86_Const> _271521_c = static__1a99ac616_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271521_c), ._field_Constant=_271521_c});
			}
		}
		else {
			_case_begin_1ae9ca1de:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _269336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_269336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9ca178:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e3cac_evalPrimStatic(_1ac1c6734_Eval* _self_, jule::Str _272733_kind, jule::Ptr<_1e6a5c800_Token> _272744_ident) {
	{
		auto &_match_expr{ _272733_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae9ce314:;
			{
				return _1a99e155c_evalIntTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ae9ce37a:;
			{
				return _1a99e186a_evalUintTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae9cec1b:;
			{
				return _1a99e1b78_evalI8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae9cec82:;
			{
				return _1a99e1e86_evalI16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae9cece8:;
			{
				return _1a99e2294_evalI32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae9ced5e:;
			{
				return _1a99e25a2_evalI64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae9cedc5:;
			{
				return _1a99e28b0_evalU8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae9cee80:;
			{
				return _1a99e2bbd_evalU16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae9ceee6:;
			{
				return _1a99e2ecb_evalU32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae9d005c:;
			{
				return _1a99e32d9_evalU64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae9d00c3:;
			{
				return _1a99e35e7_evalF32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae9d0139:;
			{
				return _1a99e3905_evalF64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else {
			_case_begin_1ae9cd841:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _272744_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_272733_kind),jule::Any(_272744_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1ae9ce19e:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4164_evalTypeStatic(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _275937_d, jule::Ptr<_1b3954153_SubIdentExpr> _275951_si) {
	{
		
		if ((_1a9a06c9d_Prim(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9d4737:;
			{
				return _1a99e3cac_evalPrimStatic(&(*_self_), _1a9a099c6_Str(_1a9a06c9d_Prim(_275937_d.get()._field_Kind.ptr()).ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1a9a074da_Enum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9d479d:;
			{
				return _1a99de0c6_evalEnumStatic(&(*_self_), _1a9a074da_Enum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1a9a0774e_TypeEnum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9d4814:;
			{
				return _1a99de47d_evalTypeEnumStatic(&(*_self_), _1a9a0774e_TypeEnum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1a9a08200_Struct(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9d487a:;
			{
				return _1a99de835_evalStructStatic(&(*_self_), _1a9a08200_Struct(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1ae9d46c1:;
			{
				_1ac1c6c40_pushErr(&(*_self_), _275951_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_275937_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ae9d0854:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e451b_evalObjSubIdent(_1ac1c6734_Eval* _self_, jule::Ptr<_1ac1c4bb6_Data> _277538_d, jule::Ptr<_1b3954153_SubIdentExpr> _277552_si) {
	if (_1e6a60094_IsIgnoreIdent(_277552_si.get()._field_Ident.get()._field_Kind)) {
		_1ac1c6c40_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _278117_kind = _277538_d.get()._field_Kind;;
	{
		
		if ((_1a9a07276_Ptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9da595:;
			{
				jule::Ptr<_1a9a1145b_Ptr> _278417_ptr = _1a9a07276_Ptr(_277538_d.get()._field_Kind.ptr());;
				if (_1a9a11e2e_IsUnsafe(_278417_ptr.ptr())) {
					goto _match_end_1ae9da441;
				};
				if (((!(_277552_si.get()._field_IsSelf)) && (!(_1a99cb7cd_isUnsafe(&(*_self_)))))) {
					_1ac1c6c40_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_278117_kind=_1a9a07276_Ptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1a9a07012_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9da60b:;
			{
				_278117_kind=_1a9a07012_Sptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1ae9da441:;
	};
	{
		
		if ((_1a9a08464_Trait(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd07b:;
			{
				return _1a99dec86_evalTraitSubIdent(&(*_self_), _277538_d,_1a9a08464_Trait(_277538_d.get()._field_Kind.ptr()),_277552_si.get()._field_Ident);
			}
		}
		else if ((_1a9a08200_Struct(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd103:;
			{
				jule::Ptr<_1b3967d9d_StructIns> _280017_s = _1a9a08200_Struct(_278117_kind.ptr());;
				if (_1a9a009ab_isInstancedStruct(_280017_s)) {
					jule::Bool _280225_usedReferenceElem = (_1a9a07012_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr);;
					return _1a99e0281_evalStructSubIdent(&(*_self_), _277538_d,_1a9a08200_Struct(_278117_kind.ptr()),_277552_si,_280225_usedReferenceElem);
				};
			}
		}
		else if ((_1a9a07c27_Slc(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd17a:;
			{
				return _1a99e0638_evalSliceSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1a9a079b3_Arr(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd202:;
			{
				return _1a99e09e0_evalArraySubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1a9a086c8_Map(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd763:;
			{
				return _1a99e0d97_evalMapSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1a9a06c9d_Prim(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1ae9dd7da:;
			{
				jule::Ptr<_1a9a09663_Prim> _281217_p = _1a9a06c9d_Prim(_278117_kind.ptr());;
				{
					auto &_match_expr{ _281217_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1ae9e4170:;
						{
							return _1a99e124e_evalStrSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
						}
					}
					_match_end_1ae9e3eb6:;
				};
			}
		}
		_match_end_1ae9dce7c:;
	};
	_1ac1c6c40_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_277538_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4829_evalSubIdent(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3954153_SubIdentExpr> _282236_si) {
	jule::Ptr<_1a9a04b8b_TypeKind> _282317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_282317_prefix;
	});;
	jule::Ptr<_1ac1c4bb6_Data> _282717_d = _1a99e5c26_evalExprKind(_self_, _282236_si.get()._field_Expr.get()._field_Kind);;
	if ((_282717_d == nullptr)) {
		return nullptr;
	};
	if (_282717_d.get()._field_Decl) {
		return _1a99e4164_evalTypeStatic(_self_.ptr(), _282717_d,_282236_si);
	};
	return _1a99e451b_evalObjSubIdent(_self_.ptr(), _282717_d,_282236_si);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4b37_evalTuple(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b39514c4_TupleExpr> _283933_tup) {
	jule::Ptr<_1a9a0e3d2_Tuple> _284017_tupT = jule::new_ptr<_1a9a0e3d2_Tuple>();;
	_284017_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>::alloc(0LL,_283933_tup.get()._field_Expr.len());
	jule::Ptr<_1a99b7d3b_TupleExprModel> _284317_model = jule::new_ptr<_1a99b7d3b_TupleExprModel>(_1a99b7d3b_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>::alloc(0LL,_283933_tup.get()._field_Expr.len())});;
	jule::Bool _284717_ok = true;;
	{
		auto &expr = _283933_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1ae9e93ea:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _284821_expr = *it;
			{
				jule::Ptr<_1ac1c4bb6_Data> _284921_d = _1a99e5c26_evalExprKind(_self_, _284821_expr.get()._field_Kind);;
				if ((_284921_d == nullptr)) {
					_284717_ok=false;
					goto _iter_next_1ae9e93ea;
				};
				_284017_tupT.get()._field_Types = jule::alloc_for_append(_284017_tupT.get()._field_Types,1);_284017_tupT.get()._field_Types.__push(_284921_d.get()._field_Kind);;
				_284317_model.get()._field_Datas = jule::alloc_for_append(_284317_model.get()._field_Datas,1);_284317_model.get()._field_Datas.__push(_284921_d);;
			}
			_iter_next_1ae9e93ea:;
			++it;
			goto _iter_begin_1ae9e93ea;
		}
		_iter_end_1ae9e93ea:;
	};
	if ((!(_284717_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_284017_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_284317_model), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e4ede_evalMap(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1a9a0ee0a_Map> _286831_m, jule::Ptr<_1b3956265_BraceLit> _286844_lit) {
	jule::Ptr<_1a99b6aa4_MapExprModel> _286917_model = jule::new_ptr<_1a99b6aa4_MapExprModel>(_1a99b6aa4_MapExprModel{._field_KeyKind=_286831_m.get()._field_Key, ._field_ValKind=_286831_m.get()._field_Val, });;
	{
		auto &expr = _286844_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ae9ec6d9:;
		if (it != expr.end()) {
			jule::Ptr<_1b3950847_Expr> _287421_expr = *it;
			{
				{
					auto &_match_expr{ _287421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1b3956c7c_KeyValPair>>()) {
						_case_begin_1ae9ed223:;
						{
							goto _match_end_1ae9ed003;
						}
					}
					else {
						_case_begin_1ae9ed179:;
						{
							_1ac1c6c40_pushErr(_self_.ptr(), _286844_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ae9ed003:;
				};
				jule::Ptr<_1b3956c7c_KeyValPair> _288421_pair = _287421_expr.get()._field_Kind.operator jule::Ptr<_1b3956c7c_KeyValPair>();;
				jule::Ptr<_1ac1c4bb6_Data> _288621_key = _1a99e5c26_evalExprKind(_self_, _288421_pair.get()._field_Key.get()._field_Kind);;
				if ((_288621_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1ac1c4bb6_Data> _289121_val = _1a99e5c26_evalExprKind(_self_, _288421_pair.get()._field_Val.get()._field_Kind);;
				if ((_289121_val == nullptr)) {
					return nullptr;
				};
				_1ac164947_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Key,_288621_key,_288421_pair.get()._field_Colon);
				_1ac164947_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Val,_289121_val,_288421_pair.get()._field_Colon);
				_286917_model.get()._field_Entries = jule::alloc_for_append(_286917_model.get()._field_Entries,1);_286917_model.get()._field_Entries.__push(jule::new_ptr<_1a99b68b7_KeyValPairExprModel>(_1a99b68b7_KeyValPairExprModel{._field_Key=_288621_key.get()._field_Model, ._field_Val=_289121_val.get()._field_Model}));;
			}
			_iter_next_1ae9ec6d9:;
			++it;
			goto _iter_begin_1ae9ec6d9;
		}
		_iter_end_1ae9ec6d9:;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_286831_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_286917_model), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e52ec_evalBraceLit(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3956265_BraceLit> _291236_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b01cb47d:;
			{
				_1ac1c6c40_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a9a086c8_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b01cb4e4:;
			{
				return _1a99e4ede_evalMap(_self_, _1a9a086c8_Map(_self_.get()._field_prefix.ptr()),_291236_lit);
			}
		}
		else if ((_1a9a08200_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b01cb55a:;
			{
				return _1a99dc13a_evalStructLitExplicit(_self_, _1a9a08200_Struct(_self_.get()._field_prefix.ptr()),_291236_lit.get()._field_Exprs,_291236_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1b01cb3c3:;
			{
				_1ac1c6c40_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b01cb2e6:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e560a_evalAnonFn(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b395d13a_FnDecl> _292734_decl) {
	_1a9a130ea_typeChecker _292817_tc = _1a9a130ea_typeChecker{._field_s=_self_.get()._field_s, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1a99c03b5_FnIns> _293217_ins = _1a9a1993c_buildFn(&_292817_tc, _292734_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
			_case_begin_1b01cd095:;
			{
				jule::Ptr<_1ac13b358_scopeChecker> _293521_sc = _self_.get()._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>();;
				jule::Ptr<_1ac13b358_scopeChecker> _293621_scc = _1ac14b885_newChildChecker(_293521_sc);;
				_293621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac13a0c1_scopeLabel>>>(nullptr);
				_293621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac13a544_scopeGoto>>>(nullptr);
				_293621_scc.get()._field_owner=nullptr;
				_293621_scc.get()._field_childIndex=0LL;
				_293621_scc.get()._field_it=0LLU;
				_293621_scc.get()._field_cse=0LLU;
				_293621_scc.get()._field_owner=_293217_ins;
				_1ac177eaa_checkFnInsSc(_self_.get()._field_s.ptr(), _293217_ins,_293621_scc);
			}
		}
		else {
			_case_begin_1b01d074b:;
			{
				_1ac17854e_checkFnIns(_self_.get()._field_s, _293217_ins);
			}
		}
		_match_end_1b01d062a:;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_293217_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b66ca_AnonFnExprModel>(_1a99b66ca_AnonFnExprModel{._field_Func=_293217_ins, ._field_Global=_1a99cb9ed_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e5918_evalBinop(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b39545c6_BinopExpr> _295833_op) {
	_1a99e8597_binaryEval _295917_bs = static__1a99e8b5d_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a9a09663_Prim> _296217_prim = _1a9a06c9d_Prim(_self_.get()._field_prefix.ptr());;
		if (((_296217_prim == nullptr) || (!(_1ac12b205_IsNum(_1a9a099c6_Str(_296217_prim.ptr())))))) {
			jule::Ptr<_1a9a04b8b_TypeKind> _296425_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_296425_prefix;
			});;
			return _1a99ede3d_eval(&_295917_bs, _295833_op);
		};
	};
	return _1a99ede3d_eval(&_295917_bs, _295833_op);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e5c26_evalExprKind(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Any _297336_kind) {
	{
		auto &_match_expr{ _297336_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b3950b33_RangeExpr>>()) {
			_case_begin_1b01d7be8:;
			{
				jule::Ptr<_1b3950b33_RangeExpr> _297621_e = _297336_kind.operator jule::Ptr<_1b3950b33_RangeExpr>();;
				return _1a99e5c26_evalExprKind(_self_, _297621_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395187b_LitExpr>>()) {
			_case_begin_1b01d7d6e:;
			{
				return _1a99cd6d1_evalLit(_self_.ptr(), _297336_kind.operator jule::Ptr<_1b395187b_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
			_case_begin_1b01d7dd5:;
			{
				return _1a99d2b8b_evalIdent(_self_.ptr(), _297336_kind.operator jule::Ptr<_1b39528b0_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39530b9_UnaryExpr>>()) {
			_case_begin_1b01d7e4b:;
			{
				return _1a99d2e99_evalUnary(_self_, _297336_kind.operator jule::Ptr<_1b39530b9_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3953471_VariadicExpr>>()) {
			_case_begin_1b01d7eb2:;
			{
				return _1a99d32a7_evalVariadic(_self_, _297336_kind.operator jule::Ptr<_1b3953471_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3952085_UnsafeExpr>>()) {
			_case_begin_1b01d8028:;
			{
				return _1a99d35b5_evalUnsafe(_self_, _297336_kind.operator jule::Ptr<_1b3952085_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3957200_SliceExpr>>()) {
			_case_begin_1b01d80a0:;
			{
				return _1a99d4132_evalSliceExpr(_self_, _297336_kind.operator jule::Ptr<_1b3957200_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3957a91_IndexingExpr>>()) {
			_case_begin_1b01d815a:;
			{
				return _1a99d73dd_evalIndexing(_self_, _297336_kind.operator jule::Ptr<_1b3957a91_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395819b_SlicingExpr>>()) {
			_case_begin_1b01d81c1:;
			{
				return _1a99d85a9_evalSlicing(_self_, _297336_kind.operator jule::Ptr<_1b395819b_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3953828_CastExpr>>()) {
			_case_begin_1b01d8237:;
			{
				return _1a99db8cb_evalCast(_self_, _297336_kind.operator jule::Ptr<_1b3953828_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3953bd0_NsSelectionExpr>>()) {
			_case_begin_1b01d829d:;
			{
				return _1a99dbbd9_evalNsSelection(_self_.ptr(), _297336_kind.operator jule::Ptr<_1b3953bd0_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3955ce2_StructLit>>()) {
			_case_begin_1b01d8325:;
			{
				return _1a99dc448_evalStructLit(_self_, _297336_kind.operator jule::Ptr<_1b3955ce2_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394b326_TypeDecl>>()) {
			_case_begin_1b01d839c:;
			{
				return _1a99dc756_evalType(_self_.ptr(), _297336_kind.operator jule::Ptr<_1b394b326_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3954b15_FnCallExpr>>()) {
			_case_begin_1b01d8424:;
			{
				return _1a99ddc1e_evalFnCall(_self_, _297336_kind.operator jule::Ptr<_1b3954b15_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3954153_SubIdentExpr>>()) {
			_case_begin_1b01d849b:;
			{
				return _1a99e4829_evalSubIdent(_self_, _297336_kind.operator jule::Ptr<_1b3954153_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39514c4_TupleExpr>>()) {
			_case_begin_1b01d8523:;
			{
				return _1a99e4b37_evalTuple(_self_, _297336_kind.operator jule::Ptr<_1b39514c4_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3956265_BraceLit>>()) {
			_case_begin_1b01d859a:;
			{
				return _1a99e52ec_evalBraceLit(_self_, _297336_kind.operator jule::Ptr<_1b3956265_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b01d8622:;
			{
				return _1a99e560a_evalAnonFn(_self_, _297336_kind.operator jule::Ptr<_1b395d13a_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39545c6_BinopExpr>>()) {
			_case_begin_1b01d8699:;
			{
				return _1a99e5918_evalBinop(_self_, _297336_kind.operator jule::Ptr<_1b39545c6_BinopExpr>());
			}
		}
		else {
			_case_begin_1b01d792e:;
			{
				return nullptr;
			}
		}
		_match_end_1b01d7841:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e6034_eval(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3950847_Expr> _302128_expr) {
	jule::Ptr<_1ac1c4bb6_Data> _302217_d = _1a99e5c26_evalExprKind(_self_, _302128_expr.get()._field_Kind);;
	if (((_302217_d == nullptr) || (_302217_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1a9a07e8b_Fn(_302217_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b01e385d:;
			{
				jule::Ptr<_1a99c03b5_FnIns> _302921_f = _1a9a07e8b_Fn(_302217_d.get()._field_Kind.ptr());;
				if (_1a99c174b_IsBuiltin(_302921_f.ptr())) {
					goto _match_end_1b01e3709;
				};
				if ((_302921_f.get()._field_Generics.len() != _302921_f.get()._field_Decl.get()._field_Generics.len())) {
					_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_302921_f.get()._field_Decl.get()._field_Statically)) && _1a99bcdda_IsMethod(_302921_f.get()._field_Decl.ptr()))) {
					_1ac15ddd6_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b01e3709:;
	};
	return _302217_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e6342_evalExpr(jule::Ptr<_1ac1c6734_Eval> _self_, jule::Ptr<_1b3950847_Expr> _304732_expr) {
	jule::Ptr<_1ac1c4bb6_Data> _304817_d = _1a99e6034_eval(_self_, _304732_expr);;
	{
		
		if ((_304817_d == nullptr)) {
			_case_begin_1b01e74cc:;
			{
				return nullptr;
			}
		}
		else if (_304817_d.get()._field_Decl) {
			_case_begin_1b01e7554:;
			{
				_1ac1c6c40_pushErr(_self_.ptr(), _304732_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1b01e7444:;
			{
				return _304817_d;
			}
		}
		_match_end_1b01e73cd:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1c6734_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a99e67b5_unaryEval static__1a99e6c7c_new(jule::Ptr<_1ac1c6734_Eval> _306823_e) {
	return _1a99e67b5_unaryEval{._field_e=_306823_e, };
}



inline void _1a99e6e58_minus(_1a99e67b5_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b01e9127:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b01e9578:;
			{
				if ((!(_1ac12b205_IsNum(_1a9a05087_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b01e95de:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b01e8c92:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b01e8b82:;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a99b0c57_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b01ec7ac:;
				{
					_1a99aed66_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1a99ad8ae_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a99b02a6_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b01ec834:;
				{
					_1a99ae371_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a99ace0d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a99b051a_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b01ec8ab:;
				{
					_1a99ae371_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a99adb23_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b01ec67a:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a99e7134_plus(_1a99e67b5_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b0a4b050:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a4b490:;
			{
				if ((!(_1ac12b205_IsNum(_1a9a05087_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a4b506:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b0a4ab98:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0a4aabb:;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a99b0c57_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a4e6c4:;
				{
					_1a99aed66_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1a99ad8ae_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a99b02a6_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a4e74b:;
				{
					_1a99ae371_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a99ace0d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a99b051a_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a4e7c3:;
				{
					_1a99ae371_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a99adb23_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b0a4e592:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a99e7310_caret(_1a99e67b5_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b0a53dd2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a54322:;
			{
				if ((!(_1ac12ab3e_IsInt(_1a9a05087_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a54388:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b0a53a2a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0a5394d:;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a99b02a6_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a57545:;
				{
					_1a99ae371_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1a99ace0d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a99b051a_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a575bc:;
				{
					_1a99ae5e6_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1a99ad172_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b0a57424:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a99e74db_excl(_1a99e67b5_unaryEval* _self_) {
	jule::Ptr<_1a9a09663_Prim> _318713_t = _1a9a06c9d_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_318713_t == nullptr) || (!(_1a9a0c633_IsBool(_318713_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1a99b077e_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b0a5c0e9:;
				{
					_1a99ae86b_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1a99ad3d6_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1b0a5bed9:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1a99e76b7_star(_1a99e67b5_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1a9a07276_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a5eedc:;
			{
				if ((!(_1a99cb7cd_isUnsafe((*_self_)._field_e.ptr())))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a9a1145b_Ptr> _321921_t = _1a9a07276_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1a9a11e2e_IsUnsafe(_321921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_321921_t.get()._field_Elem;
			}
		}
		else if ((_1a9a07012_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0a6043d:;
			{
				(*_self_)._field_d.get()._field_Kind=_1a9a07012_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b0a5eb46:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0a5ead0:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1a99e7893_amper(_1a99e67b5_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b5a4d_StructLitExprModel>>()) {
			_case_begin_1b0a64024:;
			{
				jule::Ptr<_1a99b5a4d_StructLitExprModel> _323921_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1a99b5a4d_StructLitExprModel>();;
				_1a99eebca_makeStructLitAlloc((*_self_)._field_d,_323921_lit);
			}
		}
		else {
			_case_begin_1b0a64387:;
			{
				{
					
					if (_1a9a1bab5_canGetPtr((*_self_)._field_d)) {
						_case_begin_1b0a64ec0:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a1145b_Ptr>(_1a9a1145b_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1b0a6492b:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1b0a6484e:;
				};
			}
		}
		_match_end_1b0a64310:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1a99e7a6e_typeDecl(_1a99e67b5_unaryEval* _self_) {
	_1a9a130ea_typeChecker _326317_tc = _1a9a130ea_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a6815a:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a182cb_buildPtrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a6a5d0:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a17bb0_buildSptrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1b0a68e08:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b0a68da3:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1a99e7c4a_evalData(_1a99e67b5_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a68e6e:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _328521_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a99e5c26_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_328521_prefix;
			}
		}
		else {
			_case_begin_1b0a6c5c1:;
			{
				(*_self_)._field_d=_1a99e5c26_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1b0a6c516:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e8058_eval(_1a99e67b5_unaryEval* _self_, jule::Ptr<_1b39530b9_UnaryExpr> _329427_u) {
	(*_self_)._field_u=_329427_u;
	_1a99e7c4a_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1a99e7a6e_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _330513_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a71cbd:;
			{
				_1a99e6e58_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0a71817:;
			{
				_1a99e7134_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a7187d:;
			{
				_1a99e7310_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b0a718e4:;
			{
				_1a99e74db_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a7195a:;
			{
				_1a99e76b7_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a71e88:;
			{
				_1a99e7893_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1b0a717a1:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1b0a7174b:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1b0a73ce2:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1a9a05087_Str(_330513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1ac1c5579_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1b0a722a7:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1b0a73c7b:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99e67b5_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a99e8597_binaryEval static__1a99e8b5d_newPlain(jule::Ptr<_1ac1c6734_Eval> _334328_e) {
	return _1a99e8597_binaryEval{._field_e=_334328_e, };
}



inline _1a99e8597_binaryEval static__1a99e8e9e_new(jule::Ptr<_1ac1c6734_Eval> _334923_e, jule::Ptr<_1e6a5c800_Token> _334937_op) {
	return _1a99e8597_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};
}



inline jule::Bool _1a99e9213_checkTypeCompatibility(_1a99e8597_binaryEval* _self_) {
	return _1ac164d98_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1a99e94aa_checkStructCommonOperatorCompatibility(_1a99e8597_binaryEval* _self_) {
	jule::Ptr<_1a99c03b5_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b0a78951:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0a789b7:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0a799da:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a79a51:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b0a79ab7:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a79b2d:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0a79b94:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a79c0a:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b0a79c82:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a79ce8:;
			{
				_336317_overload=_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b0a7881e:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1b0a78698:;
	};
	if ((_336317_overload == nullptr)) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1a99be4e6_ParamIns> _339517_p = _336317_overload.get()._field_Params[1LL];;
	return _1ac164947_checkAssignType((*_self_)._field_e.get()._field_s, _339517_p.get()._field_Decl.get()._field_Reference,_339517_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9752_evalNil(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a9a062ec_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1a9a05087_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a83c8b:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0a83c25:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0a83b8c:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e99b6_evalEnum(_1a99e8597_binaryEval* _self_) {
	jule::Ptr<_1b2553d42_Enum> _342017_enm = _1a9a074da_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a85e36:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _342421_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1a9a074da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_342421_rkind=_1a9a074da_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1ac164d98_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _342017_enm.get()._field_Kind.get()._field_Kind,_342421_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b0a85dae:;
	};
	if (((_1a9a074da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_342017_enm != _1a9a074da_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_342017_enm.get()._field_Ident),jule::Any(_1a9a05087_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0a8a3be:;
			{
				if ((!(_1ac12b205_IsNum(_1a9a05087_Str(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a8a435:;
			{
				if (((_1a9a06c9d_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ac12ab3e_IsInt(_1a9a099c6_Str(_1a9a06c9d_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0a8a358:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1b0a8a26a:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9c2a_evalTypeEnum(_1a99e8597_binaryEval* _self_) {
	jule::Ptr<_1b255543c_TypeEnum> _347117_enm = _1a9a0774e_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a9144c:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0a90b55:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1b255576c_Str(_347117_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a912c6:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99e9e8e_evalSptr(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a934d7:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0a93471:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a9288d:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea203_evalPtr(_1a99e8597_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0a9542e:;
			{
				if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a95495:;
			{
				if ((_1a9a07276_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1a9a11e2e_IsUnsafe(_1a9a07276_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1a9a00c75_isPtrArithmeticCompatibleInt((*_self_)._field_r)))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0a94ad2:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a94a27:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea467_evalArr(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a9b567:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0a9b501:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a96c49:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea6cb_evalSlc(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a9d7ab:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0a9d745:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a9cb62:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ea940_evalFn(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0aa0a00:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0aa0989:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a9eda6:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99eaba4_evalStruct(_1a99e8597_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b0aa2161:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0aa21c7:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b0aa224e:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0aa2947:;
			{
				if ((_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0aa29ad:;
			{
				if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b0aa2040:;
	};
	if ((!(_1a99e94aa_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99eae18_evalTrait(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0aabde6:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0aabd80:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0aabbe8:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb17c_evalAny(_1a99e8597_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0aadd3d:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0aad4e1:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0aad436:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb3e1_evalBool(_1a99e8597_binaryEval* _self_) {
	if ((!(_1a99e9213_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1b0ab0b53:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0ab0adc:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1a9a05087_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0ab0009:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99eb655_evalStr(_1a99e8597_binaryEval* _self_) {
	jule::Str _371317_rk = _1a9a05087_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_371317_rk != jule::Str("str", 3))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_371317_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0ab3d32:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0ab3d98:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1b0ab2c65:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0ab2e96:;
	};
}



inline void _1a99eb831_setTypeToGreater(_1a99e8597_binaryEval* _self_) {
	if (_1ac1c5579_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1ac1c5579_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1ac129577_IsGreater(_1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1a99eba73_checkModData(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _375636_d) {
	if ((!(_1ac1c5579_IsConst(_375636_d.ptr())))) {
		if (((_1a9a06c9d_Prim(_375636_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ac12ab3e_IsInt(_1a9a06c9d_Prim(_375636_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ac1961c6_sigAssignable(jule::Str("i64", 3),_375636_d)) {
			_case_begin_1b0ababa2:;
			{
				_1a99ae371_SetI64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ac1ac7b4_unsigAssignable(jule::Str("u64", 3),_375636_d)) {
			_case_begin_1b0aba883:;
			{
				_1a99ae5e6_SetU64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b0aba81c:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0ab91ab:;
	};
}



inline void _1a99ebc4e_mod(_1a99e8597_binaryEval* _self_) {
	_1a99eba73_checkModData(&(*_self_), (*_self_)._field_l);
	_1a99eba73_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a99ec106_numbersAreCompatibile(_1a99e8597_binaryEval* _self_, jule::Str& _377837_lk, jule::Str& _377847_rk) {
	if ((!(_1ac12b205_IsNum(_377847_rk)))) {
		return false;
	};
	if (_1ac1c5579_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_377837_lk == jule::Str("f32", 3))) {
		if (_1ac1c5579_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f32", 3));
	};
	if ((_377837_lk == jule::Str("f64", 3))) {
		if (_1ac1c5579_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f64", 3));
	};
	if (_1ac1c5579_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_377837_lk == _377847_rk);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec36a_evalFloat(_1a99e8597_binaryEval* _self_) {
	jule::Str _380813_lk = _1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380913_rk = _1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1a99ec106_numbersAreCompatibile(&(*_self_), _380813_lk,_380913_rk)))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0ac368d:;
			{
				if (((!(_1ac1c5579_IsConst((*_self_)._field_l.ptr()))) || (!(_1ac1ac8e6_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				if (((!(_1ac1c5579_IsConst((*_self_)._field_r.ptr()))) || (!(_1ac1ac8e6_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1a99ae371_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1a99ae5e6_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1a9a00604_isOkForShifting((*_self_)._field_r)))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1b0ac35b1:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0ac8033:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b0ac8561:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1b0ac8bd2:;
			{
				_1a99eb831_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0ac8c48:;
			{
				if ((!(_1ac12ab3e_IsInt(_380913_rk)))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1a99ebc4e_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1b0ac90cd:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b0ac9078:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec5ce_evalInt(_1a99e8597_binaryEval* _self_) {
	jule::Str _387213_lk = _1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _387313_rk = _1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0ac8cae:;
			{
				if (((!(_1ac12ab3e_IsInt(_387213_lk))) || (!(_1ac12ab3e_IsInt(_387313_rk))))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
					return nullptr;
				};
				if ((!(_1a9a00604_isOkForShifting((*_self_)._field_r)))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1b0acd3ce:;
	};
	if ((!(_1a99ec106_numbersAreCompatibile(&(*_self_), _387213_lk,_387313_rk)))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0ad1558:;
			{
				return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1b0ad1503:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b0ad1d3e:;
			{
				_1a99eb831_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0ad1da5:;
			{
				_1a99ebc4e_mod(&(*_self_));
				_1a99eb831_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0ad223a:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1b0ad21d5:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ec843_evalPrim(_1a99e8597_binaryEval* _self_) {
	jule::Ptr<_1a9a09663_Prim> _393113_prim = _1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1a9a0c633_IsBool(_393113_prim.ptr())) {
			_case_begin_1b0ad557e:;
			{
				return _1a99eb3e1_evalBool(&(*_self_));
			}
		}
		else if (_1a9a0c897_IsStr(_393113_prim.ptr())) {
			_case_begin_1b0ad5606:;
			{
				return _1a99eb655_evalStr(&(*_self_));
			}
		}
		_match_end_1b0ad54c4:;
	};
	if ((_1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a099c6_Str(_393113_prim.ptr())),jule::Any(_1a9a05087_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1ac12ae5d_IsFloat(_393113_prim.get()._field_Kind)) {
			_case_begin_1b0ad7edd:;
			{
				return _1a99ec36a_evalFloat(&(*_self_));
			}
		}
		else if (_1ac12ab3e_IsInt(_393113_prim.get()._field_Kind)) {
			_case_begin_1b0ad785b:;
			{
				return _1a99ec5ce_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1b0ad77e5:;
			{
				return nullptr;
			}
		}
		_match_end_1b0ad7619:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ecaa7_evalOp(_1a99e8597_binaryEval* _self_) {
	{
		
		if (_1a9a05d24_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b0ad8274:;
			{
				_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b0ad96c6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad942e;
			}
		}
		else if (((_1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b0ad942e:;
			{
				return _1a99eb17c_evalAny(&(*_self_));
			}
		}
		else if ((_1a9a0774e_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9495:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad950b;
			}
		}
		else if ((_1a9a0774e_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad950b:;
			{
				return _1a99e9c2a_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1a9a05ab0_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b0ad9572:;
			{
				return _1a99e9752_evalNil(&(*_self_));
			}
		}
		else if ((_1a9a074da_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad95d8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad9792;
			}
		}
		else if ((_1a9a074da_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9792:;
			{
				return _1a99e99b6_evalEnum(&(*_self_));
			}
		}
		else if ((_1a9a07012_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9808:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad986e;
			}
		}
		else if ((_1a9a07012_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad986e:;
			{
				return _1a99e9e8e_evalSptr(&(*_self_));
			}
		}
		else if ((_1a9a07276_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad98e6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad996d;
			}
		}
		else if ((_1a9a07276_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad996d:;
			{
				return _1a99ea203_evalPtr(&(*_self_));
			}
		}
		else if ((_1a9a079b3_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad99e5:;
			{
				return _1a99ea467_evalArr(&(*_self_));
			}
		}
		else if ((_1a9a07c27_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9a6c:;
			{
				return _1a99ea6cb_evalSlc(&(*_self_));
			}
		}
		else if ((_1a9a07e8b_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9ae4:;
			{
				return _1a99ea940_evalFn(&(*_self_));
			}
		}
		else if ((_1a9a08464_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9b6b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ad9be3;
			}
		}
		else if ((_1a9a08464_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9be3:;
			{
				return _1a99eae18_evalTrait(&(*_self_));
			}
		}
		else if ((_1a9a08200_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9c6a:;
			{
				return _1a99eaba4_evalStruct(&(*_self_));
			}
		}
		else if ((_1a9a06c9d_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0ad9ce2:;
			{
				return _1a99ec843_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1b0ad8087:;
			{
				return nullptr;
			}
		}
		_match_end_1b0ad8d68:;
	};
}



inline void _1a99ecd2c_evalConst(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _400633_d) {
	{
		
		if ((_400633_d == nullptr)) {
			_case_begin_1b0ae8a8c:;
			{
				return;;
			}
		}
		else if ((!(_1ac1c5579_IsConst((*_self_)._field_l.ptr()))) || (!(_1ac1c5579_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1b0ae9230:;
			{
				_400633_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b0ae896b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b0aea7c5:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b1c03_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0aea83b:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool((!(_1a99b1c03_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b0aea8a2:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b18e5_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b0aea918:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b15d7_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b0aea97e:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b262c_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b0aea9e5:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b2011_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0aeaa5b:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b293a_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0aeaac2:;
			{
				_400633_d.get()._field_Constant=static__1a99ac0c7_NewBool(_1a99b231e_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0aeab38:;
			{
				_1a99b2c48_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0aeab9e:;
			{
				_1a99b3056_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0aeac15:;
			{
				_1a99b3364_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b0aeac7b:;
			{
				jule::Bool _404317_ok = _1a99b3672_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_404317_ok)) && (_1a99ae0eb_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1a9a09663_Prim> _404821_prim = _1a9a06c9d_Prim(_400633_d.get()._field_Kind.ptr());;
				{
					
					if (_1ac12a5ab_IsSigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1b07eccad:;
						{
							_1a99ae371_SetI64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1ac12a897_IsUnsigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1b07ecd35:;
						{
							_1a99ae5e6_SetU64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1b07ecc03:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0aead03:;
			{
				jule::Bool _405617_ok = _1a99b3980_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_405617_ok)) && (_1a99ae0eb_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b0aead7a:;
			{
				_1a99b409b_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0aeae02:;
			{
				_1a99b3c8d_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0aeae79:;
			{
				_1a99b43a9_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b0aeb001:;
			{
				_1a99b46b7_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0aeb078:;
			{
				_1a99b49c5_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1b0aea044:;
	};
	_1a9a01a01_applyCastModelByEnum(_400633_d,_1a9a074da_Enum(_400633_d.get()._field_Kind.ptr()));
	jule::Ptr<_1a9a09663_Prim> _408017_prim = _1a9a06c9d_Prim(_400633_d.get()._field_Kind.ptr());;
	if (((_408017_prim == nullptr) || (!(_1ac12b205_IsNum(_1a9a099c6_Str(_408017_prim.ptr())))))) {
		_400633_d.get()._field_Model=static_cast<jule::Any>(_400633_d.get()._field_Constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_Kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_Kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model != (*_self_)._field_r.get()._field_Constant))) {
			_400633_d.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			_408017_prim=_1a9a06c9d_Prim(_400633_d.get()._field_Kind.ptr());
		};
	};
	_1a99ee8cd_fitBitsize(_400633_d);
	_1a9a01ca9_castConstByType(_408017_prim.get()._field_Kind,_400633_d);
}



inline void _1a99ed0a2_checkData(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _409633_d) {
	jule::Ptr<_1a99c03b5_FnIns> _409713_f = _1a9a07e8b_Fn(_409633_d.get()._field_Kind.ptr());;
	if ((((_409713_f != nullptr) && (_409713_f.get()._field_Decl != nullptr)) && _1a99bcdda_IsMethod(_409713_f.get()._field_Decl.ptr()))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1a99ed27d_checkDatas(_1a99e8597_binaryEval* _self_) {
	_1a99ed0a2_checkData(&(*_self_), (*_self_)._field_l);
	_1a99ed0a2_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1a99ed503_setModel(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _410832_d) {
	if (_1ac1c5579_IsConst(_410832_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model == (*_self_)._field_r.get()._field_Constant))) {
			return;;
		};
	};
	jule::Ptr<_1ac1c4bb6_Data> _411618_l = (*_self_)._field_l;;
	jule::Ptr<_1ac1c4bb6_Data> _411625_r = (*_self_)._field_r;;
	std::tie(_411618_l,_411625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1ac1c5887_GoodOperand(_411618_l.ptr(), _411625_r)))) {
		std::tie(_411618_l,_411625_r) = std::make_tuple(_411625_r,_411618_l);
	};
	_410832_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5487_BinopExprModel>(_1a99b5487_BinopExprModel{._field_Left=jule::new_ptr<_1a99b529a_OperandExprModel>(_1a99b529a_OperandExprModel{._field_Kind=_411618_l.get()._field_Kind, ._field_Model=_411618_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1a99b529a_OperandExprModel>(_1a99b529a_OperandExprModel{._field_Kind=_411625_r.get()._field_Kind, ._field_Model=_411625_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1a99ed778_postEval(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _413432_d) {
	_413432_d.get()._field_Lvalue=false;
	_1a99ed503_setModel(&(*_self_), _413432_d);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99edb30_solveExplicit(_1a99e8597_binaryEval* _self_, jule::Ptr<_1ac1c4bb6_Data>& _413937_l, jule::Ptr<_1ac1c4bb6_Data>& _413952_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1a99ed27d_checkDatas(&(*_self_));
	jule::Ptr<_1ac1c4bb6_Data> _414417_d = _1a99ecaa7_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1a99ecd2c_evalConst(&(*_self_), _414417_d);
	if ((_414417_d != nullptr)) {
		_414417_d.get()._field_Mutable=true;
		_1a99ed778_postEval(&(*_self_), _414417_d);
	};
	return _414417_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a99ede3d_eval(_1a99e8597_binaryEval* _self_, jule::Ptr<_1b39545c6_BinopExpr>& _415928_op) {
	if ((_415928_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1ac1c6c40_pushErr((*_self_)._field_e.ptr(), _415928_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1ac1c705e_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _416617_l = _1a99e5c26_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Left.get()._field_Kind);;
	if (((_416617_l == nullptr) || (_416617_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _417117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_416617_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_417117_prefix;
	});;
	jule::Ptr<_1ac1c4bb6_Data> _417417_r = _1a99e5c26_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Right.get()._field_Kind);;
	if (((_417417_r == nullptr) || (_417417_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_415928_op.get()._field_Op;
	jule::Ptr<_1ac1c4bb6_Data> _418117_d = _1a99edb30_solveExplicit(&(*_self_), _416617_l,_417417_r);;
	if ((((_418117_d != nullptr) && _416617_l.get()._field_IsRune) && _417417_r.get()._field_IsRune)) {
		_418117_d.get()._field_IsRune=true;
	};
	return _418117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a99e8597_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a0345e_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a03e98_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a05087_Str(_1a9a04b8b_TypeKind* _self_) {
	if (_1a9a05ab0_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1a9a0584b_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1a9a0475c_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1a9a0430b_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1a9a05395_Equals(jule::Ptr<_1a9a04b8b_TypeKind> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _9026_other) {
	if (_1a9a05ab0_IsNil(_self_.ptr())) {
		return _1a9a05ab0_IsNil(_9026_other.ptr());
	};
	if (_1a9a0584b_CppLinked(_self_.ptr())) {
		return (_1a9a0584b_CppLinked(_9026_other.ptr()) && (_self_.get()._field_CppIdent == _9026_other.get()._field_CppIdent));
	};
	return _1a9a0475c_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1a9a04619_Equals(_self_.get()._field_Kind, _9026_other);
}



inline jule::Bool _1a9a0584b_CppLinked(_1a9a04b8b_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1a9a05ab0_IsNil(_1a9a04b8b_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1a9a05d24_Void(_1a9a04b8b_TypeKind* _self_) {
	jule::Ptr<_1a9a09663_Prim> _11113_prim = _1a9a06c9d_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1a9a06088_Mutable(_1a9a04b8b_TypeKind* _self_) {
	{
		_1a9a04b8b_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1a9a08200_Struct(_11821__self) != nullptr)) {
			return _1a9a08200_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1a9a08464_Trait(_11821__self) != nullptr)) {
			return _1a9a08464_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1a9a06c9d_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1a9a09663_Prim> _12721_p = _1a9a06c9d_Prim(_11821__self);;
			return _1a9a0cb0b_IsAny(_12721_p.ptr());
		};
		if ((_1a9a079b3_Arr(_11821__self) != nullptr)) {
			return _1a9a06088_Mutable(_1a9a079b3_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1a9a07c27_Slc(_11821__self) != nullptr) || (_1a9a07276_Ptr(_11821__self) != nullptr)) || (_1a9a07012_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1a9a062ec_NilCompatible(_1a9a04b8b_TypeKind* _self_) {
	{
		_1a9a04b8b_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1a9a09663_Prim> _14417_prim = _1a9a06c9d_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1a9a0cb0b_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1a9a05ab0_IsNil(_14221__self) || (_1a9a07e8b_Fn(_14221__self) != nullptr)) || (_1a9a07012_Sptr(_14221__self) != nullptr)) || (_1a9a07276_Ptr(_14221__self) != nullptr)) || (_1a9a08464_Trait(_14221__self) != nullptr)) || (_1a9a07c27_Slc(_14221__self) != nullptr)) || (_1a9a086c8_Map(_14221__self) != nullptr)) || (_1a9a0774e_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1a9a06561_PerformsRC(_1a9a04b8b_TypeKind* _self_) {
	{
		_1a9a04b8b_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1a9a07012_Sptr(_16321__self) != nullptr) || (_1a9a07c27_Slc(_16321__self) != nullptr)) || (_1a9a08464_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1a9a067c5_SupportsCloning(_1a9a04b8b_TypeKind* _self_) {
	{
		_1a9a04b8b_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1a9a06c9d_Prim(_17121__self) != nullptr)) {
				_case_begin_1b0b30596:;
				{
					return (!(_1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1a9a074da_Enum(_17121__self) != nullptr)) {
				_case_begin_1b0b3060c:;
				{
					return true;
				}
			}
			else if ((_1a9a07e8b_Fn(_17121__self) != nullptr)) {
				_case_begin_1b0b30909:;
				{
					return true;
				}
			}
			else if ((_1a9a07276_Ptr(_17121__self) != nullptr)) {
				_case_begin_1b0b30970:;
				{
					return true;
				}
			}
			else if ((_1a9a07c27_Slc(_17121__self) != nullptr)) {
				_case_begin_1b0b309d6:;
				{
					return _1a9a067c5_SupportsCloning(_1a9a07c27_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a9a086c8_Map(_17121__self) != nullptr)) {
				_case_begin_1b0b30a4c:;
				{
					jule::Ptr<_1a9a0ee0a_Map> _18421_m = _1a9a086c8_Map(_17121__self);;
					return (_1a9a067c5_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1a9a067c5_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1a9a079b3_Arr(_17121__self) != nullptr)) {
				_case_begin_1b0b30ab3:;
				{
					return _1a9a067c5_SupportsCloning(_1a9a079b3_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a9a07012_Sptr(_17121__self) != nullptr)) {
				_case_begin_1b0b30b29:;
				{
					return _1a9a067c5_SupportsCloning(_1a9a07012_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1a9a08200_Struct(_17121__self) != nullptr)) {
				_case_begin_1b0b30ba1:;
				{
					jule::Ptr<_1b3967d9d_StructIns> _19125_s = _1a9a08200_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1b392ca44_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1b0b30475:;
				{
					return false;
				}
			}
			_match_end_1b0b3040e:;
		};
	};
}



inline jule::Bool _1a9a06a39_Variadicable(_1a9a04b8b_TypeKind* _self_) {
	{
		_1a9a04b8b_TypeKind* _20421__self = (&((*_self_)));;
		return (_1a9a07c27_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1a9a09663_Prim> _1a9a06c9d_Prim(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a09663_Prim>>()) {
			_case_begin_1b0b3845b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a09663_Prim>();
			}
		}
		else {
			_case_begin_1b0b37d1d:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b37cb8:;
	};
}



inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a07012_Sptr(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a0cde7_Sptr>>()) {
			_case_begin_1b0b3914e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a0cde7_Sptr>();
			}
		}
		else {
			_case_begin_1b0b38b54:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b38aee:;
	};
}



inline jule::Ptr<_1a9a1145b_Ptr> _1a9a07276_Ptr(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a1145b_Ptr>>()) {
			_case_begin_1b0b39db9:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a1145b_Ptr>();
			}
		}
		else {
			_case_begin_1b0b398be:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b39869:;
	};
}



inline jule::Ptr<_1b2553d42_Enum> _1a9a074da_Enum(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b2553d42_Enum>>()) {
			_case_begin_1b0b3ab12:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1b2553d42_Enum>();
			}
		}
		else {
			_case_begin_1b0b3a617:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3a5b2:;
	};
}



inline jule::Ptr<_1b255543c_TypeEnum> _1a9a0774e_TypeEnum(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b255543c_TypeEnum>>()) {
			_case_begin_1b0b3b87c:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1b255543c_TypeEnum>();
			}
		}
		else {
			_case_begin_1b0b3b382:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3b32c:;
	};
}



inline jule::Ptr<_1a9a109ee_Arr> _1a9a079b3_Arr(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a109ee_Arr>>()) {
			_case_begin_1b0b3c5e7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a109ee_Arr>();
			}
		}
		else {
			_case_begin_1b0b3c0ec:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3c097:;
	};
}



inline jule::Ptr<_1a9a0d854_Slc> _1a9a07c27_Slc(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a0d854_Slc>>()) {
			_case_begin_1b0b3d362:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a0d854_Slc>();
			}
		}
		else {
			_case_begin_1b0b3cd67:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3cd12:;
	};
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a9a07e8b_Fn(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
			_case_begin_1b0b3e0cc:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a99c03b5_FnIns>();
			}
		}
		else {
			_case_begin_1b0b3dad2:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3da7c:;
	};
}



inline jule::Ptr<_1b3967d9d_StructIns> _1a9a08200_Struct(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b3967d9d_StructIns>>()) {
			_case_begin_1b0b3ed25:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1b3967d9d_StructIns>();
			}
		}
		else {
			_case_begin_1b0b3e82a:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b3e7c5:;
	};
}



inline jule::Ptr<_1b2551bec_Trait> _1a9a08464_Trait(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b2551bec_Trait>>()) {
			_case_begin_1b0b40a90:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1b2551bec_Trait>();
			}
		}
		else {
			_case_begin_1b0b40595:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b40540:;
	};
}



inline jule::Ptr<_1a9a0ee0a_Map> _1a9a086c8_Map(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a0ee0a_Map>>()) {
			_case_begin_1b0b4180a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a0ee0a_Map>();
			}
		}
		else {
			_case_begin_1b0b41310:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b412aa:;
	};
}



inline jule::Ptr<_1a9a0e3d2_Tuple> _1a9a0893c_Tup(_1a9a04b8b_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a0e3d2_Tuple>>()) {
			_case_begin_1b0b42575:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1a9a0e3d2_Tuple>();
			}
		}
		else {
			_case_begin_1b0b4207a:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b42025:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a04b8b_TypeKind _Src) {
	_Stream << "TypeKind{";
	_Stream << "CppIdent:" << _Src._field_CppIdent << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9a0919b_checked(_1a9a08ce4_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1a9a09377_removeKind(_1a9a08ce4_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a08ce4_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a099c6_Str(_1a9a09663_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1a9a09cd4_Equals(jule::Ptr<_1a9a09663_Prim> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _35726_other) {
	jule::Ptr<_1a9a09663_Prim> _35813_prim = _1a9a06c9d_Prim(_35726_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1a9a0a257_IsConstraint(_1a9a09663_Prim* _self_) {
	return ((((!(_1a9a0c897_IsStr(&(*_self_)))) && (!(_1a9a0cb0b_IsAny(&(*_self_))))) && (!(_1a9a0c633_IsBool(&(*_self_))))) && (!(_1ac12b205_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1a9a0a4bb_IsI8(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1a9a0a730_IsI16(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1a9a0a994_IsI32(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1a9a0ac08_IsI64(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1a9a0ae6c_IsU8(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1a9a0b1d1_IsU16(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1a9a0b445_IsU32(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1a9a0b6a9_IsU64(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1a9a0b91d_IsF32(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1a9a0bb82_IsF64(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1a9a0bde6_IsInt(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1a9a0c15a_IsUint(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1a9a0c3be_IsUintptr(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a9a0c633_IsBool(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1a9a0c897_IsStr(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1a9a0cb0b_IsAny(_1a9a09663_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a09663_Prim _Src) {
	_Stream << "Prim{";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a0d25a_Str(_1a9a0cde7_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a9a05087_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a9a0d568_Equals(jule::Ptr<_1a9a0cde7_Sptr> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _43426_other) {
	jule::Ptr<_1a9a0cde7_Sptr> _43513_sptr = _1a9a07012_Sptr(_43426_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1a9a05395_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a0cde7_Sptr _Src) {
	_Stream << "Sptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a0dd60_Str(_1a9a0d854_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a9a05087_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a9a0e16d_Equals(jule::Ptr<_1a9a0d854_Slc> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _45326_other) {
	jule::Ptr<_1a9a0d854_Slc> _45413_slc = _1a9a07c27_Slc(_45326_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1a9a05395_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a0d854_Slc _Src) {
	_Stream << "Slc{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a0e745_Str(_1a9a0e3d2_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1a9a05087_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b0b511ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a04b8b_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1a9a05087_Str(_47216_t.ptr());
			}
			_iter_next_1b0b511ee:;
			++it;
			goto _iter_begin_1b0b511ee;
		}
		_iter_end_1b0b511ee:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1a9a0ea53_Equals(jule::Ptr<_1a9a0e3d2_Tuple> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _48126_other) {
	jule::Ptr<_1a9a0e3d2_Tuple> _48213_tup = _1a9a0893c_Tup(_48126_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1a9a05395_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1b0b547da:;
	}
	_iter_end_1b0b547da:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a0e3d2_Tuple _Src) {
	_Stream << "Tuple{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a1026d_Str(_1a9a0ee0a_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1a9a05087_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1a9a05087_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1a9a1057b_Equals(jule::Ptr<_1a9a0ee0a_Map> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _51826_other) {
	jule::Ptr<_1a9a0ee0a_Map> _51913_map = _1a9a086c8_Map(_51826_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_1a9a05395_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _1a9a05395_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a0ee0a_Map _Src) {
	_Stream << "Map{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a10d62_Str(_1a9a109ee_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1ac11bcc8_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1a9a05087_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1a9a11170_Equals(jule::Ptr<_1a9a109ee_Arr> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _54526_other) {
	jule::Ptr<_1a9a109ee_Arr> _54613_arr = _1a9a079b3_Arr(_54526_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1a9a05395_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a109ee_Arr _Src) {
	_Stream << "Arr{";
	_Stream << "Auto:" << _Src._field_Auto << ", ";
	_Stream << "N:" << _Src._field_N << ", ";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a117be_Str(_1a9a1145b_Ptr* _self_) {
	if (_1a9a11e2e_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1a9a05087_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1a9a11acc_Equals(jule::Ptr<_1a9a1145b_Ptr> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _56926_other) {
	jule::Ptr<_1a9a1145b_Ptr> _57013_ptr = _1a9a07276_Ptr(_56926_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1a9a05395_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1a9a11e2e_IsUnsafe(_1a9a1145b_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a1145b_Ptr _Src) {
	_Stream << "Ptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a123a2_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a9a13804_pushErr(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1e6a5c800_Token> _64726_token, jule::Str _64741_fmt, jule::Slice<jule::Any> _64754_args) {
	_1ac15ddd6_pushErr((*_self_)._field_s.ptr(), _64726_token,_64741_fmt,jule::Any(_64754_args));
}



inline void _1a9a139d0_allowBuiltin(_1a9a130ea_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1a9a13bab_disallowBuiltin(_1a9a130ea_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1a9a09663_Prim> _1a9a13eb9_buildPrim(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _65929_decl) {
	if ((!(_1a9a1d0b1_isPrim(_65929_decl.get()._field_Ident)))) {
		_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_65929_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _65929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_65929_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1a9a1ca72_buildPrimType(_65929_decl.get()._field_Ident);
}



inline void _1b0b641ac_pushReference(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b3967d9d_StructIns>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1aec30213_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1a99c3e8a_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}

inline void _1b0b67259_pushReference(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b2551bec_Trait>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1b0b68d71_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1a99c3e8a_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}



inline void _1a9a144b4_pushReferenceByKind(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _68343_k) {
	{
		
		if ((_1a9a08200_Struct(_68343_k.ptr()) != nullptr)) {
			_case_begin_1b0b62d15:;
			{
				jule::Ptr<_1b3967d9d_StructIns> _68621_t = _1a9a08200_Struct(_68343_k.ptr());;
				_1b0b641ac_pushReference(&(*_self_), _68621_t);
			}
		}
		else if ((_1a9a08464_Trait(_68343_k.ptr()) != nullptr)) {
			_case_begin_1b0b62d8c:;
			{
				jule::Ptr<_1b2551bec_Trait> _68921_t = _1a9a08464_Trait(_68343_k.ptr());;
				_1b0b67259_pushReference(&(*_self_), _68921_t);
			}
		}
		_match_end_1b0b62be4:;
	};
}



inline void _1a9a1487c_pushCycleError(_1a9a130ea_typeChecker* _self_, jule::Any _69429_def1, jule::Any _69440_def2, jule::Str& _69456_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _69613_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _69628_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _69628_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
				_case_begin_1b0b6c22b:;
				{
					return _69628_def.operator jule::Ptr<_1a9a03e98_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
				_case_begin_1b0b6c292:;
				{
					return _69628_def.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1b0b6c094:;
				{
					return jule::Str();
				}
			}
			_match_end_1b0b6beb7:;
		};
	});;
	jule::Str _70613_def1Ident = _69613_getIdent(_69429_def1);;
	jule::Str _70713_def2Ident = _69613_getIdent(_69440_def2);;
	jule::Str _70813_refersTo = _1e6736375_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_70613_def1Ident),jule::Any(_70713_def2Ident)}));;
	(_69456_message).buffer.insert(0, (((_1e6646340_Repeat(jule::Str(" ", 1),4LL) + _70813_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a9a14c34_checkCrossCycle(_1a9a130ea_typeChecker* _self_, jule::Any _71230_decl, jule::Str& _71246_message) {
	{
		auto &_match_expr{ _71230_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
			_case_begin_1b0b6eaad:;
			{
				jule::Ptr<_1a9a03e98_TypeAlias> _71517_ta = _71230_decl.operator jule::Ptr<_1a9a03e98_TypeAlias>();;
				{
					auto &expr = _71517_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1b0b7086c:;
					if (it != expr.end()) {
						jule::Any &_71620_d = *it;
						{
							{
								
								if ((_71620_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1b0b712eb:;
									{
										_1a9a1487c_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1a9a14c34_checkCrossCycle(&(*_self_), jule::Any(_71620_d),_71246_message)))) {
									_case_begin_1b0b71373:;
									{
										_1a9a1487c_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								_match_end_1b0b711ca:;
							};
						}
						_iter_next_1b0b7086c:;
						++it;
						goto _iter_begin_1b0b7086c;
					}
					_iter_end_1b0b7086c:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1b0b6eb24:;
			{
				jule::Ptr<_1b393b9dc_Struct> _72717_s = _71230_decl.operator jule::Ptr<_1b393b9dc_Struct>();;
				{
					auto &expr = _72717_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1b0b72561:;
					if (it != expr.end()) {
						jule::Ptr<_1b393b9dc_Struct> &_72820_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72820_d)) {
									_case_begin_1b0b738d6:;
									{
										_1a9a1487c_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1a9a14c34_checkCrossCycle(&(*_self_), jule::Any(_72820_d),_71246_message)))) {
									_case_begin_1b0b7395d:;
									{
										_1a9a1487c_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								_match_end_1b0b737b5:;
							};
						}
						_iter_next_1b0b72561:;
						++it;
						goto _iter_begin_1b0b72561;
					}
					_iter_end_1b0b72561:;
				};
			}
		}
		_match_end_1b0b6e9c0:;
	};
	return true;
}



inline jule::Bool _1a9a150db_checkIllegalCycles(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _74638_ident, jule::Any _74665_decl) {
	jule::Bool _74678_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_74678_ok = true;
		return _74678_ok;
	};
	{
		auto &_match_expr{ _74665_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1b0b74a19:;
			{
				if (((*_self_)._field_notPlain || _74665_decl.operator jule::Ptr<_1b393b9dc_Struct>().get()._field_CppLinked)) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
			_case_begin_1b0b74b5c:;
			{
				if (_74665_decl.operator jule::Ptr<_1a9a03e98_TypeAlias>().get()._field_CppLinked) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		_match_end_1b0b749b4:;
	};
	if ((_74665_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1a9a13804_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_74678_ok = false;
		return _74678_ok;
	};
	jule::Str _76917_message = jule::Str();;
	if ((!(_1a9a14c34_checkCrossCycle(&(*_self_), jule::Any(_74665_decl),_76917_message)))) {
		jule::Str _77221_errMsg = _76917_message;;
		_76917_message=jule::Str();
		_1a9a1487c_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_74665_decl),_76917_message);
		_77221_errMsg=(_77221_errMsg + _76917_message);
		_1a9a13804_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77221_errMsg)}));
		_74678_ok = false;
		return _74678_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a03e98_TypeAlias>>()) {
			_case_begin_1b0b79d60:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_74665_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1b0b79e2b:;
			{
				{
					auto &_match_expr{ _74665_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
						_case_begin_1b0b7a679:;
						{
							jule::Ptr<_1b393b9dc_Struct> _78825_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1b393b9dc_Struct>();;
							_78825_s.get()._field_Depends = jule::alloc_for_append(_78825_s.get()._field_Depends,1);_78825_s.get()._field_Depends.__push(_74665_decl.operator jule::Ptr<_1b393b9dc_Struct>());;
						}
					}
					_match_end_1b0b7a58b:;
				};
			}
		}
		_match_end_1b0b79d0a:;
	};
	_74678_ok = true;
	return _74678_ok;
}



inline jule::Trait<_1a9a0475c_Kind> _1a9a15493_fromTypeAlias(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _79633_decl, jule::Ptr<_1a9a03e98_TypeAlias>& _79660_ta) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _79660_ta.get()._field_Public,_79660_ta.get()._field_Token)))) {
		_1a9a13804_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	_79660_ta.get()._field_Used=true;
	if ((_79633_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1b0b7eeec:;
			if (it != expr.end()) {
				jule::Ptr<_1a9a03e98_TypeAlias> _81320_bg = *it;
				{
					if (((_81320_bg == _79660_ta) || ((_79660_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1a9a05395_Equals(_79660_ta.get()._field_Kind.get()._field_Kind, _81320_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1b0b7eeec;
					};
				}
				_iter_next_1b0b7eeec:;
				++it;
				goto _iter_begin_1b0b7eeec;
			}
			_iter_end_1b0b7eeec:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1b0b81d23:;
			if (it != expr.end()) {
				jule::Ptr<_1a9a03e98_TypeAlias> _82420_bg = *it;
				{
					if ((_82420_bg == _79660_ta)) {
						_1a9a13804_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _79660_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1b0b827b3:;
						if (it != expr.end()) {
							jule::Ptr<_1a9a03e98_TypeAlias> _82924_dg = *it;
							{
								if ((_82420_bg == _82924_dg)) {
									_1a9a13804_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1b0b827b3:;
							++it;
							goto _iter_begin_1b0b827b3;
						}
						_iter_end_1b0b827b3:;
					};
				}
				_iter_next_1b0b81d23:;
				++it;
				goto _iter_begin_1b0b81d23;
			}
			_iter_end_1b0b81d23:;
		};
	};
	jule::Bool _83817_ok = _1a9a150db_checkIllegalCycles(&(*_self_), _79633_decl,jule::Any(_79660_ta));;
	if ((!(_83817_ok))) {
		return nullptr;
	};
	_83817_ok=_1ac167a49_checkTypeAliasDeclKind((*_self_)._field_s, _79660_ta,(*_self_)._field_lookup);
	if ((!(_83817_ok))) {
		return nullptr;
	};
	if ((_79660_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_79660_ta);;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _85517_tk = jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Generic=_79660_ta.get()._field_Generic, ._field_Kind=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1a9a144b4_pushReferenceByKind(&(*_self_), _85517_tk);
	if (_79660_ta.get()._field_CppLinked) {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Ident;
	} else {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1a9a0475c_Kind>(_85517_tk, 5);
}



inline jule::Ptr<_1b2553d42_Enum> _1a9a1584a_fromEnum(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _86828_decl, jule::Ptr<_1b2553d42_Enum>& _86855_e) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _86855_e.get()._field_Public,_86855_e.get()._field_Token)))) {
		_1a9a13804_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_86828_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _86855_e;
}



inline jule::Ptr<_1b255543c_TypeEnum> _1a9a15c02_fromTypeEnum(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _88032_decl, jule::Ptr<_1b255543c_TypeEnum>& _88059_e) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _88059_e.get()._field_Public,_88059_e.get()._field_Token)))) {
		_1a9a13804_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88032_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88059_e;
}



inline jule::Ptr<_1b2551bec_Trait> _1a9a160a9_fromTrait(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _89229_decl, jule::Ptr<_1b2551bec_Trait>& _89256_t) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _89256_t.get()._field_Public,_89256_t.get()._field_Token)))) {
		_1a9a13804_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89229_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1b0b67259_pushReference(&(*_self_), _89256_t);
	return _89256_t;
}



inline jule::Bool _1a9a16461_checkStructIns(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b3967d9d_StructIns>& _90538_ins, jule::Ptr<_1e6a5c800_Token>& _90560_errorToken) {
	jule::Bool _90582_ok = jule::Bool();
	if (_90538_ins.get()._field_Checked) {
		_90582_ok = true;
		return _90582_ok;
	};
	_90538_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _90538_ins.get()._field_Decl))) {
		_90582_ok = true;
		return _90582_ok;
	};
	if ((!(_1ac176a36_precheckStructIns((*_self_)._field_s, _90538_ins,_90560_errorToken)))) {
		_90582_ok = false;
		return _90582_ok;
	};
	if ((_90538_ins.get()._field_Generics.len() > 0LL)) {
		_1ac1774a4_checkStructInsOperators((*_self_)._field_s, _90538_ins);
		_1ac176cab_checkStructIns((*_self_)._field_s, _90538_ins);
	};
	_90582_ok = true;
	return _90582_ok;
}



inline void _1a9a16708_appendUsedStructReference(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b393b9dc_Struct>& _92649_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1b393b9dc_Struct>>()) {
			_case_begin_1aecb07e3:;
			{
				jule::Ptr<_1b393b9dc_Struct> _93221_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1b393b9dc_Struct>();;
				if ((!(_1b39317e5_IsUses(_93221_refS.ptr(), _92649_s)))) {
					_93221_refS.get()._field_Uses = jule::alloc_for_append(_93221_refS.get()._field_Uses,1);_93221_refS.get()._field_Uses.__push(_92649_s);;
				};
			}
		}
		_match_end_1aecb0507:;
	};
}



inline jule::Ptr<_1b3967d9d_StructIns> _1a9a16ac1_buildStructInstance(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _93943_decl, jule::Ptr<_1b393b9dc_Struct>& _93970_s) {
	jule::Ptr<_1a9a123a2_referencer> _94117_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>> _94317_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1ac13b358_scopeChecker>>()) {
				_case_begin_1aecb34e9:;
				{
					jule::Ptr<_1ac13b358_scopeChecker> _95025_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ac13b358_scopeChecker>();;
					jule::Ptr<_1ac13b358_scopeChecker> _95125_hard = _1ac13e6d0_getHardRoot(_95025_sc);;
					if (((_95125_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95125_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _93970_s))) {
						goto _match_end_1aecb3494;
					};
					jule::I64 _95521_n = (_95125_hard.get()._field_owner.get()._field_Generics.len() + _95125_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95125_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_95521_n);
				}
			}
			_match_end_1aecb3494:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1b3967d9d_StructIns> _96517_ins = _1b3923de2_instance(_93970_s);;
	_96517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1a9a0345e_InsGeneric>>::alloc(0LL,_93943_decl.get()._field_Generics.len());
	{
		auto &expr = _93943_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aecb7212:;
		if (it != expr.end()) {
			jule::Ptr<_1b394b326_TypeDecl> _96721_g = *it;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _96821_kind = _1a9a1a058_build(&(*_self_), _96721_g.get()._field_Kind);;
				if ((_96821_kind == nullptr)) {
					return nullptr;
				};
				_96517_ins.get()._field_Generics = jule::alloc_for_append(_96517_ins.get()._field_Generics,1);_96517_ins.get()._field_Generics.__push(jule::new_ptr<_1a9a0345e_InsGeneric>(_1a9a0345e_InsGeneric{._field_Kind=_96821_kind, }));;
			}
			_iter_next_1aecb7212:;
			++it;
			goto _iter_begin_1aecb7212;
		}
		_iter_end_1aecb7212:;
	};
	(*_self_)._field_bannedGenerics=_94317_bannedGenerics;
	(*_self_)._field_referencer=_94117_referencer;
	return _96517_ins;
}



inline jule::Ptr<_1b3967d9d_StructIns> _1a9a16e78_fromStruct(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _98234_decl, jule::Ptr<_1b393b9dc_Struct>& _98261_s) {
	if ((!(_1ac15e5ac_isAccessibleDefine((*_self_)._field_s.ptr(), _98261_s.get()._field_Public,_98261_s.get()._field_Token)))) {
		_1a9a13804_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98234_decl.get()._field_Generics.len() > 0LL)) {
			_1a9a13804_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1b3967d9d_StructIns>(_1b3967d9d_StructIns{._field_Decl=_98261_s, });
	};
	jule::Bool _100017_ok = ((*_self_)._field_notPlain || _1a9a150db_checkIllegalCycles(&(*_self_), _98234_decl,jule::Any(_98261_s)));;
	if ((!(_100017_ok))) {
		return nullptr;
	};
	_1a9a16708_appendUsedStructReference(&(*_self_), _98261_s);
	jule::Ptr<_1b3967d9d_StructIns> _100617_ins = _1a9a16ac1_buildStructInstance(&(*_self_), _98234_decl,_98261_s);;
	if ((_100617_ins == nullptr)) {
		return nullptr;
	};
	_100017_ok=_1ac16027d_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_100617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_100617_ins.get()._field_Generics.len()),_98234_decl.get()._field_Token);
	if ((!(_100017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1b3967d9d_StructIns> _101617_existInstance = _1b392815a_appendInstance(_98261_s.ptr(), _100617_ins);;
	if ((_101617_existInstance != nullptr)) {
		if ((!(_1ac1661eb_checkConstraintsStruct((*_self_)._field_s, _100617_ins,_98234_decl.get()._field_Token,_101617_existInstance)))) {
			return nullptr;
		};
		_1b0b641ac_pushReference(&(*_self_), _101617_existInstance);
		return _101617_existInstance;
	};
	if ((!(_1a9a16461_checkStructIns(&(*_self_), _100617_ins,_98234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1b0b641ac_pushReference(&(*_self_), _100617_ins);
	return _100617_ins;
}



inline jule::Trait<_1a9a0475c_Kind> _1a9a17286_getDef(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl>& _104030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1aecc20b8:;
		if (it != expr.end()) {
			jule::Ptr<_1b395890a_GenericDecl> _104116_g = *it;
			{
				if ((_104116_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					return jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(_104116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1aecc20b8:;
			++it;
			goto _iter_begin_1aecc20b8;
		}
		_iter_end_1aecc20b8:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1aecc297b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a03e98_TypeAlias> _104721_g = *it;
			{
				if ((_104721_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					if ((_104030_decl.get()._field_Generics.len() > 0LL)) {
						_1a9a13804_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1b3967d9d_StructIns> _105325_st = _1a9a08200_Struct(_104721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_105325_st != nullptr)) {
						jule::Bool _105525_ok = _1a9a150db_checkIllegalCycles(&(*_self_), _104030_decl,jule::Any(_105325_st.get()._field_Decl));;
						if ((!(_105525_ok))) {
							return nullptr;
						};
					};
					return _104721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1aecc297b:;
			++it;
			goto _iter_begin_1aecc297b;
		}
		_iter_end_1aecc297b:;
	};
	if ((!(_104030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1b2553d42_Enum> _106521_e = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a202a0_FindEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_106521_e != nullptr)) {
			return jule::Trait<_1a9a0475c_Kind>(_1a9a1584a_fromEnum(&(*_self_), _104030_decl,_106521_e), 3);
		};
		jule::Ptr<_1b255543c_TypeEnum> _107021_te = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a205ad_FindTypeEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107021_te != nullptr)) {
			return jule::Trait<_1a9a0475c_Kind>(_1a9a15c02_fromTypeEnum(&(*_self_), _104030_decl,_107021_te), 4);
		};
		jule::Ptr<_1b2551bec_Trait> _107521_t = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1ee92_FindTrait((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107521_t != nullptr)) {
			return jule::Trait<_1a9a0475c_Kind>(_1a9a160a9_fromTrait(&(*_self_), _104030_decl,_107521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1a9a13804_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b393b9dc_Struct> _108417_s = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1e7cc_FindStruct((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if ((_108417_s != nullptr)) {
		return jule::Trait<_1a9a0475c_Kind>(_1a9a16e78_fromStruct(&(*_self_), _104030_decl,_108417_s), 0);
	};
	jule::Ptr<_1a9a03e98_TypeAlias> _108917_ta = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1e425_FindTypeAlias((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if (((_108917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_108917_ta=_1a9a2ca1b_findBuiltinTypeAlias(_104030_decl.get()._field_Ident);
	};
	if ((_108917_ta != nullptr)) {
		return _1a9a15493_fromTypeAlias(&(*_self_), _104030_decl,_108917_ta);
	};
	_1a9a13804_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1a9a0475c_Kind> _1a9a17594_buildIdent(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b8dc_IdentTypeDecl> _110133_decl) {
	{
		
		if (_1a9a1d0b1_isPrim(_110133_decl.get()._field_Ident)) {
			_case_begin_1aeccd6bd:;
			{
				return jule::Trait<_1a9a0475c_Kind>(_1a9a13eb9_buildPrim(&(*_self_), _110133_decl), 6);
			}
		}
		else {
			_case_begin_1aeccce4d:;
			{
				return _1a9a17286_getDef(&(*_self_), _110133_decl);
			}
		}
		_match_end_1aecccd71:;
	};
}



inline jule::Trait<_1a9a0475c_Kind> _1a9a178a2_buildSubIdent(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394c03b_SubIdentTypeDecl> _111036_decl) {
	jule::Trait<_1a9a0475c_Kind> _111117_ident = _1a9a17594_buildIdent(&(*_self_), _111036_decl.get()._field_Idents[0LL]);;
	if ((_111117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _111117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1b255543c_TypeEnum>>()) {
			_case_begin_1b0ba6d6a:;
			{
				goto _match_end_1b0ba6c8d;
			}
		}
		else {
			_case_begin_1b0ba6a5c:;
			{
				_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0ba6c8d:;
	};
	jule::Ptr<_1b255543c_TypeEnum> _112317_t = _111117_ident.operator jule::Ptr<_1b255543c_TypeEnum>();;
	jule::Slice<jule::Ptr<_1b394b8dc_IdentTypeDecl>> _112417_idents = _111036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _112417_idents;
		auto it = expr.begin();
		_iter_begin_1b0ba81bd:;
		if (it != expr.end()) {
			jule::I64 _112513_i = it - expr.begin();
			jule::Ptr<_1b394b8dc_IdentTypeDecl> _112516_id = *it;
			{
				jule::Ptr<_1b2554d76_TypeEnumItem> _112621_item = _1b2555e76_FindItem(_112317_t.ptr(), _112516_id.get()._field_Ident);;
				if ((_112621_item == nullptr)) {
					_1a9a13804_pushErr(&(*_self_), _112516_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_112317_t.get()._field_Ident),jule::Any(_112516_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_112417_idents.len() - _112513_i) == 1LL)) {
					_1a9a144b4_pushReferenceByKind(&(*_self_), _112621_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1a9a0475c_Kind>(_112621_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_112317_t=_1a9a0774e_TypeEnum(_112621_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_112317_t == nullptr)) {
					_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1b0ba81bd:;
			++it;
			_112513_i++;
			goto _iter_begin_1b0ba81bd;
		}
		_iter_end_1b0ba81bd:;
	};
	return nullptr;
}



inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a17bb0_buildSptrFromType(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _114541_elem) {
	{
		
		if ((_114541_elem == nullptr)) {
			_case_begin_1b0ba8b80:;
			{
				return nullptr;
			}
		}
		else if ((_1a9a08200_Struct(_114541_elem.ptr()) != nullptr)) {
			_case_begin_1b0ba8c07:;
			{
				jule::Ptr<_1b3967d9d_StructIns> _115117_s = _1a9a08200_Struct(_114541_elem.ptr());;
				if (((_115117_s.get()._field_Decl != nullptr) && _115117_s.get()._field_Decl.get()._field_CppLinked)) {
					_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1a9a079b3_Arr(_114541_elem.ptr()) != nullptr) && _1a9a079b3_Arr(_114541_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b0ba8c7e:;
			{
				_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0ba8a4d:;
	};
	return jule::new_ptr<_1a9a0cde7_Sptr>(_1a9a0cde7_Sptr{._field_Elem=_114541_elem});
}



inline jule::Ptr<_1a9a0cde7_Sptr> _1a9a17ebd_buildSptr(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394c6ce_SptrTypeDecl> _116532_decl) {
	jule::Bool _116613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_116613_notPlain;
	});;
	jule::Ptr<_1a9a04b8b_TypeKind> _117017_elem = _1a9a1a366_checkDecl(&(*_self_), _116532_decl.get()._field_Elem);;
	return _1a9a17bb0_buildSptrFromType(&(*_self_), _117017_elem);
}



inline jule::Ptr<_1a9a1145b_Ptr> _1a9a182cb_buildPtrFromType(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1a9a04b8b_TypeKind>& _117440_elem) {
	{
		
		if ((_117440_elem == nullptr)) {
			_case_begin_1b0bb2309:;
			{
				return nullptr;
			}
		}
		else if (((_1a9a079b3_Arr(_117440_elem.ptr()) != nullptr) && _1a9a079b3_Arr(_117440_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b0bb2381:;
			{
				_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a9a1145b_Ptr>();
			}
		}
		_match_end_1b0bb21d8:;
	};
	return jule::new_ptr<_1a9a1145b_Ptr>(_1a9a1145b_Ptr{._field_Elem=_117440_elem});
}



inline jule::Ptr<_1a9a1145b_Ptr> _1a9a185d9_buildPtr(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394d1a2_PtrTypeDecl> _118931_decl) {
	jule::Bool _119013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119013_notPlain;
	});;
	jule::Ptr<_1a9a04b8b_TypeKind> _119417_elem = nullptr;;
	if ((!(_1b394d504_IsUnsafe(_118931_decl.ptr())))) {
		_119417_elem=_1a9a1a366_checkDecl(&(*_self_), _118931_decl.get()._field_Elem);
		return _1a9a182cb_buildPtrFromType(&(*_self_), _119417_elem);
	};
	return jule::new_ptr<_1a9a1145b_Ptr>(_1a9a1145b_Ptr{._field_Elem=_119417_elem});
}



inline jule::Ptr<_1a9a0d854_Slc> _1a9a188e7_buildSlc(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394caca_SlcTypeDecl> _120631_decl) {
	jule::Bool _120713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120713_notPlain;
	});;
	jule::Ptr<_1a9a04b8b_TypeKind> _121117_elem = _1a9a1a366_checkDecl(&(*_self_), _120631_decl.get()._field_Elem);;
	{
		
		if ((_121117_elem == nullptr)) {
			_case_begin_1b0bb75ea:;
			{
				return nullptr;
			}
		}
		else if (((_1a9a079b3_Arr(_121117_elem.ptr()) != nullptr) && _1a9a079b3_Arr(_121117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b0bb7672:;
			{
				_1a9a13804_pushErr(&(*_self_), _120631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0bb7540:;
	};
	return jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=_121117_elem});
}



inline jule::Ptr<_1a9a109ee_Arr> _1a9a18c05_buildArr(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394d834_ArrTypeDecl> _122731_decl) {
	jule::Bool _122813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122813_notPlain;
	});;
	jule::I64 _123217_n = 0LL;;
	if ((!(_1b394dc0d_AutoSized(_122731_decl.ptr())))) {
		jule::Ptr<_1ac1c4bb6_Data> _123521_size = _1a99e6342_evalExpr(_1ac16444c_eval((*_self_)._field_s, (*_self_)._field_lookup), _122731_decl.get()._field_Size);;
		if ((_123521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1ac1c5579_IsConst(_123521_size.ptr())))) {
			_1a9a13804_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a9a06c9d_Prim(_123521_size.get()._field_Kind.ptr()) == nullptr) || (!(_1ac12ab3e_IsInt(_1a9a06c9d_Prim(_123521_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a9a13804_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_123217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a99adb23_AsI64(_123521_size.get()._field_Constant.ptr())));
		if ((_123217_n < 0LL)) {
			_1a9a13804_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1ac11d071_BitSize != 64LL) && (static_cast<jule::F64>(_123217_n) > _1ac125760_Max(jule::Str("int", 3))))) {
			_1a9a13804_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _125817_elem = _1a9a1a366_checkDecl(&(*_self_), _122731_decl.get()._field_Elem);;
	{
		
		if ((_125817_elem == nullptr)) {
			_case_begin_1b0bc12c4:;
			{
				return nullptr;
			}
		}
		else if (((_1a9a079b3_Arr(_125817_elem.ptr()) != nullptr) && _1a9a079b3_Arr(_125817_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b0bc133a:;
			{
				_1a9a13804_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0bc104e:;
	};
	return jule::new_ptr<_1a9a109ee_Arr>(_1a9a109ee_Arr{._field_Auto=_1b394dc0d_AutoSized(_122731_decl.ptr()), ._field_N=_123217_n, ._field_Elem=_125817_elem});
}



inline jule::Ptr<_1a9a0ee0a_Map> _1a9a19013_buildMap(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394e082_MapTypeDecl> _127631_decl) {
	jule::Bool _127713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_127713_notPlain;
	});;
	jule::Ptr<_1a9a04b8b_TypeKind> _128117_key = _1a9a1a366_checkDecl(&(*_self_), _127631_decl.get()._field_Key);;
	if ((_128117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _128617_val = _1a9a1a366_checkDecl(&(*_self_), _127631_decl.get()._field_Val);;
	if ((_128617_val == nullptr)) {
		return nullptr;
	};
	if ((_1a9a074da_Enum(_128617_val.ptr()) != nullptr)) {
		_1a9a13804_pushErr(&(*_self_), _127631_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a9a0ee0a_Map>(_1a9a0ee0a_Map{._field_Key=_128117_key, ._field_Val=_128617_val});
}



inline jule::Ptr<_1a9a0e3d2_Tuple> _1a9a19321_buildTuple(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394cdb6_TupleTypeDecl> _130033_decl) {
	jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _130117_types = jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>>::alloc(0LL,_130033_decl.get()._field_Types.len());;
	{
		auto &expr = _130033_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1b0bc6a16:;
		if (it != expr.end()) {
			jule::Ptr<_1b394b326_TypeDecl> _130221_t = *it;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _130321_kind = _1a9a1a366_checkDecl(&(*_self_), _130221_t);;
				if ((_130321_kind == nullptr)) {
					return nullptr;
				};
				_130117_types = jule::alloc_for_append(_130117_types,1);_130117_types.__push(_130321_kind);;
			}
			_iter_next_1b0bc6a16:;
			++it;
			goto _iter_begin_1b0bc6a16;
		}
		_iter_end_1b0bc6a16:;
	};
	return jule::new_ptr<_1a9a0e3d2_Tuple>(_1a9a0e3d2_Tuple{._field_Types=_130117_types});
}



inline jule::Bool _1a9a1962e_checkFnTypes(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1a99c03b5_FnIns>& _131336_f) {
	jule::Bool _131349_ok = jule::Bool();
	{
		auto &expr = _131336_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1b0bc895d:;
		if (it != expr.end()) {
			jule::Ptr<_1a99be4e6_ParamIns> _131421_p = *it;
			{
				_131421_p.get()._field_Kind=_1a9a1a058_build(&(*_self_), _131421_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_131349_ok=(_131421_p.get()._field_Kind != nullptr);
				if ((!(_131349_ok))) {
					_131349_ok = false;
					return _131349_ok;
				};
				_1ac166828_checkFnParamKind((*_self_)._field_s, _131421_p);
			}
			_iter_next_1b0bc895d:;
			++it;
			goto _iter_begin_1b0bc895d;
		}
		_iter_end_1b0bc895d:;
	};
	if ((!(_1a99bcb76_IsVoid(_131336_f.get()._field_Decl.ptr())))) {
		_131336_f.get()._field_Result=_1a9a1a058_build(&(*_self_), _131336_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_131349_ok = (_131336_f.get()._field_Result != nullptr);
		return _131349_ok;
	};
	_131349_ok = true;
	return _131349_ok;
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a9a1993c_buildFn(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b395d13a_FnDecl> _133130_decl) {
	if ((_133130_decl.get()._field_Generics.len() > 0LL)) {
		_1a9a13804_pushErr(&(*_self_), _133130_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a99bc714_Fn> _133717_f = _1a99c64ed_buildFn(_133130_decl);;
	jule::I64 _133913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1ac17359e_checkFnDecl((*_self_)._field_s, _133717_f);
	if ((_133913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1a99c03b5_FnIns> _134517_ins = _1a99bdb00_instanceForce(_133717_f);;
	_134517_ins.get()._field_Anon=true;
	jule::Bool _134813_ok = _1a9a1962e_checkFnTypes(&(*_self_), _134517_ins);;
	if ((!(_134813_ok))) {
		return nullptr;
	};
	return _134517_ins;
}



inline jule::Trait<_1a9a0475c_Kind> _1a9a19c4a_buildByNamespace(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394c3e3_NamespaceTypeDecl> _135639_decl) {
	jule::Str _135713_path = _1a9a1c6ba_buildLinkPathByTokens(_135639_decl.get()._field_Idents);;
	jule::Ptr<_1ac1530c8_ImportInfo> _135817_imp = _1a9a20701_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9a1dbb6_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac1530c8_ImportInfo>)>([=](jule::Ptr<_1ac1530c8_ImportInfo> _135852_imp) mutable -> jule::Bool {
		if (((_135639_decl.get()._field_Idents.len() == 1LL) && (_135852_imp.get()._field_Alias == _135713_path))) {
			return true;
		};
		return ((_135852_imp.get()._field_LinkPath == _135713_path) && _1ac155c35_isAccessibleViaSelection(_135852_imp.ptr()));
	}));;
	if (((_135817_imp == nullptr) || (!(_1ac155691_isLookupable(_135817_imp.ptr(), jule::Str("self", 4)))))) {
		_1a9a13804_pushErr(&(*_self_), _135639_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_135713_path)}));
		return nullptr;
	};
	_1a9a13bab_disallowBuiltin(&(*_self_));
	jule::Trait<_1a9a20701_Lookup> _137117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a9a20701_Lookup>(_135817_imp, 1);
	jule::Ptr<_1a9a04b8b_TypeKind> _137317_kind = _1a9a1a366_checkDecl(&(*_self_), _135639_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_137117_lookup;
	_1a9a139d0_allowBuiltin(&(*_self_));
	return jule::Trait<_1a9a0475c_Kind>(_137317_kind, 5);
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1a9a1a058_build(_1a9a130ea_typeChecker* _self_, jule::Any& _138029_declKind) {
	jule::Trait<_1a9a0475c_Kind> _138117_kind = nullptr;;
	{
		auto &_match_expr{ _138029_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394b8dc_IdentTypeDecl>>()) {
			_case_begin_1b0bd7296:;
			{
				jule::Trait<_1a9a0475c_Kind> _138421_t = _1a9a17594_buildIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>());;
				if ((_138421_t != nullptr)) {
					_138117_kind=_138421_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c03b_SubIdentTypeDecl>>()) {
			_case_begin_1b0bd7b26:;
			{
				jule::Trait<_1a9a0475c_Kind> _138921_t = _1a9a178a2_buildSubIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394c03b_SubIdentTypeDecl>());;
				if ((_138921_t != nullptr)) {
					_138117_kind=_138921_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c6ce_SptrTypeDecl>>()) {
			_case_begin_1b0bd7b8c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a0cde7_Sptr> _139521_t = _1a9a17ebd_buildSptr(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394c6ce_SptrTypeDecl>());;
				if ((_139521_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_139521_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394d1a2_PtrTypeDecl>>()) {
			_case_begin_1b0bd6482:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a1145b_Ptr> _140121_t = _1a9a185d9_buildPtr(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394d1a2_PtrTypeDecl>());;
				if ((_140121_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_140121_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394caca_SlcTypeDecl>>()) {
			_case_begin_1b0bd64e8:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a0d854_Slc> _140721_t = _1a9a188e7_buildSlc(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394caca_SlcTypeDecl>());;
				if ((_140721_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_140721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394d834_ArrTypeDecl>>()) {
			_case_begin_1b0bd655e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a109ee_Arr> _141321_t = _1a9a18c05_buildArr(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394d834_ArrTypeDecl>());;
				if ((_141321_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_141321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394e082_MapTypeDecl>>()) {
			_case_begin_1b0bd65c5:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a0ee0a_Map> _141921_t = _1a9a19013_buildMap(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394e082_MapTypeDecl>());;
				if ((_141921_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_141921_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394cdb6_TupleTypeDecl>>()) {
			_case_begin_1b0bd8330:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9a0e3d2_Tuple> _142521_t = _1a9a19321_buildTuple(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394cdb6_TupleTypeDecl>());;
				if ((_142521_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_142521_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b0bd8396:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a99c03b5_FnIns> _143121_t = _1a9a1993c_buildFn(&(*_self_), _138029_declKind.operator jule::Ptr<_1b395d13a_FnDecl>());;
				if ((_143121_t != nullptr)) {
					_138117_kind=jule::Trait<_1a9a0475c_Kind>(_143121_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c3e3_NamespaceTypeDecl>>()) {
			_case_begin_1b0bd840c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a9a0475c_Kind> _143721_t = _1a9a19c4a_buildByNamespace(&(*_self_), _138029_declKind.operator jule::Ptr<_1b394c3e3_NamespaceTypeDecl>());;
				if ((_143721_t != nullptr)) {
					_138117_kind=_143721_t;
				};
			}
		}
		else {
			_case_begin_1b0bd62d9:;
			{
				jule::Any _144221_udeclKind = (*(((jule::Any*)((&(_138029_declKind))))));;
				{
					auto &_match_expr{ _144221_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1a9a0cde7_Sptr>>()) {
						_case_begin_1b0bd71b9:;
						{
							_138117_kind=jule::Trait<_1a9a0475c_Kind>(_144221_udeclKind.operator jule::Ptr<_1a9a0cde7_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9a1145b_Ptr>>()) {
						_case_begin_1b0bd7230:;
						{
							_138117_kind=jule::Trait<_1a9a0475c_Kind>(_144221_udeclKind.operator jule::Ptr<_1a9a1145b_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1b0bd7065:;
						{
							_1a9a13804_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1b0bd6e77:;
				};
			}
		}
		_match_end_1b0bd6284:;
	};
	if ((_138117_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a04b8b_TypeKind>>()) {
			_case_begin_1b0be55b2:;
			{
				return _138117_kind.operator jule::Ptr<_1a9a04b8b_TypeKind>();
			}
		}
		else {
			_case_begin_1b0be4dec:;
			{
				return jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=_138117_kind});
			}
		}
		_match_end_1b0bd893a:;
	};
}



inline jule::Ptr<_1a9a04b8b_TypeKind> _1a9a1a366_checkDecl(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1b394b326_TypeDecl>& _146633_decl) {
	jule::Ptr<_1e6a5c800_Token> _146817_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_146633_decl.get()._field_Token;
	jule::Ptr<_1a9a04b8b_TypeKind> _147117_kind = _1a9a1a058_build(&(*_self_), _146633_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_146817_errorToken;
	return _147117_kind;
}



inline void _1a9a1a5db_check(_1a9a130ea_typeChecker* _self_, jule::Ptr<_1a9a08ce4_TypeSymbol>& _147729_t) {
	if ((_147729_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1a9a04b8b_TypeKind> _148117_kind = _1a9a1a366_checkDecl(&(*_self_), _147729_t.get()._field_Decl);;
	if ((_148117_kind == nullptr)) {
		_1a9a09377_removeKind(_147729_t.ptr());
		return;;
	};
	_147729_t.get()._field_Kind=_148117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a130ea_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a9a1ac4b_identTypeDecl(jule::Str& _149330_ident, jule::Ptr<_1b394b8dc_IdentTypeDecl> _149342_t) {
	if ((_149342_t.get()._field_Ident == _149330_ident)) {
		return true;
	};
	{
		auto &expr = _149342_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b0be90ee:;
		if (it != expr.end()) {
			jule::Ptr<_1b394b326_TypeDecl> &_149716_g = *it;
			{
				if (static__1a9a1b08c_exist(_149330_ident,_149716_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1b0be90ee:;
			++it;
			goto _iter_begin_1b0be90ee;
		}
		_iter_end_1b0be90ee:;
	};
	return false;
}



inline jule::Bool static__1a9a1b08c_exist(jule::Str& _150522_ident, jule::Any& _150535_k) {
	{
		auto &_match_expr{ _150535_k };
		
		if (_match_expr.type_is<jule::Ptr<_1b394b8dc_IdentTypeDecl>>()) {
			_case_begin_1b0bea1ee:;
			{
				return static__1a9a1ac4b_identTypeDecl(_150522_ident,_150535_k.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c03b_SubIdentTypeDecl>>()) {
			_case_begin_1b0bea265:;
			{
				jule::Ptr<_1b394c03b_SubIdentTypeDecl> _151017_sit = _150535_k.operator jule::Ptr<_1b394c03b_SubIdentTypeDecl>();;
				{
					auto &expr = _151017_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1b0beba6e:;
					if (it != expr.end()) {
						jule::Ptr<_1b394b8dc_IdentTypeDecl> &_151120_id = *it;
						{
							if (static__1a9a1ac4b_identTypeDecl(_150522_ident,_151120_id)) {
								return true;
							};
						}
						_iter_next_1b0beba6e:;
						++it;
						goto _iter_begin_1b0beba6e;
					}
					_iter_end_1b0beba6e:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c6ce_SptrTypeDecl>>()) {
			_case_begin_1b0bea452:;
			{
				jule::Ptr<_1b394c6ce_SptrTypeDecl> _151817_sptr = _150535_k.operator jule::Ptr<_1b394c6ce_SptrTypeDecl>();;
				return static__1a9a1b08c_exist(_150522_ident,_151817_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394d1a2_PtrTypeDecl>>()) {
			_case_begin_1b0bea4b8:;
			{
				jule::Ptr<_1b394d1a2_PtrTypeDecl> _152117_ptr = _150535_k.operator jule::Ptr<_1b394d1a2_PtrTypeDecl>();;
				return static__1a9a1b08c_exist(_150522_ident,_152117_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394caca_SlcTypeDecl>>()) {
			_case_begin_1b0bea52e:;
			{
				jule::Ptr<_1b394caca_SlcTypeDecl> _152417_slc = _150535_k.operator jule::Ptr<_1b394caca_SlcTypeDecl>();;
				return static__1a9a1b08c_exist(_150522_ident,_152417_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394d834_ArrTypeDecl>>()) {
			_case_begin_1b0bea595:;
			{
				jule::Ptr<_1b394d834_ArrTypeDecl> _152717_arr = _150535_k.operator jule::Ptr<_1b394d834_ArrTypeDecl>();;
				return static__1a9a1b08c_exist(_150522_ident,_152717_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394e082_MapTypeDecl>>()) {
			_case_begin_1b0bea60b:;
			{
				jule::Ptr<_1b394e082_MapTypeDecl> _153017_map = _150535_k.operator jule::Ptr<_1b394e082_MapTypeDecl>();;
				return (static__1a9a1b08c_exist(_150522_ident,_153017_map.get()._field_Key.get()._field_Kind) || static__1a9a1b08c_exist(_150522_ident,_153017_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b0bea672:;
			{
				jule::Ptr<_1b395d13a_FnDecl> _153417_f = _150535_k.operator jule::Ptr<_1b395d13a_FnDecl>();;
				{
					auto &expr = _153417_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1b0c01e1a:;
					if (it != expr.end()) {
						jule::Ptr<_1b395bd1a_ParamDecl> &_153520_p = *it;
						{
							if (_1b395c17d_IsSelf(_153520_p.ptr())) {
								goto _iter_next_1b0c01e1a;
							};
							if (static__1a9a1b08c_exist(_150522_ident,_153520_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1b0c01e1a:;
						++it;
						goto _iter_begin_1b0c01e1a;
					}
					_iter_end_1b0c01e1a:;
				};
				if ((_153417_f.get()._field_Result != nullptr)) {
					return static__1a9a1b08c_exist(_150522_ident,_153417_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394cdb6_TupleTypeDecl>>()) {
			_case_begin_1b0bea6e9:;
			{
				jule::Ptr<_1b394cdb6_TupleTypeDecl> _154817_tup = _150535_k.operator jule::Ptr<_1b394cdb6_TupleTypeDecl>();;
				{
					auto &expr = _154817_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1b0c0445b:;
					if (it != expr.end()) {
						jule::Ptr<_1b394b326_TypeDecl> &_154920_t = *it;
						{
							if (static__1a9a1b08c_exist(_150522_ident,_154920_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1b0c0445b:;
						++it;
						goto _iter_begin_1b0c0445b;
					}
					_iter_end_1b0c0445b:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c3e3_NamespaceTypeDecl>>()) {
			_case_begin_1b0bea771:;
			{
				jule::Ptr<_1b394c3e3_NamespaceTypeDecl> _155617_ns = _150535_k.operator jule::Ptr<_1b394c3e3_NamespaceTypeDecl>();;
				return static__1a9a1b08c_exist(_150522_ident,_155617_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1b0bea034:;
			{
				return false;
			}
		}
		_match_end_1b0be9ece:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a1a80b_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca241a2_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca6c904_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1aca6d8b1_stop(_1aca6d22e_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1aca6db25_stopped(_1aca6d22e_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1aca6dd89_finished(_1aca6d22e_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1aca6e0ed_isLastSt(_1aca6d22e_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1aca6e41c_pushErr(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1e6a5c800_Token> _19226_token, jule::Str _19241_fmt) {
	_1aca89877_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1aca6e73b_pushSuggestion(_1aca6d22e_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1aca89b96_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1aca6e9b1_insertAsNext(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1aca6c904_stmt>(_1aca6c904_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1aca6c904_stmt> _1aca6ec25_next(_1aca6d22e_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1b395b644_ScopeTree> _1aca700cc_buildScope(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _21134_tokens, jule::Ptr<_1e6a5c800_Token> _21156_end) {
	jule::Ptr<_1b395b644_ScopeTree> _21217_s = _1aca6b7d2_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1aca6d22e_scopeParser _21517_ssp = _1aca6d22e_scopeParser{._field_p=(*_self_)._field_p, };;
	_1aca78c1d_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1b395e119_VarDecl> _1aca703da_buildVarSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _22234_tokens) {
	jule::Ptr<_1b395e119_VarDecl> _22317_v = _1aca8c3b3_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1b395e4c1_RetSt> _1aca706e8_buildRetSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _22833_tokens) {
	jule::Ptr<_1b395e4c1_RetSt> _22917_st = jule::new_ptr<_1b395e4c1_RetSt>(_1b395e4c1_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1b395eb31_Iter> _1aca70a06_buildWhileNextIter(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1aca6c904_stmt>& _23942_s) {
	jule::Ptr<_1b395eb31_Iter> _24017_it = jule::new_ptr<_1b395eb31_Iter>(_1b395eb31_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1b3960406_WhileKind> _24417_kind = jule::new_ptr<_1b3960406_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1aca6e0ed_isLastSt(&(*_self_))) {
		_1aca6e41c_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1aca6ec25_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _25617_stTokens = _1aca7969c_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1aca6c904_stmt> _25821_stmt = jule::new_ptr<_1aca6c904_stmt>(_1aca6c904_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1aca788ee_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _26717_blockTokens = _1aca87105_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1aca6d8b1_stop(&(*_self_));
		_1aca6e41c_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1aca700cc_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1b3960406_WhileKind> _1aca70d14_buildWhileIterKind(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _28442_tokens) {
	return jule::new_ptr<_1b3960406_WhileKind>(_1b3960406_WhileKind{._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca71122_getRangeKindKeysTokens(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _29118_vars;;
	jule::Slice<_1e6735e35_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1aca87be9_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1b395e119_VarDecl> _1aca71430_buildRangeKindKey(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1b395e119_VarDecl> _30017_key = jule::new_ptr<_1b395e119_VarDecl>(_1b395e119_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1aca6e41c_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1aca6e41c_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca6e41c_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _1aca7173d_buildRangeKindKeys(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1b0ce5eba:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1aca71430_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1b0ce5eba:;
			++it;
			goto _iter_begin_1b0ce5eba;
		}
		_iter_end_1b0ce5eba:;
	};
	return _32217_keys;
}



inline void _1aca71a7e_setupRangeKindKeysPlain(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1b3960c97_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _33017_keyTokens = _1aca71122_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1aca6e41c_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _33717_keys = _1aca7173d_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1aca71dd1_setupRangeKindKeysExplicit(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1b3960c97_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _34617_rang = _1aca87105_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1aca71a7e_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1aca72211_setupRangeKindKeys(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1b3960c97_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1aca6e41c_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1aca71dd1_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1aca71a7e_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1b3960c97_RangeKind> _1aca72662_buildRangeIterKind(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _36614_exprTokens, jule::Ptr<_1e6a5c800_Token>& _36641_inToken) {
	jule::Ptr<_1b3960c97_RangeKind> _36717_rng = jule::new_ptr<_1b3960c97_RangeKind>(_1b3960c97_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1aca6e41c_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1aca72211_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1aca72a19_buildCommonIterKind(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _38143_tokens, jule::Ptr<_1e6a5c800_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d01b0d:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0d02aba:;
							{
								(_38217_braceN)++;
								goto _iter_next_1b0d01b0d;
							}
						}
						else {
							_case_begin_1b0d02d95:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1b0d02b86:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1b0d01b0d;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1b0d027ac:;
						{
							jule::Slice<jule::Ptr<_1e6a5c800_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1e6a5c800_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1aca72662_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1b0d0335c:;
				};
			}
			_iter_next_1b0d01b0d:;
			++it;
			_38314_i++;
			goto _iter_begin_1b0d01b0d;
		}
		_iter_end_1b0d01b0d:;
	};
	return static_cast<jule::Any>(_1aca70d14_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1b395eb31_Iter> _1aca72d27_buildCommonIter(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _40838_tokens) {
	jule::Ptr<_1b395eb31_Iter> _40917_it = jule::new_ptr<_1b395eb31_Iter>(_1b395eb31_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1aca6d8b1_stop(&(*_self_));
		_1aca6e41c_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _41917_exprTokens = _1aca7969c_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1aca72a19_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _42417_scopeTokens = _1aca87105_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1aca6d8b1_stop(&(*_self_));
		_1aca6e41c_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1aca700cc_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1b395eb31_Iter> _1aca73135_buildIterSt(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1aca6c904_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1aca70a06_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1aca72d27_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1b396114e_BreakSt> _1aca73443_buildBreakSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _44536_tokens) {
	jule::Ptr<_1b396114e_BreakSt> _44617_brk = jule::new_ptr<_1b396114e_BreakSt>(_1b396114e_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1aca6e41c_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1aca6e41c_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1b3961506_ContSt> _1aca73751_buildContSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _46335_tokens) {
	jule::Ptr<_1b3961506_ContSt> _46417_cont = jule::new_ptr<_1b3961506_ContSt>(_1b3961506_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1aca6e41c_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1aca6e41c_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1b3961979_If> _1aca73a5e_buildIf(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _48131_tokens) {
	jule::Ptr<_1b3961979_If> _48217_model = jule::new_ptr<_1b3961979_If>(_1b3961979_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _48617_exprTokens = _1aca7969c_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1aca6e41c_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _49317_scopeTokens = _1aca87105_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1aca6d8b1_stop(&(*_self_));
		_1aca6e41c_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a5c800_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1aca6e41c_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1aca700cc_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1b3961d31_Else> _1aca73d6c_buildElse(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _51433_tokens) {
	jule::Ptr<_1b3961d31_Else> _51517_els = jule::new_ptr<_1b3961d31_Else>(_1b3961d31_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _52017_scopeTokens = _1aca87105_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1aca6e41c_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1aca6d8b1_stop(&(*_self_));
			_1aca6e41c_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1aca700cc_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1b39622a4_Conditional> _1aca7417a_buildIfElseChain(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _53839_tokens) {
	jule::Ptr<_1b39622a4_Conditional> _53917_chain = jule::new_ptr<_1b39622a4_Conditional>(_1b39622a4_Conditional{._field_Head=_1aca73a5e_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1b0d2413b;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1b3961979_If> _55125_elif = _1aca73a5e_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1b0d2413b;
			};
			_53917_chain.get()._field_Default=_1aca73d6c_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1b0d2413b;
		}
	_iter_next_1b0d2413b:;
	}
	_iter_end_1b0d2413b:;;
	return _53917_chain;
}



inline jule::Ptr<_1b395243c_CoExpr> _1aca74488_buildCoCallSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _56136_tokens) {
	jule::Ptr<_1b395243c_CoExpr> _56217_c = jule::new_ptr<_1b395243c_CoExpr>(_1b395243c_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1b3959169_GotoSt> _1aca74796_buildGotoSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _57035_tokens) {
	jule::Ptr<_1b3959169_GotoSt> _57117_gt = jule::new_ptr<_1b3959169_GotoSt>(_1b3959169_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1aca6e41c_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1aca6e41c_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e6a5c800_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca6e41c_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1b3959455_FallSt> _1aca74aa4_buildFallSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _59035_tokens) {
	jule::Ptr<_1b3959455_FallSt> _59117_fll = jule::new_ptr<_1b3959455_FallSt>(_1b3959455_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1aca6e41c_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca74db2_buildTypeAliasSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _60040_tokens) {
	jule::Ptr<_1b396297a_TypeAliasDecl> _60117_tad = _1aca8b59e_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1aca75324_pushCaseExpr(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _60635_tokens, jule::Ptr<_1e6a5c800_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1b3950847_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1b394b326_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1aca8b291_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1b3950847_Expr>(_1b3950847_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1aca6e41c_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1aca89ea4_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca756cb_buildCaseExprs(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _63038_tokens, jule::Bool _63056_type_match) {
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1b3950847_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d34767:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1b0d357bd:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1b0d35a98:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1b0d35889:;
					};
					goto _iter_next_1b0d34767;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1b0d34767;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1b0d3678b:;
						{
							jule::Slice<jule::Ptr<_1e6a5c800_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1aca6e41c_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1aca75324_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1b0d36802:;
						{
							_1aca75324_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1b0d36329:;
				};
			}
			_iter_next_1b0d34767:;
			++it;
			_63514_i++;
			goto _iter_begin_1b0d34767;
		}
		_iter_end_1b0d34767:;
	};
	_1aca6e41c_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1b395b644_ScopeTree> _1aca759d9_buildCaseScope(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _66938_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1aca6c607_skipSt(_67221_i,_66938_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1b0d3a33e;
			};
			jule::Ptr<_1e6a5c800_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1b0d3a33e;
			};
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _68221_scopeTokens = _66938_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1b395b644_ScopeTree> _68321_scope = _1aca700cc_buildScope(&(*_self_), _68221_scopeTokens,_66938_tokens[_67017_n]);;
			_66938_tokens=_66938_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1b0d3a33e:;
	}
	_iter_end_1b0d3a33e:;;
	jule::Ptr<_1e6a5c800_Token> _68717_end = jule::Ptr<_1e6a5c800_Token>();;
	if ((_66938_tokens.len() > 0LL)) {
		_68717_end=_66938_tokens[(_66938_tokens.len() - 1LL)];
	};
	jule::Ptr<_1b395b644_ScopeTree> _69117_scope = _1aca700cc_buildScope(&(*_self_), _66938_tokens,_68717_end);;
	_66938_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1b3962ded_Case>,jule::Bool> _1aca75d91_buildCase(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _69633_tokens, jule::Bool _69651_typeMatch) {
	jule::Ptr<_1b3962ded_Case> _69717_c = jule::new_ptr<_1b3962ded_Case>(_1b3962ded_Case{._field_Token=_69633_tokens[0LL], });;
	_69633_tokens=_69633_tokens.slice(1LL);
	_69717_c.get()._field_Exprs=_1aca756cb_buildCaseExprs(&(*_self_), _69633_tokens,_69651_typeMatch);
	_69717_c.get()._field_Scope=_1aca759d9_buildCaseScope(&(*_self_), _69633_tokens);
	jule::Bool _70313_isDefault = (_69717_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1b3962ded_Case>>,jule::Ptr<_1b3961d31_Else>> _1aca76248_buildCases(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _70733_tokens, jule::Bool _70751_type_match) {
	jule::Slice<jule::Ptr<_1b3962ded_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1b3961d31_Else> _70917_def = nullptr;;
	jule::Bool _71017_defNotLast = false;;
	while ((_70733_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1e6a5c800_Token> _71221_tok = _70733_tokens[0LL];;
			if (((_71221_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1aca6e41c_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1b0d43105;
			};
			jule::Ptr<_1b3962ded_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1aca75d91_buildCase(&(*_self_), _70733_tokens,_70751_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_Token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1b3961d31_Else>(_1b3961d31_Else{._field_Token=_71722_c.get()._field_Token, ._field_Scope=_71722_c.get()._field_Scope});
				} else {
					_1aca6e41c_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_defNotLast=(_71017_defNotLast || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1b0d43105:;
	}
	_iter_end_1b0d43105:;;
	if (_71017_defNotLast) {
		_1aca6e41c_pushErr(&(*_self_), _70917_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1b39635c4_MatchCase> _1aca76556_buildMatchCase(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _74137_tokens) {
	jule::Ptr<_1b39635c4_MatchCase> _74217_m = jule::new_ptr<_1b39635c4_MatchCase>(_1b39635c4_MatchCase{._field_Token=_74137_tokens[0LL], });;
	_74137_tokens=_74137_tokens.slice(1LL);
	if (((_74137_tokens.len() > 0LL) && (_74137_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_TypeMatch=true;
		_74137_tokens=_74137_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _75217_exprTokens = _1aca7969c_getBlockExpr(_74137_tokens);;
	if ((_75217_exprTokens.len() > 0LL)) {
		_74217_m.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _75217_exprTokens);
	} else if (_74217_m.get()._field_TypeMatch) {
		_1aca6e41c_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _76017_blockToks = _1aca87105_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74137_tokens);;
	if ((_76017_blockToks == nullptr)) {
		_1aca6d8b1_stop(&(*_self_));
		_1aca6e41c_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1aca6e73b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74137_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _74137_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_End=_74137_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_Cases,_74217_m.get()._field_Default) = _1aca76248_buildCases(&(*_self_), _76017_blockToks,_74217_m.get()._field_TypeMatch);
	return _74217_m;
}



inline jule::Ptr<_1b395b644_ScopeTree> _1aca76864_buildScopeSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _77435_tokens) {
	jule::Bool _77517_isUnsafe = false;;
	jule::Bool _77617_isDeferred = false;;
	jule::Ptr<_1e6a5c800_Token> _77717_token = _77435_tokens[0LL];;
	if ((_77717_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_77517_isUnsafe=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1aca6e41c_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77435_tokens[0LL];
		if ((_77717_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
			_77617_isDeferred=true;
			_77435_tokens=_77435_tokens.slice(1LL);
			if ((_77435_tokens.len() == 0LL)) {
				_1aca6e41c_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_77617_isDeferred=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1aca6e41c_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _80417_scopeTokens = _1aca87105_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77435_tokens);;
	if ((_80417_scopeTokens == nullptr)) {
		_1aca6e41c_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77435_tokens.len())) {
		_1aca6e41c_pushErr(&(*_self_), _77435_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1b395b644_ScopeTree> _81117_scope = _1aca700cc_buildScope(&(*_self_), _80417_scopeTokens,_77435_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_Unsafety=_77517_isUnsafe;
	_81117_scope.get()._field_Deferred=_77617_isDeferred;
	return _81117_scope;
}



inline jule::Ptr<_1b3958cb2_LabelSt> _1aca76b72_buildLabelSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _81736_tokens) {
	jule::Ptr<_1b3958cb2_LabelSt> _81817_lbl = jule::new_ptr<_1b3958cb2_LabelSt>(_1b3958cb2_LabelSt{._field_Token=_81736_tokens[0LL], ._field_Ident=_81736_tokens[0LL].get()._field_Kind});;
	if ((_81736_tokens.len() > 2LL)) {
		_81736_tokens=_81736_tokens.slice(2LL);
		_1aca6e9b1_insertAsNext(&(*_self_), _81736_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1aca76e80_buildIdSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _83233_tokens) {
	jule::Bool _83263_ok = jule::Bool();
	if ((_83233_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83263_ok);
	};
	jule::Ptr<_1e6a5c800_Token> _83717_token = _83233_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b0d58cec:;
			{
				_83263_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1aca76b72_buildLabelSt(&(*_self_), _83233_tokens)),_83263_ok);
			}
		}
		_match_end_1b0d599ac:;
	};
	return std::make_tuple(jule::Any(),_83263_ok);
}



inline jule::Ptr<_1aca858c8_assignInfo> _1aca7728d_buildAssignInfo(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _84639_tokens) {
	jule::Ptr<_1aca858c8_assignInfo> _84717_info = jule::new_ptr<_1aca858c8_assignInfo>(_1aca858c8_assignInfo{._field_ok=true});;
	jule::I64 _85017_braceN = 0LL;;
	{
		auto &expr = _84639_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d5b827:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0d5c828:;
							{
								(_85017_braceN)++;
							}
						}
						else {
							_case_begin_1b0d5cb03:;
							{
								(_85017_braceN)--;
							}
						}
						_match_end_1b0d5c8e4:;
					};
				};
				{
					
					if ((_85017_braceN > 0LL)) {
						_case_begin_1b0d5d2da:;
						{
							goto _iter_next_1b0d5b827;
						}
					}
					else if ((_85121_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1b0d5d351:;
						{
							goto _iter_next_1b0d5b827;
						}
					}
					else if ((!(_1e6a623d7_IsAssignOp(_85121_token.get()._field_Kind)))) {
						_case_begin_1b0d5d3c8:;
						{
							goto _iter_next_1b0d5b827;
						}
					}
					_match_end_1b0d5d0ba:;
				};
				_84717_info.get()._field_l=_84639_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84639_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1e6a62140_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1b0d5b827;
				};
				_84717_info.get()._field_r=_84639_tokens.slice((_85114_i + 1LL));
				if (_1e6a62140_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1aca6e41c_pushErr(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b0d5b827;
			}
			_iter_next_1b0d5b827:;
			++it;
			_85114_i++;
			goto _iter_begin_1b0d5b827;
		}
		_iter_end_1b0d5b827:;
	};
	return _84717_info;
}



inline jule::Ptr<_1b3959a60_AssignLeft> _1aca7759b_buildAssignL(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _89436_tokens) {
	jule::Ptr<_1b3959a60_AssignLeft> _89517_l = jule::new_ptr<_1b3959a60_AssignLeft>(_1b3959a60_AssignLeft{._field_Token=_89436_tokens[0LL], });;
	if ((_89436_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_Ident=_89517_l.get()._field_Token.get()._field_Kind;
	};
	_89517_l.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _89436_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1b3959a60_AssignLeft>> _1aca778a9_buildAssignLs(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>& _90537_parts) {
	jule::Slice<jule::Ptr<_1b3959a60_AssignLeft>> _90617_lefts = nullptr;;
	{
		auto &expr = _90537_parts;
		auto it = expr.begin();
		_iter_begin_1b0d65039:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _90721_part = *it;
			{
				jule::Ptr<_1b3959a60_AssignLeft> _90821_l = _1aca7759b_buildAssignL(&(*_self_), _90721_part);;
				_90617_lefts = jule::alloc_for_append(_90617_lefts,1);_90617_lefts.__push(_90821_l);;
			}
			_iter_next_1b0d65039:;
			++it;
			goto _iter_begin_1b0d65039;
		}
		_iter_end_1b0d65039:;
	};
	return _90617_lefts;
}



inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca77bb7_buildPlainAssign(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _91540_tokens) {
	jule::Ptr<_1aca858c8_assignInfo> _91617_info = _1aca7728d_buildAssignInfo(&(*_self_), _91540_tokens);;
	if ((!(_91617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1b395a09e_AssignSt> _92117_assign = jule::new_ptr<_1b395a09e_AssignSt>(_1b395a09e_AssignSt{._field_Setter=_91617_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _92518_parts;;
	jule::Slice<_1e6735e35_Log> _92525_errs;;
	std::tie(_92518_parts,_92525_errs) = _1aca87be9_parts(_91617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92525_errs);
		return std::make_tuple(nullptr,false);
	};
	_92117_assign.get()._field_Left=_1aca778a9_buildAssignLs(&(*_self_), _92518_parts);
	if ((_91617_info.get()._field_r != nullptr)) {
		_92117_assign.get()._field_Right=_1aca89ea4_buildExpr((*_self_)._field_p, _91617_info.get()._field_r);
	};
	return std::make_tuple(_92117_assign,true);
}



inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca77ec5_buildDeclAssign(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _93938_tokens) {
	if ((_93938_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93938_tokens=_93938_tokens.slice(1LL);
	jule::Ptr<_1e6a5c800_Token> _94517_token = _93938_tokens[0LL];;
	if (((_94517_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94517_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1b395a09e_AssignSt> _95017_assign = jule::new_ptr<_1b395a09e_AssignSt>(_1b395a09e_AssignSt{._field_Declarative=true, });;
	jule::I64 _95417_i = 0LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _95517_rang = _1aca87105_range(_95417_i,jule::Str("(", 1),jule::Str(")", 1),_93938_tokens);;
	if ((_95517_rang == nullptr)) {
		_1aca6e41c_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95417_i + 1LL) < _93938_tokens.len())) {
		_95017_assign.get()._field_Setter=_93938_tokens[_95417_i];
		(_95417_i)++;
		jule::Slice<jule::Ptr<_1e6a5c800_Token>> _96221_exprTokens = _93938_tokens.slice(_95417_i);;
		_95017_assign.get()._field_Right=_1aca89ea4_buildExpr((*_self_)._field_p, _96221_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _96718_parts;;
	jule::Slice<_1e6735e35_Log> _96725_errs;;
	std::tie(_96718_parts,_96725_errs) = _1aca87be9_parts(_95517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96725_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96718_parts;
		auto it = expr.begin();
		_iter_begin_1b0d70e24:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _97321_part = *it;
			{
				jule::Bool _97421_isMut = false;;
				jule::Bool _97521_isRef = false;;
				_94517_token=_97321_part[0LL];
				if ((_94517_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
					_97421_isMut=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1aca6e41c_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1b0d70e24;
					};
				};
				if (((_97321_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97321_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_97521_isRef=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1aca6e41c_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1b0d70e24;
					};
				};
				if ((((_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97321_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1aca6e41c_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1b0d70e24;
				};
				jule::Ptr<_1b3959a60_AssignLeft> _100321_l = _1aca7759b_buildAssignL(&(*_self_), _97321_part);;
				_100321_l.get()._field_Mutable=_97421_isMut;
				_100321_l.get()._field_Reference=_97521_isRef;
				_95017_assign.get()._field_Left = jule::alloc_for_append(_95017_assign.get()._field_Left,1);_95017_assign.get()._field_Left.__push(_100321_l);;
			}
			_iter_next_1b0d70e24:;
			++it;
			goto _iter_begin_1b0d70e24;
		}
		_iter_end_1b0d70e24:;
	};
	return std::make_tuple(_95017_assign,true);
}



inline std::tuple<jule::Ptr<_1b395a09e_AssignSt>,jule::Bool> _1aca782d3_buildAssignSt(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _101237_tokens) {
	jule::Ptr<_1b395a09e_AssignSt> _101257_st = jule::Ptr<_1b395a09e_AssignSt>();
	jule::Bool _101272_ok = jule::Bool();
	if ((!(_1aca85c6e_checkAssignTokens(_101237_tokens)))) {
		_101257_st = nullptr;
		_101272_ok = false;
		return std::make_tuple(_101257_st,_101272_ok);
	};
	{
		auto &_match_expr{ _101237_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b0d79c0d:;
			{
				std::tie(_101257_st,_101272_ok) = _1aca77ec5_buildDeclAssign(&(*_self_), _101237_tokens);
			}
		}
		else {
			_case_begin_1b0d79801:;
			{
				std::tie(_101257_st,_101272_ok) = _1aca77bb7_buildPlainAssign(&(*_self_), _101237_tokens);
			}
		}
		_match_end_1b0d7979b:;
	};
	return std::make_tuple(_101257_st,_101272_ok);
}



inline jule::Ptr<_1b39511d8_UseExpr> _1aca785e1_buildUseExpr(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _102736_tokens) {
	if ((_102736_tokens.len() == 1LL)) {
		_1aca6e41c_pushErr(&(*_self_), _102736_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1b39511d8_UseExpr> _103217_ue = jule::new_ptr<_1b39511d8_UseExpr>(_1b39511d8_UseExpr{._field_Token=_102736_tokens[0LL], });;
	_102736_tokens=_102736_tokens.slice(1LL);
	_103217_ue.get()._field_Expr=_1aca89ea4_buildExpr((*_self_)._field_p, _102736_tokens);
	return _103217_ue;
}



inline jule::Any _1aca788ee_buildSt(_1aca6d22e_scopeParser* _self_, jule::Ptr<_1aca6c904_stmt>& _104031_st) {
	jule::Ptr<_1e6a5c800_Token> _104117_token = _104031_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1aca76e80_buildIdSt(&(*_self_), _104031_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		};
	};
	jule::Ptr<_1b395a09e_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1aca782d3_buildAssignSt(&(*_self_), _104031_st.get()._field_tokens);
	if (_104921_ok) {
		return static_cast<jule::Any>(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b0d7ed67:;
			{
				return static_cast<jule::Any>(_1aca785e1_buildUseExpr(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b0d7eb36:;
			{
				return static_cast<jule::Any>(_1aca703da_buildVarSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b0d80230:;
			{
				return static_cast<jule::Any>(_1aca706e8_buildRetSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1b0d80296:;
			{
				return static_cast<jule::Any>(_1aca73135_buildIterSt(&(*_self_), _104031_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b0d8030c:;
			{
				return static_cast<jule::Any>(_1aca73443_buildBreakSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1b0d80373:;
			{
				return static_cast<jule::Any>(_1aca73751_buildContSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b0d803d9:;
			{
				return static_cast<jule::Any>(_1aca7417a_buildIfElseChain(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1b0d80450:;
			{
				return static_cast<jule::Any>(_1aca74488_buildCoCallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b0d804b6:;
			{
				return static_cast<jule::Any>(_1aca74796_buildGotoSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b0d8052c:;
			{
				return static_cast<jule::Any>(_1aca74aa4_buildFallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b0d80593:;
			{
				return static_cast<jule::Any>(_1aca74db2_buildTypeAliasSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b0d80609:;
			{
				return static_cast<jule::Any>(_1aca76556_buildMatchCase(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b0d80670:;
			{
				return static_cast<jule::Any>(_1aca76864_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0d806d6:;
			{
				if ((_104117_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1aca76864_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
				};
			}
		}
		_match_end_1b0d80054:;
	};
	jule::Ptr<_1b3950847_Expr> _109017_expr = _1aca89ea4_buildExpr((*_self_)._field_p, _104031_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return static_cast<jule::Any>(_109017_expr);
	};
	_1aca6e41c_pushErr(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1aca78c1d_build(_1aca6d22e_scopeParser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _109829_tokens, jule::Ptr<_1b395b644_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1aca6cc9a_splitStmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1aca6e0ed_isLastSt(&(*_self_)))) && (!(_1aca6dd89_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1aca6c904_stmt> _110621_st = _1aca6ec25_next(&(*_self_));;
			jule::Any _110721_data = _1aca788ee_buildSt(&(*_self_), _110621_st);;
			if ((_110721_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1b395b039_Stmt{._field_Token=_110621_st.get()._field_tokens[0LL], ._field_Data=_110721_data});;
			};
			if (_1aca6db25_stopped(&(*_self_))) {
				goto _iter_end_1b0d88898;
			};
		}
	_iter_next_1b0d88898:;
	}
	_iter_end_1b0d88898:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca6d22e_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1aca7ad96_pushErr(_1aca7a58d_exprBuilder* _self_, jule::Ptr<_1e6a5c800_Token> _19726_token, jule::Str _19741_fmt, jule::Slice<jule::Any> _19754_args) {
	_1aca89877_pushErr((*_self_)._field_p.ptr(), _19726_token,_19741_fmt,jule::Any(_19754_args));
}



inline void _1aca7b1b5_pushSuggestion(_1aca7a58d_exprBuilder* _self_, jule::Str _20233_fmt, jule::Slice<jule::Any> _20246_args) {
	_1aca89b96_pushSuggestion((*_self_)._field_p.ptr(), _20233_fmt,jule::Any(_20246_args));
}



inline jule::Ptr<_1b39514c4_TupleExpr> _1aca7b4c3_buildTuple(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>& _20634_parts) {
	jule::Ptr<_1b39514c4_TupleExpr> _20717_tuple = jule::new_ptr<_1b39514c4_TupleExpr>(_1b39514c4_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1b3950847_Expr>>::alloc(0LL,_20634_parts.len())});;
	{
		auto &expr = _20634_parts;
		auto it = expr.begin();
		_iter_begin_1b0da4463:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _21021_part = *it;
			{
				_20717_tuple.get()._field_Expr = jule::alloc_for_append(_20717_tuple.get()._field_Expr,1);_20717_tuple.get()._field_Expr.__push(_1aca84ee3_buildFromTokens(&(*_self_), _21021_part));;
			}
			_iter_next_1b0da4463:;
			++it;
			goto _iter_begin_1b0da4463;
		}
		_iter_end_1b0da4463:;
	};
	return _20717_tuple;
}



inline jule::Ptr<_1b395187b_LitExpr> _1aca7b7d1_buildLit(_1aca7a58d_exprBuilder* _self_, jule::Ptr<_1e6a5c800_Token> _21627_token) {
	return jule::new_ptr<_1b395187b_LitExpr>(_1b395187b_LitExpr{._field_Token=_21627_token, ._field_Value=_21627_token.get()._field_Kind});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca7bade_buildPrimitiveType(_1aca7a58d_exprBuilder* _self_, jule::Ptr<_1e6a5c800_Token>& _22338_token) {
	return _1aca99887_buildPrimType(_22338_token);
}



inline jule::Any _1aca7bdec_buildSingle(_1aca7a58d_exprBuilder* _self_, jule::Ptr<_1e6a5c800_Token> _22734_token) {
	{
		auto &_match_expr{ _22734_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b0da619b:;
			{
				return static_cast<jule::Any>(_1aca7b7d1_buildLit(&(*_self_), _22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0da6212:;
			{
				if ((_22734_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1b3953471_VariadicExpr>(_1b3953471_VariadicExpr{._field_Token=_22734_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b0da6278:;
			{
				return static_cast<jule::Any>(_1aca7a0b5_buildIdentExpr(_22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b0da62de:;
			{
				return static_cast<jule::Any>(_1aca7bade_buildPrimitiveType(&(*_self_), _22734_token));
			}
		}
		_match_end_1b0da51bc:;
	};
	_1aca7ad96_pushErr(&(*_self_), _22734_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1b39528b0_IdentExpr> _1aca7c20a_buildCppLinkedIdent(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _24843_tokens) {
	if ((_24843_tokens[0LL].get()._field_Id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_24843_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1aca7ad96_pushErr(&(*_self_), _24843_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a5c800_Token> _25617_token = _24843_tokens[2LL];;
	if ((_25617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca7ad96_pushErr(&(*_self_), _24843_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b39528b0_IdentExpr> _26217_expr = _1aca7a0b5_buildIdentExpr(_25617_token);;
	_26217_expr.get()._field_CppLinked=true;
	return _26217_expr;
}



inline jule::Ptr<_1b39530b9_UnaryExpr> _1aca7c518_buildUnary(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _26733_tokens) {
	jule::Ptr<_1e6a5c800_Token> _26817_op = _26733_tokens[0LL];;
	if ((_26733_tokens.len() == 1LL)) {
		_1aca7ad96_pushErr(&(*_self_), _26817_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1e6a5d009_IsUnaryOp(_26817_op.get()._field_Kind)))) {
		_1aca7ad96_pushErr(&(*_self_), _26817_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_26817_op.get()._field_Kind)}));
		return nullptr;
	};
	_26733_tokens=_26733_tokens.slice(1LL);
	return jule::new_ptr<_1b39530b9_UnaryExpr>(_1b39530b9_UnaryExpr{._field_Op=_26817_op, ._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _26733_tokens)});
}



inline jule::Ptr<_1b3954153_SubIdentExpr> _1aca7c826_buildObjSubIdent(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _28839_tokens) {
	jule::I64 _28917_i = (_28839_tokens.len() - 1LL);;
	jule::Ptr<_1e6a5c800_Token> _29017_identToken = _28839_tokens[_28917_i];;
	(_28917_i)--;
	_28839_tokens=_28839_tokens.slice(0LL,_28917_i);
	if ((_28839_tokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _29017_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1b3954153_SubIdentExpr>(_1b3954153_SubIdentExpr{._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _28839_tokens), ._field_Ident=_29017_identToken});
}



inline jule::Ptr<_1b3953bd0_NsSelectionExpr> _1aca7cb34_buildNsSubIdent(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _30339_tokens) {
	jule::Ptr<_1b3953bd0_NsSelectionExpr> _30417_ns = jule::new_ptr<_1b3953bd0_NsSelectionExpr>();;
	{
		auto &expr = _30339_tokens;
		auto it = expr.begin();
		_iter_begin_1b0db29c1:;
		if (it != expr.end()) {
			jule::I64 _30514_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _30521_token = *it;
			{
				if (((_30514_i & 1LL) == 0LL)) {
					if ((_30521_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1aca7ad96_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_30417_ns.get()._field_Ns = jule::alloc_for_append(_30417_ns.get()._field_Ns,1);_30417_ns.get()._field_Ns.__push(_30521_token);;
				} else if ((_30521_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1aca7ad96_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b0db29c1:;
			++it;
			_30514_i++;
			goto _iter_begin_1b0db29c1;
		}
		_iter_end_1b0db29c1:;
	};
	_30417_ns.get()._field_Ident=_30417_ns.get()._field_Ns[(_30417_ns.get()._field_Ns.len() - 1LL)];
	_30417_ns.get()._field_Ns=_30417_ns.get()._field_Ns.slice(0LL,(_30417_ns.get()._field_Ns.len() - 1LL));
	return _30417_ns;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca7ce42_buildType(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _32233_tokens) {
	jule::I64 _32317_i = 0LL;;
	jule::Ptr<_1b394b326_TypeDecl> _32418_t;;
	jule::Bool _32421_ok;;
	std::tie(_32418_t,_32421_ok) = _1aca8b291_buildType((*_self_)._field_p, _32233_tokens,(&(_32317_i)),false);
	if ((!(_32421_ok))) {
		_1aca7ad96_pushErr(&(*_self_), _32233_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_32317_i < _32233_tokens.len())) {
		_1aca7ad96_pushErr(&(*_self_), _32233_tokens[_32317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32418_t;
}



inline jule::Any _1aca7d250_buildSubIdent(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _33637_tokens) {
	jule::I64 _33713_i = (_33637_tokens.len() - 2LL);;
	jule::Ptr<_1e6a5c800_Token> _33813_token = _33637_tokens[_33713_i];;
	{
		auto &_match_expr{ _33813_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b0db9de6:;
			{
				return static_cast<jule::Any>(_1aca7c826_buildObjSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b0dba424:;
			{
				return static_cast<jule::Any>(_1aca7cb34_buildNsSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0dba48a:;
			{
				if ((_33813_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1aca7ce42_buildType(&(*_self_), _33637_tokens));
				};
			}
		}
		_match_end_1b0dba27b:;
	};
	_1aca7ad96_pushErr(&(*_self_), _33813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1b3953471_VariadicExpr> _1aca7d55d_buildVariadic(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _35436_tokens) {
	jule::Ptr<_1e6a5c800_Token> _35517_token = _35436_tokens[(_35436_tokens.len() - 1LL)];;
	_35436_tokens=_35436_tokens.slice(0LL,(_35436_tokens.len() - 1LL));
	return jule::new_ptr<_1b3953471_VariadicExpr>(_1b3953471_VariadicExpr{._field_Token=_35517_token, ._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _35436_tokens)});
}



inline jule::Any _1aca7d86b_buildOpRight(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _36336_tokens) {
	jule::Ptr<_1e6a5c800_Token> _36417_token = _36336_tokens[(_36336_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _36417_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b0dbe615:;
			{
				_36336_tokens=_36336_tokens.slice(0LL,(_36336_tokens.len() - 1LL));
				jule::Any _36821_d = _1aca848c7_build(&(*_self_), _36336_tokens);;
				if ((_36821_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _36821_d };
					
					if (_match_expr.type_is<jule::Ptr<_1b3954b15_FnCallExpr>>()) {
						_case_begin_1b0dc0a67:;
						{
							_36821_d.operator jule::Ptr<_1b3954b15_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1b395b644_ScopeTree>(_1b395b644_ScopeTree{._field_Deferred=true, });
							return _36821_d;
						}
					}
					_match_end_1b0dc09bd:;
				};
			}
		}
		_match_end_1b0dbe56b:;
	};
	_1aca7ad96_pushErr(&(*_self_), _36417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1b3950b33_RangeExpr> _1aca7db9b_buildBetweenParentheses(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _38446_tokens) {
	if ((_38446_tokens.len() == 2LL)) {
		_1aca7ad96_pushErr(&(*_self_), _38446_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_38446_tokens=_38446_tokens.slice(1LL,(_38446_tokens.len() - 1LL));
	return jule::new_ptr<_1b3950b33_RangeExpr>(_1b3950b33_RangeExpr{._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _38446_tokens)});
}



inline jule::Ptr<_1b3953828_CastExpr> _1aca7deba_tryBuildCast(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _39636_tokens) {
	jule::I64 _39717_rangeN = 0LL;;
	{
		auto &expr = _39636_tokens;
		auto it = expr.begin();
		_iter_begin_1b0dc4241:;
		if (it != expr.end()) {
			jule::I64 _39813_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _39816_token = *it;
			{
				if ((_39816_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _39816_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0dc5154:;
							{
								(_39717_rangeN)++;
								goto _iter_next_1b0dc4241;
							}
						}
						else {
							_case_begin_1b0dc542e:;
							{
								(_39717_rangeN)--;
							}
						}
						_match_end_1b0dc5220:;
					};
				};
				if ((_39717_rangeN > 0LL)) {
					goto _iter_next_1b0dc4241;
				} else if (((_39813_i + 1LL) == _39636_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _41721_typeTokens = _39636_tokens.slice(0LL,(_39813_i + 1LL));;
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _41821_exprTokens = _39636_tokens.slice((_39813_i + 1LL));;
				if ((_41821_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1e6a5c800_Token> _42517_tok = _41821_exprTokens[0LL];;
				if (((_42517_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_42517_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1b3953828_CastExpr> _43021_cast = jule::new_ptr<_1b3953828_CastExpr>(_1b3953828_CastExpr{});;
				if ((_41821_exprTokens.len() == 2LL)) {
					_1aca7ad96_pushErr(&(*_self_), _41821_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_41721_typeTokens.len() == 2LL)) {
					_1aca7ad96_pushErr(&(*_self_), _41721_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_41721_typeTokens=_41721_typeTokens.slice(1LL,(_41721_typeTokens.len() - 1LL));
					jule::I64 _44425_typeIndex = 0LL;;
					jule::Ptr<_1b394b326_TypeDecl> _44526_t;;
					jule::Bool _44529_ok;;
					std::tie(_44526_t,_44529_ok) = _1aca8b291_buildType((*_self_)._field_p, _41721_typeTokens,(&(_44425_typeIndex)),true);
					if ((_44529_ok && (_44425_typeIndex < _41721_typeTokens.len()))) {
						_1aca7ad96_pushErr(&(*_self_), _41721_typeTokens[_44425_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_44529_ok))) {
						return _43021_cast;
					};
					_43021_cast.get()._field_Kind=_44526_t;
					if ((_41821_exprTokens.len() > 2LL)) {
						jule::I64 _45529_j = 0LL;;
						_1aca87105_range(_45529_j,jule::Str("(", 1),jule::Str(")", 1),_41821_exprTokens);
						if ((_45529_j < _41821_exprTokens.len())) {
							return nullptr;
						};
						_41821_exprTokens=_41821_exprTokens.slice(0LL,_45529_j);
						_43021_cast.get()._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _41821_exprTokens);
					};
				};
				return _43021_cast;
			}
			_iter_next_1b0dc4241:;
			++it;
			_39813_i++;
			goto _iter_begin_1b0dc4241;
		}
		_iter_end_1b0dc4241:;
	};
	return nullptr;
}



inline void _1aca7e383_pushArg(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b3950847_Expr>>& _47031_args, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _47050_tokens, jule::Ptr<_1e6a5c800_Token> _47068_err_token) {
	if ((_47050_tokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _47068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_47031_args = jule::alloc_for_append(_47031_args,1);_47031_args.__push(_1aca84ee3_buildFromTokens(&(*_self_), _47050_tokens));;
}



inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca7e691_buildArgs(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _47932_tokens) {
	if ((_47932_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _48517_args = nullptr;;
	jule::I64 _48617_last = 0LL;;
	jule::I64 _48717_rangeN = 0LL;;
	_47932_tokens=_47932_tokens.slice(1LL,(_47932_tokens.len() - 1LL));
	{
		auto &expr = _47932_tokens;
		auto it = expr.begin();
		_iter_begin_1b0dd37c2:;
		if (it != expr.end()) {
			jule::I64 _48913_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _48916_token = *it;
			{
				if ((_48916_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _48916_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0dd45b4:;
							{
								(_48717_rangeN)++;
							}
						}
						else {
							_case_begin_1b0dd488e:;
							{
								(_48717_rangeN)--;
							}
						}
						_match_end_1b0dd4680:;
					};
				};
				if (((_48717_rangeN > 0LL) || (_48916_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b0dd37c2;
				};
				_1aca7e383_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last,_48913_i),_48916_token);
				_48617_last=static_cast<jule::I64>((_48913_i + 1LL));
			}
			_iter_next_1b0dd37c2:;
			++it;
			_48913_i++;
			goto _iter_begin_1b0dd37c2;
		}
		_iter_end_1b0dd37c2:;
	};
	if ((_48617_last < _47932_tokens.len())) {
		if ((_48617_last == 0LL)) {
			if ((_47932_tokens.len() > 0LL)) {
				_1aca7e383_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[_48617_last]);
			};
		} else {
			_1aca7e383_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[(_48617_last - 1LL)]);
		};
	};
	return _48517_args;
}



inline jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _1aca7e99e_buildCallGenerics(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _52140_tokens) {
	if ((_52140_tokens.len() == 0LL)) {
		return nullptr;
	};
	_52140_tokens=_52140_tokens.slice(1LL,(_52140_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _52718_parts;;
	jule::Slice<_1e6735e35_Log> _52725_errs;;
	std::tie(_52718_parts,_52725_errs) = _1aca87be9_parts(_52140_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _52817_generics = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>::alloc(0LL,_52718_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_52725_errs);
	{
		auto &expr = _52718_parts;
		auto it = expr.begin();
		_iter_begin_1b0dd9c29:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _53021_part = *it;
			{
				if ((_53021_part.len() == 0LL)) {
					goto _iter_next_1b0dd9c29;
				};
				jule::I64 _53421_j = 0LL;;
				jule::Ptr<_1b394b326_TypeDecl> _53522_generic;;
				std::tie(_53522_generic,std::ignore) = _1aca8b291_buildType((*_self_)._field_p, _53021_part,(&(_53421_j)),true);
				if ((_53421_j < _53021_part.len())) {
					_1aca7ad96_pushErr(&(*_self_), _53021_part[_53421_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_52817_generics = jule::alloc_for_append(_52817_generics,1);_52817_generics.__push(_53522_generic);;
			}
			_iter_next_1b0dd9c29:;
			++it;
			goto _iter_begin_1b0dd9c29;
		}
		_iter_end_1b0dd9c29:;
	};
	return _52817_generics;
}



inline jule::Ptr<_1b3954b15_FnCallExpr> _1aca7ee00_buildFnCall(_1aca7a58d_exprBuilder* _self_, jule::Ptr<_1e6a5c800_Token>& _54535_token, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _54555_expr, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _54576_args) {
	return jule::new_ptr<_1b3954b15_FnCallExpr>(_1b3954b15_FnCallExpr{._field_Token=_54535_token, ._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _54555_expr), ._field_Args=_1aca7e691_buildArgs(&(*_self_), _54576_args), });
}



inline jule::Any _1aca8020d_buildParenthesesRange(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _55345_tokens) {
	jule::Ptr<_1e6a5c800_Token> _55417_token = _55345_tokens[0LL];;
	{
		auto &_match_expr{ _55417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0dde0e6:;
			{
				{
					auto &_match_expr{ _55417_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b0dde888:;
						{
							jule::Ptr<_1b3953828_CastExpr> _55925_expr = _1aca7deba_tryBuildCast(&(*_self_), _55345_tokens);;
							if ((_55925_expr != nullptr)) {
								return static_cast<jule::Any>(_55925_expr);
							};
						}
					}
					_match_end_1b0dde6bd:;
				};
			}
		}
		_match_end_1b0dde04c:;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _56518_exprTokens;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _56534_args_tokens;;
	std::tie(_56518_exprTokens,_56534_args_tokens) = _1aca8739c_rangeLast(_55345_tokens);
	if ((_56518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1aca7db9b_buildBetweenParentheses(&(*_self_), _56534_args_tokens));
	};
	return static_cast<jule::Any>(_1aca7ee00_buildFnCall(&(*_self_), _55417_token,_56518_exprTokens,_56534_args_tokens));
}



inline jule::Ptr<_1b3952085_UnsafeExpr> _1aca8051b_buildUnsafeExpr(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _57438_tokens) {
	jule::Ptr<_1e6a5c800_Token> _57517_token = _57438_tokens[0LL];;
	_57438_tokens=_57438_tokens.slice(1LL);
	jule::I64 _57717_i = 0LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _57817_rangeTokens = _1aca87105_range(_57717_i,jule::Str("{", 1),jule::Str("}", 1),_57438_tokens);;
	if ((_57817_rangeTokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _57438_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1b3952085_UnsafeExpr>(_1b3952085_UnsafeExpr{._field_Token=_57517_token, ._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _57817_rangeTokens)});
}



inline jule::Ptr<_1b395d13a_FnDecl> _1aca80829_buildAnonFn(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _58935_tokens) {
	jule::Ptr<_1b395d13a_FnDecl> _59017_f = _1aca903d8_buildFn((*_self_)._field_p, _58935_tokens,false,false);;
	if ((!(_1b395d48c_IsAnon(_59017_f.ptr())))) {
		_1aca7ad96_pushErr(&(*_self_), _59017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _59017_f;
}



inline jule::Any _1aca80b37_buildUnsafe(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _59835_tokens) {
	{
		auto &_match_expr{ _59835_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b0de5d78:;
			{
				return static_cast<jule::Any>(_1aca80829_buildAnonFn(&(*_self_), _59835_tokens));
			}
		}
		else {
			_case_begin_1b0de6373:;
			{
				return static_cast<jule::Any>(_1aca8051b_buildUnsafeExpr(&(*_self_), _59835_tokens));
			}
		}
		_match_end_1b0de62b8:;
	};
}



inline void _1aca81000_pushRangeLitPart(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _60839_part, jule::Ptr<_1e6a5c800_Token> _6099_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>& _60934_parts) {
	if ((_60839_part.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _6099_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_60934_parts = jule::alloc_for_append(_60934_parts,1);_60934_parts.__push(_60839_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca81330_getBraceRangeLitExprParts(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _61948_tokens) {
	if ((_61948_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _62517_parts = nullptr;;
	jule::I64 _62717_last = 0LL;;
	jule::I64 _62817_rangeN = 0LL;;
	_61948_tokens=_61948_tokens.slice(1LL,(_61948_tokens.len() - 1LL));
	{
		auto &expr = _61948_tokens;
		auto it = expr.begin();
		_iter_begin_1b0dea9e8:;
		if (it != expr.end()) {
			jule::I64 _63013_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _63016_token = *it;
			{
				if ((_63016_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63016_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0deb7da:;
							{
								(_62817_rangeN)++;
							}
						}
						else {
							_case_begin_1b0debab5:;
							{
								(_62817_rangeN)--;
							}
						}
						_match_end_1b0deb8a6:;
					};
				};
				if (((_62817_rangeN > 0LL) || (_63016_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b0dea9e8;
				};
				_1aca81000_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last,_63013_i),_63016_token,_62517_parts);
				_62717_last=static_cast<jule::I64>((_63013_i + 1LL));
			}
			_iter_next_1b0dea9e8:;
			++it;
			_63013_i++;
			goto _iter_begin_1b0dea9e8;
		}
		_iter_end_1b0dea9e8:;
	};
	if ((_62717_last < _61948_tokens.len())) {
		if ((_62717_last == 0LL)) {
			if ((_61948_tokens.len() > 0LL)) {
				_1aca81000_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[_62717_last],_62517_parts);
			};
		} else {
			_1aca81000_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[(_62717_last - 1LL)],_62517_parts);
		};
	};
	return _62517_parts;
}



inline jule::Ptr<_1b3955594_FieldExprPair> _1aca8164e_buildFieldExprPair(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _66141_tokens) {
	if (((_66141_tokens.len() - 2LL) == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _66141_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b3955594_FieldExprPair> _66617_pair = jule::new_ptr<_1b3955594_FieldExprPair>(_1b3955594_FieldExprPair{._field_Field=_66141_tokens[0LL], });;
	_66141_tokens=_66141_tokens.slice(2LL);
	_66617_pair.get()._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _66141_tokens);
	return _66617_pair;
}



inline jule::Ptr<_1b3950847_Expr> _1aca8195c_buildStructLitExpr(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _67442_tokens) {
	jule::Ptr<_1e6a5c800_Token> _67517_token = _67442_tokens[0LL];;
	if (((_67517_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_67442_tokens.len() > 1LL))) {
		_67517_token=_67442_tokens[1LL];
		if ((_67517_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1b3950847_Expr>(_1b3950847_Expr{._field_Token=_67517_token, ._field_End=_67442_tokens[(_67442_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1aca8164e_buildFieldExprPair(&(*_self_), _67442_tokens))});
		};
	};
	return _1aca84ee3_buildFromTokens(&(*_self_), _67442_tokens);
}



inline jule::Slice<jule::Ptr<_1b3950847_Expr>> _1aca81c6a_buildStructLitExprs(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _68943_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _69017_parts = _1aca81330_getBraceRangeLitExprParts(&(*_self_), _68943_tokens);;
	if ((_69017_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1b3950847_Expr>> _69517_pairs = jule::Slice<jule::Ptr<_1b3950847_Expr>>::alloc(0LL,_69017_parts.len());;
	{
		auto &expr = _69017_parts;
		auto it = expr.begin();
		_iter_begin_1b0e0632d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _69621_part = *it;
			{
				_69517_pairs = jule::alloc_for_append(_69517_pairs,1);_69517_pairs.__push(_1aca8195c_buildStructLitExpr(&(*_self_), _69621_part));;
			}
			_iter_next_1b0e0632d:;
			++it;
			goto _iter_begin_1b0e0632d;
		}
		_iter_end_1b0e0632d:;
	};
	return _69517_pairs;
}



inline jule::Ptr<_1b3955ce2_StructLit> _1aca8209a_buildTypedStructLiteral(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _70246_tokens) {
	jule::I64 _70317_i = 0LL;;
	jule::Ptr<_1b394b326_TypeDecl> _70418_t;;
	jule::Bool _70421_ok;;
	std::tie(_70418_t,_70421_ok) = _1aca8b291_buildType((*_self_)._field_p, _70246_tokens,(&(_70317_i)),true);
	if ((!(_70421_ok))) {
		return nullptr;
	} else if ((_70317_i >= _70246_tokens.len())) {
		_1aca7ad96_pushErr(&(*_self_), _70246_tokens[_70317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70246_tokens=_70246_tokens.slice(_70317_i);
	jule::Ptr<_1e6a5c800_Token> _71313_token = _70246_tokens[0LL];;
	if (((_71313_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_71313_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1aca7ad96_pushErr(&(*_self_), _71313_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1b3955ce2_StructLit>(_1b3955ce2_StructLit{._field_End=_70246_tokens[(_70246_tokens.len() - 1LL)], ._field_Kind=_70418_t, ._field_Exprs=_1aca81c6a_buildStructLitExprs(&(*_self_), _70246_tokens)});
}



inline jule::Ptr<_1b3950847_Expr> _1aca823b9_buildBraceLitPart(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _72641_tokens) {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _72718_l;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _72725_r;;
	std::tie(_72718_l,_72725_r) = _1aca799ee_splitDelim(_72641_tokens,static_cast<jule::U64>(11LLU));
	if ((_72718_l != nullptr)) {
		return jule::new_ptr<_1b3950847_Expr>(_1b3950847_Expr{._field_Token=_72641_tokens[0LL], ._field_End=_72641_tokens[(_72641_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b3956c7c_KeyValPair>(_1b3956c7c_KeyValPair{._field_Key=_1aca84ee3_buildFromTokens(&(*_self_), _72718_l), ._field_Val=_1aca84ee3_buildFromTokens(&(*_self_), _72725_r), ._field_Colon=_72641_tokens[_72718_l.len()]}))});
	};
	return _1aca84ee3_buildFromTokens(&(*_self_), _72641_tokens);
}



inline jule::Ptr<_1b3956265_BraceLit> _1aca826c7_buildBraceLit(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _74337_tokens) {
	jule::Ptr<_1b3956265_BraceLit> _74417_lit = jule::new_ptr<_1b3956265_BraceLit>(_1b3956265_BraceLit{._field_Token=_74337_tokens[0LL], ._field_End=_74337_tokens[(_74337_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _74917_parts = _1aca81330_getBraceRangeLitExprParts(&(*_self_), _74337_tokens);;
	if ((_74917_parts == nullptr)) {
		return _74417_lit;
	};
	_74417_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1b3950847_Expr>>::alloc(0LL,_74917_parts.len());
	{
		auto &expr = _74917_parts;
		auto it = expr.begin();
		_iter_begin_1b0e10425:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _75521_part = *it;
			{
				_74417_lit.get()._field_Exprs = jule::alloc_for_append(_74417_lit.get()._field_Exprs,1);_74417_lit.get()._field_Exprs.__push(_1aca823b9_buildBraceLitPart(&(*_self_), _75521_part));;
			}
			_iter_next_1b0e10425:;
			++it;
			goto _iter_begin_1b0e10425;
		}
		_iter_end_1b0e10425:;
	};
	return _74417_lit;
}



inline jule::Any _1aca829d5_buildBraceRange(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _76239_tokens) {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _76318_exprTokens;;
	jule::I64 _76330_rangeN;;
	std::tie(_76318_exprTokens,_76330_rangeN) = _1aca7a35c_getRangeExprTokens(_76239_tokens);
	{
		
		if ((_76318_exprTokens.len() == 0LL)) {
			_case_begin_1b0e11bc9:;
			{
				return static_cast<jule::Any>(_1aca826c7_buildBraceLit(&(*_self_), _76239_tokens));
			}
		}
		else if ((_76330_rangeN > 0LL)) {
			_case_begin_1b0e11c51:;
			{
				_1aca7ad96_pushErr(&(*_self_), _76239_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0e11b41:;
	};
	jule::Ptr<_1e6a5c800_Token> _77413_elseToken = _76318_exprTokens[(_76318_exprTokens.len() - 1LL)];;
	if ((_76318_exprTokens[(_76318_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_76318_exprTokens=_76318_exprTokens.slice(0LL,(_76318_exprTokens.len() - 1LL));
		jule::Any _77721_d = _1aca848c7_build(&(*_self_), _76318_exprTokens);;
		if ((_77721_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _77721_d };
			
			if (_match_expr.type_is<jule::Ptr<_1b3954b15_FnCallExpr>>()) {
				_case_begin_1b0e1523d:;
				{
					_76239_tokens=_76239_tokens.slice((_76318_exprTokens.len() + 1LL));
					jule::I64 _78425_i = 0LL;;
					jule::Slice<jule::Ptr<_1e6a5c800_Token>> _78525_rangeTokens = _1aca87105_range(_78425_i,jule::Str("{", 1),jule::Str("}", 1),_76239_tokens);;
					jule::Ptr<_1b3954b15_FnCallExpr> _78625_model = _77721_d.operator jule::Ptr<_1b3954b15_FnCallExpr>();;
					if (_1b39551dc_Ignored(_78625_model.ptr())) {
						_1aca7ad96_pushErr(&(*_self_), _77413_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_78625_model.get()._field_Exception=_1aca8a8de_buildScope((*_self_)._field_p, _78525_rangeTokens,_76239_tokens[(_78425_i - 1LL)]);
					return _77721_d;
				}
			}
			else {
				_case_begin_1b0e15161:;
				{
					_1aca7ad96_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1b0e14e1e:;
		};
	};
	{
		auto &_match_expr{ _76318_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b0e191cb:;
			{
				return _1aca80b37_buildUnsafe(&(*_self_), _76239_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b0e19242:;
			{
				return static_cast<jule::Any>(_1aca80829_buildAnonFn(&(*_self_), _76239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b0e192a8:;
			{
				return static_cast<jule::Any>(_1aca8209a_buildTypedStructLiteral(&(*_self_), _76239_tokens));
			}
		}
		else {
			_case_begin_1b0e152a4:;
			{
				_1aca7ad96_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0e13bdc:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca82ce3_getEnumerableParts(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _81441_tokens) {
	_81441_tokens=_81441_tokens.slice(1LL,(_81441_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _81618_parts;;
	jule::Slice<_1e6735e35_Log> _81625_errors;;
	std::tie(_81618_parts,_81625_errors) = _1aca87be9_parts(_81441_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_81625_errors);
	return _81618_parts;
}



inline jule::Ptr<_1b3957200_SliceExpr> _1aca83101_buildSlice(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _82133_tokens) {
	jule::Ptr<_1b3957200_SliceExpr> _82217_slc = jule::new_ptr<_1b3957200_SliceExpr>(_1b3957200_SliceExpr{._field_Token=_82133_tokens[0LL], ._field_End=_82133_tokens[(_82133_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _82717_parts = _1aca82ce3_getEnumerableParts(&(*_self_), _82133_tokens);;
	if ((_82717_parts.len() == 0LL)) {
		return _82217_slc;
	};
	_82217_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1b3950847_Expr>>::alloc(0LL,_82717_parts.len());
	{
		auto &expr = _82717_parts;
		auto it = expr.begin();
		_iter_begin_1b0e1eb4e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _83321_p = *it;
			{
				if ((_83321_p.len() == 0LL)) {
					goto _iter_next_1b0e1eb4e;
				};
				_82217_slc.get()._field_Exprs = jule::alloc_for_append(_82217_slc.get()._field_Exprs,1);_82217_slc.get()._field_Exprs.__push(_1aca84ee3_buildFromTokens(&(*_self_), _83321_p));;
			}
			_iter_next_1b0e1eb4e:;
			++it;
			goto _iter_begin_1b0e1eb4e;
		}
		_iter_end_1b0e1eb4e:;
	};
	return _82217_slc;
}



inline jule::Ptr<_1b3957a91_IndexingExpr> _1aca83552_buildIndexing(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _84336_exprTokens, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _84413_tokens, jule::Ptr<_1e6a5c800_Token> _84435_errorToken) {
	jule::Ptr<_1e6a5c800_Token> _84517_end = _84413_tokens[(_84413_tokens.len() - 1LL)];;
	_84413_tokens=_84413_tokens.slice(1LL,(_84413_tokens.len() - 1LL));
	if ((_84413_tokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _84435_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b3950847_Expr> _85117_expr = _1aca84ee3_buildFromTokens(&(*_self_), _84336_exprTokens);;
	if ((_85117_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1b3950847_Expr> _85517_index = _1aca84ee3_buildFromTokens(&(*_self_), _84413_tokens);;
	if ((_85517_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1b3957a91_IndexingExpr>(_1b3957a91_IndexingExpr{._field_Token=_84435_errorToken, ._field_End=_84517_end, ._field_Expr=_85117_expr, ._field_Index=_85517_index});
}



inline jule::Ptr<_1b395819b_SlicingExpr> _1aca83ae6_buildSlicing(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _86736_exprTokens, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _86763_start, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _86814_to, jule::Ptr<_1e6a5c800_Token>& _86833_errorToken, jule::Ptr<_1e6a5c800_Token> _86857_end) {
	jule::Ptr<_1b395819b_SlicingExpr> _86917_slc = jule::new_ptr<_1b395819b_SlicingExpr>(_1b395819b_SlicingExpr{._field_Token=_86833_errorToken, ._field_End=_86857_end, ._field_Expr=_1aca84ee3_buildFromTokens(&(*_self_), _86736_exprTokens), });;
	if ((_86763_start.len() > 0LL)) {
		_86917_slc.get()._field_Start=_1aca84ee3_buildFromTokens(&(*_self_), _86763_start);
	};
	if ((_86814_to.len() > 0LL)) {
		_86917_slc.get()._field_To=_1aca84ee3_buildFromTokens(&(*_self_), _86814_to);
	};
	return _86917_slc;
}



inline jule::Any _1aca83e04_buildBracketRange(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _88340_tokens) {
	jule::Ptr<_1e6a5c800_Token> _88417_errorToken = _88340_tokens[0LL];;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _88518_exprTokens;;
	jule::I64 _88530_rangeN;;
	std::tie(_88518_exprTokens,_88530_rangeN) = _1aca7a35c_getRangeExprTokens(_88340_tokens);
	if ((_88518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1aca83101_buildSlice(&(*_self_), _88340_tokens));
	} else if ((_88530_rangeN > 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _88417_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_88340_tokens=_88340_tokens.slice(_88518_exprTokens.len());
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _90017_splitTokens = _88340_tokens.slice(1LL,(_88340_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _90118_start;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _90129_to;;
	std::tie(_90118_start,_90129_to) = _1aca799ee_splitDelim(_90017_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_90118_start != nullptr) || (_90129_to != nullptr))) {
		return static_cast<jule::Any>(_1aca83ae6_buildSlicing(&(*_self_), _88518_exprTokens,_90118_start,_90129_to,_88417_errorToken,_88340_tokens[(_88340_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1aca83552_buildIndexing(&(*_self_), _88518_exprTokens,_88340_tokens,_88417_errorToken));
}



inline jule::Any _1aca84212_buildData(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _90833_tokens) {
	{
		auto _match_expr{ _90833_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b0e2baa1:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b0e2bb28:;
			{
				return _1aca7bdec_buildSingle(&(*_self_), _90833_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b0e2bba0:;
			{
				if ((_90833_tokens[0LL].get()._field_Id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1aca7c20a_buildCppLinkedIdent(&(*_self_), _90833_tokens));
				};
			}
		}
		_match_end_1b0e2b83c:;
	};
	jule::Ptr<_1e6a5c800_Token> _92017_token = _90833_tokens[(_90833_tokens.len() - 1LL)];;
	if (((_92017_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1aca7d55d_buildVariadic(&(*_self_), _90833_tokens));
	};
	_92017_token=_90833_tokens[0LL];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0e2ee7d:;
			{
				if (((_90833_tokens.len() > 1LL) && (_92017_token.get()._field_Kind == jule::Str("*", 1)))) {
					_92017_token=_90833_tokens[1LL];
					if (((_92017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_92017_token.get()._field_Id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1aca7ce42_buildType(&(*_self_), _90833_tokens));
					};
				};
				return static_cast<jule::Any>(_1aca7c518_buildUnary(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0e30005:;
			{
				if ((_90833_tokens.len() < 3LL)) {
					goto _match_end_1b0e2eda1;
				};
				if ((_90833_tokens.len() > 3LL)) {
					jule::Ptr<_1e6a5c800_Token> _94221_t = _90833_tokens[(_90833_tokens.len() - 1LL)];;
					if (((_94221_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_94221_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1b0e2eda1;
					};
				};
				jule::Ptr<_1e6a5c800_Token> _94817_next = _90833_tokens[1LL];;
				if (((_94817_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94817_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _95125_delim = 0LL;;
					_95125_delim=static_cast<jule::I64>(_1aca99bc8_mapColon(_90833_tokens,_95125_delim));
					if ((_95125_delim == -1LL)) {
						goto _match_end_1b0e2eda1;
					};
				};
				return static_cast<jule::Any>(_1aca7ce42_buildType(&(*_self_), _90833_tokens));
			}
		}
		_match_end_1b0e2eda1:;
	};
	_92017_token=_90833_tokens[(_90833_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b0e30500:;
			{
				return _1aca7d250_buildSubIdent(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b0e366b0:;
			{
				return static_cast<jule::Any>(_1aca7ce42_buildType(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0e36726:;
			{
				return _1aca7d86b_buildOpRight(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0e3678c:;
			{
				{
					auto &_match_expr{ _92017_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b0e380c9:;
						{
							return _1aca8020d_buildParenthesesRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b0e38140:;
						{
							return _1aca829d5_buildBraceRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b0e381b7:;
						{
							return _1aca83e04_buildBracketRange(&(*_self_), _90833_tokens);
						}
					}
					_match_end_1b0e37a13:;
				};
			}
		}
		_match_end_1b0e3049a:;
	};
	if ((_92017_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		return static_cast<jule::Any>(_1aca7ce42_buildType(&(*_self_), _90833_tokens));
	};
	_1aca7ad96_pushErr(&(*_self_), _92017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1b39545c6_BinopExpr> _1aca845b9_buildBinop(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _98934_tokens, jule::I64 _98952_i) {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _99017_leftTokens = _98934_tokens.slice(0LL,_98952_i);;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _99117_rightTokens = _98934_tokens.slice((_98952_i + 1LL));;
	if ((_99017_leftTokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_99117_rightTokens.len() == 0LL)) {
		_1aca7ad96_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca7b1b5_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1b39545c6_BinopExpr>(_1b39545c6_BinopExpr{._field_Left=_1aca84ee3_buildFromTokens(&(*_self_), _99017_leftTokens), ._field_Right=_1aca84ee3_buildFromTokens(&(*_self_), _99117_rightTokens), ._field_Op=_98934_tokens[_98952_i]});
}



inline jule::Any _1aca848c7_build(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _100929_tokens) {
	jule::I64 _101013_i = _1aca79c96_findLowestPrecOp(_100929_tokens);;
	if ((_101013_i == -1LL)) {
		return _1aca84212_buildData(&(*_self_), _100929_tokens);
	};
	return static_cast<jule::Any>(_1aca845b9_buildBinop(&(*_self_), _100929_tokens,_101013_i));
}



inline jule::Any _1aca84bd5_buildKind(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _101733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _101818_parts;;
	jule::Slice<_1e6735e35_Log> _101825_errors;;
	std::tie(_101818_parts,_101825_errors) = _1aca87be9_parts(_101733_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_101825_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_101825_errors);
		return nullptr;
	} else if ((_101818_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1aca7b4c3_buildTuple(&(*_self_), _101818_parts));
	};
	return _1aca848c7_build(&(*_self_), _101733_tokens);
}



inline jule::Ptr<_1b3950847_Expr> _1aca84ee3_buildFromTokens(_1aca7a58d_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _102838_tokens) {
	if ((_102838_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1b3950847_Expr>(_1b3950847_Expr{._field_Token=_102838_tokens[0LL], ._field_End=_102838_tokens[(_102838_tokens.len() - 1LL)], ._field_Kind=_1aca84bd5_buildKind(&(*_self_), _102838_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1aca7a58d_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca858c8_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1aca8924a_stop(_1aca88e1a_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1aca894ae_stopped(_1aca88e1a_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1aca89877_pushErr(_1aca88e1a_parser* _self_, jule::Ptr<_1e6a5c800_Token> _28526_token, jule::Str _28541_fmt, jule::Slice<jule::Any> _28554_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1aca8837b_compilerErr(_28526_token,_28541_fmt,jule::Any(_28554_args)));;
}



inline void _1aca89b96_pushSuggestion(_1aca88e1a_parser* _self_, jule::Str _29033_fmt, jule::Slice<jule::Any> _29046_args) {
	{
		_1aca887aa_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29033_fmt,jule::Any(_29046_args));
	};
}



inline jule::Ptr<_1b3950847_Expr> _1aca89ea4_buildExpr(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _29434_tokens) {
	jule::Ptr<_1aca7a58d_exprBuilder> _29517_ep = jule::new_ptr<_1aca7a58d_exprBuilder>(_1aca7a58d_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1b3950847_Expr> _29817_expr = _1aca84ee3_buildFromTokens(_29517_ep.ptr(), _29434_tokens);;
	return _29817_expr;
}



inline jule::Ptr<_1b3917b2d_Directive> _1aca8a2b2_buildDirective(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _30237_tokens) {
	if ((_30237_tokens.len() == 1LL)) {
		_1aca89877_pushErr(&(*_self_), _30237_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30237_tokens[1LL].get()._field_Column != (_30237_tokens[0LL].get()._field_Column + 1LL))) {
		_1aca89877_pushErr(&(*_self_), _30237_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1b3917b2d_Directive>(_1b3917b2d_Directive{._field_Tag=_30237_tokens[1LL], ._field_Args=_30237_tokens.slice(2LL)});
}



inline void _1aca8a537_pushDirective(_1aca88e1a_parser* _self_, jule::Ptr<_1b3917b2d_Directive> _31736_d) {
	if ((_31736_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1b0a00961:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _32216_pd = *it;
			{
				if ((_31736_d.get()._field_Tag.get()._field_Kind == _32216_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b0a00961:;
			++it;
			goto _iter_begin_1b0a00961;
		}
		_iter_end_1b0a00961:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31736_d);;
}



inline jule::Ptr<_1b395b644_ScopeTree> _1aca8a8de_buildScope(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _33035_tokens, jule::Ptr<_1e6a5c800_Token> _33057_end) {
	jule::Ptr<_1b395b644_ScopeTree> _33117_s = _1aca6b7d2_newScope();;
	_33117_s.get()._field_End=_33057_end;
	_1aca6d22e_scopeParser _33317_sp = _1aca6d22e_scopeParser{._field_p=_self_, };;
	_1aca78c1d_build(&_33317_sp, _33035_tokens,_33117_s);
	return _33117_s;
}



inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca8ad40__buildType(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _34042_tokens, jule::I64* _34113_i, jule::Bool _34122_err) {
	_1aca9a1d4_typeBuilder _34217_tb = _1aca9a1d4_typeBuilder{._field_p=_self_, ._field_tokens=_34042_tokens, ._field_i=_34113_i, ._field_err=_34122_err};;
	jule::Ptr<_1b394b326_TypeDecl> _34818_decl;;
	jule::Bool _34824_ok;;
	std::tie(_34818_decl,_34824_ok) = _1aca9d58e_build(&_34217_tb);
	return std::make_tuple(_34818_decl,_34824_ok);
}



inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca8b291_buildType(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _35341_tokens, jule::I64* _35413_i, jule::Bool _35422_err) {
	jule::Ptr<_1e6a5c800_Token> _35513_token = _35341_tokens[(*(_35413_i))];;
	jule::Ptr<_1b394b326_TypeDecl> _35618_t;;
	jule::Bool _35621_ok;;
	std::tie(_35618_t,_35621_ok) = _1aca8ad40__buildType(_self_, _35341_tokens,_35413_i,_35422_err);
	if ((_35422_err && (!(_35621_ok)))) {
		_1aca89877_pushErr(_self_.ptr(), _35513_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35618_t,_35621_ok);
}



inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca8b59e_buildTypeAliasDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _36343_tokens) {
	jule::I64 _36417_i = 1LL;;
	if ((_36417_i >= _36343_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b396297a_TypeAliasDecl> _36917_tad = jule::new_ptr<_1b396297a_TypeAliasDecl>(_1b396297a_TypeAliasDecl{._field_Token=_36343_tokens[1LL], ._field_Ident=_36343_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1e6a5c800_Token> _37317_token = _36343_tokens[_36417_i];;
	if ((_37317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _37317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36417_i)++;
	if ((_36417_i >= _36343_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	_37317_token=_36343_tokens[_36417_i];
	if ((_37317_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	(_36417_i)++;
	if ((_36417_i >= _36343_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	jule::Ptr<_1b394b326_TypeDecl> _39418_t;;
	jule::Bool _39421_ok;;
	std::tie(_39418_t,_39421_ok) = _1aca8b291_buildType(_self_, _36343_tokens,(&(_36417_i)),true);
	_36917_tad.get()._field_Kind=_39418_t;
	if ((_39421_ok && (_36417_i < _36343_tokens.len()))) {
		_1aca89877_pushErr(_self_.ptr(), _36343_tokens[_36417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _36917_tad;
}



inline void _1aca8b8bd_buildVarTypeAndExpr(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b395e119_VarDecl>& _40244_v, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _40262_tokens) {
	jule::I64 _40317_i = 0LL;;
	jule::Ptr<_1e6a5c800_Token> _40417_tok = _40262_tokens[_40317_i];;
	if ((_40417_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40317_i)++;
		if (((_40317_i >= _40262_tokens.len()) || ((_40262_tokens[_40317_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40262_tokens[_40317_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1aca89877_pushErr(_self_.ptr(), _40417_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b394b326_TypeDecl> _41222_t;;
		jule::Bool _41225_ok;;
		std::tie(_41222_t,_41225_ok) = _1aca8b291_buildType(_self_, _40262_tokens,(&(_40317_i)),true);
		if (_41225_ok) {
			_40244_v.get()._field_Kind=_41222_t;
			if ((_40317_i >= _40262_tokens.len())) {
				return;;
			};
			_40417_tok=_40262_tokens[_40317_i];
		};
	};
	if ((_40417_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40417_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1aca89877_pushErr(_self_.ptr(), _40417_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1e6a5c800_Token>> _42721_exprTokens = _40262_tokens.slice((_40317_i + 1LL));;
		if ((_42721_exprTokens.len() == 0LL)) {
			_1aca89877_pushErr(_self_.ptr(), _40417_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40244_v.get()._field_Expr=_1aca89ea4_buildExpr(_self_, _42721_exprTokens);
	} else {
		_1aca89877_pushErr(_self_.ptr(), _40417_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1aca8bbdc_buildVarCommon(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b395e119_VarDecl>& _43839_v, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _43856_tokens) {
	_43839_v.get()._field_Token=_43856_tokens[0LL];
	if ((_43839_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _43839_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43839_v.get()._field_Ident=_43839_v.get()._field_Token.get()._field_Kind;
	_43839_v.get()._field_Kind=nullptr;
	if ((_43856_tokens.len() > 1LL)) {
		_43856_tokens=_43856_tokens.slice(1LL);
		_1aca8b8bd_buildVarTypeAndExpr(_self_, _43839_v,_43856_tokens);
	};
}



inline void _1aca8c0a5_buildVarBegin(_1aca88e1a_parser* _self_, jule::Ptr<_1b395e119_VarDecl>& _45337_v, jule::I64& _45355_i, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _45364_tokens) {
	jule::Ptr<_1e6a5c800_Token> _45413_tok = _45364_tokens[_45355_i];;
	{
		auto &_match_expr{ _45413_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1b0a1a4e7:;
			{
				_45337_v.get()._field_Statically=true;
				goto _case_begin_1b0a1a55d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b0a1a55d:;
			{
				(_45355_i)++;
				if ((_45355_i >= _45364_tokens.len())) {
					_1aca89877_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45364_tokens[_45355_i].get()._field_Id == static_cast<jule::U64>(36LLU))) {
					_45337_v.get()._field_Mutable=true;
					(_45355_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b0a19bde:;
			{
				(_45355_i)++;
				_45337_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b0a19b23:;
			{
				_1aca89877_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b0a1997a:;
	};
	if ((_45355_i >= _45364_tokens.len())) {
		_1aca89877_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b395e119_VarDecl> _1aca8c3b3_buildVar(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _48332_tokens) {
	jule::I64 _48417_i = 0LL;;
	jule::Ptr<_1b395e119_VarDecl> _48517_v = jule::new_ptr<_1b395e119_VarDecl>(_1b395e119_VarDecl{._field_Token=_48332_tokens[0LL], });;
	_1aca8c0a5_buildVarBegin(_self_.ptr(), _48517_v,_48417_i,_48332_tokens);
	if ((_48417_i >= _48332_tokens.len())) {
		return nullptr;
	};
	_48332_tokens=_48332_tokens.slice(_48417_i);
	if (((_48332_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48332_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48517_v.get()._field_Reference=true;
		if ((_48332_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48332_tokens=_48332_tokens.slice(1LL);
	};
	_1aca8bbdc_buildVarCommon(_self_, _48517_v,_48332_tokens);
	return _48517_v;
}



inline jule::Ptr<_1b395890a_GenericDecl> _1aca8c6c1_buildGeneric(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _50537_tokens) {
	jule::Ptr<_1b395890a_GenericDecl> _50617_g = jule::new_ptr<_1b395890a_GenericDecl>(_1b395890a_GenericDecl{._field_Token=_50537_tokens[0LL], });;
	if ((_50617_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _50617_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50617_g.get()._field_Ident=_50617_g.get()._field_Token.get()._field_Kind;
	if ((_50537_tokens.len() > 1LL)) {
		if ((_50537_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1aca89877_pushErr(_self_.ptr(), _50537_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50537_tokens.len() == 2LL)) {
			_1aca89877_pushErr(_self_.ptr(), _50537_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1e6a5c800_Token>> _52321_constraintTokens = _50537_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _52422_parts;;
		jule::Slice<_1e6735e35_Log> _52429_errors;;
		std::tie(_52422_parts,_52429_errors) = _1aca8780e_partsKind(_52321_constraintTokens,jule::Str("|", 1),true);
		if ((_52429_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52429_errors);
			return nullptr;
		};
		_50617_g.get()._field_Constraint=jule::new_ptr<_1b3958487_Constraint>(_1b3958487_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>::alloc(0LL,_52422_parts.len())});
		{
			auto &expr = _52422_parts;
			auto it = expr.begin();
			_iter_begin_1b0a27aa9:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _53025_part = *it;
				{
					jule::I64 _53125_i = 0LL;;
					jule::Ptr<_1b394b326_TypeDecl> _53226_kind;;
					std::tie(_53226_kind,std::ignore) = _1aca8b291_buildType(_self_, _53025_part,(&(_53125_i)),true);
					_50617_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50617_g.get()._field_Constraint.get()._field_Mask,1);_50617_g.get()._field_Constraint.get()._field_Mask.__push(_53226_kind);;
					if ((_53125_i < _53025_part.len())) {
						_1aca89877_pushErr(_self_.ptr(), _53025_part[_53125_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b0a27aa9:;
				++it;
				goto _iter_begin_1b0a27aa9;
			}
			_iter_end_1b0a27aa9:;
		};
	};
	return _50617_g;
}



inline jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _1aca8ca78_buildGenerics(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _54238_tokens, jule::Ptr<_1e6a5c800_Token>& _54257_errorToken) {
	if ((_54238_tokens.len() == 0LL)) {
		_1aca89877_pushErr(_self_.ptr(), _54257_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _54818_parts;;
	jule::Slice<_1e6735e35_Log> _54825_errors;;
	std::tie(_54818_parts,_54825_errors) = _1aca87be9_parts(_54238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54825_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1b395890a_GenericDecl>> _55417_generics = jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>::alloc(0LL,_54818_parts.len());;
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1b0a2c3a5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _55521_part = *it;
			{
				_55417_generics = jule::alloc_for_append(_55417_generics,1);_55417_generics.__push(_1aca8c6c1_buildGeneric(_self_, _55521_part));;
			}
			_iter_next_1b0a2c3a5:;
			++it;
			goto _iter_begin_1b0a2c3a5;
		}
		_iter_end_1b0a2c3a5:;
	};
	return _55417_generics;
}



inline jule::Ptr<_1b395bd1a_ParamDecl> _1aca8cd86_buildSelfParam(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _56237_tokens) {
	if ((_56237_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1b395bd1a_ParamDecl> _56717_param = jule::new_ptr<_1b395bd1a_ParamDecl>();;
	jule::I64 _57017_i = 0LL;;
	if ((_56237_tokens[_57017_i].get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_56717_param.get()._field_Mutable=true;
		(_57017_i)++;
		if ((_57017_i >= _56237_tokens.len())) {
			_1aca89877_pushErr(&(*_self_), _56237_tokens[(_57017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56237_tokens[_57017_i].get()._field_Kind == jule::Str("&", 1))) {
		_56717_param.get()._field_Ident=jule::Str("&", 1);
		(_57017_i)++;
		if ((_57017_i >= _56237_tokens.len())) {
			_1aca89877_pushErr(&(*_self_), _56237_tokens[(_57017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56237_tokens[_57017_i].get()._field_Id == static_cast<jule::U64>(28LLU))) {
		_56717_param.get()._field_Ident+=jule::Str("self", 4);
		_56717_param.get()._field_Token=_56237_tokens[_57017_i];
		(_57017_i)++;
		if ((_57017_i < _56237_tokens.len())) {
			_1aca89877_pushErr(&(*_self_), _56237_tokens[_57017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56717_param;
}



inline void _1aca8d24e_paramTypeBegin(_1aca88e1a_parser* _self_, jule::Ptr<_1b395bd1a_ParamDecl>& _60138_param, jule::I64& _60162_i, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _60171_tokens) {
	for (; (_60162_i < _60171_tokens.len()); (_60162_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _60317_token = _60171_tokens[_60162_i];;
			if ((_60317_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60317_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60138_param.get()._field_Variadic) {
				_1aca89877_pushErr(&(*_self_), _60317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1b0a33da1;
			};
			_60138_param.get()._field_Variadic=true;
		}
	_iter_next_1b0a33da1:;
	}
	_iter_end_1b0a33da1:;;
}



inline void _1aca8d56d_buildParamType(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b395bd1a_ParamDecl>& _61839_param, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _61863_tokens) {
	jule::I64 _61917_i = 0LL;;
	_1aca8d24e_paramTypeBegin(_self_.ptr(), _61839_param,_61917_i,_61863_tokens);
	if ((_61917_i >= _61863_tokens.len())) {
		return;;
	};
	std::tie(_61839_param.get()._field_Kind,std::ignore) = _1aca8b291_buildType(_self_, _61863_tokens,(&(_61917_i)),true);
	if ((_61917_i < _61863_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _61863_tokens[_61917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1aca8d88c_buildParamBody(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b395bd1a_ParamDecl>& _63139_param, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _63162_tokens) {
	jule::Ptr<_1e6a5c800_Token> _63217_tok = _63162_tokens[0LL];;
	_63139_param.get()._field_Ident=_63217_tok.get()._field_Kind;
	if ((_63162_tokens.len() == 1LL)) {
		return;;
	} else if ((_63162_tokens.len() < 3LL)) {
		_1aca89877_pushErr(_self_.ptr(), _63217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63162_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1aca8d56d_buildParamType(_self_, _63139_param,_63162_tokens);
		return;;
	};
	_63162_tokens=_63162_tokens.slice(2LL);
	_1aca8d56d_buildParamType(_self_, _63139_param,_63162_tokens);
}



inline jule::Ptr<_1b395bd1a_ParamDecl> _1aca8db9a_buildParam(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _64934_tokens) {
	jule::Ptr<_1b395bd1a_ParamDecl> _65017_param = jule::new_ptr<_1b395bd1a_ParamDecl>(_1b395bd1a_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1aca89877_pushErr(_self_.ptr(), _64934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65017_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1aca89877_pushErr(_self_.ptr(), _64934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1aca8d56d_buildParamType(_self_, _65017_param,_64934_tokens);
	} else {
		_1aca8d88c_buildParamBody(_self_, _65017_param,_64934_tokens);
	};
	return _65017_param;
}



inline void _1aca8de20_checkParams(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>>& _69235_params) {
	{
		auto &expr = _69235_params;
		auto it = expr.begin();
		_iter_begin_1b0a43355:;
		if (it != expr.end()) {
			jule::Ptr<_1b395bd1a_ParamDecl> _69321_param = *it;
			{
				if ((_1b395c17d_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b0a43355;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1aca89877_pushErr(&(*_self_), _69321_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }))});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b0a43355:;
			++it;
			goto _iter_begin_1b0a43355;
		}
		_iter_end_1b0a43355:;
	};
}



inline jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>> _1aca8e2c7_buildParams(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _71318_parts;;
	jule::Slice<_1e6735e35_Log> _71325_errs;;
	std::tie(_71318_parts,_71325_errs) = _1aca87be9_parts(_71236_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_1b395bd1a_ParamDecl> _72121_param = _1aca8cd86_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _1b395c17d_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71318_parts;
		auto it = expr.begin();
		_iter_begin_1b0e6ead3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _72821_part = *it;
			{
				jule::Ptr<_1b395bd1a_ParamDecl> _72921_param = _1aca8db9a_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_1b0e6ead3:;
			++it;
			goto _iter_begin_1b0e6ead3;
		}
		_iter_end_1b0e6ead3:;
	};
	_1aca8de20_checkParams(_self_.ptr(), _71917_params);
	return _71917_params;
}



inline std::tuple<jule::Ptr<_1b394e439_RetTypeDecl>,jule::Bool> _1aca8e67e_buildMultiRetType(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _73942_tokens, jule::I64& _73965_i) {
	jule::Ptr<_1b394e439_RetTypeDecl> _73975_t = jule::Ptr<_1b394e439_RetTypeDecl>();
	jule::Bool _73992_ok = jule::Bool();
	_73975_t=jule::new_ptr<_1b394e439_RetTypeDecl>();
	(_73965_i)++;
	if ((_73965_i >= _73942_tokens.len())) {
		(_73965_i)--;
		std::tie(_73975_t.get()._field_Kind,_73992_ok) = _1aca8b291_buildType(_self_, _73942_tokens,(&(_73965_i)),false);
		return std::make_tuple(_73975_t,_73992_ok);
	};
	(_73965_i)--;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _74917_rangeTokens = _1aca87105_range(_73965_i,jule::Str("(", 1),jule::Str(")", 1),_73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _75118_parts;;
	jule::Slice<_1e6735e35_Log> _75125_errs;;
	std::tie(_75118_parts,_75125_errs) = _1aca87be9_parts(_74917_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return std::make_tuple(_73975_t,_73992_ok);
	};
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>::alloc(0LL,_75118_parts.len());;
	_73975_t.get()._field_Idents=jule::Slice<jule::Ptr<_1e6a5c800_Token>>::alloc(0LL,_75118_parts.len());
	{
		auto &expr = _75118_parts;
		auto it = expr.begin();
		_iter_begin_1b0e76249:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _75921_part = *it;
			{
				jule::Ptr<_1e6a5c800_Token> _76021_token = _75921_part[0LL];;
				jule::I64 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1aca89877_pushErr(_self_.ptr(), _76021_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1b0e76249;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_1e6a5c800_Token> _77725_newToken = jule::new_ptr<_1e6a5c800_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73975_t.get()._field_Idents = jule::alloc_for_append(_73975_t.get()._field_Idents,1);_73975_t.get()._field_Idents.__push(_77725_newToken);;
				} else {
					_73975_t.get()._field_Idents = jule::alloc_for_append(_73975_t.get()._field_Idents,1);_73975_t.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_1b394b326_TypeDecl> _78422_tk;;
				std::tie(_78422_tk,std::ignore) = _1aca8b291_buildType(_self_, _75921_part,(&(_76121_offset)),true);
				if ((_76121_offset < _75921_part.len())) {
					_1aca89877_pushErr(_self_.ptr(), _75921_part[_76121_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_1b0e76249:;
			++it;
			goto _iter_begin_1b0e76249;
		}
		_iter_end_1b0e76249:;
	};
	if ((_75717_types.len() > 1LL)) {
		_73975_t.get()._field_Kind=jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_73942_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394cdb6_TupleTypeDecl>(_1b394cdb6_TupleTypeDecl{._field_Types=_75717_types}))});
	} else {
		_73975_t.get()._field_Kind=_75717_types[0LL];
	};
	_73992_ok=true;
	return std::make_tuple(_73975_t,_73992_ok);
}



inline std::tuple<jule::Ptr<_1b394e439_RetTypeDecl>,jule::Bool> _1aca8ea36_buildRetType(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _80737_tokens, jule::I64& _80760_i) {
	jule::Ptr<_1b394e439_RetTypeDecl> _80770_t = jule::Ptr<_1b394e439_RetTypeDecl>();
	jule::Bool _80787_ok = jule::Bool();
	_80770_t=jule::new_ptr<_1b394e439_RetTypeDecl>();
	if ((_80760_i >= _80737_tokens.len())) {
		return std::make_tuple(_80770_t,_80787_ok);
	};
	jule::Ptr<_1e6a5c800_Token> _81317_token = _80737_tokens[_80760_i];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0e7ecad:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80770_t,_80787_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0e7ed24:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80770_t,_80787_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b0e7ed8a:;
			{
				if (((_80760_i + 1LL) >= _80737_tokens.len())) {
					_1aca89877_pushErr(_self_.ptr(), _81317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80770_t,_80787_ok);
				};
				(_80760_i)++;
				_81317_token=_80737_tokens[_80760_i];
				if ((_81317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1b0e828c6:;
							{
								std::tie(_80770_t,_80787_ok) = _1aca8e67e_buildMultiRetType(_self_, _80737_tokens,_80760_i);
								return std::make_tuple(_80770_t,_80787_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1b0e8293c:;
							{
								_1aca89877_pushErr(_self_.ptr(), _81317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80770_t,_80787_ok);
							}
						}
						_match_end_1b0e8281b:;
					};
				};
				std::tie(_80770_t.get()._field_Kind,_80787_ok) = _1aca8b291_buildType(_self_, _80737_tokens,(&(_80760_i)),true);
				return std::make_tuple(_80770_t,_80787_ok);
			}
		}
		_match_end_1b0e7ec03:;
	};
	(_80760_i)++;
	_1aca89877_pushErr(_self_.ptr(), _81317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80770_t,_80787_ok);
}



inline jule::Ptr<_1b395d13a_FnDecl> _1aca8ee87_buildFnPrototype(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _85241_tokens, jule::I64& _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_1b395d13a_FnDecl> _85317_f = jule::new_ptr<_1b395d13a_FnDecl>(_1b395d13a_FnDecl{._field_Token=_85241_tokens[_85264_i], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		_85317_f.get()._field_Statically=true;
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Token=_85241_tokens[_85264_i];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_85317_f.get()._field_Unsafety=true;
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Token=_85241_tokens[_85264_i];
	};
	(_85264_i)++;
	if ((_85264_i >= _85241_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e6a5c800_Token> _88613_tok = _85241_tokens[_85264_i];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1e6a5c800_Token> _89813_errorToken = _85241_tokens[_85264_i];;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _89917_genericsTokens = _1aca87105_range(_85264_i,jule::Str("[", 1),jule::Str("]", 1),_85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1aca8ca78_buildGenerics(_self_, _89917_genericsTokens,_89813_errorToken);
	};
	if ((_85241_tokens[_85264_i].get()._field_Kind != jule::Str("(", 1))) {
		_1aca89877_pushErr(_self_.ptr(), _85241_tokens[_85264_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _90917_paramsToks = _1aca87105_range(_85264_i,jule::Str("(", 1),jule::Str(")", 1),_85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1aca8e2c7_buildParams(_self_, _90917_paramsToks,_85272_method);
	};
	if ((_85264_i < _85241_tokens.len())) {
		jule::Ptr<_1e6a5c800_Token> _91517_token = _85241_tokens[_85264_i];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91517_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85317_f.get()._field_Exceptional=true;
			(_85264_i)++;
		};
	};
	std::tie(_85317_f.get()._field_Result,std::ignore) = _1aca8ea36_buildRetType(_self_, _85241_tokens,_85264_i);
	return _85317_f;
}



inline jule::Ptr<_1b395d13a_FnDecl> _1aca903d8_buildFn(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _92832_tokens, jule::Bool _92850_method, jule::Bool _92864_prototype) {
	jule::I64 _92917_i = 0LL;;
	jule::Ptr<_1b395d13a_FnDecl> _93017_f = _1aca8ee87_buildFnPrototype(_self_, _92832_tokens,_92917_i,_92850_method);;
	if (_92864_prototype) {
		if ((_92917_i < _92832_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _92832_tokens[(_92917_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93017_f;
	} else if ((_93017_f == nullptr)) {
		return _93017_f;
	};
	if ((_92917_i >= _92832_tokens.len())) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _93017_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _94617_blockTokens = _1aca87105_range(_92917_i,jule::Str("{", 1),jule::Str("}", 1),_92832_tokens);;
	if ((_94617_blockTokens != nullptr)) {
		_93017_f.get()._field_Scope=_1aca8a8de_buildScope(_self_, _94617_blockTokens,_92832_tokens[(_92917_i - 1LL)]);
		_93017_f.get()._field_Scope.get()._field_Unsafety=_93017_f.get()._field_Unsafety;
		if ((_92917_i < _92832_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _92832_tokens[_92917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _93017_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93017_f;
}



inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca906e6_getUseDeclSelectors(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _96242_tokens) {
	jule::I64 _96317_i = 0LL;;
	_96242_tokens=_1aca87105_range(_96317_i,jule::Str("{", 1),jule::Str("}", 1),_96242_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _96518_parts;;
	jule::Slice<_1e6735e35_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1aca87be9_parts(_96242_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96525_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _97117_selectors = jule::Slice<jule::Ptr<_1e6a5c800_Token>>::alloc(0LL,_96518_parts.len());;
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1b0e98cb6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _97221_part = *it;
			{
				if ((_97221_part.len() > 1LL)) {
					_1aca89877_pushErr(&(*_self_), _97221_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e6a5c800_Token> _97621_tok = _97221_part[0LL];;
				if (((_97621_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97621_tok.get()._field_Id != static_cast<jule::U64>(28LLU)))) {
					_1aca89877_pushErr(&(*_self_), _97621_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aca89b96_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1b0e98cb6;
				};
				_97117_selectors = jule::alloc_for_append(_97117_selectors,1);_97117_selectors.__push(_97621_tok);;
			}
			_iter_next_1b0e98cb6:;
			++it;
			goto _iter_begin_1b0e98cb6;
		}
		_iter_end_1b0e98cb6:;
	};
	return _97117_selectors;
}



inline void _1aca90a15_buildCppUseDecl(_1aca88e1a_parser* _self_, jule::Ptr<_1b3963d66_UseDecl>& _98739_decl, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _98756_tokens) {
	if ((_98756_tokens.len() > 1LL)) {
		_1aca89877_pushErr(&(*_self_), _98756_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e6a5c800_Token> _99113_token = _98756_tokens[0LL];;
	if (((_99113_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99113_token.get()._field_Kind[0LL] != '`') && (_99113_token.get()._field_Kind[0LL] != '\"')))) {
		_1aca89877_pushErr(&(*_self_), _99113_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98739_decl.get()._field_CppLinked=true;
	_98739_decl.get()._field_LinkPath=_99113_token.get()._field_Kind.slice(1LL,(_99113_token.get()._field_Kind.len() - 1LL));
}



inline void _1aca90d34_buildStdUseDecl(_1aca88e1a_parser* _self_, jule::Ptr<_1b3963d66_UseDecl>& _100039_decl, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _100059_tokens) {
	_100039_decl.get()._field_Std=true;
	jule::Ptr<_1e6a5c800_Token> _100317_token = _100059_tokens[0LL];;
	if ((_100059_tokens.len() < 3LL)) {
		_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100059_tokens=_100059_tokens.slice(2LL);
	_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b0ea2a7d:;
			{
				_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0ea2b05:;
			{
				if ((_100317_token.get()._field_Kind != jule::Str("}", 1))) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _102021_selectors = nullptr;;
				std::tie(_100059_tokens,_102021_selectors) = _1aca8739c_rangeLast(_100059_tokens);
				_100039_decl.get()._field_Selected=_1aca906e6_getUseDeclSelectors(&(*_self_), _102021_selectors);
				if ((_100059_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
				if ((_100317_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0ea2b7c:;
			{
				if ((_100317_token.get()._field_Kind != jule::Str("*", 1))) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
				if ((_100317_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100039_decl.get()._field_Full=true;
			}
		}
		_match_end_1b0ea2a06:;
	};
	_100039_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1aca88a52_tokstoa(_100059_tokens));
}



inline void _1aca91153_buildIdentUseDecl(_1aca88e1a_parser* _self_, jule::Ptr<_1b3963d66_UseDecl>& _106241_decl, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _106261_tokens) {
	_106241_decl.get()._field_Std=false;
	jule::Ptr<_1e6a5c800_Token> _106517_token = _106261_tokens[(_106261_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b0eacb10:;
			{
				_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0eaccdb:;
			{
				if ((_106517_token.get()._field_Kind != jule::Str("}", 1))) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _107621_selectors = nullptr;;
				std::tie(_106261_tokens,_107621_selectors) = _1aca8739c_rangeLast(_106261_tokens);
				_106241_decl.get()._field_Selected=_1aca906e6_getUseDeclSelectors(&(*_self_), _107621_selectors);
				if ((_106261_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106517_token=_106261_tokens[(_106261_tokens.len() - 1LL)];
				if ((_106517_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0eacd52:;
			{
				if ((_106517_token.get()._field_Kind != jule::Str("*", 1))) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106517_token=_106261_tokens[(_106261_tokens.len() - 1LL)];
				if ((_106517_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1aca89877_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106241_decl.get()._field_Full=true;
			}
		}
		_match_end_1b0eacaaa:;
	};
	_106241_decl.get()._field_LinkPath=_1aca88a52_tokstoa(_106261_tokens);
}



inline void _1aca91472_parseUseDecl(_1aca88e1a_parser* _self_, jule::Ptr<_1b3963d66_UseDecl>& _112536_decl, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _112556_tokens) {
	if (_112536_decl.get()._field_CppLinked) {
		_1aca90a15_buildCppUseDecl(&(*_self_), _112536_decl,_112556_tokens);
		return;;
	};
	jule::Ptr<_1e6a5c800_Token> _113117_token = _112556_tokens[0LL];;
	if ((_113117_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(&(*_self_), _113117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112556_tokens.len() > 2LL) && (_112556_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112536_decl.get()._field_Alias=_113117_token.get()._field_Kind;
		if ((_112556_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1aca89877_pushErr(&(*_self_), _113117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1aca89b96_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112556_tokens=_112556_tokens.slice(2LL);
		_113117_token=_112556_tokens[0LL];
	};
	;
	{
		
		if ((_113117_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1b08126b8:;
			{
				_1aca90d34_buildStdUseDecl(&(*_self_), _112536_decl,_112556_tokens);
			}
		}
		else {
			_case_begin_1b0814786:;
			{
				_1aca91153_buildIdentUseDecl(&(*_self_), _112536_decl,_112556_tokens);
			}
		}
		_match_end_1b0814720:;
	};
}



inline jule::Ptr<_1b3963d66_UseDecl> _1aca91829_buildUseDecl(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _115935_tokens, jule::Bool _115953_cpp_linked) {
	jule::Ptr<_1b3963d66_UseDecl> _116017_decl = jule::new_ptr<_1b3963d66_UseDecl>(_1b3963d66_UseDecl{._field_Token=_115935_tokens[0LL], ._field_CppLinked=_115953_cpp_linked, });;
	if ((_115935_tokens.len() < 2LL)) {
		_1aca89877_pushErr(&(*_self_), _116017_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115935_tokens=_115935_tokens.slice(1LL);
	_1aca91472_parseUseDecl(&(*_self_), _116017_decl,_115935_tokens);
	return _116017_decl;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca91bd1_buildTypeEnumItemKind(jule::Ptr<_1aca88e1a_parser> _self_, jule::I64& _117346_i, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _117359_tokens) {
	jule::I64 _117417_braceN = 0LL;;
	jule::I64 _117513_exprStart = _117346_i;;
	for (; (_117346_i < _117359_tokens.len()); (_117346_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _117717_t = _117359_tokens[_117346_i];;
			if ((_117717_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117717_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b0818cc9:;
						{
							(_117417_braceN)++;
							goto _iter_next_1b0818614;
						}
					}
					else {
						_case_begin_1b081968c:;
						{
							(_117417_braceN)--;
						}
					}
					_match_end_1b081947d:;
				};
			};
			if ((_117417_braceN > 0LL)) {
				goto _iter_next_1b0818614;
			};
			if (((_117717_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117346_i + 1LL) >= _117359_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _119325_kindTokens = nullptr;;
				if ((_117717_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119325_kindTokens=_117359_tokens.slice(_117513_exprStart,_117346_i);
				} else {
					_119325_kindTokens=_117359_tokens.slice(_117513_exprStart);
				};
				jule::I64 _119925_j = 0LL;;
				jule::Ptr<_1b394b326_TypeDecl> _120026_kind;;
				std::tie(_120026_kind,std::ignore) = _1aca8b291_buildType(_self_, _119325_kindTokens,(&(_119925_j)),true);
				if ((_119925_j < _119325_kindTokens.len())) {
					_1aca89877_pushErr(_self_.ptr(), _119325_kindTokens[_119925_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120026_kind;
			};
		}
	_iter_next_1b0818614:;
	}
	_iter_end_1b0818614:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>> _1aca91ede_buildTypeEnumItems(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _121043_tokens) {
	jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>> _121117_items = jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121217_i = 0LL;;
	for (; (_121217_i < _121043_tokens.len()); (_121217_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _121421_t = _121043_tokens[_121217_i];;
			jule::Ptr<_1b3965818_TypeEnumItemDecl> _121521_item = jule::new_ptr<_1b3965818_TypeEnumItemDecl>();;
			_121521_item.get()._field_Token=_121421_t;
			if (((_121521_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121043_tokens.len() - _121217_i) > 2LL))) {
				_121521_item.get()._field_Ident=_121521_item.get()._field_Token.get()._field_Kind;
				_121421_t=_121043_tokens[(_121217_i + 1LL)];
				if ((_121421_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121217_i+=2LL;
					if (((_121217_i >= _121043_tokens.len()) || (_121043_tokens[_121217_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1aca89877_pushErr(_self_.ptr(), _121421_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1b081e62b;
					};
				};
			};
			_121521_item.get()._field_Kind=_1aca91bd1_buildTypeEnumItemKind(_self_, _121217_i,_121043_tokens);
			_121117_items = jule::alloc_for_append(_121117_items,1);_121117_items.__push(_121521_item);;
		}
	_iter_next_1b081e62b:;
	}
	_iter_end_1b081e62b:;;
	return _121117_items;
}



inline jule::Ptr<_1b3965a16_TypeEnumDecl> _1aca922ec_buildTypeEnumDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _123442_tokens) {
	jule::I64 _123517_i = 1LL;;
	jule::Ptr<_1b3965a16_TypeEnumDecl> _123617_e = jule::new_ptr<_1b3965a16_TypeEnumDecl>(_1b3965a16_TypeEnumDecl{._field_Token=_123442_tokens[_123517_i], });;
	if ((_123617_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _123617_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123617_e.get()._field_Ident=_123617_e.get()._field_Token.get()._field_Kind;
	_123517_i+=3LL;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _124617_itemTokens = _1aca87105_range(_123517_i,jule::Str("{", 1),jule::Str("}", 1),_123442_tokens);;
	if ((_124617_itemTokens == nullptr)) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _123617_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123617_e;
	} else if ((_123517_i < _123442_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _123442_tokens[_123517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123617_e.get()._field_End=_123442_tokens[(_123517_i - 1LL)];
	_123617_e.get()._field_Items=_1aca91ede_buildTypeEnumItems(_self_, _124617_itemTokens);
	return _123617_e;
}



inline jule::Ptr<_1b3950847_Expr> _1aca926a4_buildEnumItemExpr(jule::Ptr<_1aca88e1a_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b082a00a:;
						{
							(_126117_braceN)++;
							goto _iter_next_1b0829845;
						}
					}
					else {
						_case_begin_1b082a8bd:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1b082a6ae:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1b0829845;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e6a5c800_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1aca89ea4_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_1b0829845:;
	}
	_iter_end_1b0829845:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>> _1aca929b2_buildEnumItems(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_1b39642d9_EnumItemDecl> _129721_item = jule::new_ptr<_1b39642d9_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1aca89877_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1b082e394;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1aca89877_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1b082e394;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1aca89877_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1b082e394;
			};
			_129721_item.get()._field_Expr=_1aca926a4_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1b082e394:;
	}
	_iter_end_1b082e394:;;
	return _129317_items;
}



inline jule::Ptr<_1b3964d12_EnumDecl> _1aca92cc0_buildEnumDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1aca89877_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b3964d12_EnumDecl> _133417_e = jule::new_ptr<_1b3964d12_EnumDecl>(_1b3964d12_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _1aca8b291_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_1aca8924a_stop(_self_.ptr());
			_1aca89877_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _135917_itemTokens = _1aca87105_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1aca929b2_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _1aca930cd_buildNodeEnumDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _137342_tokens) {
	if (((_137342_tokens.len() > 3LL) && (_137342_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137342_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1aca922ec_buildTypeEnumDecl(_self_, _137342_tokens));
		};
	};
	return static_cast<jule::Any>(_1aca92cc0_buildEnumDecl(_self_, _137342_tokens));
}



inline jule::Ptr<_1b3966066_FieldDecl> _1aca933db_buildField(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _138234_tokens) {
	jule::Ptr<_1b3966066_FieldDecl> _138317_f = jule::new_ptr<_1b3966066_FieldDecl>();;
	_138317_f.get()._field_Public=(_138234_tokens[0LL].get()._field_Id == static_cast<jule::U64>(21LLU));
	if (_138317_f.get()._field_Public) {
		if ((_138234_tokens.len() == 1LL)) {
			_1aca89877_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(1LL);
	};
	_138317_f.get()._field_Mutable=(_138234_tokens[0LL].get()._field_Id == static_cast<jule::U64>(36LLU));
	if (_138317_f.get()._field_Mutable) {
		if ((_138234_tokens.len() == 1LL)) {
			_1aca89877_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(1LL);
	};
	_138317_f.get()._field_Token=_138234_tokens[0LL];
	if ((_138317_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _138317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138317_f.get()._field_Ident=_138317_f.get()._field_Token.get()._field_Kind;
	if ((_138234_tokens.len() == 1LL)) {
		_1aca89877_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138234_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _138234_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138234_tokens=_138234_tokens.slice(2LL);
	jule::I64 _142017_i = 0LL;;
	std::tie(_138317_f.get()._field_Kind,std::ignore) = _1aca8b291_buildType(_self_, _138234_tokens,(&(_142017_i)),true);
	if ((_142017_i < _138234_tokens.len())) {
		jule::Ptr<_1e6a5c800_Token> _142317_token = _138234_tokens[_142017_i];;
		if (((_142317_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142317_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1aca89877_pushErr(_self_.ptr(), _138234_tokens[_142017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_142017_i)++;
		if ((_142017_i >= _138234_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _142317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(_142017_i);
		_138317_f.get()._field_Default=_1aca89ea4_buildExpr(_self_, _138234_tokens);
	};
	return _138317_f;
}



inline jule::Slice<jule::Ptr<_1b3966066_FieldDecl>> _1aca936e9_buildStructDeclFields(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _144045_tokens) {
	jule::Slice<jule::Ptr<_1b3966066_FieldDecl>> _144117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _144217_stmts = _1aca6cc9a_splitStmts(_144045_tokens);;
	{
		auto &expr = _144217_stmts;
		auto it = expr.begin();
		_iter_begin_1b084c5b0:;
		if (it != expr.end()) {
			jule::Ptr<_1aca6c904_stmt> _144321_stmt = *it;
			{
				_144045_tokens=_144321_stmt.get()._field_tokens;
				jule::Ptr<_1b3966066_FieldDecl> _144521_f = _1aca933db_buildField(_self_, _144045_tokens);;
				_144117_fields = jule::alloc_for_append(_144117_fields,1);_144117_fields.__push(_144521_f);;
			}
			_iter_next_1b084c5b0:;
			++it;
			goto _iter_begin_1b084c5b0;
		}
		_iter_end_1b084c5b0:;
	};
	return _144117_fields;
}



inline jule::Ptr<_1b39668c4_StructDecl> _1aca93a07_buildStructDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _145140_tokens) {
	if ((_145140_tokens.len() < 3LL)) {
		_1aca89877_pushErr(_self_.ptr(), _145140_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145717_i = 1LL;;
	jule::Ptr<_1b39668c4_StructDecl> _145817_s = jule::new_ptr<_1b39668c4_StructDecl>(_1b39668c4_StructDecl{._field_Token=_145140_tokens[_145717_i], });;
	if ((_145817_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _145817_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145717_i)++;
	if ((_145717_i >= _145140_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _145140_tokens[_145717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145817_s;
	};
	_145817_s.get()._field_Ident=_145817_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1e6a5c800_Token> _147213_errorToken = _145140_tokens[_145717_i];;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _147317_genericsTokens = _1aca87105_range(_145717_i,jule::Str("[", 1),jule::Str("]", 1),_145140_tokens);;
	if ((_147317_genericsTokens != nullptr)) {
		_145817_s.get()._field_Generics=_1aca8ca78_buildGenerics(_self_, _147317_genericsTokens,_147213_errorToken);
	};
	if ((_145717_i >= _145140_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _145140_tokens[(_145717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145817_s;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _148317_bodyTokens = _1aca87105_range(_145717_i,jule::Str("{", 1),jule::Str("}", 1),_145140_tokens);;
	if ((_148317_bodyTokens == nullptr)) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _145817_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145817_s;
	};
	if ((_145717_i < _145140_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _145140_tokens[_145717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145817_s.get()._field_Fields=_1aca936e9_buildStructDeclFields(_self_, _148317_bodyTokens);
	_145817_s.get()._field_End=_145140_tokens[(_145717_i - 1LL)];
	return _145817_s;
}



inline void _1aca93c7c_checkMethodReceiver(_1aca88e1a_parser* _self_, jule::Ptr<_1b395d13a_FnDecl>& _149839_f) {
	if (_149839_f.get()._field_Statically) {
		if (((_149839_f.get()._field_Params.len() > 0LL) && _1b395c17d_IsSelf(_149839_f.get()._field_Params[0LL].ptr()))) {
			_1aca89877_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149839_f.get()._field_Params.len() == 0LL)) {
		_1aca89877_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b395bd1a_ParamDecl> _151113_param = _149839_f.get()._field_Params[0LL];;
	if ((!(_1b395c17d_IsSelf(_151113_param.ptr())))) {
		_1aca89877_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1b395d13a_FnDecl>> _1aca9408a_buildTraitMethods(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _151841_tokens) {
	jule::Slice<jule::Ptr<_1b395d13a_FnDecl>> _151917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _152017_stmts = _1aca6cc9a_splitStmts(_151841_tokens);;
	{
		auto &expr = _152017_stmts;
		auto it = expr.begin();
		_iter_begin_1b085b9dc:;
		if (it != expr.end()) {
			jule::Ptr<_1aca6c904_stmt> _152121_stmt = *it;
			{
				_151841_tokens=_152121_stmt.get()._field_tokens;
				if ((_151841_tokens.len() == 0LL)) {
					goto _iter_next_1b085b9dc;
				};
				jule::Bool _152721_isPub = false;;
				if ((_151841_tokens[0LL].get()._field_Id == static_cast<jule::U64>(21LLU))) {
					_152721_isPub=true;
					if ((_151841_tokens.len() == 1LL)) {
						_1aca89877_pushErr(_self_.ptr(), _151841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1b085b9dc;
					};
					_151841_tokens=_151841_tokens.slice(1LL);
				};
				jule::Ptr<_1b395d13a_FnDecl> _153721_f = _1aca903d8_buildFn(_self_, _151841_tokens,true,true);;
				if ((_153721_f != nullptr)) {
					if (_1b395d48c_IsAnon(_153721_f.ptr())) {
						_1aca89877_pushErr(_self_.ptr(), _153721_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1aca93c7c_checkMethodReceiver(_self_.ptr(), _153721_f);
					if ((_153721_f.get()._field_Generics.len() > 0LL)) {
						_1aca89877_pushErr(_self_.ptr(), _153721_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_153721_f.get()._field_Public=_152721_isPub;
					_151917_methods = jule::alloc_for_append(_151917_methods,1);_151917_methods.__push(_153721_f);;
				};
			}
			_iter_next_1b085b9dc:;
			++it;
			goto _iter_begin_1b085b9dc;
		}
		_iter_end_1b085b9dc:;
	};
	return _151917_methods;
}



inline jule::Ptr<_1b3966ece_TraitDecl> _1aca94398_buildTraitDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _155339_tokens) {
	if ((_155339_tokens.len() < 3LL)) {
		_1aca89877_pushErr(_self_.ptr(), _155339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b3966ece_TraitDecl> _155817_t = jule::new_ptr<_1b3966ece_TraitDecl>(_1b3966ece_TraitDecl{._field_Token=_155339_tokens[1LL], });;
	if ((_155817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _155817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_155817_t.get()._field_Ident=_155817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _156617_i = 2LL;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _156717_bodyTokens = _1aca87105_range(_156617_i,jule::Str("{", 1),jule::Str("}", 1),_155339_tokens);;
	if ((_156717_bodyTokens == nullptr)) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _155817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_156617_i < _155339_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _155339_tokens[_156617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_155817_t.get()._field_Methods=_1aca9408a_buildTraitMethods(_self_, _156717_bodyTokens);
	_155817_t.get()._field_End=_155339_tokens[(_156617_i - 1LL)];
	return _155817_t;
}



inline jule::Ptr<_1b395d13a_FnDecl> _1aca946a6_buildCppLinkFn(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _158238_tokens) {
	_158238_tokens=_158238_tokens.slice(1LL);
	jule::Ptr<_1b395d13a_FnDecl> _158417_f = _1aca903d8_buildFn(_self_, _158238_tokens,false,true);;
	if ((_158417_f != nullptr)) {
		if (_1b395d48c_IsAnon(_158417_f.ptr())) {
			_1aca89877_pushErr(_self_.ptr(), _158417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_158417_f.get()._field_CppLinked=true;
	};
	return _158417_f;
}



inline jule::Ptr<_1b395e119_VarDecl> _1aca949b4_buildCppLinkVar(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _159439_tokens) {
	_159439_tokens=_159439_tokens.slice(1LL);
	jule::Ptr<_1b395e119_VarDecl> _159617_v = _1aca8c3b3_buildVar(_self_, _159439_tokens);;
	if ((_159617_v != nullptr)) {
		_159617_v.get()._field_CppLinked=true;
		if ((_159617_v.get()._field_Expr != nullptr)) {
			_1aca89877_pushErr(_self_.ptr(), _159617_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _159617_v;
}



inline jule::Ptr<_1b39668c4_StructDecl> _1aca94cc2_buildCppLinkStruct(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _160642_tokens) {
	_160642_tokens=_160642_tokens.slice(1LL);
	jule::Ptr<_1b39668c4_StructDecl> _160817_s = _1aca93a07_buildStructDecl(_self_, _160642_tokens);;
	if ((_160817_s != nullptr)) {
		_160817_s.get()._field_CppLinked=true;
	};
	return _160817_s;
}



inline jule::Ptr<_1b396297a_TypeAliasDecl> _1aca950d0_buildCppLinkTypeAlias(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _161545_tokens) {
	_161545_tokens=_161545_tokens.slice(1LL);
	jule::Ptr<_1b396297a_TypeAliasDecl> _161717_t = _1aca8b59e_buildTypeAliasDecl(_self_, _161545_tokens);;
	if ((_161717_t != nullptr)) {
		_161717_t.get()._field_CppLinked=true;
	};
	return _161717_t;
}



inline jule::Ptr<_1b3963d66_UseDecl> _1aca953dd_buildCppLinkUse(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _162439_tokens) {
	if ((_162439_tokens.len() == 1LL)) {
		_1aca89877_pushErr(_self_.ptr(), _162439_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162439_tokens=_162439_tokens.slice(1LL);
	;
	return _1aca91829_buildUseDecl(_self_.ptr(), _162439_tokens,true);
}



inline jule::Any _1aca956eb_buildCppLink(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _163537_tokens) {
	jule::Ptr<_1e6a5c800_Token> _163617_token = _163537_tokens[0LL];;
	if ((_163537_tokens.len() == 1LL)) {
		_1aca89877_pushErr(_self_.ptr(), _163617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163617_token=_163537_tokens[1LL];
	{
		auto &_match_expr{ _163617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b0871914:;
			{
				return static_cast<jule::Any>(_1aca946a6_buildCppLinkFn(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b0872629:;
			{
				return static_cast<jule::Any>(_1aca949b4_buildCppLinkVar(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b0872690:;
			{
				return static_cast<jule::Any>(_1aca94cc2_buildCppLinkStruct(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b0872706:;
			{
				return static_cast<jule::Any>(_1aca950d0_buildCppLinkTypeAlias(_self_, _163537_tokens));
			}
		}
		else {
			_case_begin_1b087253b:;
			{
				_1aca89877_pushErr(_self_.ptr(), _163617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b08724c5:;
	};
	return nullptr;
}



inline jule::Ptr<_1b395d13a_FnDecl> _1aca95a09_getMethod(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _165934_tokens) {
	jule::I64 _166017_i = 0LL;;
	jule::Ptr<_1e6a5c800_Token> _166117_token = _165934_tokens[_166017_i];;
	if ((_166117_token.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		if (((_166017_i + 1LL) >= _165934_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166017_i)++;
		_166117_token=_165934_tokens[_166017_i];
	};
	if ((_166117_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		if (((_166017_i + 1LL) >= _165934_tokens.len())) {
			_1aca89877_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166017_i)++;
		_166117_token=_165934_tokens[_166017_i];
	};
	if ((_166117_token.get()._field_Id != static_cast<jule::U64>(33LLU))) {
		_1aca89877_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b395d13a_FnDecl> _168517_f = _1aca903d8_buildFn(_self_, _165934_tokens,true,false);;
	if (((_168517_f != nullptr) && _1b395d48c_IsAnon(_168517_f.ptr()))) {
		_1aca89877_pushErr(_self_.ptr(), _168517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168517_f;
}



inline void _1aca95d28_parseImplBody(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b39675d9_Impl>& _169238_ipl, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _169255_tokens) {
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _169317_stmts = _1aca6cc9a_splitStmts(_169255_tokens);;
	{
		auto &expr = _169317_stmts;
		auto it = expr.begin();
		_iter_begin_1b087aa2d:;
		if (it != expr.end()) {
			jule::Ptr<_1aca6c904_stmt> _169421_stmt = *it;
			{
				_169255_tokens=_169421_stmt.get()._field_tokens;
				jule::Ptr<_1e6a5c800_Token> _169621_token = _169255_tokens[0LL];;
				jule::Bool _169721_isPub = false;;
				{
					auto &_match_expr{ _169621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1b087c28d:;
						{
							_1aca8a537_pushDirective(_self_.ptr(), _1aca8a2b2_buildDirective(_self_.ptr(), _169255_tokens));
							goto _iter_next_1b087aa2d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1b087c337:;
						{
							_169721_isPub=true;
							if ((_169255_tokens.len() == 1LL)) {
								_1aca89877_pushErr(_self_.ptr(), _169255_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1b087aa2d;
							};
							_169255_tokens=_169255_tokens.slice(1LL);
							if ((_169255_tokens.len() > 0LL)) {
								_169621_token=_169255_tokens[0LL];
							};
						}
					}
					_match_end_1b087c227:;
				};
				{
					auto &_match_expr{ _169621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1b087b314:;
						{
							jule::Ptr<_1b395e119_VarDecl> _171625_v = _1aca8c3b3_buildVar(_self_, _169255_tokens);;
							if ((_171625_v != nullptr)) {
								_171625_v.get()._field_Public=_169721_isPub;
								_169238_ipl.get()._field_Statics = jule::alloc_for_append(_169238_ipl.get()._field_Statics,1);_169238_ipl.get()._field_Statics.__push(_171625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b087d080:;
						{
							jule::Ptr<_1b395d13a_FnDecl> _172425_f = _1aca95a09_getMethod(_self_, _169255_tokens);;
							if ((_172425_f != nullptr)) {
								_1aca93c7c_checkMethodReceiver(_self_.ptr(), _172425_f);
								_1aca96763_applyFnMeta(_self_.ptr(), _172425_f,_169721_isPub);
								_169238_ipl.get()._field_Methods = jule::alloc_for_append(_169238_ipl.get()._field_Methods,1);_169238_ipl.get()._field_Methods.__push(_172425_f);;
							};
						}
					}
					else {
						_case_begin_1b087c733:;
						{
							_1aca89877_pushErr(_self_.ptr(), _169621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1b087aa2d;
						}
					}
					_match_end_1b087e56a:;
				};
			}
			_iter_next_1b087aa2d:;
			++it;
			goto _iter_begin_1b087aa2d;
		}
		_iter_end_1b087aa2d:;
	};
}



inline jule::Ptr<_1b39675d9_Impl> _1aca96136_buildImpl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _173733_tokens) {
	jule::Ptr<_1e6a5c800_Token> _173817_token = _173733_tokens[0LL];;
	if ((_173733_tokens.len() < 2LL)) {
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _174417_i = 1LL;;
	jule::Ptr<_1b394b326_TypeDecl> _174618_base;;
	jule::Bool _174628_ok;;
	std::tie(_174618_base,_174628_ok) = _1aca8b291_buildType(_self_, _173733_tokens,(&(_174417_i)),true);
	if ((!(_174628_ok))) {
		return nullptr;
	};
	if ((_174417_i >= _173733_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b39675d9_Impl> _175517_ipl = jule::new_ptr<_1b39675d9_Impl>(_1b39675d9_Impl{._field_Base=_174618_base, });;
	_173817_token=_173733_tokens[_174417_i];
	if ((_173817_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_173817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_173817_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_175517_ipl.get()._field_Base,_175517_ipl.get()._field_Dest) = std::make_tuple(_175517_ipl.get()._field_Dest,_175517_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_174417_i)++;
	if ((_174417_i >= _173733_tokens.len())) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_175517_ipl.get()._field_Dest,_174628_ok) = _1aca8b291_buildType(_self_, _173733_tokens,(&(_174417_i)),true);
	if ((!(_174628_ok))) {
		return nullptr;
	};
	if ((_174417_i >= _173733_tokens.len())) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _179317_bodyTokens = _1aca87105_range(_174417_i,jule::Str("{", 1),jule::Str("}", 1),_173733_tokens);;
	if ((_179317_bodyTokens == nullptr)) {
		_1aca8924a_stop(_self_.ptr());
		_1aca89877_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_174417_i < _173733_tokens.len())) {
		_1aca89877_pushErr(_self_.ptr(), _173733_tokens[_174417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_175517_ipl.get()._field_End=_173733_tokens[(_174417_i - 1LL)];
	_1aca95d28_parseImplBody(_self_, _175517_ipl,_179317_bodyTokens);
	return _175517_ipl;
}



inline jule::Any _1aca96444_buildNodeData(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _180838_tokens) {
	jule::Ptr<_1e6a5c800_Token> _180917_token = _180838_tokens[0LL];;
	{
		auto &_match_expr{ _180917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b08904d2:;
			{
				jule::Ptr<_1b395d13a_FnDecl> _181321_f = _1aca903d8_buildFn(_self_, _180838_tokens,false,false);;
				if ((_181321_f != nullptr)) {
					_181321_f.get()._field_Global=true;
					if (_1b395d48c_IsAnon(_181321_f.ptr())) {
						_1aca89877_pushErr(_self_.ptr(), _181321_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_181321_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1b0890548:;
			{
				return static_cast<jule::Any>(_1aca8c3b3_buildVar(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b0890c52:;
			{
				return static_cast<jule::Any>(_1aca8b59e_buildTypeAliasDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1b0890cb8:;
			{
				return _1aca930cd_buildNodeEnumDecl(_self_, _180838_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b0890d2e:;
			{
				return static_cast<jule::Any>(_1aca93a07_buildStructDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b0890d95:;
			{
				return static_cast<jule::Any>(_1aca94398_buildTraitDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b0890e0b:;
			{
				return static_cast<jule::Any>(_1aca96136_buildImpl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b0890e83:;
			{
				return _1aca956eb_buildCppLink(_self_, _180838_tokens);
			}
		}
		else {
			_case_begin_1b08903c2:;
			{
				_1aca89877_pushErr(_self_.ptr(), _180917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0890328:;
	};
}



inline void _1aca96763_applyFnMeta(_1aca88e1a_parser* _self_, jule::Ptr<_1b395d13a_FnDecl>& _184435_f, jule::Bool _184447_isPub) {
	_184435_f.get()._field_Public=_184447_isPub;
	_184435_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1aca96a82_applyMeta(_1aca88e1a_parser* _self_, _1b3917732_Node& _185033_node, jule::Bool _185045_isPub) {
	{
		auto &_match_expr{ _185033_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1b395e119_VarDecl>>()) {
			_case_begin_1b0897ae4:;
			{
				jule::Ptr<_1b395e119_VarDecl> _185321_v = _185033_node._field_Data.operator jule::Ptr<_1b395e119_VarDecl>();;
				if ((_185321_v == nullptr)) {
					return;;
				};
				_185321_v.get()._field_Public=_185045_isPub;
				_185321_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b395d13a_FnDecl>>()) {
			_case_begin_1b0897242:;
			{
				jule::Ptr<_1b395d13a_FnDecl> _186121_f = _185033_node._field_Data.operator jule::Ptr<_1b395d13a_FnDecl>();;
				if ((_186121_f == nullptr)) {
					return;;
				};
				_1aca96763_applyFnMeta(&(*_self_), _186121_f,_185045_isPub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396297a_TypeAliasDecl>>()) {
			_case_begin_1b08972b9:;
			{
				jule::Ptr<_1b396297a_TypeAliasDecl> _186721_tad = _185033_node._field_Data.operator jule::Ptr<_1b396297a_TypeAliasDecl>();;
				if ((_186721_tad == nullptr)) {
					return;;
				};
				_186721_tad.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3964d12_EnumDecl>>()) {
			_case_begin_1b0897341:;
			{
				jule::Ptr<_1b3964d12_EnumDecl> _187321_ed = _185033_node._field_Data.operator jule::Ptr<_1b3964d12_EnumDecl>();;
				if ((_187321_ed == nullptr)) {
					return;;
				};
				_187321_ed.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3965a16_TypeEnumDecl>>()) {
			_case_begin_1b089764e:;
			{
				jule::Ptr<_1b3965a16_TypeEnumDecl> _187921_ted = _185033_node._field_Data.operator jule::Ptr<_1b3965a16_TypeEnumDecl>();;
				if ((_187921_ted == nullptr)) {
					return;;
				};
				_187921_ted.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39668c4_StructDecl>>()) {
			_case_begin_1b08976b5:;
			{
				jule::Ptr<_1b39668c4_StructDecl> _188521_sd = _185033_node._field_Data.operator jule::Ptr<_1b39668c4_StructDecl>();;
				if ((_188521_sd == nullptr)) {
					return;;
				};
				_188521_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_188521_sd.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3966ece_TraitDecl>>()) {
			_case_begin_1b089772b:;
			{
				jule::Ptr<_1b3966ece_TraitDecl> _189321_td = _185033_node._field_Data.operator jule::Ptr<_1b3966ece_TraitDecl>();;
				if ((_189321_td == nullptr)) {
					return;;
				};
				_189321_td.get()._field_Public=_185045_isPub;
			}
		}
		else {
			_case_begin_1b0897198:;
			{
				if (_185045_isPub) {
					_1aca89877_pushErr(&(*_self_), _185033_node._field_Token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b0897000:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1aca96db2_buildGeneralScopeNodeData(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _190549_st) {
	jule::Bool _190565_isPub = jule::Bool();
	jule::Any _190578_data = jule::Any();
	if ((_190549_st[0LL].get()._field_Id == static_cast<jule::U64>(21LLU))) {
		_190565_isPub=true;
		_190549_st=_190549_st.slice(1LL);
		if ((_190549_st.len() == 0LL)) {
			_1aca89877_pushErr(_self_.ptr(), _190549_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_190565_isPub,_190578_data);
		};
	};
	_190578_data=_1aca96444_buildNodeData(_self_, _190549_st);
	return std::make_tuple(_190565_isPub,_190578_data);
}



inline void _1aca970c1_pushUseDecl(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1b3963d66_UseDecl>& _192036_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_192036_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1aca89877_pushErr(_self_.ptr(), _192036_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1aca89b96_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aca973ce_pushMetaNodes(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _192838_tokens) {
	{
		auto &_match_expr{ _192838_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b08a5195:;
			{
				;
				jule::Ptr<_1b3963d66_UseDecl> _193221_decl = _1aca91829_buildUseDecl(_self_.ptr(), _192838_tokens,false);;
				_1aca970c1_pushUseDecl(_self_, _193221_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b08a520b:;
			{
				if (((_192838_tokens.len() > 1LL) && (_192838_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1b3963d66_UseDecl> _193725_decl = _1aca953dd_buildCppLinkUse(_self_, _192838_tokens);;
					_1aca970c1_pushUseDecl(_self_, _193725_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b08a5283:;
			{
				_1aca8a537_pushDirective(_self_.ptr(), _1aca8a2b2_buildDirective(_self_.ptr(), _192838_tokens));
				return true;
			}
		}
		_match_end_1b08a5096:;
	};
	return false;
}



inline _1b3917732_Node _1aca976dc_parseNode(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _194834_st) {
	_1b3917732_Node _194917_node = _1b3917732_Node{._field_Token=_194834_st[0LL], };;
	if (_1aca973ce_pushMetaNodes(_self_, _194834_st)) {
		return _194917_node;
	};
	jule::Bool _195714_isPub;;
	jule::Any _195725_data;;
	std::tie(_195714_isPub,_195725_data) = _1aca96db2_buildGeneralScopeNodeData(_self_, _194834_st);
	if ((_195725_data == nullptr)) {
		return _194917_node;
	};
	_194917_node._field_Data=_195725_data;
	_1aca96a82_applyMeta(_self_.ptr(), _194917_node,_195714_isPub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1aca89877_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _194917_node;
}



inline void _1aca97962_appendNode(jule::Ptr<_1aca88e1a_parser> _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _197235_st) {
	if ((_197235_st.len() == 0LL)) {
		return;;
	};
	_1b3917732_Node _197617_node = _1aca976dc_parseNode(_self_, _197235_st);;
	if (((_197617_node._field_Data == nullptr) || _1aca894ae_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_197617_node);;
}



inline void _1aca97dc4_removeRange(_1aca88e1a_parser* _self_, jule::I64 _198330_i, jule::Str _198338_kind, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _198350_tokens, jule::Slice<jule::I64>& _198373_ranges) {
	jule::Str _198413_close = _1aca87e91_getCloseKindOfBrace(_198338_kind);;
	for (; (_198330_i >= 0LL); (_198330_i)--) {
		{
			jule::Ptr<_1e6a5c800_Token> _198617_tok = _198350_tokens[_198373_ranges[_198330_i]];;
			if ((_198617_tok.get()._field_Kind != _198413_close)) {
				goto _iter_next_1b08aeb0b;
			};
			_198373_ranges=jule::append(_198373_ranges.slice(0LL,_198330_i),_198373_ranges.slice((_198330_i + 1LL)));
			goto _iter_end_1b08aeb0b;
		}
	_iter_next_1b08aeb0b:;
	}
	_iter_end_1b08aeb0b:;;
}



inline void _1aca9828c_pushWrongOrderCloseErr(_1aca88e1a_parser* _self_, jule::Ptr<_1e6a5c800_Token>& _199542_t, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _199554_tokens, jule::Slice<jule::I64>& _199573_ranges) {
	{
		auto &_match_expr{ _199554_tokens[_199573_ranges[(_199573_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1b08b1e1b:;
			{
				_1aca89877_pushErr(&(*_self_), _199542_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1b08b1e93:;
			{
				_1aca89877_pushErr(&(*_self_), _199542_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1b08b201a:;
			{
				_1aca89877_pushErr(&(*_self_), _199542_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b08b1cd9:;
	};
}



inline void _1aca986ee_pushRangeClose(_1aca88e1a_parser* _self_, jule::Ptr<_1e6a5c800_Token> _200633_t, jule::Str _200644_left, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _200656_tokens, jule::Slice<jule::I64>& _200679_ranges) {
	jule::I64 _200713_n = _200679_ranges.len();;
	if ((_200713_n == 0LL)) {
		{
			auto &_match_expr{ _200633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1b08b4aab:;
				{
					_1aca89877_pushErr(&(*_self_), _200633_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1b08b4b22:;
				{
					_1aca89877_pushErr(&(*_self_), _200633_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1b08b4b99:;
				{
					_1aca89877_pushErr(&(*_self_), _200633_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1b08b4858:;
		};
		return;;
	} else if ((_200656_tokens[_200679_ranges[(_200713_n - 1LL)]].get()._field_Kind != _200644_left)) {
		_1aca9828c_pushWrongOrderCloseErr(&(*_self_), _200633_t,_200656_tokens,_200679_ranges);
	};
	_1aca97dc4_removeRange(&(*_self_), static_cast<jule::I64>((_200713_n - 1LL)),_200633_t.get()._field_Kind,_200656_tokens,_200679_ranges);
}



inline void _1aca98974_checkRanges(_1aca88e1a_parser* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _202431_tokens) {
	jule::Slice<jule::I64> _202517_ranges = nullptr;;
	{
		auto &expr = _202431_tokens;
		auto it = expr.begin();
		_iter_begin_1b08b7dab:;
		if (it != expr.end()) {
			jule::I64 _202713_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> &_202716_token = *it;
			{
				if ((_202716_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1b08b7dab;
				};
				{
					auto &_match_expr{ _202716_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1b08b9143:;
						{
							_202517_ranges = jule::alloc_for_append(_202517_ranges,1);_202517_ranges.__push(_202713_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b08b91dc:;
						{
							_1aca986ee_pushRangeClose(&(*_self_), _202716_token,jule::Str("(", 1),_202431_tokens,_202517_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b08b9253:;
						{
							_1aca986ee_pushRangeClose(&(*_self_), _202716_token,jule::Str("{", 1),_202431_tokens,_202517_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b08b92b9:;
						{
							_1aca986ee_pushRangeClose(&(*_self_), _202716_token,jule::Str("[", 1),_202431_tokens,_202517_ranges);
						}
					}
					_match_end_1b08b8bc0:;
				};
			}
			_iter_next_1b08b7dab:;
			++it;
			_202713_i++;
			goto _iter_begin_1b08b7dab;
		}
		_iter_end_1b08b7dab:;
	};
	{
		auto &expr = _202517_ranges;
		auto it = expr.begin();
		_iter_begin_1b08baae5:;
		if (it != expr.end()) {
			jule::I64 _204516_i = *it;
			{
				jule::Ptr<_1e6a5c800_Token> _204617_token = _202431_tokens[_204516_i];;
				{
					auto &_match_expr{ _204617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b08bb95e:;
						{
							_1aca89877_pushErr(&(*_self_), _204617_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1b08bb9d6:;
						{
							_1aca89877_pushErr(&(*_self_), _204617_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b08bba5d:;
						{
							_1aca89877_pushErr(&(*_self_), _204617_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1b08bb893:;
				};
			}
			_iter_next_1b08baae5:;
			++it;
			goto _iter_begin_1b08baae5;
		}
		_iter_end_1b08baae5:;
	};
}



inline void _1aca98be9_parse(jule::Ptr<_1aca88e1a_parser> _self_, jule::Ptr<_1e6a62b8a_File>& _205830_f) {
	_self_.get()._field_ast=jule::new_ptr<_1b3916a1c_Ast>(_1b3916a1c_Ast{._field_File=_205830_f, });
	_1aca98974_checkRanges(_self_.ptr(), _205830_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _206817_stmts = _1aca6cc9a_splitStmts(_205830_f.get()._field_Tokens);;
	jule::I64 _207117_i = 0LL;;
	for (; (_207117_i < _206817_stmts.len()); (_207117_i)++) {
		{
			jule::Ptr<_1aca6c904_stmt> _207321_stmt = _206817_stmts[_207117_i];;
			if ((_207321_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_207321_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1b08beb2c;
			};
			if ((!(_1e6737d5a_IsTopDirective(_207321_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b08beb2c;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1aca8a2b2_buildDirective(_self_.ptr(), _207321_stmt.get()._field_tokens));;
		}
	_iter_next_1b08beb2c:;
	}
	_iter_end_1b08beb2c:;;
	_self_.get()._field_errors=nullptr;
	for (; (_207117_i < _206817_stmts.len()); (_207117_i)++) {
		{
			jule::Ptr<_1aca6c904_stmt> _209021_stmt = _206817_stmts[_207117_i];;
			_1aca97962_appendNode(_self_, _209021_stmt.get()._field_tokens);
			if (_1aca894ae_stopped(_self_.ptr())) {
				goto _iter_end_1b08c2712;
			};
		}
	_iter_next_1b08c2712:;
	}
	_iter_end_1b08c2712:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1aca89877_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aca88e1a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1aca9a778_pushErr(_1aca9a1d4_typeBuilder* _self_, jule::Ptr<_1e6a5c800_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_1aca89877_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1aca9aa97_pushSuggestion(_1aca9a1d4_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_1aca89b96_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9ad0b_buildPrim(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1b394b326_TypeDecl> _8717_t = _1aca99887_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9b070_buildNamespace(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1b394b326_TypeDecl> _9317_t = jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1b394c3e3_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1b394c3e3_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e6a5c800_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1aca9a778_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1aca9aa97_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1b08cc5b8;
			};
			(_9817_n)++;
		}
	_iter_next_1b08cc5b8:;
	}
	_iter_end_1b08cc5b8:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_1aca9b7ac_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _1aca9b2d4_buildGenerics(_1aca9a1d4_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e6a5c800_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _13117_parts = _1aca9b548_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1aca9a778_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1b394b326_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1b394b326_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1b08d5208:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1b394b326_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1aca8b291_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1aca9a778_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1b08d5208:;
			++it;
			goto _iter_begin_1b08d5208;
		}
		_iter_end_1b08d5208:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca9b548_identGenerics(_1aca9a1d4_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e6a5c800_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b08d8dcc:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b08d8e54:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_1b08d8b9b:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1b08d7a46;
			};
		}
	_iter_next_1b08d7a46:;
	}
	_iter_end_1b08d7a46:;;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _16818_parts;;
	jule::Slice<_1e6735e35_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1aca87be9_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9b7ac_buildIdent(_1aca9a1d4_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(23LLU)))) {
		return _1aca9b070_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1e6a5c800_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1b394b8dc_IdentTypeDecl> _18117_it = jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1b394b326_TypeDecl> _18717_itd = jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_1aca9b2d4_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1aca9a778_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1aca9a778_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1b394c03b_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1b394c03b_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_1b394b326_TypeDecl> _20617_ident = _1aca9b7ac_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b394b8dc_IdentTypeDecl>>()) {
			_case_begin_1b10d2608:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b394c03b_SubIdentTypeDecl>>()) {
			_case_begin_1b10d26c4:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_1b394c03b_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1b10d25a3:;
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9ba21_buildCppLink(_1aca9a1d4_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1aca9a778_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1b394b326_TypeDecl> _22517_t = _1aca9b7ac_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_1b394b8dc_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9bc85_buildFn(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1b395d13a_FnDecl> _23217_f = _1aca8ee87_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1b395d48c_IsAnon(_23217_f.ptr())))) {
		_1aca9a778_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9bee9_buildPtr(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1aca9a778_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394d1a2_PtrTypeDecl>(_1b394d1a2_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1b394b326_TypeDecl> _26317_elem = _1aca9d32a_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394d1a2_PtrTypeDecl>(_1b394d1a2_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c25d_buildSptr(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1aca9a778_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1b394b326_TypeDecl> _28417_elem = _1aca9d32a_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394c6ce_SptrTypeDecl>(_1b394c6ce_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c4c2_buildOp(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b10e0c76:;
			{
				return _1aca9bee9_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b10e0cdc:;
			{
				return _1aca9c25d_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b10e0d53:;
			{
				return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394c6ce_SptrTypeDecl>(_1b394c6ce_SptrTypeDecl{._field_Elem=_1aca9c25d_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1b10e0bbb:;
			{
				_1aca9a778_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1b10e0b22:;
	};
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c736_buildSlc(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1b394b326_TypeDecl> _31917_elem = _1aca9d32a_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394caca_SlcTypeDecl>(_1b394caca_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9c99a_buildArr(_1aca9a1d4_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1aca9a778_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_1b394b326_TypeDecl> _34217_elem = _1aca9d32a_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1b394d834_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1b394d834_ArrTypeDecl>(_1b394d834_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _1aca8739c_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_1e6a5c800_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_1aca89ea4_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9cd52_buildMap(_1aca9a1d4_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_1e6a5c800_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1aca9a778_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_1aca9a778_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1b394e082_MapTypeDecl> _38117_mapt = jule::new_ptr<_1b394e082_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1b394b326_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1aca8b291_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_1aca9a778_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1b394b326_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1aca8b291_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9d0b6_buildEnumerable(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1aca9a778_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1aca9c736_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1aca99bc8_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1aca9c99a_buildArr(&(*_self_));
	};
	return _1aca9cd52_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca9d32a_step(_1aca9a1d4_typeBuilder* _self_) {
	jule::Ptr<_1e6a5c800_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b0eb7d90:;
			{
				return _1aca9ad0b_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b0eb7c80:;
			{
				return _1aca9b7ac_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b0eb7ce6:;
			{
				return _1aca9ba21_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b0eb71ad:;
			{
				return _1aca9bc85_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b0eb7224:;
			{
				return _1aca9c4c2_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b0eb728a:;
			{
				return _1aca9d0b6_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1b0eb7147:;
			{
				((*((*_self_)._field_i)))++;
				_1aca9a778_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1b0eb6ec1:;
	};
}



inline std::tuple<jule::Ptr<_1b394b326_TypeDecl>,jule::Bool> _1aca9d58e_build(_1aca9a1d4_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1b394b326_TypeDecl> _45317_root = _1aca9d32a_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1aca99623_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1aca9a1d4_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1ecddc_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1ee790_pushErr(_1ac1ee240_directiveEval* _self_, jule::Ptr<_1e6a5c800_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1e6736375_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1ac1eeb47_splitOperans(_1ac1ee240_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b0ede38e:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1b0edd28e;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b0ede405:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1b0ede180:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1b0edd28e;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1b0edd28e:;
	}
	_iter_end_1b0edd28e:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1ac1ee790_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1ac1eee55_evalDirectiveIdent(_1ac1ee240_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1b0ee2914:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1b0ee2914:;
			++it;
			goto _iter_begin_1b0ee2914;
		}
		_iter_end_1b0ee2914:;
	};
	return false;
}



inline jule::Bool _1ac200263_evalDirectivePart(_1ac1ee240_directiveEval* _self_, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1ac1ee790_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1ac1eee55_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1ac2004c7_eval(_1ac1ee240_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1ac1ee790_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _11317_logicalOrParts = _1ac1eeb47_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1b0ee8b3a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _12021_logicalAndParts = _1ac1eeb47_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1b0eea026:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1e6a5c800_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1e6a5c800_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1e6a5c800_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1ac1ee790_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ac200263_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1b0eea026:;
						++it;
						goto _iter_begin_1b0eea026;
					}
					_iter_end_1b0eea026:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1b0ee8b3a:;
			++it;
			goto _iter_begin_1b0ee8b3a;
		}
		_iter_end_1b0ee8b3a:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac1ee240_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aca1ec91_JuleImporter> static__1aca25219_New(_1ac1ecddc_CompileInfo _5823_info) {
	jule::Ptr<_1aca1ec91_JuleImporter> _5917_imp = jule::new_ptr<_1aca1ec91_JuleImporter>(_1aca1ec91_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1e676eaa6_PathStdlib}), });;
	_1ac1ed706_initVars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _1aca2603e_AllPackages(_1aca1ec91_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1aca2786a_SetModPath(_1aca1ec91_JuleImporter* _self_, jule::Str _7533_path) {
	(*_self_)._field_mod=_7533_path;
}



inline jule::Str _1aca38826_GetModPath(_1aca1ec91_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1aca455d0_ModById(_1aca1ec91_JuleImporter* _self_, jule::I64 _8326_id) {
	return (*_self_)._field_mods[_8326_id];
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1aca4bdbc_GetImport(_1aca1ec91_JuleImporter* _self_, jule::Str _8732_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b10024c3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8732_path)) {
					return _8821_p;
				};
			}
			_iter_next_1b10024c3:;
			++it;
			goto _iter_begin_1b10024c3;
		}
		_iter_end_1b10024c3:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1b3916a1c_Ast>>,jule::Slice<_1e6735e35_Log>> _1aca53e3a_ImportPackage(_1aca1ec91_JuleImporter* _self_, jule::Str _9636_path, jule::Bool _9647_update_mod) {
	jule::Slice<jule::Ptr<_1e49337e9_DirEntry>> _9717_dirents = ({
		auto except = static__1e568c8a4_Read(_9636_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1e6735e35_Log>::make({_1aca1da4d_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9636_path))}));
		} jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>();});
	});;
	if (_9647_update_mod) {
		jule::Str _10217_newMod = _1ac20e162_FindModuleFileDeep(_9636_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1e6735e35_Log> _10525_errs = _1ac20e3e8_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1b3916a1c_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1b3916a1c_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1b1006719:;
		if (it != expr.end()) {
			jule::Ptr<_1e49337e9_DirEntry> _11316_dirent = *it;
			{
				if ((_1e4884b02_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1e6682821_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1b1006719;
				};
				jule::Str _11917__path = _1e57374cb_Join(jule::Slice<jule::Str>::make({_9636_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1e6a62b8a_File> _12021_file = _1e6a641b9_NewFileSet(_11917__path);;
				_1e6a6331c_Fill(_12021_file.ptr(), _1ac9bc920_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1e6735e35_Log> _12221_errors = _1e6a6eaed_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1aca241a2_FileInfo> _12721_finfo = _1aca6a89c_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1ac1ec00c_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b1006719;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1e6735e35_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1aca2d266_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b1006719;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1b1006719:;
			++it;
			goto _iter_begin_1b1006719;
		}
		_iter_end_1b1006719:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1aca59506_Imported(_1aca1ec91_JuleImporter* _self_, jule::Ptr<_1ac1530c8_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b100c29c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15335_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15335_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b100c29c:;
			++it;
			goto _iter_begin_1b100c29c;
		}
		_iter_end_1b100c29c:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1b100db83:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1b100db83:;
				++it;
				_16217_i++;
				goto _iter_begin_1b100db83;
			}
			_iter_end_1b100db83:;
		};
		_15335_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1e6735e35_Log>> _1aca2d266_isPassBuildDirectives(_1aca1ec91_JuleImporter* _self_, jule::Ptr<_1b3916a1c_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1b1011e0b:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1b1011e0b;
				};
				_1ac1ee240_directiveEval _18421_de = _1ac1ee240_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1ac2004c7_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1b1011e0b:;
			++it;
			goto _iter_begin_1b1011e0b;
		}
		_iter_end_1b1011e0b:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aca1ec91_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca9e507_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b103426e_isCommonOrdered(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>& _1835_s, jule::Ptr<_1b393b9dc_Struct> _1844_t) {
	jule::Ptr<_1b393b9dc_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1b393b9dc_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1b10371a6:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1b10371a6;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1b10371a6:;
			++it;
			goto _iter_begin_1b10371a6;
		}
		_iter_end_1b10371a6:;
	};
	return false;
}

inline jule::Bool _1b103c62e_isCommonOrdered(jule::Slice<jule::Ptr<_1ac17c960_Var>>& _1835_s, jule::Ptr<_1ac17c960_Var> _1844_t) {
	jule::Ptr<_1ac17c960_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1ac17c960_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1b1040522:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1b1040522;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1b1040522:;
			++it;
			goto _iter_begin_1b1040522;
		}
		_iter_end_1b1040522:;
	};
	return false;
}



inline void _1b10302ae_orderCommon(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1b1031612:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1b393b9dc_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1b1031612:;
			++it;
			_4114_j++;
			goto _iter_begin_1b1031612;
		}
		_iter_end_1b1031612:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1b103426e_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1b1033b86:;
			}
			_iter_end_1b1033b86:;;
		}
	_iter_next_1b103158a:;
	}
	_iter_end_1b103158a:;;
}

inline void _1b10304ce_orderCommon(jule::Slice<jule::Ptr<_1ac17c960_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1b10399c2:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1ac17c960_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1b10399c2:;
			++it;
			_4114_j++;
			goto _iter_begin_1b10399c2;
		}
		_iter_end_1b10399c2:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1b103c62e_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1b103c046:;
			}
			_iter_end_1b103c046:;;
		}
	_iter_next_1b103994a:;
	}
	_iter_end_1b103994a:;;
}



inline void static__1acaa012e_orderStructures(jule::Slice<jule::Ptr<_1b393b9dc_Struct>>& _6136_structs) {
	_1b10302ae_orderCommon(_6136_structs);
}



inline void static__1acaa033d_orderVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>& _6730_vars) {
	_1b10304ce_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1aca9e75a_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acb92155_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1acbc4341_optimizeChild(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac1346e7_Scope>& _3938_s) {
	jule::Ptr<_1acbc3d68_scopeDeadCode> _4017_sdc = jule::new_ptr<_1acbc3d68_scopeDeadCode>(_1acbc3d68_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1acbc6981_optimizeStmts(_4017_sdc);
	};
}



inline void _1acbc45d8_optimizeBodyChildExceptional(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac1346e7_Scope>& _5053_s) {
	jule::Ptr<_1acbc3d68_scopeDeadCode> _5117_sdc = jule::new_ptr<_1acbc3d68_scopeDeadCode>(_1acbc3d68_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1acbc6981_optimizeStmts(_5117_sdc);
	};
}



inline void _1acbc486e_optimizeBodyChild(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac1346e7_Scope>& _6142_s) {
	jule::Ptr<_1acbc3d68_scopeDeadCode> _6217_sdc = jule::new_ptr<_1acbc3d68_scopeDeadCode>(_1acbc3d68_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1acbc6981_optimizeStmts(_6217_sdc);
	};
}



inline void _1acbc4ae4_optimizeExprModel(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1acbc7cc3_exprDeadCode _7213_edc = static__1acbc83bc_new(_self_);;
	_1acbcd867_optimize(&_7213_edc, _7142_model);
}



inline void _1acbc4cc0_eliminateFollowed(_1acbc3d68_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1acbc3d68_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b10b063b:;
	}
	_iter_end_1b10b063b:;;
}



inline void _1acbc5045_pushGoto(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac137222_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b10b3067:;
	}
	_iter_end_1b10b3067:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ac137222_GotoSt>>::make({_9232_gt}));
}



inline void _1acbc52ba_pushLabel(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac136e36_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1b10b4cd3;
			};
			(_10317_i)++;
		}
	_iter_next_1b10b4cd3:;
	}
	_iter_end_1b10b4cd3:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ac136e36_Label>>::make({_10233_l}));
}



inline void _1acbc5540_optimizeRangeIter(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac136397_RangeIter> _11541_it) {
	_1acbc4ae4_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1acbc486e_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1acbc57b5_optimizeWhileIter(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac1359b2_WhileIter> _12041_it) {
	_1acbc4ae4_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1acbc67a5_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1acbc486e_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1acbc5a3a_optimizeInfIter(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac13553e_InfIter> _12839_it) {
	_1acbc486e_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1acbc5cb0_optimizeConditional(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac135253_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b10ba833:;
		if (it != expr.end()) {
			jule::Ptr<_1ac134ae3_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1acbc4ae4_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1acbc486e_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1b10ba833:;
			++it;
			goto _iter_begin_1b10ba833;
		}
		_iter_end_1b10ba833:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1acbc4341_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1acbc486e_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1acbc6035_optimizeMatch(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac138443_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b10bd490:;
		if (it != expr.end()) {
			jule::Ptr<_1ac138e8d_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b10bdd0e:;
					if (it != expr.end()) {
						jule::Ptr<_1ac1c4bb6_Data> _15225_expr = *it;
						{
							_1acbc4ae4_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1b10bdd0e:;
						++it;
						goto _iter_begin_1b10bdd0e;
					}
					_iter_end_1b10bdd0e:;
				};
				_1acbc486e_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1b10bd490:;
			++it;
			goto _iter_begin_1b10bd490;
		}
		_iter_end_1b10bd490:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1acbc4341_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1acbc486e_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1acbc62aa_optimizeAssign(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac137a4c_Assign> _16838_assign) {
	_1acbc4ae4_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1acbc4ae4_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1acbc6530_optimizeMultiAssign(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Ptr<_1ac137e04_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b10c22a7:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1acbc4ae4_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1b10c22a7:;
			++it;
			goto _iter_begin_1b10c22a7;
		}
		_iter_end_1b10c22a7:;
	};
	_1acbc4ae4_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1acbc67a5_optimizeStmt(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1346e7_Scope>>()) {
			_case_begin_1b12342a4:;
			{
				jule::Ptr<_1ac1346e7_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1ac1346e7_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1acbc6c6c_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1acbc4341_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
			_case_begin_1b123442a:;
			{
				_1acbc5540_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1ac136397_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
			_case_begin_1b1234491:;
			{
				_1acbc57b5_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1ac1359b2_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
			_case_begin_1b1234507:;
			{
				_1acbc5a3a_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1ac13553e_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac135253_Conditional>>()) {
			_case_begin_1b123457e:;
			{
				_1acbc5cb0_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1ac135253_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
			_case_begin_1b1234606:;
			{
				_1acbc6035_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1ac138443_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137a4c_Assign>>()) {
			_case_begin_1b123467d:;
			{
				_1acbc62aa_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1ac137a4c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137e04_MultiAssign>>()) {
			_case_begin_1b1234705:;
			{
				_1acbc6530_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1ac137e04_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b123477c:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _20621_d = _18236_st.operator jule::Ptr<_1ac1c4bb6_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1b12343b4;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>()) {
						_case_begin_1b1239919:;
						{
							_1acbc4cc0_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b1239e58:;
						{
							_1acbc4ae4_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1b1239e03:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1399b6_RetSt>>()) {
			_case_begin_1b1234804:;
			{
				_1acbc4cc0_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137222_GotoSt>>()) {
			_case_begin_1b123487b:;
			{
				_1acbc5045_pushGoto(_self_, _18236_st.operator jule::Ptr<_1ac137222_GotoSt>());
				_1acbc4cc0_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136e36_Label>>()) {
			_case_begin_1b1234903:;
			{
				_1acbc52ba_pushLabel(_self_, _18236_st.operator jule::Ptr<_1ac136e36_Label>());
			}
		}
		_match_end_1b12343b4:;
	};
}



inline void _1acbc6981_optimizeStmts(jule::Ptr<_1acbc3d68_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1acbc67a5_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b12395b7:;
	}
	_iter_end_1b12395b7:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acbc3d68_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1acbc7cc3_exprDeadCode static__1acbc83bc_new(jule::Ptr<_1acbc3d68_scopeDeadCode>& _4724_s) {
	return _1acbc7cc3_exprDeadCode{._field_s=_4724_s};
}



inline void _1acbc8642_binary(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b5487_BinopExprModel> _5325_m) {
	_1acbcd867_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_1acbcd867_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _1acbc88b7_unary(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b5674_UnaryExprModel> _5824_m) {
	_1acbcd867_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _1acbc8b3c_structureLit(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b5a4d_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1b1240535:;
		if (it != expr.end()) {
			jule::Ptr<_1a99b5861_StructArgExprModel> _6321_arg = *it;
			{
				_1acbcd867_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_1b1240535:;
			++it;
			goto _iter_begin_1b1240535;
		}
		_iter_end_1b1240535:;
	};
}



inline void _1acbc8db2_allocStructure(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel> _6833_m) {
	_1acbc8b3c_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _1acbc9137_casting(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b5e27_CastingExprModel> _7226_m) {
	_1acbcd867_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _1acbc93ac_args(_1acbc7cc3_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1b12427ac:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1acbcd867_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1b12427ac:;
			++it;
			goto _iter_begin_1b12427ac;
		}
		_iter_end_1b12427ac:;
	};
}



inline void _1acbc9632_funcCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b6114_FnCallExprModel> _8227_m) {
	_1acbcd867_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_1acbc93ac_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_1acbc45d8_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _1acbc98a7_slice(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b6301_SliceExprModel> _9024_m) {
	_1acbc93ac_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _1acbc9b2c_array(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b7775_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_1acbcd867_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_1acbc93ac_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _1acbc9da2_indexing(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b64dd_IndexingExprModel> _10127_m) {
	_1acbcd867_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_1acbcd867_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _1acbca127_anonFunc(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b66ca_AnonFnExprModel> _10627_m) {
	_1acbc6c6c_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _1acbca39c_map(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b6aa4_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1b12486e7:;
		if (it != expr.end()) {
			jule::Ptr<_1a99b68b7_KeyValPairExprModel> _11121_pair = *it;
			{
				_1acbcd867_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_1acbcd867_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_1b12486e7:;
			++it;
			goto _iter_begin_1b12486e7;
		}
		_iter_end_1b12486e7:;
	};
}



inline void _1acbca622_slicing(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b6c91_SlicingExprModel> _11726_m) {
	_1acbcd867_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_1acbcd867_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_1acbcd867_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _1acbca897_traitSub(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel> _12527_m) {
	_1acbcd867_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _1acbcab1c_structureSub(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b739b_StructSubIdentExprModel> _12931_m) {
	_1acbcd867_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _1acbcad92_commonSub(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel> _13328_m) {
	_1acbcd867_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _1acbcb117_tuple(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b7d3b_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b124cbd5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1c4bb6_Data> _13821_d = *it;
			{
				_1acbcd867_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_1b124cbd5:;
			++it;
			goto _iter_begin_1b124cbd5;
		}
		_iter_end_1b124cbd5:;
	};
}



inline void _1acbcb38c_newCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_1acbcd867_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _1acbcb612_outCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel> _14926_m) {
	_1acbcd867_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _1acbcb887_outlnCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel> _15328_m) {
	_1acbcd867_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _1acbcbb0c_panicCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel> _15728_m) {
	_1acbcd867_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _1acbcbd82_assertCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel> _16129_m) {
	_1acbcd867_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _1acbcc107_errorCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel> _16528_m) {
	_1acbcd867_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _1acbcc37c_makeCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_1acbcd867_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_1acbcd867_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _1acbcc602_appendCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel> _17829_m) {
	_1acbcd867_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_1acbcd867_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _1acbcc877_cloneCall(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel> _18328_m) {
	_1acbcd867_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _1acbccaec_sizeof(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b716a_SizeofExprModel> _18725_m) {
	_1acbcd867_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _1acbccd72_alignof(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b98cb_AlignofExprModel> _19126_m) {
	_1acbcd867_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _1acbcd0e7_integratedToStr(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel> _19534_m) {
	_1acbcd867_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _1acbcd36c_free(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99ba17e_FreeExprModel> _19923_m) {
	_1acbcd867_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _1acbcd5e2_backendEmit(_1acbc7cc3_exprDeadCode* _self_, jule::Ptr<_1a99b9e92_BackendEmitExprModel> _20330_m) {
	_1acbc93ac_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _1acbcd867_optimize(_1acbc7cc3_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
			_case_begin_1b1257daa:;
			{
				_1acbc8642_binary(&(*_self_), _20728_model.operator jule::Ptr<_1a99b5487_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
			_case_begin_1b1257e32:;
			{
				_1acbc88b7_unary(&(*_self_), _20728_model.operator jule::Ptr<_1a99b5674_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5a4d_StructLitExprModel>>()) {
			_case_begin_1b1257ea9:;
			{
				_1acbc8b3c_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_1a99b5a4d_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>>()) {
			_case_begin_1b1258350:;
			{
				_1acbc8db2_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5e27_CastingExprModel>>()) {
			_case_begin_1b12583b6:;
			{
				_1acbc9137_casting(&(*_self_), _20728_model.operator jule::Ptr<_1a99b5e27_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b125843d:;
			{
				_1acbc9632_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b6114_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
			_case_begin_1b12584b5:;
			{
				_1acbc98a7_slice(&(*_self_), _20728_model.operator jule::Ptr<_1a99b6301_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7775_ArrayExprModel>>()) {
			_case_begin_1b125853c:;
			{
				_1acbc9b2c_array(&(*_self_), _20728_model.operator jule::Ptr<_1a99b7775_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b64dd_IndexingExprModel>>()) {
			_case_begin_1b12585b4:;
			{
				_1acbc9da2_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1a99b64dd_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b66ca_AnonFnExprModel>>()) {
			_case_begin_1b125863b:;
			{
				_1acbca127_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_1a99b66ca_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6aa4_MapExprModel>>()) {
			_case_begin_1b12586b3:;
			{
				_1acbca39c_map(&(*_self_), _20728_model.operator jule::Ptr<_1a99b6aa4_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6c91_SlicingExprModel>>()) {
			_case_begin_1b125873a:;
			{
				_1acbca622_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1a99b6c91_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
			_case_begin_1b12587b2:;
			{
				_1acbca897_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b1258839:;
			{
				_1acbcab1c_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>>()) {
			_case_begin_1b12588b1:;
			{
				_1acbcad92_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7d3b_TupleExprModel>>()) {
			_case_begin_1b1258938:;
			{
				_1acbcb117_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1a99b7d3b_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>>()) {
			_case_begin_1b12589b0:;
			{
				_1acbcb612_outCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b1258a37:;
			{
				_1acbcb887_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>>()) {
			_case_begin_1b1258aae:;
			{
				_1acbcb38c_newCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b1258b36:;
			{
				_1acbcbb0c_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b1258bad:;
			{
				_1acbcbd82_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b1258c35:;
			{
				_1acbcc107_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b1258cac:;
			{
				_1acbcc37c_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b1258d34:;
			{
				_1acbcc602_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b1258dab:;
			{
				_1acbcc877_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b716a_SizeofExprModel>>()) {
			_case_begin_1b1258e33:;
			{
				_1acbccaec_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1a99b716a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b98cb_AlignofExprModel>>()) {
			_case_begin_1b1258eaa:;
			{
				_1acbccd72_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1a99b98cb_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>>()) {
			_case_begin_1b1259032:;
			{
				_1acbcd0e7_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99ba17e_FreeExprModel>>()) {
			_case_begin_1b12590a9:;
			{
				_1acbcd36c_free(&(*_self_), _20728_model.operator jule::Ptr<_1a99ba17e_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9e92_BackendEmitExprModel>>()) {
			_case_begin_1b1259131:;
			{
				_1acbcd5e2_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_1a99b9e92_BackendEmitExprModel>());
			}
		}
		_match_end_1b12580a8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acbc7cc3_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b256d587_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b25d173d_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b7901e_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b25dd283_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b6b53e_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9ace606_scopeOptimizer> static__1b257d9a4_new(jule::Ptr<_1ac1346e7_Scope> _4523_scope) {
	return jule::new_ptr<_1a9ace606_scopeOptimizer>(_1a9ace606_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1b2596208_setCurrentStmt(_1a9ace606_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1b25b12bc_optimizeData(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac1c4bb6_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b1293973:;
			{
				jule::Ptr<_1a99b6114_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1a99b6114_FnCallExprModel>();;
				if (_1e47d71b4_Production) {
					if (((!(_1a99c174b_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1b25d6721_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1b2596208_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b1293764:;
	};
	static__1a9ac5d17_optimize(_5535_d.get()._field_Model);
}



inline void _1b25b3115_optimizeVar(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac17c960_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1a9ac5d17_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1b25b4303_optimizeConditional(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac135253_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b1296a75:;
		if (it != expr.end()) {
			jule::Ptr<_1ac134ae3_If> _7721_elif = *it;
			{
				static__1a9ac5d17_optimize(_7721_elif.get()._field_Expr);
				_1b25d5159_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1b1296a75:;
			++it;
			goto _iter_begin_1b1296a75;
		}
		_iter_end_1b1296a75:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1b25d5159_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1b2635891_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b1298a00:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1ac134ae3_If> _9221_elif = *it;
			{
				if ((!(_1b2638630_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1b1298a00;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1ac134dce_Else>(_1ac134dce_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1b1298a00;
			}
			_iter_next_1b1298a00:;
			++it;
			_9214_i++;
			goto _iter_begin_1b1298a00;
		}
		_iter_end_1b1298a00:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac134ae3_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1ac134ae3_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1a9a89c76_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1b129bd44:;
	}
	_iter_end_1b129bd44:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b129d5a4:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1ac134ae3_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1b129d5a4:;
			++it;
			_12913_j++;
			goto _iter_begin_1b129d5a4;
		}
		_iter_end_1b129d5a4:;
	};
	if ((_12817_only != -1LL)) {
		_1b2596208_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1b25b4a51_buildDefaultConstatTrueCase(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac138e8d_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1ac138443_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b12a0c9e;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1ac139543_FallSt>>()) {
					_case_begin_1b12a1662:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1b12a0c9e;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1b12a2ba2:;
					{
						goto _iter_end_1b12a0c9e;
					}
				}
				_match_end_1b12a2ab4:;
			};
		}
	_iter_next_1b12a0c9e:;
	}
	_iter_end_1b12a0c9e:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1b25b6646_optimizeMatch(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac138443_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b12a4c5e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac138e8d_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b12a5600:;
					if (it != expr.end()) {
						jule::Ptr<_1ac1c4bb6_Data> _17325_expr = *it;
						{
							static__1a9ac5d17_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1b12a5600:;
						++it;
						goto _iter_begin_1b12a5600;
					}
					_iter_end_1b12a5600:;
				};
				_1b25d5159_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1b12a4c5e:;
			++it;
			goto _iter_begin_1b12a4c5e;
		}
		_iter_end_1b12a4c5e:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1b25d5159_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1b2635891_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b12a737c:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1ac138e8d_Case> _18925_case = *it;
			{
				if ((!(_1b265d9da_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1b12a737c;
				};
				_18617_constCase=true;
				_1b25b4a51_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1b12a737c;
			}
			_iter_next_1b12a737c:;
			++it;
			_18918_i++;
			goto _iter_begin_1b12a737c;
		}
		_iter_end_1b12a737c:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac138e8d_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1ac138e8d_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1a9a9bb89_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1b12aa22b:;
	}
	_iter_end_1b12aa22b:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b12ab3c5:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1ac138e8d_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1b12ab3c5:;
			++it;
			_21913_j++;
			goto _iter_begin_1b12ab3c5;
		}
		_iter_end_1b12ab3c5:;
	};
	if ((_21817_only != -1LL)) {
		_1b2596208_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1b25b7834_optimizeRangeIter(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac136397_RangeIter> _23540_it) {
	static__1a9ac5d17_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1b25d5159_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1b25b8082_optimizeWhileIter(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac1359b2_WhileIter> _24040_it) {
	static__1a9ac5d17_optimize(_24040_it.get()._field_Expr);
	_1b25d2211_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1b25d5159_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1b25c0919_substr(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac137a4c_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6c91_SlicingExprModel>>()) {
			_case_begin_1b12b0110:;
			{
				jule::Ptr<_1a99b6c91_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1a99b6c91_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1b2596208_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1b25dd283_MutSlicingExprModel>(_1b25dd283_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1b12b00aa:;
	};
	return false;
}



inline jule::Bool _1b25c1497_strInsert(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac137a4c_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
			_case_begin_1b12b251e:;
			{
				jule::Ptr<_1a99b5487_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1a99b5487_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1b2596208_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1a9b6b53e_StrInsertBeginExprModel>(_1a9b6b53e_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1b12b24b9:;
	};
	return false;
}



inline jule::Bool _1b25c2355_strAssign(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac137a4c_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1a9a09663_Prim> _28213_lp = _1a9a06c9d_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1a9a0c897_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1b25c0919_substr(&(*_self_), _27832_a) || _1b25c1497_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1b12b5e4b:;
			{
				return true;
			}
		}
		_match_end_1b12b5db3:;
	};
	return false;
}



inline void _1b25b649d_optimizeAssign(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac137a4c_Assign> _29437_assign) {
	if ((_1b25786a2_Copy && _1b25c2355_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1a9ac5d17_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1a9ac5d17_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b12b7e1a:;
			{
				if ((_1b25b2dd4_Math && (_1a9a08200_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1a99b5487_BinopExprModel>(_1a99b5487_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1a9ac5d17_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
							_case_begin_1b12ba0b5:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1a99b529a_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1b12ba1d6:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1b12b7d60:;
	};
	if (_1b25b0a5d_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>>()) {
				_case_begin_1b12bbe74:;
				{
					jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
							_case_begin_1b12bcedb:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>() || _match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
										_case_begin_1b12bd7c2:;
										{
											_1b2596208_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1a9b7901e_PushToSliceExprModel>(_1a9b7901e_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1a99b6301_SliceExprModel>()})));
										}
									}
									_match_end_1b12bd76c:;
								};
							}
						}
						_match_end_1b12bcd32:;
					};
				}
			}
			_match_end_1b12b8998:;
		};
	};
}



inline void _1b25c3323_optimizeMultiAssign(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac137e04_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b12b836b:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1a9ac5d17_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1b12b836b:;
			++it;
			_34514_i++;
			goto _iter_begin_1b12b836b;
		}
		_iter_end_1b12b836b:;
	};
	static__1a9ac5d17_optimize(_34442_assign.get()._field_R);
}



inline void _1b25c41d1_optimizeRet(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac1399b6_RetSt> _35434_r) {
	static__1a9ac5d17_optimize(_35434_r.get()._field_Expr);
}



inline void _1b25d2211_optimizeStmt(_1a9ace606_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1346e7_Scope>>()) {
			_case_begin_1b12c1495:;
			{
				_1b25d5159_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac1346e7_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b12c150b:;
			{
				_1b25b12bc_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac1c4bb6_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b12c1572:;
			{
				_1b25b3115_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac17c960_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac135253_Conditional>>()) {
			_case_begin_1b12c15d8:;
			{
				_1b25b4303_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac135253_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
			_case_begin_1b12c164e:;
			{
				_1b25b7834_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac136397_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
			_case_begin_1b12c16b5:;
			{
				_1b25b8082_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac1359b2_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
			_case_begin_1b12c172b:;
			{
				_1b25d5159_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac13553e_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137a4c_Assign>>()) {
			_case_begin_1b12c1792:;
			{
				_1b25b649d_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac137a4c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137e04_MultiAssign>>()) {
			_case_begin_1b12c1808:;
			{
				_1b25c3323_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac137e04_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
			_case_begin_1b12c1880:;
			{
				_1b25b6646_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac138443_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1399b6_RetSt>>()) {
			_case_begin_1b12c1907:;
			{
				_1b25c41d1_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1ac1399b6_RetSt>());
			}
		}
		_match_end_1b12c1341:;
	};
}



inline void _1b25d5159_optimizeChild(_1a9ace606_scopeOptimizer* _self_, jule::Ptr<_1ac1346e7_Scope> _38536_child) {
	jule::Ptr<_1a9ace606_scopeOptimizer> _38617_so = static__1b257d9a4_new(_38536_child);;
	_1b25d5b93_optimize(_38617_so.ptr());
}



inline void _1b25d5b93_optimize(_1a9ace606_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b12c7831:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1b25d2211_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1b12c7831:;
			++it;
			_39214_i++;
			goto _iter_begin_1b12c7831;
		}
		_iter_end_1b12c7831:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9ace606_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9ac5d17_optimize(jule::Any& _5529_model) {
	if (_1acace59d_exprEnabled) {
		jule::Ptr<_1b25d042e_exprOptimizer> _5821_exop = jule::new_ptr<_1b25d042e_exprOptimizer>(_1b25d042e_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_1aa0bbce1_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1a9acd3a2_strCond(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5487_BinopExprModel> _6526_m) {
	jule::Ptr<_1a9a09663_Prim> _6613_lp = _1a9a06c9d_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1a9a0c897_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b12d1e67:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1b12d1e12:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b12d2e68:;
			{
				goto _match_end_1b12d2d7a;
			}
		}
		else {
			_case_begin_1b12d2de1:;
			{
				return true;
			}
		}
		_match_end_1b12d2d7a:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a9956c86_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a9956c86_Const>();;
	if ((!(_1a99ad64a_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b12d472d:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b12d4794:;
			{
				jule::Ptr<_1e6a5c800_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1a99b5674_UnaryExprModel>(_1a99b5674_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7b4e_CommonSubIdentExprModel>(_1a99b7b4e_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_1b12d460c:;
	};
	return true;
}



inline void _1a9b6c133_binary(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5487_BinopExprModel> _11325_m) {
	static__1a9ac5d17_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__1a9ac5d17_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b12d8732:;
			{
				goto _match_end_1b12d8204;
			}
		}
		else {
			_case_begin_1b12d829d:;
			{
				return;;
			}
		}
		_match_end_1b12d8204:;
	};
	if ((_1b2635891_Cond && _1a9acd3a2_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1b25b2dd4_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b12d9403:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1aa0bbe23_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1a9956c86_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a9956c86_Const>();;
					_1a99ae5e6_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b12d9469:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1aa0bbe23_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1a9956c86_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a9956c86_Const>();;
					_1a99ae5e6_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b12d94e1:;
			{
				jule::Ptr<_1a9956c86_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1a9956c86_Const>();;
				jule::F64 _15017_d = _1a99ae0eb_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1a99ae371_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b12d939d:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1b256d587_UnsafeBinopExprModel>(_1b256d587_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1aa028434_unary(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5674_UnaryExprModel> _16024_m) {
	static__1a9ac5d17_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_1b2635363_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
				_case_begin_1b12e17a1:;
				{
					jule::Ptr<_1a99b5674_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1a99b5674_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b12e174b:;
		};
	};
}



inline void _1aa0474db_structureLit(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5a4d_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1b12e32ec:;
		if (it != expr.end()) {
			jule::Ptr<_1a99b5861_StructArgExprModel> _17421_arg = *it;
			{
				static__1a9ac5d17_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_1b12e32ec:;
			++it;
			goto _iter_begin_1b12e32ec;
		}
		_iter_end_1b12e32ec:;
	};
}



inline void _1b25da46c_allocStructure(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel> _17933_m) {
	_1aa0474db_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _1a9ab3a3b_casting(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b5e27_CastingExprModel> _18326_m) {
	static__1a9ac5d17_optimize(_18326_m.get()._field_Expr);
}



inline void _1a9ab45a8_args(_1b25d042e_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1b12e4d37:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1a9ac5d17_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1b12e4d37:;
			++it;
			_18814_i++;
			goto _iter_begin_1b12e4d37;
		}
		_iter_end_1b12e4d37:;
	};
}



inline void _1aa068364_scope(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1ac1346e7_Scope>& _19425_s) {
	jule::Ptr<_1a9ace606_scopeOptimizer> _19517_scopt = static__1b257d9a4_new(_19425_s);;
	_1b25d5b93_optimize(_19517_scopt.ptr());
}



inline void _1aa069497_funcCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b6114_FnCallExprModel> _19927_m) {
	static__1a9ac5d17_optimize(_19927_m.get()._field_Expr);
	_1a9ab45a8_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_1aa068364_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _1aa06e601_slice(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b6301_SliceExprModel> _20724_m) {
	_1a9ab45a8_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _1aa07475a_array(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b7775_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__1a9ac5d17_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_1a9ab45a8_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _1b25d1d8c_indexing(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b64dd_IndexingExprModel> _22027_m) {
	static__1a9ac5d17_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__1a9ac5d17_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_1b25b1d4a_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_1a9a079b3_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _1ac1c5579_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1b25d173d_UnsafeIndexingExprModel>(_1b25d173d_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b12ed945:;
			{
				jule::Ptr<_1ac17c960_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1ac17c960_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b12ed7e1;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
						_case_begin_1b130020a:;
						{
							jule::Ptr<_1ac17c960_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1ac17c960_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1b25d173d_UnsafeIndexingExprModel>(_1b25d173d_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1b13001a5:;
				};
			}
		}
		_match_end_1b12ed7e1:;
	};
}



inline void _1b26365d9_anonFunc(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b66ca_AnonFnExprModel> _25127_m) {
	_1aa068364_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _1aa027cb3_map(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b6aa4_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1b130288e:;
		if (it != expr.end()) {
			jule::Ptr<_1a99b68b7_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1a9ac5d17_optimize(_25621_pair.get()._field_Key);
				static__1a9ac5d17_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_1b130288e:;
			++it;
			goto _iter_begin_1b130288e;
		}
		_iter_end_1b130288e:;
	};
}



inline void _1b2580599_slicing(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b6c91_SlicingExprModel> _26226_m) {
	static__1a9ac5d17_optimize(_26226_m.get()._field_Expr);
	static__1a9ac5d17_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__1a9ac5d17_optimize(_26226_m.get()._field_Right);
	};
}



inline void _1b25829db_traitSub(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel> _27027_m) {
	static__1a9ac5d17_optimize(_27027_m.get()._field_Expr);
}



inline void _1b25c01cc_structureSub(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b739b_StructSubIdentExprModel> _27431_m) {
	static__1a9ac5d17_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _1aa079b7d_commonSub(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel> _27828_m) {
	static__1a9ac5d17_optimize(_27828_m.get()._field_Expr);
}



inline void _1b2556e33_tuple(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b7d3b_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b1305d26:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1c4bb6_Data> _28321_d = *it;
			{
				static__1a9ac5d17_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_1b1305d26:;
			++it;
			goto _iter_begin_1b1305d26;
		}
		_iter_end_1b1305d26:;
	};
}



inline void _1b25d372e_newCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__1a9ac5d17_optimize(_28826_m.get()._field_Init);
	};
}



inline void _1b25d7ce9_outCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel> _29426_m) {
	static__1a9ac5d17_optimize(_29426_m.get()._field_Expr);
}



inline void _1aa0279a5_outlnCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel> _29828_m) {
	static__1a9ac5d17_optimize(_29828_m.get()._field_Expr);
}



inline void _1aa0bae99_panicCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel> _30228_m) {
	static__1a9ac5d17_optimize(_30228_m.get()._field_Expr);
}



inline void _1aa0bb0cb_assertCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel> _30629_m) {
	static__1a9ac5d17_optimize(_30629_m.get()._field_Expr);
}



inline void _1aa0bb20d_errorCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel> _31028_m) {
	static__1a9ac5d17_optimize(_31028_m.get()._field_Err);
}



inline void _1aa0bb340_makeCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__1a9ac5d17_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__1a9ac5d17_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _1aa0bb472_appendCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel> _32329_m) {
	static__1a9ac5d17_optimize(_32329_m.get()._field_Dest);
	static__1a9ac5d17_optimize(_32329_m.get()._field_Elements);
}



inline void _1aa0bb5a4_cloneCall(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel> _32828_m) {
	static__1a9ac5d17_optimize(_32828_m.get()._field_Expr);
}



inline void _1aa0bb6d6_sizeof(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b716a_SizeofExprModel> _33225_m) {
	static__1a9ac5d17_optimize(_33225_m.get()._field_Expr);
}



inline void _1aa0bb818_alignof(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b98cb_AlignofExprModel> _33626_m) {
	static__1a9ac5d17_optimize(_33626_m.get()._field_Expr);
}



inline void _1aa0bb94a_integratedToStr(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel> _34034_m) {
	static__1a9ac5d17_optimize(_34034_m.get()._field_Expr);
}



inline void _1aa0bba7c_free(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99ba17e_FreeExprModel> _34423_m) {
	static__1a9ac5d17_optimize(_34423_m.get()._field_Expr);
}



inline void _1aa0bbbae_backendEmit(_1b25d042e_exprOptimizer* _self_, jule::Ptr<_1a99b9e92_BackendEmitExprModel> _34830_m) {
	_1a9ab45a8_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _1aa0bbce1_do(_1b25d042e_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
			_case_begin_1b130d603:;
			{
				_1a9b6c133_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b5487_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
			_case_begin_1b130d8bc:;
			{
				_1aa028434_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b5674_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5a4d_StructLitExprModel>>()) {
			_case_begin_1b130d933:;
			{
				_1aa0474db_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b5a4d_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>>()) {
			_case_begin_1b130d999:;
			{
				_1b25da46c_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5e27_CastingExprModel>>()) {
			_case_begin_1b130da10:;
			{
				_1a9ab3a3b_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b5e27_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b130da87:;
			{
				_1aa069497_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b6114_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
			_case_begin_1b130db0e:;
			{
				_1aa06e601_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b6301_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7775_ArrayExprModel>>()) {
			_case_begin_1b130db86:;
			{
				_1aa07475a_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b7775_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b64dd_IndexingExprModel>>()) {
			_case_begin_1b130dc0d:;
			{
				_1b25d1d8c_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b64dd_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b66ca_AnonFnExprModel>>()) {
			_case_begin_1b130dc85:;
			{
				_1b26365d9_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b66ca_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6aa4_MapExprModel>>()) {
			_case_begin_1b130dd0c:;
			{
				_1aa027cb3_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b6aa4_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6c91_SlicingExprModel>>()) {
			_case_begin_1b130dd84:;
			{
				_1b2580599_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b6c91_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
			_case_begin_1b130de0b:;
			{
				_1b25829db_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b130de83:;
			{
				_1b25c01cc_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>>()) {
			_case_begin_1b130e00a:;
			{
				_1aa079b7d_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7d3b_TupleExprModel>>()) {
			_case_begin_1b130e082:;
			{
				_1b2556e33_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b7d3b_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>>()) {
			_case_begin_1b130e109:;
			{
				_1b25d7ce9_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b130e181:;
			{
				_1aa0279a5_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>>()) {
			_case_begin_1b130e208:;
			{
				_1b25d372e_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b130e280:;
			{
				_1aa0bae99_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b130e307:;
			{
				_1aa0bb0cb_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b130e37e:;
			{
				_1aa0bb20d_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b130e406:;
			{
				_1aa0bb340_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b130e47d:;
			{
				_1aa0bb472_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b130e505:;
			{
				_1aa0bb5a4_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b716a_SizeofExprModel>>()) {
			_case_begin_1b130e57c:;
			{
				_1aa0bb6d6_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b716a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b98cb_AlignofExprModel>>()) {
			_case_begin_1b130e604:;
			{
				_1aa0bb818_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b98cb_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>>()) {
			_case_begin_1b130e67b:;
			{
				_1aa0bb94a_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99ba17e_FreeExprModel>>()) {
			_case_begin_1b130e703:;
			{
				_1aa0bba7c_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99ba17e_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9e92_BackendEmitExprModel>>()) {
			_case_begin_1b130e77a:;
			{
				_1aa0bbbae_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a99b9e92_BackendEmitExprModel>());
			}
		}
		_match_end_1b130d59d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b25d042e_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb9c627_Optimizer> static__1acb0b058_New(jule::Ptr<_1aca5966b_IR>& _2528_ir) {
	return jule::new_ptr<_1acb9c627_Optimizer>(_1acb9c627_Optimizer{._field_ir=_2528_ir});
}



inline void _1acacec96_optimizeGlobal(_1acb9c627_Optimizer* _self_, jule::Ptr<_1ac17c960_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1a9ac5d17_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1acb3e9a4_optimizeFunction(_1acb9c627_Optimizer* _self_, jule::Ptr<_1a99bc714_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b110c556:;
		if (it != expr.end()) {
			jule::Ptr<_1a99c03b5_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1a9ace606_scopeOptimizer> _4221_so = static__1b257d9a4_new(_4121_ins.get()._field_Scope);;
				_1b25d5b93_optimize(_4221_so.ptr());
			}
			_iter_next_1b110c556:;
			++it;
			goto _iter_begin_1b110c556;
		}
		_iter_end_1b110c556:;
	};
}



inline void _1acb43ce9_optimizeStruct(_1acb9c627_Optimizer* _self_, jule::Ptr<_1b393b9dc_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b110d9a8:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1b110e13a:;
					if (it != expr.end()) {
						jule::Ptr<_1b3944154_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1a9ac5d17_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1b110e13a:;
						++it;
						goto _iter_begin_1b110e13a;
					}
					_iter_end_1b110e13a:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b11103d3:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _5725_m = *it;
						{
							_1acb3e9a4_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1b11103d3:;
						++it;
						goto _iter_begin_1b11103d3;
					}
					_iter_end_1b11103d3:;
				};
			}
			_iter_next_1b110d9a8:;
			++it;
			goto _iter_begin_1b110d9a8;
		}
		_iter_end_1b110d9a8:;
	};
}



inline void _1acb47946_optimizeGlobals(_1acb9c627_Optimizer* _self_, jule::Ptr<_1ac156032_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b1110636:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1b111137e:;
					if (it != expr.end()) {
						jule::Ptr<_1ac17c960_Var> _6525_v = *it;
						{
							_1acacec96_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1b111137e:;
						++it;
						goto _iter_begin_1b111137e;
					}
					_iter_end_1b111137e:;
				};
			}
			_iter_next_1b1110636:;
			++it;
			goto _iter_begin_1b1110636;
		}
		_iter_end_1b1110636:;
	};
}



inline void _1acb4dc9e_optimizeFunctions(_1acb9c627_Optimizer* _self_, jule::Ptr<_1ac156032_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b11119bc:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b1112715:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _7325_func = *it;
						{
							_1acb3e9a4_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1b1112715:;
						++it;
						goto _iter_begin_1b1112715;
					}
					_iter_end_1b1112715:;
				};
			}
			_iter_next_1b11119bc:;
			++it;
			goto _iter_begin_1b11119bc;
		}
		_iter_end_1b11119bc:;
	};
}



inline void _1acb56e0b_optimizeStructs(_1acb9c627_Optimizer* _self_, jule::Ptr<_1ac156032_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b1112d53:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1b1113a9b:;
					if (it != expr.end()) {
						jule::Ptr<_1b393b9dc_Struct> _8125_s = *it;
						{
							_1acb43ce9_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1b1113a9b:;
						++it;
						goto _iter_begin_1b1113a9b;
					}
					_iter_end_1b1113a9b:;
				};
			}
			_iter_next_1b1112d53:;
			++it;
			goto _iter_begin_1b1112d53;
		}
		_iter_end_1b1112d53:;
	};
}



inline void _1acb62510_optimizePackage(_1acb9c627_Optimizer* _self_, jule::Ptr<_1ac156032_Package>& _8739_p) {
	_1acb47946_optimizeGlobals(&(*_self_), _8739_p);
	_1acb4dc9e_optimizeFunctions(&(*_self_), _8739_p);
	_1acb56e0b_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1acb66b41_Optimize(_1acb9c627_Optimizer* _self_) {
	_1acb6836d_detectEnabled();
	if (_1b25988d1_Deadcode) {
		_1acbc2949_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1acad0703_scopeEnabled || _1acace59d_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1b1114195:;
			if (it != expr.end()) {
				jule::Ptr<_1ac1530c8_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1acb62510_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1b1114195:;
				++it;
				goto _iter_begin_1b1114195;
			}
			_iter_end_1b1114195:;
		};
		_1acb62510_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1b25988d1_Deadcode) {
		_1acbc76eb_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1acb9c627_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac567cc3_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ac5690d2_Print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1ac567cc3_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ac568da1_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ac56aa84_LogFlat(_1e6735e35_Log& _1428_l) {
	jule::outln(_1428_l._field_Text);
}



inline void static__1ac56ac93_LogError(_1e6735e35_Log& _1929_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1929_l._field_Text);
	static__1ac567cc3_Reset();
	if ((_1929_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1929_l._field_Path);
	};
	if (((_1929_l._field_Row != 0LL) && (_1929_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ac11bcc8_Itoa(_1929_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ac11bcc8_Itoa(_1929_l._field_Column));
	};
	if ((_1929_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1e66b6129_TrimLeft(_1929_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1929_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1e66b6129_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ac11bcc8_Itoa(_1929_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1e6646340_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1e6646340_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1929_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1929_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1e6646340_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ac5690d2_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1929_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ac56aea2_Log(_1e6735e35_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b1125ccd:;
			{
				static__1ac56aa84_LogFlat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b1125d44:;
			{
				static__1ac56ac93_LogError(_6524_l);
			}
		}
		_match_end_1b1125b79:;
	};
}



inline void static__1ac56b1b1_PrintLogs(jule::Slice<_1e6735e35_Log>& _7530_logs) {
	{
		auto &expr = _7530_logs;
		auto it = expr.begin();
		_iter_begin_1b111ab08:;
		if (it != expr.end()) {
			_1e6735e35_Log &_7616_l = *it;
			{
				static__1ac56aea2_Log(_7616_l);
			}
			_iter_next_1b111ab08:;
			++it;
			goto _iter_begin_1b111ab08;
		}
		_iter_end_1b111ab08:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ac11bcc8_Itoa(static_cast<jule::I64>(_7530_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56a7cb_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ac3dd6d7_Unix(_1ac3dd330_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1ac3e37ec_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1ac3e3b82_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3dd330_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ac3dd9c3_Time static__1ac3ddd69_Unix(jule::U64 _9124_sec) {
	return _1ac3dd9c3_Time{._field_sec=_9124_sec};
}



inline _1ac3dd9c3_Time static__1ac3de067_Now(void) {
	return static__1ac3ddd69_Unix(static_cast<jule::U64>(_1ac3e34ab_unix()));
}



inline jule::U64 _1ac3de4b8_Unix(_1ac3dd9c3_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1ac3de72c_Day(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1ac3de991_Month(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1ac3dec05_Year(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1ac3dee69_Second(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1ac3e01cd_Minute(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1ac3e0442_Hour(_1ac3dd9c3_Time* _self_) {
	return _1ac3e06a6_Abs(&(*_self_))._field_Hour;
}



inline _1ac3dd330_AbsTime _1ac3e06a6_Abs(_1ac3dd9c3_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1ac3dc8c3_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1ac3dc8c3_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1b1152c72:;
	}
	_iter_end_1b1152c72:;;
	_1ac3dd330_AbsTime _17417_t = _1ac3dd330_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3dd9c3_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac367595_scopeCoder> static__1ac367bb1_new(jule::Ptr<_1ac3e41c1_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1ac367595_scopeCoder>(_1ac367595_scopeCoder{._field_oc=_5524_oc});
}



inline void _1ac367e36_rangeIndexIter(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136397_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1ac383d0e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1ac38434d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1b25786a2_Copy && _1ac36caea_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1ac37a4a9_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, _6213_begin);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1ac3e5d2c_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1b25786a2_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1ac36ce80_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1ac3e5d2c_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	_1ac36c523_scope(_self_, _6139_it.get()._field_Scope);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, _6313_next);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ac3c9508_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac383a67_var(_6139_it.get()._field_KeyA));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ac3c7528_write(_self_.get()._field_oc, _6213_begin);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3840a6_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ac3681ab_rangeHashmapIter(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136397_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1ac383d0e_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1ac38434d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1b25786a2_Copy && _1ac36caea_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1ac37a4a9_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, _13013_begin);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1b25786a2_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1ac36ce80_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1ac3e5d2c_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1b25786a2_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1ac36ce80_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1ac3e5d2c_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	_1ac36c523_scope(_self_, _12941_it.get()._field_Scope);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, _13113_next);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ac3c7528_write(_self_.get()._field_oc, _13013_begin);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3840a6_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ac368431_ifCase(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac134ae3_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1ac36c523_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1ac3686a6_conditional(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac135253_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1b11e7531:;
		if (it != expr.end()) {
			jule::Ptr<_1ac134ae3_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1b11e7531;
				};
				if (_20517_writed) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1ac368431_ifCase(_self_, _20621_elif);
			}
			_iter_next_1b11e7531:;
			++it;
			goto _iter_begin_1b11e7531;
		}
		_iter_end_1b11e7531:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1ac36c523_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1ac36892b_infIter(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac13553e_InfIter> _22431_it) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac36c523_scope(_self_, _22431_it.get()._field_Scope);
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38434d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3840a6_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ac368ba1_whileIter(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1359b2_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1ac36c028_st(_self_, _24133_it.get()._field_Next);
		};
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac36c523_scope(_self_, _24133_it.get()._field_Scope);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38434d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3840a6_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ac368e26_rangeIter(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136397_RangeIter> _27433_it) {
	{
		
		if ((_1a9a07c27_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b12079e7:;
			{
				_1ac367e36_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1a9a079b3_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b12076b7:;
			{
				_1ac367e36_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1a9a086c8_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b120772d:;
			{
				_1ac3681ab_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1b1207651:;
			{
				_1ac367e36_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1b1207574:;
	};
}



inline void _1ac36919b_cont(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136793_ContSt> _28724_c) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38434d_iterNext(_28724_c.get()._field_It));
}



inline void _1ac369421_label(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136e36_Label> _29225_l) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3845e5_label(_29225_l.get()._field_Ident));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1ac369696_gotoSt(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac137222_GotoSt> _29726_gt) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3845e5_label(_29726_gt.get()._field_Ident));
}



inline void _1ac36991b_postfix(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1375c9_Postfix> _30231_p) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1ac3c7528_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1ac369b91_assign(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac137a4c_Assign> _30930_a) {
	_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1ac369e16_multiAssign(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac137e04_MultiAssign> _31535_a) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1b1211bee:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b1211bee:;
			++it;
			_31714_i++;
			goto _iter_begin_1b1211bee;
		}
		_iter_end_1b1211bee:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _1ac36a224_matchExpr(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac138443_Match> _33133_m) {
	if ((!(_1ac1c5579_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1a99b077e_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1a99ad3d6_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac37a4a9_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1ac36a543_case(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac138443_Match> _34128_m, jule::Ptr<_1ac138e8d_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_1ac13894e_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1b1219c90:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1ac1c4bb6_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_1b121c149:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _1ac36a224_matchExpr(_self_, _34128_m);;
								if (_1ac1c5887_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b121aaa4:;
							{
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1b121a9c7:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b1219c90:;
				++it;
				_34818_i++;
				goto _iter_begin_1b1219c90;
			}
			_iter_end_1b1219c90:;
		};
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_1ac3c9508_indent(_self_.get()._field_oc);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac384b34_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1ac3c9508_indent(_self_.get()._field_oc);
		_1ac36c523_scope(_self_, _34143_c.get()._field_Scope);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ac36a7b8_matchSt(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac138443_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _1ac13894e_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_1ac1c5579_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_1b25786a2_Copy && _1ac36caea_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1ac3c9508_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1b122ba82:;
			if (it != expr.end()) {
				jule::Ptr<_1ac138e8d_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1b122ba82;
					};
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ac3c9508_indent(_self_.get()._field_oc);
					_1ac36a543_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_1b122ba82:;
				++it;
				goto _iter_begin_1b122ba82;
			}
			_iter_end_1b122ba82:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ac36a543_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38488c_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ac36aa3d_fallSt(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac139543_FallSt> _45626_f) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac384b34_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _1ac36acb3_breakSt(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac136b4a_BreakSt> _46127_b) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3840a6_iterEnd(_46127_b.get()._field_It));
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac38488c_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _1ac36b038_retWithVars(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1399b6_RetSt> _47035_r) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_47035_r.get()._field_Func.get()._field_Result));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b1397a88:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1ac17c960_Var> _48021_v = *it;
			{
				if (_1e6a60094_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_1ac37ac29_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1ac3c7528_write(_self_.get()._field_oc, static__1ac383a67_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b1397a88:;
			++it;
			_48014_i++;
			goto _iter_begin_1b1397a88;
		}
		_iter_end_1b1397a88:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ac36b2ad_retTuple(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1399b6_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_1a99b7d3b_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1b139c065:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1ac17c960_Var> _50221_v = *it;
			{
				if (_1e6a60094_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_1b139c065;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1b139c065;
				};
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac383a67_var(_50221_v));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1ac3c9508_indent(_self_.get()._field_oc);
			}
			_iter_next_1b139c065:;
			++it;
			_50214_i++;
			goto _iter_begin_1b139c065;
		}
		_iter_end_1b139c065:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_50032_r.get()._field_Func.get()._field_Result));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1b13a20e2:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1ac1c4bb6_Data> _52721_d = *it;
			{
				jule::Ptr<_1ac17c960_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_1e6a60094_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_1ac3c7528_write(_self_.get()._field_oc, static__1ac383a67_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b13a20e2:;
			++it;
			_52714_i++;
			goto _iter_begin_1b13a20e2;
		}
		_iter_end_1b13a20e2:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ac36b533_retWithExprs(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1399b6_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_1ac36b2ad_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1ac17c960_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_1e6a60094_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__1ac383a67_var(_55321_v);;
			_1ac3c7528_write(_self_.get()._field_oc, _55521_ident);
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1ac3c9508_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_54536_r.get()._field_Func.get()._field_Result));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1ac3c7528_write(_self_.get()._field_oc, _55521_ident);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1ac3c7528_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_54536_r.get()._field_Func.get()._field_Result));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _1ac36b7a8_retSt(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1399b6_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_1ac36b038_retWithVars(_self_, _58929_r);
		return;;
	};
	_1ac36b533_retWithExprs(_self_, _58929_r);
}



inline void _1ac36bca3_var(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac17c960_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_1ac3e60a2_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1ac36c028_st(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1346e7_Scope>>()) {
			_case_begin_1b13b848d:;
			{
				_1ac36c523_scope(_self_, _63126_st.operator jule::Ptr<_1ac1346e7_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b13b814c:;
			{
				_1ac36bca3_var(_self_, _63126_st.operator jule::Ptr<_1ac17c960_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b13b8aa9:;
			{
				_1ac37a72e_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1ac1c4bb6_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac135253_Conditional>>()) {
			_case_begin_1b13b8b20:;
			{
				_1ac3686a6_conditional(_self_, _63126_st.operator jule::Ptr<_1ac135253_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
			_case_begin_1b13b8b86:;
			{
				_1ac36892b_infIter(_self_, _63126_st.operator jule::Ptr<_1ac13553e_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
			_case_begin_1b13b8bec:;
			{
				_1ac368ba1_whileIter(_self_, _63126_st.operator jule::Ptr<_1ac1359b2_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
			_case_begin_1b13b8c63:;
			{
				_1ac368e26_rangeIter(_self_, _63126_st.operator jule::Ptr<_1ac136397_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136793_ContSt>>()) {
			_case_begin_1b13b8cc9:;
			{
				_1ac36919b_cont(_self_, _63126_st.operator jule::Ptr<_1ac136793_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136e36_Label>>()) {
			_case_begin_1b13b8d40:;
			{
				_1ac369421_label(_self_, _63126_st.operator jule::Ptr<_1ac136e36_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137222_GotoSt>>()) {
			_case_begin_1b13b8da6:;
			{
				_1ac369696_gotoSt(_self_, _63126_st.operator jule::Ptr<_1ac137222_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1375c9_Postfix>>()) {
			_case_begin_1b13b8e1c:;
			{
				_1ac36991b_postfix(_self_, _63126_st.operator jule::Ptr<_1ac1375c9_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137a4c_Assign>>()) {
			_case_begin_1b13b8e83:;
			{
				_1ac369b91_assign(_self_, _63126_st.operator jule::Ptr<_1ac137a4c_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac137e04_MultiAssign>>()) {
			_case_begin_1b13b900a:;
			{
				_1ac369e16_multiAssign(_self_, _63126_st.operator jule::Ptr<_1ac137e04_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
			_case_begin_1b13b9082:;
			{
				_1ac36a7b8_matchSt(_self_, _63126_st.operator jule::Ptr<_1ac138443_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac139543_FallSt>>()) {
			_case_begin_1b13b9109:;
			{
				_1ac36aa3d_fallSt(_self_, _63126_st.operator jule::Ptr<_1ac139543_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136b4a_BreakSt>>()) {
			_case_begin_1b13b9181:;
			{
				_1ac36acb3_breakSt(_self_, _63126_st.operator jule::Ptr<_1ac136b4a_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1399b6_RetSt>>()) {
			_case_begin_1b13b9208:;
			{
				_1ac36b7a8_retSt(_self_, _63126_st.operator jule::Ptr<_1ac1399b6_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9b7901e_PushToSliceExprModel>>()) {
			_case_begin_1b13b9280:;
			{
				_1ac378441_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1a9b7901e_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b25dd283_MutSlicingExprModel>>()) {
			_case_begin_1b13b9307:;
			{
				_1ac379eae_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1b25dd283_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel>>()) {
			_case_begin_1b13b937e:;
			{
				_1ac37a234_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b13b7d94:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b13b7d3e:;
	};
}



inline void _1ac36c29d_scopeStmts(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1346e7_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1b13c42ce:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1ac3c9508_indent(_self_.get()._field_oc);
				_1ac36c028_st(_self_, _68221_st);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b13c42ce:;
			++it;
			goto _iter_begin_1b13c42ce;
		}
		_iter_end_1b13c42ce:;
	};
}



inline void _1ac36c523_scope(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1ac1346e7_Scope> _69029_s) {
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac36c29d_scopeStmts(_self_, _69029_s);
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1ac36c798_funcScope(jule::Ptr<_1ac367595_scopeCoder> _self_, jule::Ptr<_1a99c03b5_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	if ((!(_1a99bcb76_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _71321_types = _1a99c14d7_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1b13ca093:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1e6a5c800_Token> _71420_ident = *it;
				{
					if ((_1e6a60094_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _1e6a6033b_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_1b13ca093;
					};
					_1ac3c9508_indent(_self_.get()._field_oc);
					_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_71321_types[_71417_i]));
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1ac3c7528_write(_self_.get()._field_oc, static__1ac38245b_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1ac37ac29_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1b13ca093:;
				++it;
				_71417_i++;
				goto _iter_begin_1b13ca093;
			}
			_iter_end_1b13ca093:;
		};
	};
	_1ac36c29d_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _1a99bcb76_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac367595_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac3700d6_exprCoder> static__1ac3704d2_new(jule::Ptr<_1ac3e41c1_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1ac3700d6_exprCoder>(_1ac3700d6_exprCoder{._field_oc=_9724_oc});
}



inline void _1ac370757_string(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9956c86_Const>& _10327_c) {
	jule::Str _10413_content = _1a99ad64a_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1ac11ba31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1ac37b92d_cstrLit(_10913_bytes);;
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac3c7528_write(_self_.get()._field_oc, _11113_lit);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ac3c7528_write(_self_.get()._field_oc, _11013_len);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac3709cc_boolean(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9956c86_Const>& _12028_c) {
	if (_1a99ad3d6_ReadBool(_12028_c.ptr())) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1ac370ba8_nilLit(jule::Ptr<_1ac3700d6_exprCoder> _self_) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1ac370eb6_ftoaSpecialCases(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_1ac054ace_IsNaN(_13237_x)) {
			_case_begin_1b13e99db:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1ac05bdd3_IsInf(_13237_x,1LL)) {
			_case_begin_1b13e929e:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1ac05bdd3_IsInf(_13237_x,-1LL)) {
			_case_begin_1b13e9315:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b13e9238:;
			{
				return false;
			}
		}
		_match_end_1b13e915b:;
	};
	return true;
}



inline void _1ac37123b_float32(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9956c86_Const>& _14628_c) {
	jule::F64 _14713_x = _1a99ae0eb_AsF64(_14628_c.ptr());;
	if (_1ac370eb6_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b13ec4b1:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b13ec1b4:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b13eba32:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _1ac37bc3b_ftoa(_14713_x,32LL));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b13ebdea:;
	};
}



inline void _1ac3714b1_float64(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9956c86_Const>& _16528_c) {
	jule::F64 _16613_x = _1a99ae0eb_AsF64(_16528_c.ptr());;
	if (_1ac370eb6_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1b1400508:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1b1400b68:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b13eea79:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _1ac37bc3b_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1b13eee42:;
	};
}



inline void _1ac3717d0_constant(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9956c86_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1a99b09e3_IsStr(_18432_c.ptr())) {
			_case_begin_1b1402472:;
			{
				_1ac370757_string(_self_, _18432_c);
			}
		}
		else if (_1a99b077e_IsBool(_18432_c.ptr())) {
			_case_begin_1b14024d8:;
			{
				_1ac3709cc_boolean(_self_, _18432_c);
			}
		}
		else if (_1a99b0c57_IsF64(_18432_c.ptr())) {
			_case_begin_1b140254e:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1b140473d:;
						{
							_1ac37123b_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1b1404397:;
						{
							_1ac3714b1_float64(_self_, _18432_c);
						}
					}
					_match_end_1b14042ba:;
				};
			}
		}
		else if (_1a99b02a6_IsI64(_18432_c.ptr())) {
			_case_begin_1b14025b5:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _1ac37bed3_itoa(static_cast<jule::I64>(_1a99ace0d_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_1a99b051a_IsU64(_18432_c.ptr())) {
			_case_begin_1b1402e12:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _1ac37c27a_utoa(static_cast<jule::U64>(_1a99ad172_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_1a99b0ebb_IsNil(_18432_c.ptr())) {
			_case_begin_1b1402e78:;
			{
				_1ac370ba8_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b140240b:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b140232e:;
	};
}



inline void _1ac371b98_divByZeroBinary(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1e6a5c800_Token>& _20836_op, jule::Ptr<_1a99b529a_OperandExprModel>& _20853_l, jule::Ptr<_1a99b529a_OperandExprModel>& _20880_r) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1b1407840:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b14078a6:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b1407741:;
	};
	if ((!(_1e47d71b4_Production))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ac3ca8e4_locInfo(_self_.get()._field_oc, _20836_op);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ac37a72e_expr(_self_, _20853_l.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ac37a72e_expr(_self_, _20880_r.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac371e1d_unsafeBinary(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5487_BinopExprModel> _23036_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac37a4a9_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ac3c7528_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ac37a4a9_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac372193_binary(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5487_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1b140de84:;
			{
				if ((_1a9a08200_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1ac371b98_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1b140ddc9:;
	};
	_1ac371e1d_unsafeBinary(_self_, _24030_m);
}



inline void _1ac372418_var(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1ac17c960_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_1b3917b2d_Directive> _25417_d = _1ac402421_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1ac3c7528_write(_self_.get()._field_oc, _1ac3e8eea_concatAllParts(_25417_d.get()._field_Args));
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac383a67_var(_25227_m));
}



inline void _1ac37268d_structureIns(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1b3967d9d_StructIns> _26336_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ed4a5_structureIns(_26336_m));
}



inline void _1ac372913_unary(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5674_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b1413a16:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1ac37a72e_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b1413a7c:;
			{
				if ((_1e47d71b4_Production || (_1a9a07012_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b141395b;
				};
				_1ac37a72e_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1ac3ca8e4_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b141395b:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac3c7528_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac37a72e_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ac372b88_structureLit(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5a4d_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac383528_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b141b16c:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1b3944154_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1b141bc3e:;
						if (it != expr.end()) {
							jule::Ptr<_1a99b5861_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1ac3c7528_write(_self_.get()._field_oc, static__1ac3837c0_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1ac37a72e_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b141b16c;
								};
							}
							_iter_next_1b141bc3e:;
							++it;
							goto _iter_begin_1b141bc3e;
						}
						_iter_end_1b141bc3e:;
					};
				}
				_iter_next_1b141b16c:;
				++it;
				_30417_i++;
				goto _iter_begin_1b141b16c;
			}
			_iter_end_1b141b16c:;
		};
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ac372e0d_allocStructure(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5c3a_AllocStructLitExprModel> _32238_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac383528_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1ac372b88_structureLit(_self_, _32238_m.get()._field_Lit);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac373183_casting(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b5e27_CastingExprModel> _33031_m) {
	{
		
		if (((_1a9a06c9d_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b1422ae1:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ac37a4a9_model(_self_, _33031_m.get()._field_Expr);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a9a07276_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_1a9a07276_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b14227b1:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1ac37a72e_expr(_self_, _33031_m.get()._field_Expr);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1a9a08464_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1a9a06c9d_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _1a9a0cb0b_IsAny(_1a9a06c9d_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_1a9a0774e_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b1422827:;
			{
				_1ac37a4a9_model(_self_, _33031_m.get()._field_Expr);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1e47d71b4_Production) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1a9a07012_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_1a9a07012_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
					};
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1ac3ca8e4_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1a9a08464_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b142288d:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ac37a72e_expr(_self_, _33031_m.get()._field_Expr);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ac3c7528_write(_self_.get()._field_oc, _1ac11bcc8_Itoa(static_cast<jule::I64>(_1ac3b887c_findTypeOffset(_self_.get()._field_oc.ptr(), _1a9a08464_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1b142274a:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_33031_m.get()._field_Kind));
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1ac37a72e_expr(_self_, _33031_m.get()._field_Expr);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b142266d:;
	};
}



inline void _1ac373408_args(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1b14331b7:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1ac37a72e_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b14331b7:;
			++it;
			_38514_i++;
			goto _iter_begin_1b14331b7;
		}
		_iter_end_1b14331b7:;
	};
}



inline void _1ac37367d_modelForCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
			_case_begin_1b1435186:;
			{
				_1ac376461_funcIns(_self_, _39336_expr.operator jule::Ptr<_1a99c03b5_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b143520d:;
			{
				jule::Ptr<_1a99b739b_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_1ac376461_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b1435076:;
	};
	_1ac37a4a9_model(_self_, _39336_expr);
}



inline void _1ac373903_pushCallInf(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6114_FnCallExprModel>& _40832_m) {
	if ((_1e47d71b4_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_1ac37c8eb_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
				_case_begin_1b1438563:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b143873e;
				}
			}
			else {
				_case_begin_1b143873e:;
				{
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b143861d:;
		};
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1ac3ca8e4_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1ac373c11_isWrapped(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6114_FnCallExprModel>& _43334_m) {
	if ((((!(_1a99c174b_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a99bb504_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
				_case_begin_1b143c29d:;
				{
					jule::Ptr<_1a99b739b_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>();;
					{
						
						if (_1a99bb768_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1a9a07012_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1b143cac8:;
							{
								goto _match_end_1b143d15b;
							}
						}
						else {
							_case_begin_1b143d1c2:;
							{
								if ((_1a9a08200_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1ac3c7528_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1ac37a4a9_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_1ac3c7528_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1b143d15b:;
					};
				}
			}
			_match_end_1b143c08e:;
		};
	};
	return false;
}



inline void _1ac373e86_pureFuncCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6114_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _1ac373c11_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1ac37367d_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_1a99c174b_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1ac4027a6_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1b14444e7:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1a9a0345e_InsGeneric> _46733_g = *it;
						{
							_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1b14444e7:;
						++it;
						_46726_i++;
						goto _iter_begin_1b14444e7;
					}
					_iter_end_1b14444e7:;
				};
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1ac373903_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1a99c174b_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a99bb504_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
				_case_begin_1b144320a:;
				{
					jule::Ptr<_1a99b739b_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>();;
					{
						
						if (_1a99bb768_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b144a1bd:;
							{
								_1ac37a4a9_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1a9a07012_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1b144a72e:;
							{
								_1ac37a4a9_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1e47d71b4_Production))) {
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1ac3ca8e4_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b1448d26:;
							{
								if ((_1a9a08200_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1ac3c7528_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1ac37a4a9_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b1448cb0:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
				_case_begin_1b1447d9c:;
				{
					_1ac37a4a9_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_1e47d71b4_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b1447c37:;
		};
	};
	_1ac373408_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1ac3ca8e4_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ac37420b_funcCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6114_FnCallExprModel> _53632_m) {
	if (((_1a99c174b_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1ac373e86_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1ac373e86_pureFuncCall(_self_, _53632_m);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1ac36c523_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1ac37c632_isForwarded(_53632_m.get()._field_Except);;
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1ac36c523_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1ac37ac29_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ac3ca8e4_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a99bcb76_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1ac3c9508_indent(_self_.get()._field_oc);
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	};
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ac374481_slice(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6301_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ec3d8_asSlice(_58729_m.get()._field_ElemKind));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ec3d8_asSlice(_58729_m.get()._field_ElemKind));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1ac373408_args(_self_, _58729_m.get()._field_Elems);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ac374706_indexing(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b64dd_IndexingExprModel> _59932_m) {
	_1ac37a4a9_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e47d71b4_Production || (_1a9a07276_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a9a086c8_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b132b731:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ac37a72e_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b132bec3:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1ac3ca8e4_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1ac37a72e_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b132be5c:;
	};
}



inline void _1ac37497b_unsafeIndexing(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1b25d173d_UnsafeIndexingExprModel> _61838_m) {
	_1ac37a4a9_model(_self_, _61838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e47d71b4_Production || (_1a9a07276_Ptr(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a9a086c8_Map(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b132eaca:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ac37a72e_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b13314b1:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1ac37a72e_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b133144a:;
	};
}



inline void _1ac374c01_anonFunc(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b66ca_AnonFnExprModel> _63532_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ee819_func(_63532_m.get()._field_Func));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ac3e5a0d_paramsIns(_self_.get()._field_oc, _63532_m.get()._field_Func.get()._field_Params);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ee2ca_funcInsResult(_63532_m.get()._field_Func));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ac36c798_funcScope(_self_.get()._field_oc.get()._field_sc, _63532_m.get()._field_Func);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac374e76_map(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6aa4_MapExprModel> _64627_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_64627_m.get()._field_KeyKind));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_64627_m.get()._field_ValKind));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1b1339e7b:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1a99b68b7_KeyValPairExprModel> _65325_pair = *it;
				{
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1ac37a72e_expr(_self_, _65325_pair.get()._field_Key);
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1ac37a72e_expr(_self_, _65325_pair.get()._field_Val);
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_Entries.len() - _65318_i) > 1LL)) {
						_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b1339e7b:;
				++it;
				_65318_i++;
				goto _iter_begin_1b1339e7b;
			}
			_iter_end_1b1339e7b:;
		};
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ac3751eb_slicing(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6c91_SlicingExprModel> _66731_m) {
	_1ac37a4a9_model(_self_, _66731_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1e47d71b4_Production))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ac3ca8e4_locInfo(_self_.get()._field_oc, _66731_m.get()._field_Token);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ac37a72e_expr(_self_, _66731_m.get()._field_Left);
	if ((_66731_m.get()._field_Right != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ac37a72e_expr(_self_, _66731_m.get()._field_Right);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac375471_traitSub(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel> _68332_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac382c42_traitDecl(_68332_m.get()._field_Trt));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1ac37a4a9_model(_self_, _68332_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac382703_func(_68332_m.get()._field_Method));
}



inline void _1ac3756e6_structureSub(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b739b_StructSubIdentExprModel> _69236_m) {
	_1ac37a4a9_model(_self_, _69236_m.get()._field_Expr.get()._field_Model);
	if ((_69236_m.get()._field_Field != nullptr)) {
		if ((_1a9a07276_Ptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1a9a07012_Sptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1e47d71b4_Production))) {
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1ac3ca8e4_locInfo(_self_.get()._field_oc, _69236_m.get()._field_Token);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3837c0_field(_69236_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1ac37596b_commonIdent(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b7962_CommonIdentExprModel> _71231_m) {
	_1ac3c7528_write(_self_.get()._field_oc, _71231_m.get()._field_Ident);
}



inline void _1ac375be1_commonSub(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel> _71633_m) {
	_1ac37a4a9_model(_self_, _71633_m.get()._field_Expr);
	{
		
		if ((_1a9a07276_Ptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b1349331:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a9a07012_Sptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b1349a5c:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1e47d71b4_Production))) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ac3ca8e4_locInfo(_self_.get()._field_oc, _71633_m.get()._field_Token);
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b13499e6:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b1349980:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, _71633_m.get()._field_Ident);
}



inline void _1ac375e66_array(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b7775_ArrayExprModel> _73529_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ed74c_array(_73529_m.get()._field_Kind));
	if ((_73529_m.get()._field_Elems.len() == 0LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_Elems.len() == 2LL) && (_73529_m.get()._field_Elems[1LL] == nullptr))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ac37a72e_expr(_self_, _73529_m.get()._field_Elems[0LL]);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1ac373408_args(_self_, _73529_m.get()._field_Elems);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1ac3761db_funcInsCommon(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99c03b5_FnIns> _75837_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ee819_func(_75837_m));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac376461_funcIns(_self_, _75837_m);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac376461_funcIns(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99c03b5_FnIns> _76531_m) {
	if (((_76531_m.get()._field_Decl != nullptr) && _76531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1b3917b2d_Directive> _76717_d = _1ac402421_findDirective(_76531_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1ac3c7528_write(_self_.get()._field_oc, _1ac3e8eea_concatAllParts(_76717_d.get()._field_Args));
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38299a_funcIns(_76531_m));
}



inline void _1ac3766d6_tuple(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b7d3b_TupleExprModel> _77629_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1b13571a7:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1ac1c4bb6_Data> _77821_d = *it;
			{
				_1ac37a72e_expr(_self_, _77821_d.get()._field_Model);
				if (((_77629_m.get()._field_Datas.len() - _77814_i) > 1LL)) {
					_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b13571a7:;
			++it;
			_77814_i++;
			goto _iter_begin_1b13571a7;
		}
		_iter_end_1b13571a7:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac37695b_newCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b85de_BuiltinNewCallExprModel> _78731_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_78731_m.get()._field_Kind));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78731_m.get()._field_Init != nullptr)) {
		_1ac37a72e_expr(_self_, _78731_m.get()._field_Init);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac376bd1_outCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8028_BuiltinOutCallExprModel> _79731_m) {
	if ((_79731_m.get()._field_Debug && _1e47d71b4_Production)) {
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1ac37a72e_expr(_self_, _79731_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac376e56_outlnCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel> _80633_m) {
	if ((_80633_m.get()._field_Debug && _1e47d71b4_Production)) {
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ac37a72e_expr(_self_, _80633_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac3771cb_panicCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel> _81533_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1ac37a72e_expr(_self_, _81533_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1ac3ca8e4_locInfo(_self_.get()._field_oc, _81533_m.get()._field_Token);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ac377451_assertCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel> _82334_m) {
	if (_1e47d71b4_Production) {
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1ac37a72e_expr(_self_, _82334_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1ac3c7528_write(_self_.get()._field_oc, _1ac37b92d_cstrLit(static_cast<jule::Slice<jule::U8>>(_82334_m.get()._field_Log)));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1ac3ca8e4_locInfo(_self_.get()._field_oc, _82334_m.get()._field_Token);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ac3776c6_errorCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel> _83633_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a99bcb76_IsVoid(_83633_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_83633_m.get()._field_Func.get()._field_Result));
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1ac37a72e_expr(_self_, _83633_m.get()._field_Err);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac37794b_copyCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b907e_BuiltinCopyCallExprModel> _84932_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1ac37a4a9_model(_self_, _84932_m.get()._field_Dest.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a9a06c9d_Prim(_84932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1ac37a4a9_model(_self_, _84932_m.get()._field_Src.get()._field_Model);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a9a06c9d_Prim(_84932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac377bc1_makeCallSlice(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>& _86538_m) {
	jule::Ptr<_1a9a0d854_Slc> _86617_slice = _1a9a07c27_Slc(_86538_m.get()._field_Kind.ptr());;
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_86538_m.get()._field_Kind));
	if ((_1a9a074da_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86538_m.get()._field_Cap != nullptr)) {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1ac37a72e_expr(_self_, _86538_m.get()._field_Len);
	if ((_86538_m.get()._field_Cap != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ac37a72e_expr(_self_, _86538_m.get()._field_Cap);
	};
	if ((_1a9a074da_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ac37ac29_initExpr(_self_, _86617_slice.get()._field_Elem);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac377e46_makeCallStr(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>& _89136_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ac37a72e_expr(_self_, _89136_m.get()._field_Len);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac3781bb_makeCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel> _89832_m) {
	if ((_1a9a07c27_Slc(_89832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1ac377bc1_makeCallSlice(_self_, _89832_m);
		return;;
	};
	_1ac377e46_makeCallStr(_self_, _89832_m);
}



inline void _1ac378441_pushToSlice(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9b7901e_PushToSliceExprModel> _90635_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1ac37a4a9_model(_self_, _90635_m.get()._field_Dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90713_n);;
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1ac3c7528_write(_self_.get()._field_oc, _90913_dest);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ac3c7528_write(_self_.get()._field_oc, _1ac11bcc8_Itoa(static_cast<jule::I64>(_90635_m.get()._field_Elems.get()._field_Elems.len())));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1b1458143:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _90913_dest);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1ac37a4a9_model(_self_, _91621_e);
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1b1458143:;
			++it;
			goto _iter_begin_1b1458143;
		}
		_iter_end_1b1458143:;
	};
}



inline void _1ac3786b6_appendCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel> _92534_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1ac37a4a9_model(_self_, _92534_m.get()._field_Dest);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ac37a4a9_model(_self_, _92534_m.get()._field_Elements);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac37893b_cloneCall(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel> _93333_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1ac37a4a9_model(_self_, _93333_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac378bb1_sizeof(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b716a_SizeofExprModel> _93930_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1ac37a4a9_model(_self_, _93930_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac378e36_alignof(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b98cb_AlignofExprModel> _94531_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1ac37a4a9_model(_self_, _94531_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1ac379244_runeLit(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b9ab8_RuneExprModel> _95127_m) {
	if ((_95127_m.get()._field_Code <= 127LL)) {
		jule::Str _95321_b = _1ac37b367_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95127_m.get()._field_Code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1ac37bed3_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95127_m.get()._field_Code)));
}



inline void _1ac3794b9_structureStatic(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b7588_StructStaticIdentExprModel> _96239_m) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38299a_funcIns(_96239_m.get()._field_Method));
}



inline void _1ac37973e_integratedToStr(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel> _96639_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1ac37a4a9_model(_self_, _96639_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ac3799b4_backendEmit(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99b9e92_BackendEmitExprModel> _97235_m) {
	if ((_97235_m.get()._field_Exprs.len() == 0LL)) {
		_1ac3c7528_write(_self_.get()._field_oc, _97235_m.get()._field_Code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97235_m.get()._field_Exprs.len());;
	{
		auto &expr = _97235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b1465ace:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1ac37a72e_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97713_n);
			}
			_iter_next_1b1465ace:;
			++it;
			_97914_i++;
			goto _iter_begin_1b1465ace;
		}
		_iter_end_1b1465ace:;
	};
	_1ac3c7528_write(_self_.get()._field_oc, _1ac3001dc_Format(_97235_m.get()._field_Code,jule::Any(_97817_args)));
}



inline void _1ac379c39_free(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a99ba17e_FreeExprModel> _98728_m) {
	_1ac37a72e_expr(_self_, _98728_m.get()._field_Expr);
	if (_1e47d6988_RC) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1ac379eae_mutSlicing(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1b25dd283_MutSlicingExprModel> _99634_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac37a4a9_model(_self_, _99634_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1e47d71b4_Production))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ac3ca8e4_locInfo(_self_.get()._field_oc, _99634_m.get()._field_Token);
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ac37a72e_expr(_self_, _99634_m.get()._field_Left);
	if ((_99634_m.get()._field_Right != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1ac37a72e_expr(_self_, _99634_m.get()._field_Right);
	};
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1ac37a234_strInsertBegin(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel> _101338_m) {
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ac37a4a9_model(_self_, _101338_m.get()._field_Dest);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1ac37a4a9_model(_self_, _101338_m.get()._field_Expr);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1ac37a4a9_model(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a04b8b_TypeKind>>()) {
			_case_begin_1b146eb71:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_102129_m.operator jule::Ptr<_1a9a04b8b_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b146ee4b:;
			{
				_1ac3717d0_constant(_self_, _102129_m.operator jule::Ptr<_1a9956c86_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b146eeb2:;
			{
				_1ac372418_var(_self_, _102129_m.operator jule::Ptr<_1ac17c960_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3967d9d_StructIns>>()) {
			_case_begin_1b1470028:;
			{
				_1ac37268d_structureIns(_self_, _102129_m.operator jule::Ptr<_1b3967d9d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
			_case_begin_1b147008e:;
			{
				_1ac3761db_funcInsCommon(_self_, _102129_m.operator jule::Ptr<_1a99c03b5_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b256d587_UnsafeBinopExprModel>>()) {
			_case_begin_1b1470aa6:;
			{
				_1ac371e1d_unsafeBinary(_self_, _102129_m.operator jule::Ptr<_1b256d587_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
			_case_begin_1b1470b1c:;
			{
				_1ac372193_binary(_self_, _102129_m.operator jule::Ptr<_1a99b5487_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
			_case_begin_1b1470b83:;
			{
				_1ac372913_unary(_self_, _102129_m.operator jule::Ptr<_1a99b5674_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5a4d_StructLitExprModel>>()) {
			_case_begin_1b1470be9:;
			{
				_1ac372b88_structureLit(_self_, _102129_m.operator jule::Ptr<_1a99b5a4d_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>>()) {
			_case_begin_1b1470c60:;
			{
				_1ac372e0d_allocStructure(_self_, _102129_m.operator jule::Ptr<_1a99b5c3a_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5e27_CastingExprModel>>()) {
			_case_begin_1b1470cc6:;
			{
				_1ac373183_casting(_self_, _102129_m.operator jule::Ptr<_1a99b5e27_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b1470d3c:;
			{
				_1ac37420b_funcCall(_self_, _102129_m.operator jule::Ptr<_1a99b6114_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6301_SliceExprModel>>()) {
			_case_begin_1b1470da3:;
			{
				_1ac374481_slice(_self_, _102129_m.operator jule::Ptr<_1a99b6301_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7775_ArrayExprModel>>()) {
			_case_begin_1b1470e19:;
			{
				_1ac375e66_array(_self_, _102129_m.operator jule::Ptr<_1a99b7775_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b25d173d_UnsafeIndexingExprModel>>()) {
			_case_begin_1b1470e80:;
			{
				_1ac37497b_unsafeIndexing(_self_, _102129_m.operator jule::Ptr<_1b25d173d_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b64dd_IndexingExprModel>>()) {
			_case_begin_1b1470ee6:;
			{
				_1ac374706_indexing(_self_, _102129_m.operator jule::Ptr<_1a99b64dd_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b66ca_AnonFnExprModel>>()) {
			_case_begin_1b147105c:;
			{
				_1ac374c01_anonFunc(_self_, _102129_m.operator jule::Ptr<_1a99b66ca_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6aa4_MapExprModel>>()) {
			_case_begin_1b14710c3:;
			{
				_1ac374e76_map(_self_, _102129_m.operator jule::Ptr<_1a99b6aa4_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6c91_SlicingExprModel>>()) {
			_case_begin_1b1471139:;
			{
				_1ac3751eb_slicing(_self_, _102129_m.operator jule::Ptr<_1a99b6c91_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
			_case_begin_1b14711a0:;
			{
				_1ac375471_traitSub(_self_, _102129_m.operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b1471227:;
			{
				_1ac3756e6_structureSub(_self_, _102129_m.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7962_CommonIdentExprModel>>()) {
			_case_begin_1b147129e:;
			{
				_1ac37596b_commonIdent(_self_, _102129_m.operator jule::Ptr<_1a99b7962_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>>()) {
			_case_begin_1b1471326:;
			{
				_1ac375be1_commonSub(_self_, _102129_m.operator jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7d3b_TupleExprModel>>()) {
			_case_begin_1b147139d:;
			{
				_1ac3766d6_tuple(_self_, _102129_m.operator jule::Ptr<_1a99b7d3b_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>>()) {
			_case_begin_1b1471425:;
			{
				_1ac376bd1_outCall(_self_, _102129_m.operator jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b147149c:;
			{
				_1ac376e56_outlnCall(_self_, _102129_m.operator jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>>()) {
			_case_begin_1b1471524:;
			{
				_1ac37695b_newCall(_self_, _102129_m.operator jule::Ptr<_1a99b85de_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b147159b:;
			{
				_1ac3771cb_panicCall(_self_, _102129_m.operator jule::Ptr<_1a99b87cb_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b1471623:;
			{
				_1ac377451_assertCall(_self_, _102129_m.operator jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b147169a:;
			{
				_1ac3776c6_errorCall(_self_, _102129_m.operator jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b1471722:;
			{
				_1ac3781bb_makeCall(_self_, _102129_m.operator jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b1471799:;
			{
				_1ac3786b6_appendCall(_self_, _102129_m.operator jule::Ptr<_1a99b8d92_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b1471821:;
			{
				_1ac37893b_cloneCall(_self_, _102129_m.operator jule::Ptr<_1a99b8402_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b907e_BuiltinCopyCallExprModel>>()) {
			_case_begin_1b1471898:;
			{
				_1ac37794b_copyCall(_self_, _102129_m.operator jule::Ptr<_1a99b907e_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b716a_SizeofExprModel>>()) {
			_case_begin_1b1471920:;
			{
				_1ac378bb1_sizeof(_self_, _102129_m.operator jule::Ptr<_1a99b716a_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b98cb_AlignofExprModel>>()) {
			_case_begin_1b1471997:;
			{
				_1ac378e36_alignof(_self_, _102129_m.operator jule::Ptr<_1a99b98cb_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9ab8_RuneExprModel>>()) {
			_case_begin_1b1471a1e:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, _1ac379244_runeLit(_self_, _102129_m.operator jule::Ptr<_1a99b9ab8_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7588_StructStaticIdentExprModel>>()) {
			_case_begin_1b1471a96:;
			{
				_1ac3794b9_structureStatic(_self_, _102129_m.operator jule::Ptr<_1a99b7588_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>>()) {
			_case_begin_1b1471b1d:;
			{
				_1ac37973e_integratedToStr(_self_, _102129_m.operator jule::Ptr<_1a99b9ca5_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b9e92_BackendEmitExprModel>>()) {
			_case_begin_1b1471b95:;
			{
				_1ac3799b4_backendEmit(_self_, _102129_m.operator jule::Ptr<_1a99b9e92_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99ba17e_FreeExprModel>>()) {
			_case_begin_1b1471c1c:;
			{
				_1ac379c39_free(_self_, _102129_m.operator jule::Ptr<_1a99ba17e_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b25dd283_MutSlicingExprModel>>()) {
			_case_begin_1b1471c94:;
			{
				_1ac379eae_mutSlicing(_self_, _102129_m.operator jule::Ptr<_1b25dd283_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel>>()) {
			_case_begin_1b1471d1b:;
			{
				_1ac37a234_strInsertBegin(_self_, _102129_m.operator jule::Ptr<_1a9b6b53e_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b146ece7:;
			{
				_1ac3c7528_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b146ec1a:;
	};
}



inline void _1ac37a72e_expr(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Any _111428_e) {
	_1ac37a4a9_model(_self_, _111428_e);
}



inline void _1ac37a9a4_val(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1ac1c5c3e_Value> _111827_v) {
	if (_1ac1c5579_IsConst(_111827_v.get()._field_Data.ptr())) {
		_1ac3717d0_constant(_self_, _111827_v.get()._field_Data.get()._field_Constant,((_111827_v.get()._field_Data.get()._field_Kind != nullptr) && _1a9a0b91d_IsF32(_1a9a06c9d_Prim(_111827_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1ac37a72e_expr(_self_, _111827_v.get()._field_Data.get()._field_Model);
}



inline void _1ac37ac29_initExpr(jule::Ptr<_1ac3700d6_exprCoder> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _112632_t) {
	if ((_1a9a07276_Ptr(_112632_t.ptr()) != nullptr)) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1b2553d42_Enum> _113117_enm = _1a9a074da_Enum(_112632_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1ac37a9a4_val(_self_, _113117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eeab1_kind(_112632_t));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3700d6_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ac37d28c_cloneFuncDecl(jule::Ptr<_1b393b9dc_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1ac3ed20d_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1ac37d534_cloneFuncDef(jule::Ptr<_1b393b9dc_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1ac3ed20d_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac37ced4_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac37e414_TestCoder> static__1ac37e887_New(jule::Ptr<_1ac3e41c1_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1ac37e414_TestCoder>(_1ac37e414_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1ac1530c8_ImportInfo> _1ac37eaeb_findTestingPackage(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b148e09c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1b148e09c:;
			++it;
			goto _iter_begin_1b148e09c;
		}
		_iter_end_1b148e09c:;
	};
	return nullptr;
}



inline void _1ac37ed71_appendTest(jule::Ptr<_1ac37e414_TestCoder> _self_, jule::Ptr<_1a99c03b5_FnIns> _4334_f) {
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac380536_callTmReset(_self_);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ac3c7528_write(_self_.get()._field_oc, _1ac37b92d_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac38299a_funcIns(_4334_f));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1ac3800e6_appendPackageTests(jule::Ptr<_1ac37e414_TestCoder> _self_, jule::Ptr<_1ac156032_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b1494d3e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b14956d0:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _6225_f = *it;
						{
							if (_1ac4027a6_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1ac37ed71_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b14956d0:;
						++it;
						goto _iter_begin_1b14956d0;
					}
					_iter_end_1b14956d0:;
				};
			}
			_iter_next_1b1494d3e:;
			++it;
			goto _iter_begin_1b1494d3e;
		}
		_iter_end_1b1494d3e:;
	};
}



inline jule::Bool _1ac38035a_readyTestingPackage(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	jule::Ptr<_1ac1530c8_ImportInfo> _7117_p = _1ac37eaeb_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1ac154519_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1b3942eaa_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1b3942eaa_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1b3942eaa_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1ac380536_callTmReset(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac382703_func(_self_.get()._field_tmReset));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ac380712_callTmFailed(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac382703_func(_self_.get()._field_tmFailed));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ac3808dd_callTmSkipped(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac382703_func(_self_.get()._field_tmSkipped));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ac380ab9_Serialize(jule::Ptr<_1ac37e414_TestCoder> _self_) {
	_1ac3e84b1_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ac3e82d5_end(_self_.get()._field_oc);
	});;
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	if ((!(_1ac38035a_readyTestingPackage(_self_)))) {
		_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1ac3c8caa_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3eb31b_asSptr(static__1ac3ed4a5_structureIns(_self_.get()._field_t)));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1ac3c7528_write(_self_.get()._field_oc, static__1ac3ed4a5_structureIns(_self_.get()._field_t));
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1ac3c7cba_addIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1ac380712_callTmFailed(_self_);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1ac3808dd_callTmSkipped(_self_);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1ac3800e6_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1ac3c8caa_doneIndent(_self_.get()._field_oc);
	_1ac3c9508_indent(_self_.get()._field_oc);
	_1ac3c7528_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac37e414_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ac382071_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1ac38245b_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1ac11bcc8_Itoa(_5423_row);
	_5517_obj+=_1ac11bcc8_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1ac382703_func(jule::Ptr<_1a99bc714_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1b14aceab:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1b14ad022:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a99bcdda_IsMethod(_6521_f.ptr())) {
			_case_begin_1b14ac384:;
			{
				jule::Str _7221_obj = static__1ac382071_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1b14ac2b8:;
			{
				return static__1ac382071_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1b14ac1db:;
	};
}



inline jule::Str static__1ac38299a_funcIns(jule::Ptr<_1a99c03b5_FnIns>& _8424_f) {
	if (_1a99c174b_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1ac382703_func(_8424_f.get()._field_Decl);
	};
	return static__1ac382071_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1ac382c42_traitDecl(jule::Ptr<_1b2551bec_Trait> _9525_t) {
	if (_1b2552769_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1ac382071_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1ac382ed9_param(jule::Ptr<_1a99badc7_Param>& _10322_p) {
	if ((_1e6a6033b_IsAnonIdent(_10322_p.get()._field_Ident) || _1e6a60094_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1a99bb504_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1ac38245b_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1ac38245b_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1ac383281_structure(jule::Ptr<_1b393b9dc_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1ac4027a6_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1ac382071_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1ac383528_structureIns(jule::Ptr<_1b3967d9d_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1ac383281_structure(_12829_s.get()._field_Decl);
	};
	return static__1ac382071_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1ac3837c0_field(jule::Ptr<_1b392dea7_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1ac383a67_var(jule::Ptr<_1ac17c960_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1b14b8291:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1b14b8307:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1b14b7625:;
			{
				if ((_1a9a07012_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b14b768b:;
			{
				return static__1ac38245b_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1b14b75ae:;
			{
				return static__1ac382071_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1b14b7504:;
	};
}



inline jule::Str static__1ac383d0e_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1ac3840a6_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1ac38434d_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1ac3845e5_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1ac38488c_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1ac384b34_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac381a65_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3e3ce7_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3e3ed4_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac3e9ec9_Str(_1ac3e9c10_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1ac3ea2d7_Equals(jule::Ptr<_1ac3e9c10_customType> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3e9c10_customType _Src) {
	_Stream << "customType{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ac3eaa35_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1ac11dda7_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1ac3eaccc_prim(jule::Ptr<_1a9a09663_Prim> _7120_p) {
	return static__1ac3eaa35_toType(_1a9a099c6_Str(_7120_p.ptr()));
}



inline jule::Str static__1ac3eb074_tuple(jule::Ptr<_1a9a0e3d2_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1b166499d:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a04b8b_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1ac3eeab1_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1b166499d:;
			++it;
			goto _iter_begin_1b166499d;
		}
		_iter_end_1b166499d:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1ac3eb31b_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1ac3eb5b3_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1ac3eb85a_sptr(jule::Ptr<_1a9a0cde7_Sptr> _10124_sptr) {
	return static__1ac3eb31b_asSptr(static__1ac3eeab1_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1ac3ebb02_ptr(jule::Ptr<_1a9a1145b_Ptr> _10623_p) {
	;
	if (_1a9a11e2e_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1ac3eeab1_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1ac3ebd99_enumDecl(jule::Ptr<_1b2553d42_Enum> _11728_e) {
	return static__1ac3eeab1_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1ac3ec141_typeEnumDecl(jule::Ptr<_1b255543c_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1ac3ec3d8_asSlice(jule::Ptr<_1a9a04b8b_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1ac3eeab1_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1ac3ec680_slice(jule::Ptr<_1a9a0d854_Slc> _13425_s) {
	return static__1ac3ec3d8_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1ac3ec927_map(jule::Ptr<_1a9a0ee0a_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1ac3eeab1_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1ac3eeab1_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1ac3ecbbe_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1ac3ece66_traitDecl(jule::Ptr<_1b2551bec_Trait> _15625_t) {
	return static__1ac3ecbbe_traitIdent(static__1ac382c42_traitDecl(_15625_t));
}



inline jule::Str static__1ac3ed20d_structure(jule::Ptr<_1b393b9dc_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1ac4027a6_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1ac383281_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1ac3ed4a5_structureIns(jule::Ptr<_1b3967d9d_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1ac383528_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1b166ed1b:;
				if (it != expr.end()) {
					jule::Ptr<_1a9a0345e_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1ac3eeab1_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1b166ed1b:;
					++it;
					goto _iter_begin_1b166ed1b;
				}
				_iter_end_1b166ed1b:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1b3917b2d_Directive> _18317_d = _1ac402421_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1ac3e8eea_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1ac383528_structureIns(_17132_s);
}



inline jule::Str static__1ac3ed74c_array(jule::Ptr<_1a9a109ee_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1ac3eeab1_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1ac11bcc8_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1ac3edc8b_paramIns(jule::Ptr<_1a99be4e6_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1ac3eeab1_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1ac3eeab1_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1ac3ee2ca_funcInsResult(jule::Ptr<_1a99c03b5_FnIns>& _24934_f) {
	if (_1a99bcb76_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1ac3eeab1_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1ac3eeab1_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1ac3ee572_anonFunc(jule::Ptr<_1a99c03b5_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1ac3ee2ca_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1b17b757e:;
			if (it != expr.end()) {
				jule::Ptr<_1a99be4e6_ParamIns> _26625_param = *it;
				{
					if (_1a99bb504_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b17b757e;
					};
					_26317_decl+=static__1ac3edc8b_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1b17b757e:;
				++it;
				goto _iter_begin_1b17b757e;
			}
			_iter_end_1b17b757e:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1ac3ee819_func(jule::Ptr<_1a99c03b5_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1ac3ee572_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1ac3eeab1_kind(jule::Ptr<_1a9a04b8b_TypeKind> _29024_k) {
	{
		
		if (_1a9a0584b_CppLinked(_29024_k.ptr())) {
			_case_begin_1b17ba0a9:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1a9a06c9d_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba241:;
			{
				return static__1ac3eaccc_prim(_1a9a06c9d_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1a9a0893c_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba2a7:;
			{
				return static__1ac3eb074_tuple(_1a9a0893c_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1a9a07012_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba32e:;
			{
				return static__1ac3eb85a_sptr(_1a9a07012_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1a9a07276_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba3a6:;
			{
				return static__1ac3ebb02_ptr(_1a9a07276_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1a9a074da_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba42d:;
			{
				return static__1ac3ebd99_enumDecl(_1a9a074da_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1a9a0774e_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba4a5:;
			{
				return static__1ac3ec141_typeEnumDecl(_1a9a0774e_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1a9a07c27_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba52c:;
			{
				return static__1ac3ec680_slice(_1a9a07c27_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1a9a086c8_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba5a4:;
			{
				return static__1ac3ec927_map(_1a9a086c8_Map(_29024_k.ptr()));
			}
		}
		else if ((_1a9a08464_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba62b:;
			{
				return static__1ac3ece66_traitDecl(_1a9a08464_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1a9a08200_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba6a3:;
			{
				return static__1ac3ed4a5_structureIns(_1a9a08200_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1a9a079b3_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba72a:;
			{
				return static__1ac3ed74c_array(_1a9a079b3_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1a9a07e8b_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1b17ba7a2:;
			{
				return static__1ac3ee819_func(_1a9a07e8b_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1b17b9ebb:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac3e9c10_customType>>()) {
			_case_begin_1b17ba87e:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1ac3e9c10_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1b17c1e4b:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1b17c1de6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3ea507_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b17c3832_name(_1b17c3e81_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b17c436b_what(_1b17c3e81_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1b17c449d_reset(_1b17c3e81_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b17c45d0_short(_1b17c3e81_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b17c3e81_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b17c768d_name(_1b17c7b44_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b17c7e0d_what(_1b17c7b44_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1b17c8040_reset(_1b17c7b44_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b17c8172_short(_1b17c7b44_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b17c7b44_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b17cb175_name(_1b17cb62b_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b17cb8e5_what(_1b17cb62b_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1b17cba27_reset(_1b17cb62b_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b17cbb59_short(_1b17cb62b_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b17cb62b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b17ceba1_name(_1b17d0157_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b17d0421_what(_1b17d0157_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1b17d0553_reset(_1b17d0157_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b17d0685_short(_1b17d0157_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b17d0157_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b17d3688_name(_1b17d3b3e_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b17d3e08_what(_1b17d3b3e_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1b17d403a_reset(_1b17d3b3e_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b17d416c_short(_1b17d3b3e_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1b17d3b3e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ade34616_FlagSet> static__1ade34902_new(void) {
	return jule::new_ptr<_1ade34616_FlagSet>(_1ade34616_FlagSet{._field__flags=jule::Slice<jule::Trait<_1ade32b97_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1ade32b97_CommonFlag> _1ade34d86_find_flag(_1ade34616_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b17de7d7:;
		if (it != expr.end()) {
			jule::Trait<_1ade32b97_CommonFlag> _7221_flag = *it;
			{
				if ((_1ade32b97_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ac4209b1_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1b17de7d7:;
			++it;
			goto _iter_begin_1b17de7d7;
		}
		_iter_end_1b17de7d7:;
	};
	return nullptr;
}



inline jule::Trait<_1ade32b97_CommonFlag> _1ade35194_find_flag_short(_1ade34616_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b17dec49:;
		if (it != expr.end()) {
			jule::Trait<_1ade32b97_CommonFlag> _8221_flag = *it;
			{
				if ((_1ade32b97_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ac420ae3_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1b17dec49:;
			++it;
			goto _iter_begin_1b17dec49;
		}
		_iter_end_1b17dec49:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1ade32b97_CommonFlag>> _1ade35408_flags(_1ade34616_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ade35716_parse(_1ade34616_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1ade36cde_ArgParser _11617_ap = _1ade36cde_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1ade381ca_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1ade358e2_reset(_1ade34616_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b17e30e3:;
		if (it != expr.end()) {
			jule::Trait<_1ade32b97_CommonFlag> _12616_f = *it;
			{
				_1ade32b97_CommonFlag_mptr_data[(_12616_f).type_offset]._1ac420dac_reset(_12616_f);
			}
			_iter_next_1b17e30e3:;
			++it;
			goto _iter_begin_1b17e30e3;
		}
		_iter_end_1b17e30e3:;
	};
}



inline jule::Ptr<_1b17d3b3e_Flag> _1b1858169_add_flag_common(_1ade34616_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1b18597db:;
			{
				goto _match_end_1b1859775;
			}
		}
		_match_end_1b1859775:;
	};
	if ((_1ade34d86_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1ade35194_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b17d3b3e_Flag> _14817_flag = jule::new_ptr<_1b17d3b3e_Flag>(_1b17d3b3e_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1ade32b97_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1b17d0157_Flag> _1b1861c88_add_flag_common(_1ade34616_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1b1863372:;
			{
				goto _match_end_1b18632ea;
			}
		}
		_match_end_1b18632ea:;
	};
	if ((_1ade34d86_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1ade35194_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b17d0157_Flag> _14817_flag = jule::new_ptr<_1b17d0157_Flag>(_1b17d0157_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1ade32b97_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1b1856134_add_var(_1ade34616_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1b17d3b3e_Flag> _17617_flag = _1b1858169_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1b185ec64_add_var(_1ade34616_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1b17d0157_Flag> _17617_flag = _1b1861c88_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ade34616_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1aca5966b_IR>,jule::Slice<_1e6735e35_Log>> static__1aca267ae_Build(jule::Str _2725_path, jule::I64 _2736_flags) {
	jule::Ptr<_1aca1ec91_JuleImporter> _2817_importer = static__1aca25219_New(_1aca9dc54_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1b3916a1c_Ast>> _2918_files;;
	jule::Slice<_1e6735e35_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1aca53e3a_ImportPackage(_2817_importer.ptr(), _2725_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2725_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1ac156032_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1a9a21a76_AnalyzePackage(_2918_files,jule::Trait<_1ac150845_Importer>(_2817_importer, 0),_2736_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1aca5966b_IR> _4417_ir = jule::new_ptr<_1aca5966b_IR>(_1aca5966b_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1aca2603e_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1aca9da56_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1aca51aa3_appendStructs(_1aca5966b_IR* _self_, jule::Ptr<_1ac156032_Package>& _5633_p, jule::Slice<jule::Ptr<_1b393b9dc_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b10274e8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1b1027d89:;
					if (it != expr.end()) {
						jule::Ptr<_1b393b9dc_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1b1027d89:;
						++it;
						goto _iter_begin_1b1027d89;
					}
					_iter_end_1b1027d89:;
				};
			}
			_iter_next_1b10274e8:;
			++it;
			goto _iter_begin_1b10274e8;
		}
		_iter_end_1b10274e8:;
	};
}



inline jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _1aca1d1ac_GetAllStructures(_1aca5966b_IR* _self_) {
	jule::Slice<jule::Ptr<_1b393b9dc_Struct>> _6917_buffer = nullptr;;
	_1aca51aa3_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1b1028807:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1aca51aa3_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1b1028807:;
			++it;
			goto _iter_begin_1b1028807;
		}
		_iter_end_1b1028807:;
	};
	return _6917_buffer;
}



inline void _1aca59858_appendGlobals(_1aca5966b_IR* _self_, jule::Ptr<_1ac156032_Package>& _7933_p, jule::Slice<jule::Ptr<_1ac17c960_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b102a683:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1b102aed0:;
					if (it != expr.end()) {
						jule::Ptr<_1ac17c960_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1b102aed0:;
						++it;
						goto _iter_begin_1b102aed0;
					}
					_iter_end_1b102aed0:;
				};
			}
			_iter_next_1b102a683:;
			++it;
			goto _iter_begin_1b102a683;
		}
		_iter_end_1b102a683:;
	};
}



inline jule::Slice<jule::Ptr<_1ac17c960_Var>> _1ac9b20b8_GetAllGlobals(_1aca5966b_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _9217_buffer = nullptr;;
	_1aca59858_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1b102c9c6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1aca59858_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1b102c9c6:;
			++it;
			goto _iter_begin_1b102c9c6;
		}
		_iter_end_1b102c9c6:;
	};
	return _9217_buffer;
}



inline void _1aca9d77b_Order(_1aca5966b_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1aca1d1ac_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1ac9b20b8_GetAllGlobals(&(*_self_));
	static__1acaa012e_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1acaa033d_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1aca5966b_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b393d6c0_Str(_1b3967d9d_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1b03d4e8e:;
			if (it != expr.end()) {
				jule::Ptr<_1a9a0345e_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1a9a05087_Str(_24720_g.get()._field_Kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1b03d4e8e:;
				++it;
				goto _iter_begin_1b03d4e8e;
			}
			_iter_end_1b03d4e8e:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1b393e836_Equals(jule::Ptr<_1b3967d9d_StructIns> _self_, jule::Ptr<_1a9a04b8b_TypeKind> _25826_other) {
	jule::Ptr<_1b3967d9d_StructIns> _25913_s = _1a9a08200_Struct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _25913_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _25913_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_Generics.len()); (_27217_i)++) {
		{
			if ((!(_1a9a05395_Equals(_self_.get()._field_Generics[_27217_i].get()._field_Kind, _25913_s.get()._field_Generics[_27217_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1b03d86bd:;
	}
	_iter_end_1b03d86bd:;;
	return true;
}



inline jule::Bool _1b3941b8a_Same(_1b3967d9d_StructIns* _self_, jule::Ptr<_1b3967d9d_StructIns> _28623_s) {
	if ((((*_self_)._field_Decl != _28623_s.get()._field_Decl) || (_28623_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1b03dab43:;
		if (it != expr.end()) {
			jule::I64 _29013_i = it - expr.begin();
			jule::Ptr<_1a9a0345e_InsGeneric> &_29016_g = *it;
			{
				if ((!(_1a9a05395_Equals(_29016_g.get()._field_Kind, _28623_s.get()._field_Generics[_29013_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1b03dab43:;
			++it;
			_29013_i++;
			goto _iter_begin_1b03dab43;
		}
		_iter_end_1b03dab43:;
	};
	return true;
}



inline jule::Ptr<_1a99bc714_Fn> _1b3942eaa_FindMethod(_1b3967d9d_StructIns* _self_, jule::Str _30033_ident, jule::Bool _30045_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b03dc628:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _30121_f = *it;
			{
				if (((_30121_f.get()._field_Statically == _30045_statically) && (_30121_f.get()._field_Ident == _30033_ident))) {
					return _30121_f;
				};
			}
			_iter_next_1b03dc628:;
			++it;
			goto _iter_begin_1b03dc628;
		}
		_iter_end_1b03dc628:;
	};
	return nullptr;
}



inline jule::Ptr<_1b3944154_FieldIns> _1b39459c4_FindField(_1b3967d9d_StructIns* _self_, jule::Str _31132_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b03dd89e:;
		if (it != expr.end()) {
			jule::Ptr<_1b3944154_FieldIns> _31221_f = *it;
			{
				if ((_31221_f.get()._field_Decl.get()._field_Ident == _31132_ident)) {
					return _31221_f;
				};
			}
			_iter_next_1b03dd89e:;
			++it;
			goto _iter_begin_1b03dd89e;
		}
		_iter_end_1b03dd89e:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3967d9d_StructIns _Src) {
	_Stream << "StructIns{";
	_Stream << "Checked:" << _Src._field_Checked << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Operators:" << _Src._field_Operators;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acb924da_ObjectDeadCode> static__1acb929b3_new(jule::Ptr<_1aca5966b_IR>& _3424_ir) {
	return jule::new_ptr<_1acb924da_ObjectDeadCode>(_1acb924da_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1b1067add_isLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1b2551bec_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1b2551bec_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b1069b67:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b106987b:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b106a33d:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b106a33d:;
			++it;
			_5213_i++;
			goto _iter_begin_1b106a33d;
		}
		_iter_end_1b106a33d:;
	};
	return false;
}

inline jule::Bool _1b106d8b3_isLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1a99c03b5_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1a99c03b5_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b10701de:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b1070134:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b1070794:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b1070794:;
			++it;
			_5213_i++;
			goto _iter_begin_1b1070794;
		}
		_iter_end_1b1070794:;
	};
	return false;
}

inline jule::Bool _1b1074a40_isLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1b3967d9d_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1b3967d9d_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b1079083:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b1078d0d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b1079160:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b1079160:;
			++it;
			_5213_i++;
			goto _iter_begin_1b1079160;
		}
		_iter_end_1b1079160:;
	};
	return false;
}

inline jule::Bool _1b107b959_isLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac17c960_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b107d7c4:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b107d6a3:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1b107e1cb:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1b107e1cb:;
			++it;
			_5213_i++;
			goto _iter_begin_1b107e1cb;
		}
		_iter_end_1b107e1cb:;
	};
	return false;
}



inline void _1b1068182_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1b2551bec_Trait> _6035_t) {
	{
		
{
			_case_begin_1b106bd78:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1b106ba26:;
	};
}

inline void _1b1071ee3_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1a99c03b5_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b1072b70:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1b10728ea:;
	};
}

inline void _1b10750c3_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1b3967d9d_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b1076888:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1b107659c:;
	};
}

inline void _1b1080342_pushLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac17c960_Var> _6035_t) {
	{
		
{
			_case_begin_1b1080d26:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1b1080c49:;
	};
}



inline void _1acbc0b12_setReferencesAsLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1a99c3286_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1a99c3907_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1a99c3c15_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1b2551bec_Trait>>()) {
					_case_begin_1b1066b53:;
					{
						jule::Ptr<_1b2551bec_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1b2551bec_Trait>();;
						if (_1b1067add_isLive(_self_, _8225_t)) {
							goto _iter_next_1b1065e3d;
						};
						_1b1068182_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b106b619:;
							if (it != expr.end()) {
								jule::Ptr<_1a99bc714_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b106b839:;
										if (it != expr.end()) {
											jule::Ptr<_1a99c03b5_FnIns> _8833_mins = *it;
											{
												if (_1b106d8b3_isLive(_self_, _8833_mins)) {
													goto _iter_next_1b106b839;
												};
												_1b1071ee3_pushLive(_self_, _8833_mins);
												_1acbc0b12_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1b106b839:;
											++it;
											goto _iter_begin_1b106b839;
										}
										_iter_end_1b106b839:;
									};
								}
								_iter_next_1b106b619:;
								++it;
								goto _iter_begin_1b106b619;
							}
							_iter_end_1b106b619:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
					_case_begin_1b1066bb9:;
					{
						jule::Ptr<_1a99c03b5_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1a99c03b5_FnIns>();;
						if (_1b106d8b3_isLive(_self_, _9725_f)) {
							goto _match_end_1b10667ce;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b1074a40_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1b10750c3_pushLive(_self_, _9725_f.get()._field_Owner);
								_1acbc0b12_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1b1071ee3_pushLive(_self_, _9725_f);
						_1acbc0b12_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
					_case_begin_1b1066ca7:;
					{
						jule::Ptr<_1ac17c960_Var> _11025_v = _7921_ref.operator jule::Ptr<_1ac17c960_Var>();;
						if (_1b107b959_isLive(_self_, _11025_v)) {
							goto _match_end_1b10667ce;
						};
						_1b1080342_pushLive(_self_, _11025_v);
						_1acbc0b12_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1b3967d9d_StructIns>>()) {
					_case_begin_1b1066d1d:;
					{
						jule::Ptr<_1b3967d9d_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1b3967d9d_StructIns>();;
						if (_1b1074a40_isLive(_self_, _11725_s)) {
							goto _match_end_1b10667ce;
						};
						_1b10750c3_pushLive(_self_, _11725_s);
						_1acbc0b12_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b10842ad:;
							if (it != expr.end()) {
								jule::Ptr<_1a99bc714_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b10806a5:;
										if (it != expr.end()) {
											jule::Ptr<_1a99c03b5_FnIns> _12433_mins = *it;
											{
												if (_1b106d8b3_isLive(_self_, _12433_mins)) {
													goto _iter_next_1b10806a5;
												};
												_1b1071ee3_pushLive(_self_, _12433_mins);
												_1acbc0b12_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1b10806a5:;
											++it;
											goto _iter_begin_1b10806a5;
										}
										_iter_end_1b10806a5:;
									};
								}
								_iter_next_1b10842ad:;
								++it;
								goto _iter_begin_1b10842ad;
							}
							_iter_end_1b10842ad:;
						};
					}
				}
				_match_end_1b10667ce:;
			};
		}
	_iter_next_1b1065e3d:;
	}
	_iter_end_1b1065e3d:;;
}



inline void _1acbc0d87_inits(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac156032_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b1066306:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1b108728e:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1a99c03b5_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1acbc0b12_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1b108728e:;
						++it;
						goto _iter_begin_1b108728e;
					}
					_iter_end_1b108728e:;
				};
			}
			_iter_next_1b1066306:;
			++it;
			goto _iter_begin_1b1066306;
		}
		_iter_end_1b1066306:;
	};
}



inline void _1acbc110c_collectLivePackage(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac156032_Package>& _14843_pkg) {
	_1acbc0d87_inits(_self_, _14843_pkg);
	if (_1e47d667a_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1b1089758:;
			if (it != expr.end()) {
				jule::Ptr<_1ac1bee58_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1b108a0e9:;
						if (it != expr.end()) {
							jule::Ptr<_1a99bc714_Fn> _15529_f = *it;
							{
								if (_1acbc3120_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1a99c03b5_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1acbc0b12_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1b108a0e9:;
							++it;
							goto _iter_begin_1b108a0e9;
						}
						_iter_end_1b108a0e9:;
					};
				}
				_iter_next_1b1089758:;
				++it;
				goto _iter_begin_1b1089758;
			}
			_iter_end_1b1089758:;
		};
	};
}



inline void _1acbc12d8_collectLive(jule::Ptr<_1acb924da_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b108aa56:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1acbc110c_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1b108aa56:;
			++it;
			goto _iter_begin_1b108aa56;
		}
		_iter_end_1b108aa56:;
	};
	_1acbc110c_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1a99bc714_Fn> _17517_main = _1ac1577d6_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1a99c03b5_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1acbc0b12_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1acbc155d_removeDeadGlobals(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac17c960_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1ac17c960_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1b107b959_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1b108ee56;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1b108ee56:;
	}
	_iter_end_1b108ee56:;;
}



inline void _1acbc17d3_removeDeadFns(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a99bc714_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1a99bc714_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a99c03b5_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1b106d8b3_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1b1093586;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1b1093586:;
			}
			_iter_end_1b1093586:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1b1090451;
			};
			(_19417_i)++;
		}
	_iter_next_1b1090451:;
	}
	_iter_end_1b1090451:;;
}



inline void _1acbc1a58_removeDeadStructs(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b393b9dc_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1b393b9dc_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1b3967d9d_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1acbc17d3_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1b1074a40_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1b10977aa;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1b10977aa:;
			}
			_iter_end_1b10977aa:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1b1096600;
			};
			(_21517_i)++;
		}
	_iter_next_1b1096600:;
	}
	_iter_end_1b1096600:;;
}



inline void _1acbc1ccd_removeDeadTraits(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2551bec_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1b2551bec_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1b1067add_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1b109b22b;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1b393b9dc_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1b109bdb9;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1b109bdb9:;
			}
			_iter_end_1b109bdb9:;;
			(_23717_i)++;
		}
	_iter_next_1b109b22b:;
	}
	_iter_end_1b109b22b:;;
}



inline void _1acbc2053_removeDeadsFile(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac1bee58_SymbolTable>& _25740_file) {
	_1acbc17d3_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1acbc1a58_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1acbc1ccd_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1acbc155d_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1acbc22c8_removeDeadsPackage(jule::Ptr<_1acb924da_ObjectDeadCode> _self_, jule::Ptr<_1ac156032_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b10a1929:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _26521_file = *it;
			{
				_1acbc2053_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1b10a1929:;
			++it;
			goto _iter_begin_1b10a1929;
		}
		_iter_end_1b10a1929:;
	};
}



inline void _1acbc24a4_removeDeads(jule::Ptr<_1acb924da_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b10a284d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1acbc22c8_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1b10a284d:;
			++it;
			goto _iter_begin_1b10a284d;
		}
		_iter_end_1b10a284d:;
	};
	_1acbc22c8_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1acbc2680_elimanate(jule::Ptr<_1acb924da_ObjectDeadCode> _self_) {
	_1acbc12d8_collectLive(_self_);
	_1acbc24a4_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1acb924da_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac3e41c1_ObjectCoder> static__1ac3c71e8_New(jule::Ptr<_1aca5966b_IR>& _7228_ir, _1ac3e3ce7_SerializationInfo _7237_info) {
	jule::Ptr<_1ac3e41c1_ObjectCoder> _7317_oc = jule::new_ptr<_1ac3e41c1_ObjectCoder>(_1ac3e41c1_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1ac3704d2_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1ac367bb1_new(_7317_oc);
	return _7317_oc;
}



inline void _1ac3c7528_write(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1ac3c7cba_addIndent(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1ac3c8caa_doneIndent(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1ac3c9508_indent(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1ac3b887c_findTypeOffset(_1ac3e41c1_ObjectCoder* _self_, jule::Ptr<_1b2551bec_Trait> _10229_t, jule::Ptr<_1a9a04b8b_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1b3967d9d_StructIns> _10617_s = nullptr;;
	if ((_1a9a07012_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1a9a07012_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1a9a08200_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1a9a08200_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b14ccc56:;
		if (it != expr.end()) {
			jule::Ptr<_1ac3e3ed4_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1b14ccc56:;
			++it;
			goto _iter_begin_1b14ccc56;
		}
		_iter_end_1b14ccc56:;
	};
	return -1LL;
}



inline void _1ac3ca8e4_locInfo(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1e6a5c800_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_1e47d71b4_Production) {
		{
			
			if (_1e6671d4e_HasPrefix(_12414_loc,_1e676eaa6_PathStdlib)) {
				_case_begin_1b14d01a9:;
				{
					_1ac3c7528_write(_self_, _1ac37b60e_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e571ec88_Dir(_1e676eaa6_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1e6671d4e_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b14ced79:;
				{
					_1ac3c7528_write(_self_, _1ac37b60e_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e571ec88_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1b14ced13:;
				{
					_1ac3c7528_write(_self_, _1ac37b60e_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1b14cec36:;
		};
	} else {
		_1ac3c7528_write(_self_, _1ac37b60e_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1ac3c7528_write(_self_, jule::Str(":", 1));
	_1ac3c7528_write(_self_, _1ac11bcc8_Itoa(_12328_t.get()._field_Row));
	_1ac3c7528_write(_self_, jule::Str(":", 1));
	_1ac3c7528_write(_self_, _1ac11bcc8_Itoa(_12328_t.get()._field_Column));
}



inline void _1ac3aa022_head(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3dd9c3_Time _15013_time = static__1ac3de067_Now();;
	_1ac3dd330_AbsTime _15113_abs = _1ac3e06a6_Abs(&_15013_time);;
	_1ac3c7528_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1ac3c7528_write(_self_, jule::Str("// JuleC version: ", 18));
	_1ac3c7528_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1ac3c7528_write(_self_, jule::Str("\n", 1));
	_1ac3c7528_write(_self_, jule::Str("// Date: ", 9));
	_1ac3c7528_write(_self_, _1ac11b69b_FmtUint(_15113_abs._field_Day,10LL));
	_1ac3c7528_write(_self_, jule::Str("/", 1));
	_1ac3c7528_write(_self_, _1ac11b69b_FmtUint(_15113_abs._field_Month,10LL));
	_1ac3c7528_write(_self_, jule::Str("/", 1));
	_1ac3c7528_write(_self_, _1ac11b69b_FmtUint(_15113_abs._field_Year,10LL));
	_1ac3c7528_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ac3c7528_write(_self_, _self_.get()._field_info._field_Compiler);
	_1ac3c7528_write(_self_, jule::Str(" ", 1));
	_1ac3c7528_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	if (_1e47d71b4_Production) {
		_1ac3c7528_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1e47d6988_RC))) {
		_1ac3c7528_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1e47d6da6_Safety))) {
		_1ac3c7528_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ac3c7528_write(_self_, jule::Str("\n\n#include \"", 12));
	_1ac3c7528_write(_self_, _1e6784758_PathApi);
	_1ac3c7528_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1ac3c8518_links(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b14db0e9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1b14dcaac:;
						{
							goto _iter_next_1b14db0e9;
						}
					}
					else if (_1e67293ce_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1b14dbeb8:;
						{
							_1ac3c7528_write(_self_, jule::Str("#include ", 9));
							_1ac3c7528_write(_self_, _18316_used.get()._field_Path);
							_1ac3c7528_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1b14dbb22:;
						{
							_1ac3c7528_write(_self_, jule::Str("#include \"", 10));
							_1ac3c7528_write(_self_, _18316_used.get()._field_Path);
							_1ac3c7528_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b14dba45:;
				};
			}
			_iter_next_1b14db0e9:;
			++it;
			goto _iter_begin_1b14db0e9;
		}
		_iter_end_1b14db0e9:;
	};
}



inline void _1ac3ad850_prepareStructures(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b14db814:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1ac3e8c53_prepareStructure(_20021_s);
				};
			}
			_iter_next_1b14db814:;
			++it;
			goto _iter_begin_1b14db814;
		}
		_iter_end_1b14db814:;
	};
}



inline void _1ac3b568c_iterPackages(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b14de7b2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1b14de7b2:;
			++it;
			goto _iter_begin_1b14de7b2;
		}
		_iter_end_1b14de7b2:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1ac3b5c20_buildTraitMap(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _21735_pkg) mutable -> void {
		_1ac3e8a00_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b14e361d:;
				if (it != expr.end()) {
					jule::Ptr<_1b2551bec_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ac3e3ed4_traitHash>(_1ac3e3ed4_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1b14e361d;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1b14e49b5:;
							if (it != expr.end()) {
								jule::Ptr<_1b393b9dc_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1b14e41ce:;
										if (it != expr.end()) {
											jule::Ptr<_1b3967d9d_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ac3e3ed4_traitHash>(_1ac3e3ed4_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1b14e41ce:;
											++it;
											goto _iter_begin_1b14e41ce;
										}
										_iter_end_1b14e41ce:;
									};
								}
								_iter_next_1b14e49b5:;
								++it;
								goto _iter_begin_1b14e49b5;
							}
							_iter_end_1b14e49b5:;
						};
					}
					_iter_next_1b14e361d:;
					++it;
					goto _iter_begin_1b14e361d;
				}
				_iter_end_1b14e361d:;
			};
		}));
	}));
}



inline void _1ac3b6ade_traitDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _24835_pkg) mutable -> void {
		_1ac3e8a00_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b14ed040:;
				if (it != expr.end()) {
					jule::Ptr<_1b2551bec_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ac3c9508_indent(_self_);
						_1ac3c7528_write(_self_, jule::Str("struct ", 7));
						_1ac3c7528_write(_self_, static__1ac382c42_traitDecl(_25029_t));
						_1ac3c7528_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b14ed040:;
					++it;
					goto _iter_begin_1b14ed040;
				}
				_iter_end_1b14ed040:;
			};
		}));
	}));
}



inline void _1ac3b72a4_structurePlainDecl(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b393b9dc_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b14ecb33:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _26421_ins = *it;
			{
				_1ac3c7528_write(_self_, jule::Str("struct ", 7));
				_1ac3c7528_write(_self_, static__1ac383528_structureIns(_26421_ins));
				_1ac3c7528_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b14ecb33:;
			++it;
			goto _iter_begin_1b14ecb33;
		}
		_iter_end_1b14ecb33:;
	};
}



inline void _1ac3b7969_structurePlainDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b15002c8:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1ac3b72a4_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1b15002c8:;
			++it;
			goto _iter_begin_1b15002c8;
		}
		_iter_end_1b15002c8:;
	};
}



inline void _1ac3b812e_fieldDecl(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3944154_FieldIns>& _27934_f) {
	_1ac3c7528_write(_self_, static__1ac3eeab1_kind(_27934_f.get()._field_Kind));
	_1ac3c7528_write(_self_, jule::Str(" ", 1));
	_1ac3c7528_write(_self_, static__1ac3837c0_field(_27934_f.get()._field_Decl));
	_1ac3c7528_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1ac37ac29_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1ac37a72e_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1ac3c7528_write(_self_, jule::Str(";", 1));
}



inline void _1ac3aec19_structureDestructor(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _29444_s) {
	;
	jule::Ptr<_1a99bc714_Fn> _29713_disposeMethod = _1b3942eaa_FindMethod(_29444_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29817_disposed = static__1ac17db09_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1ac3c7528_write(_self_, jule::Str("~", 1));
	_1ac3c7528_write(_self_, static__1ac383528_structureIns(_29444_s));
	_1ac3c7528_write(_self_, jule::Str("(void) { ", 9));
	_1ac3c7528_write(_self_, static__1ac382703_func(_29713_disposeMethod));
	_1ac3c7528_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ac3e4765_structureDeriveDefsDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _31045_s) {
	if (_1b392ca44_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, static__1ac37d28c_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1ac3c7528_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ac3e4897_structureOperatorEq(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1b3967d9d_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1ac3e4b0b_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1ac3c9508_indent(_self_);
	if (_1b25d4e28_Inline) {
		_1ac3c7528_write(_self_, jule::Str("inline ", 7));
	};
	_1ac3c7528_write(_self_, jule::Str("bool operator==(", 16));
	_1ac3c7528_write(_self_, _31840_ident);
	_1ac3c7528_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1ac3c7cba_addIndent(_self_);
		_1ac3c7528_write(_self_, jule::Str("\n", 1));
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, jule::Str("return ", 7));
		_1ac3c7cba_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b150d759:;
			if (it != expr.end()) {
				jule::Ptr<_1b3944154_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1b3967d9d_StructIns> _34121_strct = _1a9a08200_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1b150d759;
					};
					if (_33821_writed) {
						_1ac3c7528_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1ac3c7528_write(_self_, jule::Str("\n", 1));
					_1ac3c9508_indent(_self_);
					_1ac3c7528_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1ac3837c0_field(_33925_f.get()._field_Decl);;
					_1ac3c7528_write(_self_, _35321_fIdent);
					_1ac3c7528_write(_self_, jule::Str(" == _other.", 11));
					_1ac3c7528_write(_self_, _35321_fIdent);
				}
				_iter_next_1b150d759:;
				++it;
				goto _iter_begin_1b150d759;
			}
			_iter_end_1b150d759:;
		};
		_1ac3c8caa_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1ac3c7528_write(_self_, jule::Str("true", 4));
		};
		_1ac3c7528_write(_self_, jule::Str(";\n", 2));
		_1ac3c8caa_doneIndent(_self_);
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, jule::Str("}", 1));
	} else {
		_1ac3c7528_write(_self_, jule::Str(" return true; }", 15));
	};
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ac3e49c9_structureOperatorNotEq(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1b3967d9d_StructIns>& _37260_s) {
	_1ac3c9508_indent(_self_);
	if (_1b25d4e28_Inline) {
		_1ac3c7528_write(_self_, jule::Str("inline ", 7));
	};
	_1ac3c7528_write(_self_, jule::Str("bool operator!=(", 16));
	_1ac3c7528_write(_self_, _37243_ident);
	_1ac3c7528_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ac3e4b0b_structureOperator(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1a99c03b5_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1a99bcb76_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1ac3c9508_indent(_self_);
	if (_1b25d4e28_Inline) {
		_1ac3c7528_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1ac3c7528_write(_self_, _38338_ident);
		_1ac3c7528_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a9a06c9d_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1ac3c7528_write(_self_, _38338_ident);
		} else {
			_1ac3c7528_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1ac3c7528_write(_self_, jule::Str(" operator", 9));
	_1ac3c7528_write(_self_, _38366_op);
	_1ac3c7528_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1a99be4e6_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1ac3c7528_write(_self_, static__1ac3edc8b_paramIns(_41121_p));
		_1ac3c7528_write(_self_, jule::Str(" _other", 7));
	};
	_1ac3c7528_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1ac3c7528_write(_self_, jule::Str("return ", 7));
	};
	_1ac3c7528_write(_self_, static__1ac38299a_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1ac3c7528_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1ac3c7528_write(_self_, jule::Str("return *this; ", 14));
		};
		_1ac3c7528_write(_self_, jule::Str("}", 1));
	} else {
		_1ac3c7528_write(_self_, jule::Str("(this); }", 9));
	};
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ac3e4c3d_structureOperators(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1ac383528_structureIns(_43243_s);;
	_1ac3e4897_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1ac3e49c9_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1ac3e4b0b_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1ac3e4d70_structureInsDecl(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1b152b645:;
			if (it != expr.end()) {
				jule::Ptr<_1a99bc714_Fn> _47325_m = *it;
				{
					_1ac3e547a_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1b152b645:;
				++it;
				goto _iter_begin_1b152b645;
			}
			_iter_end_1b152b645:;
		};
	};
	_1ac3c7528_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1ac383528_structureIns(_47141_s);;
	_1ac3c7528_write(_self_, _47913_outIdent);
	_1ac3c7528_write(_self_, jule::Str(" {\n", 3));
	_1ac3c7cba_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1b152d647:;
		if (it != expr.end()) {
			jule::Ptr<_1b3944154_FieldIns> _48521_f = *it;
			{
				_1ac3c9508_indent(_self_);
				_1ac3b812e_fieldDecl(_self_, _48521_f);
				_1ac3c7528_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b152d647:;
			++it;
			goto _iter_begin_1b152d647;
		}
		_iter_end_1b152d647:;
	};
	_1ac3c9508_indent(_self_);
	_1ac3aec19_structureDestructor(_self_, _47141_s);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3c9508_indent(_self_);
	_1ac3c7528_write(_self_, _47913_outIdent);
	_1ac3c7528_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ac3e4765_structureDeriveDefsDecls(_self_, _47141_s);
	_1ac3e4c3d_structureOperators(_self_, _47141_s);
	_1ac3c7528_write(_self_, jule::Str("\n", 1));
	_1ac3c8caa_doneIndent(_self_);
	_1ac3c9508_indent(_self_);
	_1ac3c7528_write(_self_, jule::Str("};", 2));
}



inline void _1ac3e4ea2_structureDecl(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b393b9dc_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b15326c3:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _51121_ins = *it;
			{
				_1ac3e4d70_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1b15326c3:;
			++it;
			goto _iter_begin_1b15326c3;
		}
		_iter_end_1b15326c3:;
	};
}



inline void _1ac3e50d4_structureDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b15335e7:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1ac3e4ea2_structureDecl(_self_, _51721_s);
					_1ac3c7528_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b15335e7:;
			++it;
			goto _iter_begin_1b15335e7;
		}
		_iter_end_1b15335e7:;
	};
}



inline void _1ac3e5216_paramsDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1ac3c7528_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ac3c7528_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1b15356b5:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1a99be4e6_ParamIns> _53221_p = *it;
			{
				_1ac3c7528_write(_self_, static__1ac3edc8b_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1ac3c7528_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b15356b5:;
			++it;
			_53214_i++;
			goto _iter_begin_1b15356b5;
		}
		_iter_end_1b15356b5:;
	};
	_1ac3c7528_write(_self_, jule::Str(")", 1));
}



inline void _1ac3e5348_funcHead(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1a99c03b5_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1b25d4e28_Inline) && (!(_1a99bd14e_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1ac3c7528_write(_self_, jule::Str("inline ", 7));
	};
	_1ac3c7528_write(_self_, static__1ac3ee2ca_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1ac3c7528_write(_self_, jule::Str("(*", 2));
		_1ac3c7528_write(_self_, static__1ac38299a_funcIns(_54233_f));
		_1ac3c7528_write(_self_, jule::Str(")", 1));
	} else {
		_1ac3c7528_write(_self_, jule::Str(" ", 1));
		_1ac3c7528_write(_self_, static__1ac38299a_funcIns(_54233_f));
	};
}



inline void _1ac3e547a_funcDecl(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1a99bc714_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b153ab2c:;
		if (it != expr.end()) {
			jule::Ptr<_1a99c03b5_FnIns> _55821_c = *it;
			{
				_1ac3c9508_indent(_self_);
				_1ac3e5348_funcHead(_self_, _55821_c,_55741_ptr);
				_1ac3e5216_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1ac3c7528_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b153ab2c:;
			++it;
			goto _iter_begin_1b153ab2c;
		}
		_iter_end_1b153ab2c:;
	};
}



inline void _1ac3e55ac_funcDecls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _56735_pkg) mutable -> void {
		_1ac3e8a00_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1b153e207:;
				if (it != expr.end()) {
					jule::Ptr<_1a99bc714_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1ac3e547a_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1b153e207:;
					++it;
					goto _iter_begin_1b153e207;
				}
				_iter_end_1b153e207:;
			};
		}));
	}));
}



inline void _1ac3e56de_traitDataTypes(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _57935_pkg) mutable -> void {
		_1ac3e8a00_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1b1541eda:;
				if (it != expr.end()) {
					jule::Ptr<_1b2551bec_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ac3c7528_write(_self_, jule::Str("struct ", 7));
						_1ac3c7528_write(_self_, static__1ac382c42_traitDecl(_58129_t));
						_1ac3c7528_write(_self_, jule::Str("MptrData", 8));
						_1ac3c7528_write(_self_, jule::Str(" {\n", 3));
						_1ac3c7cba_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1b1543c9a:;
							if (it != expr.end()) {
								jule::Ptr<_1a99bc714_Fn> _59033_m = *it;
								{
									jule::Ptr<_1a99c03b5_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1a99be4e6_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1b154620e:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1a99be4e6_ParamIns> _59637_ip = *it;
											{
												if (_1e6a6033b_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1ac11bcc8_Itoa(_59630_i));
												};
											}
											_iter_next_1b154620e:;
											++it;
											_59630_i++;
											goto _iter_begin_1b154620e;
										}
										_iter_end_1b154620e:;
									};
									if ((!(_1e47d71b4_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1ac3e9c10_customType>(_1ac3e9c10_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1ac3e547a_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1b1543c9a:;
								++it;
								goto _iter_begin_1b1543c9a;
							}
							_iter_end_1b1543c9a:;
						};
						_1ac3c8caa_doneIndent(_self_);
						_1ac3c9508_indent(_self_);
						_1ac3c7528_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b1541eda:;
					++it;
					goto _iter_begin_1b1541eda;
				}
				_iter_end_1b1541eda:;
			};
		}));
	}));
}



inline void _1ac3e5821_paramIns(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1a99be4e6_ParamIns>& _62333_p) {
	_1ac3c7528_write(_self_, static__1ac3edc8b_paramIns(_62333_p));
	_1ac3c7528_write(_self_, jule::Str(" ", 1));
	_1ac3c7528_write(_self_, static__1ac382ed9_param(_62333_p.get()._field_Decl));
}



inline void _1ac3e5a0d_paramsIns(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1ac3c7528_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ac3c7528_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1b154a91c:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1a99be4e6_ParamIns> _63521_p = *it;
			{
				_1ac3e5821_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1ac3c7528_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b154a91c:;
			++it;
			_63514_i++;
			goto _iter_begin_1b154a91c;
		}
		_iter_end_1b154a91c:;
	};
	_1ac3c7528_write(_self_, jule::Str(")", 1));
}



inline void _1ac3e5d2c_varInitExpr(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1ac17c960_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1ac3c7528_write(_self_, jule::Str("static ", 7));
	};
	_1ac3c7528_write(_self_, static__1ac3eeab1_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1ac3c7528_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1ac3c7528_write(_self_, jule::Str("&", 1));
	};
	_1ac3c7528_write(_self_, static__1ac383a67_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1ac3c7528_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1ac3c7528_write(_self_, jule::Str(";", 1));
}



inline void _1ac3e60a2_var(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1ac17c960_Var> _66227_v) {
	if (_1e6a60094_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1ac3e5d2c_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1ac37a9a4_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1ac3e5d2c_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1ac3e5d2c_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1ac37ac29_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1ac3e6327_func(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1a99bc714_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b155489e:;
		if (it != expr.end()) {
			jule::Ptr<_1a99c03b5_FnIns> _67821_ins = *it;
			{
				_1ac3e5348_funcHead(_self_, _67821_ins,false);
				_1ac3e5a0d_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1ac3c7528_write(_self_, jule::Str(" ", 1));
				_1ac36c798_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b155489e:;
			++it;
			goto _iter_begin_1b155489e;
		}
		_iter_end_1b155489e:;
	};
}



inline void _1ac3e6503_traitWrappers(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b15550db:;
		if (it != expr.end()) {
			jule::Ptr<_1ac3e3ed4_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b1557440:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1ac11bcc8_Itoa(_69021_hash.get()._field_i));
							_1ac3e6327_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_1e47d71b4_Production) {
									_1ac3c7528_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1ac3c7528_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1b1557440;
							};
							jule::Bool _70821_ptr = (!(_1a99bb768_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1a99bc714_Fn> _71025_sm = _1b3942eaa_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1b1557440;
							};
							_1ac3c7cba_addIndent(_self_);
							_1ac3c7528_write(_self_, jule::Str("{\n", 2));
							_1ac3c9508_indent(_self_);
							if ((!(_1a99bcb76_IsVoid(_71025_sm.ptr())))) {
								_1ac3c7528_write(_self_, jule::Str("return ", 7));
							};
							_1ac3c7528_write(_self_, static__1ac382703_func(_71025_sm));
							_1ac3c7528_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1ac3c7528_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1ac3c7528_write(_self_, static__1ac3ed4a5_structureIns(_69021_hash.get()._field_s));
								_1ac3c7528_write(_self_, jule::Str(">(", 2));
								if ((!(_1e47d71b4_Production))) {
									_1ac3c7528_write(_self_, jule::Str("_00___file", 10));
								};
								_1ac3c7528_write(_self_, jule::Str(")", 1));
							} else {
								_1ac3c7528_write(_self_, jule::Str("_self_.data.as<", 15));
								_1ac3c7528_write(_self_, static__1ac3ed20d_structure(_71025_sm.get()._field_Owner));
								_1ac3c7528_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1b156178a:;
								if (it != expr.end()) {
									jule::Ptr<_1a99badc7_Param> _73624_mp = *it;
									{
										_1ac3c7528_write(_self_, jule::Str(", ", 2));
										_1ac3c7528_write(_self_, static__1ac382ed9_param(_73624_mp));
									}
									_iter_next_1b156178a:;
									++it;
									goto _iter_begin_1b156178a;
								}
								_iter_end_1b156178a:;
							};
							_1ac3c7528_write(_self_, jule::Str(");\n}\n", 5));
							_1ac3c8caa_doneIndent(_self_);
						}
						_iter_next_1b1557440:;
						++it;
						goto _iter_begin_1b1557440;
					}
					_iter_end_1b1557440:;
				};
			}
			_iter_next_1b15550db:;
			++it;
			goto _iter_begin_1b15550db;
		}
		_iter_end_1b15550db:;
	};
}



inline void _1ac3e66ce_traitDatas(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	jule::Ptr<_1b2551bec_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1b1563061:;
		if (it != expr.end()) {
			jule::Ptr<_1ac3e3ed4_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1ac382c42_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1ac3c8caa_doneIndent(_self_);
						_1ac3c9508_indent(_self_);
						_1ac3c7528_write(_self_, jule::Str("};\n", 3));
					};
					_1ac3c7528_write(_self_, jule::Str("static ", 7));
					_1ac3c7528_write(_self_, _74917_ident);
					_1ac3c7528_write(_self_, jule::Str("MptrData ", 9));
					_1ac3c7528_write(_self_, _74917_ident);
					_1ac3c7528_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1ac3c7cba_addIndent(_self_);
				};
				_1ac3c9508_indent(_self_);
				_1ac3c7528_write(_self_, jule::Str("{\n", 2));
				_1ac3c7cba_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b1566d9a:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1ac382703_func(_76725_m);;
							_1ac3c9508_indent(_self_);
							_1ac3c7528_write(_self_, jule::Str(".", 1));
							_1ac3c7528_write(_self_, _76821_mIdent);
							_1ac3c7528_write(_self_, jule::Str("=", 1));
							_1ac3c7528_write(_self_, _76821_mIdent);
							_1ac3c7528_write(_self_, jule::Str("_", 1));
							_1ac3c7528_write(_self_, _1ac11bcc8_Itoa(_74821_hash.get()._field_i));
							_1ac3c7528_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1b1566d9a:;
						++it;
						goto _iter_begin_1b1566d9a;
					}
					_iter_end_1b1566d9a:;
				};
				_1ac3c8caa_doneIndent(_self_);
				_1ac3c9508_indent(_self_);
				_1ac3c7528_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1b1563061:;
			++it;
			goto _iter_begin_1b1563061;
		}
		_iter_end_1b1563061:;
	};
	if ((_74717_old != nullptr)) {
		_1ac3c8caa_doneIndent(_self_);
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ac3e68aa_globals(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1b156aaa2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac17c960_Var> _79021_v = *it;
			{
				_1ac3c7528_write(_self_, static__1ac3eeab1_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1ac3c7528_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1ac3c7528_write(_self_, jule::Str("&", 1));
				};
				_1ac3c7528_write(_self_, static__1ac383a67_var(_79021_v));
				_1ac3c7528_write(_self_, jule::Str(" = ", 3));
				_1ac37a9a4_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1ac3c7528_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b156aaa2:;
			++it;
			goto _iter_begin_1b156aaa2;
		}
		_iter_end_1b156aaa2:;
	};
}



inline void _1ac3e6a86_decls(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b6ade_traitDecls(_self_);
	_1ac3b7969_structurePlainDecls(_self_);
	_1ac3e50d4_structureDecls(_self_);
	_1ac3e55ac_funcDecls(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e56de_traitDataTypes(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e6503_traitWrappers(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e66ce_traitDatas(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e68aa_globals(_self_);
}



inline void _1ac3e6d0b_structureMethods(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1b137090c:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _81921_f = *it;
			{
				_1ac3e6327_func(_self_, _81921_f);
				_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b137090c:;
			++it;
			goto _iter_begin_1b137090c;
		}
		_iter_end_1b137090c:;
	};
}



inline void _1ac3e7081_structureDeriveDefs(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _82544_s) {
	if (_1b392ca44_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ac3c7528_write(_self_, static__1ac37d534_cloneFuncDef(_82544_s.get()._field_Decl));
		_1ac3c7528_write(_self_, jule::Str("{\n", 2));
		_1ac3c7cba_addIndent(_self_);
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, static__1ac3ed4a5_structureIns(_82544_s));
		_1ac3c7528_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b1373657:;
			if (it != expr.end()) {
				jule::Ptr<_1b3944154_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1ac3837c0_field(_83320_f.get()._field_Decl);;
					_1ac3c9508_indent(_self_);
					_1ac3c7528_write(_self_, jule::Str("clone.", 6));
					_1ac3c7528_write(_self_, _83421_ident);
					_1ac3c7528_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1ac3c7528_write(_self_, _83421_ident);
					_1ac3c7528_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b1373657:;
				++it;
				goto _iter_begin_1b1373657;
			}
			_iter_end_1b1373657:;
		};
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, jule::Str("return clone;\n", 14));
		_1ac3c8caa_doneIndent(_self_);
		_1ac3c7528_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ac3e7306_structureOstream(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _84941_s) {
	_1ac3c9508_indent(_self_);
	_1ac3c7528_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1ac3c7528_write(_self_, static__1ac383528_structureIns(_84941_s));
	_1ac3c7528_write(_self_, jule::Str(" _Src) {\n", 9));
	_1ac3c7cba_addIndent(_self_);
	_1ac3c9508_indent(_self_);
	jule::Ptr<_1a99bc714_Fn> _85717_fts = _1b3942eaa_FindMethod(_84941_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1ac17dda1_Str(_85717_fts)) {
		_1ac3c7528_write(_self_, jule::Str("_Stream << ", 11));
		_1ac3c7528_write(_self_, static__1ac382703_func(_85717_fts));
		_1ac3c7528_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1ac3c7528_write(_self_, jule::Str("_Stream << \"", 12));
		_1ac3c7528_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1ac3c7528_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1b137b044:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1b3944154_FieldIns> _86725_f = *it;
				{
					_1ac3c9508_indent(_self_);
					_1ac3c7528_write(_self_, jule::Str("_Stream << \"", 12));
					_1ac3c7528_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1ac3c7528_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1b3967d9d_StructIns> _87421_strct = _1a9a08200_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1ac3c7528_write(_self_, jule::Str(" cpp.", 5));
						_1ac3c7528_write(_self_, static__1ac3837c0_field(_86725_f.get()._field_Decl));
						_1ac3c7528_write(_self_, jule::Str("\"", 1));
					} else {
						_1ac3c7528_write(_self_, jule::Str("\" << _Src.", 10));
						_1ac3c7528_write(_self_, static__1ac3837c0_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1ac3c7528_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1ac3c7528_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b137b044:;
				++it;
				_86718_i++;
				goto _iter_begin_1b137b044;
			}
			_iter_end_1b137b044:;
		};
		_1ac3c9508_indent(_self_);
		_1ac3c7528_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1ac3c9508_indent(_self_);
	_1ac3c7528_write(_self_, jule::Str("return _Stream;\n", 16));
	_1ac3c8caa_doneIndent(_self_);
	_1ac3c7528_write(_self_, jule::Str("}", 1));
}



inline void _1ac3e757b_structureIns(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b3967d9d_StructIns>& _90037_s) {
	_1ac3e6d0b_structureMethods(_self_, _90037_s);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e7081_structureDeriveDefs(_self_, _90037_s);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
	_1ac3e7306_structureOstream(_self_, _90037_s);
}



inline void _1ac3e7801_structure(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1b393b9dc_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b13841c3:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _90921_ins = *it;
			{
				_1ac3e757b_structureIns(_self_, _90921_ins);
				_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b13841c3:;
			++it;
			goto _iter_begin_1b13841c3;
		}
		_iter_end_1b13841c3:;
	};
}



inline void _1ac3e79cc_structures(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1b1384954:;
		if (it != expr.end()) {
			jule::Ptr<_1b393b9dc_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1ac3e7801_structure(_self_, _91621_s);
					_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b1384954:;
			++it;
			goto _iter_begin_1b1384954;
		}
		_iter_end_1b1384954:;
	};
}



inline void _1ac3e7ba8_funcs(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _92535_pkg) mutable -> void {
		_1ac3e8a00_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1b1388738:;
				if (it != expr.end()) {
					jule::Ptr<_1a99bc714_Fn> _92729_f = *it;
					{
						if (((!(_1e47d667a_Test)) && _1ac4027a6_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1b1388738;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1ac3e6327_func(_self_, _92729_f);
							_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b1388738:;
					++it;
					goto _iter_begin_1b1388738;
				}
				_iter_end_1b1388738:;
			};
		}));
	}));
}



inline void _1ac3e7e2d_pushInit(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_, jule::Ptr<_1ac156032_Package>& _94033_pkg) {
	_1ac3e8a00_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)>([=](jule::Ptr<_1ac1bee58_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1b16574eb:;
			if (it != expr.end()) {
				jule::Ptr<_1a99bc714_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1ac3c9508_indent(_self_);
						_1ac3c7528_write(_self_, static__1ac382703_func(_94220_f));
						_1ac3c7528_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b16574eb:;
				++it;
				goto _iter_begin_1b16574eb;
			}
			_iter_end_1b16574eb:;
		};
	}));
}



inline void _1ac3e8109_initCaller(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3c7528_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1ac3c7cba_addIndent(_self_);
	_1ac3b568c_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ac156032_Package>&)>([=](jule::Ptr<_1ac156032_Package>& _95535_pkg) mutable -> void {
		_1ac3e7e2d_pushInit(_self_, _95535_pkg);
	}));
	_1ac3c8caa_doneIndent(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n}", 2));
}



inline void _1ac3e82d5_end(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3c7528_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1e47d667a_Test) {
		_1ac3c7528_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1ac3c7528_write(_self_, jule::Str("entry_point();", 14));
	};
	_1ac3c7528_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ac3e84b1_serializeHead(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3ad850_prepareStructures(_self_);
	_1ac3b5c20_buildTraitMap(_self_);
	_1ac3aa022_head(_self_);
	_1ac3c8518_links(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n", 1));
	_1ac3e6a86_decls(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n", 1));
	_1ac3e79cc_structures(_self_);
	_1ac3e7ba8_funcs(_self_);
	_1ac3e8109_initCaller(_self_);
	_1ac3c7528_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ac3e868c_Serialize(jule::Ptr<_1ac3e41c1_ObjectCoder> _self_) {
	_1ac3e84b1_serializeHead(_self_);
	_1ac3e82d5_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3e41c1_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1b17e7ca7_parse_integer(_1ade36cde_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1b17ea837:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1b17ead10:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1b17eab9a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1b17eaded:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1b17eae64:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b17ea491:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1b17ea3b4:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1b1800b4a_parse_integer(_1ade36cde_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1b18038a6:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1b1803d7e:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1b1803c19:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1e6671d4e_HasPrefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1b1803e6c:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1b1803ed3:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b1803510:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1b1803433:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1ade375d6_get_data(_1ade36cde_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1ade37828_process_flag(_1ade36cde_ArgParser* _self_, jule::Trait<_1ade32b97_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1b17d0157_Flag>>()) {
			_case_begin_1b17e4ca4:;
			{
				jule::Ptr<_1b17d0157_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1b17d0157_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b17e4c3d:;
	};
	jule::Str _22513_data = _1ade375d6_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1ade32b97_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ac4209b1_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1b17c3e81_Flag>>()) {
			_case_begin_1b17e6459:;
			{
				jule::Ptr<_1b17c3e81_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1b17c3e81_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1b17e7ca7_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1ac10ab96_ParseInt(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ade32b97_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ac4209b1_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b17c7b44_Flag>>()) {
			_case_begin_1b17e6d94:;
			{
				jule::Ptr<_1b17c7b44_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1b17c7b44_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1b1800b4a_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1ac10a734_ParseUint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ade32b97_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ac4209b1_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b17cb62b_Flag>>()) {
			_case_begin_1b17e6e0a:;
			{
				jule::Ptr<_1b17cb62b_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1b17cb62b_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1ac11241c_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1ade32b97_CommonFlag_mptr_data[(_21736_flag).type_offset]._1ac4209b1_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b17d3b3e_Flag>>()) {
			_case_begin_1b17e6e71:;
			{
				(*(_21736_flag.operator jule::Ptr<_1b17d3b3e_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1b17e6d2d:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ade37a9d_single_dash(_1ade36cde_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1b180ac65:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1ade32b97_CommonFlag> _26321_flag = _1ade35194_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1ade37828_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b180ac65:;
			++it;
			goto _iter_begin_1b180ac65;
		}
		_iter_end_1b180ac65:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ade37d23_double_dash(_1ade36cde_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1ade32b97_CommonFlag> _27617_flag = _1ade34d86_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1ade37828_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ade37eee_try_arg(_1ade36cde_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1ade37d23_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ade37a9d_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ade381ca_parse(_1ade36cde_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1ade37eee_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b1813d39:;
	}
	_iter_end_1b1813d39:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ade36cde_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e49bece7_Free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _1e49d47bd_BytePtrToStr(jule::U8* _6928_s) {
	if ((_6928_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6928_s);
	};
}



inline jule::I64 _1e4868dd3_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _1e5609d1b_Stat(jule::U8* _3920_path, struct stat* _3937_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3920_path)), _3937_stat));
}



inline jule::I64 _1e5609e4d_Open(jule::U8* _4420_path, jule::I64 _4433_flag, jule::I64 _4444_mode) {
	return static_cast<jule::I64>(open(((char*)(_4420_path)),_4433_flag,_4444_mode));
}



inline jule::U8* _1e560a080_Getcwd(jule::U8* _5022_buff, jule::U64 _5035_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5022_buff)),_5035_bufflen)));
}



inline DIR* _1e560a1b2_Opendir(jule::U8* _5523_path) {
	return opendir(((char*)(_5523_path)));
}



inline struct dirent* _1e560a2e4_Readdir(DIR* _5827_dir) {
	return readdir(_5827_dir);
}



inline jule::I64 _1e560a657_Closedir(DIR* _6128_dir) {
	return static_cast<jule::I64>(closedir(_6128_dir));
}



inline jule::I64 _1e560a9ed_Mkdir(jule::U8* _7021_path, jule::I64 _7034_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7021_path)),_7034_mode));
}



inline jule::I64 _1e560ab30_Rmdir(jule::U8* _7521_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7521_path))));
}



inline jule::I64 _1e560ac62_Unlink(jule::U8* _7822_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7822_path))));
}



inline jule::I64 _1e5619028_Seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _1e5619413_Read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _1e5619787_Close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _1e5619b72_Write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1e5619d81_Exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _1e56be496_getLastOsError(void) {
	jule::I64 _309_err = _1e4868dd3_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1add11229:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1add11290:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1add11306:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1add1136c:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1add115ae:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1add11625:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1add1168b:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1add11092:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1add1103c:;
	};
}



inline jule::Slice<jule::Str> _1e56c050d_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1e56c0981_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1e56c1344_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1e56c1344_getwd(void) {
	jule::U8* _1113_buff = _1e560a080_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_1e56be496_getLastOsError());
	};
	jule::Str _159_pwd = _1e49d47bd_BytePtrToStr(_1113_buff);;
	{
		_1e49bece7_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _1e575bb3d_Stobs(jule::Str& _915_s) {
	return _915_s.fake_slice();
}



inline jule::Bool _1e6577a13_IsLetter(jule::I32 _7617_r) {
	if ((static_cast<jule::U32>(_7617_r) <= 255LLU)) {
		return ((_1e65e2000__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7617_r))] & 96LLU) != 0LLU);
	};
	return _1e65ea9a9_isExcludingLatin(_1e6582985_Letter,_7617_r);
}



inline jule::Bool _1e65e9dc6_is16(jule::Slice<_1e65e8314_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1ae5c218d:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1e65e8314_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1ae5c218d:;
				++it;
				_19313_i++;
				goto _iter_begin_1ae5c218d;
			}
			_iter_end_1ae5c218d:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1e65e8314_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1ae5c0a1b:;
	}
	_iter_end_1ae5c0a1b:;;
	return false;
}



inline jule::Bool _1e65ea217_is32(jule::Slice<_1e65e8787_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1ae5c8826:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1e65e8787_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1ae5c8826:;
				++it;
				_23013_i++;
				goto _iter_begin_1ae5c8826;
			}
			_iter_end_1ae5c8826:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1e65e8787_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1ae5c54b0:;
	}
	_iter_end_1ae5c54b0:;;
	return false;
}



inline jule::Bool _1e65ea9a9_isExcludingLatin(jule::Ptr<_1e65e8c0a_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1e65e8314_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _1e65e9dc6_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_1e65e8787_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _1e65ea217_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline std::tuple<jule::I32,jule::I64> _1e66aeac3_DecodeRune(jule::Slice<jule::U8> _18219_p) {
	jule::I32 _18232_r = jule::I32();
	jule::I64 _18241_size = jule::I64();
	if ((_18219_p.len() < 1LL)) {
		_18232_r = 65533LL;
		_18241_size = 0LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _1869_p0 = _18219_p[0LL];;
	jule::U8 _1879_x = _1e66ad96d_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18232_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18219_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1e66adee0_acceptRange _1969_accept = _1e66ae353_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18219_p.len() < _1959_sz)) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2009_b1 = _18219_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18232_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18241_size = 2LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2079_b2 = _18219_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18232_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18241_size = 3LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2149_b3 = _18219_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	_18232_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18241_size = 4LL;
	return std::make_tuple(_18232_r,_18241_size);
}



inline std::tuple<jule::I32,jule::I64> _1e66b0189_DecodeLastRune(jule::Slice<jule::U8> _27623_p) {
	jule::I32 _27636_r = jule::I32();
	jule::I64 _27645_size = jule::I64();
	if ((_27623_p.len() == 0LL)) {
		_27636_r = 65533LL;
		_27645_size = 0LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	jule::I64 _2809_end = _27623_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27636_r=static_cast<jule::I32>(static_cast<jule::I32>(_27623_p[_28113_start]));
	if ((_27636_r < 128LL)) {
		_27645_size = 1LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1e66b1a5e_RuneStart(_27623_p[_28113_start])) {
				goto _iter_end_1b27233da;
			};
		}
	_iter_next_1b27233da:;
	}
	_iter_end_1b27233da:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27636_r,_27645_size) = _1e66aeac3_DecodeRune(_27623_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27645_size) != _2809_end)) {
		_27636_r = 65533LL;
		_27645_size = 1LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	return std::make_tuple(_27636_r,_27645_size);
}



inline jule::Slice<jule::U8> _1e66b0e37_AppendRune(jule::Slice<jule::U8> _40523_p, jule::I32 _40534_r) {
	if ((_40534_r <= 127LL)) {
		return jule::append(_40523_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40534_r))}));
	};
	return _1e66b1278_appendRuneNonASCII(_40523_p,_40534_r);
}



inline jule::Slice<jule::U8> _1e66b1278_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1abe4355b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1abe41bec:;
			{
				_41242_r=128LL;
				goto _case_begin_1abe41c63;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1abe41c63:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1abe411d5:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1abe41180:;
	};
}



inline jule::I64 _1e66b17b7_RuneCountStr(jule::Str _47321_s) {
	jule::I64 _47331_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47321_s.len()); (_47331_n)++) {
		{
			jule::U8 _47617_c = _47321_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1abe4ab3a;
			};
			jule::U8 _48213_x = _1e66ad96d_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1abe4ab3a;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47321_s.len())) {
				(_47413_i)++;
				goto _iter_next_1abe4ab3a;
			};
			_1e66adee0_acceptRange _49213_accept = _1e66ae353_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47321_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47321_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47321_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1abe4ab3a:;
	}
	_iter_end_1abe4ab3a:;;
	return _47331_n;
}



inline jule::Bool _1e66b1a5e_RuneStart(jule::U8 _51718_b) {
	return ((_51718_b & 192LLU) != 128LLU);
}



inline jule::Str _1e6646340_Repeat(jule::Str _1115_s, jule::I64 _1127_n) {
	if ((_1127_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1115_s.len() > jule::div(jule::MAX_I64,_1127_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	jule::Str _1913_ss = jule::Str::alloc((_1115_s.len() * _1127_n));;
	for (; (_1127_n > 0LL); (_1127_n)--) {
		{
			_1913_ss+=_1115_s;
		}
	_iter_next_1abe80ac6:;
	}
	_iter_end_1abe80ac6:;;
	return _1913_ss;
}



inline jule::Bool _1e66475d8_hasPrefix(jule::Str& _2615_s, jule::Str& _2624_sub, jule::I64 _2638_start) {
	if (((_2624_sub.len() == 0LL) || ((_2615_s.len() - _2638_start) < _2624_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2624_sub.len()); std::tie(_3113_i,_2638_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2638_start + 1LL)))) {
		{
			if ((_2615_s[_2638_start] != _2624_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1abe83b95:;
	}
	_iter_end_1abe83b95:;;
	return true;
}



inline jule::Bool _1e6671d4e_HasPrefix(jule::Str _4118_s, jule::Str _4126_sub) {
	return _1e66475d8_hasPrefix(_4118_s,_4126_sub,0LL);
}



inline jule::Bool _1e667a066_hasSuffix(jule::Str& _4515_s, jule::Str& _4524_sub, jule::I64 _4538_start) {
	if (((_4524_sub.len() == 0LL) || ((_4515_s.len() - _4538_start) < _4524_sub.len()))) {
		return false;
	};
	_4538_start=static_cast<jule::I64>((_4515_s.len() - _4538_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4524_sub.len()); (_5113_i)++) {
		{
			if ((_4515_s[((_4538_start - _5113_i) - 1LL)] != _4524_sub[((_4524_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1ae5d778b:;
	}
	_iter_end_1ae5d778b:;;
	return true;
}



inline jule::Bool _1e6682821_HasSuffix(jule::Str _6118_s, jule::Str _6126_sub) {
	return _1e667a066_hasSuffix(_6118_s,_6126_sub,0LL);
}



inline jule::I64 _1e6645b25_FindAt(jule::Str _6915_s, jule::Str _6923_sub, jule::I64 _6937_i) {
	if ((((_6937_i < 0LL) || (_6915_s.len() < _6923_sub.len())) || (_6923_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6937_i < _6915_s.len()); (_6937_i)++) {
		{
			if (_1e66475d8_hasPrefix(_6915_s,_6923_sub,_6937_i)) {
				return _6937_i;
			};
		}
	_iter_next_1ae5db240:;
	}
	_iter_end_1ae5db240:;;
	return -1LL;
}



inline jule::I64 _1e6664380_FindLastAt(jule::Str _9219_s, jule::Str _9227_sub, jule::I64 _9237_i) {
	jule::I64 _9313_j = ((_9237_i - _9227_sub.len()) + 1LL);;
	if (((((_9227_sub.len() == 0LL) || (_9237_i < 0LL)) || (_9237_i >= _9219_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9227_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9219_s[_9917_k] != _9227_sub[_10017_z])) {
						goto _iter_next_1ae5dd8e6;
					};
				}
			_iter_next_1ae5e08c6:;
			}
			_iter_end_1ae5e08c6:;;
			return _9313_j;
		}
	_iter_next_1ae5dd8e6:;
	}
	_iter_end_1ae5dd8e6:;;
	return -1LL;
}



inline jule::I64 _1e66694a6_FindLast(jule::Str _11417_s, jule::Str _11425_sub) {
	return static_cast<jule::I64>(_1e6664380_FindLastAt(_11417_s,_11425_sub,static_cast<jule::I64>((_11417_s.len() - 1LL))));
}



inline jule::I64 _1e66b2b09_findRune(jule::Slice<jule::U8>& _17014_s, jule::I32 _17025_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17014_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _1e66aeac3_DecodeRune(_17014_s.slice(_17113_i));
			if ((_17025_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1ae758c4d:;
	}
	_iter_end_1ae758c4d:;;
	return -1LL;
}



inline jule::I64 _1e66b309e_FindLastByte(jule::Str _19721_s, jule::U8 _19729_b) {
	jule::I64 _19813_i = (_19721_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19721_s[_19813_i] == _19729_b)) {
				return _19813_i;
			};
		}
	_iter_next_1ae75bca6:;
	}
	_iter_end_1ae75bca6:;;
	return -1LL;
}



inline jule::I64 _1e66b3577_FindAny(jule::Str _23816_s, jule::Str _23824_runes) {
	jule::Slice<jule::U8> _2399_sb = _1e575bb3d_Stobs(_23816_s);;
	jule::Slice<jule::U8> _24013_rb = _1e575bb3d_Stobs(_23824_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _1e66aeac3_DecodeRune(_2399_sb.slice(_24113_i));
			if ((_1e66b2b09_findRune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1ae7616b2:;
	}
	_iter_end_1ae7616b2:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1e66b3984_Split(jule::Str _27214_s, jule::Str _27222_sub, jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _1e6645b25_FindAt(_27214_s,_27222_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1ae768389;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27222_sub.len()));
		}
	_iter_next_1ae768389:;
	}
	_iter_end_1ae768389:;;
	if (((_27236_n > 0LL) && (_28413_i < _27214_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _1e66b3cc5_Contains(jule::Str _30017_s, jule::Str _30025_sub) {
	return (_1e6645b25_FindAt(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _1e66b4798_ContainsAny(jule::Str _31620_s, jule::Str _31628_runes) {
	return (_1e66b3577_FindAny(_31620_s,_31628_runes) != -1LL);
}



inline jule::I64 _1e66b4ad9_Count(jule::Str _32214_s, jule::Str _32222_sub) {
	if ((_32222_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32613_n = 0LL;;
	jule::I64 _32713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _32913_j = _1e6645b25_FindAt(_32214_s,_32222_sub,_32713_i);;
			if ((_32913_j == -1LL)) {
				goto _iter_end_1ae76dca7;
			};
			(_32613_n)++;
			_32713_i=static_cast<jule::I64>((_32913_j + _32222_sub.len()));
		}
	_iter_next_1ae76dca7:;
	}
	_iter_end_1ae76dca7:;;
	return _32613_n;
}



inline jule::Str _1e66b506d_Replace(jule::Str _34216_s, jule::Str _34224_sub, jule::Str _34234_new, jule::I64 _34248_n) {
	if (((_34248_n == 0LL) || (_34224_sub == _34234_new))) {
		return _34216_s;
	};
	jule::I64 _3479_m = _1e66b4ad9_Count(_34216_s,_34224_sub);;
	if ((_3479_m == 0LL)) {
		return _34216_s;
	};
	if (((_34248_n < 0LL) || (_3479_m < _34248_n))) {
		_34248_n=_3479_m;
	};
	jule::Str _35513_ss = jule::Str::alloc((_34216_s.len() + (_34248_n * (_34234_new.len() - _34224_sub.len()))));;
	jule::I64 _35613_i = 0LL;;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35813_j = _1e6645b25_FindAt(_34216_s,_34224_sub,_35613_i);;
			if ((_35813_j == -1LL)) {
				goto _iter_end_1ae772cab;
			};
			_35513_ss+=_34216_s.slice(_35613_i,_35813_j);
			_35513_ss+=_34234_new;
			_35613_i=static_cast<jule::I64>((_35813_j + _34224_sub.len()));
		}
	_iter_next_1ae772cab:;
	}
	_iter_end_1ae772cab:;;
	_35513_ss+=_34216_s.slice(_35613_i);
	return _35513_ss;
}



inline void _1e66b2dc3_trimLeft(jule::Slice<jule::U8>& _39818_s, jule::Slice<jule::U8>& _39830_cutset) {
	jule::I64 _39913_i = 0LL;;
	while ((_39913_i < _39818_s.len())) {
		{
			jule::I32 _40114_r;;
			jule::I64 _40117_n;;
			std::tie(_40114_r,_40117_n) = _1e66aeac3_DecodeRune(_39818_s.slice(_39913_i));
			if ((_1e66b2b09_findRune(_39830_cutset,_40114_r) == -1LL)) {
				_39818_s=_39818_s.slice(_39913_i);
				return;;
			};
			_39913_i+=_40117_n;
		}
	_iter_next_1ae777b6d:;
	}
	_iter_end_1ae777b6d:;;
	_39818_s=nullptr;
}



inline jule::Str _1e66b6129_TrimLeft(jule::Str _41317_s, jule::Str _41325_cutset) {
	jule::Slice<jule::U8> _41413_bytes = _1e575bb3d_Stobs(_41317_s);;
	jule::Slice<jule::U8> _4159_bcutset = _1e575bb3d_Stobs(_41325_cutset);;
	_1e66b2dc3_trimLeft(_41413_bytes,_4159_bcutset);
	return static_cast<jule::Str>(_41413_bytes);
}



inline void _1e66b63d2_trimRight(jule::Slice<jule::U8>& _42019_s, jule::Slice<jule::U8>& _42031_cutset) {
	jule::I64 _42113_i = _42019_s.len();;
	while ((_42113_i > 0LL)) {
		{
			jule::I32 _42314_r;;
			jule::I64 _42317_n;;
			std::tie(_42314_r,_42317_n) = _1e66b0189_DecodeLastRune(_42019_s.slice(0LL,_42113_i));
			if ((_1e66b2b09_findRune(_42031_cutset,_42314_r) == -1LL)) {
				_42019_s=_42019_s.slice(0LL,_42113_i);
				return;;
			};
			_42113_i-=_42317_n;
		}
	_iter_next_1ae77b0c2:;
	}
	_iter_end_1ae77b0c2:;;
	_42019_s=nullptr;
}



inline jule::Str _1e66b6a64_Trim(jule::Str _44413_s, jule::Str _44421_cutset) {
	jule::Slice<jule::U8> _44513_bytes = _1e575bb3d_Stobs(_44413_s);;
	jule::Slice<jule::U8> _4469_bcutset = _1e575bb3d_Stobs(_44421_cutset);;
	_1e66b2dc3_trimLeft(_44513_bytes,_4469_bcutset);
	_1e66b63d2_trimRight(_44513_bytes,_4469_bcutset);
	return static_cast<jule::Str>(_44513_bytes);
}



inline jule::Str _1e66b6da5_Join(jule::Slice<jule::Str> _45413_parts, jule::Str _45427_sep) {
	{
		auto _match_expr{ _45413_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ae7804d3:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ae78055a:;
			{
				return _45413_parts[0LL];
			}
		}
		_match_end_1ae78034b:;
	};
	jule::Str _46113_s = _45413_parts[0LL];;
	{
		auto expr = _45413_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ae7816c1:;
		if (it != expr.end()) {
			jule::Str &_46212_part = *it;
			{
				_46113_s+=_45427_sep;
				_46113_s+=_46212_part;
			}
			_iter_next_1ae7816c1:;
			++it;
			goto _iter_begin_1ae7816c1;
		}
		_iter_end_1ae7816c1:;
	};
	return _46113_s;
}



inline jule::Str _1e572790b_Clean(jule::Str _10818_path) {
	jule::Str _1099_originalPath = _10818_path;;
	jule::I64 _1109_volLen = _1e57228b2_volumeNameLen(_10818_path);;
	(_10818_path).mut_slice(_1109_volLen);;
	if (_10818_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1e574c436_IsPathSep(_1099_originalPath[0LL])) && _1e574c436_IsPathSep(_1099_originalPath[1LL]))) {
			return _1e572ed75_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1e574c436_IsPathSep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_1e66b701a_lazyBuff _12713_out = _1e66b701a_lazyBuff{._field_path=_10818_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1e57100ca_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1e574c436_IsPathSep(_10818_path[_13214_r])) {
					_case_begin_1ae790b20:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1e574c436_IsPathSep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1ae793815:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1e574c436_IsPathSep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1ae79387b:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1ae7967c4:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1e574c436_IsPathSep(static_cast<jule::U8>(_1e570e8c1_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1ae796ac1:;
									}
									_iter_end_1ae796ac1:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1ae79683a:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1e57100ca_append(&_12713_out, 47LLU);
									};
									_1e57100ca_append(&_12713_out, '.');
									_1e57100ca_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1ae79640b:;
						};
					}
				}
				else {
					_case_begin_1ae78de92:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1e57100ca_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1e574c436_IsPathSep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_1e57100ca_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1ae7905d1:;
						}
						_iter_end_1ae7905d1:;;
					}
				}
				_match_end_1ae78ddb5:;
			};
		}
	_iter_next_1ae78d524:;
	}
	_iter_end_1ae78d524:;;
	if ((_12713_out._field_w == 0LL)) {
		_1e57100ca_append(&_12713_out, '.');
	};
	return _1e572ed75_FromSlash(_1e5712b7c_string(&_12713_out));
}



inline jule::Str _1e572ed75_FromSlash(jule::Str _21118_path) {
	if ((47LL == '/')) {
		return _21118_path;
	};
	return _1e66b506d_Replace(_21118_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1e57374cb_Join(jule::Slice<jule::Str> _22513_elem) {
	return _1e57459a1_join(_22513_elem);
}



inline jule::Str _1e5738ee4_Ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1e574c436_IsPathSep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1ae79b752:;
	}
	_iter_end_1ae79b752:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1e57169d8_Abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1e57423b5_abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1e571b449_Base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _1e574c436_IsPathSep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1ae79d534:;
	}
	_iter_end_1ae79d534:;;
	(_25417_path).mut_slice(_1e574893d_VolumeName(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1e574c436_IsPathSep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1ae7a0503:;
	}
	_iter_end_1ae7a0503:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25417_path;
}



inline jule::Str _1e571ec88_Dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1e574893d_VolumeName(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1e574c436_IsPathSep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1ae7a2978:;
	}
	_iter_end_1ae7a2978:;;
	jule::Str _2919_dir = _1e572790b_Clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1e574893d_VolumeName(jule::Str _30319_path) {
	return _1e572ed75_FromSlash(_30319_path.slice(0LL,_1e57228b2_volumeNameLen(_30319_path)));
}



inline jule::Bool _1e574c436_IsPathSep(jule::U8 _4818_c) {
	return (47LL == _4818_c);
}



inline jule::Bool _1e571dcdc_IsAbs(jule::Str _5314_path) {
	return _1e6671d4e_HasPrefix(_5314_path,jule::Str("/", 1));
}



inline jule::I64 _1e57228b2_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1e57423b5_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_1e571dcdc_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_1e572790b_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _1e56c0981_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_1e57459a1_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _1e57459a1_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1ae7ac730:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _1e572790b_Clean(_1e66b6da5_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1ae7ac730:;
			++it;
			_749_i++;
			goto _iter_begin_1ae7ac730;
		}
		_iter_end_1ae7ac730:;
	};
	return jule::Str();
}



inline jule::I64 _1e48862da_getLastFsError(void) {
	jule::I64 _729_err = _1e4868dd3_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae7ba661:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ae7b9b49:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ae7ba0bc:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ae7ba133:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae7ba199:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae7ba210:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1ae7ba870:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ae7ba8d6:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ae7ba94c:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ae7ba9b3:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ae7baa29:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ae7baa90:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae7bab06:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae7bab7d:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ae7bac05:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1ae7bac7c:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ae7bad04:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ae7bad7b:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ae7bae03:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1ae7bae7a:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae7bb002:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ae7bb079:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae7bb101:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ae7bb178:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ae7bb200:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1ae7bb277:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1ae7bb2ee:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1ae7bb376:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1ae7b9e35:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1ae7b9dd0:;
	};
}



inline jule::I64 _1e6785b77_getLastProcessError(void) {
	jule::I64 _429_err = _1e4868dd3_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae7e2688:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ae7e2b0b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ae7e2b72:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae7e2bd8:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae7e2c4e:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae7e2e91:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae7e3007:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae7e306d:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ae7e30d4:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1ae7e314a:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ae7e31b1:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1ae7e2974:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1ae7e291e:;
	};
}



inline jule::Slice<char*> _1e6788dcd_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1ae7eeb4b:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1ae7eeb4b:;
			++it;
			_229_i++;
			goto _iter_begin_1ae7eeb4b;
		}
		_iter_end_1ae7eeb4b:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _1e678932e_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _1e6788dcd_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _1e6789719_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _1e6788dcd_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _1e6788dcd_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _1e678a330_Exit(jule::I64 _1213_code) {
	_1e5619d81_Exit(_1213_code);
}



inline jule::Str _1e678a52d_Executable(void) {
	return jule::executable();
}



inline jule::Bool _1e67293ce_IsStdHeaderPath(jule::Str _2624_p) {
	return ((_2624_p[0LL] == '<') && (_2624_p[(_2624_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1e6729511_IsValidHeaderExt(jule::Str _3125_ext) {
	{
		auto &expr = _1e47e0b90_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1ae8332de:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3125_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1ae8332de:;
			++it;
			goto _iter_begin_1ae8332de;
		}
		_iter_end_1ae8332de:;
	};
	return false;
}



inline jule::Bool _1e6729764_IsValidCppExt(jule::Str _4222_ext) {
	if ((_4222_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1e6727cb2_CppExts;
		auto it = expr.begin();
		_iter_begin_1ae8352d0:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4222_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1ae8352d0:;
			++it;
			goto _iter_begin_1ae8352d0;
		}
		_iter_end_1ae8352d0:;
	};
	{
		auto &expr = _1e67292e1_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1ae836028:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4222_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1ae836028:;
			++it;
			goto _iter_begin_1ae836028;
		}
		_iter_end_1ae836028:;
	};
	return false;
}



inline jule::Str _1e6736375_Logf(jule::Str _29413_fmt, jule::Slice<jule::Any> _29426_args) {
	return _1e6736c8d_applyFmt(_29413_fmt,jule::Any(_29426_args));
}



inline jule::Str _1e6736661_argToStr(jule::Any _29813_arg) {
	{
		auto &_match_expr{ _29813_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ae837205:;
			{
				return _29813_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1ae83726b:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1ae8372d2:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1ae83639c:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1ae836ce8:;
	};
}



inline jule::I64 _1e6736908_findNextFmt(jule::Str _31116_fmt) {
	{
		auto &expr = _31116_fmt;
		auto it = expr.begin();
		_iter_begin_1ae838536:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1ae838536:;
			++it;
			_3129_i++;
			goto _iter_begin_1ae838536;
		}
		_iter_end_1ae838536:;
	};
	return -1LL;
}



inline jule::Str _1e6736c8d_applyFmt(jule::Str _32017_fmt, jule::Slice<jule::Any> _32027_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32027_args;
		auto it = expr.begin();
		_iter_begin_1ae839d62:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _1e6736908_findNextFmt(_32017_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1ae839d62;
				};
				_32113_s+=_32017_fmt.slice(0LL,_32313_i);
				_32113_s+=_1e6736661_argToStr(jule::Any(_32212_arg));
				(_32017_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1ae839d62:;
			++it;
			goto _iter_begin_1ae839d62;
		}
		_iter_end_1ae839d62:;
	};
	_32113_s+=_32017_fmt;
	return _32113_s;
}



inline jule::Bool _1e6737d5a_IsTopDirective(jule::Str _2823_directive) {
	return ((_2823_directive == jule::Str("pass", 4)) || (_2823_directive == jule::Str("build", 5)));
}



inline jule::Bool _1e673928a_IsWindows(jule::Str _3718_os) {
	return (_3718_os == jule::Str("windows", 7));
}



inline jule::Bool _1e6739543_IsDarwin(jule::Str _4017_os) {
	return (_4017_os == jule::Str("darwin", 6));
}



inline jule::Bool _1e67397da_IsLinux(jule::Str _4316_os) {
	return (_4316_os == jule::Str("linux", 5));
}



inline jule::Bool _1e6739b09_IsI386(jule::Str _4615_arch) {
	return (_4615_arch == jule::Str("i386", 4));
}



inline jule::Bool _1e6739da1_IsAmd64(jule::Str _4916_arch) {
	return (_4916_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1e673a148_IsArm64(jule::Str _5216_arch) {
	return (_5216_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1e673a3e0_IsUnix(jule::Str _5515_os) {
	return (_1e6739543_IsDarwin(_5515_os) || _1e67397da_IsLinux(_5515_os));
}



inline jule::Bool _1e673a764_Is32Bit(jule::Str _5816_arch) {
	return _1e6739b09_IsI386(_5816_arch);
}



inline jule::Bool _1e673aa0b_Is64Bit(jule::Str _6116_arch) {
	return (_1e6739da1_IsAmd64(_6116_arch) || _1e673a148_IsArm64(_6116_arch));
}



inline void _1e6747dc0_init(void) {
	jule::Str _2513_path = _1e678a52d_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1e67740b6_PathWd=({
			auto except = _1e56c0981_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1e6771965_PathExec=_1e571ec88_Dir(_2513_path);
		_1e676eaa6_PathStdlib=_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e6771965_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1e6784758_PathApi=_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e6771965_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1e6a5d009_IsUnaryOp(jule::Str _31218_kind) {
	{
		auto &expr = _1e69ad520_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1ae883d9a:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31218_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_1ae883d9a:;
			++it;
			goto _iter_begin_1ae883d9a;
		}
		_iter_end_1ae883d9a:;
	};
	return false;
}



inline jule::Bool _1e6a5d2e5_IsBinOp(jule::Str _32216_kind) {
	{
		auto &expr = _1e69ad861_BinOps;
		auto it = expr.begin();
		_iter_begin_1ae8847a2:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32216_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_1ae8847a2:;
			++it;
			goto _iter_begin_1ae8847a2;
		}
		_iter_end_1ae8847a2:;
	};
	return false;
}



inline jule::Bool _1e6a5d8ab_IsStr(jule::Str _34214_k) {
	return ((!(_34214_k.empty())) && ((_34214_k[0LL] == '\"') || _1e6a5db53_IsRawStr(_34214_k)));
}



inline jule::Bool _1e6a5db53_IsRawStr(jule::Str _34517_k) {
	return ((!(_34517_k.empty())) && (_34517_k[0LL] == '`'));
}



inline jule::Bool _1e6a5ddea_IsRune(jule::Str _34915_k) {
	return ((!(_34915_k.empty())) && (_34915_k[0LL] == '\''));
}



inline jule::Bool _1e6a5e516_IsBool(jule::Str _35515_k) {
	return ((_35515_k == jule::Str("true", 4)) || (_35515_k == jule::Str("false", 5)));
}



inline jule::Bool _1e6a5e7ad_IsFloat(jule::Str _35816_k) {
	if (_1e6671d4e_HasPrefix(_35816_k,jule::Str("0x", 2))) {
		return _1e66b4798_ContainsAny(_35816_k,jule::Str(".pP", 3));
	};
	return _1e66b4798_ContainsAny(_35816_k,jule::Str(".eE", 3));
}



inline jule::Bool _1e6a5ea55_IsNum(jule::Str _36614_k) {
	if (_36614_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36614_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _1e6a60094_IsIgnoreIdent(jule::Str _38122_ident) {
	return (_38122_ident == jule::Str("_", 1));
}



inline jule::Bool _1e6a6033b_IsAnonIdent(jule::Str _38420_ident) {
	return (_38420_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1e6a6087a_IsSpace(jule::I32 _39716_r) {
	{
		auto &expr = _1e69ad2ab_Spaces;
		auto it = expr.begin();
		_iter_begin_1ae88d679:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39716_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_1ae88d679:;
			++it;
			goto _iter_begin_1ae88d679;
		}
		_iter_end_1ae88d679:;
	};
	return false;
}



inline jule::Bool _1e6a60ccb_IsLetter(jule::I32 _40717_r) {
	return _1e6577a13_IsLetter(_40717_r);
}



inline jule::Bool _1e6a6131a_IsDecimal(jule::U8 _42718_b) {
	return (('0' <= _42718_b) && (_42718_b <= '9'));
}



inline jule::Bool _1e6a615b2_IsBinary(jule::U8 _43017_b) {
	return ((_43017_b == '0') || (_43017_b == '1'));
}



inline jule::Bool _1e6a61859_IsOctal(jule::U8 _43316_b) {
	return (('0' <= _43316_b) && (_43316_b <= '7'));
}



inline jule::Bool _1e6a61b01_IsHex(jule::U8 _43614_b) {
	{
		
		if ((('0' <= _43614_b) && (_43614_b <= '9'))) {
			_case_begin_1ae8934d6:;
			{
				return true;
			}
		}
		else if ((('a' <= _43614_b) && (_43614_b <= 'f'))) {
			_case_begin_1ae892cbb:;
			{
				return true;
			}
		}
		else if ((('A' <= _43614_b) && (_43614_b <= 'F'))) {
			_case_begin_1ae892d32:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae892c55:;
			{
				return false;
			}
		}
		_match_end_1ae892b9a:;
	};
}



inline jule::Bool _1e6a61d98_IsAssign(jule::U64 _45117_id) {
	return (((((((_45117_id == static_cast<jule::U64>(2LLU)) || (_45117_id == static_cast<jule::U64>(31LLU))) || (_45117_id == static_cast<jule::U64>(34LLU))) || (_45117_id == static_cast<jule::U64>(20LLU))) || (_45117_id == static_cast<jule::U64>(28LLU))) || (_45117_id == static_cast<jule::U64>(3LLU))) || (_45117_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1e6a62140_IsPostfixOp(jule::Str _46220_kind) {
	{
		auto &expr = _1e6a56cc2_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1ae894e33:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46220_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_1ae894e33:;
			++it;
			goto _iter_begin_1ae894e33;
		}
		_iter_end_1ae894e33:;
	};
	return false;
}



inline jule::Bool _1e6a623d7_IsAssignOp(jule::Str _47219_kind) {
	if (_1e6a62140_IsPostfixOp(_47219_kind)) {
		return true;
	};
	{
		auto &expr = _1e6a57113_AssignOps;
		auto it = expr.begin();
		_iter_begin_1ae89793b:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47219_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_1ae89793b:;
			++it;
			goto _iter_begin_1ae89793b;
		}
		_iter_end_1ae89793b:;
	};
	return false;
}



inline jule::Ptr<_1e6a62b8a_File> _1e6a641b9_NewFileSet(jule::Str _6319_path) {
	return jule::new_ptr<_1e6a62b8a_File>(_1e6a62b8a_File{._field_Path=_6319_path, });
}



inline _1e6735e35_Log _1e6a659e5_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1e6a62b8a_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_1e6736375_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _1e6a65d7a_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1ae8a3051:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1ae8a3051:;
			++it;
			_1259_i++;
			goto _iter_begin_1ae8a3051;
		}
		_iter_end_1ae8a3051:;
	};
	return true;
}



inline jule::Str _1e6a661bb_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_1e6a6131a_IsDecimal(_13913_b))))) {
				goto _iter_end_1ae8a67b3;
			};
		}
	_iter_next_1ae8a67b3:;
	}
	_iter_end_1ae8a67b3:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _1e6a66551_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _1e6a661bb_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _1e6a66892_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1e6a6131a_IsDecimal(_17913_b)) {
					_case_begin_1ae8a9a80:;
					{
						goto _iter_next_1ae8a8298;
					}
				}
				else if (_1e6a68146_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1ae8a9ae6:;
					{
						return _1e6a66551_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_1ae8a9a19:;
					{
						goto _iter_end_1ae8a8298;
					}
				}
				_match_end_1ae8a99a3:;
			};
		}
	_iter_next_1ae8a8298:;
	}
	_iter_end_1ae8a8298:;;
	return jule::Str();
}



inline jule::Str _1e6a66bd3_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1e6a661bb_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _1e6a67024_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1e6a661bb_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _1e6a67475_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _1e6a661bb_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_1e6a6131a_IsDecimal(_21213_b))))) {
				goto _iter_end_1ad0b5952;
			};
		}
	_iter_next_1ad0b5952:;
	}
	_iter_end_1ad0b5952:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _1e6a6771c_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1ace58196:;
					{
						_22730_lit = _1e6a67475_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1ace5d696:;
					{
						goto _iter_next_1acd1a8c7;
					}
				}
				else if (_1e6a67d05_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1ace60b82:;
					{
						_22730_lit = _1e6a661bb_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_1e6a6131a_IsDecimal(_23113_b)))) {
					_case_begin_1ace8eb17:;
					{
						goto _iter_end_1acd1a8c7;
					}
				}
				_match_end_1acd56e30:;
			};
		}
	_iter_next_1acd1a8c7:;
	}
	_iter_end_1acd1a8c7:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _1e6a679b4_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_1e6a65d7a_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_1e6a615b2_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1ace7b86d;
			};
		}
	_iter_next_1ace7b86d:;
	}
	_iter_end_1ace7b86d:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _1e6a67d05_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _1e6a68146_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _1e6a68487_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1e6a6131a_IsDecimal(_28713_b)) {
					_case_begin_1ace54e51:;
					{
						goto _iter_next_1ac567c18;
					}
				}
				else if (_1e6a68146_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1ad0b6e70:;
					{
						return true;
					}
				}
				else {
					_case_begin_1ad087c43:;
					{
						goto _iter_end_1ac567c18;
					}
				}
				_match_end_1ad086329:;
			};
		}
	_iter_next_1ac567c18:;
	}
	_iter_end_1ac567c18:;;
	return false;
}



inline jule::Bool _1e6a687c8_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1ac567ee3:;
			{
				goto _case_begin_1ac568059;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1ac568059:;
			{
				goto _case_begin_1acd07ac3;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1acd07ac3:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ad0660ea:;
			{
				return true;
			}
		}
		_match_end_1ad05378b:;
	};
}



inline jule::Bool _1e6a68b19_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1accd6673:;
			{
				goto _case_begin_1acd42437;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1acd42437:;
			{
				goto _case_begin_1acce7266;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1acce7266:;
			{
				goto _case_begin_1acce72dd;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1acce72dd:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ad0b272e:;
			{
				return true;
			}
		}
		_match_end_1ad0b2674:;
	};
}



inline jule::Str _1e6a6906a_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _1e6a67475_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_1e6a67d05_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _1e6a661bb_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_1e6a61859_IsOctal(_35013_b))))) {
				goto _iter_end_1ad08b5d7;
			};
		}
	_iter_next_1ad08b5d7:;
	}
	_iter_end_1ad08b5d7:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _1e6a69312_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_1e6a687c8_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1ad10ada4:;
					{
						_37127_lit = _1e6a67024_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1e6a68b19_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1ad10ae2b:;
					{
						_37127_lit = _1e6a66bd3_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1e6a68146_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1ad10aea3:;
					{
						_37127_lit = _1e6a66551_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1e6a68487_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1ad10b02a:;
					{
						_37127_lit = _1e6a66892_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1e6a61b01_IsHex(_38313_b))))) {
					_case_begin_1ad10b0a2:;
					{
						goto _iter_end_1ad10a249;
					}
				}
				_match_end_1ad10acb6:;
			};
		}
	_iter_next_1ad10a249:;
	}
	_iter_end_1ad10a249:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _1e6a69653_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1e6a61b01_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_1ad10dbba:;
	}
	_iter_end_1ad10dbba:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _1e6a698ea_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _1e6a69653_hexEscape(_42227_txt,10LL);
}



inline jule::Str _1e6a69bb4_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _1e6a69653_hexEscape(_42730_txt,6LL);
}



inline jule::Str _1e6a69d6d_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _1e6a69653_hexEscape(_43219_txt,4LL);
}



inline jule::Str _1e6a6a104_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_1e6a61859_IsOctal(_43716_txt[1LL]))) || (!(_1e6a61859_IsOctal(_43716_txt[2LL])))) || (!(_1e6a61859_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_1e6735e35_Log> _1e6a6eaed_Lex(jule::Ptr<_1e6a62b8a_File> _82616_f, jule::I64 _82626_mode) {
	if ((_82616_f == nullptr)) {
		return nullptr;
	};
	_1e6a6a7db_lex _83113_lex = _1e6a6a7db_lex{._field_mode=_82626_mode, ._field_file=_82616_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1e6a6d37c_newLine(&_83113_lex);
	_1e6a6b37a_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82616_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline void _1a99b4d38_lshiftUnsig(_1a9956c86_Const& _58721_c, _1a9956c86_Const& _58732_x) {
	jule::U64 _5889_l = _1a99add87_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1a99add87_AsU64(&_58732_x);;
	_1a99ae5e6_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1a99b5135_rshiftUnsig(_1a9956c86_Const& _59321_c, _1a9956c86_Const& _59332_x) {
	jule::U64 _5949_l = _1a99add87_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1a99add87_AsU64(&_59332_x);;
	_1a99ae5e6_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1ac0b716e_LeadingZeros64(jule::U64 _6123_x) {
	return static_cast<jule::I64>((64LL - _1ac0be880_Len64(_6123_x)));
}



inline jule::I64 _1ac0b81c5_TrailingZeros(jule::U64 _8322_x) {
	;
	return static_cast<jule::I64>(_1ac0b8d63_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8322_x))));
}



inline jule::I64 _1ac0b8abb_TrailingZeros32(jule::U32 _10524_x) {
	if ((_10524_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ac0b7823__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10524_x & (-(_10524_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1ac0b8d63_TrailingZeros64(jule::U64 _11424_x) {
	if ((_11424_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ac0b7e72__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11424_x & (-(_11424_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1ac0be5d8_Len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1ac0be880_Len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1ac0c0540_Add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1ac0c1bc3_Mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1b37e617c_F32Bits(jule::F32 _4116_f) {
	return (*(((jule::U32*)((&(_4116_f))))));
}



inline jule::F32 _1b37e6468_F32FromBits(jule::U32 _4720_b) {
	return (*(((jule::F32*)((&(_4720_b))))));
}



inline jule::U64 _1b37e6710_F64Bits(jule::F64 _5216_f) {
	return (*(((jule::U64*)((&(_5216_f))))));
}



inline jule::F64 _1b37e6a2e_F64FromBits(jule::U64 _5820_b) {
	return (*(((jule::F64*)((&(_5820_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1b37e913b_Frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1abe8e92b:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1ac05bdd3_IsInf(_4718_f,0LL) || _1ac054ace_IsNaN(_4718_f)) {
			_case_begin_1abe8e9a3:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1abe8e83d:;
	};
	std::tie(_4718_f,_4739_exp) = _1ac05d4de_normalize(_4718_f);
	jule::U64 _5613_x = _1b37e6710_F64Bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1b37e6a2e_F64FromBits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1ac053b99_NaN(void) {
	return static_cast<jule::F64>(_1b37e6a2e_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1ac054ace_IsNaN(jule::F64 _5214_f) {
	return (_5214_f != _5214_f);
}



inline jule::F64 _1ac056570_Inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1b37e6a2e_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1b37e6a2e_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1ac05bdd3_IsInf(jule::F64 _7214_f, jule::I64 _7222_sign) {
	return (((_7222_sign >= 0LL) && (_7214_f > jule::MAX_F64)) || ((_7222_sign <= 0LL) && (_7214_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1ac05d4de_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1ac07512c_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1ac06d6a8_Log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ac054ace_IsNaN(_11112_x) || _1ac05bdd3_IsInf(_11112_x,1LL)) {
			_case_begin_1aeab42ea:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1aeab4372:;
			{
				return static_cast<jule::F64>(_1ac053b99_NaN());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1aeab43e9:;
			{
				return static_cast<jule::F64>(_1ac056570_Inf(-1LL));
			}
		}
		_match_end_1aeab422e:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1b37e913b_Frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1ac07512c_Abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1b37e6a2e_F64FromBits(static_cast<jule::U64>((_1b37e6710_F64Bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1ac0ca56c_Modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_absF = _1ac07512c_Abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1aeb316b9:;
		}
		_iter_end_1aeb316b9:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1ac0cad31_Log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1b37e913b_Frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1ac06d6a8_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1b37a7dca_FmtFloat(jule::F64 _7817_f, jule::U8 _7825_fmt, jule::I64 _7836_prec, jule::I64 _7847_bit_size) {
	return static_cast<jule::Str>(_1b37ce8d5_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1ac10926b_max(static_cast<jule::I64>((_7836_prec + 4LL)),24LL)),_7817_f,_7825_fmt,_7836_prec,_7847_bit_size));
}



inline jule::Slice<jule::U8> _1b37ce8d5_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1ac106026_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aee2238e:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1b37e617c_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1ac106026_floatInfo>)((&(_1b37b8a9a_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aee2257b:;
			{
				_8313_bits=static_cast<jule::U64>(_1b37e6710_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1ac106026_floatInfo>)((&(_1b37c7724_f64info))));
			}
		}
		else {
			_case_begin_1aee21c62:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aee20920:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1aee25c22:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1aee2820d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1aee28395:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1aee2720c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1aee27130:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aee2676c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1aee2216e:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1aee25bbc:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1ac108468_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1ac108ad9_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1ac106510_decimalSlice _13213_digs = _1ac106510_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1ac113d7a_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee2c3bb:;
				{
					_8258_prec=static_cast<jule::I64>(_1ac10926b_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee2c432:;
				{
					_8258_prec=static_cast<jule::I64>(_1ac10926b_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee2c4dc:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aee2b6a6:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee2ea3e:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee2e39b:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1aee2e577:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aee2e434:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ac112b8c_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ac1130cc_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1ac106851_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1ac106ea0_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1ac106851_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1ac106026_floatInfo& _18327_flt) {
	_1ac117950_decimal _18413_d = _1ac117950_decimal{};;
	_1ac117d29_assign(&_18413_d, _1835_mant);
	_1ac11809e_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1ac106510_decimalSlice _18713_digs = _1ac106510_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1ac10739b_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1ac106510_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee347ad:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee3710c:;
				{
					_18233_prec=static_cast<jule::I64>(_1ac10926b_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee37173:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aee3677c:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee36194:;
				{
					_1ac11881e_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee3620a:;
				{
					_1ac11881e_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee36282:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ac11881e_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1aee360d9:;
		};
		_18713_digs=_1ac106510_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1ac106ea0_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1ac106ea0_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1ac106510_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aee41ee6:;
			{
				return _1ac1078c9_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aee4205c:;
			{
				return _1ac107d5d_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aee420c3:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1ac1078c9_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1ac107d5d_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1ac10926b_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1aee41da3:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1ac10739b_roundShortest(_1ac117950_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1ac106026_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1ac117950_decimal _28713_upper = _1ac117950_decimal{};;
	_1ac117d29_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ac11809e_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1ac117950_decimal _30613_lower = _1ac117950_decimal{};;
	_1ac117d29_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1ac11809e_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1aee500c0;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1aee55416:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1aee5548d:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1aee55515:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1aee5534a:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1abeb4984:;
					{
						_1ac11881e_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1abeb4a0b:;
					{
						_1ac118324_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1abeb4a83:;
					{
						_1ac118599_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1abeb48b8:;
			};
		}
	_iter_next_1aee500c0:;
	}
	_iter_end_1aee500c0:;;
}



inline jule::Slice<jule::U8> _1ac1078c9_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1ac106510_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1ac108e2a_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1abeba0d8:;
		}
		_iter_end_1abeba0d8:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1abebcbac:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1abebde77:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1abebc2e9:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1abeba759:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1ac107d5d_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1ac106510_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1ac108e2a_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1abec1ac3:;
		}
		_iter_end_1abec1ac3:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1abec3333:;
		}
		_iter_end_1abec3333:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1ac108468_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1ac106026_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1ac11c8bc_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1ac11c8bc_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1ac108ad9_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1ac106026_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1abec85d0:;
	}
	_iter_end_1abec85d0:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1abecd4b4:;
		}
		_iter_end_1abecd4b4:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1abed0cd0:;
		}
		_iter_end_1abed0cd0:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1ac109e1a_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1abed3222:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1abed58d9:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1abed3486:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1abed140c:;
	};
	return _50613_dst;
}



inline jule::I64 _1ac108e2a_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1ac10926b_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1ac109e1a_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1ac10a349_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1abeda6be:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1abeda56a:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1ac109e1a_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1abedc43a:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ac109e1a_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1abedc24d:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ac109e1a_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1abedc2c5:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1abedbda7:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1abedbcca:;
					};
				};
			}
		}
		else {
			_case_begin_1abed97bc:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1abed9767:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1abee2110:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1abee174c:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1abee1a16:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1abee1890:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1abee1b04:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1abee32a9:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1abee3254:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1abee42bb:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1abee591b:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1ac109e1a_lower(_10912_c)) && (_1ac109e1a_lower(_10912_c) <= 'z'))) {
						_case_begin_1abee57d9:;
						{
							_11017_d=static_cast<jule::U8>(((_1ac109e1a_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1abee5850:;
						{
							goto _iter_next_1abee42bb;
						}
					}
					else {
						_case_begin_1abee5355:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1abee52de:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1abee42bb:;
			++it;
			goto _iter_begin_1abee42bb;
		}
		_iter_end_1abee42bb:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1ac10a734_ParseUint(jule::Str _14622_s, jule::I64 _14634_base, jule::I64 _14649_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1ac10a349_parseUint(_14622_s,_14634_base,_14649_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1ac10ab96_ParseInt(jule::Str _17221_s, jule::I64 _17229_base, jule::I64 _17244_bitSize) {
	if (_17221_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17221_s[0LL] == '+')) {
		(_17221_s).mut_slice(1LL);;
	} else if ((_17221_s[0LL] == '-')) {
		_17813_neg=true;
		(_17221_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1ac10a349_parseUint(_17221_s,_17229_base,_17244_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17244_bitSize == 0LL)) {
		_17244_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17244_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1ac10b7ac_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1b37e6a2e_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1ac0b716e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1ac0c1bc3_Mul64(_4122_man,_1ac10c714_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1ac0c1bc3_Mul64(_4122_man,_1ac10c714_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1b37e6a2e_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1ac10bba8_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1b37e6468_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1ac0b716e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1ac0c1bc3_Mul64(_11022_man,_1ac10c714_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1ac0c1bc3_Mul64(_11022_man,_1ac10c714_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1b37e6468_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1ac10da78_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1b00aa824:;
	}
	_iter_end_1b00aa824:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1ac10dd75_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b00b0230:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1b00b02a7;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b00b02a7:;
			{
				jule::I64 _8317_caseN = _1ac10da78_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1ac056570_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b00b032e:;
			{
				if ((_1ac10da78_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1ac053b99_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1b00b0164:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ac10e11c_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1b00b6478:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1b00b64de:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1b00b629c:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1ac109e1a_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1b00bc902:;
					{
						goto _iter_next_1b00bbcec;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1b00bc979:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1b00bbcec;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1b00bca01:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1b00bbcec;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1b00bbcec;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1ac109e1a_lower(_13313_c))) && (_1ac109e1a_lower(_13313_c) <= 'f'))) {
					_case_begin_1b00bca78:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1ac109e1a_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1b00bbcec;
					}
				}
				_match_end_1b00bc825:;
			};
			goto _iter_end_1b00bbcec;
		}
	_iter_next_1b00bbcec:;
	}
	_iter_end_1b00bbcec:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1ac109e1a_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1b00c7522;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1b00c7522:;
		}
		_iter_end_1b00c7522:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1ac110b79_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1b37c7724_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1b00d2bae:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1b00d2c36:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1ac110063_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1ac110063_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1b00d2cad:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1ac110063_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1b00d2b04:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1ac111064_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1b37b8a9a_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1b00d7cd5:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1b00d7d5c:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1ac1103e8_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1ac1103e8_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1b00d7dd4:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1ac1103e8_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1b00d7c2a:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1ac11163b_atofHex(jule::Str _55112_s, _1ac106026_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1b00dd835:;
	}
	_iter_end_1b00dd835:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b00ddcec:;
	}
	_iter_end_1b00ddcec:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1b00e0936:;
	}
	_iter_end_1b00e0936:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1b37b8a9a_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1b37e6468_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1b37e6a2e_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1ac1119e3_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1ac10dd75_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1ac10e11c_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1ac11163b_atofHex(_61611_s.slice(0LL,_61629_n),_1b37b8a9a_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1ac111064_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1ac10bba8_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1ac10bba8_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1ac117950_decimal _66213_d = _1ac117950_decimal{};;
	if ((!(_1ac10e815_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1ac10eb23_floatBits(&_66213_d, _1b37b8a9a_f32info);
	_61621_f=static_cast<jule::F32>(_1b37e6468_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac111c8a_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1ac10dd75_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1ac10e11c_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1ac11163b_atofHex(_67411_s.slice(0LL,_67429_n),_1b37c7724_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1ac110b79_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1ac10b7ac_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1ac10b7ac_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1ac117950_decimal _71913_d = _1ac117950_decimal{};;
	if ((!(_1ac10e815_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1ac10eb23_floatBits(&_71913_d, _1b37c7724_f64info);
	_67421_f=static_cast<jule::F64>(_1b37e6a2e_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac1120cb_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1ac1119e3_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1ac111c8a_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1ac11241c_ParseFloat(jule::Str _76519_s, jule::I64 _76527_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1ac1120cb_parseFloatPrefix(_76519_s,_76527_bit_size);
	if (((_76613_n != _76519_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1ac112b8c_ryuFtoaFixed32(_1ac106510_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1ac0be5d8_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1ac114122_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1ac11581b_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1ac116047_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1ac113907_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1ac1130cc_ryuFtoaFixed64(_1ac106510_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1ac0be880_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1ac114122_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1ac115c06_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1ac116047_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1ac113907_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1ac113907_formatDecimal(_1ac106510_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1ac113462_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aee76019:;
	}
	_iter_end_1aee76019:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1aee79a12:;
	}
	_iter_end_1aee79a12:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1aee80155:;
	}
	_iter_end_1aee80155:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1ac113d7a_ryuFtoaShortest(_1ac106510_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1ac106026_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ac0b8d63_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1ac114d48_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1ac1147a4_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1ac114d48_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1ac114122_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1b37b8a9a_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1ac11581b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1ac11581b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1ac11581b_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1ac115c06_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1ac115c06_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1ac115c06_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1ac116047_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1ac116047_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1ac116047_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1ac114d48_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1ac114122_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1ac1143b9_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ac1147a4_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1ac106026_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1ac114d48_ryuDigits(_1ac106510_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1ac1162de_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1ac1162de_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1ac1162de_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1ac115431_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1ac115431_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1aeea08e5:;
		}
		_iter_end_1aeea08e5:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1ac115431_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1aeea2bd3:;
	}
	_iter_end_1aeea2bd3:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1aeea0670:;
	}
	_iter_end_1aeea0670:;;
}



inline void _1ac115431_ryuDigits32(_1ac106510_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1aeea65aa;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1aeea65aa:;
	}
	_iter_end_1aeea65aa:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1aeead1d8:;
	}
	_iter_end_1aeead1d8:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ac11581b_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1ac10c714_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1ac0c1bc3_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1ac1143b9_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ac115c06_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1ac10c714_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ac1143b9_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1ac0c1bc3_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1ac0c1bc3_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1ac0c0540_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1ac116047_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1aeebcb76:;
	}
	_iter_end_1aeebcb76:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1ac1162de_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1ac119138_trim(_1ac117950_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1aeec21b9:;
	}
	_iter_end_1aeec21b9:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1ac1193e1_rightShift(_1ac117950_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1aeec5563:;
				}
				_iter_end_1aeec5563:;;
				goto _iter_end_1aeec3ee0;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1aeec3ee0:;
	}
	_iter_end_1aeec3ee0:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1aeec7d3a:;
	}
	_iter_end_1aeec7d3a:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1aeec8995:;
	}
	_iter_end_1aeec8995:;;
	_46320_a._field_nd=_46513_w;
	_1ac119138_trim(_46320_a);
}



inline jule::Bool _1ac119853_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1aeecc7bd:;
	}
	_iter_end_1aeecc7bd:;;
	return false;
}



inline void _1ac119ac8_leftShift(_1ac117950_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1ac1173bc_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1ac119853_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1ac1173bc_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1aeed1173:;
	}
	_iter_end_1aeed1173:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1aeed3791:;
	}
	_iter_end_1aeed3791:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1ac119138_trim(_53119_a);
}



inline jule::Bool _1ac119e19_shouldRoundUp(_1ac117950_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1ac11b69b_FmtUint(jule::U64 _6016_i, jule::I64 _6024_base) {
	if (((true && (_6016_i < 100LLU)) && (_6024_base == 10LL))) {
		return _1ac11c0e7_small(static_cast<jule::I64>(static_cast<jule::I64>(_6016_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1ac11c8bc_fmtBits(nullptr,_6016_i,_6024_base,false,false);
	return _6413_s;
}



inline jule::Str _1ac11ba31_FmtInt(jule::I64 _7115_i, jule::I64 _7123_base) {
	if ((((true && (0LL <= _7115_i)) && (_7115_i < 100LL)) && (_7123_base == 10LL))) {
		return _1ac11c0e7_small(static_cast<jule::I64>(static_cast<jule::I64>(_7115_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1ac11c8bc_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7115_i)),_7123_base,(_7115_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1ac11bcc8_Itoa(jule::I64 _8013_i) {
	return _1ac11ba31_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1ac11c0e7_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1ac11c38e_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ac11c8bc_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1b0022b76:;
		}
		_iter_end_1b0022b76:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1ac11c38e_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1ac0b81c5_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b002b795:;
		}
		_iter_end_1b002b795:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b002e534:;
		}
		_iter_end_1b002e534:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1ac11dda7_RealKindOf(jule::Str _4519_kind) {
	{
		auto &_match_expr{ _4519_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b0049d9b:;
			{
				return _1ac11d3c3_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b0049e12:;
			{
				return _1ac11d6d1_SysUint;
			}
		}
		else {
			_case_begin_1b0049c7a:;
			{
				return _4519_kind;
			}
		}
		_match_end_1b0049bc0:;
	};
}



inline jule::I64 _1ac11e14e_BitsizeOf(jule::Str _5918_k) {
	{
		auto &_match_expr{ _5918_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae62c8d0:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae62c946:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae62c2c5:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae62c33b:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ae62c3a2:;
			{
				return _1ac11d071_BitSize;
			}
		}
		else {
			_case_begin_1ae62c1c6:;
			{
				return -1LL;
			}
		}
		_match_end_1ae62c083:;
	};
}



inline jule::Str _1ac11e46d_IntFromBits(jule::I64 _8620_bits) {
	{
		auto &_match_expr{ _8620_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ae62e4e7:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ae62e55d:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae62e5c4:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae62e6d4:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1ae62d87b:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae62e3c6:;
	};
}



inline jule::Str _1ac11e715_UintFromBits(jule::I64 _10421_bits) {
	{
		auto &_match_expr{ _10421_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ae63086c:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ae6308d3:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae630949:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae630c46:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1ae62eddd:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae62ec9a:;
	};
}



inline jule::Str _1ac11e9ac_FloatFromBits(jule::I64 _12222_bits) {
	{
		auto &_match_expr{ _12222_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1ae631d57:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae631dbd:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1ae63142d:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae6312da:;
	};
}



inline jule::Bool _1ac12055c_CheckBitFloat(jule::Str _15022_val, jule::I64 _15032_bit) {
	({
		auto except = _1ac11241c_ParseFloat(_15022_val,_15032_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1ac120804_BitsizeOfFloat(jule::F64 _16023_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16023_x) && (_16023_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ae63593d:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae636840:;
			{
				return 64LL;
			}
		}
		_match_end_1ae636b92:;
	};
}



inline jule::I64 _1ac120a9b_BitsizeOfInt(jule::I64 _17621_x) {
	{
		
		if (((-128LL <= _17621_x) && (_17621_x <= 127LL))) {
			_case_begin_1ae637d4c:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17621_x) && (_17621_x <= 32767LL))) {
			_case_begin_1ae637db3:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17621_x) && (_17621_x <= 2147483647LL))) {
			_case_begin_1ae637e3a:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae637b1b:;
			{
				return 64LL;
			}
		}
		_match_end_1ae637a3e:;
	};
}



inline jule::I64 _1ac120d43_BitsizeOfUint(jule::U64 _19622_x) {
	{
		
		if ((_19622_x <= 255LLU)) {
			_case_begin_1ae639bb7:;
			{
				return 8LL;
			}
		}
		else if ((_19622_x <= 65535LLU)) {
			_case_begin_1ae639c2d:;
			{
				return 16LL;
			}
		}
		else if ((_19622_x <= 4294967295LLU)) {
			_case_begin_1ae639ca5:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae639b0c:;
			{
				return 64LL;
			}
		}
		_match_end_1ae63a239:;
	};
}



inline void _1ac120ea8_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1e676e721_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ae63ab30:;
				{
					_1ac11d071_BitSize=64LL;
					_1ac11d3c3_SysInt=jule::Str("i64", 3);
					_1ac11d6d1_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ae63b449:;
				{
					_1ac11d071_BitSize=32LL;
					_1ac11d3c3_SysInt=jule::Str("i32", 3);
					_1ac11d6d1_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1ae63aa53:;
		};
	};
}



inline void _1ac12111d_init(void) {
	_1ac120ea8_UpdateTarget();
}



inline jule::F64 _1ac125474_Min(jule::Str _6116_k) {
	_6116_k=_1ac11dda7_RealKindOf(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae63e293:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae63e309:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae63dc43:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae63dcba:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae63dd42:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae63ddb9:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1ae63bc96:;
			{
				return 0LL;
			}
		}
		_match_end_1ae63baa9:;
	};
}



inline jule::F64 _1ac125760_Max(jule::Str _8316_k) {
	_8316_k=_1ac11dda7_RealKindOf(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae63e040:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae64098c:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae640a03:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae640a69:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae640ad0:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae640d44:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae640daa:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae640e21:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae640e98:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae641020:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1ae640805:;
			{
				return 0LL;
			}
		}
		_match_end_1ae63e75a:;
	};
}



inline jule::Bool _1ac125ad4_IsI8Compatible(jule::Str _627_k) {
	return (_627_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac125dc0_IsI16Compatible(jule::Str _1128_k) {
	return ((_1128_k == jule::Str("i8", 2)) || (_1128_k == jule::Str("i16", 3)));
}



inline jule::Bool _1ac126167_IsI32Compatible(jule::Str _1728_k) {
	return ((((_1728_k == jule::Str("i8", 2)) || (_1728_k == jule::Str("i16", 3))) || (_1728_k == jule::Str("i32", 3))) || (_1728_k == jule::Str("u8", 2)));
}



inline jule::Bool _1ac126486_IsI64Compatible(jule::Str _2528_k) {
	return ((((_2528_k == jule::Str("i8", 2)) || (_2528_k == jule::Str("i16", 3))) || (_2528_k == jule::Str("i32", 3))) || (_2528_k == jule::Str("i64", 3)));
}



inline jule::Bool _1ac12672d_IsU8Compatible(jule::Str _3327_k) {
	return (_3327_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac1269c5_IsU16Compatible(jule::Str _3828_k) {
	return ((_3828_k == jule::Str("u8", 2)) || (_3828_k == jule::Str("u16", 3)));
}



inline jule::Bool _1ac126c6c_IsU32Compatible(jule::Str _4328_k) {
	return (((_4328_k == jule::Str("u8", 2)) || (_4328_k == jule::Str("u16", 3))) || (_4328_k == jule::Str("u32", 3)));
}



inline jule::Bool _1ac1270e1_IsU64Compatible(jule::Str _5028_k) {
	return ((((_5028_k == jule::Str("u8", 2)) || (_5028_k == jule::Str("u16", 3))) || (_5028_k == jule::Str("u32", 3))) || (_5028_k == jule::Str("u64", 3)));
}



inline jule::Bool _1ac127388_IsF32Compatible(jule::Str _5828_k) {
	return (_5828_k == jule::Str("f32", 3));
}



inline jule::Bool _1ac127630_IsF64Compatible(jule::Str _6328_k) {
	return (_6328_k == jule::Str("f64", 3));
}



inline jule::Bool _1ac127971_TypesAreCompatible(jule::Str _7031_k1, jule::Str _7040_k2) {
	{
		auto &_match_expr{ _7031_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ae649699:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae64990d:;
			{
				return (_7040_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ae649974:;
			{
				return (_7040_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ae6499da:;
			{
				return (_7040_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae649a51:;
			{
				return _1ac125ad4_IsI8Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae649ab7:;
			{
				return _1ac125dc0_IsI16Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae649b2d:;
			{
				return _1ac126167_IsI32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae649b94:;
			{
				return _1ac126486_IsI64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae649c1b:;
			{
				return _1ac12672d_IsU8Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae649c82:;
			{
				return _1ac1269c5_IsU16Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae649d09:;
			{
				return _1ac126c6c_IsU32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae649d81:;
			{
				return _1ac1270e1_IsU64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae649e08:;
			{
				return _1ac127388_IsF32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae649e80:;
			{
				return _1ac127630_IsF64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ae64a007:;
			{
				return (_7040_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ae64a07e:;
			{
				return (_7040_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1ae649457:;
			{
				return false;
			}
		}
		_match_end_1ae64938b:;
	};
}



inline jule::Bool _1ac127c18_IsI16Greater(jule::Str _11025_k) {
	return (_11025_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac127eb0_IsI32Greater(jule::Str _11525_k) {
	return ((_11525_k == jule::Str("i8", 2)) || (_11525_k == jule::Str("i16", 3)));
}



inline jule::Bool _1ac128257_IsI64Greater(jule::Str _12025_k) {
	return (((_12025_k == jule::Str("i8", 2)) || (_12025_k == jule::Str("i16", 3))) || (_12025_k == jule::Str("i32", 3)));
}



inline jule::Bool _1ac1284ee_IsU16Greater(jule::Str _12725_k) {
	return (_12725_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac128950_IsU32Greater(jule::Str _13225_k) {
	return ((_13225_k == jule::Str("u8", 2)) || (_13225_k == jule::Str("u16", 3)));
}



inline jule::Bool _1ac128be7_IsU64Greater(jule::Str _13825_k) {
	return (((_13825_k == jule::Str("u8", 2)) || (_13825_k == jule::Str("u16", 3))) || (_13825_k == jule::Str("u32", 3)));
}



inline jule::Bool _1ac128e8e_IsF32Greater(jule::Str _14521_k) {
	return (_14521_k != jule::Str("f64", 3));
}



inline jule::Bool _1ac129236_IsF64Greater(jule::Str _15021_k) {
	return true;
}



inline jule::Bool _1ac129577_IsGreater(jule::Str _15522_k1, jule::Str _15531_k2) {
	{
		auto &_match_expr{ _15522_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae652e99:;
			{
				return _1ac12a5ab_IsSigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ae653010:;
			{
				return _1ac12a897_IsUnsigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ae65320d:;
			{
				return _1ac12a897_IsUnsigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae653274:;
			{
				return _1ac127c18_IsI16Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae6532da:;
			{
				return _1ac127eb0_IsI32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae653362:;
			{
				return _1ac128257_IsI64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae6533d9:;
			{
				return _1ac1284ee_IsU16Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae653461:;
			{
				return _1ac128950_IsU32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae65353d:;
			{
				return _1ac128be7_IsU64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae6535a4:;
			{
				return _1ac128e8e_IsF32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae65361a:;
			{
				return _1ac129236_IsF64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ae653681:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae652c57:;
			{
				return false;
			}
		}
		_match_end_1ae65263b:;
	};
}



inline jule::Bool _1ac12a5ab_IsSigInt(jule::Str _2721_k) {
	return (((((_2721_k == jule::Str("i8", 2)) || (_2721_k == jule::Str("i16", 3))) || (_2721_k == jule::Str("i32", 3))) || (_2721_k == jule::Str("i64", 3))) || (_2721_k == jule::Str("int", 3)));
}



inline jule::Bool _1ac12a897_IsUnsigInt(jule::Str _3623_k) {
	return ((((((_3623_k == jule::Str("u8", 2)) || (_3623_k == jule::Str("u16", 3))) || (_3623_k == jule::Str("u32", 3))) || (_3623_k == jule::Str("u64", 3))) || (_3623_k == jule::Str("uint", 4))) || (_3623_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1ac12ab3e_IsInt(jule::Str _4614_k) {
	return (_1ac12a5ab_IsSigInt(_4614_k) || _1ac12a897_IsUnsigInt(_4614_k));
}



inline jule::Bool _1ac12ae5d_IsFloat(jule::Str _5116_k) {
	return ((_5116_k == jule::Str("f32", 3)) || (_5116_k == jule::Str("f64", 3)));
}



inline jule::Bool _1ac12b205_IsNum(jule::Str _5614_k) {
	return (_1ac12ab3e_IsInt(_5614_k) || _1ac12ae5d_IsFloat(_5614_k));
}



inline jule::Bool _1ac12b49c_IsSigNum(jule::Str _6117_k) {
	return (_1ac12a5ab_IsSigInt(_6117_k) || _1ac12ae5d_IsFloat(_6117_k));
}



inline jule::Bool _1ac195b76_IsAscii(jule::I32 _1016_r) {
	;
	return (_1016_r <= 127LL);
}



inline jule::I32 _1ac195ca8_ToRune(jule::Slice<jule::U8> _1815_bytes) {
	if ((_1815_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1815_bytes[0LL] == '\\') && (_1815_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1ac1ad430_runeFromEsqSeq(_1815_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1e66aeac3_DecodeRune(_1815_bytes);
	};
	return _2313_r;
}



inline jule::Str _1ac1acac2_ToRawStr(jule::Slice<jule::U8> _3717_bytes) {
	return static_cast<jule::Str>(_3717_bytes);
}



inline jule::Str _1ac1acd7a_ToStr(jule::Slice<jule::U8> _4214_bytes) {
	if ((_4214_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4214_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4214_bytes.len())) {
		{
			jule::U8 _5013_b = _4214_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1ac1ad771_strEsqSeq(_4214_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1e66aeac3_DecodeRune(_4214_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1e66b0e37_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1ae6611b6:;
	}
	_iter_end_1ae6611b6:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1ac1ad122_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ae665cd1:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ae665d47:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ae665dad:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ae665e24:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ae665e9b:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ae666023:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ae66609a:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ae666122:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ae666199:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ae666221:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1ae665bb0:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1ac1ad430_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1ac1ad122_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1ae66b8a8:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1ac10a734_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ae66a6ba:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1ac10a734_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ae66c18e:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ac10a734_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1ae66a885:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ac10a734_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1ae66a830:;
	};
}



inline jule::Slice<jule::U8> _1ac1ad771_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1ac1ad430_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1ac2d1267_findFormatPrefix(jule::Slice<jule::U8>& _922_bytes, jule::I64& _938_start) {
	jule::I64 _1013_i = _938_start;;
	while ((_1013_i < _922_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1e66aeac3_DecodeRune(_922_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1b004ab6b:;
	}
	_iter_end_1b004ab6b:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1ac2d1a2b_getFormatRange(jule::I64& _2624_i, jule::Slice<jule::U8>& _2637_bytes) {
	jule::I64 _279_start = _2624_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2624_i < _2637_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1e66aeac3_DecodeRune(_2637_bytes.slice(_2624_i));
			_2624_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1b004d982:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b004da09:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2637_bytes.slice(_279_start,_2624_i);
						};
					}
				}
				_match_end_1b004d575:;
			};
		}
	_iter_next_1b004cac4:;
	}
	_iter_end_1b004cac4:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a9a6dd04_fmtByDefault(jule::Any& _4518_arg) {
	if ((_4518_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4518_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1b00509c8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1b37a7dca_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4518_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b0050676:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1b37a7dca_FmtFloat(static_cast<jule::F64>(_4518_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1b004dd8e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11ba31_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1b004de05:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11ba31_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1b0050368:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11ba31_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b00503ce:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11ba31_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1b0050445:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11b69b_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1b00504ab:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11b69b_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1b0050522:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11b69b_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b0050a50:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac11b69b_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b0050ab6:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4518_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1b0050b2c:;
			{
				if (_4518_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1b004cc7d:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4518_arg));
			}
		}
		_match_end_1b004cc28:;
	};
}



inline jule::Slice<jule::U8> _1a9a6d5d9_applyFmtByDefault(jule::I64& _8327_j, jule::Slice<jule::Any>& _8336_args) {
	jule::Any _849_arg = _8336_args[_8327_j];;
	(_8327_j)++;
	return _1a9a6dd04_fmtByDefault(_849_arg);
}



inline jule::Slice<jule::U8> _1a9a71db2_applyFmt(jule::Slice<jule::U8>& _9118_fmt, jule::I64& _9136_j, jule::Slice<jule::Any>& _9145_args) {
	if ((_9118_fmt.len() == 2LL)) {
		return _1a9a6d5d9_applyFmtByDefault(_9136_j,_9145_args);
	};
	if (((_9118_fmt.len() == 4LL) && (_9118_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9118_fmt;
}



inline jule::Slice<jule::U8> _1a9a7e919_formatBytes(jule::Str _10516_fmt, jule::Slice<jule::Any> _10526_args) {
	jule::Slice<jule::U8> _10613_fmtBytes = static_cast<jule::Slice<jule::U8>>(_10516_fmt);;
	if ((_10526_args.len() == 0LL)) {
		return _10613_fmtBytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10516_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1ac2d1267_findFormatPrefix(_10613_fmtBytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1ac2d1267_findFormatPrefix(_10613_fmtBytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1ac2d1a2b_getFormatRange(_11613_i,_10613_fmtBytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1b005a791;
			};
			_11213_bytes=jule::append(_11213_bytes,_1a9a71db2_applyFmt(_11917_format,_11413_j,_10526_args));
			if ((_11413_j >= _10526_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmtBytes.len());
				goto _iter_end_1b005a791;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1b005a791:;
	}
	_iter_end_1b005a791:;;
	if ((_11513_last < _10613_fmtBytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1ac3001dc_Format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1a9a7e919_formatBytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1a99c24c7_parameterUsesGenerics(jule::Ptr<_1a99badc7_Param>& _37427_p, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>& _37439_generics) {
	if (_1a99bb504_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1a9a1b488_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1a9a08ce4_TypeSymbol> _1a99c49a2_buildType(jule::Ptr<_1b394b326_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1ac1c5c3e_Value> _1a99c4c8d_buildExpr(jule::Ptr<_1b3950847_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1a99c5035_buildTypeAlias(jule::Ptr<_1b396297a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1a99c49a2_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1b392dea7_Field> _1a99c5354_buildField(jule::Ptr<_1b3966066_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1b392dea7_Field>(_1b392dea7_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1a99c49a2_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1b392dea7_Field>> _1a99c55eb_buildFields(jule::Slice<jule::Ptr<_1b3966066_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1b392dea7_Field>> _13513_fields = jule::Slice<jule::Ptr<_1b392dea7_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1b0419886:;
		if (it != expr.end()) {
			jule::Ptr<_1b3966066_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1a99c5354_buildField(_13617_decl));;
			}
			_iter_next_1b0419886:;
			++it;
			goto _iter_begin_1b0419886;
		}
		_iter_end_1b0419886:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1b393b9dc_Struct> _1a99c5893_buildStruct(jule::Ptr<_1b39668c4_StructDecl> _14220_decl) {
	return jule::new_ptr<_1b393b9dc_Struct>(_1b393b9dc_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1a99c55eb_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1a99badc7_Param> _1a99c5b3a_buildParam(jule::Ptr<_1b395bd1a_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1a99c49a2_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1a99badc7_Param>> _1a99c5eae_buildParams(jule::Slice<jule::Ptr<_1b395bd1a_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1a99badc7_Param>> _16613_params = jule::Slice<jule::Ptr<_1a99badc7_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1b041c724:;
		if (it != expr.end()) {
			jule::Ptr<_1b395bd1a_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1a99c5b3a_buildParam(_16717_decl));;
			}
			_iter_next_1b041c724:;
			++it;
			goto _iter_begin_1b041c724;
		}
		_iter_end_1b041c724:;
	};
	return _16613_params;
}



inline jule::Ptr<_1a99ba712_RetType> _1a99c6256_buildRetType(jule::Ptr<_1b394e439_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1a99ba712_RetType>(_1a99ba712_RetType{._field_Kind=_1a99c49a2_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1a99bc714_Fn> _1a99c64ed_buildFn(jule::Ptr<_1b395d13a_FnDecl> _18316_decl) {
	return jule::new_ptr<_1a99bc714_Fn>(_1a99bc714_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1a99c6256_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1a99c5eae_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1a99bc714_Fn>> _1a99c6795_buildMethods(jule::Slice<jule::Ptr<_1b395d13a_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1a99bc714_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1a99bc714_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1b04211b7:;
		if (it != expr.end()) {
			jule::Ptr<_1b395d13a_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1a99c64ed_buildFn(_20317_decl));;
			}
			_iter_next_1b04211b7:;
			++it;
			goto _iter_begin_1b04211b7;
		}
		_iter_end_1b04211b7:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1b2551bec_Trait> _1a99c6a3c_buildTrait(jule::Ptr<_1b3966ece_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1b2551bec_Trait>(_1b2551bec_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1a99c6795_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1b255334c_EnumItem> _1a99c6cd4_buildEnumItem(jule::Ptr<_1b39642d9_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1b255334c_EnumItem>(_1b255334c_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1a99c4c8d_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1b255334c_EnumItem>> _1a99c707b_buildEnumItems(jule::Slice<jule::Ptr<_1b39642d9_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1b255334c_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1b255334c_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1b042374c:;
		if (it != expr.end()) {
			jule::Ptr<_1b39642d9_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1a99c6cd4_buildEnumItem(_22817_decl));;
			}
			_iter_next_1b042374c:;
			++it;
			goto _iter_begin_1b042374c;
		}
		_iter_end_1b042374c:;
	};
	return _22713_items;
}



inline jule::Ptr<_1b2553d42_Enum> _1a99c7323_buildEnum(jule::Ptr<_1b3964d12_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1b2553d42_Enum>(_1b2553d42_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1a99c49a2_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1a99c707b_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1b2554d76_TypeEnumItem> _1a99c7774_buildTypeEnumItem(jule::Ptr<_1b3965818_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1b2554d76_TypeEnumItem>(_1b2554d76_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1a99c49a2_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>> _1a99c7a1b_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b3965818_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1b2554d76_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1b010a588:;
		if (it != expr.end()) {
			jule::Ptr<_1b3965818_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1a99c7774_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1b010a588:;
			++it;
			goto _iter_begin_1b010a588;
		}
		_iter_end_1b010a588:;
	};
	return _25313_items;
}



inline jule::Ptr<_1b255543c_TypeEnum> _1a99c7cb3_buildTypeEnum(jule::Ptr<_1b3965a16_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1b255543c_TypeEnum>(_1b255543c_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1a99c7a1b_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1ac17c960_Var> _1a99c805a_buildVar(jule::Ptr<_1b395e119_VarDecl> _26917_decl) {
	return jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1a99c49a2_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1a99c4c8d_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1a99c3572_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1ac17c960_Var>> _1a99c8302_buildVars(jule::Slice<jule::Ptr<_1b395e119_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1ac17c960_Var>> _28713_vars = jule::Slice<jule::Ptr<_1ac17c960_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1b010d998:;
		if (it != expr.end()) {
			jule::Ptr<_1b395e119_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1a99c805a_buildVar(_28817_decl));;
			}
			_iter_next_1b010d998:;
			++it;
			goto _iter_begin_1b010d998;
		}
		_iter_end_1b010d998:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1ac12e68c_Impl> _1a99c8599_buildImpl(jule::Ptr<_1b39675d9_Impl> _29418_decl) {
	return jule::new_ptr<_1ac12e68c_Impl>(_1ac12e68c_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1a99c6795_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1a99c8302_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1ac12d900_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1a9a04b8b_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1b046d522:;
			{
				jule::Ptr<_1a9a09663_Prim> _14513_prim = _1a9a06c9d_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1ac12b49c_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1b046d588:;
			{
				jule::Ptr<_1a9a09663_Prim> _15113_prim = _1a9a06c9d_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1ac12a897_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1b046d6ba:;
			{
				jule::Ptr<_1a9a09663_Prim> _15713_prim = _1a9a06c9d_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1ac12ae5d_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1b046d731:;
			{
				jule::Ptr<_1a9a09663_Prim> _16313_prim = _1a9a06c9d_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1ac12b205_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1b046d797:;
			{
				return _1a9a06088_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1b046d80d:;
			{
				return (!(_1a9a06088_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1b046d874:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1b046d8da:;
			{
				jule::Ptr<_1a9a09663_Prim> _17513_prim = _1a9a06c9d_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1ac12b205_IsNum(_17513_prim.get()._field_Kind) || _1a9a0c897_IsStr(_17513_prim.ptr()));
				};
				if ((_1a9a07276_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1b3967d9d_StructIns> _18213_s = _1a9a08200_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1b2553d42_Enum> _18913_enm = _1a9a074da_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1ac12b205_IsNum(_1a9a05087_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1b046d247:;
			{
				return false;
			}
		}
		_match_end_1b046d18c:;
	};
}



inline jule::Bool _1ac12dbdb_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1ac12bd71_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1b04744a1:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1b04744a1:;
			++it;
			goto _iter_begin_1b04744a1;
		}
		_iter_end_1b04744a1:;
	};
	return false;
}



inline jule::Ptr<_1ac13b358_scopeChecker> _1ac131727_newScopeCheckerBase(jule::Ptr<_1ac15b224_Sema>& _5929_s, jule::Ptr<_1a99c03b5_FnIns> _5943_owner) {
	return jule::new_ptr<_1ac13b358_scopeChecker>(_1ac13b358_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1ac1bee58_SymbolTable>(), });
}



inline jule::Ptr<_1ac13b358_scopeChecker> _1ac131aac_newScopeChecker(jule::Ptr<_1ac15b224_Sema>& _6725_s, jule::Ptr<_1a99c03b5_FnIns> _6739_owner) {
	jule::Ptr<_1ac13b358_scopeChecker> _6813_base = _1ac131727_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac13a0c1_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac13a544_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1ac13a0c1_scopeLabel> _1ac131ded_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1ac13b358_scopeChecker> _7736_scope) {
	jule::Ptr<_1ac13a0c1_scopeLabel> _7813_label = _1ac13eceb_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1ac13eceb_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1b048cb29:;
	}
	_iter_end_1b048cb29:;;
	return _7813_label;
}



inline jule::Bool _1ac132283_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1ac1346e7_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
			_case_begin_1b048ea1b:;
			{
				jule::Ptr<_1a99b6114_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1a99b6114_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b048ea93:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _9913_d = _9121_Model.operator jule::Ptr<_1ac1c4bb6_Data>();;
				return _1ac132283_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1b048e90b:;
	};
	return false;
}



inline jule::Bool _1ac1325c4_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1ac1346e7_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1346e7_Scope>>()) {
			_case_begin_1b0491bd8:;
			{
				return (_10521_stmt.operator jule::Ptr<_1ac1346e7_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac13553e_InfIter>>()) {
			_case_begin_1b0491c4e:;
			{
				return (_10521_stmt.operator jule::Ptr<_1ac13553e_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac136397_RangeIter>>()) {
			_case_begin_1b0491cb5:;
			{
				jule::Ptr<_1ac136397_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1ac136397_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1ac132283_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1359b2_WhileIter>>()) {
			_case_begin_1b0491da3:;
			{
				jule::Ptr<_1ac1359b2_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1ac1359b2_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1ac132283_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1ac132283_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac138443_Match>>()) {
			_case_begin_1b0491e2a:;
			{
				jule::Ptr<_1ac138443_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1ac138443_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1b0495a00:;
					if (it != expr.end()) {
						jule::Ptr<_1ac138e8d_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1b04969bd:;
								if (it != expr.end()) {
									jule::Ptr<_1ac1c4bb6_Data> &_12520_expr = *it;
									{
										if (_1ac132283_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1b04969bd:;
									++it;
									goto _iter_begin_1b04969bd;
								}
								_iter_end_1b04969bd:;
							};
						}
						_iter_next_1b0495a00:;
						++it;
						goto _iter_begin_1b0495a00;
					}
					_iter_end_1b0495a00:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac135253_Conditional>>()) {
			_case_begin_1b0491ea2:;
			{
				jule::Ptr<_1ac135253_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1ac135253_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1b04980a7:;
					if (it != expr.end()) {
						jule::Ptr<_1ac134ae3_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1ac132283_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1b04980a7:;
						++it;
						goto _iter_begin_1b04980a7;
					}
					_iter_end_1b04980a7:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b0492029:;
			{
				jule::Ptr<_1ac1c4bb6_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1ac1c4bb6_Data>();;
				return _1ac132283_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1b048eec2:;
			{
				return false;
			}
		}
		_match_end_1b048ee6c:;
	};
}



inline jule::I64 _1ac132915_countMatchType(jule::Ptr<_1ac138443_Match>& _14820_m, jule::Ptr<_1a9a04b8b_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1a9a05087_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1b049b0cc:;
		if (it != expr.end()) {
			jule::Ptr<_1ac138e8d_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1b049b0cc;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1b049b96d:;
					if (it != expr.end()) {
						jule::Ptr<_1ac1c4bb6_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1b049b0cc;
							};
							if ((_1509_kind == _1a9a05087_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1a9a04b8b_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1b049b96d:;
						++it;
						goto _iter_begin_1b049b96d;
					}
					_iter_end_1b049b96d:;
				};
			}
			_iter_next_1b049b0cc:;
			++it;
			goto _iter_begin_1b049b0cc;
		}
		_iter_end_1b049b0cc:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _1ac132bac_getDatasFromTupleData(jule::Ptr<_1ac1c4bb6_Data>& _17231_d) {
	if ((_1a9a0893c_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1a99b7d3b_TupleExprModel>>()) {
				_case_begin_1b04a0bb4:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1a99b7d3b_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1b049d5b8:;
				{
					jule::Ptr<_1a9a0e3d2_Tuple> _17821_t = _1a9a0893c_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1ac1c4bb6_Data>> _17921_r = jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1b049ead6:;
						if (it != expr.end()) {
							jule::Ptr<_1a9a04b8b_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1b049ead6:;
							++it;
							goto _iter_begin_1b049ead6;
						}
						_iter_end_1b049ead6:;
					};
					return _17921_r;
				}
			}
			_match_end_1b049d442:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ac1c4bb6_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _1ac133064_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_1b39514c4_TupleExpr>>()) {
			_case_begin_1b04a10e3:;
			{
				jule::Ptr<_1b39514c4_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_1b39514c4_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1b04a2677:;
					if (it != expr.end()) {
						jule::Ptr<_1b3950847_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_1b04a2677:;
						++it;
						goto _iter_begin_1b04a2677;
					}
					_iter_end_1b04a2677:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1b049d6b7:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_1b04a0e7d:;
	};
}



inline jule::Bool _1ac1334e8_checkMut(jule::Ptr<_1ac15b224_Sema>& _20718_s, jule::Ptr<_1ac1c4bb6_Data>& _20729_left, jule::Ptr<_1ac1c4bb6_Data> _20746_right, jule::Ptr<_1e6a5c800_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1b04a3e09:;
			{
				_1ac15ddd6_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1a9a06088_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1b04a4019:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1a9a08200_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1ac15ddd6_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1b04a37cc:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1b04a2d92:;
	};
}



inline jule::Bool _1ac13397c_checkAssign(jule::Ptr<_1ac15b224_Sema>& _22621_s, jule::Ptr<_1ac1c4bb6_Data>& _22636_left, jule::Ptr<_1ac1c4bb6_Data> _22653_right, jule::Ptr<_1e6a5c800_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1a99c03b5_FnIns> _2279_f = _1a9a07e8b_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1ac15ddd6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1ac1c5579_IsConst(_22636_left.ptr())) {
			_case_begin_1b04a8e20:;
			{
				_1ac15ddd6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1ac15e205_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1b04a8eec:;
			{
				_1ac15ddd6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1ac1334e8_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1b04a9074:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1b04a87c1:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1b04a866c:;
	};
}



inline jule::Bool _1ac133c24_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1b395a09e_AssignSt>>()) {
			_case_begin_1b04a912e:;
			{
				return (!(_24831_n.operator jule::Ptr<_1b395a09e_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3950847_Expr>>()) {
			_case_begin_1b04a9195:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b04aa916:;
			{
				return false;
			}
		}
		_match_end_1b04aac02:;
	};
}



inline jule::Bool _1ac133ebb_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1375c9_Postfix>>() || _match_expr.type_is<jule::Ptr<_1ac137a4c_Assign>>() || _match_expr.type_is<jule::Ptr<_1ac137e04_MultiAssign>>()) {
			_case_begin_1b04aba6b:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b04abad2:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1ac1c4bb6_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b6114_FnCallExprModel>>()) {
						_case_begin_1b04acebd:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b04ace57:;
						{
							return false;
						}
					}
					_match_end_1b04acbe3:;
				};
			}
		}
		else {
			_case_begin_1b04ab483:;
			{
				return false;
			}
		}
		_match_end_1b04ab395:;
	};
}



inline jule::Bool _1ac134263_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1b04adb5b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b04acae4:;
			{
				return false;
			}
		}
		_match_end_1b04aca8e:;
	};
}



inline jule::Ptr<_1ac17c960_Var> _1ac150bca_findVarInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1ae6e90d9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ac17c960_Var> _4817_v = _1ac1c0b3a_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1ae6e90d9:;
			++it;
			goto _iter_begin_1ae6e90d9;
		}
		_iter_end_1ae6e90d9:;
	};
	return nullptr;
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1ac151109_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1ae6ea690:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a9a03e98_TypeAlias> _6017_ta = _1ac1c0ee2_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1ae6ea690:;
			++it;
			goto _iter_begin_1ae6ea690;
		}
		_iter_end_1ae6ea690:;
	};
	return nullptr;
}



inline jule::Ptr<_1b393b9dc_Struct> _1ac1514e4_findStructInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1ae6ebc35:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b393b9dc_Struct> _7217_s = _1ac1c1399_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1ae6ebc35:;
			++it;
			goto _iter_begin_1ae6ebc35;
		}
		_iter_end_1ae6ebc35:;
	};
	return nullptr;
}



inline jule::Ptr<_1a99bc714_Fn> _1ac151956_findFnInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1ae6ed2ca:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a99bc714_Fn> _8417_f = _1ac1c1751_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1ae6ed2ca:;
			++it;
			goto _iter_begin_1ae6ed2ca;
		}
		_iter_end_1ae6ed2ca:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2551bec_Trait> _1ac151c64_findTraitInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1ae6ed8c4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1b2551bec_Trait> _9617_t = _1ac1c1a5e_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1ae6ed8c4:;
			++it;
			goto _iter_begin_1ae6ed8c4;
		}
		_iter_end_1ae6ed8c4:;
	};
	return nullptr;
}



inline jule::Ptr<_1b2553d42_Enum> _1ac1520a5_findEnumInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1ae6eec7c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1b2553d42_Enum> _10817_e = _1ac1c1d6c_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1ae6eec7c:;
			++it;
			goto _iter_begin_1ae6eec7c;
		}
		_iter_end_1ae6eec7c:;
	};
	return nullptr;
}



inline jule::Ptr<_1b255543c_TypeEnum> _1ac1523e6_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1ae701146:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1b255543c_TypeEnum> _12017_e = _1ac1c217a_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1ae701146:;
			++it;
			goto _iter_begin_1ae701146;
		}
		_iter_end_1ae701146:;
	};
	return nullptr;
}



inline jule::Bool _1ac15860b_isStdPackage(jule::Str _35017_f, jule::Str _35025_p) {
	return _1e6671d4e_HasPrefix(_35017_f,_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e676eaa6_PathStdlib,_35025_p})));
}



inline jule::Bool _1ac159365_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ac17c960_Var>>()) {
			_case_begin_1ae713378:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1ae7133de:;
			{
				jule::Ptr<_1a99b739b_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>();;
				return _1ac159365_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>>()) {
			_case_begin_1ae713455:;
			{
				jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1a99b6e7d_TraitSubIdentExprModel>();;
				return _1ac159365_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5674_UnaryExprModel>>()) {
			_case_begin_1ae7135cb:;
			{
				jule::Ptr<_1a99b5674_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1a99b5674_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1a9a07276_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1a9a07012_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1ac159365_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1ae712b80:;
			{
				return false;
			}
		}
		_match_end_1ae712b2a:;
	};
}



inline _1e6735e35_Log _1ac15980a_compilerErr(jule::Ptr<_1e6a5c800_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1e6735e35_Log _4213_log = _1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1e6736375_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1e6a63d67_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1ac159b4b_impIsLookupable(jule::Ptr<_1ac1530c8_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1ac15599e_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1ac159e48_appendRetVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>& _6723_dest, jule::Ptr<_1a99c03b5_FnIns>& _6742_f) {
	if ((_1a99bcb76_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a9a04b8b_TypeKind>> _7213_types = _1a99c14d7_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1ae71bd10:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _7317_ident = *it;
			{
				if ((_1e6a60094_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1e6a6033b_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1ae71bd10;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Data=jule::new_ptr<_1ac1c4bb6_Data>()}), }));;
			}
			_iter_next_1ae71bd10:;
			++it;
			_7310_i++;
			goto _iter_begin_1ae71bd10;
		}
		_iter_end_1ae71bd10:;
	};
}



inline void _1ac15a201_appendParamVars(jule::Slice<jule::Ptr<_1ac17c960_Var>>& _9325_dest, jule::Ptr<_1a99c03b5_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1ae71e76e:;
		if (it != expr.end()) {
			jule::Ptr<_1a99be4e6_ParamIns> _9817_p = *it;
			{
				if ((_1e6a60094_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1e6a6033b_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1ae71e76e;
				};
				jule::Ptr<_1ac17c960_Var> _10317_v = jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Data=jule::new_ptr<_1ac1c4bb6_Data>()}), });;
				{
					
					if (_1a99bb504_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1ae7222aa:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a9a0475c_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1a99bb768_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1a99bb768_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0cde7_Sptr>(_1a9a0cde7_Sptr{._field_Elem=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1ae721e9c:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0d854_Slc>(_1a9a0d854_Slc{._field_Elem=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1ae720b16:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1ae721d48:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1ae71e76e:;
			++it;
			goto _iter_begin_1ae71e76e;
		}
		_iter_end_1ae71e76e:;
	};
}



inline void _1ac15a4cb_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a9a03e98_TypeAlias>>& _15334_dest, jule::Ptr<_1a99c03b5_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1ae7274e1:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1a9a0345e_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1b395890a_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1ae7274e1:;
			++it;
			_16310_i++;
			goto _iter_begin_1ae7274e1;
		}
		_iter_end_1ae7274e1:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1b3967d9d_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1ae728d61:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1a9a0345e_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1b395890a_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1ae728d61:;
				++it;
				_17714_i++;
				goto _iter_begin_1ae728d61;
			}
			_iter_end_1ae728d61:;
		};
	};
}



inline jule::Ptr<_1ac1bee58_SymbolTable> _1ac15a82d_findFile(jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>& _19118_files, jule::Ptr<_1e6a62b8a_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1ae727d4e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1ae727d4e:;
			++it;
			goto _iter_begin_1ae727d4e;
		}
		_iter_end_1ae727d4e:;
	};
	return nullptr;
}



inline void _1ac15ac90_pushSugggestion(_1e6735e35_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_1e6736375_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1ac19e069_traitHasReferenceReceiver(jule::Ptr<_1b2551bec_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1ae922587:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1ae922587;
				};
				jule::Ptr<_1a99badc7_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1a99bb768_IsRef(_3313_p.ptr()) && _1a99bb504_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1ae922587:;
			++it;
			goto _iter_begin_1ae922587;
		}
		_iter_end_1ae922587:;
	};
	return false;
}



inline jule::Bool _1ac196094_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1ac1c4bb6_Data>& _4132_d) {
	jule::Str _429_value = _1b37a7dca_FmtFloat(static_cast<jule::F64>(_1a99ae0eb_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1ac12055c_CheckBitFloat(_429_value,static_cast<jule::I64>(_1ac11e14e_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1ac1961c6_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1ac1c4bb6_Data>& _4630_d) {
	jule::F64 _479_min = _1ac125474_Min(_4618_kind);;
	jule::F64 _489_max = _1ac125760_Max(_4618_kind);;
	{
		
		if (_1a99b0c57_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ae9292a3:;
			{
				jule::F64 _5113_x = _1a99ad8ae_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1ac0ca56c_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1a99b051a_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ae929319:;
			{
				jule::F64 _5813_x = _1a99ae0eb_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1a99b02a6_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ae929380:;
			{
				jule::F64 _6313_x = _1a99ae0eb_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1ae929160:;
	};
	return false;
}



inline jule::Bool _1ac1ac7b4_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1ac1c4bb6_Data>& _6932_d) {
	jule::F64 _709_max = _1ac125760_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1ac195b76_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a99ace0d_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1a99b0c57_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ae92d96c:;
			{
				jule::F64 _7713_x = _1a99ad8ae_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1ac0ca56c_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1a99b051a_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ae92e50b:;
			{
				jule::F64 _8713_x = _1a99ae0eb_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1a99b02a6_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ae92e583:;
			{
				jule::F64 _9213_x = _1a99ae0eb_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1ae92d8c3:;
	};
	return false;
}



inline jule::Bool _1ac1ac8e6_intAssignable(jule::Str _9818_kind, jule::Ptr<_1ac1c4bb6_Data>& _9830_d) {
	{
		
		if (_1ac12a5ab_IsSigInt(_9818_kind)) {
			_case_begin_1ae934038:;
			{
				return _1ac1961c6_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1ac12a897_IsUnsigInt(_9818_kind)) {
			_case_begin_1ae9338a6:;
			{
				return _1ac1ac7b4_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1ae92ebe3:;
			{
				return false;
			}
		}
		_match_end_1ae92eb16:;
	};
}



inline jule::Ptr<_1b3917b2d_Directive> _1a99ee339_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _419323_directives, jule::Str _419354_d) {
	{
		auto &expr = _419323_directives;
		auto it = expr.begin();
		_iter_begin_1b073c78b:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _419417_dr = *it;
			{
				if ((_419417_dr.get()._field_Tag.get()._field_Kind == _419354_d)) {
					return _419417_dr;
				};
			}
			_iter_next_1b073c78b:;
			++it;
			goto _iter_begin_1b073c78b;
		}
		_iter_end_1b073c78b:;
	};
	return nullptr;
}



inline jule::Any _1a99ee6be_findBuiltinsImport(jule::Str _420223_ident, jule::Ptr<_1ac1530c8_ImportInfo> _420235_imp) {
	return jule::Any(_1ac2ed097_findPackageBuiltinDef(_420235_imp.get()._field_LinkPath,_420223_ident));
}



inline void _1a99ee8cd_fitBitsize(jule::Ptr<_1ac1c4bb6_Data>& _420920_d) {
	jule::Ptr<_1a9a09663_Prim> _421013_prim = _1a9a06c9d_Prim(_420920_d.get()._field_Kind.ptr());;
	jule::I64 _42119_z = _1ac11e14e_BitsizeOf(_1a9a099c6_Str(_421013_prim.ptr()));;
	if ((_42119_z == 64LL)) {
		return;;
	};
	jule::I64 _421613_k = 0LL;;
	{
		
		if (_1a99b02a6_IsI64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b074064b:;
			{
				_421613_k=static_cast<jule::I64>(_1ac120a9b_BitsizeOfInt(static_cast<jule::I64>(_1a99ace0d_ReadI64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1ac11e46d_IntFromBits(_421613_k);
				};
			}
		}
		else if (_1a99b051a_IsU64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b07406c3:;
			{
				_421613_k=static_cast<jule::I64>(_1ac120d43_BitsizeOfUint(static_cast<jule::U64>(_1a99ad172_ReadU64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1ac11e715_UintFromBits(_421613_k);
				};
			}
		}
		else if (_1a99b0c57_IsF64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1b074074a:;
			{
				_421613_k=static_cast<jule::I64>(_1ac120804_BitsizeOfFloat(static_cast<jule::F64>(_1a99ad8ae_ReadF64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1ac11e9ac_FloatFromBits(_421613_k);
				};
			}
		}
		_match_end_1b0740580:;
	};
}



inline void _1a99eebca_makeStructLitAlloc(jule::Ptr<_1ac1c4bb6_Data>& _423628_d, jule::Ptr<_1a99b5a4d_StructLitExprModel>& _423643_lit) {
	_423628_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0cde7_Sptr>(_1a9a0cde7_Sptr{._field_Elem=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_423643_lit.get()._field_Strct, 0)})}), 7)});
	_423628_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5c3a_AllocStructLitExprModel>(_1a99b5c3a_AllocStructLitExprModel{._field_Lit=_423643_lit}));
}



inline jule::Ptr<_1ac17c960_Var> _1a9a0001b_buildErrorVar(jule::Ptr<_1ac1346e7_Scope>& _424723_s, jule::Ptr<_1b3954b15_FnCallExpr>& _424739_fc) {
	return jule::new_ptr<_1ac17c960_Var>(_1ac17c960_Var{._field_Scope=_424723_s, ._field_Token=_424739_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1ac1c5c3e_Value>(_1ac1c5c3e_Value{._field_Data=jule::new_ptr<_1ac1c4bb6_Data>()}), });
}



inline jule::Any _1a9a0035c_findBuiltinsSema(jule::Str _426621_ident, jule::Ptr<_1ac15b224_Sema> _426637_s) {
	{
		auto &expr = _426637_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1b0746454:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _426717_imp = *it;
			{
				if ((_426717_imp.get()._field_ImportAll || _1ac15599e_existIdent(_426717_imp.ptr(), _426621_ident))) {
					jule::Any _426921_def = _1a99ee6be_findBuiltinsImport(_426621_ident,_426717_imp);;
					if ((_426921_def != nullptr)) {
						return jule::Any(_426921_def);
					};
				};
			}
			_iter_next_1b0746454:;
			++it;
			goto _iter_begin_1b0746454;
		}
		_iter_end_1b0746454:;
	};
	jule::Str _427713_ppath = _1e6a63581_Dir(_426637_s.get()._field_file.get()._field_File.ptr());;
	if (_1e6671d4e_HasPrefix(_427713_ppath,_1e676eaa6_PathStdlib)) {
		(_427713_ppath).mut_slice(_1e676eaa6_PathStdlib.len());;
		_427713_ppath=(jule::Str("std", 3) + _1e66b506d_Replace(_427713_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1ac2ed097_findPackageBuiltinDef(_427713_ppath,_426621_ident));
	};
	return nullptr;
}



inline jule::Bool _1a9a00604_isOkForShifting(jule::Ptr<_1ac1c4bb6_Data>& _429125_d) {
	if (_1ac1c5579_IsConst(_429125_d.ptr())) {
		{
			
			if (_1a99b02a6_IsI64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b074a05c:;
				{
					return (_1a99ace0d_ReadI64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1a99b051a_IsU64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b0749820:;
				{
					return true;
				}
			}
			else if (_1a99b0c57_IsF64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1b0749886:;
				{
					return (_1a99ad8ae_ReadF64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1b07497a9:;
				{
					return false;
				}
			}
			_match_end_1b07496cc:;
		};
	};
	jule::Ptr<_1a9a09663_Prim> _43049_prim = _1a9a06c9d_Prim(_429125_d.get()._field_Kind.ptr());;
	return ((_43049_prim != nullptr) && _1ac12ab3e_IsInt(_1a9a099c6_Str(_43049_prim.ptr())));
}



inline jule::Bool _1a9a009ab_isInstancedStruct(jule::Ptr<_1b3967d9d_StructIns> _430822_s) {
	return (_430822_s.get()._field_Decl.get()._field_Generics.len() == _430822_s.get()._field_Generics.len());
}



inline jule::Bool _1a9a00c75_isPtrArithmeticCompatibleInt(jule::Ptr<_1ac1c4bb6_Data>& _431238_d) {
	if (_1ac1c5579_IsConst(_431238_d.ptr())) {
		return _1ac1ac8e6_intAssignable(jule::Str("int", 3),_431238_d);
	};
	_1ac1adb28_typeCompatibilityChecker _431613_tcc = _1ac1adb28_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_431238_d.get()._field_Kind, };;
	return _1ac1b0212_check(&_431613_tcc);
}



inline void _1a9a00eb7_applyCastKindModel(jule::Ptr<_1ac1c4bb6_Data>& _432528_d, jule::Ptr<_1a9a04b8b_TypeKind>& _432543_t) {
	_432528_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b5e27_CastingExprModel>(_1a99b5e27_CastingExprModel{._field_Expr=_432528_d.get()._field_Model, ._field_Kind=_432543_t, ._field_ExprKind=_432528_d.get()._field_Kind}));
}



inline void _1a9a01270_applyCastKind(jule::Ptr<_1ac1c4bb6_Data>& _433323_d, jule::Ptr<_1a9a04b8b_TypeKind>& _433338_t) {
	_1a9a00eb7_applyCastKindModel(_433323_d,_433338_t);
	_433323_d.get()._field_Kind=_433338_t;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a0146d_buildVoidData(void) {
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1a9a01737_checkDataForIntegerIndexing(jule::Ptr<_1ac1c4bb6_Data>& _434637_d) {
	jule::Str _434649_err_fmt = jule::Str();
	if ((_434637_d == nullptr)) {
		_434649_err_fmt = jule::Str();
		return _434649_err_fmt;
	};
	{
		
		if ((_1a9a06c9d_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b0750bde:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if ((!(_1ac12ab3e_IsInt(_1a9a099c6_Str(_1a9a06c9d_Prim(_434637_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b0750c55:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if (_1ac1c5579_IsConst(_434637_d.ptr())) {
			_case_begin_1b0750cbb:;
			{
				if ((_1a99ae0eb_AsF64(_434637_d.get()._field_Constant.ptr()) < 0LL)) {
					_434649_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _434649_err_fmt;
				};
			}
		}
		else if ((_1a9a06c9d_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr) || _1ac1c5579_IsConst(_434637_d.ptr()) || (_1ac11dda7_RealKindOf(_1a9a099c6_Str(_1a9a06c9d_Prim(_434637_d.get()._field_Kind.ptr()).ptr())) != _1ac11dda7_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b0750d32:;
			{
				jule::Ptr<_1a9a04b8b_TypeKind> _436317_t = jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)});;
				_1a9a01270_applyCastKind(_434637_d,_436317_t);
			}
		}
		_match_end_1b07512b6:;
	};
	_434649_err_fmt = jule::Str();
	return _434649_err_fmt;
}



inline void _1a9a01a01_applyCastModelByEnum(jule::Ptr<_1ac1c4bb6_Data>& _437230_d, jule::Ptr<_1b2553d42_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a9a09663_Prim> _43769_p = _1a9a06c9d_Prim(_437244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1a9a0c897_IsStr(_43769_p.ptr())) {
		return;;
	};
	_1a9a00eb7_applyCastKindModel(_437230_d,_437244_e.get()._field_Kind.get()._field_Kind);
}



inline void _1a9a01ca9_castConstByType(jule::Str& _438321_t, jule::Ptr<_1ac1c4bb6_Data>& _438334_d) {
	{
		
		if (_1ac12a5ab_IsSigInt(_438321_t)) {
			_case_begin_1b0756ab3:;
			{
				{
					auto _match_expr{ _1ac11e14e_BitsizeOf(_1ac11dda7_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b07577b7:;
						{
							_1a99ae371_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a99adb23_AsI64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b075782d:;
						{
							_1a99ae371_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a99adb23_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b0757894:;
						{
							_1a99ae371_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a99adb23_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b075790a:;
						{
							_1a99ae371_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a99adb23_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b0757762:;
				};
			}
		}
		else if (_1ac12a897_IsUnsigInt(_438321_t)) {
			_case_begin_1b0756b3a:;
			{
				{
					auto _match_expr{ _1ac11e14e_BitsizeOf(_1ac11dda7_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b075add6:;
						{
							_1a99ae5e6_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a99add87_AsU64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b075ae4c:;
						{
							_1a99ae5e6_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a99add87_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b075aeb3:;
						{
							_1a99ae5e6_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a99add87_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b075b029:;
						{
							_1a99ae5e6_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a99add87_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b075a457:;
				};
			}
		}
		else if (_1ac12ae5d_IsFloat(_438321_t)) {
			_case_begin_1b0756bb2:;
			{
				{
					auto _match_expr{ _1ac11e14e_BitsizeOf(_1ac11dda7_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b075e2e6:;
						{
							_1a99aed66_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a99ae0eb_AsF64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b075e549:;
						{
							_1a99aed66_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a99ae0eb_AsF64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b075da87:;
				};
			}
		}
		_match_end_1b0756981:;
	};
}



inline void _1a9a022b5_updateModelToGenericIns(jule::Any& _441733_m, jule::Ptr<_1a99c03b5_FnIns>& _441752_f) {
	{
		auto &_match_expr{ _441733_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a99c03b5_FnIns>>()) {
			_case_begin_1b0760748:;
			{
				_441733_m=static_cast<jule::Any>(_441752_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b739b_StructSubIdentExprModel>>()) {
			_case_begin_1b075e989:;
			{
				_441733_m.operator jule::Ptr<_1a99b739b_StructSubIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b7588_StructStaticIdentExprModel>>()) {
			_case_begin_1b075ea00:;
			{
				_441733_m.operator jule::Ptr<_1a99b7588_StructStaticIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		_match_end_1b075891c:;
	};
}



inline jule::Bool _1a9a02507_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1b394c03b_SubIdentTypeDecl>& _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1b39528b0_IdentExpr>>()) {
			_case_begin_1b0762904:;
			{
				jule::Ptr<_1b39528b0_IdentExpr> _443117_e = _442829_expr.operator jule::Ptr<_1b39528b0_IdentExpr>();;
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_443117_e.get()._field_Token, ._field_Ident=_443117_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3954153_SubIdentExpr>>()) {
			_case_begin_1b076296a:;
			{
				jule::Ptr<_1b3954153_SubIdentExpr> _443717_e = _442829_expr.operator jule::Ptr<_1b3954153_SubIdentExpr>();;
				if ((!(_1a9a02507_pushSubIdentFromExpr(_443717_e.get()._field_Expr.get()._field_Kind,_442850_t)))) {
					return false;
				};
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_443717_e.get()._field_Ident, ._field_Ident=_443717_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1b0762838:;
			{
				return false;
			}
		}
		_match_end_1b07627d3:;
	};
	return true;
}



inline jule::Bool _1a9a1b488_kindUsesGenerics(jule::Any& _156422_k, jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>& _156440_generics) {
	{
		auto &expr = _156440_generics;
		auto it = expr.begin();
		_iter_begin_1b0b09ecc:;
		if (it != expr.end()) {
			jule::Ptr<_1b395890a_GenericDecl> &_156512_g = *it;
			{
				if (static__1a9a1b08c_exist(_156512_g.get()._field_Ident,_156422_k)) {
					return true;
				};
			}
			_iter_next_1b0b09ecc:;
			++it;
			goto _iter_begin_1b0b09ecc;
		}
		_iter_end_1b0b09ecc:;
	};
	return false;
}



inline jule::Bool _1a9a1b81d_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _157422_directives, jule::Str _157453_tag) {
	{
		auto &expr = _157422_directives;
		auto it = expr.begin();
		_iter_begin_1b0b0b121:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _157517_dr = *it;
			{
				if ((_157517_dr.get()._field_Tag.get()._field_Kind == _157453_tag)) {
					return true;
				};
			}
			_iter_next_1b0b0b121:;
			++it;
			goto _iter_begin_1b0b0b121;
		}
		_iter_end_1b0b0b121:;
	};
	return false;
}



inline jule::Bool _1a9a1bab5_canGetPtr(jule::Ptr<_1ac1c4bb6_Data>& _158319_d) {
	if (((!(_158319_d.get()._field_Lvalue)) || _1ac1c5579_IsConst(_158319_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1a9a07e8b_Fn(_158319_d.get()._field_Kind.ptr()) != nullptr) || (_1a9a074da_Enum(_158319_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b0b0cc7c:;
			{
				return false;
			}
		}
		else {
			_case_begin_1b0b0c540:;
			{
				return true;
			}
		}
		_match_end_1b0b0c430:;
	};
}



inline jule::Bool _1a9a1bdd4_isValidForSptrType(jule::Ptr<_1a9a04b8b_TypeKind>& _159628_t) {
	jule::Ptr<_1b3967d9d_StructIns> _159713_s = _1a9a08200_Struct(_159628_t.ptr());;
	if ((((_159713_s != nullptr) && (_159713_s.get()._field_Decl != nullptr)) && _159713_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1a9a1c17b_isValidForRef(jule::Ptr<_1a9a04b8b_TypeKind>& _160523_t) {
	return (_1a9a07e8b_Fn(_160523_t.ptr()) == nullptr);
}



inline jule::Bool _1a9a1c445_isBuiltinStrConvertable(jule::Ptr<_1a9a04b8b_TypeKind>& _160833_t) {
	return (((!(_1a9a05d24_Void(_160833_t.ptr()))) && (_1a9a07e8b_Fn(_160833_t.ptr()) == nullptr)) && (_1a9a0893c_Tup(_160833_t.ptr()) == nullptr));
}



inline jule::Str _1a9a1c6ba_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _161227_tokens) {
	jule::Str _161313_s = _161227_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _161227_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b0b119d9:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_161412_token = *it;
			{
				_161313_s+=jule::Str("::", 2);
				_161313_s+=_161412_token.get()._field_Kind;
			}
			_iter_next_1b0b119d9:;
			++it;
			goto _iter_begin_1b0b119d9;
		}
		_iter_end_1b0b119d9:;
	};
	return _161313_s;
}



inline jule::Ptr<_1a9a09663_Prim> _1a9a1ca72_buildPrimType(jule::Str _162118_kind) {
	return jule::new_ptr<_1a9a09663_Prim>(_1a9a09663_Prim{._field_Kind=_162118_kind});
}



inline jule::Ptr<_1b393b9dc_Struct> _1a9a1cd19_getStructFromKind(jule::Ptr<_1a9a04b8b_TypeKind> _162726_k) {
	{
		
		if ((_162726_k == nullptr)) {
			_case_begin_1b0b12ce8:;
			{
				return nullptr;
			}
		}
		else if ((_1a9a08200_Struct(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b0b12d5e:;
			{
				return _1a9a08200_Struct(_162726_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1a9a07012_Sptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b0b12dc5:;
			{
				return _1a9a1cd19_getStructFromKind(_1a9a07012_Sptr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a9a07c27_Slc(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b0b12e3b:;
			{
				return _1a9a1cd19_getStructFromKind(_1a9a07c27_Slc(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a9a079b3_Arr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b0b131e4:;
			{
				return _1a9a1cd19_getStructFromKind(_1a9a079b3_Arr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1a9a07276_Ptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1b0b1325a:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1b0b12c82:;
			{
				return nullptr;
			}
		}
		_match_end_1b0b12a0c:;
	};
}



inline jule::Bool _1a9a1d0b1_isPrim(jule::Str _165011_kind) {
	return ((((((((((((((((_165011_kind == jule::Str("i8", 2)) || (_165011_kind == jule::Str("i16", 3))) || (_165011_kind == jule::Str("i32", 3))) || (_165011_kind == jule::Str("i64", 3))) || (_165011_kind == jule::Str("u8", 2))) || (_165011_kind == jule::Str("u16", 3))) || (_165011_kind == jule::Str("u32", 3))) || (_165011_kind == jule::Str("u64", 3))) || (_165011_kind == jule::Str("f32", 3))) || (_165011_kind == jule::Str("f64", 3))) || (_165011_kind == jule::Str("int", 3))) || (_165011_kind == jule::Str("uint", 4))) || (_165011_kind == jule::Str("uintptr", 7))) || (_165011_kind == jule::Str("bool", 4))) || (_165011_kind == jule::Str("str", 3))) || (_165011_kind == jule::Str("any", 3)));
}



inline void _1a9a1d369_applyImplicitCast(jule::Ptr<_1a9a04b8b_TypeKind>& _166927_dest, jule::Ptr<_1ac1c4bb6_Data>& _166949_d) {
	if (_1a9a05ab0_IsNil(_166949_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a9a09663_Prim> _16739_destPrim = _1a9a06c9d_Prim(_166927_dest.ptr());;
	jule::Ptr<_1a9a09663_Prim> _16749_prim = _1a9a06c9d_Prim(_166949_d.get()._field_Kind.ptr());;
	if ((_16739_destPrim != nullptr)) {
		if (_1a9a0cb0b_IsAny(_16739_destPrim.ptr())) {
			_1a9a01270_applyCastKind(_166949_d,_166927_dest);
			return;;
		};
		if (((((((!(_1a9a0584b_CppLinked(_166949_d.get()._field_Kind.ptr()))) && (!(_166949_d.get()._field_Kind.get()._field_Variadic))) && (!(_166949_d.get()._field_Lvalue))) && (!(_1ac1c5579_IsConst(_166949_d.ptr())))) && (_16749_prim != nullptr)) && _1ac12b205_IsNum(_16749_prim.get()._field_Kind))) {
			_1a9a01270_applyCastKind(_166949_d,_166927_dest);
		};
		return;;
	};
	if (((_1a9a08464_Trait(_166927_dest.ptr()) != nullptr) && (_1a9a08464_Trait(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1a9a00eb7_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
	if (((_1a9a0774e_TypeEnum(_166927_dest.ptr()) != nullptr) && (_1a9a0774e_TypeEnum(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1a9a00eb7_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1ac1bee58_SymbolTable>,jule::Slice<_1e6735e35_Log>> _1a9a2125c_buildSymbols(jule::Ptr<_1b3916a1c_Ast>& _1522_ast, jule::Trait<_1ac150845_Importer>& _1538_importer, jule::Ptr<_1a99c8ae9_symbolBuilder> _1562_owner) {
	jule::Ptr<_1a99c8ae9_symbolBuilder> _1613_sb = jule::new_ptr<_1a99c8ae9_symbolBuilder>(_1a99c8ae9_symbolBuilder{._field_owner=_1562_owner, ._field_importer=_1538_importer, ._field_ast=_1522_ast, });;
	_1b255112a_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1ac156032_Package>,jule::Slice<_1e6735e35_Log>> _1a9a2168b_analyzePackage(jule::Slice<jule::Ptr<_1b3916a1c_Ast>>& _2924_files, jule::Trait<_1ac150845_Importer>& _2944_importer, jule::I64& _2965_flags) {
	jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1ac1bee58_SymbolTable>>::alloc(0LL,_2924_files.len());;
	{
		auto &expr = _2924_files;
		auto it = expr.begin();
		_iter_begin_1b0c08240:;
		if (it != expr.end()) {
			jule::Ptr<_1b3916a1c_Ast> _3217_f = *it;
			{
				jule::Ptr<_1ac1bee58_SymbolTable> _3318_table;;
				jule::Slice<_1e6735e35_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1a9a2125c_buildSymbols(_3217_f,_2944_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1b0c08240:;
			++it;
			goto _iter_begin_1b0c08240;
		}
		_iter_end_1b0c08240:;
	};
	jule::Ptr<_1ac15b224_Sema> _4013_sema = jule::new_ptr<_1ac15b224_Sema>(_1ac15b224_Sema{._field_flags=_2965_flags});;
	_1ac17997e_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1ac156032_Package> _4813_pkg = jule::new_ptr<_1ac156032_Package>(_1ac156032_Package{._field_Files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1ac156032_Package>,jule::Slice<_1e6735e35_Log>> _1a9a21a76_AnalyzePackage(jule::Slice<jule::Ptr<_1b3916a1c_Ast>> _7227_files, jule::Trait<_1ac150845_Importer> _7246_importer, jule::I64 _7266_flags) {
	if ((_7227_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1ac156032_Package> _7614_package;;
	jule::Slice<_1e6735e35_Log> _7627_logs;;
	std::tie(_7614_package,_7627_logs) = _1a9a2168b_analyzePackage(_7227_files,_7246_importer,_7266_flags);
	return std::make_tuple(_7614_package,_7627_logs);
}



inline jule::Ptr<_1a99c03b5_FnIns> _1a9a2ab18_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b0c10c92:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _2520_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ea490_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b0c10d08:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _2820_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2ecd88_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b0c11017:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _3120_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a2b93d_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b0c1107d:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _3420_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a6d111_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b0c110e4:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _3720_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2c8a89_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b0c1115a:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _4020_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2d08a4_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b0c111c1:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _4320_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a29254_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b0c11237:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _4620_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac2dca9d_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b0c11303:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _4920_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a45715_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1b0c10a83:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c104de:;
	};
}



inline jule::Ptr<_1a9a03e98_TypeAlias> _1a9a2ca1b_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1b0c16b00:;
			{
				static jule::Ptr<_1a9a03e98_TypeAlias> _5920_t = jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1b0c16b66:;
			{
				static jule::Ptr<_1a9a03e98_TypeAlias> _6920_t = jule::new_ptr<_1a9a03e98_TypeAlias>(_1a9a03e98_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a9a08ce4_TypeSymbol>(_1a9a08ce4_TypeSymbol{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1b0c16a89:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c11644:;
	};
}



inline jule::Any _1a9a2d5ee_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_1a99c03b5_FnIns> _8413_f = _1a9a2ab18_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_1a9a03e98_TypeAlias> _8813_ta = _1a9a2ca1b_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _1a9a2e116_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b0c1a582:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _9820_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac30d9ae_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b0c1a5e8:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _10120_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac30dd99_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_1b0c1a175:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c1a032:;
	};
}



inline jule::Any _1a9a57e0e_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b0c1a9d3:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _11120_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a3135a_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b0c1aa49:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _11420_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a61a3e_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b0c1aab0:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _11720_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac30cc22_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_1b0c1b572:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c1c0de:;
	};
}



inline jule::Any _1ac2edeee_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b0c1c4b8:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _12720_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac30d151_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b0c1c52e:;
			{
				static jule::Ptr<_1a99c03b5_FnIns> _13020_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Decl=jule::new_ptr<_1a99bc714_Fn>(_1a99bc714_Fn{._field_Generics=jule::Slice<jule::Ptr<_1b395890a_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1ac30d56e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_1b0c1e6a7:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c1e564:;
	};
}



inline jule::Any _1ac2ed097_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b0c216ed:;
			{
				return jule::Any(_1a9a2e116_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b0c21764:;
			{
				return jule::Any(_1a9a57e0e_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b0c217ca:;
			{
				return jule::Any(_1ac2edeee_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_1b0c1e8a5:;
			{
				return nullptr;
			}
		}
		_match_end_1b0c204aa:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7e320_builtinCallerCommonPlain(jule::Ptr<_1ac1c6734_Eval>& _15534_e, jule::Ptr<_1b3954b15_FnCallExpr>& _15549_fc, jule::Ptr<_1ac1c4bb6_Data>& _15571_d) {
	jule::Ptr<_1a99c03b5_FnIns> _15613_f = _1a9a07e8b_Fn(_15571_d.get()._field_Kind.ptr());;
	_1ac1b6966_fnCallArgChecker _15813_fcac = _1ac1b6966_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1ac1b8d31_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1a99b6114_FnCallExprModel> _16913_model = jule::new_ptr<_1a99b6114_FnCallExprModel>(_1a99b6114_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_1a9a0146d_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2d24cc_builtinCallerCommon(jule::Ptr<_1ac1c6734_Eval>& _18829_e, jule::Ptr<_1b3954b15_FnCallExpr>& _18844_fc, jule::Ptr<_1ac1c4bb6_Data>& _18866_d) {
	return _1a9a7e320_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ed9b0_builtinCallerCommonMut(jule::Ptr<_1ac1c6734_Eval>& _19232_e, jule::Ptr<_1b3954b15_FnCallExpr>& _19247_fc, jule::Ptr<_1ac1c4bb6_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_1ac1c6c40_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1ac2d24cc_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7eebe_builtinCallerError(jule::Ptr<_1ac1c6734_Eval>& _19928_e, jule::Ptr<_1b3954b15_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _20713_expr = _1a99e6342_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_1ac1c50a1_IsNil(_20713_expr.ptr())) {
		_1ac1c6c40_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _21613_d = _1a9a0146d_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b926b_BuiltinErrorCallExprModel>(_1a99b926b_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ea490_builtinCallerOut(jule::Ptr<_1ac1c6734_Eval>& _22426_e, jule::Ptr<_1b3954b15_FnCallExpr>& _22441_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _23313_expr = _1a99e6342_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1a9a1c445_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_1ac1c6c40_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _24313_d = _1a9a0146d_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b8028_BuiltinOutCallExprModel>(_1a99b8028_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2ecd88_builtinCallerOutln(jule::Ptr<_1ac1c6734_Eval>& _24828_e, jule::Ptr<_1b3954b15_FnCallExpr>& _24843_fc, jule::Ptr<_1ac1c4bb6_Data>& _24865_d) {
	_24865_d=_1ac2ea490_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b8215_BuiltinOutlnCallExprModel>(_1a99b8215_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a2b93d_builtinCallerNew(jule::Ptr<_1ac1c6734_Eval>& _26026_e, jule::Ptr<_1b3954b15_FnCallExpr>& _26041_fc, jule::Ptr<_1ac1c4bb6_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_1ac1c6c40_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _26913_t = _1a99e5c26_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_1ac1c6c40_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1a9a1bdd4_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_1b3967d9d_StructIns> _28017_s = _1a9a08200_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_1ac1c6c40_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1a9a0cde7_Sptr>(_1a9a0cde7_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a9a04b8b_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_1ac1c4bb6_Data> _29717_init = _1a99e6342_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_1e6a5c800_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1ac167681_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_1ac164947_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b85de_BuiltinNewCallExprModel>(_1a99b85de_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b85de_BuiltinNewCallExprModel>(_1a99b85de_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a6d111_builtinCallerPanic(jule::Ptr<_1ac1c6734_Eval>& _32228_e, jule::Ptr<_1b3954b15_FnCallExpr>& _32243_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _33113_expr = _1a99e6342_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a9a06c9d_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0c897_IsStr(_1a9a06c9d_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1ac1c6c40_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _34013_d = _1a9a0146d_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b87cb_BuiltinPanicCallExprModel>(_1a99b87cb_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2c8a89_builtinCallerMake(jule::Ptr<_1ac1c6734_Eval>& _34827_e, jule::Ptr<_1b3954b15_FnCallExpr>& _34842_fc, jule::Ptr<_1ac1c4bb6_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_1ac1c6c40_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1ac1c6c40_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _35813_t = _1a99e5c26_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_1b0c4658b:;
			{
				goto _match_end_1b0c46877;
			}
		}
		else if ((_1a9a07c27_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0c46602:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_1ac1c6c40_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1a9a06c9d_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _1a9a0c897_IsStr(_1a9a06c9d_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b0c46668:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_1ac1c6c40_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1b0c46877:;
	};
	_1ac1c6c40_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_1ac1c4bb6_Data> _38213_len = _1a99e6342_evalExpr(_1ac16413e_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_1a99d4473_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1a99b8ba5_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_1a99b8ba5_BuiltinMakeCallExprModel>(_1a99b8ba5_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1ac1c4bb6_Data> _39517_cap = _1a99e6342_evalExpr(_1ac16413e_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_1a99d4473_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2d08a4_builtinCallerAppend(jule::Ptr<_1ac1c6734_Eval>& _40529_e, jule::Ptr<_1b3954b15_FnCallExpr>& _40544_fc, jule::Ptr<_1ac1c4bb6_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_1ac1c6c40_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1ac1c6c40_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _41513_t = _1a99e6342_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_1a9a07c27_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_1ac1c6c40_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a99c03b5_FnIns> _42513_f = jule::new_ptr<_1a99c03b5_FnIns>(_1a99c03b5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a99be4e6_ParamIns>>::make({jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_1a99be4e6_ParamIns>(_1a99be4e6_ParamIns{._field_Decl=jule::new_ptr<_1a99badc7_Param>(_1a99badc7_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1a9a07c27_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1ac1c4bb6_Data>(jule::Ptr<_1ac1c6734_Eval>&,jule::Ptr<_1b3954b15_FnCallExpr>&,jule::Ptr<_1ac1c4bb6_Data>&)>(_1a9a7e320_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b7962_CommonIdentExprModel>(_1a99b7962_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_1a9a7e320_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_1a99b6114_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_1a99b6114_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b8d92_BuiltinAppendCallExprModel>(_1a99b8d92_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2e9b43_callerCopySlice(jule::Ptr<_1ac1c4bb6_Data>& _46225_dest, jule::Ptr<_1ac1c6734_Eval>& _46243_e, jule::Ptr<_1b3954b15_FnCallExpr>& _46258_fc, jule::Ptr<_1ac1c4bb6_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_1ac1c6c40_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _46713_src = _1a99e6342_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a9a0d854_Slc> _47113_slc = _1a9a07c27_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _1a9a06088_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_1ac1c6c40_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1a9a05395_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_1ac1c6c40_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1a9a09663_Prim> _48113_dest_prim = _1a9a06c9d_Prim(_1a9a07c27_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1a9a09663_Prim> _48213_prim = _1a9a06c9d_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_dest_prim == nullptr) || (_48213_prim == nullptr)) || (!(_1a9a0c897_IsStr(_48213_prim.ptr())))) || (!(_1a9a0ae6c_IsU8(_48113_dest_prim.ptr()))))) {
			_1ac1c6c40_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b907e_BuiltinCopyCallExprModel>(_1a99b907e_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a7da17_callerCopyStr(jule::Ptr<_1ac1c4bb6_Data>& _49623_dest, jule::Ptr<_1ac1c6734_Eval>& _49641_e, jule::Ptr<_1b3954b15_FnCallExpr>& _49656_fc, jule::Ptr<_1ac1c4bb6_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_1ac1c6c40_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _50113_src = _1a99e6342_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1a9a06c9d_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0c64ce6:;
			{
				if (_1a9a0c897_IsStr(_1a9a06c9d_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1a9a07c27_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0c64d5c:;
			{
				jule::Ptr<_1a9a0d854_Slc> _51117_slc = _1a9a07c27_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_1a9a06c9d_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _1a9a0ae6c_IsU8(_1a9a06c9d_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1b0c6527a:;
	};
	_1ac1c6c40_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_1a9a05087_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b907e_BuiltinCopyCallExprModel>(_1a99b907e_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a29254_builtinCallerCopy(jule::Ptr<_1ac1c6734_Eval>& _52627_e, jule::Ptr<_1b3954b15_FnCallExpr>& _52642_fc, jule::Ptr<_1ac1c4bb6_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_1ac1c6c40_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1ac1c6c40_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_1ac1c6c40_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _53913_dest = _1a99e6342_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_1b0c6e65d:;
			{
				return nullptr;
			}
		}
		else if ((_1a9a07c27_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0c6e6c4:;
			{
				return _1ac2e9b43_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_1a9a06c9d_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _1a9a0c897_IsStr(_1a9a06c9d_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b0c6e73a:;
			{
				return _1a9a7da17_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_1b0c6e5e7:;
			{
				_1ac1c6c40_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0c6e592:;
	};
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac2dca9d_builtinCallerClone(jule::Ptr<_1ac1c6734_Eval>& _55328_e, jule::Ptr<_1b3954b15_FnCallExpr>& _55343_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _56213_d = _1a99e5c26_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a9a067c5_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1a9a07c27_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1a9a086c8_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1a9a079b3_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1a9a07012_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b0c753bc:;
				{
					{
						_1ac1c6c40_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1a9a08200_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b0c75433:;
				{
					{
						_1ac1c6c40_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1b0c75356:;
				{
					{
						_1ac1c6c40_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1a9a05087_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1b0c74e8d:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b8402_BuiltinCloneCallExprModel>(_1a99b8402_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a45715_builtinCallerAssert(jule::Ptr<_1ac1c6734_Eval>& _59529_e, jule::Ptr<_1b3954b15_FnCallExpr>& _59544_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_1ac1c6c40_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _60413_expr = _1a99e6342_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a9a06c9d_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0c633_IsBool(_1a9a06c9d_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1ac1c6c40_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a99b89b8_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_1a99b89b8_BuiltinAssertCallExprModel>(_1a99b89b8_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac1c4bb6_Data> _62117_log = _1a99e6342_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1ac1c5579_IsConst(_62117_log.ptr()))) || (_1a9a06c9d_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1a9a0c897_IsStr(_1a9a06c9d_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1ac1c6c40_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1a9a05087_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_1a99ad64a_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1ac1c4bb6_Data> _63413_d = _1a9a0146d_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a3135a_builtinCallerStdMemSizeOf(jule::Ptr<_1ac1c6734_Eval>& _63935_e, jule::Ptr<_1b3954b15_FnCallExpr>& _63950_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	jule::Ptr<_1ac1c4bb6_Data> _64013_result = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _65213_d = _1a99e5c26_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b716a_SizeofExprModel>(_1a99b716a_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1a9a61a3e_builtinCallerStdMemAlignOf(jule::Ptr<_1ac1c6734_Eval>& _66136_e, jule::Ptr<_1b3954b15_FnCallExpr>& _66151_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	jule::Ptr<_1ac1c4bb6_Data> _66213_result = jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _67413_d = _1a99e5c26_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b98cb_AlignofExprModel>(_1a99b98cb_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac30cc22_builtinCallerStdMemFree(jule::Ptr<_1ac1c6734_Eval>& _68333_e, jule::Ptr<_1b3954b15_FnCallExpr>& _68348_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _69213_d = _1a99e5c26_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a9a06561_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_1ac1c6c40_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _70113_result = _1a9a0146d_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99ba17e_FreeExprModel>(_1a99ba17e_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d151_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ac1c6734_Eval>& _70645_e, jule::Ptr<_1b3954b15_FnCallExpr>& _70660_fc, jule::Ptr<_1ac1c4bb6_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_1ac1c6c40_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac1c4bb6_Data> _71513_d = _1a99e5c26_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a9a1c445_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_1ac1c6c40_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac1c4bb6_Data>(_1ac1c4bb6_Data{._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(_1a9a1ca72_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1a99b9ca5_IntegratedToStrExprModel>(_1a99b9ca5_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d56e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ac1c6734_Eval>& _73344_e, jule::Ptr<_1b3954b15_FnCallExpr>& _73359_fc, jule::Ptr<_1ac1c4bb6_Data>& _73381_d) {
	if ((!(_1a99cb7cd_isUnsafe(_73344_e.ptr())))) {
		_1ac1c6c40_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_1ac1c6c40_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _74313_argd = _1a99e6342_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1a9a06c9d_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1a9a0c897_IsStr(_1a9a06c9d_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1ac1c6c40_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1a9a05087_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1ac1c5579_IsConst(_74313_argd.ptr()))) || (!(_1a99b09e3_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_1ac1c6c40_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac1c4bb6_Data> _75813_r = _1a9a0146d_buildVoidData();;
	jule::Ptr<_1a99c03b5_FnIns> _76013_f = _1a9a07e8b_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1a99b9e92_BackendEmitExprModel> _76513_model = jule::new_ptr<_1a99b9e92_BackendEmitExprModel>(_1a99b9e92_BackendEmitExprModel{._field_Code=_1a99ad64a_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1b0c9ee74:;
			if (it != expr.end()) {
				jule::Ptr<_1b3950847_Expr> _77121_arg = *it;
				{
					_74313_argd=_1a99e5c26_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_1b0c9ee74:;
				++it;
				goto _iter_begin_1b0c9ee74;
			}
			_iter_end_1b0c9ee74:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac30d9ae_builtinCallerStdDebugOut(jule::Ptr<_1ac1c6734_Eval>& _78434_e, jule::Ptr<_1b3954b15_FnCallExpr>& _78449_fc, jule::Ptr<_1ac1c4bb6_Data>& _78471_d) {
	_78471_d=_1ac2ea490_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_1a99b8028_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_1ac1c4bb6_Data> _1ac30dd99_builtinCallerStdDebugOutln(jule::Ptr<_1ac1c6734_Eval>& _79336_e, jule::Ptr<_1b3954b15_FnCallExpr>& _79351_fc, jule::Ptr<_1ac1c4bb6_Data>& _79373_d) {
	_79373_d=_1ac2ecd88_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_1a99b8215_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _1ac20e030_FindModuleFile(jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>& _1224_dirents) {
	{
		auto &expr = _1224_dirents;
		auto it = expr.begin();
		_iter_begin_1b0ca5397:;
		if (it != expr.end()) {
			jule::Ptr<_1e49337e9_DirEntry> &_1312_d = *it;
			{
				if (((!(_1e4884b02_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1b0ca5397:;
			++it;
			goto _iter_begin_1b0ca5397;
		}
		_iter_end_1b0ca5397:;
	};
	return false;
}



inline jule::Str _1ac20e162_FindModuleFileDeep(jule::Str _2431_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1e49337e9_DirEntry>> _2617_dirents = ({
				auto except = static__1e568c8a4_Read(_2431_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b0ca5650;
				} jule::Slice<jule::Ptr<_1e49337e9_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1ac20e030_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2431_path;
			};
			jule::I64 _3513_n = _2431_path.len();;
			_2431_path=_1e571ec88_Dir(_2431_path);
			if ((_2431_path.len() == _3513_n)) {
				goto _iter_end_1b0ca5650;
			};
		}
	_iter_next_1b0ca5650:;
	}
	_iter_end_1b0ca5650:;;
	return jule::Str();
}



inline jule::Slice<_1e6735e35_Log> _1ac20e3e8_CheckModuleFile(jule::Str _4624_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1e49365aa_Read(_1e57374cb_Join(jule::Slice<jule::Str>::make({_4624_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1e6735e35_Log>::make({_1e6735e35_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _1e66b6a64_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1e6735e35_Log>::make({_1e6735e35_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1aca241a2_FileInfo> _1aca6a89c_ParseFile(jule::Ptr<_1e6a62b8a_File> _2322_f) {
	if ((_2322_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1aca241a2_FileInfo> _2713_finf = jule::new_ptr<_1aca241a2_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1aca6adca_parseFileset(_2322_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1b3916a1c_Ast>,jule::Slice<_1e6735e35_Log>> _1aca6adca_parseFileset(jule::Ptr<_1e6a62b8a_File> _5521_f) {
	jule::Ptr<_1aca88e1a_parser> _5613_p = jule::new_ptr<_1aca88e1a_parser>();;
	_1aca98be9_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1b395b644_ScopeTree> _1aca6b7d2_newScope(void) {
	return jule::new_ptr<_1b395b644_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1aca6bae0_isSt(jule::Ptr<_1e6a5c800_Token> _509_current, jule::Ptr<_1e6a5c800_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1aca6be31_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1e6a5c800_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1e6a5d2e5_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1aca6c2b6_nextStPos(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1e6a5c800_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1b0cc0a88:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1b0cc2738:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1aca6be31_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1aca6bae0_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1b0cc13b3:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1aca6bae0_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1b0cc11e8:;
						};
						goto _iter_next_1b0cbe1c4;
					}
				}
				_match_end_1b0cc0a33:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1b0cbe1c4;
			};
			if ((_7313_i > _7133_start)) {
				if (_1aca6be31_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1b0cbe1c4;
				};
				std::tie(_7517_ok,_7617_terminated) = _1aca6bae0_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1aca6bae0_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1b0cbe1c4;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1b0cbe1c4:;
	}
	_iter_end_1b0cbe1c4:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Bool> _1aca6c607_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1e6a5c800_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1aca6c2b6_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1aca6c607_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1aca6c904_stmt>> _1aca6cc9a_splitStmts(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1aca6c904_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1aca6c904_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1e6a5c800_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1aca6c607_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1aca6c904_stmt>(_1aca6c904_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1b0ccab2b:;
	}
	_iter_end_1b0ccab2b:;;
	return _15613_stmts;
}



inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca7969c_getBlockExpr(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _4022_tokens) {
	jule::I64 _4113_braceN = 0LL;;
	jule::I64 _4213_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _4022_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d8c6c1:;
		if (it != expr.end()) {
			jule::I64 _439_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _4312_tok = *it;
			{
				{
					auto &_match_expr{ _4312_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b0d8d55c:;
						{
							(_4213_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1b0d8d5d4:;
						{
							{
								auto &_match_expr{ _4312_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b0d8e33d:;
									{
										if (((_4113_braceN > 0LL) || (_4213_skipToNextBraceClose > 0LL))) {
											if ((_4213_skipToNextBraceClose > 0LL)) {
												(_4213_skipToNextBraceClose)--;
											};
											(_4113_braceN)++;
											goto _match_end_1b0d8e470;
										};
										return _4022_tokens.slice(0LL,_439_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b0d8e9e2:;
									{
										(_4113_braceN)++;
									}
								}
								else {
									_case_begin_1b0d8e580:;
									{
										(_4113_braceN)--;
									}
								}
								_match_end_1b0d8e470:;
							};
						}
					}
					_match_end_1b0d8d381:;
				};
			}
			_iter_next_1b0d8c6c1:;
			++it;
			_439_i++;
			goto _iter_begin_1b0d8c6c1;
		}
		_iter_end_1b0d8c6c1:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca799ee_splitDelim(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _7120_tokens, jule::U64 _7138_delim) {
	jule::I64 _7213_rangeN = 0LL;;
	{
		auto &expr = _7120_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d91252:;
		if (it != expr.end()) {
			jule::I64 _739_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _7312_token = *it;
			{
				{
					auto &_match_expr{ _7312_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1b0d91d35:;
						{
							{
								auto &_match_expr{ _7312_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b0d92484:;
									{
										(_7213_rangeN)++;
										goto _iter_next_1b0d91252;
									}
								}
								else {
									_case_begin_1b0d9271a:;
									{
										(_7213_rangeN)--;
									}
								}
								_match_end_1b0d92550:;
							};
						}
					}
					else if (_match_expr == _7138_delim) {
						_case_begin_1b0d91dac:;
						{
							if ((_7213_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1e6a5c800_Token>> _8725_l = _7120_tokens.slice(0LL,_739_i);;
								jule::Slice<jule::Ptr<_1e6a5c800_Token>> _8825_r = _7120_tokens.slice((_739_i + 1LL));;
								return std::make_tuple(_8725_l,_8825_r);
							};
						}
					}
					_match_end_1b0d91b04:;
				};
			}
			_iter_next_1b0d91252:;
			++it;
			_739_i++;
			goto _iter_begin_1b0d91252;
		}
		_iter_end_1b0d91252:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1aca79c96_findLowestPrecOp(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _9822_tokens) {
	jule::U8 _10313_prec = 255LLU;;
	jule::I64 _10413_precPos = -1LL;;
	jule::I64 _10613_braceN = 0LL;;
	jule::Bool _10713_skipToNextBraceOpen = false;;
	{
		auto &expr = _9822_tokens;
		auto it = expr.begin();
		_iter_begin_1b0d9561e:;
		if (it != expr.end()) {
			jule::I64 _1089_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> &_10812_token = *it;
			{
				{
					
					if ((_10812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1b0d96433:;
						{
							{
								auto &_match_expr{ _10812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b0d9706b:;
									{
										_10713_skipToNextBraceOpen=false;
										goto _case_begin_1b0d977a8;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1b0d977a8:;
									{
										(_10613_braceN)++;
									}
								}
								else {
									_case_begin_1b0d97302:;
									{
										(_10613_braceN)--;
									}
								}
								_match_end_1b0d97137:;
							};
							goto _iter_next_1b0d9561e;
						}
					}
					else if (_10713_skipToNextBraceOpen) {
						_case_begin_1b0d964aa:;
						{
							goto _iter_next_1b0d9561e;
						}
					}
					else if ((_10812_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1b0d96532:;
						{
							_10713_skipToNextBraceOpen=true;
							goto _iter_next_1b0d9561e;
						}
					}
					else if ((_1089_i == 0LL)) {
						_case_begin_1b0d965a9:;
						{
							goto _iter_next_1b0d9561e;
						}
					}
					else if ((_10812_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1b0d96631:;
						{
							goto _iter_next_1b0d9561e;
						}
					}
					else if ((_10613_braceN > 0LL)) {
						_case_begin_1b0d966a8:;
						{
							goto _iter_next_1b0d9561e;
						}
					}
					_match_end_1b0d962bd:;
				};
				jule::Ptr<_1e6a5c800_Token> _13513_left = _9822_tokens[(_1089_i - 1LL)];;
				if (((_13513_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_13513_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1b0d9561e;
				};
				if ((((_1089_i > 1LL) && (_13513_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_13513_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1e6a5c800_Token> _14317_lleft = _9822_tokens[(_1089_i - 2LL)];;
					if (((_14317_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_14317_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_10812_token.get()._field_Kind == jule::Str("&", 1)) || (_10812_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1b0d9561e;
						};
					};
				};
				jule::U8 _15213_p = _1e6a5cba7_Prec(_10812_token.ptr());;
				if (((_15213_p != 0LLU) && (_15213_p <= _10313_prec))) {
					_10313_prec=_15213_p;
					_10413_precPos=_1089_i;
				};
			}
			_iter_next_1b0d9561e:;
			++it;
			_1089_i++;
			goto _iter_begin_1b0d9561e;
		}
		_iter_end_1b0d9561e:;
	};
	return _10413_precPos;
}



inline jule::Ptr<_1b39528b0_IdentExpr> _1aca7a0b5_buildIdentExpr(jule::Ptr<_1e6a5c800_Token>& _16124_token) {
	return jule::new_ptr<_1b39528b0_IdentExpr>(_1b39528b0_IdentExpr{._field_Token=_16124_token, ._field_Ident=_16124_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::I64> _1aca7a35c_getRangeExprTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _16928_tokens) {
	jule::I64 _17013_rangeN = 0LL;;
	jule::I64 _17113_i = (_16928_tokens.len() - 1LL);;
	for (; (_17113_i >= 0LL); (_17113_i)--) {
		{
			jule::Ptr<_1e6a5c800_Token> _17313_tok = _16928_tokens[_17113_i];;
			if ((_17313_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _17313_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b0da0096:;
						{
							(_17013_rangeN)++;
						}
					}
					else {
						_case_begin_1b0da0959:;
						{
							(_17013_rangeN)--;
						}
					}
					_match_end_1b0da074a:;
				};
			};
			if ((_17013_rangeN == 0LL)) {
				return std::make_tuple(_16928_tokens.slice(0LL,_17113_i),_17013_rangeN);
			};
		}
	_iter_next_1b0d9e89d:;
	}
	_iter_end_1b0d9e89d:;;
	return std::make_tuple(nullptr,_17013_rangeN);
}



inline jule::Bool _1aca85c6e_checkAssignTokens(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1e6a61d98_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1b0e44547:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0e4516e:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1b0e45449:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1b0e4523a:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1b0e44547;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1e6a623d7_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1b0e44547:;
			++it;
			goto _iter_begin_1b0e44547;
		}
		_iter_end_1b0e44547:;
	};
	return false;
}



inline _1e6735e35_Log _1aca86b60_makeErr(jule::I64 _5012_row, jule::I64 _5022_col, jule::Ptr<_1e6a62b8a_File>& _5033_f, jule::Str _5043_fmt, jule::Slice<jule::Any> _5056_args) {
	return _1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5012_row, ._field_Column=_5022_col, ._field_Path=_5033_f.get()._field_Path, ._field_Text=_1e6736375_Logf(_5043_fmt,jule::Any(_5056_args)), };
}



inline jule::Slice<jule::Ptr<_1e6a5c800_Token>> _1aca87105_range(jule::I64& _6915_i, jule::Str _6923_open, jule::Str _6940_close, jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _6963_tokens) {
	if ((_6915_i >= _6963_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e6a5c800_Token> _749_tok = _6963_tokens[_6915_i];;
	if (((_749_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_749_tok.get()._field_Kind != _6923_open))) {
		return nullptr;
	};
	(_6915_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _6915_i;;
	for (; ((_8013_rangeN != 0LL) && (_6915_i < _6963_tokens.len())); (_6915_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _8313_token = _6963_tokens[_6915_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _6923_open) {
						_case_begin_1b0e4b494:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _6940_close) {
						_case_begin_1b0e4b51b:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1b0e4b263:;
				};
			};
		}
	_iter_next_1b0e49c56:;
	}
	_iter_end_1b0e49c56:;;
	return _6963_tokens.slice(_819_start,(_6915_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1e6a5c800_Token>>,jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _1aca8739c_rangeLast(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _10419_tokens) {
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _10439_cutted = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	jule::Slice<jule::Ptr<_1e6a5c800_Token>> _10457_cut = jule::Slice<jule::Ptr<_1e6a5c800_Token>>();
	if ((_10419_tokens.len() == 0LL)) {
		_10439_cutted = _10419_tokens;
		_10457_cut = nullptr;
		return std::make_tuple(_10439_cutted,_10457_cut);
	} else if ((_10419_tokens[(_10419_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10439_cutted = _10419_tokens;
		_10457_cut = nullptr;
		return std::make_tuple(_10439_cutted,_10457_cut);
	};
	jule::I64 _11113_braceN = 0LL;;
	jule::I64 _11213_i = (_10419_tokens.len() - 1LL);;
	for (; (_11213_i >= 0LL); (_11213_i)--) {
		{
			jule::Ptr<_1e6a5c800_Token> _11413_token = _10419_tokens[_11213_i];;
			if ((_11413_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11413_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b0e4eb4b:;
						{
							(_11113_braceN)++;
							goto _iter_next_1b0e4c4ea;
						}
					}
					else {
						_case_begin_1b0e50553:;
						{
							(_11113_braceN)--;
						}
					}
					_match_end_1b0e50344:;
				};
			};
			if ((_11113_braceN == 0LL)) {
				_10439_cutted = _10419_tokens.slice(0LL,_11213_i);
				_10457_cut = _10419_tokens.slice(_11213_i);
				return std::make_tuple(_10439_cutted,_10457_cut);
			};
		}
	_iter_next_1b0e4c4ea:;
	}
	_iter_end_1b0e4c4ea:;;
	_10439_cutted = _10419_tokens;
	_10457_cut = nullptr;
	return std::make_tuple(_10439_cutted,_10457_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>,jule::Slice<_1e6735e35_Log>> _1aca8780e_partsKind(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _13619_tokens, jule::Str _13637_kind, jule::Bool _13654_expr_must) {
	if ((_13619_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _14113_parts = nullptr;;
	jule::Slice<_1e6735e35_Log> _14213_errors = nullptr;;
	jule::I64 _14413_rangeN = 0LL;;
	jule::I64 _14513_last = 0LL;;
	{
		auto &expr = _13619_tokens;
		auto it = expr.begin();
		_iter_begin_1b0e53c3d:;
		if (it != expr.end()) {
			jule::I64 _1469_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _14612_token = *it;
			{
				if ((_14612_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14612_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0e54c83:;
							{
								(_14413_rangeN)++;
								goto _iter_next_1b0e53c3d;
							}
						}
						else {
							_case_begin_1b0e5505d:;
							{
								(_14413_rangeN)--;
							}
						}
						_match_end_1b0e54d4e:;
					};
				};
				if ((_14413_rangeN > 0LL)) {
					goto _iter_next_1b0e53c3d;
				};
				if ((_14612_token.get()._field_Kind == _13637_kind)) {
					if ((_13654_expr_must && ((_1469_i - _14513_last) <= 0LL))) {
						_1e6735e35_Log _16521_err = _1aca86b60_makeErr(_14612_token.get()._field_Row,_14612_token.get()._field_Column,_14612_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14213_errors = jule::alloc_for_append(_14213_errors,1);_14213_errors.__push(_16521_err);;
					};
					_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(_13619_tokens.slice(_14513_last,_1469_i));;
					_14513_last=static_cast<jule::I64>((_1469_i + 1LL));
				};
			}
			_iter_next_1b0e53c3d:;
			++it;
			_1469_i++;
			goto _iter_begin_1b0e53c3d;
		}
		_iter_end_1b0e53c3d:;
	};
	if ((_14513_last < _13619_tokens.len())) {
		_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(_13619_tokens.slice(_14513_last));;
	} else if ((!(_13654_expr_must))) {
		_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(jule::Slice<jule::Ptr<_1e6a5c800_Token>>());;
	};
	return std::make_tuple(_14113_parts,_14213_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>>,jule::Slice<_1e6735e35_Log>> _1aca87be9_parts(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _18815_tokens, jule::U64 _18833_id, jule::Bool _18846_expr_must) {
	if ((_18815_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e6a5c800_Token>>> _19313_parts = nullptr;;
	jule::Slice<_1e6735e35_Log> _19413_errors = nullptr;;
	jule::I64 _19613_rangeN = 0LL;;
	jule::I64 _19713_last = 0LL;;
	{
		auto &expr = _18815_tokens;
		auto it = expr.begin();
		_iter_begin_1b0e5a75b:;
		if (it != expr.end()) {
			jule::I64 _1989_i = it - expr.begin();
			jule::Ptr<_1e6a5c800_Token> _19812_token = *it;
			{
				if ((_19812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b0e5b7a1:;
							{
								(_19613_rangeN)++;
								goto _iter_next_1b0e5a75b;
							}
						}
						else {
							_case_begin_1b0e5ba7b:;
							{
								(_19613_rangeN)--;
							}
						}
						_match_end_1b0e5b86c:;
					};
				};
				if ((_19613_rangeN > 0LL)) {
					goto _iter_next_1b0e5a75b;
				};
				if ((_19812_token.get()._field_Id == _18833_id)) {
					if ((_18846_expr_must && ((_1989_i - _19713_last) <= 0LL))) {
						_1e6735e35_Log _21721_err = _1aca86b60_makeErr(_19812_token.get()._field_Row,_19812_token.get()._field_Column,_19812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19413_errors = jule::alloc_for_append(_19413_errors,1);_19413_errors.__push(_21721_err);;
					};
					_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(_18815_tokens.slice(_19713_last,_1989_i));;
					_19713_last=static_cast<jule::I64>((_1989_i + 1LL));
				};
			}
			_iter_next_1b0e5a75b:;
			++it;
			_1989_i++;
			goto _iter_begin_1b0e5a75b;
		}
		_iter_end_1b0e5a75b:;
	};
	if ((_19713_last < _18815_tokens.len())) {
		_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(_18815_tokens.slice(_19713_last));;
	} else if ((!(_18846_expr_must))) {
		_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(jule::Slice<jule::Ptr<_1e6a5c800_Token>>());;
	};
	return std::make_tuple(_19313_parts,_19413_errors);
}



inline jule::Str _1aca87e91_getCloseKindOfBrace(jule::Str _23424_left) {
	{
		auto &_match_expr{ _23424_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1b09e3d61:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1b09e3dc7:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1b09e3e3d:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1b09e3c1d:;
			{
				return jule::Str();
			}
		}
		_match_end_1b09e3b63:;
	};
}



inline _1e6735e35_Log _1aca8837b_compilerErr(jule::Ptr<_1e6a5c800_Token>& _24717_token, jule::Str& _24733_fmt, jule::Slice<jule::Any> _24746_args) {
	return _1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24717_token.get()._field_Row, ._field_Column=_24717_token.get()._field_Column, ._field_Path=_24717_token.get()._field_File.get()._field_Path, ._field_Text=_1e6736375_Logf(_24733_fmt,jule::Any(_24746_args)), ._field_Line=_1e6a63d67_GetRow(_24717_token.get()._field_File.ptr(), _24717_token.get()._field_Row), };
}



inline void _1aca887aa_pushSuggestion(_1e6735e35_Log* _25830_log, jule::Str _25841_fmt, jule::Slice<jule::Any> _25854_args) {
	_25830_log->_field_Suggestion=_1e6736375_Logf(_25841_fmt,jule::Any(_25854_args));
}



inline jule::Str _1aca88a52_tokstoa(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _26213_tokens) {
	jule::I64 _26313_n = 0LL;;
	{
		auto &expr = _26213_tokens;
		auto it = expr.begin();
		_iter_begin_1b09e6d97:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_26412_token = *it;
			{
				_26313_n+=_26412_token.get()._field_Kind.len();
			}
			_iter_next_1b09e6d97:;
			++it;
			goto _iter_begin_1b09e6d97;
		}
		_iter_end_1b09e6d97:;
	};
	jule::Str _26713_s = jule::Str::alloc(_26313_n);;
	{
		auto &expr = _26213_tokens;
		auto it = expr.begin();
		_iter_begin_1b09e7a68:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_26812_token = *it;
			{
				_26713_s+=_26812_token.get()._field_Kind;
			}
			_iter_next_1b09e7a68:;
			++it;
			goto _iter_begin_1b09e7a68;
		}
		_iter_end_1b09e7a68:;
	};
	return _26713_s;
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca99623_buildVoidType(void) {
	return jule::new_ptr<_1b394b326_TypeDecl>();
}



inline jule::Ptr<_1b394b326_TypeDecl> _1aca99887_buildPrimType(jule::Ptr<_1e6a5c800_Token> _2322_t) {
	return jule::new_ptr<_1b394b326_TypeDecl>(_1b394b326_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1b394b8dc_IdentTypeDecl>(_1b394b8dc_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _1aca99bc8_mapColon(jule::Slice<jule::Ptr<_1e6a5c800_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_1e6a5c800_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b08c6617:;
						{
							(_3813_rangeN)++;
							goto _iter_next_1b08c5e0d;
						}
					}
					else {
						_case_begin_1b08c6eca:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_1b08c6cbb:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_1b08c5e0d;
			};
		}
	_iter_next_1b08c5e0d:;
	}
	_iter_end_1b08c5e0d:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1ac1d35cb_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b0ec9665:;
			{
				_924_ok=_1e673928a_IsWindows(_1e678503e_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b0ec9269:;
			{
				_924_ok=_1e6739543_IsDarwin(_1e678503e_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b0ec9049:;
			{
				_924_ok=_1e67397da_IsLinux(_1e678503e_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b0ec90b0:;
			{
				_924_ok=_1e673a3e0_IsUnix(_1e678503e_Os);
			}
		}
		else {
			_case_begin_1b0ec881d:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1b0ec8c2a:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1ac1d37eb_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b0ecb7dd:;
			{
				_2826_ok=_1e6739b09_IsI386(_1e676e721_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b0ecb5bd:;
			{
				_2826_ok=_1e6739da1_IsAmd64(_1e676e721_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b0ecb634:;
			{
				_2826_ok=_1e673a148_IsArm64(_1e676e721_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b0ecb69a:;
			{
				_2826_ok=_1e673aa0b_Is64Bit(_1e676e721_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b0ecb711:;
			{
				_2826_ok=_1e673a764_Is32Bit(_1e676e721_Arch);
			}
		}
		else {
			_case_begin_1b0ecad92:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1b0ecb29e:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1ac1ec00c_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1e571b449_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1e5738ee4_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1e66b309e_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1ac1d35cb_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1ac1d37eb_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1e66b309e_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1ac1d35cb_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1ac1d37eb_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1ac1d37eb_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1ac1d35cb_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1ac1d35cb_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1ac1ed1ea_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_1e678503e_Os);;
	if (_1e673a3e0_IsUnix(_1e678503e_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1ac1ed44d_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_1e676e721_Arch);;
	if (_1e673aa0b_Is64Bit(_1e676e721_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1e673a764_Is32Bit(_1e676e721_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1ac1ed706_initVars(jule::Slice<jule::Str>& _5518_vars, _1ac1ecddc_CompileInfo& _5532_info) {
	_1ac1ed1ea_setOsVars(_5518_vars);
	_1ac1ed44d_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b0ed773e:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b0ed793c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1b0ed8300:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b0ed9268:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b0ed8eb0:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b0ed9026:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1b0ed9213:;
	};
}



inline jule::Slice<jule::U8> _1ac9bc920_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1e49365aa_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1e678a330_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1e6735e35_Log _1aca1da4d_flatCompilerErr(jule::Str _4120_text) {
	return _1e6735e35_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1aca9d8ad_pushPasses(jule::Ptr<_1ac156032_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b101b71d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1b101c202:;
					if (it != expr.end()) {
						_1a99c4650_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b101c202;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1b101d049:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b101c202;
										};
									}
									_iter_next_1b101d049:;
									++it;
									goto _iter_begin_1b101d049;
								}
								_iter_end_1b101d049:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1b101c202:;
						++it;
						goto _iter_begin_1b101c202;
					}
					_iter_end_1b101c202:;
				};
			}
			_iter_next_1b101b71d:;
			++it;
			goto _iter_begin_1b101b71d;
		}
		_iter_end_1b101b71d:;
	};
}



inline jule::Slice<jule::Str> _1aca9da56_getAllUniquePasses(jule::Ptr<_1ac156032_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1ac1530c8_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1aca9d8ad_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1b101e49b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1aca9d8ad_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1b101e49b:;
			++it;
			goto _iter_begin_1b101e49b;
		}
		_iter_end_1b101e49b:;
	};
	return _12913_passes;
}



inline _1ac1ecddc_CompileInfo _1aca9dc54_buildCompileInfo(void) {
	_1ac1ecddc_CompileInfo _14213_info = _1ac1ecddc_CompileInfo{._field_Prod=_1e47d71b4_Production, ._field_Test=_1e47d667a_Test, };;
	{
		auto &_match_expr{ _1e4728468_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b1020ca5:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b1020d2c:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b1020c2d:;
	};
	{
		auto &_match_expr{ _1e47d5d2d_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b101e699:;
			{
				_14213_info._field_Compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b1021206:;
			{
				_14213_info._field_Compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b102126c:;
			{
				_14213_info._field_Compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b10210c4:;
	};
	return _14213_info;
}



inline void _1acbc2949_EliminateDefines(jule::Ptr<_1aca5966b_IR>& _28530_ir) {
	jule::Ptr<_1acb924da_ObjectDeadCode> _28613_ocd = static__1acb929b3_new(_28530_ir);;
	_1acbc2680_elimanate(_28613_ocd);
}



inline jule::Ptr<_1b3917b2d_Directive> _1acbc2cce_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1b1063974:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1b1063974:;
			++it;
			goto _iter_begin_1b1063974;
		}
		_iter_end_1b1063974:;
	};
	return nullptr;
}



inline jule::Bool _1acbc3120_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1acbc2cce_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1acbc6c6c_eliminateDeadCodeOfScope(jule::Ptr<_1ac1346e7_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ac136e36_Label>> _2429_labels = jule::Slice<jule::Ptr<_1ac136e36_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1ac137222_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1ac137222_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1acbc3d68_scopeDeadCode> _24413_sdc = jule::new_ptr<_1acbc3d68_scopeDeadCode>(_1acbc3d68_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ac136e36_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ac137222_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1acbc6981_optimizeStmts(_24413_sdc);
	};
}



inline void _1acbc7003_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a99bc714_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1b10a6c2b:;
		if (it != expr.end()) {
			jule::Ptr<_1a99bc714_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1b10a7336:;
					if (it != expr.end()) {
						jule::Ptr<_1a99c03b5_FnIns> _25621_ins = *it;
						{
							_1acbc6c6c_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b10a7336:;
						++it;
						goto _iter_begin_1b10a7336;
					}
					_iter_end_1b10a7336:;
				};
			}
			_iter_next_1b10a6c2b:;
			++it;
			goto _iter_begin_1b10a6c2b;
		}
		_iter_end_1b10a6c2b:;
	};
}



inline void _1acbc7245_eliminateFunctionsScopePackage(jule::Ptr<_1ac156032_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b10a77ed:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _26317_f = *it;
			{
				_1acbc7003_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1b10a77ed:;
			++it;
			goto _iter_begin_1b10a77ed;
		}
		_iter_end_1b10a77ed:;
	};
}



inline void _1acbc74dc_eliminateScopePackage(jule::Ptr<_1ac156032_Package>& _26831_pkg) {
	_1acbc7245_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1acbc76eb_EliminateScopes(jule::Ptr<_1aca5966b_IR>& _27329_ir) {
	jule::I64 _27413_i = (_27329_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1ac1530c8_ImportInfo> _27617_u = _27329_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1acbc74dc_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1b10a93c1:;
	}
	_iter_end_1b10a93c1:;;
	_1acbc74dc_eliminateScopePackage(_27329_ir.get()._field_Main);
}



inline jule::Bool _1b25d6721_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _1e6671d4e_HasPrefix(_39917_f,_1e57374cb_Join(jule::Slice<jule::Str>::make({_1e676eaa6_PathStdlib,_39925_p})));
}



inline jule::Bool _1b2638630_isConstantValidConditionalCase(jule::Ptr<_1ac134ae3_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b128ab57:;
			{
				jule::Ptr<_1a9956c86_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1a9956c86_Const>();;
				return (_1a99b077e_IsBool(_40613_c.ptr()) && _1a99ad3d6_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1b128a99d:;
	};
	return false;
}



inline jule::Bool _1b26572a8_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b128b592:;
			{
				jule::Ptr<_1a9956c86_Const> _41513_c = _41223_expr.operator jule::Ptr<_1a9956c86_Const>();;
				return (_1a99b077e_IsBool(_41513_c.ptr()) && (!(_1a99ad3d6_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a99b5487_BinopExprModel>>()) {
			_case_begin_1b128b608:;
			{
				jule::Ptr<_1a99b5487_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1a99b5487_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1b26572a8_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1b26572a8_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1b128ba8c:;
	};
	return false;
}



inline jule::Bool _1b265d9da_isConstantValidMatchCase(jule::Ptr<_1ac138e8d_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b128e5d9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1c4bb6_Data> &_42812_expr = *it;
			{
				if (((_1ac1c5579_IsConst(_42812_expr.ptr()) && _1a99b077e_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1a99ad3d6_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1b128e5d9:;
			++it;
			goto _iter_begin_1b128e5d9;
		}
		_iter_end_1b128e5d9:;
	};
	return false;
}



inline jule::Bool _1a9a89c76_isUnreachableConditionalCase(jule::Ptr<_1ac134ae3_If>& _43634_i) {
	return _1b26572a8_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1a9a9bb89_isUnreachableMatchCase(jule::Ptr<_1ac138e8d_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1b12912de:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1c4bb6_Data> &_44112_expr = *it;
			{
				if ((!(_1b26572a8_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1b12912de:;
			++it;
			goto _iter_begin_1b12912de;
		}
		_iter_end_1b12912de:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1aa0bbe23_checkForBitShiftOpt(jule::Ptr<_1a99b529a_OperandExprModel>& _42725_l, jule::Ptr<_1a99b529a_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_1ac12ab3e_IsInt(_1a9a05087_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_1ac12ab3e_IsInt(_1a9a05087_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9956c86_Const>>()) {
			_case_begin_1b12c99ba:;
			{
				goto _match_end_1b12ca48d;
			}
		}
		else {
			_case_begin_1b12ca5d1:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_1b12ca48d:;
	};
	_42782_x=static_cast<jule::U64>(_1a99add87_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_1a9956c86_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _1ac0cad31_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _1aa0bce24_PushOptLevel(jule::I64 _3221_level) {
	_1b25786a2_Copy=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b25988d1_Deadcode=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b25b0a5d_Append=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b25b2dd4_Math=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b25b1d4a_Access=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b25d4e28_Inline=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b2635363_Ptr=(_3221_level >= static_cast<jule::I64>(1LL));
	_1b2635891_Cond=(_3221_level >= static_cast<jule::I64>(1LL));
}



inline void _1acb6836d_detectEnabled(void) {
	_1acace59d_exprEnabled=(((_1b2635363_Ptr || _1b25b2dd4_Math) || _1b25b1d4a_Access) || _1b2635891_Cond);
	_1acad0703_scopeEnabled=((_1b2635891_Cond || _1b25b0a5d_Append) || _1b25786a2_Copy);
}



inline void _1ac56bb2e_Throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1e678a330_Exit(1LL);
}



inline jule::U64 _1ac3e34ab_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1ac3e37ec_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1ac3e3b82_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1b113e27a:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b113e3ce:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b113e445:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b113e4ab:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b113e522:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b113e588:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b113e5ee:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b113e665:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b113e6cb:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1b113e742:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b113e7b9:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1b113e225:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1ac36caea_isCopyOptimizable(jule::Ptr<_1ac1c4bb6_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b6c91_SlicingExprModel>>()) {
			_case_begin_1b11be7a0:;
			{
				return false;
			}
		}
		_match_end_1b11becbc:;
	};
	return true;
}



inline jule::Bool _1ac36ce80_isIterCopyOptimizable(jule::Ptr<_1ac1c4bb6_Data>& _75227_expr, jule::Ptr<_1ac17c960_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_1a9a06088_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _1ac37b07b_decomposeCommonEsq(jule::U8 _114123_b) {
	{
		auto &_match_expr{ _114123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b13d1154:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b13d11ba:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b13d141d:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b13d1484:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b13d14ea:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b13d1561:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b13d15d8:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b13d1660:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b13d16d7:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b13d175e:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1b13d0ede:;
			{
				return jule::Str();
			}
		}
		_match_end_1b13d0e34:;
	};
}



inline jule::Str _1ac37b367_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1ac37b07b_decomposeCommonEsq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1ac11b69b_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1ac37b60e_cstrBytes(jule::Slice<jule::U8> _118814_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118814_bytes.len());;
	{
		auto &expr = _118814_bytes;
		auto it = expr.begin();
		_iter_begin_1b13d6ce7:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1ac37b367_sbtoa(_119012_b);
			}
			_iter_next_1b13d6ce7:;
			++it;
			goto _iter_begin_1b13d6ce7;
		}
		_iter_end_1b13d6ce7:;
	};
	return _118913_lit;
}



inline jule::Str _1ac37b92d_cstrLit(jule::Slice<jule::U8> _119612_bytes) {
	return ((jule::Str("\"", 1) + _1ac37b60e_cstrBytes(_119612_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1ac37bc3b_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1ac37bed3_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1ac37c27a_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1b37a7dca_FmtFloat(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_1e66b3cc5_Contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1ac37bed3_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1b13dae61:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1b13daee9:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1b13dad40:;
	};
	jule::Str _12249_fmt = _1ac11ba31_FmtInt(_12169_x,10LL);;
	if (_1e673aa0b_Is64Bit(jule::Str("arm64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1ac37c27a_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1b13dcc87:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1b13dcb77:;
	};
	jule::Str _12379_fmt = _1ac11b69b_FmtUint(_12319_x,10LL);;
	if (_1e673aa0b_Is64Bit(jule::Str("arm64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1ac37c632_isForwarded(jule::Ptr<_1ac1346e7_Scope>& _124417_s) {
	jule::Any _12459_last = _124417_s.get()._field_Stmts[(_124417_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1ac1c4bb6_Data>>()) {
			_case_begin_1b13e0064:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1ac1c4bb6_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1a99b926b_BuiltinErrorCallExprModel>>()) {
						_case_begin_1b13e0b7a:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b13e0b14:;
						{
							return false;
						}
					}
					_match_end_1b13e084a:;
				};
			}
		}
		else {
			_case_begin_1b13deea9:;
			{
				return true;
			}
		}
		_match_end_1b13dee54:;
	};
}



inline jule::Bool _1ac37c8eb_isBuiltinCallHasDebuginf(jule::Ptr<_1a99b6114_FnCallExprModel>& _125930_m) {
	if ((!(_1a99c174b_IsBuiltin(_125930_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125930_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>>()) {
			_case_begin_1b13e1917:;
			{
				jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel> _126513_csie = _125930_m.get()._field_Expr.operator jule::Ptr<_1a99b7b4e_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1b13e05e7:;
			{
				return false;
			}
		}
		_match_end_1b13e0592:;
	};
}



inline void _1ac3e8a00_iterFiles(jule::Ptr<_1ac156032_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1ac1bee58_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1b14c0e03:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1bee58_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1b14c0e03:;
			++it;
			goto _iter_begin_1b14c0e03;
		}
		_iter_end_1b14c0e03:;
	};
}



inline void _1ac3e8c53_prepareStructure(jule::Ptr<_1b393b9dc_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1b14c1a19:;
		if (it != expr.end()) {
			jule::Ptr<_1b3967d9d_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1b14c2234:;
					if (it != expr.end()) {
						jule::Ptr<_1a99bc714_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1b14c2234;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1b14c3015:;
								if (it != expr.end()) {
									jule::Ptr<_1a99c03b5_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1a99be4e6_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1a99bb768_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1ac3e9c10_customType>(_1ac3e9c10_customType{._field_kind=static__1ac3eb5b3_asPtr(static__1ac3eeab1_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1a9a04b8b_TypeKind>(_1a9a04b8b_TypeKind{._field_Kind=jule::Trait<_1a9a0475c_Kind>(jule::new_ptr<_1ac3e9c10_customType>(_1ac3e9c10_customType{._field_kind=static__1ac3eeab1_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1b14c3015:;
									++it;
									goto _iter_begin_1b14c3015;
								}
								_iter_end_1b14c3015:;
							};
						}
						_iter_next_1b14c2234:;
						++it;
						goto _iter_begin_1b14c2234;
					}
					_iter_end_1b14c2234:;
				};
			}
			_iter_next_1b14c1a19:;
			++it;
			goto _iter_begin_1b14c1a19;
		}
		_iter_end_1b14c1a19:;
	};
}



inline jule::Str _1ac3e8eea_concatAllParts(jule::Slice<jule::Ptr<_1e6a5c800_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1b14c2036:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1b14c2036:;
			++it;
			goto _iter_begin_1b14c2036;
		}
		_iter_end_1b14c2036:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1b14c69ca:;
		if (it != expr.end()) {
			jule::Ptr<_1e6a5c800_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1b14c69ca:;
			++it;
			goto _iter_begin_1b14c69ca;
		}
		_iter_end_1b14c69ca:;
	};
	return _104313_s;
}



inline jule::Ptr<_1b3917b2d_Directive> _1ac402421_findDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1b1660427:;
		if (it != expr.end()) {
			jule::Ptr<_1b3917b2d_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1b1660427:;
			++it;
			goto _iter_begin_1b1660427;
		}
		_iter_end_1b1660427:;
	};
	return nullptr;
}



inline jule::Bool _1ac4027a6_hasDirective(jule::Slice<jule::Ptr<_1b3917b2d_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1ac402421_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _1e67046a6_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1e671838a_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1e670d7d1_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _1e670d7d1_HelpMap;
		auto it = expr.begin();
		_iter_begin_1b18232bb:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b18232bb:;
			++it;
			goto _iter_begin_1b18232bb;
		}
		_iter_end_1b18232bb:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1e670d7d1_HelpMap;
		auto it = expr.begin();
		_iter_begin_1b1824e38:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1e6646340_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1b1824e38:;
			++it;
			_519_i++;
			goto _iter_begin_1b1824e38;
		}
		_iter_end_1b1824e38:;
	};
	jule::outln(_4913_s);
}



inline void _1e6718ad8_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1e671a48b_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1e671abd9_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1e671b437_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b182c12c:;
			{
				_1e671a48b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b182bd1e:;
			{
				_1e671abd9_toolDistarch();
			}
		}
		else {
			_case_begin_1b182a5e2:;
			{
				_1e67046a6_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b182bb54:;
	};
}



inline void _1e67055a8_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _1e4728468_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1e47d5d2d_CppStd));
}



inline void _1e672829b_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b1831692:;
			{
				({
					auto except = static__1e493719e_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1e67046a6_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b182eeba:;
			{
				_1e67046a6_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1b1831230:;
	};
}



inline jule::Bool _1e482c8d0_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b18328e6:;
			{
				_1e671838a_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b183295c:;
			{
				_1e6718ad8_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b18329c3:;
			{
				_1e671b437_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b18331aa:;
			{
				_1e67055a8_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b1833221:;
			{
				_1e672829b_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b1832819:;
			{
				return false;
			}
		}
		_match_end_1b183274d:;
	};
	return true;
}



inline void _1e671be71_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1e56c050d_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1e671be71_showInfo();
		return;;
	};
	if (_1e482c8d0_processCommand(_18913_args)) {
		return;;
	};
	_1ade38c36_compileCommand(_18913_args);
}



inline void _1ac427787_init(void) {
	_1e4728468_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1e563252a_File> _1ac429338_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1e571ec88_Dir(_4316_path);;
	({
		auto except = static__1e488bac6_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1e569977e_Create(_449_dir);
				if (!except.ok()) {
					_1ac56bb2e_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1e4934520_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1ac56bb2e_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1ade17990_clearObjects(void) {
	({
		auto except = static__1e4887dd0_Remove(_1ac423255_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e567653b_Remove(_1ac4299ed_OutDir);
}



inline void _1ac42196d_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1e6786408_Cmd> _7313_cmd = static__1e6786837_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1e66b3984_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _1e6786a9b_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1b183aa97:;
					{
						static__1ac5690d2_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1b183a36b:;
					{
						static__1ac5690d2_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1b183a5d0:;
					{
						static__1ac5690d2_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1b183a646:;
					{
						static__1ac5690d2_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b183a4ae:;
					{
						static__1ac5690d2_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1b183a404:;
			};
			_1ac56bb2e_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1e4728468_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ac5690d2_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1ac56bb2e_Throw(jule::Str());
	};
	_1ade17990_clearObjects();
}



inline jule::Bool _1ac4213da_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1e66b309e_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _1e6729764_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1ac425ae8_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e47d5d2d_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b18404a3:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b1840519:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b184066d:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b1840360:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_1e47d71b4_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1ac423cc2_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e47d5d2d_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b1842be2:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b1842c58:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b1842dac:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b1842a9e:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_1e47d71b4_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1ade2b674_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1aca5966b_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _1e47d5ab9_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _1e4728468_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b18455eb:;
			{
				_1ac423cc2_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b1845b4b:;
			{
				_1ac425ae8_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1b18458d7:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1b1845e8c:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1b1845e8c:;
			++it;
			goto _iter_begin_1b1845e8c;
		}
		_iter_end_1b1845e8c:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1b1847367:;
		if (it != expr.end()) {
			jule::Ptr<_1ac1530c8_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1ac4213da_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1b1847367:;
			++it;
			goto _iter_begin_1b1847367;
		}
		_iter_end_1b1847367:;
	};
	if ((!(_1ac42c14e_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1ac42c14e_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1ac423255_getCompilePath(void) {
	return _1e57374cb_Join(jule::Slice<jule::Str>::make({_1ac4299ed_OutDir,_1ac42b4e4_OutName}));
}



inline void _1ac4237d8_applyTargetIndependentOptimizations(jule::Ptr<_1aca5966b_IR>& _20545_ir) {
	jule::Ptr<_1acb9c627_Optimizer> _20713_opt = static__1acb0b058_New(_20545_ir);;
	_1acb66b41_Optimize(_20713_opt.ptr());
}



inline void _1ade13749_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1e4728468_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b1849325:;
			{
				_1ac56bb2e_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b1849a73:;
			{
				if (_1e47d5ab9_CompilerPath.empty()) {
					_1e47d5ab9_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b1849ad9:;
			{
				if (_1e47d5ab9_CompilerPath.empty()) {
					_1e47d5ab9_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b1849a0c:;
			{
				_1ac56bb2e_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1e4728468_Compiler));
			}
		}
		_match_end_1b1849743:;
	};
}



inline void _1ac420ede_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1ac56bb2e_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1ac424d4a_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1ac56bb2e_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1ac424e7c_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1ac56bb2e_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1e66b3984_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1ac56bb2e_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1ac424d4a_checkTargetOs(_25410_os);
		_1e678503e_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1ac420ede_checkTargetArch(_25414_arch);
		_1e676e721_Arch=_25414_arch;
	};
	_1ac120ea8_UpdateTarget();
}



inline void _1ade383ea_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1ac56bb2e_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b1852691:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b1852be1:;
			{
				_1aa0bce24_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b1852471:;
			{
				_1ac56bb2e_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1b185241b:;
	};
}



inline void _1ade3875d_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1e47d5d2d_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b1852c57:;
			{
				goto _match_end_1b1853a5a;
			}
		}
		else {
			_case_begin_1b1853670:;
			{
				_1ac56bb2e_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1e47d5d2d_CppStd));
			}
		}
		_match_end_1b1853a5a:;
	};
}



inline jule::Slice<jule::Str> _1ade38890_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ade34616_FlagSet> _29613_fs = static__1ade34902_new();;
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ac42c14e_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e47d6092_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e47d636c_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e4728468_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e47d5ab9_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e47d71b4_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e47d6988_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e47d6da6_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1b1856134_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e47d5d2d_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25786a2_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25988d1_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25b0a5d_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25b2dd4_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25b1d4a_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b25d4e28_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b2635363_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1b185ec64_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b2635891_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1ade35716_parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1ac56bb2e_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1ade13749_checkCompilerFlag();
	_1ade3875d_checkCppStdFlag();
	_1ac424e7c_checkTargetFlag(_29413_target);
	_1ade383ea_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1ade389c2_setupSemaFlags(jule::I64& _33124_flags) {
	if (_1e47d6092_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1aca5966b_IR> _1ade38b04_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1ade38890_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1ade389c2_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1ac56bb2e_Throw(_1e6736375_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1ac56bb2e_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _1e57169d8_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_1ac56bb2e_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1e56328e3_Status> _3549_inf = ({
		auto except = static__1e488bac6_Of(_1e676eaa6_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ac56bb2e_Throw(_1e6736375_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1e56328e3_Status>();});
	});;
	if ((!(_1e4884b02_IsDir(_3549_inf.ptr())))) {
		_1ac56bb2e_Throw(_1e6736375_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1aca5966b_IR> _36214_ir;;
	jule::Slice<_1e6735e35_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1aca267ae_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1ac56bb2e_Throw(_1e6736375_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1ac56b1b1_PrintLogs(_36218_logs);
		_1ac56bb2e_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1ade38c36_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_1e47d667a_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1aca5966b_IR> _38313_ir = _1ade38b04_buildIr(_37724_args);;
	;
	if ((!(_1e47d667a_Test))) {
		jule::Ptr<_1a99bc714_Fn> _38817_main = _1ac1577d6_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1ac56bb2e_Throw(_1e6736375_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1ac4237d8_applyTargetIndependentOptimizations(_38313_ir);
	_1aca9d77b_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1ade2b674_genCompileCmd(_1ac423255_getCompilePath(),_38313_ir);
	jule::Ptr<_1ac3e41c1_ObjectCoder> _40113_oc = static__1ac3c71e8_New(_38313_ir,_1ac3e3ce7_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_1e47d667a_Test) {
		jule::Ptr<_1ac37e414_TestCoder> _40617_tc = static__1ac37e887_New(_40113_oc);;
		_1ac380ab9_Serialize(_40617_tc);
	} else {
		_1ac3e868c_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1ac423255_getCompilePath();;
	jule::Ptr<_1e563252a_File> _41313_file = _1ac429338_openOutput(_4129_path);;
	({
		auto except = _1e488995e_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ac56bb2e_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1e493571e_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_1e47d636c_Transpilation))) {
		_1ac42196d_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1e6747dc0_init();
	_1ac12111d_init();
	_1ac427787_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}