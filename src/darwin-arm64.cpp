// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 24/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1a3e2e50b_comptimeRangeKind{};
struct _1a3e74b4a_Importer{};
struct _1a4059977_Kind{};
struct _1a4079a1e_Lookup{};
struct _1a500cd8b_CommonFlag{};
struct _1c95e1dc9_Range16;
struct _1c95e2407_Range32;
struct _1c95e287a_RangeTable;
struct _1c96ea92d_acceptRange;
struct _1c9754d1c_StrBuilder;
struct _1c976091b_lazyBuff;
struct _20c078c3a_DirEntry;
struct _20c078ec1_Directory;
struct _20c07ab0a_File;
struct _20c07cbea_Status;
struct _1c9088024_cmdAttrs;
struct _1c980bca3_Log;
struct _1b2875570_floatInfo;
struct _1b28761ec_decimalSlice;
struct _1b2888440_leftCheat;
struct _1b2888e57_decimal;
struct _1b289b651_Const;
struct _1a3db8198_Token;
struct _1a3dbd92e_File;
struct _1a3dc0a85_kindPair;
struct _1a3dc6a69_lex;
struct _1a3dcb73e_Ast;
struct _1a3dcc652_Node;
struct _1a3dcca70_Directive;
struct _1a3dcd653_TypeDecl;
struct _1a3dcdc5d_IdentTypeDecl;
struct _1a3dce027_SubIdentTypeDecl;
struct _1a3dce401_NamespaceTypeDecl;
struct _1a3dce6ed_SptrTypeDecl;
struct _1a3dcea83_SlcTypeDecl;
struct _1a3dced80_TupleTypeDecl;
struct _1a3dd017c_PtrTypeDecl;
struct _1a3dd091e_ArrTypeDecl;
struct _1a3dd116c_MapTypeDecl;
struct _1a3dd1546_RetTypeDecl;
struct _1a3dd2987_Expr;
struct _1a3dd2c51_RangeExpr;
struct _1a3dd335b_UseExpr;
struct _1a3dd357b_TupleExpr;
struct _1a3dd3922_LitExpr;
struct _1a3dd3ceb_UnsafeExpr;
struct _1a3dd42a2_IdentExpr;
struct _1a3dd4a44_UnaryExpr;
struct _1a3dd4e1d_VariadicExpr;
struct _1a3dd52e7_CastExpr;
struct _1a3dd56c1_NsSelectionExpr;
struct _1a3dd5a9a_SubIdentExpr;
struct _1a3dd6051_BinaryExpr;
struct _1a3dd66b1_FnCallExpr;
struct _1a3dd71a6_FieldExprPair;
struct _1a3dd79d1_StructLit;
struct _1a3dd7e87_BraceLit;
struct _1a3dd87b2_KeyValPair;
struct _1a3dd8edd_SliceExpr;
struct _1a3dd994a_IndexingExpr;
struct _1a3dda0aa_SlicingExpr;
struct _1a3dda3a7_Constraint;
struct _1a3dda85d_GenericDecl;
struct _1a3ddac37_LabelSt;
struct _1a3ddb111_GotoSt;
struct _1a3ddb40d_FallSt;
struct _1a3ddba6d_AssignLeft;
struct _1a3ddc101_AssignSt;
struct _1a3ddd014_Stmt;
struct _1a3ddd674_ScopeTree;
struct _1a3ddddb1_ParamDecl;
struct _1a3de0313_FnDecl;
struct _1a3de14bd_VarDecl;
struct _1a3de1897_RetSt;
struct _1a3de2117_Iter;
struct _1a3de2942_WhileKind;
struct _1a3de3349_RangeKind;
struct _1a3de3723_BreakSt;
struct _1a3de3aec_ContSt;
struct _1a3de40a3_If;
struct _1a3de447c_Else;
struct _1a3de4933_Conditional;
struct _1a3de5170_TypeAliasDecl;
struct _1a3de5626_Case;
struct _1a3de5e40_MatchCase;
struct _1a3de6759_UseDecl;
struct _1a3de6c10_EnumItemDecl;
struct _1a3de77c1_EnumDecl;
struct _1a3de80eb_TypeEnumItemDecl;
struct _1a3de875b_TypeEnumDecl;
struct _1a3de8a25_FieldDecl;
struct _1a3de941b_StructDecl;
struct _1a3de9b58_TraitDecl;
struct _1a3dea2b8_Impl;
struct _1a3deb5b6_Field;
struct _1a3ded5c9_Operators;
struct _1a3dee4dc_Struct;
struct _1a3e016ba_FieldIns;
struct _1a3e06170_OperandExprModel;
struct _1a3e0666a_BinaryExprModel;
struct _1a3e06a44_UnaryExprModel;
struct _1a3e07072_StructArgExprModel;
struct _1a3e07418_StructLitExprModel;
struct _1a3e07715_AllocStructLitExprModel;
struct _1a3e07c98_CastingExprModel;
struct _1a3e0864a_FnCallExprModel;
struct _1a3e08a24_SliceExprModel;
struct _1a3e08eca_IndexingExprModel;
struct _1a3e093a4_AnonFnExprModel;
struct _1a3e0977d_KeyValPairExprModel;
struct _1a3e09c34_MapExprModel;
struct _1a3e0a2b7_SlicingExprModel;
struct _1a3e0a84a_TraitSubIdentExprModel;
struct _1a3e0b1db_StructSubIdentExprModel;
struct _1a3e0b582_StructStaticIdentExprModel;
struct _1a3e0b95b_ArrayExprModel;
struct _1a3e0bc58_TupleExprModel;
struct _1a3e0c132_BuiltinOutCallExprModel;
struct _1a3e0c50b_BuiltinOutlnCallExprModel;
struct _1a3e0c8d5_BuiltinNewCallExprModel;
struct _1a3e0ccae_BuiltinPanicCallExprModel;
struct _1a3e0d265_BuiltinAssertCallExprModel;
struct _1a3e0d71b_BuiltinMakeCallExprModel;
struct _1a3e0dae5_BuiltinAppendCallExprModel;
struct _1a3e0dde2_BuiltinLenCallExprModel;
struct _1a3e0e1de_BuiltinCapCallExprModel;
struct _1a3e0e5b8_BuiltinDeleteCallExprModel;
struct _1a3e0e992_BuiltinCopyCallExprModel;
struct _1a3e0ed6b_BuiltinErrorCallExprModel;
struct _1a3e10520_SizeofExprModel;
struct _1a3e1070c_AlignofExprModel;
struct _1a3e109a4_RuneExprModel;
struct _1a3e10ca1_IntegratedToStrExprModel;
struct _1a3e1117a_BackendEmitExprModel;
struct _1a3e11477_FreeExprModel;
struct _1a3e1217b_RetType;
struct _1a3e1290c_Param;
struct _1a3e143d1_Fn;
struct _1a3e16339_ParamIns;
struct _1a3e172d5_FnIns;
struct _1a3e1a4a3_ReferenceStack;
struct _1a3e1b9c1_Pass;
struct _1a3e21476_symbolBuilder;
struct _1a3e276ad_Trait;
struct _1a3e2934c_EnumItem;
struct _1a3e29db9_Enum;
struct _1a3e2aeec_TypeEnumItem;
struct _1a3e2b5c4_TypeEnum;
struct _1a3e2e72b_comptimeRange;
struct _1a3e301ee_comptimeStructField;
struct _1a3e31db0_comptimeStructFields;
struct _1a3e334aa_comptimeStatic;
struct _1a3e3516b_comptimeStatics;
struct _1a3e36766_comptimeEnumField;
struct _1a3e37b0d_comptimeEnumFields;
struct _1a3e39208_comptimeParam;
struct _1a3e3b392_comptimeParams;
struct _1a3e3c959_comptimeTypeInfos;
struct _1a3e3e054_comptimeTypeInfo;
struct _1a3e45566_comptimeValue;
struct _1a3e47db5_comptimeFiles;
struct _1a3e494b0_comptimeFile;
struct _1a3e4d9c0_constraintChecker;
struct _1a3e50d24_Impl;
struct _1a3e5627a_Scope;
struct _1a3e56698_If;
struct _1a3e56995_Else;
struct _1a3e56db3_Conditional;
struct _1a3e571b0_InfIter;
struct _1a3e57666_WhileIter;
struct _1a3e580b2_RangeIter;
struct _1a3e58447_ContSt;
struct _1a3e58821_BreakSt;
struct _1a3e58b1d_Label;
struct _1a3e58ee7_GotoSt;
struct _1a3e593c1_Postfix;
struct _1a3e59877_Assign;
struct _1a3e59c51_MultiAssign;
struct _1a3e5a3b1_Match;
struct _1a3e5add9_Case;
struct _1a3e5b5d2_FallSt;
struct _1a3e5b978_RetSt;
struct _1a3e5c0d8_scopeLabel;
struct _1a3e5c66b_scopeGoto;
struct _1a3e5d57e_scopeChecker;
struct _1a3e715b4_directiveChecker;
struct _1a3e77a60_ImportInfo;
struct _1a3e7a986_Package;
struct _1a3e972cc_commonSemaMeta;
struct _1a3e97dd2_Sema;
struct _1a3eb7aa0_missingRetChecker;
struct _1a3ebac4b_Var;
struct _1a3ebbac6_FuncPattern;
struct _1a4010dc3_typeCompatibilityChecker;
struct _1a4012b72_assignTypeChecker;
struct _1a4014547_dynamicTypeAnnotation;
struct _1a40193a4_fnCallArgChecker;
struct _1a401c2db_structLitChecker;
struct _1a401e0bd_rangeChecker;
struct _1a402182e_retTypeChecker;
struct _1a4023aea_SymbolTable;
struct _1a4028e63_Data;
struct _1a402a0da_Value;
struct _1a402ab8a_Eval;
struct _1a40493b2_unaryEval;
struct _1a404b34d_binaryEval;
struct _1a4058547_InsGeneric;
struct _1a405913b_TypeAlias;
struct _1a4059e2d_TypeKind;
struct _1a4062100_TypeSymbol;
struct _1a4062a07_Prim;
struct _1a4066533_Sptr;
struct _1a4067006_Slc;
struct _1a4067aea_Tuple;
struct _1a406869a_Map;
struct _1a4069327_Arr;
struct _1a4069cea_Ptr;
struct _1a406aceb_referencer;
struct _1a406bcdb_typeChecker;
struct _1a4074992_identTypeLookup;
struct _1a49d5e19_FileInfo;
struct _1a4a2bb74_stmt;
struct _1a4a2c515_scopeParser;
struct _1a4a39e3a_exprBuilder;
struct _1a4a473cb_assignInfo;
struct _1a4a4a7ca_parser;
struct _1a4a5c9a7_typeBuilder;
struct _1a4277117_CompileInfo;
struct _1a42785e1_directiveEval;
struct _1a4a61add_JuleImporter;
struct _1a4a66d02_OrderedDefines;
struct _1a4a67088_defineOrderer;
struct _1a39bd7e8_liveTable;
struct _1a39c3501_scopeDeadCode;
struct _1a39c778b_exprDeadCode;
struct _1a4160d58_ExceptionalForwardingExprModel;
struct _1a41611dd_SwapExprModel;
struct _1a41615b7_EmptyCompareExprModel;
struct _1a416193b_RefExprModel;
struct _1a4161dae_StrCompExprModel;
struct _1a4162442_MutSlicingExprModel;
struct _1a416273e_UnsafeBinaryExprModel;
struct _1a4162ac4_UnsafeIndexingExprModel;
struct _1a4162e9d_PushToSliceExprModel;
struct _1a4163377_AppendToSliceExprModel;
struct _1a4163751_StrRuneIter;
struct _1a4163a4d_UnsafeDerefExprModel;
struct _1a4163d4a_UnsafeCastingExprModel;
struct _1a4164a2c_nilVar;
struct _1a4164d6d_nils;
struct _1a4167aeb_scopeOptimizer;
struct _1a416e949_exprOptimizer;
struct _1a4179316_dynamicVar;
struct _1a4179657_dynamic;
struct _1a417c5a0_data;
struct _1a417db56_boundaryVar;
struct _1a417de97_boundary;
struct _1a39ce8a3_Optimizer;
struct _1a3a07667_AnsiEscape;
struct _1a3a08bda_Logger;
struct _1a4e7121c_AbsTime;
struct _1a4e718e3_Time;
struct _1a4e5d4a1_scopeCoder;
struct _1a427aa11_exprCoder;
struct _1a45a5500_TestCoder;
struct _1a45a835a_identCoder;
struct _1a4e79335_SerializationInfo;
struct _1a4e7990c_traitHash;
struct _1a4e79cd6_traitCast;
struct _1a4e8a555_customType;
struct _1a4e8b15a_typeCoder;
struct _1a4e9443d_resultCoder;
struct _1a8b4e743_Flag;
struct _1a8b53093_Flag;
struct _1a8b5674a_Flag;
struct _1a8b59e46_Flag;
struct _1a8b5d5ed_Flag;
struct _1a500e95e_FlagSet;
struct _1a5012423_argParser;
struct _1a4e7ad4d_ObjectCoder;
struct _1a417c0a5_dataCheckpoint;
struct _1a39bdc16_ObjectDeadCode;
struct _1a4a6456e_IR;
struct _1a3e0226a_StructIns;
struct _1c9034311_Cmd;
struct _1c95e1dc9_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1c95e1dc9_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1c95e1dc9_Range16 _other) { return !this->operator==(_other); }


};
struct _1c95e2407_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1c95e2407_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1c95e2407_Range32 _other) { return !this->operator==(_other); }


};
struct _1c95e287a_RangeTable {
	jule::Slice<_1c95e1dc9_Range16> _field_R16;
	jule::Slice<_1c95e2407_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1c96ea92d_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1c96ea92d_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1c96ea92d_acceptRange _other) { return !this->operator==(_other); }


};
struct _1c9754d1c_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1c976091b_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _20c078c3a_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_20c07cbea_Status> _field_Stat;
	

	inline bool operator==(_20c078c3a_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_20c078c3a_DirEntry _other) { return !this->operator==(_other); }


};
struct _20c078ec1_Directory {
	

	inline bool operator==(_20c078ec1_Directory _other) { return true; }

	inline bool operator!=(_20c078ec1_Directory _other) { return !this->operator==(_other); }


};
struct _20c07ab0a_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_20c07ab0a_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_20c07ab0a_File _other) { return !this->operator==(_other); }


};
struct _20c07cbea_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_20c07cbea_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_20c07cbea_Status _other) { return !this->operator==(_other); }


};
struct _1c9088024_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1c9088024_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1c9088024_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1c980bca3_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1c980bca3_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1c980bca3_Log _other) { return !this->operator==(_other); }


};
struct _1b2875570_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1b2875570_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1b2875570_floatInfo _other) { return !this->operator==(_other); }


};
struct _1b28761ec_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1b2888440_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1b2888440_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1b2888440_leftCheat _other) { return !this->operator==(_other); }


};
struct _1b2888e57_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1b2888e57_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1b2888e57_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b28a2206_Eq(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a2547_Lt(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a2888_LtEq(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a2bc9_Gt(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a301a_GtEq(_1b289b651_Const*, _1b289b651_Const);
struct _1b289b651_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1b289b651_Const _other) { return _1b28a2206_Eq(this, _other); }

	inline bool operator!=(_1b289b651_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1b289b651_Const _other) { return _1b28a2bc9_Gt(this, _other); }

	inline jule::Bool operator>=(_1b289b651_Const _other) { return _1b28a301a_GtEq(this, _other); }

	inline jule::Bool operator<(_1b289b651_Const _other) { return _1b28a2547_Lt(this, _other); }

	inline jule::Bool operator<=(_1b289b651_Const _other) { return _1b28a2888_LtEq(this, _other); }


};
struct _1a3db8198_Token {
	jule::Ptr<_1a3dbd92e_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1a3db8198_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a3db8198_Token _other) { return !this->operator==(_other); }


};
struct _1a3dbd92e_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Tokens;
	


};
struct _1a3dc0a85_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1a3dc0a85_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a3dc0a85_kindPair _other) { return !this->operator==(_other); }


};
struct _1a3dc6a69_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_tokens;
	jule::Ptr<_1a3dbd92e_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1c980bca3_Log> _field_errors;
	


};
struct _1a3dcb73e_Ast {
	jule::Ptr<_1a3dbd92e_File> _field_File;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a3de6759_UseDecl>> _field_UseDecls;
	jule::Slice<_1a3dcc652_Node> _field_Nodes;
	


};
struct _1a3dcc652_Node {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a3dcc652_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a3dcc652_Node _other) { return !this->operator==(_other); }


};
struct _1a3dcca70_Directive {
	jule::Ptr<_1a3db8198_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Args;
	


};
struct _1a3dcd653_TypeDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a3dcd653_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3dcd653_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dcdc5d_IdentTypeDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _field_Generics;
	


};
struct _1a3dce027_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>> _field_Idents;
	


};
struct _1a3dce401_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Idents;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	


};
struct _1a3dce6ed_SptrTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a3dce6ed_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3dce6ed_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dcea83_SlcTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a3dcea83_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3dcea83_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dced80_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _field_Types;
	


};
struct _1a3dd017c_PtrTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a3dd017c_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a3dd017c_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dd091e_ArrTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Elem;
	jule::Ptr<_1a3dd2987_Expr> _field_Size;
	

	inline bool operator==(_1a3dd091e_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a3dd091e_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dd116c_MapTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Key;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Val;
	

	inline bool operator==(_1a3dd116c_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a3dd116c_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a3dd1546_RetTypeDecl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Idents;
	


};
struct _1a3dd2987_Expr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a3dd2987_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3dd2987_Expr _other) { return !this->operator==(_other); }


};
struct _1a3dd2c51_RangeExpr {
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd2c51_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd2c51_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd335b_UseExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd335b_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd335b_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd357b_TupleExpr {
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Expr;
	


};
struct _1a3dd3922_LitExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1a3dd3922_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a3dd3922_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd3ceb_UnsafeExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd3ceb_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd3ceb_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd42a2_IdentExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1a3dd42a2_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1a3dd42a2_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd4a44_UnaryExpr {
	jule::Ptr<_1a3db8198_Token> _field_Op;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd4a44_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd4a44_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd4e1d_VariadicExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd4e1d_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd4e1d_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd52e7_CastExpr {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd52e7_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd52e7_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd56c1_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Ns;
	jule::Ptr<_1a3db8198_Token> _field_Ident;
	


};
struct _1a3dd5a9a_SubIdentExpr {
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a3db8198_Token> _field_Ident;
	

	inline bool operator==(_1a3dd5a9a_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3dd5a9a_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd6051_BinaryExpr {
	jule::Ptr<_1a3dd2987_Expr> _field_Left;
	jule::Ptr<_1a3dd2987_Expr> _field_Right;
	jule::Ptr<_1a3db8198_Token> _field_Op;
	

	inline bool operator==(_1a3dd6051_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3dd6051_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1a3dd66b1_FnCallExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Args;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1a3dd71a6_FieldExprPair {
	jule::Ptr<_1a3db8198_Token> _field_Field;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3dd71a6_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3dd71a6_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a3dd79d1_StructLit {
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Exprs;
	


};
struct _1a3dd7e87_BraceLit {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Exprs;
	


};
struct _1a3dd87b2_KeyValPair {
	jule::Ptr<_1a3dd2987_Expr> _field_Key;
	jule::Ptr<_1a3dd2987_Expr> _field_Val;
	jule::Ptr<_1a3db8198_Token> _field_Colon;
	

	inline bool operator==(_1a3dd87b2_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a3dd87b2_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1a3dd8edd_SliceExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Exprs;
	


};
struct _1a3dd994a_IndexingExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a3dd2987_Expr> _field_Index;
	

	inline bool operator==(_1a3dd994a_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a3dd994a_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a3dda0aa_SlicingExpr {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a3dd2987_Expr> _field_Start;
	jule::Ptr<_1a3dd2987_Expr> _field_To;
	

	inline bool operator==(_1a3dda0aa_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a3dda0aa_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a3dda3a7_Constraint {
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _field_Mask;
	


};
struct _1a3dda85d_GenericDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dda3a7_Constraint> _field_Constraint;
	

	inline bool operator==(_1a3dda85d_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a3dda85d_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a3ddac37_LabelSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a3ddac37_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3ddac37_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a3ddb111_GotoSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_Label;
	

	inline bool operator==(_1a3ddb111_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a3ddb111_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a3ddb40d_FallSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	

	inline bool operator==(_1a3ddb40d_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a3ddb40d_FallSt _other) { return !this->operator==(_other); }


};
struct _1a3ddba6d_AssignLeft {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3ddba6d_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3ddba6d_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a3ddc101_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a3db8198_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> _field_Left;
	jule::Ptr<_1a3dd2987_Expr> _field_Right;
	


};
struct _1a3ddd014_Stmt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a3ddd014_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a3ddd014_Stmt _other) { return !this->operator==(_other); }


};
struct _1a3ddd674_ScopeTree {
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a3ddd014_Stmt> _field_Stmts;
	jule::Ptr<_1a3db8198_Token> _field_End;
	


};
struct _1a3ddddb1_ParamDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a3ddddb1_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3ddddb1_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1a3de0313_FnDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_Generics;
	jule::Ptr<_1a3dd1546_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> _field_Params;
	


};
struct _1a3de14bd_VarDecl {
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	


};
struct _1a3de1897_RetSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3de1897_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3de1897_RetSt _other) { return !this->operator==(_other); }


};
struct _1a3de2117_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a3de2117_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3de2117_Iter _other) { return !this->operator==(_other); }


};
struct _1a3de2942_WhileKind {
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a3db8198_Token> _field_NextToken;
	

	inline bool operator==(_1a3de2942_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a3de2942_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a3de3349_RangeKind {
	jule::Ptr<_1a3db8198_Token> _field_InToken;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a3de14bd_VarDecl> _field_KeyA;
	jule::Ptr<_1a3de14bd_VarDecl> _field_KeyB;
	

	inline bool operator==(_1a3de3349_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a3de3349_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a3de3723_BreakSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_Label;
	

	inline bool operator==(_1a3de3723_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a3de3723_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a3de3aec_ContSt {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_Label;
	

	inline bool operator==(_1a3de3aec_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a3de3aec_ContSt _other) { return !this->operator==(_other); }


};
struct _1a3de40a3_If {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a3de40a3_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3de40a3_If _other) { return !this->operator==(_other); }


};
struct _1a3de447c_Else {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a3de447c_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3de447c_Else _other) { return !this->operator==(_other); }


};
struct _1a3de4933_Conditional {
	jule::Ptr<_1a3de40a3_If> _field_Head;
	jule::Slice<jule::Ptr<_1a3de40a3_If>> _field_Tail;
	jule::Ptr<_1a3de447c_Else> _field_Default;
	


};
struct _1a3de5170_TypeAliasDecl {
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a3de5170_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3de5170_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a3de5626_Case {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_Exprs;
	


};
struct _1a3de5e40_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a3de5626_Case>> _field_Cases;
	jule::Ptr<_1a3de447c_Else> _field_Default;
	


};
struct _1a3de6759_UseDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1a3de6c10_EnumItemDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	

	inline bool operator==(_1a3de6c10_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3de6c10_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a3de77c1_EnumDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a3db8198_Token> _field_End;
	


};
struct _1a3de80eb_TypeEnumItemDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a3de80eb_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3de80eb_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a3de875b_TypeEnumDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a3db8198_Token> _field_End;
	


};
struct _1a3de8a25_FieldDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Kind;
	jule::Ptr<_1a3dd2987_Expr> _field_Default;
	

	inline bool operator==(_1a3de8a25_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3de8a25_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a3de941b_StructDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_Generics;
	


};
struct _1a3de9b58_TraitDecl {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a3de0313_FnDecl>> _field_Methods;
	


};
struct _1a3dea2b8_Impl {
	jule::Ptr<_1a3db8198_Token> _field_End;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Base;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a3de0313_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _field_Statics;
	


};
struct _1a3deb5b6_Field {
	jule::Ptr<_1a3dee4dc_Struct> _field_Owner;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Ptr<_1a3dd2987_Expr> _field_Default;
	

	inline bool operator==(_1a3deb5b6_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3deb5b6_Field _other) { return !this->operator==(_other); }


};
struct _1a3ded5c9_Operators {
	jule::Ptr<_1a3e172d5_FnIns> _field_Eq;
	jule::Ptr<_1a3e172d5_FnIns> _field_Gt;
	jule::Ptr<_1a3e172d5_FnIns> _field_GtEq;
	jule::Ptr<_1a3e172d5_FnIns> _field_Lt;
	jule::Ptr<_1a3e172d5_FnIns> _field_LtEq;
	jule::Ptr<_1a3e172d5_FnIns> _field_Shl;
	jule::Ptr<_1a3e172d5_FnIns> _field_Shr;
	jule::Ptr<_1a3e172d5_FnIns> _field_Add;
	jule::Ptr<_1a3e172d5_FnIns> _field_Sub;
	jule::Ptr<_1a3e172d5_FnIns> _field_Div;
	jule::Ptr<_1a3e172d5_FnIns> _field_Mul;
	jule::Ptr<_1a3e172d5_FnIns> _field_Mod;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitAnd;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitOr;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitXor;
	jule::Ptr<_1a3e172d5_FnIns> _field_Neg;
	jule::Ptr<_1a3e172d5_FnIns> _field_Pos;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitNot;
	jule::Ptr<_1a3e172d5_FnIns> _field_AddAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_SubAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_DivAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_MulAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_ModAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_ShlAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_ShrAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a3e172d5_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1a3ded5c9_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a3ded5c9_Operators _other) { return !this->operator==(_other); }


};
struct _1a3dee4dc_Struct {
	jule::Ptr<_1a3e97dd2_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _field_Uses;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3deb5b6_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3e276ad_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a3e0226a_StructIns>> _field_Instances;
	


};
struct _1a3e016ba_FieldIns {
	jule::Ptr<_1a3deb5b6_Field> _field_Decl;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Ptr<_1a4028e63_Data> _field_Default;
	

	inline bool operator==(_1a3e016ba_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a3e016ba_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a3e06170_OperandExprModel {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1a3e06170_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a3e06170_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0666a_BinaryExprModel {
	jule::Ptr<_1a3e06170_OperandExprModel> _field_Left;
	jule::Ptr<_1a3e06170_OperandExprModel> _field_Right;
	jule::Ptr<_1a3db8198_Token> _field_Op;
	

	inline bool operator==(_1a3e0666a_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e0666a_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e06a44_UnaryExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a3db8198_Token> _field_Op;
	

	inline bool operator==(_1a3e06a44_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e06a44_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e07072_StructArgExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3e016ba_FieldIns> _field_Field;
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	

	inline bool operator==(_1a3e07072_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e07072_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e07418_StructLitExprModel {
	jule::Ptr<_1a3e0226a_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a3e07072_StructArgExprModel>> _field_Args;
	


};
struct _1a3e07715_AllocStructLitExprModel {
	jule::Ptr<_1a3e07418_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1a3e07715_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a3e07715_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e07c98_CastingExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Ptr<_1a4059e2d_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1a3e07c98_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a3e07c98_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0864a_FnCallExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a3e172d5_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a3e5627a_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1a3e08a24_SliceExprModel {
	jule::Ptr<_1a4059e2d_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a3e08eca_IndexingExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a4028e63_Data> _field_Index;
	

	inline bool operator==(_1a3e08eca_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a3e08eca_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e093a4_AnonFnExprModel {
	jule::Ptr<_1a3e172d5_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1a3e093a4_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1a3e093a4_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0977d_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0977d_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a3e0977d_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e09c34_MapExprModel {
	jule::Ptr<_1a4059e2d_TypeKind> _field_KeyKind;
	jule::Ptr<_1a4059e2d_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a3e0977d_KeyValPairExprModel>> _field_Entries;
	


};
struct _1a3e0a2b7_SlicingExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0a2b7_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a3e0a2b7_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0a84a_TraitSubIdentExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3e143d1_Fn> _field_Method;
	jule::Ptr<_1a3e276ad_Trait> _field_Trt;
	

	inline bool operator==(_1a3e0a84a_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a3e0a84a_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0b1db_StructSubIdentExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a3e172d5_FnIns> _field_Method;
	jule::Ptr<_1a3e016ba_FieldIns> _field_Field;
	jule::Ptr<_1a3e0226a_StructIns> _field_Owner;
	

	inline bool operator==(_1a3e0b1db_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a3e0b1db_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0b582_StructStaticIdentExprModel {
	jule::Ptr<_1a3e0226a_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3e172d5_FnIns> _field_Method;
	

	inline bool operator==(_1a3e0b582_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a3e0b582_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0b95b_ArrayExprModel {
	jule::Ptr<_1a4069327_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a3e0bc58_TupleExprModel {
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _field_Datas;
	


};
struct _1a3e0c132_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a3e0c132_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a3e0c132_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0c50b_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a3e0c50b_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a3e0c50b_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0c8d5_BuiltinNewCallExprModel {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0c8d5_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a3e0c8d5_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0ccae_BuiltinPanicCallExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0ccae_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e0ccae_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0d265_BuiltinAssertCallExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1a3e0d265_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a3e0d265_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0d71b_BuiltinMakeCallExprModel {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0d71b_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a3e0d71b_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0dae5_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1a3e0dae5_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a3e0dae5_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0dde2_BuiltinLenCallExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	

	inline bool operator==(_1a3e0dde2_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e0dde2_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0e1de_BuiltinCapCallExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	

	inline bool operator==(_1a3e0e1de_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e0e1de_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0e5b8_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Dest;
	jule::Ptr<_1a4028e63_Data> _field_Key;
	

	inline bool operator==(_1a3e0e5b8_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a3e0e5b8_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0e992_BuiltinCopyCallExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Dest;
	jule::Ptr<_1a4028e63_Data> _field_Src;
	

	inline bool operator==(_1a3e0e992_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a3e0e992_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e0ed6b_BuiltinErrorCallExprModel {
	jule::Ptr<_1a3e172d5_FnIns> _field_Func;
	jule::Ptr<_1a4028e63_Data> _field_Err;
	

	inline bool operator==(_1a3e0ed6b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a3e0ed6b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e10520_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e10520_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e10520_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e1070c_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e1070c_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e1070c_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e109a4_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1a3e109a4_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a3e109a4_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e10ca1_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e10ca1_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e10ca1_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e1117a_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1a3e11477_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e11477_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e11477_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a3e1217b_RetType {
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Idents;
	


};
struct _1a3e1290c_Param {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a3e1290c_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3e1290c_Param _other) { return !this->operator==(_other); }


};
struct _1a3e143d1_Fn {
	jule::Ptr<_1a3e97dd2_Sema> _field_sema;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_Generics;
	jule::Ptr<_1a3e1217b_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a3e1290c_Param>> _field_Params;
	jule::Ptr<_1a3dee4dc_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> _field_Instances;
	


};
struct _1a3e16339_ParamIns {
	jule::Ptr<_1a3e1290c_Param> _field_Decl;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	

	inline bool operator==(_1a3e16339_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3e16339_ParamIns _other) { return !this->operator==(_other); }


};
struct _1a3e172d5_FnIns {
	jule::Ptr<_1a3e0226a_StructIns> _field_Owner;
	jule::Ptr<_1a3e143d1_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a4058547_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _field_Params;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Result;
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1a3e1a4a3_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1a3e1b9c1_Pass {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1a3e1b9c1_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a3e1b9c1_Pass _other) { return !this->operator==(_other); }


};
struct _1a3e21476_symbolBuilder {
	jule::Ptr<_1a3e21476_symbolBuilder> _field_owner;
	jule::Trait<_1a3e74b4a_Importer> _field_importer;
	jule::Slice<_1c980bca3_Log> _field_errors;
	jule::Ptr<_1a3dcb73e_Ast> _field_ast;
	jule::Ptr<_1a4023aea_SymbolTable> _field_table;
	


};
struct _1a3e276ad_Trait {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _field_Implemented;
	


};
struct _1a3e2934c_EnumItem {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a402a0da_Value> _field_Value;
	

	inline bool operator==(_1a3e2934c_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a3e2934c_EnumItem _other) { return !this->operator==(_other); }


};
struct _1a3e29db9_Enum {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _field_Items;
	


};
struct _1a3e2aeec_TypeEnumItem {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1a3e2aeec_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a3e2aeec_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1a3e2b5c4_TypeEnum {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> _field_Items;
	


};
struct _1a3e2e72b_comptimeRange {
	jule::Trait<_1a3e2e50b_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1a3e2e72b_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a3e2e72b_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1a3e301ee_comptimeStructField {
	jule::Ptr<_1a3e016ba_FieldIns> _field_field;
	

	inline bool operator==(_1a3e301ee_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a3e301ee_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1a3e31db0_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a3e016ba_FieldIns>> _field_fields;
	


};
struct _1a3e334aa_comptimeStatic {
	jule::Ptr<_1a3ebac4b_Var> _field_field;
	

	inline bool operator==(_1a3e334aa_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a3e334aa_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1a3e3516b_comptimeStatics {
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_fields;
	


};
struct _1a3e36766_comptimeEnumField {
	jule::Ptr<_1a3e2934c_EnumItem> _field_field;
	

	inline bool operator==(_1a3e36766_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a3e36766_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1a3e37b0d_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _field_fields;
	


};
struct _1a3e39208_comptimeParam {
	jule::Ptr<_1a3e16339_ParamIns> _field_param;
	

	inline bool operator==(_1a3e39208_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1a3e39208_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1a3e3b392_comptimeParams {
	jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _field_params;
	


};
struct _1a3e3c959_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a3e3e054_comptimeTypeInfo>> _field_types;
	


};
struct _1a3e3e054_comptimeTypeInfo {
	jule::Ptr<_1a4059e2d_TypeKind> _field_base;
	

	inline bool operator==(_1a3e3e054_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1a3e3e054_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1a3e45566_comptimeValue {
	jule::Ptr<_1a4028e63_Data> _field_data;
	

	inline bool operator==(_1a3e45566_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a3e45566_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1a3e47db5_comptimeFiles {
	jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>> _field_files;
	


};
struct _1a3e494b0_comptimeFile {
	jule::Ptr<_1a4023aea_SymbolTable> _field_file;
	

	inline bool operator==(_1a3e494b0_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1a3e494b0_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1a3e4d9c0_constraintChecker {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a4058547_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a3e172d5_FnIns> _field_fi;
	jule::Ptr<_1a3e0226a_StructIns> _field_si;
	jule::Ptr<_1a3db8198_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1a3e50d24_Impl {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Base;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Statics;
	


};
struct _1a3e5627a_Scope {
	jule::Ptr<_1a3e5627a_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1a3e56698_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	

	inline bool operator==(_1a3e56698_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e56698_If _other) { return !this->operator==(_other); }


};
struct _1a3e56995_Else {
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	

	inline bool operator==(_1a3e56995_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e56995_Else _other) { return !this->operator==(_other); }


};
struct _1a3e56db3_Conditional {
	jule::Slice<jule::Ptr<_1a3e56698_If>> _field_Elifs;
	jule::Ptr<_1a3e56995_Else> _field_Default;
	


};
struct _1a3e571b0_InfIter {
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	

	inline bool operator==(_1a3e571b0_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e571b0_InfIter _other) { return !this->operator==(_other); }


};
struct _1a3e57666_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	

	inline bool operator==(_1a3e57666_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a3e57666_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a3e580b2_RangeIter {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	jule::Ptr<_1a3ebac4b_Var> _field_KeyA;
	jule::Ptr<_1a3ebac4b_Var> _field_KeyB;
	

	inline bool operator==(_1a3e580b2_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a3e580b2_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a3e58447_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1a3e58447_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a3e58447_ContSt _other) { return !this->operator==(_other); }


};
struct _1a3e58821_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1a3e58821_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a3e58821_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a3e58b1d_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a3e58b1d_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a3e58b1d_Label _other) { return !this->operator==(_other); }


};
struct _1a3e58ee7_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a3e58b1d_Label> _field_Label;
	

	inline bool operator==(_1a3e58ee7_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a3e58ee7_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a3e593c1_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1a3e593c1_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e593c1_Postfix _other) { return !this->operator==(_other); }


};
struct _1a3e59877_Assign {
	jule::Ptr<_1a3e06170_OperandExprModel> _field_L;
	jule::Ptr<_1a3e06170_OperandExprModel> _field_R;
	jule::Ptr<_1a3db8198_Token> _field_Op;
	

	inline bool operator==(_1a3e59877_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a3e59877_Assign _other) { return !this->operator==(_other); }


};
struct _1a3e59c51_MultiAssign {
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1a3e5a3b1_Match {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a3e5add9_Case>> _field_Cases;
	jule::Ptr<_1a3e5add9_Case> _field_Default;
	


};
struct _1a3e5add9_Case {
	jule::Ptr<_1a3e5a3b1_Match> _field_Owner;
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _field_Exprs;
	jule::Ptr<_1a3e5add9_Case> _field_Next;
	


};
struct _1a3e5b5d2_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1a3e5b5d2_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a3e5b5d2_FallSt _other) { return !this->operator==(_other); }


};
struct _1a3e5b978_RetSt {
	jule::Ptr<_1a3e172d5_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a3e5b978_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a3e5b978_RetSt _other) { return !this->operator==(_other); }


};
struct _1a3e5c0d8_scopeLabel {
	jule::Ptr<_1a3db8198_Token> _field_token;
	jule::Ptr<_1a3e58b1d_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a3e5d57e_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1a3e5c0d8_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a3e5c0d8_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a3e5c66b_scopeGoto {
	jule::Ptr<_1a3e58ee7_GotoSt> _field_st;
	jule::Ptr<_1a3ddb111_GotoSt> _field_gt;
	jule::Ptr<_1a3e5d57e_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1a3e5c66b_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a3e5c66b_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1a3e5d57e_scopeChecker {
	jule::Ptr<_1a3db8198_Token> _field_calledFrom;
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Ptr<_1a3e172d5_FnIns> _field_owner;
	jule::Ptr<_1a3e5d57e_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a4023aea_SymbolTable> _field_table;
	jule::Ptr<_1a3e5627a_Scope> _field_scope;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_tree;
	jule::Ptr<_1a3e172d5_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e5c0d8_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e5c66b_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a3e5d57e_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a3e5d57e_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1a3e715b4_directiveChecker {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3dcca70_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1a3e715b4_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a3e715b4_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1a3e77a60_ImportInfo {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_Selected;
	jule::Ptr<_1a3e7a986_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1a3e7a986_Package {
	jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>> _field_Files;
	


};
struct _1a3e972cc_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a3e3e054_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1a3e97dd2_Sema {
	jule::Slice<_1c980bca3_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>> _field_files;
	jule::Ptr<_1a4023aea_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1a3e972cc_commonSemaMeta> _field_meta;
	


};
struct _1a3eb7aa0_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1a3ebac4b_Var {
	jule::Ptr<_1a3e5627a_Scope> _field_Scope;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Ptr<_1a402a0da_Value> _field_Value;
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Depends;
	


};
struct _1a3ebbac6_FuncPattern {
	


};
struct _1a4010dc3_typeCompatibilityChecker {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Ptr<_1a4059e2d_TypeKind> _field_dest;
	jule::Ptr<_1a4059e2d_TypeKind> _field_src;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	

	inline bool operator==(_1a4010dc3_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a4010dc3_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1a4012b72_assignTypeChecker {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Ptr<_1a4059e2d_TypeKind> _field_dest;
	jule::Ptr<_1a4028e63_Data> _field_d;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	

	inline bool operator==(_1a4012b72_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a4012b72_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1a4014547_dynamicTypeAnnotation {
	jule::Ptr<_1a402ab8a_Eval> _field_e;
	jule::Ptr<_1a3e172d5_FnIns> _field_f;
	jule::Ptr<_1a3e16339_ParamIns> _field_p;
	jule::Ptr<_1a4028e63_Data> _field_a;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	jule::Ptr<_1a4059e2d_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a3dcd653_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_ignored;
	


};
struct _1a40193a4_fnCallArgChecker {
	jule::Ptr<_1a402ab8a_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_args;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	jule::Ptr<_1a3e172d5_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_ignored;
	


};
struct _1a401c2db_structLitChecker {
	jule::Ptr<_1a402ab8a_Eval> _field_e;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	jule::Ptr<_1a3e0226a_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a3e07072_StructArgExprModel>> _field_args;
	


};
struct _1a401e0bd_rangeChecker {
	jule::Ptr<_1a3e5d57e_scopeChecker> _field_sc;
	jule::Ptr<_1a3de3349_RangeKind> _field_rang;
	jule::Ptr<_1a3e580b2_RangeIter> _field_Kind;
	jule::Ptr<_1a4028e63_Data> _field_d;
	

	inline bool operator==(_1a401e0bd_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a401e0bd_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1a402182e_retTypeChecker {
	jule::Ptr<_1a3e5d57e_scopeChecker> _field_sc;
	jule::Ptr<_1a3e172d5_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _field_exprs;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1a4023aea_SymbolTable {
	jule::Ptr<_1a3dbd92e_File> _field_File;
	jule::Slice<_1a3e1b9c1_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a3e276ad_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a3e29db9_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a3e2b5c4_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a3e50d24_Impl>> _field_Impls;
	


};
struct _1a4028e63_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b289b651_Const> _field_Constant;
	

	inline bool operator==(_1a4028e63_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a4028e63_Data _other) { return !this->operator==(_other); }


};
struct _1a402a0da_Value {
	jule::Ptr<_1a3dd2987_Expr> _field_Expr;
	jule::Ptr<_1a4028e63_Data> _field_Data;
	

	inline bool operator==(_1a402a0da_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a402a0da_Value _other) { return !this->operator==(_other); }


};
struct _1a402ab8a_Eval {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Trait<_1a4079a1e_Lookup> _field_lookup;
	jule::Ptr<_1a4059e2d_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a3ebac4b_Var> _field_owner;
	jule::Ptr<_1a3e016ba_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1a402ab8a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a402ab8a_Eval _other) { return !this->operator==(_other); }


};
struct _1a40493b2_unaryEval {
	jule::Ptr<_1a402ab8a_Eval> _field_e;
	jule::Ptr<_1a4028e63_Data> _field_d;
	jule::Ptr<_1a3dd4a44_UnaryExpr> _field_u;
	

	inline bool operator==(_1a40493b2_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a40493b2_unaryEval _other) { return !this->operator==(_other); }


};
struct _1a404b34d_binaryEval {
	jule::Ptr<_1a402ab8a_Eval> _field_e;
	jule::Ptr<_1a4028e63_Data> _field_l;
	jule::Ptr<_1a4028e63_Data> _field_r;
	jule::Ptr<_1a3db8198_Token> _field_op;
	

	inline bool operator==(_1a404b34d_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a404b34d_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a4058547_InsGeneric {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_Constraint;
	


};
struct _1a405913b_TypeAlias {
	jule::Ptr<_1a3ddd674_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a4062100_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _field_Generics;
	


};
struct _1a4059e2d_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1a4059977_Kind> _field_Kind;
	

	inline bool operator==(_1a4059e2d_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a4059e2d_TypeKind _other) { return !this->operator==(_other); }


};
struct _1a4062100_TypeSymbol {
	jule::Ptr<_1a3dcd653_TypeDecl> _field_Decl;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Kind;
	

	inline bool operator==(_1a4062100_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a4062100_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1a4062a07_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1a4062a07_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a4062a07_Prim _other) { return !this->operator==(_other); }


};
struct _1a4066533_Sptr {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a4066533_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4066533_Sptr _other) { return !this->operator==(_other); }


};
struct _1a4067006_Slc {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a4067006_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4067006_Slc _other) { return !this->operator==(_other); }


};
struct _1a4067aea_Tuple {
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_Types;
	


};
struct _1a406869a_Map {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Key;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Val;
	

	inline bool operator==(_1a406869a_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a406869a_Map _other) { return !this->operator==(_other); }


};
struct _1a4069327_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a4059e2d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a4069327_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4069327_Arr _other) { return !this->operator==(_other); }


};
struct _1a4069cea_Ptr {
	jule::Ptr<_1a4059e2d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a4069cea_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4069cea_Ptr _other) { return !this->operator==(_other); }


};
struct _1a406aceb_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1a406aceb_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a406aceb_referencer _other) { return !this->operator==(_other); }


};
struct _1a406bcdb_typeChecker {
	jule::Ptr<_1a3e97dd2_Sema> _field_s;
	jule::Trait<_1a4079a1e_Lookup> _field_rootLookup;
	jule::Trait<_1a4079a1e_Lookup> _field_lookup;
	jule::Ptr<_1a406aceb_referencer> _field_referencer;
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _field_refers;
	jule::Ptr<_1a3db8198_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a405913b_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1a4074992_identTypeLookup {
	

	inline bool operator==(_1a4074992_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a4074992_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a49d5e19_FileInfo {
	jule::Ptr<_1a3dcb73e_Ast> _field_Ast;
	jule::Slice<_1c980bca3_Log> _field_Errors;
	


};
struct _1a4a2bb74_stmt {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1a4a2c515_scopeParser {
	jule::Ptr<_1a4a4a7ca_parser> _field_p;
	jule::Ptr<_1a3ddd674_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1a4a39e3a_exprBuilder {
	jule::Ptr<_1a4a4a7ca_parser> _field_p;
	

	inline bool operator==(_1a4a39e3a_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a4a39e3a_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a4a473cb_assignInfo {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_r;
	jule::Ptr<_1a3db8198_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1a4a4a7ca_parser {
	jule::Ptr<_1a3dcb73e_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a3dcca70_Directive>> _field_directives;
	jule::Slice<_1c980bca3_Log> _field_errors;
	jule::Ptr<_1a4a39e3a_exprBuilder> _field_ep;
	


};
struct _1a4a5c9a7_typeBuilder {
	jule::Ptr<_1a4a4a7ca_parser> _field_p;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1a4277117_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1a4277117_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1a4277117_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1a42785e1_directiveEval {
	jule::Slice<_1c980bca3_Log> _field_logs;
	jule::Ptr<_1a3dcca70_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a4a61add_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a4a66d02_OrderedDefines {
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Globals;
	


};
struct _1a4a67088_defineOrderer {
	

	inline bool operator==(_1a4a67088_defineOrderer _other) { return true; }

	inline bool operator!=(_1a4a67088_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a39bd7e8_liveTable {
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a3e0226a_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a3e276ad_Trait>> _field_traits;
	


};
struct _1a39c3501_scopeDeadCode {
	jule::Ptr<_1a39c3501_scopeDeadCode> _field_parent;
	jule::Ptr<_1a3e5627a_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e58b1d_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3e58ee7_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a39c3501_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a39c3501_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1a39c778b_exprDeadCode {
	jule::Ptr<_1a39c3501_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a39c778b_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a39c778b_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a4160d58_ExceptionalForwardingExprModel {
	jule::Ptr<_1a3e0864a_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1a4160d58_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a4160d58_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1a41611dd_SwapExprModel {
	jule::Ptr<_1a4028e63_Data> _field_Left;
	jule::Ptr<_1a4028e63_Data> _field_Right;
	

	inline bool operator==(_1a41611dd_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a41611dd_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1a41615b7_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1a41615b7_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1a41615b7_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1a416193b_RefExprModel {
	jule::Ptr<_1a3ebac4b_Var> _field_Var;
	

	inline bool operator==(_1a416193b_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1a416193b_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1a4161dae_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b289b651_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1a4161dae_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1a4161dae_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1a4162442_MutSlicingExprModel {
	jule::Ptr<_1a3db8198_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a4162442_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a4162442_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a416273e_UnsafeBinaryExprModel {
	jule::Ptr<_1a3e0666a_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1a416273e_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a416273e_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a4162ac4_UnsafeIndexingExprModel {
	jule::Ptr<_1a3e08eca_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1a4162ac4_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a4162ac4_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a4162e9d_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a3e08a24_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1a4162e9d_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a4162e9d_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a4163377_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1a4163377_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1a4163377_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a4163751_StrRuneIter {
	jule::Ptr<_1a4028e63_Data> _field_Expr;
	jule::Ptr<_1a3e580b2_RangeIter> _field_Base;
	

	inline bool operator==(_1a4163751_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a4163751_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1a4163a4d_UnsafeDerefExprModel {
	jule::Ptr<_1a3e06a44_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1a4163a4d_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a4163a4d_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1a4163d4a_UnsafeCastingExprModel {
	jule::Ptr<_1a3e07c98_CastingExprModel> _field_Base;
	

	inline bool operator==(_1a4163d4a_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a4163d4a_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a4164a2c_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1a4164a2c_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1a4164a2c_nilVar _other) { return !this->operator==(_other); }


};
struct _1a4164d6d_nils {
	jule::Slice<_1a4164a2c_nilVar> _field_vars;
	


};
struct _1a4167aeb_scopeOptimizer {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1a3e5627a_Scope> _field_scope;
	jule::Ptr<_1a417c5a0_data> _field_data;
	

	inline bool operator==(_1a4167aeb_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a4167aeb_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1a416e949_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a417c5a0_data> _field_data;
	

	inline bool operator==(_1a416e949_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a416e949_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a4179316_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1a4059e2d_TypeKind> _field_kind;
	

	inline bool operator==(_1a4179316_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a4179316_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1a4179657_dynamic {
	jule::Slice<_1a4179316_dynamicVar> _field_vars;
	


};
struct _1a417c5a0_data {
	jule::Ptr<_1a417de97_boundary> _field_boundary;
	jule::Ptr<_1a4164d6d_nils> _field_nils;
	jule::Ptr<_1a4179657_dynamic> _field_dynamic;
	

	inline bool operator==(_1a417c5a0_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1a417c5a0_data _other) { return !this->operator==(_other); }


};
struct _1a417db56_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1a417de97_boundary {
	jule::Slice<_1a417db56_boundaryVar> _field_vars;
	


};
struct _1a39ce8a3_Optimizer {
	jule::Ptr<_1a4a6456e_IR> _field_ir;
	

	inline bool operator==(_1a39ce8a3_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a39ce8a3_Optimizer _other) { return !this->operator==(_other); }


};
struct _1a3a07667_AnsiEscape {
	

	inline bool operator==(_1a3a07667_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a3a07667_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1a3a08bda_Logger {
	

	inline bool operator==(_1a3a08bda_Logger _other) { return true; }

	inline bool operator!=(_1a3a08bda_Logger _other) { return !this->operator==(_other); }


};
struct _1a4e7121c_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a4e7121c_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a4e7121c_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a4e718e3_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a4e718e3_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a4e718e3_Time _other) { return !this->operator==(_other); }


};
struct _1a4e5d4a1_scopeCoder {
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a4e5d4a1_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a4e5d4a1_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a427aa11_exprCoder {
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a427aa11_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a427aa11_exprCoder _other) { return !this->operator==(_other); }


};
struct _1a45a5500_TestCoder {
	jule::Ptr<_1a3e0226a_StructIns> _field_t;
	jule::Ptr<_1a3e143d1_Fn> _field_tmReset;
	jule::Ptr<_1a3e143d1_Fn> _field_tmFailed;
	jule::Ptr<_1a3e143d1_Fn> _field_tmSkipped;
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a45a5500_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a45a5500_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a45a835a_identCoder {
	

	inline bool operator==(_1a45a835a_identCoder _other) { return true; }

	inline bool operator!=(_1a45a835a_identCoder _other) { return !this->operator==(_other); }


};
struct _1a4e79335_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a4e79335_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a4e79335_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a4e7990c_traitHash {
	jule::Ptr<_1a3e276ad_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1a3e0226a_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a4e7990c_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a4e7990c_traitHash _other) { return !this->operator==(_other); }


};
struct _1a4e79cd6_traitCast {
	jule::Ptr<_1a3e276ad_Trait> _field_t1;
	jule::Ptr<_1a3e276ad_Trait> _field_t2;
	

	inline bool operator==(_1a4e79cd6_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a4e79cd6_traitCast _other) { return !this->operator==(_other); }


};
struct _1a4e8a555_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a4e8a555_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a4e8a555_customType _other) { return !this->operator==(_other); }


};
struct _1a4e8b15a_typeCoder {
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _field_oc;
	jule::Ptr<_1a4e9443d_resultCoder> _field_rc;
	

	inline bool operator==(_1a4e8b15a_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a4e8b15a_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a4e9443d_resultCoder {
	jule::Ptr<_1a4e8b15a_typeCoder> _field_tc;
	

	inline bool operator==(_1a4e9443d_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a4e9443d_resultCoder _other) { return !this->operator==(_other); }


};
struct _1a8b4e743_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1a8b4e743_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8b4e743_Flag _other) { return !this->operator==(_other); }


};struct _1a8b53093_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1a8b53093_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8b53093_Flag _other) { return !this->operator==(_other); }


};struct _1a8b5674a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1a8b5674a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8b5674a_Flag _other) { return !this->operator==(_other); }


};struct _1a8b59e46_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1a8b59e46_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8b59e46_Flag _other) { return !this->operator==(_other); }


};struct _1a8b5d5ed_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1a8b5d5ed_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a8b5d5ed_Flag _other) { return !this->operator==(_other); }


};
struct _1a500e95e_FlagSet {
	jule::Slice<jule::Trait<_1a500cd8b_CommonFlag>> _field_flags;
	


};
struct _1a5012423_argParser {
	_1a500e95e_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1a4e7ad4d_ObjectCoder {
	_1c9754d1c_StrBuilder _field_Buf;
	_1c9754d1c_StrBuilder _field_resultDecls;
	_1c9754d1c_StrBuilder _field_anyObj;
	jule::Ptr<_1a4a6456e_IR> _field_ir;
	_1a4e79335_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a4e7990c_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a4e79cd6_traitCast> _field_traitCastMap;
	jule::Ptr<_1a427aa11_exprCoder> _field_ec;
	jule::Ptr<_1a4e5d4a1_scopeCoder> _field_sc;
	jule::Ptr<_1a4e8b15a_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1a417c0a5_dataCheckpoint {
	_1a417de97_boundary _field_boundary;
	_1a4164d6d_nils _field_nils;
	_1a4179657_dynamic _field_dynamic;
	


};
struct _1a39bdc16_ObjectDeadCode {
	_1a39bd7e8_liveTable _field_live;
	jule::Ptr<_1a4a6456e_IR> _field_ir;
	


};
struct _1a4a6456e_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a3e7a986_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _field_Used;
	_1a4a66d02_OrderedDefines _field_Ordered;
	


};
struct _1a3e0226a_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a3dee4dc_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a4058547_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3e016ba_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _field_Refers;
	_1a3ded5c9_Operators _field_Operators;
	


};
struct _1c9034311_Cmd {
	_1c9088024_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4028e63_Data__jule_tuple_x_1a4028e63_Data {
	jule::Ptr<_1a4028e63_Data> __jule_result_arg0;
	jule::Ptr<_1a4028e63_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a4028e63_Data__jule_tuple_bool {
	jule::Ptr<_1a4028e63_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3dd2987_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3de5626_Case__jule_tuple_bool {
	jule::Ptr<_1a3de5626_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3de5626_Case__jule_tuple_x_1a3de447c_Else {
	jule::Slice<jule::Ptr<_1a3de5626_Case>> __jule_result_arg0;
	jule::Ptr<_1a3de447c_Else> __jule_result_arg1;
};
struct __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3ddc101_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a3ddc101_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a3dcd653_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a3dd1546_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log {
	jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1c980bca3_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4a6456e_IR__jule_tuple_s_1c980bca3_Log {
	jule::Ptr<_1a4a6456e_IR> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b14a08b6_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b14a08b6_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b14a08b6_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log {
	jule::Ptr<_1a4023aea_SymbolTable> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log {
	jule::Ptr<_1a3e7a986_Package> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log {
	jule::Ptr<_1a3dcb73e_Ast> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3db8198_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a3db8198_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> __jule_result_arg0;
	jule::Slice<_1c980bca3_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1c9754d1c_StrBuilder static__1c97550d6_New(jule::I64);
inline void _1c975d870_Write(_1c9754d1c_StrBuilder*, jule::Slice<jule::U8>);
inline void _1c975db28_WriteStr(_1c9754d1c_StrBuilder*, jule::Str);
inline void _1c975ddd1_WriteByte(_1c9754d1c_StrBuilder*, jule::U8);
inline jule::Str _1c975e420_Str(_1c9754d1c_StrBuilder*);
inline void _1c975e61d_Clear(_1c9754d1c_StrBuilder*);
inline jule::I64 _1c975e8a4_Len(_1c9754d1c_StrBuilder*);
inline jule::Slice<jule::U8> _1c975edc1_Buf(_1c9754d1c_StrBuilder*);
inline void _1c9760179_SetBuf(_1c9754d1c_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1c9760da0_index(_1c976091b_lazyBuff*, jule::I64);
inline void _1c9761158_append(_1c976091b_lazyBuff*, jule::U8);
inline jule::Str _1c97613de_string(_1c976091b_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>> static__1c9765305_Read(jule::Str);
inline jule::VoidExceptional static__1c9765536_Create(jule::Str);
inline jule::VoidExceptional static__1c9765767_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_20c07ab0a_File>> static__20c077b5c_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__20c077d8d_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _20c078322_Write(_20c07ab0a_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _20c078663_Read(_20c07ab0a_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_20c07ab0a_File> static__20c07b028_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_20c07ab0a_File>> static__20c07b2e2_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20c07b5ab_Read(jule::Str);
inline jule::VoidExceptional static__20c07b952_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _20c07c18e_Close(_20c07ab0a_File*);
inline jule::Exceptional<jule::Ptr<_20c07cbea_Status>> static__20c079884_Of(jule::Str);
inline jule::Bool _20c07d0c4_IsDir(_20c07cbea_Status*);
inline jule::Bool _20c07d35a_IsReg(_20c07cbea_Status*);
inline jule::U64 _20c07d5e1_Size(_20c07cbea_Status*);
inline jule::Bool _1b2880888_set(_1b2888e57_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1b2880bc9_floatBits(_1b2888e57_decimal*, _1b2875570_floatInfo*);
inline void _1b288930e_assign(_1b2888e57_decimal*, jule::U64);
inline void _1b28895b7_shift(_1b2888e57_decimal*, jule::I64);
inline void _1b2889870_roundDown(_1b2888e57_decimal*, jule::I64);
inline void _1b2889b28_roundUp(_1b2888e57_decimal*, jule::I64);
inline void _1b2889dd1_round(_1b2888e57_decimal*, jule::I64);
inline jule::U64 _1b288a167_roundedInteger(_1b2888e57_decimal*);
inline jule::Ptr<_1b289b651_Const> static__1b289ba91_NewI64(jule::I64);
inline jule::Ptr<_1b289b651_Const> static__1b289bd5a_NewU64(jule::U64);
inline jule::Ptr<_1b289b651_Const> static__1b289c124_NewBool(jule::Bool);
inline jule::Ptr<_1b289b651_Const> static__1b289c3dd_NewStr(jule::Str);
inline jule::Ptr<_1b289b651_Const> static__1b289c6a7_NewF64(jule::F64);
inline jule::Ptr<_1b289b651_Const> static__1b289c8b6_NewNil(void);
inline jule::I64 _1b289d026_ReadI64(_1b289b651_Const*);
inline jule::U64 _1b289d2ac_ReadU64(_1b289b651_Const*);
inline jule::Bool _1b289d543_ReadBool(_1b289b651_Const*);
inline jule::Str _1b289d7c9_ReadStr(_1b289b651_Const*);
inline jule::F64 _1b289da60_ReadF64(_1b289b651_Const*);
inline jule::I64 _1b289dce6_AsI64(_1b289b651_Const*);
inline jule::U64 _1b289e07c_AsU64(_1b289b651_Const*);
inline jule::F64 _1b289e313_AsF64(_1b289b651_Const*);
inline void _1b289e5bb_SetI64(_1b289b651_Const*, jule::I64);
inline void _1b289e874_SetU64(_1b289b651_Const*, jule::U64);
inline void _1b289eb2c_SetBool(_1b289b651_Const*, jule::Bool);
inline void _1b289edd5_SetStr(_1b289b651_Const*, jule::Str);
inline void _1b28a018d_SetF64(_1b289b651_Const*, jule::F64);
inline jule::Bool _1b28a0622_IsI64(_1b289b651_Const*);
inline jule::Bool _1b28a08a8_IsU64(_1b289b651_Const*);
inline jule::Bool _1b28a0b3e_IsBool(_1b289b651_Const*);
inline jule::Bool _1b28a0dc5_IsStr(_1b289b651_Const*);
inline jule::Bool _1b28a115b_IsF64(_1b289b651_Const*);
inline jule::Bool _1b28a13e2_IsNil(_1b289b651_Const*);
inline jule::Bool _1b28a1a74_And(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a1db5_Or(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a335b_Add(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a369c_Sub(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a39dd_Mul(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a3d2e_Div(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a4170_Mod(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a44b1_BitwiseAnd(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a4802_BitwiseOr(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a4b43_Xor(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a4e84_Lshift(_1b289b651_Const*, _1b289b651_Const);
inline jule::Bool _1b28a52c5_Rshift(_1b289b651_Const*, _1b289b651_Const);
inline jule::U8 _1a3db851c_Prec(_1a3db8198_Token*);
inline void _1a3dbdd4c_Fill(_1a3dbd92e_File*, jule::Slice<jule::U8>);
inline jule::Str _1a3dbe0d3_Dir(_1a3dbd92e_File*);
inline jule::Str _1a3dbe369_Name(_1a3dbd92e_File*);
inline jule::Str _1a3dbe941_GetRow(_1a3dbd92e_File*, jule::I64);
inline void _1a3dc70ec_pushErr(_1a3dc6a69_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3dc765d_lex(_1a3dc6a69_lex*);
inline jule::Str _1a3dc799e_id(_1a3dc6a69_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1a3dc7c35_resume(_1a3dc6a69_lex*);
inline void _1a3dc7edd_lexLineComment(_1a3dc6a69_lex*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a3dc8296_lexRangeComment(_1a3dc6a69_lex*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Str _1a3dc85d7_num(_1a3dc6a69_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a3dc8928_escapeSeq(_1a3dc6a69_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a3dc8d24_getRune(_1a3dc6a69_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1a3dc9165_lexRune(_1a3dc6a69_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a3dc93eb_lexStr(_1a3dc6a69_lex*);
inline void _1a3dc9880_newLine(_1a3dc6a69_lex*);
inline jule::Bool _1a3dc9de1_isOp(_1a3dc6a69_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3dca2dc_lexBasicOps(_1a3dc6a69_lex*, jule::Slice<jule::U8>, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3dca6d8_lexId(_1a3dc6a69_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3dcaad4_lexNum(_1a3dc6a69_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a3db8198_Token> _1a3dcad6a_token(_1a3dc6a69_lex*);
inline jule::Bool _1a3dd04e0_IsUnsafe(_1a3dd017c_PtrTypeDecl*);
inline jule::Bool _1a3dd0c82_AutoSized(_1a3dd091e_ArrTypeDecl*);
inline jule::Bool _1a3dd6a35_Unhandled(_1a3dd66b1_FnCallExpr*);
inline jule::Bool _1a3dd6cbb_Ignored(_1a3dd66b1_FnCallExpr*);
inline jule::Bool _1a3dde235_IsSelf(_1a3ddddb1_ParamDecl*);
inline jule::Bool _1a3de0676_IsAnon(_1a3de0313_FnDecl*);
inline jule::Bool _1a3de247a_IsInf(_1a3de2117_Iter*);
inline jule::Bool _1a3de2ca5_IsWhileNext(_1a3de2942_WhileKind*);
inline jule::Ptr<_1a3e016ba_FieldIns> _1a3deb96d_instance(jule::Ptr<_1a3deb5b6_Field>);
inline jule::Ptr<_1a3e0226a_StructIns> _1a3dee94e_instance(jule::Ptr<_1a3dee4dc_Struct>);
inline jule::Ptr<_1a3e0226a_StructIns> _1a3deec5c_appendInstance(_1a3dee4dc_Struct*, jule::Ptr<_1a3e0226a_StructIns>*);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e00158_FindMethod(_1a3dee4dc_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e00499_FindStatic(_1a3dee4dc_Struct*, jule::Str);
inline jule::Ptr<_1a3deb5b6_Field> _1a3e007da_FindField(_1a3dee4dc_Struct*, jule::Str);
inline jule::Bool _1a3e00b2b_IsImplements(_1a3dee4dc_Struct*, jule::Ptr<_1a3e276ad_Trait>);
inline jule::Bool _1a3e00e6c_IsUses(_1a3dee4dc_Struct*, jule::Ptr<_1a3dee4dc_Struct>);
inline jule::Ptr<_1a3e16339_ParamIns> _1a3e12c92_instance(jule::Ptr<_1a3e1290c_Param>);
inline jule::Bool _1a3e13028_IsSelf(_1a3e1290c_Param*);
inline jule::Bool _1a3e132ae_IsRef(_1a3e1290c_Param*);
inline jule::Bool _1a3e14854_IsVoid(_1a3e143d1_Fn*);
inline jule::Bool _1a3e14ada_IsMethod(_1a3e143d1_Fn*);
inline jule::Bool _1a3e14d71_IsEntryPoint(_1a3e143d1_Fn*);
inline jule::Bool _1a3e15107_IsInit(_1a3e143d1_Fn*);
inline jule::Bool _1a3e1538d_IsAnon(_1a3e143d1_Fn*);
inline jule::Bool _1a3e15624_AnyVar(_1a3e143d1_Fn*);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3e158aa_instanceForce(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3e15b41_instance(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3e15e4e_appendInstance(_1a3e143d1_Fn*, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Str _1a3e1669c_Str(_1a3e16339_ParamIns*);
inline jule::Str _1a3e17626_Str(_1a3e172d5_FnIns*);
inline jule::Bool _1a3e17967_Equal(jule::Ptr<_1a3e172d5_FnIns>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a3e17e0c_EqualFn(jule::Ptr<_1a3e172d5_FnIns>, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Bool _1a3e1824d_equalTrait(jule::Ptr<_1a3e172d5_FnIns>, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _1a3e184d4_Types(_1a3e172d5_FnIns*);
inline jule::Bool _1a3e1876a_IsBuiltin(_1a3e172d5_FnIns*);
inline jule::Bool _1a3e18a01_IsAnon(_1a3e172d5_FnIns*);
inline jule::Bool _1a3e18d42_Same(_1a3e172d5_FnIns*, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Str _1a3e19183_GetKindStr(_1a3e172d5_FnIns*, jule::Bool);
inline jule::Ptr<_1a3e1a4a3_ReferenceStack> static__1a3e1a7a0_new(void);
inline jule::I64 _1a3e1ab9b_Len(_1a3e1a4a3_ReferenceStack*);
inline jule::Any _1a3e1aedc_At(_1a3e1a4a3_ReferenceStack*, jule::I64);
inline void _1a3e1b295_Push(_1a3e1a4a3_ReferenceStack*, jule::Any);
inline jule::Bool _1a77ec6bc_Exist(_1a3e1a4a3_ReferenceStack*, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Bool _1a781246d_Exist(_1a3e1a4a3_ReferenceStack*, jule::Ptr<_1a3ebac4b_Var>);
inline jule::Bool _1a78cc02c_Exist(_1a3e1a4a3_ReferenceStack*, jule::Ptr<_1a3e0226a_StructIns>);
inline jule::Bool _1a79b04d9_Exist(_1a3e1a4a3_ReferenceStack*, jule::Ptr<_1a3e276ad_Trait>);
inline void _1a3e21e27_pushErr(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3db8198_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e226a8_pushSuggestion(_1a3e21476_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e22aa4_checkCppUseDeclPath(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Str*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e22db2_buildCppHeaderImport(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23203_buildStdImport(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23544_buildIdentImport(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23885_buildImport(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Bool _1a3e23bc6_checkDuplicateUseDecl(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline void _1a3e24039_implImportSelections(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3e77a60_ImportInfo>*, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Str _1a3e2437a_getAsLinkPath(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Str);
inline void _1a3e24798_pushCycleError(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3e21476_symbolBuilder>*, jule::Str, _1c9754d1c_StrBuilder*);
inline void _1a3e24bb6_pushCrossCycleError(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3e21476_symbolBuilder>*, jule::Ptr<_1a3e77a60_ImportInfo>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3e250b2_checkImportCycles(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3e77a60_ImportInfo>, jule::Ptr<_1a3de6759_UseDecl>*);
inline void _1a3e254d0_checkPackageAccessibility(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1a3e258cb_importPackage(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3e77a60_ImportInfo>*, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e25c1c_importUseDecl(jule::Ptr<_1a3e21476_symbolBuilder>, jule::Ptr<_1a3de6759_UseDecl>*);
inline void _1a3e25e1a_importUseDecls(jule::Ptr<_1a3e21476_symbolBuilder>);
inline void _1a3e261c3_appendNode(_1a3e21476_symbolBuilder*, _1a3dcc652_Node*);
inline void _1a3e263c1_appendNodes(_1a3e21476_symbolBuilder*);
inline void _1a3e26679_pushDirectivePass(_1a3e21476_symbolBuilder*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e26877_appendTopDirectives(_1a3e21476_symbolBuilder*);
inline void _1a3e26a75_build(jule::Ptr<_1a3e21476_symbolBuilder>);
inline jule::Str _1a3e27a76_Str(_1a3e276ad_Trait*);
inline jule::Bool _1a3e27db7_Equal(jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e2835c_FindMethod(_1a3e276ad_Trait*, jule::Str);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e289de_findMethodInherit(_1a3e276ad_Trait*, jule::Str*);
inline jule::Bool _1a3e29704_AutoExpr(_1a3e2934c_EnumItem*);
inline jule::Str _1a3e2a23d_Str(_1a3e29db9_Enum*);
inline jule::Bool _1a3e2a57e_Equal(jule::Ptr<_1a3e29db9_Enum>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a3e2934c_EnumItem> _1a3e2a9ad_FindItem(_1a3e29db9_Enum*, jule::Str);
inline jule::Str _1a3e2b915_Str(_1a3e2b5c4_TypeEnum*);
inline jule::Bool _1a3e2bc56_Equal(jule::Ptr<_1a3e2b5c4_TypeEnum>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a3e2aeec_TypeEnumItem> _1a3e2c185_FindItem(_1a3e2b5c4_TypeEnum*, jule::Str);
inline jule::Str _1a3e2eaa0_Str(_1a3e2e72b_comptimeRange*);
inline jule::Bool _1a3e2ede1_Equal(jule::Ptr<_1a3e2e72b_comptimeRange>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a3e305b7_Str(_1a3e301ee_comptimeStructField*);
inline jule::Bool _1a3e30908_Equal(jule::Ptr<_1a3e301ee_comptimeStructField>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e30e9c__Name(jule::Ptr<_1a3e301ee_comptimeStructField>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e31398__Type(jule::Ptr<_1a3e301ee_comptimeStructField>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e31794__Public(jule::Ptr<_1a3e301ee_comptimeStructField>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e31aa2_subIdent(jule::Ptr<_1a3e301ee_comptimeStructField>, jule::Str*);
inline jule::Str _1a3e32234_Str(_1a3e31db0_comptimeStructFields*);
inline jule::Bool _1a3e32575_Equal(jule::Ptr<_1a3e31db0_comptimeStructFields>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e329e8_ready(_1a3e31db0_comptimeStructFields*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e32e16_step(_1a3e31db0_comptimeStructFields*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e3319c_len(_1a3e31db0_comptimeStructFields*);
inline jule::Str _1a3e3382e_Str(_1a3e334aa_comptimeStatic*);
inline jule::Bool _1a3e33b70_Equal(jule::Ptr<_1a3e334aa_comptimeStatic>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e3429c__Name(jule::Ptr<_1a3e334aa_comptimeStatic>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e34698__Type(jule::Ptr<_1a3e334aa_comptimeStatic>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e34a94__Public(jule::Ptr<_1a3e334aa_comptimeStatic>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e34dd5_subIdent(jule::Ptr<_1a3e334aa_comptimeStatic>, jule::Str*);
inline jule::Str _1a3e354e0_Str(_1a3e3516b_comptimeStatics*);
inline jule::Bool _1a3e35831_Equal(jule::Ptr<_1a3e3516b_comptimeStatics>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e35ca4_ready(_1a3e3516b_comptimeStatics*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e361c2_step(_1a3e3516b_comptimeStatics*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e36458_len(_1a3e3516b_comptimeStatics*);
inline jule::Str _1a3e36bea_Str(_1a3e36766_comptimeEnumField*);
inline jule::Bool _1a3e3703b_Equal(jule::Ptr<_1a3e36766_comptimeEnumField>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e374ae__Name(jule::Ptr<_1a3e36766_comptimeEnumField>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e37800_subIdent(jule::Ptr<_1a3e36766_comptimeEnumField>, jule::Str*);
inline jule::Str _1a3e37e82_Str(_1a3e37b0d_comptimeEnumFields*);
inline jule::Bool _1a3e382c3_Equal(jule::Ptr<_1a3e37b0d_comptimeEnumFields>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e38746_ready(_1a3e37b0d_comptimeEnumFields*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e38b64_step(_1a3e37b0d_comptimeEnumFields*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e38dea_len(_1a3e37b0d_comptimeEnumFields*);
inline jule::Str _1a3e3957c_Str(_1a3e39208_comptimeParam*);
inline jule::Bool _1a3e398bd_Equal(jule::Ptr<_1a3e39208_comptimeParam>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e3a12c__Name(jule::Ptr<_1a3e39208_comptimeParam>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e3a528__Type(jule::Ptr<_1a3e39208_comptimeParam>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e3a924__Variadic(jule::Ptr<_1a3e39208_comptimeParam>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e3ad20__Reference(jule::Ptr<_1a3e39208_comptimeParam>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e3b161_subIdent(jule::Ptr<_1a3e39208_comptimeParam>, jule::Str*);
inline jule::Str _1a3e3b6d3_Str(_1a3e3b392_comptimeParams*);
inline jule::Bool _1a3e3ba24_Equal(jule::Ptr<_1a3e3b392_comptimeParams>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e3be97_ready(_1a3e3b392_comptimeParams*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e3c3b5_step(_1a3e3b392_comptimeParams*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e3c64b_len(_1a3e3b392_comptimeParams*);
inline jule::Str _1a3e3cccd_Str(_1a3e3c959_comptimeTypeInfos*);
inline jule::Bool _1a3e3d11e_Equal(jule::Ptr<_1a3e3c959_comptimeTypeInfos>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e3d592_ready(_1a3e3c959_comptimeTypeInfos*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e3d9b0_step(_1a3e3c959_comptimeTypeInfos*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e3dc46_len(_1a3e3c959_comptimeTypeInfos*);
inline jule::Str _1a3e3e3c8_Str(_1a3e3e054_comptimeTypeInfo*);
inline jule::Bool _1a3e3e719_Equal(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e3ed68__Str(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e40264__Kind(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e40660__Bits(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e40a5b__Elem(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e40e57__Size(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e41353__Key(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4174e__Value(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e41b4a__Fields(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e42046__Statics(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e42442__Public(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4283d__Binded(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e42c39__Ordered(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e43135__Comparable(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e43531__Mutable(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4392c__Types(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e43d28__Exceptional(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e44224__CanNil(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e44620__RC(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e44a1b__Result(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e44e17__Params(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e45258_subIdent(jule::Ptr<_1a3e3e054_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1a3e458da_Str(_1a3e45566_comptimeValue*);
inline jule::Bool _1a3e45c2b_Equal(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e4627b__Unwrap(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e46677__Type(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e46a73__Lvalue(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e46e6e__Mutable(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4736a__Const(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e47766__Field(jule::Ptr<_1a3e45566_comptimeValue>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e47aa7_subIdent(jule::Ptr<_1a3e45566_comptimeValue>, jule::Str*);
inline jule::Str _1a3e48239_Str(_1a3e47db5_comptimeFiles*);
inline jule::Bool _1a3e4857a_Equal(jule::Ptr<_1a3e47db5_comptimeFiles>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a3e489ed_ready(_1a3e47db5_comptimeFiles*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3e48e1b_step(_1a3e47db5_comptimeFiles*, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::I64 _1a3e491a2_len(_1a3e47db5_comptimeFiles*);
inline jule::Str _1a3e49a65_Str(_1a3e494b0_comptimeFile*);
inline jule::Bool _1a3e49da6_Equal(jule::Ptr<_1a3e494b0_comptimeFile>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4028e63_Data> _1a3e4a2b3__Path(jule::Ptr<_1a3e494b0_comptimeFile>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4a6ae__Name(jule::Ptr<_1a3e494b0_comptimeFile>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4aaaa__Dir(jule::Ptr<_1a3e494b0_comptimeFile>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4adeb_subIdent(jule::Ptr<_1a3e494b0_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)> _1a3e4ddbb_readyFn(jule::Ptr<_1a3e4d9c0_constraintChecker>);
inline jule::Bool _1a3e4e152_readyFi(jule::Ptr<_1a3e4d9c0_constraintChecker>);
inline jule::Bool _1a3e4e3d8_readySi(jule::Ptr<_1a3e4d9c0_constraintChecker>);
inline jule::Bool _1a3e4e66e_ready(jule::Ptr<_1a3e4d9c0_constraintChecker>);
inline jule::Bool _1a3e4e905_check(jule::Ptr<_1a3e4d9c0_constraintChecker>);
inline jule::Bool _1a3e511dc_IsTraitImpl(_1a3e50d24_Impl*);
inline jule::Bool _1a3e51473_IsStructImpl(_1a3e50d24_Impl*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e5da24_SelectPackage(_1a3e5d57e_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e5de20_FindVar(_1a3e5d57e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e5e31b_FindTypeAlias(_1a3e5d57e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e5e717_FindStruct(_1a3e5d57e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e5eb13_FindFn(_1a3e5d57e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e5ee54_FindTrait(_1a3e5d57e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e60295_FindEnum(_1a3e5d57e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e605d6_FindTypeEnum(_1a3e5d57e_scopeChecker*, jule::Str);
inline jule::Bool _1a3e60938_isUnsafe(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Bool _1a3e60bbe_isRoot(_1a3e5d57e_scopeChecker*);
inline void _1a3e60dbc_stop(_1a3e5d57e_scopeChecker*);
inline jule::Bool _1a3e61153_stopped(_1a3e5d57e_scopeChecker*);
inline jule::Bool _1a3e613d9_isDeferred(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e61670_getRoot(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e61906_getHardRoot(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Ptr<_1a3e58b1d_Label> _1a3e61c47_findLabel(_1a3e5d57e_scopeChecker*, jule::Str*);
inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e62088_findLabelScope(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Str*);
inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e623c9_findLabelAll(_1a3e5d57e_scopeChecker*, jule::Str*);
inline jule::Bool _1a3e627c5_isDuplicatedIdent(_1a3e5d57e_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1a3e62a7d_checkVarDecl(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de14bd_VarDecl>);
inline void _1a3e62d36_checkTypeAlias(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a405913b_TypeAlias>*);
inline void _1a3e630de_checkTypeAliasDecl(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de5170_TypeAliasDecl>);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e63375_getChild(_1a3e5d57e_scopeChecker*);
inline void _1a3e63793_checkChildSsc(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddd674_ScopeTree>*, jule::Ptr<_1a3e5627a_Scope>*, jule::Ptr<_1a3e5d57e_scopeChecker>*);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e63b8e_checkChildSc(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddd674_ScopeTree>*, jule::Ptr<_1a3e5d57e_scopeChecker>*);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e63ed0_checkChild(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddd674_ScopeTree>*);
inline void _1a3e64288_checkAnonScope(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddd674_ScopeTree>);
inline void _1a3e645eb_processErrorCall(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a3e648a4_checkExpr(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3dd2987_Expr>);
inline jule::Ptr<_1a3e56698_If> _1a3e64be5_checkIf(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de40a3_If>);
inline jule::Ptr<_1a3e56995_Else> _1a3e65036_checkElse(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de447c_Else>);
inline void _1a3e652de_checkConditional(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de4933_Conditional>);
inline void _1a3e657b7_checkIterScopeSsc(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3ddd674_ScopeTree>, jule::Ptr<_1a3e5627a_Scope>*, jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e65c6d_checkIterScopeSc(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3ddd674_ScopeTree>, jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e66169_checkIterScope(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a3ddd674_ScopeTree>*);
inline void _1a3e66422_checkInfIter(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de2117_Iter>*);
inline void _1a3e666ca_checkWhileIter(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de2117_Iter>*);
inline void _1a3e66ae8_checkComptimeRangeIter(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de2117_Iter>*, jule::Ptr<_1a3e580b2_RangeIter>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a3e66da1_checkRangeIter(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de2117_Iter>*);
inline void _1a3e67159_checkIter(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de2117_Iter>);
inline jule::Bool _1a3e6749a_checkValidContLabel(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Uintptr);
inline jule::Bool _1a3e677db_checkValidBreakLabel(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1a3e58447_ContSt> _1a3e67b2c_checkContValidScope(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de3aec_ContSt>);
inline void _1a3e67dd5_checkCont(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de3aec_ContSt>);
inline void _1a3e6818d_checkLabel(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddac37_LabelSt>);
inline void _1a3e68446_pushGoto(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddb111_GotoSt>);
inline void _1a3e686ee_checkPostfix(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddc101_AssignSt>);
inline jule::Bool _1a3e68a40_isNewAssignIdent(_1a3e5d57e_scopeChecker*, jule::Str);
inline void _1a3e68ce8_removeInteriorMutRisk(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a3e6929e_checkStructureAssignOp(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3ddc101_AssignSt>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a3e69557_checkSingleAssign(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddc101_AssignSt>*);
inline void _1a3e69ada_processEndPartOfMultiAssign(_1a3e5d57e_scopeChecker*, jule::Ptr<_1a3e59c51_MultiAssign>*, jule::Ptr<_1a3ddc101_AssignSt>*, jule::Ptr<_1a3ddba6d_AssignLeft>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a3e69d93_checkMultiAssign(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddc101_AssignSt>*);
inline void _1a3e6a14b_checkAssignSt(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddc101_AssignSt>);
inline jule::Ptr<_1a3e5627a_Scope> _1a3e6a547_checkCaseScope(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e5add9_Case>*, jule::Ptr<_1a3ddd674_ScopeTree>*);
inline jule::Ptr<_1a3e5add9_Case> _1a3e6aaa8_checkCase(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e5a3b1_Match>, jule::I64, jule::Ptr<_1a3de5626_Case>, jule::Ptr<_1a4028e63_Data>);
inline void _1a3e6aec6_checkCases(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de5e40_MatchCase>*, jule::Ptr<_1a3e5a3b1_Match>, jule::Ptr<_1a4028e63_Data>);
inline jule::Ptr<_1a3e5add9_Case> _1a3e6b3c2_checkDefault(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e5a3b1_Match>, jule::Ptr<_1a3de447c_Else>);
inline void _1a3e6b735_checkComptimePanic(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3db8198_Token>, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a3e6ba98_processConstMatch(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3e5a3b1_Match>*, jule::Ptr<_1a3de5e40_MatchCase>*);
inline void _1a3e6bd51_checkTypeMatch(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de5e40_MatchCase>*);
inline void _1a3e6c109_checkCommonMatch(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de5e40_MatchCase>*);
inline void _1a3e6c3b2_checkMatch(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de5e40_MatchCase>);
inline void _1a3e6c66a_checkFall(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddb40d_FallSt>);
inline jule::Ptr<_1a3e58821_BreakSt> _1a3e6c9ab_checkBreakWithLabel(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de3723_BreakSt>);
inline jule::Ptr<_1a3e58821_BreakSt> _1a3e6ccec_checkPlainBreak(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de3723_BreakSt>);
inline void _1a3e6d0a5_checkBreak(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de3723_BreakSt>);
inline void _1a3e6d35d_checkRet(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3de1897_RetSt>);
inline void _1a3e6d616_checkUseExpr(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3dd335b_UseExpr>);
inline void _1a3e6d8be_checkNode(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Any*);
inline void _1a3e6dabc_checkResult(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline void _1a3e6dcba_checkTree(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline void _1a3e6e12d_checkGoto(_1a3e5d57e_scopeChecker*, jule::Ptr<_1a3e5c66b_scopeGoto>*, jule::Ptr<_1a3e5c0d8_scopeLabel>*);
inline void _1a3e6e32b_checkGotos(_1a3e5d57e_scopeChecker*);
inline void _1a3e6e529_checkLabels(_1a3e5d57e_scopeChecker*);
inline void _1a3e6e727_checkVars(_1a3e5d57e_scopeChecker*);
inline void _1a3e6e925_checkAliases(_1a3e5d57e_scopeChecker*);
inline void _1a3e6ec88_check(jule::Ptr<_1a3e5d57e_scopeChecker>, jule::Ptr<_1a3ddd674_ScopeTree>*, jule::Ptr<_1a3e5627a_Scope>*);
inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e7001e_newChildChecker(jule::Ptr<_1a3e5d57e_scopeChecker>);
inline void _1a3e719c1_checkCdef(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e71c79_checkTypedef(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e72032_checkNamespace(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e722da_checkDeprecated(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e72593_checkTest(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e7284b_checkDirective(_1a3e715b4_directiveChecker*, jule::Ptr<_1a3dcca70_Directive>*);
inline void _1a3e72a49_check(_1a3e715b4_directiveChecker*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e78049_SelectPackage(_1a3e77a60_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e78445_FindVar(_1a3e77a60_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e78841_FindTypeAlias(_1a3e77a60_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e78c3c_FindStruct(_1a3e77a60_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e79138_FindFn(_1a3e77a60_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e79479_FindTrait(_1a3e77a60_ImportInfo*, jule::Str);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e797ba_FindEnum(_1a3e77a60_ImportInfo*, jule::Str);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e79b0b_FindTypeEnum(_1a3e77a60_ImportInfo*, jule::Str);
inline jule::Bool _1a3e7a0a1_isLookupable(_1a3e77a60_ImportInfo*, jule::Str*);
inline jule::Bool _1a3e7a3e2_existIdent(_1a3e77a60_ImportInfo*, jule::Str);
inline jule::Bool _1a3e7a678_isAccessibleViaSelection(_1a3e77a60_ImportInfo*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e7ae2b_SelectPackage(_1a3e7a986_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e7b327_FindVar(_1a3e7a986_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e7b723_FindTypeAlias(_1a3e7a986_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e7bb1e_FindStruct(_1a3e7a986_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e7c01a_FindFn(_1a3e7a986_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e7c35b_FindTrait(_1a3e7a986_Package*, jule::Str);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e7c69c_FindEnum(_1a3e7a986_Package*, jule::Str);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e7c9dd_FindTypeEnum(_1a3e7a986_Package*, jule::Str);
inline jule::Ptr<_1a3e3e054_comptimeTypeInfo> _1a3e9771c_pushComptimeTypeInfo(_1a3e972cc_commonSemaMeta*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e98377_SelectPackage(_1a3e97dd2_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e98773_FindVar(_1a3e97dd2_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e98b6e_FindTypeAlias(_1a3e97dd2_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e9906a_FindStruct(_1a3e97dd2_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e99466_FindFn(_1a3e97dd2_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e997a7_FindTrait(_1a3e97dd2_Sema*, jule::Str);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e99ae8_FindEnum(_1a3e97dd2_Sema*, jule::Str);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e99e39_FindTypeEnum(_1a3e97dd2_Sema*, jule::Str);
inline jule::Bool _1a3e9a346_isFlag(_1a3e97dd2_Sema*, jule::I64);
inline void _1a3e9a5ee_setCurrentFile(_1a3e97dd2_Sema*, jule::Ptr<_1a4023aea_SymbolTable>);
inline void _1a3e9aa1c_pushErr(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a3e9ad80_pushSuggestion(_1a3e97dd2_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e9b27b_isAccessibleDefine(_1a3e97dd2_Sema*, jule::Bool, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3e9b732_isDuplicatedIdent(_1a3e97dd2_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1a3e9ba95_checkDirectives(jule::Ptr<_1a3e97dd2_Sema>, jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Any);
inline jule::Bool _1a3e9c04b_checkGenericQuantity(_1a3e97dd2_Sema*, jule::I64, jule::I64, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3e9c447_isDuplicatedImportSelection(_1a3e97dd2_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1a3e9c843_getImportDef(_1a3e97dd2_Sema*, jule::Str*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline jule::Bool _1a736a191_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::Bool _1a736e492_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a405913b_TypeAlias>*);
inline jule::Bool _1a737374e_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Bool _1a7377cc5_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a737c082_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e29db9_Enum>*);
inline jule::Bool _1a738133e_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e2b5c4_TypeEnum>*);
inline jule::Bool _1a73855eb_checkImportSelection(_1a3e97dd2_Sema*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3e9d080_checkImportSelectedSelections(_1a3e97dd2_Sema*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline jule::Bool _1a7389dc5_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a738b05d_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a738d7ad_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a7390ea8_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a739364d_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e276ad_Trait>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a7395dc0_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e29db9_Enum>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a7398576_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e2b5c4_TypeEnum>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3e9d7bc_checkImportAllSelections(_1a3e97dd2_Sema*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline jule::Bool _1a3e9db0d_checkImportSelections(_1a3e97dd2_Sema*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline jule::Bool _1a3e9de4e_isUseAliasDuplication(_1a3e97dd2_Sema*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline jule::Bool _1a3e9e290_checkImport(_1a3e97dd2_Sema*, jule::Ptr<_1a3e77a60_ImportInfo>*);
inline void _1a3e9e48d_checkImports(_1a3e97dd2_Sema*);
inline void _1a3e9e68b_implFileImpls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3e9e889_implImpls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3e9ea87_checkEnums(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3e9ec85_checkFileInherits(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3e9ee83_checkInherits(jule::Ptr<_1a3e97dd2_Sema>);
inline _1a406bcdb_typeChecker _1a3ea0439_typeChecker(jule::Ptr<_1a3e97dd2_Sema>, jule::Trait<_1a4079a1e_Lookup>, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>, jule::Ptr<_1a406aceb_referencer>);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea099a_buildTypeWithRefers(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dcd653_TypeDecl>*, jule::Trait<_1a4079a1e_Lookup>, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>, jule::Ptr<_1a406aceb_referencer>);
inline jule::Bool _1a3ea100b_checkTypeWithRefers(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4062100_TypeSymbol>*, jule::Trait<_1a4079a1e_Lookup>, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>, jule::Ptr<_1a406aceb_referencer>);
inline jule::Ptr<_1a3e4d9c0_constraintChecker> _1a3ea1292_constraintChecker(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a3ea168d_checkType(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4062100_TypeSymbol>*, jule::Trait<_1a4079a1e_Lookup>);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea1b44_buildTypeWithGenerics(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dcd653_TypeDecl>*, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>, jule::Ptr<_1a3e1a4a3_ReferenceStack>);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea22c6_selectType(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dcd653_TypeDecl>*);
inline jule::Ptr<_1a402ab8a_Eval> _1a3ea277c_evalpd(jule::Ptr<_1a3e97dd2_Sema>, jule::Trait<_1a4079a1e_Lookup>, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a3ebac4b_Var>);
inline jule::Ptr<_1a402ab8a_Eval> _1a3ea2b78_evalp(jule::Ptr<_1a3e97dd2_Sema>, jule::Trait<_1a4079a1e_Lookup>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a402ab8a_Eval> _1a3ea2eb9_eval(jule::Ptr<_1a3e97dd2_Sema>, jule::Trait<_1a4079a1e_Lookup>);
inline jule::Bool _1a3ea352a_checkAssignType(jule::Ptr<_1a3e97dd2_Sema>, jule::Bool, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3ea39d1__checkTypeCompatibility(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3ea3e87_checkTypeCompatibility(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a3ea43a5_pushCompatiblityError(_1a3e97dd2_Sema*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3ea485b_checkTypeCompatibility1(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea4d12_buildNonGenericTypeKind(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dcd653_TypeDecl>*, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>*, jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>*);
inline jule::Bool _1a3ea520d_buildFnNonGenericTypeKinds(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>*);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3ea554e_getTraitCheckFnKind(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3ea5a05_checkConstraintsFn(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Bool _1a3ea5eab_checkConstraintsStruct(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e0226a_StructIns>);
inline jule::Bool _1a3ea63a7_fnEnvironment(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)>);
inline void _1a3ea6660_checkFnParamKind(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e16339_ParamIns>*);
inline jule::Bool _1a3ea69a1_reloadFnInsTypes(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Bool _1a3ea6e57_checkRefValidityForInitExpr(jule::Ptr<_1a3e97dd2_Sema>, jule::Bool, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3ea7298_isMutRiskyStruct(_1a3e97dd2_Sema*, jule::Ptr<_1a3e0226a_StructIns>*);
inline jule::Bool _1a3ea78b4_checkValidityForInitExpr(jule::Ptr<_1a3e97dd2_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a3ea7cb0_checkTypeAliasDeclKind(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a405913b_TypeAlias>*, jule::Trait<_1a4079a1e_Lookup>);
inline void _1a3ea8123_checkTypeAliasDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a405913b_TypeAlias>*, jule::Trait<_1a4079a1e_Lookup>);
inline void _1a3ea83cb_checkTypeAliasDeclDup(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a405913b_TypeAlias>*);
inline jule::Bool _1a3ea8662_checkTypeAliasDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a744b690_checkEnumItemsDup(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>>);
inline void _1a74589aa_checkEnumItemsDup(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>>);
inline void _1a3ea8bc3_checkEnumItemsStr(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e29db9_Enum>*);
inline void _1a742c0bb_checkEnumItemInt(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3e29db9_Enum>*, jule::Ptr<_1a4062a07_Prim>*, jule::Ptr<_1a3e2934c_EnumItem>*, jule::U64*);
inline void _1a743c175_checkEnumItemInt(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3e29db9_Enum>*, jule::Ptr<_1a4062a07_Prim>*, jule::Ptr<_1a3e2934c_EnumItem>*, jule::I64*);
inline void _1a742824e_checkEnumItemsInt1(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4062a07_Prim>*, jule::Ptr<_1a3e29db9_Enum>*);
inline void _1a74387ae_checkEnumItemsInt1(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a4062a07_Prim>*, jule::Ptr<_1a3e29db9_Enum>*);
inline void _1a3ea9872_checkEnumItemsInt(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e29db9_Enum>*);
inline void _1a3ea9b2a_checkEnumDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e29db9_Enum>*);
inline void _1a3ea9dd3_checkTypeEnumDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e2b5c4_TypeEnum>*);
inline jule::Bool _1a3eaa169_checkEnumDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a3eaa400_checkTypeEnumDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a3eaa741_checkDeclGenerics(_1a3e97dd2_Sema*, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>*);
inline jule::Bool _1a3eaaa82_checkFnDeclParamsDup(_1a3e97dd2_Sema*, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3eaadc3_checkFnDeclResultDup(_1a3e97dd2_Sema*, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3eab214_checkFnVariadicParam(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eab4bc_checkFnDeclPrototype(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3eab973_catchTraitInheritCycle(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3e276ad_Trait>, _1c9754d1c_StrBuilder*);
inline jule::Bool _1a3eabcb4__checkTraitDeclInherits(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a3eac06c_checkTraitDeclInherits(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a3eac325_checkTraitDeclMethod(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eac5cd_checkTraitDeclMethods(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a3eac886_checkTraitDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a3eacb1c_checkTraitDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a3ead018_checkTraitImplMethods(_1a3e97dd2_Sema*, jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a3e50d24_Impl>*);
inline jule::Bool _1a3ead414_implToStruct(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*, jule::Ptr<_1a3e50d24_Impl>*);
inline void _1a3ead6bc_implTrait(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e50d24_Impl>*);
inline void _1a3ead975_implStruct(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e50d24_Impl>*);
inline void _1a3eadc2d_implImpl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e50d24_Impl>*);
inline void _1a3eae091_checkVarDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3ebac4b_Var>*, jule::Trait<_1a4079a1e_Lookup>);
inline void _1a3eae349_checkGlobalVarDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::Bool _1a3eae5d0_checkGlobalDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a3eae9cb_checkStructTraitImpl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a3eaed1c_checkStructImpls(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Bool _1a3eb015d_checkStructFields(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a3eb0416_checkStructDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Bool _1a3eb069c_checkStructDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb0955_checkAnonFuncDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eb0c0d_checkFuncDecl(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a3eb104e_checkFuncDeclsBy(jule::Ptr<_1a3e97dd2_Sema>, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>*);
inline jule::Bool _1a3eb12d5_checkFuncDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb1703_pushCycleError(_1a3e97dd2_Sema*, jule::Str*, jule::Str*, _1c9754d1c_StrBuilder*);
inline void _1a3eb1da7_checkPackageDecls(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb221a_checkDataForTypeInference(_1a3e97dd2_Sema*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a3eb24c3_checkVarValue(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a3eb2836_evalVarValue(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3ebac4b_Var>*, jule::Trait<_1a4079a1e_Lookup>);
inline void _1a3eb2b99_checkVar(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3ebac4b_Var>*, jule::Trait<_1a4079a1e_Lookup>);
inline void _1a3eb2d97_checkGlobals(jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3eb3293_readyToCheckFn(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eb3606_checkTypeMethod(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Ptr<_1a3e172d5_FnIns> _1a3eb3aac_checkStructInsOp(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3e143d1_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1a3e143d1_Fn>)>);
inline jule::Bool _1a3eb3ea8_checkStructEnv(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3eb43a4_precheckStructIns(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a3eb465c_checkStructIns(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a3eb4915_checkTypeStruct(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a3eb4b13_checkStructTypes(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb4dbb_checkStructInsOperators(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e0226a_StructIns>);
inline void _1a3eb5174_precheckStructType(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a3eb5372_precheckStructTypes(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb562a_checkRets(_1a3e97dd2_Sema*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a3eb598d_checkFnInsSc(_1a3e97dd2_Sema*, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3e5d57e_scopeChecker>*);
inline void _1a3eb5d01_checkFnInsCaller(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a3eb60a9_checkFnIns(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a3eb6362_checkFunc(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eb661a_checkTestFn(_1a3e97dd2_Sema*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a3eb68c3_precheckFunc(jule::Ptr<_1a3e97dd2_Sema>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a3eb6ac1_precheckFuncs(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb6cbe_checkFuncs(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb6ebc_checkPackageTypes(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb71ba_setFileSemaFields(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb73b8_setSemaFields(jule::Ptr<_1a3e97dd2_Sema>);
inline void _1a3eb7671_check(jule::Ptr<_1a3e97dd2_Sema>, jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*);
inline _1a3eb7aa0_missingRetChecker static__1a3eb7e68_new(void);
inline jule::Bool _1a3eb8276_checkConditional(_1a3eb7aa0_missingRetChecker*, jule::Ptr<_1a3e56db3_Conditional>);
inline jule::Bool _1a3eb85b7_checkMatch(_1a3eb7aa0_missingRetChecker*, jule::Ptr<_1a3e5a3b1_Match>);
inline jule::Bool _1a3eb8908_checkInfIter(_1a3eb7aa0_missingRetChecker*, jule::Ptr<_1a3e571b0_InfIter>);
inline jule::Bool _1a3eb8c49_checkScope(_1a3eb7aa0_missingRetChecker*, jule::Ptr<_1a3e5627a_Scope>);
inline jule::Bool _1a3eb908a_check(_1a3eb7aa0_missingRetChecker*, jule::Ptr<_1a3e5627a_Scope>);
inline jule::Bool _1a3ebb125_IsInitialized(_1a3ebac4b_Var*);
inline jule::Bool _1a3ebb3ab_IsTypeInferred(_1a3ebac4b_Var*);
inline jule::Bool _1a3ebb642_untypedConstant(_1a3ebac4b_Var*);
inline jule::Bool static__1a3ebc1e2_Dispose(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebc4ab_Str(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebc830_logical(jule::Ptr<_1a3e143d1_Fn>*, jule::Str);
inline jule::Bool static__1a3ebcae9_Eq(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebcdb3_Gt(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebd17c_GtEq(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebd446_Lt(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebd710_LtEq(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebda84_result(jule::Ptr<_1a3e143d1_Fn>*, jule::Str);
inline jule::Bool static__1a3ebdd4d_Shl(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebe117_Shr(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebe3d1_Add(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebe69a_Sub(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebe964_Div(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebec2d_Mul(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ebeee7_Mod(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec02b1_BitAnd(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec057a_BitOr(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec0844_BitXor(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec0bb8_unary(jule::Ptr<_1a3e143d1_Fn>*, jule::Str);
inline jule::Bool static__1a3ec0e82_Neg(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec124b_Pos(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec1515_BitNot(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec1889_assign(jule::Ptr<_1a3e143d1_Fn>*, jule::Str);
inline jule::Bool static__1a3ec1b53_AddAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec1e1c_SubAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec21d6_DivAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec24a0_MulAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec2769_ModAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec2a33_ShlAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec2cec_ShrAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec30b6_BitOrAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec3380_BitAndAssign(jule::Ptr<_1a3e143d1_Fn>);
inline jule::Bool static__1a3ec3649_BitXorAssign(jule::Ptr<_1a3e143d1_Fn>);
inline void _1a40113bd_pushErr(_1a4010dc3_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a4011654_checkTrait(_1a4010dc3_typeCompatibilityChecker*);
inline jule::Bool _1a40118da_checkPtr(_1a4010dc3_typeCompatibilityChecker*);
inline jule::Bool _1a4011b71_checkPrim(_1a4010dc3_typeCompatibilityChecker*);
inline jule::Bool _1a401206c_typeEnum(_1a4010dc3_typeCompatibilityChecker*, jule::Ptr<_1a3e2b5c4_TypeEnum>*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4012303_checkTypeEnum(_1a4010dc3_typeCompatibilityChecker*);
inline jule::Bool _1a4012589_check(_1a4010dc3_typeCompatibilityChecker*);
inline void _1a4013106_pushErr(_1a4012b72_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a401338c_checkValidity(_1a4012b72_assignTypeChecker*);
inline jule::Bool _1a4013623_checkConst(_1a4012b72_assignTypeChecker*);
inline jule::Bool _1a40138a9_checkCompatibility(_1a4012b72_assignTypeChecker*);
inline jule::Bool _1a4013b40_check(_1a4012b72_assignTypeChecker*);
inline jule::Bool _1a76b8027_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a76b77c9_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a76b9a62_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a76c10da_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4014e3d_annotateConstraintMap(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a401527e_annotateConstraintTup(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a40155c0_annotateConstraintFn(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4015911_annotateConstraintIdent(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4015c52_annotateConstraint(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a40160b5_pushGeneric(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::I64);
inline jule::Bool _1a4016406_annotatePrim(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4016747_annotateArr(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4016a88_annotateSlc(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4016e84_checkMapKey(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a40172c5_annotateMap(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4017616_annotateFn(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4017957_annotatePtr(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4017c98_annotateSptr(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a40180d9_annotateStruct(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a401842a_annotateAny(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a401876b_annotateKind(_1a4014547_dynamicTypeAnnotation*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a4018a02_annotate(_1a4014547_dynamicTypeAnnotation*);
inline void _1a4019915_pushErrToken(_1a40193a4_fnCallArgChecker*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4019c78_pushErr(_1a40193a4_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _1a401a00e_getParams(_1a40193a4_fnCallArgChecker*);
inline jule::Bool _1a401a350_checkCounts(_1a40193a4_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>*);
inline jule::Bool _1a401a806_checkArg(_1a40193a4_fnCallArgChecker*, jule::Ptr<_1a3e16339_ParamIns>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a401ac02_push(_1a40193a4_fnCallArgChecker*, jule::Ptr<_1a3e16339_ParamIns>*, jule::Ptr<_1a3dd2987_Expr>);
inline jule::Bool _1a401b0ed_pushVariadic(_1a40193a4_fnCallArgChecker*, jule::Ptr<_1a3e16339_ParamIns>*, jule::I64);
inline jule::Bool _1a401b43e_checkArgs(_1a40193a4_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>*);
inline jule::Bool _1a401b6c5_checkDynamicTypeAnnotation(_1a40193a4_fnCallArgChecker*);
inline jule::Bool _1a401b95b_check(_1a40193a4_fnCallArgChecker*);
inline void _1a401c83b_pushErr(_1a401c2db_structLitChecker*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a401cb9e_pushSuggestion(_1a401c2db_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a401d0bc_pushMatch(_1a401c2db_structLitChecker*, jule::Ptr<_1a3e016ba_FieldIns>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a401d430_checkPair(_1a401c2db_structLitChecker*, jule::Ptr<_1a3dd71a6_FieldExprPair>*, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>*);
inline jule::Bool _1a401d771_readyExprs(_1a401c2db_structLitChecker*, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>*);
inline void _1a401da29_check(_1a401c2db_structLitChecker*, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>*);
inline jule::Ptr<_1a3ebac4b_Var> _1a401e5a7_buildVar(_1a401e0bd_rangeChecker*, jule::Ptr<_1a3de14bd_VarDecl>*);
inline void _1a401e7a5_setSizeKey(_1a401e0bd_rangeChecker*);
inline void _1a401ebc3_checkRangeExprValidity(_1a401e0bd_rangeChecker*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a401edc1_checkSlice(_1a401e0bd_rangeChecker*);
inline void _1a40200be_checkArray(_1a401e0bd_rangeChecker*);
inline void _1a40202bc_checkMapKeyA(_1a401e0bd_rangeChecker*);
inline void _1a40204ba_checkMapKeyB(_1a401e0bd_rangeChecker*);
inline void _1a40206b8_checkMap(_1a401e0bd_rangeChecker*);
inline void _1a40208b6_checkStr(_1a401e0bd_rangeChecker*);
inline void _1a4020ab4_checkComptime(_1a401e0bd_rangeChecker*);
inline jule::Bool _1a4020d4a_checkComptimeRange(_1a401e0bd_rangeChecker*);
inline jule::Bool _1a40210d1_check(_1a401e0bd_rangeChecker*);
inline void _1a4021c4c_prepareTypes(_1a402182e_retTypeChecker*);
inline void _1a4022005_prepareExprs(_1a402182e_retTypeChecker*, jule::Ptr<_1a3dd2987_Expr>*);
inline void _1a4022203_checkExprs(_1a402182e_retTypeChecker*);
inline jule::Bool _1a4022544_check(_1a402182e_retTypeChecker*, jule::Ptr<_1a3dd2987_Expr>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a40240d4_SelectPackage(_1a4023aea_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
inline jule::Ptr<_1a3ebac4b_Var> _1a40244d0_FindVar(_1a4023aea_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a40248cb_FindTypeAlias(_1a4023aea_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a4024cc7_FindStruct(_1a4023aea_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a40251c3_FindFn(_1a4023aea_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a4025514_FindTrait(_1a4023aea_SymbolTable*, jule::Str);
inline jule::Ptr<_1a3e29db9_Enum> _1a4025855_FindEnum(_1a4023aea_SymbolTable*, jule::Str);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a4025b96_FindTypeEnum(_1a4023aea_SymbolTable*, jule::Str);
inline jule::Ptr<_1a3ebac4b_Var> _1a40262b2_findVar(_1a4023aea_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a4026768_findTypeAlias(_1a4023aea_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1a4026b64_defByIdent(_1a4023aea_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1a402711a_isDuplicatedIdent(_1a4023aea_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1a402934d_IsNil(_1a4028e63_Data*);
inline jule::Bool _1a40295d4_IsVoid(_1a4028e63_Data*);
inline jule::Bool _1a402986a_IsConst(_1a4028e63_Data*);
inline jule::Bool _1a4029bab_GoodOperand(_1a4028e63_Data*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a402b1da_pushErr(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a402b54d_pushSuggestion(_1a402ab8a_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a402b74b_allowBuiltin(_1a402ab8a_Eval*);
inline void _1a402b949_disallowBuiltin(_1a402ab8a_Eval*);
inline jule::Bool _1a402bbd0_isUnsafe(_1a402ab8a_Eval*);
inline jule::Bool _1a402be66_isGlobal(_1a402ab8a_Eval*);
inline jule::Bool _1a402c274_applyNumericPrefix(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a402c5b5_litStr(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a402c906_litRune(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a402cc47_litFloat(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a402d088_litInt(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a402d3c9_litNum(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a402d71a_evalLit(_1a402ab8a_Eval*, jule::Ptr<_1a3dd3922_LitExpr>);
inline jule::Any _1a402da5b_findBuiltins(_1a402ab8a_Eval*, jule::Str*);
inline jule::Any _1a402de57_getDef(_1a402ab8a_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1a3e1a4a3_ReferenceStack> _1a402e1dd_getOwnerRefers(_1a402ab8a_Eval*);
inline void _1a77ea368_pushReference(_1a402ab8a_Eval*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a781016e_pushReference(_1a402ab8a_Eval*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a78c9bd9_pushReference(_1a402ab8a_Eval*, jule::Ptr<_1a3e0226a_StructIns>*);
inline jule::Ptr<_1a4028e63_Data> _1a402e7d7__evalEnum(_1a402ab8a_Eval*, jule::Ptr<_1a3e29db9_Enum>);
inline jule::Ptr<_1a4028e63_Data> _1a402ebd3_evalEnum(_1a402ab8a_Eval*, jule::Ptr<_1a3e29db9_Enum>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4030024__evalTypeEnum(_1a402ab8a_Eval*, jule::Ptr<_1a3e2b5c4_TypeEnum>);
inline jule::Ptr<_1a4028e63_Data> _1a4030420_evalTypeEnum(_1a402ab8a_Eval*, jule::Ptr<_1a3e2b5c4_TypeEnum>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4030761__evalStruct(_1a402ab8a_Eval*, jule::Ptr<_1a3e0226a_StructIns>);
inline jule::Ptr<_1a4028e63_Data> _1a4030b5c_evalStruct(_1a402ab8a_Eval*, jule::Ptr<_1a3e0226a_StructIns>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4030e9d_evalFnIns(_1a402ab8a_Eval*, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a4031311_checkDeprecated(_1a402ab8a_Eval*, jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a403170c_evalFn(_1a402ab8a_Eval*, jule::Ptr<_1a3e143d1_Fn>, jule::Ptr<_1a3db8198_Token>);
inline void _1a4031b2a_pushIllegalCycleError(_1a402ab8a_Eval*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*, _1c9754d1c_StrBuilder*);
inline jule::Bool _1a4032026_checkCrossCycle(_1a402ab8a_Eval*, jule::Ptr<_1a3ebac4b_Var>*, _1c9754d1c_StrBuilder*);
inline jule::Bool _1a4032422_checkIllegalCycles(_1a402ab8a_Eval*, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a403281d_evalVar(_1a402ab8a_Eval*, jule::Ptr<_1a3ebac4b_Var>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4032c19_evalTypeAlias(_1a402ab8a_Eval*, jule::Ptr<_1a405913b_TypeAlias>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4033115_evalDef(_1a402ab8a_Eval*, jule::Any*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4033456_evalIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3dd42a2_IdentExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4033797_evalUnary(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd4a44_UnaryExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4033ad8_evalVariadic(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd4e1d_VariadicExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4033e29_evalUnsafe(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd3ceb_UnsafeExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a403426a_evalArr(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd8edd_SliceExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4034721_evalExpSlc(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd8edd_SliceExpr>, jule::Ptr<_1a4059e2d_TypeKind>, jule::Any);
inline jule::Ptr<_1a4028e63_Data> _1a4034a62_evalSliceExpr(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd8edd_SliceExpr>);
inline void _1a4034dc5_checkIntegerIndexingByData(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a40352e3_indexingPtr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline void _1a4035711_indexingArr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline void _1a4035b2e_indexingSlc(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline void _1a403604c_indexingMap(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline void _1a403646a_indexingStr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline void _1a4036888_toIndexing(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline jule::Bool _1a4036d3e_pushGenericsFromExprSubIdent(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*, jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>*, jule::Ptr<_1a3dd2987_Expr>*);
inline jule::Bool _1a403723a_pushGenericsFromData(jule::Ptr<_1a402ab8a_Eval>, jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>*, jule::Ptr<_1a3dd2987_Expr>*);
inline void _1a403759d_evalIdentDeclFromIndexing(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline jule::Bool _1a4037a54_checkGenericFn(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3db8198_Token>*, jule::Any*);
inline void _1a4037db7_evalFnGenericFromIndexing(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd994a_IndexingExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a4038208_evalIndexing(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd994a_IndexingExpr>);
inline __jule_tuple_x_1a4028e63_Data__jule_tuple_x_1a4028e63_Data _1a4038549_evalSlicingExprs(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dda0aa_SlicingExpr>*);
inline void _1a4038802_slicingArr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a4038c20_slicingStr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a40391e8_checkSlicing(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dda0aa_SlicingExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a4039539_evalSlicing(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dda0aa_SlicingExpr>);
inline void _1a4039957_castPtr(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a4039d75_castStruct(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403a293_castRef(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403a6b1_castSlc(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403aa24_castStr(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403ae42_castInt(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403b360_castNum(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403b77d_castPrim(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline void _1a403bae1_castConstant(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a403c00e_castTypeEnum(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a403c42c_castTypeEnumT(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a4028e63_Data> _1a403c8d3_evalCastByTypeNData(_1a402ab8a_Eval*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a403cd89_evalCastT(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a3dd2987_Expr>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a4028e63_Data> _1a403d1ca_evalCast(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd52e7_CastExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a403d51b_evalNsSelection(_1a402ab8a_Eval*, jule::Ptr<_1a3dd56c1_NsSelectionExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a403d9c2_evalStructLitExplicit(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3e0226a_StructIns>, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a403dd13_evalStructLit(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd79d1_StructLit>);
inline _1a406bcdb_typeChecker _1a403e099_typeChecker(_1a402ab8a_Eval*);
inline jule::Ptr<_1a4028e63_Data> _1a403e3da_evalType(_1a402ab8a_Eval*, jule::Ptr<_1a3dcd653_TypeDecl>);
inline void _1a403e74d_callTypeFn(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a403eab1_callBuiltinFn(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a403ee24_checkFnOfConcurrentCall(_1a402ab8a_Eval*, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a4040342_processExceptionalHandler(_1a402ab8a_Eval*, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a40406a5_callFn(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a40409e6_evalFnCall(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd66b1_FnCallExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4040de2_evalEnumStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3e29db9_Enum>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a40412dd_evalTypeEnumStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3e2b5c4_TypeEnum>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a40416d9_evalStructStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3e0226a_StructIns>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4041b90_evalTraitSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4042201_evalStructSubIdentField(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e016ba_FieldIns>*);
inline jule::Ptr<_1a4028e63_Data> _1a4042762_evalStructSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3e0226a_StructIns>, jule::Ptr<_1a3dd5a9a_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a4028e63_Data> _1a4042aa3_evalIntTypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4042de4_evalUintTypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4043235_evalI8TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4043576_evalI16TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a40438b7_evalI32TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4043c08_evalI64TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4044049_evalU8TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a404438a_evalU16TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a40446cb_evalU32TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4044a1c_evalU64TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4044d5d_evalF32TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a404519e_evalF64TypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a404559a_evalPrimStatic(_1a402ab8a_Eval*, jule::Str, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a4028e63_Data> _1a4045996_evalTypeStatic(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3dd5a9a_SubIdentExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a7a3e6bc_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e3e054_comptimeTypeInfo>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a43d53_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e301ee_comptimeStructField>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a48473_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e36766_comptimeEnumField>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a4cad7_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e39208_comptimeParam>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a5234a_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e334aa_comptimeStatic>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a5696a_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e45566_comptimeValue>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a7a5b08a_comptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a3e494b0_comptimeFile>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>*);
inline __jule_tuple_x_1a4028e63_Data__jule_tuple_bool _1a4046348_tryComptimeObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3dd5a9a_SubIdentExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4046744_evalObjSubIdent(_1a402ab8a_Eval*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3dd5a9a_SubIdentExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4046a85_evalSubIdent(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd5a9a_SubIdentExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a4046dc6_evalTuple(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd357b_TupleExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a40472c2_evalMap(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a406869a_Map>, jule::Ptr<_1a3dd7e87_BraceLit>);
inline jule::Ptr<_1a4028e63_Data> _1a4047613_evalBraceLit(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd7e87_BraceLit>);
inline jule::Ptr<_1a4028e63_Data> _1a4047954_evalAnonFunc(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3de0313_FnDecl>);
inline jule::Ptr<_1a4028e63_Data> _1a4047c95_evalBinary(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd6051_BinaryExpr>);
inline jule::Ptr<_1a4028e63_Data> _1a40480d6_evalExprKind(jule::Ptr<_1a402ab8a_Eval>, jule::Any);
inline jule::Ptr<_1a4028e63_Data> _1a4048427_eval1(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd2987_Expr>);
inline jule::Ptr<_1a4028e63_Data> _1a4048768_eval(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd2987_Expr>);
inline jule::Ptr<_1a4028e63_Data> _1a4048aa9_evalExpr1(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd2987_Expr>);
inline jule::Ptr<_1a4028e63_Data> _1a4048dea_evalExpr(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3dd2987_Expr>);
inline _1a40493b2_unaryEval static__1a4049802_new(jule::Ptr<_1a402ab8a_Eval>);
inline void _1a4049a00_minus(_1a40493b2_unaryEval*);
inline void _1a4049bed_plus(_1a40493b2_unaryEval*);
inline void _1a4049deb_caret(_1a40493b2_unaryEval*);
inline void _1a404a0e9_excl(_1a40493b2_unaryEval*);
inline void _1a404a2e7_star(_1a40493b2_unaryEval*);
inline void _1a404a4e5_amper(_1a40493b2_unaryEval*);
inline void _1a404a6e3_typeDecl(_1a40493b2_unaryEval*);
inline void _1a404a8e1_evalData(_1a40493b2_unaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404ac32_eval(_1a40493b2_unaryEval*, jule::Ptr<_1a3dd4a44_UnaryExpr>);
inline _1a404b34d_binaryEval static__1a404b903_newPlain(jule::Ptr<_1a402ab8a_Eval>);
inline _1a404b34d_binaryEval static__1a404bc77_new(jule::Ptr<_1a402ab8a_Eval>, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a404c00d_checkTypeCompatibility(_1a404b34d_binaryEval*);
inline jule::Bool _1a404c294_checkStructCommonOperatorCompatibility(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404c52a_evalComptimeTypeInfo(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404c7b1_evalNil(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404ca47_evalEnum(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404cccd_evalTypeEnum(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404d064_evalSptr(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404d2ea_evalPtr(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404d581_evalArr(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404d817_evalSlc(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404da9d_evalStruct(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404dd34_evalTrait(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404e0ba_evalAny(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404e351_evalBool(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a404e5d7_evalStr(_1a404b34d_binaryEval*);
inline void _1a404e7d5_setTypeToGreater(_1a404b34d_binaryEval*);
inline void _1a404ea8d_checkModData(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a404ec8b_mod(_1a404b34d_binaryEval*);
inline jule::Bool _1a4050187_numbersAreCompatibile(_1a404b34d_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1a4028e63_Data> _1a405041d_evalFloat(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a40506a4_evalInt(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a405093a_evalPrim(_1a404b34d_binaryEval*);
inline void _1a4050b38_checkSpecialCases(_1a404b34d_binaryEval*);
inline jule::Ptr<_1a4028e63_Data> _1a4050dbe_evalOp(_1a404b34d_binaryEval*);
inline void _1a4051177_evalConst(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a4051430_checkData(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a405162d_checkDatas(_1a404b34d_binaryEval*);
inline void _1a40518d6_setModel(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a4051b8e_postEval(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a405208a_solveExplicit(_1a404b34d_binaryEval*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a40523cb_eval(_1a404b34d_binaryEval*, jule::Ptr<_1a3dd6051_BinaryExpr>*);
inline jule::Str _1a405a2e6_Str(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405a637_Equal(jule::Ptr<_1a4059e2d_TypeKind>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a405ac75_Binded(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405b00b_IsNil(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405b292_Void(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405b528_Comparable(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405b7ae_Mutable(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405ba45_Ordered(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405bccb_NilCompatible(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405c062_PerformsRC(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405c2e8_Variadicable(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4062a07_Prim> _1a405c57e_Prim(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4066533_Sptr> _1a405c815_Sptr(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4069cea_Ptr> _1a405ca9b_Ptr(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e29db9_Enum> _1a405cd32_Enum(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a405d0b8_TypeEnum(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4069327_Arr> _1a405d34e_Arr(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4067006_Slc> _1a405d5d5_Slc(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e172d5_FnIns> _1a405d86b_Fn(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e0226a_StructIns> _1a405db02_Struct(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e276ad_Trait> _1a405dd88_Trait(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a406869a_Map> _1a405e11e_Map(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a4067aea_Tuple> _1a405e3a5_Tup(_1a4059e2d_TypeKind*);
inline jule::Bool _1a405e63b_comptime(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e31db0_comptimeStructFields> _1a405e8c2_comptimeStructFields(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e301ee_comptimeStructField> _1a405eb58_comptimeStructField(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e37b0d_comptimeEnumFields> _1a405edde_comptimeEnumFields(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e36766_comptimeEnumField> _1a4060175_comptimeEnumField(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e3b392_comptimeParams> _1a406040b_comptimeParams(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e39208_comptimeParam> _1a4060692_comptimeParam(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e2e72b_comptimeRange> _1a4060928_comptimeRange(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e3c959_comptimeTypeInfos> _1a4060bae_comptimeTypeInfos(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e3e054_comptimeTypeInfo> _1a4060e45_comptimeTypeInfo(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e3516b_comptimeStatics> _1a40611cb_comptimeStatics(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e334aa_comptimeStatic> _1a4061462_comptimeStatic(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e45566_comptimeValue> _1a40616e8_comptimeValue(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e494b0_comptimeFile> _1a406197e_comptimeFile(_1a4059e2d_TypeKind*);
inline jule::Ptr<_1a3e47db5_comptimeFiles> _1a4061c15_comptimeFiles(_1a4059e2d_TypeKind*);
inline jule::Bool _1a4062474_checked(_1a4062100_TypeSymbol*);
inline jule::Str _1a4062d48_Str(_1a4062a07_Prim*);
inline jule::Bool _1a4063189_Equal(jule::Ptr<_1a4062a07_Prim>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a406362e_IsConstraint(_1a4062a07_Prim*);
inline jule::Bool _1a40638b5_IsI8(_1a4062a07_Prim*);
inline jule::Bool _1a4063b4b_IsI16(_1a4062a07_Prim*);
inline jule::Bool _1a4063dd2_IsI32(_1a4062a07_Prim*);
inline jule::Bool _1a4064168_IsI64(_1a4062a07_Prim*);
inline jule::Bool _1a40643ee_IsU8(_1a4062a07_Prim*);
inline jule::Bool _1a4064685_IsU16(_1a4062a07_Prim*);
inline jule::Bool _1a406491b_IsU32(_1a4062a07_Prim*);
inline jule::Bool _1a4064ba2_IsU64(_1a4062a07_Prim*);
inline jule::Bool _1a4064e38_IsF32(_1a4062a07_Prim*);
inline jule::Bool _1a40651be_IsF64(_1a4062a07_Prim*);
inline jule::Bool _1a4065455_IsInt(_1a4062a07_Prim*);
inline jule::Bool _1a40656db_IsUint(_1a4062a07_Prim*);
inline jule::Bool _1a4065972_IsUintptr(_1a4062a07_Prim*);
inline jule::Bool _1a4065c08_IsBool(_1a4062a07_Prim*);
inline jule::Bool _1a4065e8e_IsStr(_1a4062a07_Prim*);
inline jule::Bool _1a4066225_IsAny(_1a4062a07_Prim*);
inline jule::Str _1a40668a7_Str(_1a4066533_Sptr*);
inline jule::Bool _1a4066be8_Equal(jule::Ptr<_1a4066533_Sptr>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a406748a_Str(_1a4067006_Slc*);
inline jule::Bool _1a40677cb_Equal(jule::Ptr<_1a4067006_Slc>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a4067e6e_Str(_1a4067aea_Tuple*);
inline jule::Bool _1a40682b0_Equal(jule::Ptr<_1a4067aea_Tuple>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a4068a1e_Str(_1a406869a_Map*);
inline jule::Bool _1a4068d60_Equal(jule::Ptr<_1a406869a_Map>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a406969b_Str(_1a4069327_Arr*);
inline jule::Bool _1a40699dc_Equal(jule::Ptr<_1a4069327_Arr>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Str _1a406a16e_Str(_1a4069cea_Ptr*);
inline jule::Bool _1a406a4b0_Equal(jule::Ptr<_1a4069cea_Ptr>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a406a834_IsUnsafe(_1a4069cea_Ptr*);
inline void _1a406c528_pushErr(_1a406bcdb_typeChecker*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a406c726_allowBuiltin(_1a406bcdb_typeChecker*);
inline void _1a406c924_disallowBuiltin(_1a406bcdb_typeChecker*);
inline void _1a7c4a5ba_pushReference(_1a406bcdb_typeChecker*, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a79ad76d_pushReference(_1a406bcdb_typeChecker*, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a406ce85_pushReferenceByKind(_1a406bcdb_typeChecker*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a406d3a3_pushCycleError(_1a406bcdb_typeChecker*, jule::Any, jule::Any, _1c9754d1c_StrBuilder*);
inline jule::Bool _1a406d79e_checkCrossCycle(_1a406bcdb_typeChecker*, jule::Any, _1c9754d1c_StrBuilder*);
inline jule::Bool _1a406db9a_checkIllegalCycles(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1a4059977_Kind> _1a406e096_fromTypeAlias(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a405913b_TypeAlias>*);
inline jule::Ptr<_1a3e29db9_Enum> _1a406e492_fromEnum(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a3e29db9_Enum>*);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a406e88d_fromTypeEnum(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a3e2b5c4_TypeEnum>*);
inline jule::Ptr<_1a3e276ad_Trait> _1a406ec89_fromTrait(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a4070185_checkStructIns(_1a406bcdb_typeChecker*, jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a407043d_appendUsedStructReference(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Ptr<_1a3e0226a_StructIns> _1a4070839_buildStructInstance(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Ptr<_1a3e0226a_StructIns> _1a4070c35_fromStruct(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*, jule::Ptr<_1a3dee4dc_Struct>*);
inline jule::Trait<_1a4059977_Kind> _1a4071076_getDef(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>*);
inline jule::Trait<_1a4059977_Kind> _1a40713b7_buildIdent(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>);
inline jule::Trait<_1a4059977_Kind> _1a4071708_buildSubIdent(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dce027_SubIdentTypeDecl>);
inline jule::Ptr<_1a4066533_Sptr> _1a4071a49_buildSptrFromType(_1a406bcdb_typeChecker*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Ptr<_1a4066533_Sptr> _1a4071d8a_buildSptr(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dce6ed_SptrTypeDecl>);
inline jule::Ptr<_1a4069cea_Ptr> _1a40721cb_buildPtrFromType(_1a406bcdb_typeChecker*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Ptr<_1a4069cea_Ptr> _1a407251c_buildPtr(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dd017c_PtrTypeDecl>);
inline jule::Ptr<_1a4067006_Slc> _1a407285d_buildSlc(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcea83_SlcTypeDecl>);
inline jule::Ptr<_1a4069327_Arr> _1a4072b9e_buildArr(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dd091e_ArrTypeDecl>);
inline jule::Ptr<_1a406869a_Map> _1a4072ee0_buildMap(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dd116c_MapTypeDecl>);
inline jule::Ptr<_1a4067aea_Tuple> _1a4073331_buildTuple(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dced80_TupleTypeDecl>);
inline jule::Bool _1a4073672_checkFuncTypes(_1a406bcdb_typeChecker*, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Ptr<_1a3e172d5_FnIns> _1a40739b3_buildFunc(_1a406bcdb_typeChecker*, jule::Ptr<_1a3de0313_FnDecl>);
inline jule::Trait<_1a4059977_Kind> _1a4073d04_buildByNamespace(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dce401_NamespaceTypeDecl>);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a4074145_build(_1a406bcdb_typeChecker*, jule::Any*);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a4074486_checkDecl(_1a406bcdb_typeChecker*, jule::Ptr<_1a3dcd653_TypeDecl>*);
inline jule::Bool static__1a4074dd2_prim(jule::Str*, jule::Ptr<_1a4062a07_Prim>);
inline jule::Bool static__1a4075256_exist(jule::Str*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a4a2cb86_stop(_1a4a2c515_scopeParser*);
inline jule::Bool _1a4a2ce1c_stopped(_1a4a2c515_scopeParser*);
inline jule::Bool _1a4a2d1a3_finished(_1a4a2c515_scopeParser*);
inline jule::Bool _1a4a2d439_isLastSt(_1a4a2c515_scopeParser*);
inline void _1a4a2d79c_pushErr(_1a4a2c515_scopeParser*, jule::Ptr<_1a3db8198_Token>, jule::Str);
inline void _1a4a2db10_pushSuggestion(_1a4a2c515_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a4a2ddb8_insertAsNext(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a4a2bb74_stmt> _1a4a2e14e_next(_1a4a2c515_scopeParser*);
inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a2e54a_buildScope(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a2e88b_buildVarSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de1897_RetSt> _1a4a2ebcc_buildRetSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de2117_Iter> _1a4a3001d_buildWhileNextIter(_1a4a2c515_scopeParser*, jule::Ptr<_1a4a2bb74_stmt>*);
inline jule::Ptr<_1a3de2942_WhileKind> _1a4a3035e_buildWhileIterKind(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a306a0_getRangeKindKeysTokens(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a309e1_buildRangeKindKey(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _1a4a30d32_buildRangeKindKeys(_1a4a2c515_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>*);
inline void _1a4a31195_setupRangeKindKeysPlain(_1a4a2c515_scopeParser*, jule::Ptr<_1a3de3349_RangeKind>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a31508_setupRangeKindKeysExplicit(_1a4a2c515_scopeParser*, jule::Ptr<_1a3de3349_RangeKind>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a3186b_setupRangeKindKeys(_1a4a2c515_scopeParser*, jule::Ptr<_1a3de3349_RangeKind>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de3349_RangeKind> _1a4a31d22_buildRangeIterKind(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Any _1a4a3221d_buildCommonIterKind(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a3de2117_Iter> _1a4a3255e_buildCommonIter(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de2117_Iter> _1a4a328a0_buildIterSt(_1a4a2c515_scopeParser*, jule::Ptr<_1a4a2bb74_stmt>*);
inline jule::Ptr<_1a3de3723_BreakSt> _1a4a32be1_buildBreakSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de3aec_ContSt> _1a4a33032_buildContSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de40a3_If> _1a4a33373_buildIf(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de447c_Else> _1a4a336b4_buildElse(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de4933_Conditional> _1a4a33a05_buildIfElseChain(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a33d46_buildCoCallSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3ddb111_GotoSt> _1a4a34187_buildGotoSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3ddb40d_FallSt> _1a4a344c8_buildFallSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a34819_buildTypeAliasSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a34ce2_pushCaseExpr(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Ptr<_1a3db8198_Token>, jule::Bool, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>*);
inline __jule_tuple_sx_1a3dd2987_Expr__jule_tuple_bool _1a4a35298_buildCaseExprs(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>*, jule::Bool);
inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a355d9_buildCaseScope(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline __jule_tuple_x_1a3de5626_Case__jule_tuple_bool _1a4a359d5_buildCase(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Bool);
inline __jule_tuple_sx_1a3de5626_Case__jule_tuple_x_1a3de447c_Else _1a4a35dd1_buildCases(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Bool);
inline jule::Ptr<_1a3de5e40_MatchCase> _1a4a36222_buildMatchCase(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a36563_buildScopeSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3ddac37_LabelSt> _1a4a368a4_buildLabelSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a36be5_buildIdSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a4a473cb_assignInfo> _1a4a37036_buildAssignInfo(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3ddba6d_AssignLeft> _1a4a37377_buildAssignL(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> _1a4a376b8_buildAssignLs(_1a4a2c515_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>*);
inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a37a09_buildPlainAssign(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Bool _1a4a37e05_buildDeclAssign1(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3ddc101_AssignSt>*);
inline __jule_tuple_x_1a3ddc101_AssignSt__jule_tuple_bool _1a4a38246_buildDeclAssign(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a38587_buildAssignSt(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd335b_UseExpr> _1a4a388c8_buildUseExpr(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a38c19_buildConstSt(_1a4a2c515_scopeParser*, jule::Ptr<_1a4a2bb74_stmt>*);
inline jule::Any _1a4a3905a_buildSt(_1a4a2c515_scopeParser*, jule::Ptr<_1a4a2bb74_stmt>*);
inline void _1a4a393bd_build(_1a4a2c515_scopeParser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3ddd674_ScopeTree>*);
inline void _1a4a3a721_pushErr(_1a4a39e3a_exprBuilder*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4a3aa84_pushSuggestion(_1a4a39e3a_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a3dd357b_TupleExpr> _1a4a3adc5_buildTuple(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>*);
inline jule::Ptr<_1a3dd3922_LitExpr> _1a4a3b216_buildLit(_1a4a39e3a_exprBuilder*, jule::Ptr<_1a3db8198_Token>);
inline jule::Any _1a4a3b898_buildSingle(_1a4a39e3a_exprBuilder*, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a3dd42a2_IdentExpr> _1a4a3bbd9_buildBindIdent(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd4a44_UnaryExpr> _1a4a3c02a_buildUnary(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd5a9a_SubIdentExpr> _1a4a3c36b_buildObjSubIdent(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd56c1_NsSelectionExpr> _1a4a3c6ac_buildNsSubIdent(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a3c9ed_buildType(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a3cd3e_buildSubIdent(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd4e1d_VariadicExpr> _1a4a3d180_buildVariadic(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd2c51_RangeExpr> _1a4a3d4c1_buildBetweenParentheses(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd52e7_CastExpr> _1a4a3d812_tryBuildCast(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a3dc30_pushArg(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Ptr<_1a3db8198_Token>);
inline jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _1a4a3e071_buildArgs(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd66b1_FnCallExpr> _1a4a3e868_buildFnCall(_1a4a39e3a_exprBuilder*, jule::Ptr<_1a3db8198_Token>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a3eba9_buildParenthesesRange(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd3ceb_UnsafeExpr> _1a4a3eeea_buildUnsafeExpr(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de0313_FnDecl> _1a4a4033b_buildAnonFn(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a4067c_buildUnsafe(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a40a9a_pushRangeLitPart(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Ptr<_1a3db8198_Token>, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a40ddb_getBraceRangeLitExprParts(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd71a6_FieldExprPair> _1a4a4122c_buildFieldExprPair(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a4156d_buildStructLitExpr(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _1a4a418ae_buildStructLitExprs(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd79d1_StructLit> _1a4a41c00_buildTypedStructLiteral(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a42041_buildBraceLitPart(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd7e87_BraceLit> _1a4a42382_buildBraceLit(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a426c3_buildBraceRange(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a42a14_getEnumerableParts(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd8edd_SliceExpr> _1a4a42d55_buildSlice(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dd994a_IndexingExpr> _1a4a4330b_buildIndexing(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Ptr<_1a3db8198_Token>);
inline jule::Ptr<_1a3dda0aa_SlicingExpr> _1a4a43927_buildSlicing(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3db8198_Token>);
inline jule::Any _1a4a43c68_buildBracketRange(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Any _1a4a440a9_buildExclRight(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a443ea_buildData(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a447e6_buildBinary(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64);
inline jule::Any _1a4a44b37_build(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a44e78_buildKind(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a452b9_buildFromTokens(_1a4a39e3a_exprBuilder*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a4aac7_stop(_1a4a4a7ca_parser*);
inline jule::Bool _1a4a4ad5d_stopped(_1a4a4a7ca_parser*);
inline void _1a4a4b27b_pushErr(_1a4a4a7ca_parser*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4a4b5de_pushSuggestion(_1a4a4a7ca_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a4b930_buildExpr(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dcca70_Directive> _1a4a4bc71_buildDirective(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a4c029_pushDirective(_1a4a4a7ca_parser*, jule::Ptr<_1a3dcca70_Directive>);
inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a4c425_buildScope(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>);
inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a4c8cb__buildType(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a4cd82_buildType(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a4d1c3_buildTypeAliasDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a4d536_buildVarTypeAndExpr(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3de14bd_VarDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a4d899_buildVarCommon(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3de14bd_VarDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a4dcb7_buildVarBegin(_1a4a4a7ca_parser*, jule::Ptr<_1a3de14bd_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a4e108_buildVar(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3dda85d_GenericDecl> _1a4a4e449_buildGeneric(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _1a4a4e845_buildGenerics(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a3ddddb1_ParamDecl> _1a4a4eb86_buildSelfParam(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a500a4_paramTypeBegin(_1a4a4a7ca_parser*, jule::Ptr<_1a3ddddb1_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a50417_buildParamType(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3ddddb1_ParamDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a5077a_buildParamBody(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3ddddb1_ParamDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3ddddb1_ParamDecl> _1a4a50abb_buildParam(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a50d74_checkParams(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> _1a4a51270_buildParams(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Bool);
inline __jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool _1a4a5166b_buildMultiRetType(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*);
inline __jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool _1a4a51a67_buildRetType(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*);
inline jule::Ptr<_1a3de0313_FnDecl> _1a4a5201d_buildFnPrototype(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a3de0313_FnDecl> _1a4a524c4_buildFn(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a52815_getUseDeclSelectors(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a52b78_buildBindUseDecl(_1a4a4a7ca_parser*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Str _1a4a52eb9_useDeclTokstoa(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a5332c_buildStdUseDecl(_1a4a4a7ca_parser*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a53690_buildIdentUseDecl(_1a4a4a7ca_parser*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline void _1a4a53a03_parseUseDecl(_1a4a4a7ca_parser*, jule::Ptr<_1a3de6759_UseDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de6759_UseDecl> _1a4a53dee_buildUseDecl(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>, jule::Bool);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a542ea_buildTypeEnumItemKind(jule::Ptr<_1a4a4a7ca_parser>, jule::I64*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>> _1a4a5463b_buildTypeEnumItems(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de875b_TypeEnumDecl> _1a4a5497c_buildTypeEnumDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd2987_Expr> _1a4a54d78_buildEnumItemExpr(jule::Ptr<_1a4a4a7ca_parser>, jule::I64*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> _1a4a551b9_buildEnumItems(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de77c1_EnumDecl> _1a4a5550a_buildEnumDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Any _1a4a5584b_buildNodeEnumDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de8a25_FieldDecl> _1a4a55b8c_buildField(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>> _1a4a55ecd_buildStructDeclFields(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de941b_StructDecl> _1a4a5631e_buildStructDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a565c7_checkMethodReceiver(_1a4a4a7ca_parser*, jule::Ptr<_1a3de0313_FnDecl>*);
inline void _1a4a5693a_buildTraitBody(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3de9b58_TraitDecl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de9b58_TraitDecl> _1a4a56c7b_buildTraitDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de0313_FnDecl> _1a4a570bc_buildBindFn(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a5740d_buildBindVar(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de941b_StructDecl> _1a4a5774e_buildBindStruct(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a57a90_buildBindTypeAlias(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Ptr<_1a3de6759_UseDecl> _1a4a57dd1_buildBindUse(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Any _1a4a58222_buildBind(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3de0313_FnDecl> _1a4a58563_getMethod(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a588c6_parseImplBody(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3dea2b8_Impl>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dea2b8_Impl> _1a4a58c17_buildImpl(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Any _1a4a59058_buildNodeData(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a59311_applyFnMeta(_1a4a4a7ca_parser*, jule::Ptr<_1a3de0313_FnDecl>*);
inline void _1a4a595b9_applyMeta(_1a4a4a7ca_parser*, _1a3dcc652_Node*);
inline void _1a4a59872_pushUseDecl(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3de6759_UseDecl>*);
inline jule::Bool _1a4a59bb3_pushMetaNodes(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline _1a3dcc652_Node _1a4a5a004_parseNode(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a5a2ac_appendNode(jule::Ptr<_1a4a4a7ca_parser>, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a5a785_removeRange(_1a4a4a7ca_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4a5aba3_pushWrongOrderCloseErr(_1a4a4a7ca_parser*, jule::Ptr<_1a3db8198_Token>*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4a5b17b_pushRangeClose(_1a4a4a7ca_parser*, jule::Ptr<_1a3db8198_Token>, jule::U64, jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4a5b434_checkRanges(_1a4a4a7ca_parser*, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline void _1a4a5b6dc_parse(jule::Ptr<_1a4a4a7ca_parser>, jule::Ptr<_1a3dbd92e_File>*);
inline void _1a4a5d04b_pushErr(_1a4a5c9a7_typeBuilder*, jule::Ptr<_1a3db8198_Token>, jule::Str);
inline void _1a4a5d3ae_pushSuggestion(_1a4a5c9a7_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5d645_buildNamespace(_1a4a5c9a7_typeBuilder*);
inline jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _1a4a5d8cb_buildGenerics(_1a4a5c9a7_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a5db62_identGenerics(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5dde8_buildIdent(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e17e_buildCppLink(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e415_buildFn(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e69b_buildPtr(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e932_buildSptr(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5ebb8_buildSlc(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5ee4e_buildArr(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a601d5_buildMap(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a6046b_buildEnumerable(_1a4a5c9a7_typeBuilder*);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a60702_step(_1a4a5c9a7_typeBuilder*);
inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a60988_build(_1a4a5c9a7_typeBuilder*);
inline void _1a4278b41_pushErr(_1a42785e1_directiveEval*, jule::Ptr<_1a3db8198_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a427903c_splitOperans(_1a42785e1_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Bool _1a427937d_evalDirectiveIdent(_1a42785e1_directiveEval*, jule::Str);
inline jule::Bool _1a42796be_evalDirectivePart(_1a42785e1_directiveEval*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Bool _1a4279955_eval(_1a42785e1_directiveEval*);
inline jule::Ptr<_1a4a61add_JuleImporter> static__1a4a61ed9_New(_1a4277117_CompileInfo);
inline jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _1a4a62270_AllPackages(_1a4a61add_JuleImporter*);
inline void _1a4a626b0_SetModPath(_1a4a61add_JuleImporter*, jule::Str);
inline jule::Str _1a4a62946_GetModPath(_1a4a61add_JuleImporter*);
inline jule::Str _1a4a62c87_ModById(_1a4a61add_JuleImporter*, jule::I64);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4a630c8_GetImport(_1a4a61add_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log _1a4a634c4_ImportPackage(_1a4a61add_JuleImporter*, jule::Str, jule::Bool);
inline void _1a4a6377c_Imported(_1a4a61add_JuleImporter*, jule::Ptr<_1a3e77a60_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1c980bca3_Log _1a4a63bab_isPassBuildDirectives(_1a4a61add_JuleImporter*, jule::Ptr<_1a3dcb73e_Ast>*);
inline jule::Bool _1a7514a66_isCommonOrdered(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>, jule::Ptr<_1a3dee4dc_Struct>);
inline jule::Bool _1a751995b_isCommonOrdered(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a75111c2_orderCommon(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>*);
inline void _1a7516c55_orderCommon(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*);
inline void static__1a4a6795c_orderStructures(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>*);
inline void static__1a4a67b8d_orderVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*);
inline void _1a39c39da_optimizeChild(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a39c3c93_optimizeBodyChildExceptional(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a39c404b_optimizeBodyChild(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a39c4304_optimizeExprModel(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Any*);
inline void _1a39c4502_eliminateFollowed(_1a39c3501_scopeDeadCode*);
inline void _1a39c47aa_pushGoto(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e58ee7_GotoSt>);
inline void _1a39c4a63_pushLabel(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e58b1d_Label>);
inline void _1a39c4d1b_optimizeRangeIter(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e580b2_RangeIter>);
inline void _1a39c50c4_optimizeWhileIter(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e57666_WhileIter>);
inline void _1a39c537c_optimizeInfIter(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e571b0_InfIter>);
inline void _1a39c5635_optimizeConditional(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e56db3_Conditional>);
inline void _1a39c58dd_optimizeMatch(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e5a3b1_Match>);
inline void _1a39c5b96_optimizeAssign(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e59877_Assign>);
inline void _1a39c5e4e_optimizeMultiAssign(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Ptr<_1a3e59c51_MultiAssign>);
inline void _1a39c6207_optimizeStmt(jule::Ptr<_1a39c3501_scopeDeadCode>, jule::Any);
inline void _1a39c6405_optimizeStmts(jule::Ptr<_1a39c3501_scopeDeadCode>);
inline _1a39c778b_exprDeadCode static__1a39c7dc9_new(jule::Ptr<_1a39c3501_scopeDeadCode>*);
inline void _1a39c8182_binary(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline void _1a39c843a_unary(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e06a44_UnaryExprModel>);
inline void _1a39c86e3_structureLit(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e07418_StructLitExprModel>);
inline void _1a39c899b_allocStructure(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e07715_AllocStructLitExprModel>);
inline void _1a39c8c54_casting(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e07c98_CastingExprModel>);
inline void _1a39c900c_args(_1a39c778b_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1a39c92b5_funcCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0864a_FnCallExprModel>);
inline void _1a39c956d_slice(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e08a24_SliceExprModel>);
inline void _1a39c9826_array(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0b95b_ArrayExprModel>);
inline void _1a39c9ace_indexing(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e08eca_IndexingExprModel>);
inline void _1a39c9d87_anonFunc(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e093a4_AnonFnExprModel>);
inline void _1a39ca140_mapExpr(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e09c34_MapExprModel>);
inline void _1a39ca3e8_slicing(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0a2b7_SlicingExprModel>);
inline void _1a39ca6a1_traitSub(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel>);
inline void _1a39ca959_structureSub(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel>);
inline void _1a39cac12_tuple(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0bc58_TupleExprModel>);
inline void _1a39caeba_newCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel>);
inline void _1a39cb273_outCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel>);
inline void _1a39cb52b_outlnCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>);
inline void _1a39cb7d4_panicCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel>);
inline void _1a39cba8c_assertCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel>);
inline void _1a39cbd45_errorCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>);
inline void _1a39cc0ed_makeCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>);
inline void _1a39cc3a6_appendCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel>);
inline void _1a39cc65e_lenCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel>);
inline void _1a39cc917_capCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel>);
inline void _1a39ccbc0_deleteCall(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>);
inline void _1a39cce78_sizeof(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e10520_SizeofExprModel>);
inline void _1a39cd231_alignof(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e1070c_AlignofExprModel>);
inline void _1a39cd4d9_integratedToStr(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel>);
inline void _1a39cd792_free(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e11477_FreeExprModel>);
inline void _1a39cda4a_backendEmit(_1a39c778b_exprDeadCode*, jule::Ptr<_1a3e1117a_BackendEmitExprModel>);
inline void _1a39cdd03_optimize(_1a39c778b_exprDeadCode*, jule::Any*);
inline void _1a41652d0_pushVar(_1a4164d6d_nils*, jule::Uintptr, jule::Bool);
inline jule::Bool _1a4165621_removeVar(_1a4164d6d_nils*, jule::Uintptr);
inline jule::Bool _1a4165962_isSafe(_1a4164d6d_nils*, jule::Uintptr);
inline jule::Ptr<_1a4167aeb_scopeOptimizer> static__1a416816d_new(jule::Ptr<_1a3e5627a_Scope>);
inline void _1a4168426_setCurrentStmt(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Any);
inline void _1a4168624_removeCurrent(jule::Ptr<_1a4167aeb_scopeOptimizer>);
inline jule::Bool _1a41688aa_isLastStmt(jule::Ptr<_1a4167aeb_scopeOptimizer>);
inline jule::Bool _1a4168b41_isIter(jule::Ptr<_1a4167aeb_scopeOptimizer>);
inline void _1a4168de9_optimizeData(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a4028e63_Data>);
inline void _1a41691a2_optimizeVar(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a416945a_optimizeConditional(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e56db3_Conditional>);
inline void _1a4169878_buildDefaultConstantTrueCase(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e5add9_Case>, jule::I64*, jule::Ptr<_1a3e5a3b1_Match>*);
inline void _1a4169b31_optimizeMatch(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e5a3b1_Match>);
inline void _1a4169dd9_optimizeRangeIter(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e580b2_RangeIter>);
inline void _1a416a192_optimizeWhileIter(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e57666_WhileIter>);
inline jule::Bool _1a416a4d3_substr(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59877_Assign>);
inline jule::Bool _1a416a824_strAssign(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59877_Assign>);
inline jule::Bool _1a416ab65_sliceAssign(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59877_Assign>);
inline void _1a416ae1d_optimizePostfix(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e593c1_Postfix>);
inline void _1a416b1c6_optimizeAssign(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59877_Assign>);
inline jule::Bool _1a416b517_tryOptimizeSwap(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59c51_MultiAssign>*);
inline void _1a416b7c0_optimizeMultiAssign(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e59c51_MultiAssign>);
inline void _1a416ba78_optimizeRet(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e5b978_RetSt>);
inline void _1a416bd31_optimizeStmt(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Any);
inline void _1a416c0d9_optimizeChild(jule::Ptr<_1a4167aeb_scopeOptimizer>, jule::Ptr<_1a3e5627a_Scope>);
inline void _1a416c2d7_optimize(jule::Ptr<_1a4167aeb_scopeOptimizer>);
inline void static__1a4170098_optimize(jule::Any*);
inline void static__1a4170384_optimizeData(jule::Any*, jule::Ptr<_1a417c5a0_data>*);
inline jule::Bool _1a41706c5_selfCmpCond(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*);
inline jule::Bool _1a4170a16_boolCond(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*);
inline jule::Bool _1a4170d57_strCond(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline jule::Bool _1a417130d_tryNeutralElement1(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*, jule::Ptr<_1b289b651_Const>, jule::Ptr<_1a3e06170_OperandExprModel>*);
inline jule::Bool _1a417164e_tryNeutralElement(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*);
inline void _1a4171907_checkBinaryForBoundary(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*);
inline void _1a4171bb0_checkBinaryForNil(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>*);
inline void _1a4171e68_binary(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline void _1a4172221_unary(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e06a44_UnaryExprModel>);
inline void _1a41724c9_structureLit(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e07418_StructLitExprModel>);
inline void _1a4172782_allocStructure(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e07715_AllocStructLitExprModel>);
inline void _1a4172a3a_casting(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e07c98_CastingExprModel>);
inline void _1a4172d9d_args(_1a416e949_exprOptimizer*, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>, jule::Slice<jule::Any>*);
inline void _1a4173156_scope(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a417340e_funcCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0864a_FnCallExprModel>);
inline void _1a41736b7_slice(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e08a24_SliceExprModel>);
inline void _1a4173970_array(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0b95b_ArrayExprModel>);
inline void _1a4173c28_indexing(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e08eca_IndexingExprModel>);
inline void _1a4173ed1_anonFunc(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e093a4_AnonFnExprModel>);
inline void _1a4174289_mapExpr(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e09c34_MapExprModel>);
inline void _1a4174542_slicing(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0a2b7_SlicingExprModel>);
inline void _1a41747ea_traitSub(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel>);
inline void _1a4174aa3_structureSub(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel>);
inline void _1a4174d5b_tuple(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0bc58_TupleExprModel>);
inline void _1a4175114_newCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel>);
inline void _1a41753bc_outCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel>);
inline void _1a4175675_outlnCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>);
inline void _1a417592d_panicCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel>);
inline void _1a4175bd6_assertCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel>);
inline void _1a4175e8e_errorCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>);
inline void _1a4176247_makeCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>);
inline void _1a4176500_appendCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel>);
inline void _1a41767a8_lenCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel>);
inline void _1a4176a61_capCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel>);
inline void _1a4176d19_deleteCall(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>);
inline void _1a41770c2_sizeof(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e10520_SizeofExprModel>);
inline void _1a417737a_alignof(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e1070c_AlignofExprModel>);
inline void _1a4177633_integratedToStr(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel>);
inline void _1a41778db_free(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e11477_FreeExprModel>);
inline void _1a4177b94_backendEmit(_1a416e949_exprOptimizer*, jule::Ptr<_1a3e1117a_BackendEmitExprModel>);
inline void _1a4177d92_do(_1a416e949_exprOptimizer*);
inline void _1a4179ab9_pushVar(jule::Ptr<_1a4179657_dynamic>, jule::Uintptr, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a4179e0a_removeVar(_1a4179657_dynamic*, jule::Uintptr);
inline jule::Bool _1a417a306_isFits(_1a4179657_dynamic*, jule::Uintptr, jule::Ptr<_1a4059e2d_TypeKind>);
inline _1a417c0a5_dataCheckpoint _1a417c924_getCheckpoint(_1a417c5a0_data*);
inline void _1a417cbcc_loadCheckpoint(_1a417c5a0_data*, _1a417c0a5_dataCheckpoint*);
inline void _1a417e409_pushVar(_1a417de97_boundary*, jule::Uintptr, jule::Any);
inline jule::Bool _1a417eb46_fitsMaxSize(_1a417de97_boundary*, jule::Uintptr, jule::Any);
inline jule::Ptr<_1a39ce8a3_Optimizer> static__1a39ced26_New(jule::Ptr<_1a4a6456e_IR>*);
inline void _1a39d00ce_optimizeGlobal(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a39d0387_optimizeFunction(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a39d0640_optimizeStruct(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a39d08e8_optimizeGlobals(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39d0ba1_optimizeFunctions(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39d0e59_optimizeStructs(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39d1212_optimizePackage(_1a39ce8a3_Optimizer*, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39d1410_Optimize(_1a39ce8a3_Optimizer*);
inline void static__1a39d1c07_Reset(void);
inline void static__1a3a064e0_Print(jule::Str, jule::Str);
inline void static__1a3a08eb5_LogFlat(_1c980bca3_Log*);
inline void static__1a3a091e6_LogError(_1c980bca3_Log*);
inline void static__1a3a09427_Log(_1c980bca3_Log*);
inline void static__1a3a09658_PrintLogs(jule::Slice<_1c980bca3_Log>*);
inline _1a4e718e3_Time static__1a4e71c9a_Unix(jule::U64);
inline _1a4e718e3_Time static__1a4e71ea9_Now(void);
inline _1a4e7121c_AbsTime _1a4e73692_Abs(_1a4e718e3_Time*);
inline jule::Ptr<_1a4e5d4a1_scopeCoder> static__1a4e5dade_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>*);
inline void _1a8707ae3_iterHead(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e580b2_RangeIter>*, jule::Bool*, jule::Str);
inline void _1a4e5e2b5_rangeIndexIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e580b2_RangeIter>*);
inline void _1a4e5e56d_rangeHashmapIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e580b2_RangeIter>*);
inline void _1a4e5e826_strRuneIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a4163751_StrRuneIter>);
inline void _1a4e5eace_ifCase(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e56698_If>);
inline void _1a4e5ed87_conditional(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e56db3_Conditional>);
inline void _1a4e60140_infIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e571b0_InfIter>);
inline void _1a4e603e8_whileIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e57666_WhileIter>);
inline void _1a4e606a1_rangeIter(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e580b2_RangeIter>);
inline void _1a4e60959_cont(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e58447_ContSt>);
inline void _1a4e60c12_label(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e58b1d_Label>);
inline void _1a4e60eba_gotoSt(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e58ee7_GotoSt>);
inline void _1a4e61273_postfix(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e593c1_Postfix>);
inline void _1a4e6152b_assign(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e59877_Assign>);
inline void _1a4e617d4_mapLookupAssign(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e59c51_MultiAssign>*);
inline void _1a4e61a8c_multiAssignTup(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e59c51_MultiAssign>*);
inline void _1a4e61d45_multiAssignFn(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e59c51_MultiAssign>*);
inline void _1a4e620ed_multiAssign(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e59c51_MultiAssign>);
inline jule::Fn<void(void)> _1a4e6243e_matchExpr(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5a3b1_Match>);
inline void _1a4e627a2_case(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5a3b1_Match>, jule::Ptr<_1a3e5add9_Case>);
inline void _1a4e62a5a_matchSt(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5a3b1_Match>);
inline void _1a4e62d13_fallSt(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5b5d2_FallSt>);
inline void _1a4e630bb_breakSt(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e58821_BreakSt>);
inline void _1a4e63374_setResult(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5b978_RetSt>);
inline void _1a4e6362c_retSt(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5b978_RetSt>);
inline void _1a4e638d5_var(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a4e63b8d_mutSlicing(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a4162442_MutSlicingExprModel>);
inline void _1a4e63e46_swap(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a41611dd_SwapExprModel>);
inline void _1a4e641ee_exceptionalForwarding(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a4160d58_ExceptionalForwardingExprModel>);
inline void _1a4e644a7_st(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Any);
inline void _1a4e64760_scopeStmts(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5627a_Scope>*);
inline void _1a4e64a18_scope(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e5627a_Scope>);
inline void _1a4e64cc1_funcScope(jule::Ptr<_1a4e5d4a1_scopeCoder>, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Ptr<_1a427aa11_exprCoder> static__1a4589b99_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>*);
inline void _1a4589d42_string(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1b289b651_Const>*);
inline void _1a456108d_boolean(jule::Ptr<_1a427aa11_exprCoder>, jule::Bool);
inline void _1a4561269_nilLit(jule::Ptr<_1a427aa11_exprCoder>);
inline jule::Bool _1a455e597_ftoaSpecialCases(jule::Ptr<_1a427aa11_exprCoder>, jule::F64*);
inline void _1a455e850_float32(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1b289b651_Const>*);
inline void _1a4560686_float64(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1b289b651_Const>*);
inline void _1a456093e_constant(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1b289b651_Const>);
inline void _1a4595ea2_divByZeroBinary(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3db8198_Token>*, jule::Ptr<_1a3e06170_OperandExprModel>*, jule::Ptr<_1a3e06170_OperandExprModel>*);
inline void _1a459625a_unsafeBinary(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline void _1a4596513_binary(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline void _1a45967bb_var(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a4596a74_structureIns(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0226a_StructIns>);
inline void _1a4596d2c_unary(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e06a44_UnaryExprModel>);
inline void _1a45970d5_structureLit(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e07418_StructLitExprModel>);
inline void _1a459738d_allocStructure(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e07715_AllocStructLitExprModel>);
inline void _1a4597646_possibleRefExpr(jule::Ptr<_1a427aa11_exprCoder>, jule::Any);
inline void _1a4597a64_castTraitFromTrait(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e07c98_CastingExprModel>*, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3e276ad_Trait>);
inline void _1a4597d1c_casting(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e07c98_CastingExprModel>);
inline void _1a45980c5_models(jule::Ptr<_1a427aa11_exprCoder>, jule::Slice<jule::Any>);
inline void _1a459837d_args(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>*);
inline void _1a4598636_modelForCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Any);
inline void _1a45988de_pushCallInf(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>*);
inline jule::Bool _1a4598c30_isWrapped(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>*);
inline jule::Bool _1a4599071_writeReceiver(jule::Ptr<_1a427aa11_exprCoder>, jule::Any);
inline void _1a4599329_pureFuncCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>*);
inline void _1a45995d2_coFuncCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>*);
inline void _1a4599945_writeUseExpr(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a4028e63_Data>);
inline void _1a4599bed_funcCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0864a_FnCallExprModel>);
inline void _1a4599ea6_slice(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e08a24_SliceExprModel>);
inline void _1a459a25e_indexing(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e08eca_IndexingExprModel>);
inline void _1a459a517_unsafeIndexing(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4162ac4_UnsafeIndexingExprModel>);
inline void _1a459a7c0_anonFunc(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e093a4_AnonFnExprModel>);
inline void _1a459aa78_mapExpr(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e09c34_MapExprModel>);
inline void _1a459ad31_slicing(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0a2b7_SlicingExprModel>);
inline void _1a459b0d9_traitSub(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel>);
inline void _1a459b392_structureSub(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel>);
inline void _1a459b64a_array(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0b95b_ArrayExprModel>);
inline void _1a459b903_funcInsCommon(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a459bbab_funcIns(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a459be64_tuple(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0bc58_TupleExprModel>);
inline void _1a459c21c_newCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel>);
inline void _1a459c4c5_outCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel>);
inline void _1a459c77d_outlnCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>);
inline void _1a459ca36_panicCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel>);
inline void _1a459ccde_assertCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel>);
inline void _1a459d097_errorCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>);
inline void _1a459d350_copyCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0e992_BuiltinCopyCallExprModel>);
inline void _1a459d608_lenCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel>);
inline void _1a459d8b1_capCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel>);
inline void _1a459db69_deleteCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>);
inline void _1a459de22_makeCallSlice(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>*);
inline void _1a459e1ca_makeCallStr(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>*);
inline void _1a459e483_makeCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>);
inline void _1a459e73b_pushToSlice(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4162e9d_PushToSliceExprModel>);
inline void _1a459e9e4_appendToSlice(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4163377_AppendToSliceExprModel>);
inline void _1a459ec9c_appendCall(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel>);
inline void _1a45a0055_sizeof(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e10520_SizeofExprModel>);
inline void _1a45a030d_alignof(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e1070c_AlignofExprModel>);
inline void _1a45a05b6_runeLit(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e109a4_RuneExprModel>);
inline void _1a45a086e_structureStatic(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e0b582_StructStaticIdentExprModel>);
inline void _1a45a0b27_integratedToStr(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel>);
inline void _1a45a0dd0_backendEmit(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e1117a_BackendEmitExprModel>);
inline void _1a45a1188_free(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a3e11477_FreeExprModel>);
inline void _1a45a1441_strComp(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4161dae_StrCompExprModel>);
inline void _1a45a16e9_emptyCompare(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a41615b7_EmptyCompareExprModel>);
inline void _1a45a19a2_unsafeDeref(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4163a4d_UnsafeDerefExprModel>);
inline void _1a45a1c5a_unsafeCasting(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4163d4a_UnsafeCastingExprModel>);
inline void _1a45a2013_model(jule::Ptr<_1a427aa11_exprCoder>, jule::Any);
inline void _1a45a22bb_initExpr(jule::Ptr<_1a427aa11_exprCoder>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a45a5500_TestCoder> static__1a45a5973_New(jule::Ptr<_1a4e7ad4d_ObjectCoder>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a45a5c09_findTestingPackage(jule::Ptr<_1a45a5500_TestCoder>);
inline void _1a45a5eb2_appendTest(jule::Ptr<_1a45a5500_TestCoder>, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a45a626a_appendPackageTests(jule::Ptr<_1a45a5500_TestCoder>, jule::Ptr<_1a3e7a986_Package>*);
inline jule::Bool _1a45a6501_readyTestingPackage(jule::Ptr<_1a45a5500_TestCoder>);
inline void _1a45a66ee_callTmReset(jule::Ptr<_1a45a5500_TestCoder>);
inline void _1a45a68ec_callTmFailed(jule::Ptr<_1a45a5500_TestCoder>);
inline void _1a45a6aea_callTmSkipped(jule::Ptr<_1a45a5500_TestCoder>);
inline void _1a45a6ce8_Serialize(jule::Ptr<_1a45a5500_TestCoder>);
inline void static__1a45a8866_writeIdentTo(_1c9754d1c_StrBuilder*, jule::Str*);
inline void static__1a45a8c0c_toOut(_1c9754d1c_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1a45a915d_toLocal(_1c9754d1c_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1a45a9449_func(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3e143d1_Fn>*);
inline void static__1a45a9735_funcIns(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void static__1a45a9a21_traitDecl(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3e276ad_Trait>);
inline void static__1a45a9d0c_param(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3e1290c_Param>*);
inline void static__1a45aa0e8_structure(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3dee4dc_Struct>*);
inline void static__1a45aa3d4_structureIns(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3e0226a_StructIns>*);
inline void static__1a45aa6c0_field(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3deb5b6_Field>*);
inline void static__1a45aa9ab_var(_1c9754d1c_StrBuilder*, jule::Ptr<_1a3ebac4b_Var>);
inline void static__1a45aac97_iterBegin(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline void static__1a45ab083_iterEnd(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline void static__1a45ab36e_iterNext(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline void static__1a45ab65a_label(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline void static__1a45ab946_matchEnd(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline void static__1a45abc32_caseBegin(_1c9754d1c_StrBuilder*, jule::Uintptr);
inline jule::Str _1a4e8a8da_Str(_1a4e8a555_customType*);
inline jule::Bool _1a4e8ac2b_Equal(jule::Ptr<_1a4e8a555_customType>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4e8b15a_typeCoder> static__1a4e8b699_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>*);
inline void _1a4e8ba0c_toType(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Str);
inline void _1a4e8bd70_prim(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4062a07_Prim>);
inline void _1a4e8c1d3_tuple(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4067aea_Tuple>);
inline void _1a4e8c546_asSptr(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Slice<jule::U8>);
inline void _1a4e8c8a9_sptr(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4066533_Sptr>);
inline void _1a4e8cc1c_ptr(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4069cea_Ptr>);
inline void _1a4e8d080_enumDecl(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e29db9_Enum>);
inline void _1a4e8d3e3_typeEnumDecl(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e2b5c4_TypeEnum>);
inline void _1a4e8d756_asSlice(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a4e8dab9_slice(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4067006_Slc>);
inline void _1a4e8de2c_mapType(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a406869a_Map>);
inline void _1a4e8e603_traitDecl(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e276ad_Trait>);
inline void _1a4e8e966_structure(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3dee4dc_Struct>);
inline void _1a4e8ecc9_structureIns(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e0226a_StructIns>);
inline void _1a4e9013c_array(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4069327_Arr>);
inline void _1a4e90813_paramIns(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e16339_ParamIns>*);
inline void _1a4e90ed9_funcInsResult(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a4e9134c_anonFunc(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a4e916b0_func(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a4e91a23_kind(_1a4e8b15a_typeCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4e9443d_resultCoder> static__1a4e94916_new(jule::Ptr<_1a4e8b15a_typeCoder>*);
inline void _1a4e94c79_ptr(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4069cea_Ptr>);
inline void _1a4e950dc_sptr(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4066533_Sptr>);
inline void _1a4e95450_mapType(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a406869a_Map>);
inline void _1a4e957b3_slice(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4067006_Slc>);
inline void _1a4e95b26_arr(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4069327_Arr>);
inline void _1a4e95e89_func(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a4e962ec_tup(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4067aea_Tuple>);
inline void _1a4e96660_codeMut(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a4e969c3_codeMut1(_1a4e9443d_resultCoder*, _1c9754d1c_StrBuilder*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Slice<jule::U8> _1a4e96cd1_code(_1a4e9443d_resultCoder*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Str _1a8b4e5cd_Name(_1a8b4e743_Flag*);
inline jule::Str _1a8b4ea2e_What(_1a8b4e743_Flag*);
inline void _1a8b4eb72_Reset(_1a8b4e743_Flag*);
inline jule::I32 _1a8b4ecc6_Short(_1a8b4e743_Flag*);
inline jule::Str _1a8b52c0d_Name(_1a8b53093_Flag*);
inline jule::Str _1a8b5337e_What(_1a8b53093_Flag*);
inline void _1a8b534c2_Reset(_1a8b53093_Flag*);
inline jule::I32 _1a8b53615_Short(_1a8b53093_Flag*);
inline jule::Str _1a8b563b5_Name(_1a8b5674a_Flag*);
inline jule::Str _1a8b56a36_What(_1a8b5674a_Flag*);
inline void _1a8b56b79_Reset(_1a8b5674a_Flag*);
inline jule::I32 _1a8b56cbc_Short(_1a8b5674a_Flag*);
inline jule::Str _1a8b59ab1_Name(_1a8b59e46_Flag*);
inline jule::Str _1a8b5a232_What(_1a8b59e46_Flag*);
inline void _1a8b5a375_Reset(_1a8b59e46_Flag*);
inline jule::I32 _1a8b5a4b8_Short(_1a8b59e46_Flag*);
inline jule::Str _1a8b5d268_Name(_1a8b5d5ed_Flag*);
inline jule::Str _1a8b5d8d9_What(_1a8b5d5ed_Flag*);
inline void _1a8b5da2c_Reset(_1a8b5d5ed_Flag*);
inline jule::I32 _1a8b5db70_Short(_1a8b5d5ed_Flag*);
inline jule::Ptr<_1a500e95e_FlagSet> static__1a500ec4a_New(void);
inline jule::Trait<_1a500cd8b_CommonFlag> _1a5010201_FindFlag(_1a500e95e_FlagSet*, jule::Str);
inline jule::Trait<_1a500cd8b_CommonFlag> _1a5010542_FindFlagShort(_1a500e95e_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a5010b19_Parse(_1a500e95e_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1a8b5d5ed_Flag> _1a8d37134_addFlagCommon(_1a500e95e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a8b59e46_Flag> _1a8d3e04d_addFlagCommon(_1a500e95e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a8d34d8a_AddVar(_1a500e95e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a8d3bce8_AddVar(_1a500e95e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1a8b71435_parseInteger(_1a5012423_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1a8b78c12_parseInteger(_1a5012423_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a5012c3c_getData(_1a5012423_argParser*);
inline jule::VoidExceptional _1a5012eb2_processFlag(_1a5012423_argParser*, jule::Trait<_1a500cd8b_CommonFlag>*);
inline jule::VoidExceptional _1a501326a_singleDash(_1a5012423_argParser*, jule::Str*);
inline jule::VoidExceptional _1a5013523_doubleDash(_1a5012423_argParser*, jule::Str*);
inline jule::VoidExceptional _1a5013721_tryArg(_1a5012423_argParser*);
inline jule::VoidExceptional _1a501391e_parse(_1a5012423_argParser*);
inline jule::Ptr<_1a4e7ad4d_ObjectCoder> static__1a4e7b249_New(jule::Ptr<_1a4a6456e_IR>*, _1a4e79335_SerializationInfo);
inline void _1a4e7b502_write(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Str);
inline void _1a4e7b7aa_writeBytes(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1a4e7b9a8_addIndent(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7bba6_doneIndent(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7bda4_indent(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline jule::I64 _1a4e7c1e5_findAnyType(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::I64 _1a4e7c536_pushAnyType(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a4e7c7de_pushResultIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a4e7ca97_pushResult(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e143d1_Fn>*);
inline jule::I64 _1a4e7ce93_findTypeOffsetS(_1a4e7ad4d_ObjectCoder*, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3e0226a_StructIns>);
inline jule::I64 _1a4e7d38e_findTypeOffset(_1a4e7ad4d_ObjectCoder*, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a4059e2d_TypeKind>);
inline void _1a4e7d702_pushAndWriteMaskMapper(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3e276ad_Trait>);
inline void _1a4e7d9aa_locInfo(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3db8198_Token>*);
inline void _1a4e7dba8_head(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7dda6_links(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7e15e_prepareStructure(_1a4e7ad4d_ObjectCoder*, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a4e7e35c_prepareStructures(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7e615_iterPackages(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>);
inline void _1a4e7e813_buildTraitMap(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7ea11_traitDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e7ecb9_structurePlainDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a4e7eeb7_structurePlainDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e80270_fieldDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e016ba_FieldIns>*);
inline void _1a4e80528_structureDestructor(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e8088b_structureOperatorEq(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e80bee_structureOperatorNotEq(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e8111c_structureOperator(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Str);
inline void _1a4e813c5_structureOperators(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e8167d_structureInsDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e81936_structureDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a4e81b34_structureDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e81d32_structureMethodDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e820da_paramsDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>*);
inline void _1a4e8244d_funcHead(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Bool);
inline void _1a4e827b1_funcDeclIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Bool);
inline void _1a4e82b24_funcDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e143d1_Fn>*, jule::Bool);
inline void _1a4e83042_funcDeclTrait(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a3e143d1_Fn>*, jule::Bool);
inline void _1a4e83240_funcDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e835a3_traitDataTypeMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a4e837a1_traitDataTypes(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e83a59_paramIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e16339_ParamIns>*);
inline void _1a4e83d12_paramsIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>*);
inline void _1a4e84175_varInitExpr(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3ebac4b_Var>*, jule::Fn<void(void)>);
inline void _1a4e8442d_var(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a4e846d6_funcIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a4e8498e_func(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a4e84d02_funcTrait(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a4e7990c_traitHash>*, jule::Ptr<_1a3e143d1_Fn>*);
inline void _1a4e85165_traitWrapper(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e143d1_Fn>*, jule::Ptr<_1a4e7990c_traitHash>*);
inline void _1a4e85363_traitWrappers(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e856c6_traitDataMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a4e7990c_traitHash>*);
inline void _1a4e85a39_traitData(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a4e7990c_traitHash>*, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a4e85c37_traitDatas(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e85e35_globals(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e86133_decls(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e863db_structureMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e86694_structureOstream(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e8694c_structureIns(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e0226a_StructIns>*);
inline void _1a4e86c05_structure(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a4e86e03_structures(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e87101_funcs(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e873a9_pushInit(jule::Ptr<_1a4e7ad4d_ObjectCoder>, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a4e875a7_initCaller(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e877a5_end(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e879a3_serializeHead(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline void _1a4e87ba1_Serialize(jule::Ptr<_1a4e7ad4d_ObjectCoder>);
inline jule::Ptr<_1a39bdc16_ObjectDeadCode> static__1a39be1ab_new(jule::Ptr<_1a4a6456e_IR>*);
inline jule::Bool _1a7544eb4_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a754a915_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Bool _1a7553c4d_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e0226a_StructIns>*);
inline jule::Bool _1a7558a22_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3ebac4b_Var>*);
inline void _1a754538d_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e276ad_Trait>);
inline void _1a754acde_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e172d5_FnIns>);
inline void _1a7551cc3_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e0226a_StructIns>);
inline void _1a7558deb_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3ebac4b_Var>);
inline void _1a39bea5d_setReferencesAsLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e1a4a3_ReferenceStack>*);
inline void _1a39bed16_inits(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39c00be_collectLivePackage(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39c02bc_collectLive(jule::Ptr<_1a39bdc16_ObjectDeadCode>);
inline void _1a39c0575_removeDeadGlobals(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*);
inline void _1a39c082d_removeDeadFns(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>*);
inline void _1a39c0ad6_removeDeadStructs(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>*);
inline void _1a39c0d8e_removeDeadTraits(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a3e276ad_Trait>>*);
inline void _1a39c1147_removeDeadsFile(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a4023aea_SymbolTable>*);
inline void _1a39c1400_removeDeadsPackage(jule::Ptr<_1a39bdc16_ObjectDeadCode>, jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39c15ed_removeDeads(jule::Ptr<_1a39bdc16_ObjectDeadCode>);
inline void _1a39c17eb_elimanate(jule::Ptr<_1a39bdc16_ObjectDeadCode>);
inline __jule_tuple_x_1a4a6456e_IR__jule_tuple_s_1c980bca3_Log static__1a4a64a14_Build(jule::Str, jule::I64);
inline void _1a4a64eed_appendStructs(_1a4a6456e_IR*, jule::Ptr<_1a3e7a986_Package>*, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>*);
inline jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _1a4a65284_GetAllStructures(_1a4a6456e_IR*);
inline void _1a4a655e7_appendGlobals(_1a4a6456e_IR*, jule::Ptr<_1a3e7a986_Package>*, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*);
inline jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _1a4a6587d_GetAllGlobals(_1a4a6456e_IR*);
inline void _1a4a65a7b_Order(_1a4a6456e_IR*);
inline jule::Str _1a3e025de_Str(_1a3e0226a_StructIns*);
inline jule::Bool _1a3e02930_Equal(jule::Ptr<_1a3e0226a_StructIns>, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a3e02dd6_Same(_1a3e0226a_StructIns*, jule::Ptr<_1a3e0226a_StructIns>);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e032d2_FindMethod(_1a3e0226a_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1a3e016ba_FieldIns> _1a3e03623_FindField(_1a3e0226a_StructIns*, jule::Str);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e03964_FindStatic(_1a3e0226a_StructIns*, jule::Str);
inline jule::Ptr<_1c9034311_Cmd> static__1c903472e_New(jule::Str);
inline jule::VoidExceptional _1c903492c_Spawn(_1c9034311_Cmd*);
inline jule::Exceptional<jule::I64> _1c9034db1_Wait(_1c9034311_Cmd*);
inline jule::VoidExceptional _1c9088c8e_spawn(_1c9034311_Cmd*);
inline jule::Exceptional<jule::I64> _1c9089223_wait(_1c9034311_Cmd*);
inline void _20c003ba4_Free(void*);
inline jule::Str _20c034498_BytePtrToStr(jule::U8*);
inline jule::Slice<jule::U8> _20c03472e_StrToBytes(jule::Str);
inline jule::I64 _20be99584_GetLastErrno(void);
inline jule::I64 _20c044013_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _20c044387_Stat(jule::U8*, struct stat*);
inline jule::I64 _20c0447b6_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _20c044b3a_Getcwd(jule::U8*, jule::U64);
inline DIR* _20c045135_Opendir(jule::U8*);
inline struct dirent* _20c045311_Readdir(DIR*);
inline jule::I64 _20c0455a8_Closedir(DIR*);
inline jule::I64 _20c045eb0_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _20c046279_Rmdir(jule::U8*);
inline jule::I64 _20c046543_Unlink(jule::U8*);
inline jule::I64 _20c056de4_Read(jule::I64, void*, jule::U64);
inline jule::I64 _20c0572bd_Close(jule::I64);
inline jule::I64 _20c057675_Write(jule::I64, void*, jule::U64);
inline void _20c0578a6_Exit(jule::I64);
inline jule::Str _20c12b6d3_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1a56246c2_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _20c13747a_StrBytes(jule::Str);
inline jule::Str _20c137711_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _20c1379ca_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I64 _20c1616d5_getLastOsError(void);
inline jule::Slice<jule::Str> _20c162681_Args(void);
inline jule::Exceptional<jule::Str> _20c162ae3_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20c16352d_getwd(void);
inline jule::Bool _1c957d629_IsLetter(jule::I32);
inline jule::Bool _1c95e3b67_is16(jule::Slice<_1c95e1dc9_Range16>, jule::U16);
inline jule::Bool _1c95e3edb_is32(jule::Slice<_1c95e2407_Range32>, jule::U32);
inline jule::Bool _1c95e47e4_isExcludingLatin(jule::Ptr<_1c95e287a_RangeTable>, jule::I32);
inline jule::Bool _1c95e4a36_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1c96eb610_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1c96eb951_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1c96ebea1_DecodeLastRuneStr(jule::Str);
inline jule::Slice<jule::U8> _1c96ec9eb_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1c96ecd70_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1c96ed403_RuneCountStr(jule::Str);
inline jule::Bool _1c96ed6bc_RuneStart(jule::U8);
inline jule::I64 _1c973e4dd_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I64 _1c973eb1a_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1c973ee8e_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1c974028b_Repeat(jule::Str, jule::I64);
inline jule::Bool _1c974070e_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1c9740a83_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1c9741039_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1c974137a_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1c97417a9_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1c9741b2d_Find(jule::Str, jule::Str);
inline jule::I64 _1c974216c_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1c9742469_FindLast(jule::Str, jule::Str);
inline jule::I64 _1c9743bb8_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1c974426d_FindRune(jule::Str, jule::I32);
inline jule::I64 _1c9744856_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1c9745109_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1c974547d_Contains(jule::Str, jule::Str);
inline jule::Bool _1c9745eea_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1c974636e_Count(jule::Str, jule::Str);
inline jule::Str _1c9746858_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline jule::Str _1c97475d4_TrimLeft(jule::Str, jule::Str);
inline jule::Str _1c9747958_TrimRight(jule::Str, jule::Str);
inline jule::Str _1c9748063_Trim(jule::Str, jule::Str);
inline jule::Str _1c9748393_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1c97617a7_Clean(jule::Str);
inline jule::Str _1c9761d7e_FromSlash(jule::Str);
inline jule::Str _1c97621c0_Join(jule::Slice<jule::Str>);
inline jule::Str _1c9762456_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c9762720_Abs(jule::Str);
inline jule::Str _1c97629d9_Base(jule::Str);
inline jule::Str _1c9762db3_Dir(jule::Str);
inline jule::Str _1c9763105_VolumeName(jule::Str);
inline jule::Bool _1c976404b_IsPathSep(jule::U8);
inline jule::Bool _1c9764359_IsAbs(jule::Str);
inline jule::I64 _1c9764623_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c9764964_abs(jule::Str);
inline jule::Str _1c9764bea_join(jule::Slice<jule::Str>);
inline jule::I64 _20c0770ac_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1c907b226_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1c908484a_Itoa(jule::I64);
inline jule::Str _1c9084b58_Utoa(jule::U64);
inline void _1c9084d89_rev(jule::Slice<jule::U8>*);
inline jule::Slice<char*> _1c9088486_strSliceToCstrSlice(jule::Slice<jule::Str>*, jule::Slice<jule::Slice<jule::U8>>*);
inline jule::I64 _1c908880a_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1c9088a3b_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1c90899b5_processErrorFromCode(jule::I64);
inline jule::I64 _1c9089c18_getLastProcessError(void);
inline void _1c908a532_Exit(jule::I64);
inline jule::Str _1c908a741_Executable(void);
inline jule::Bool _1c97ee724_IsStdHeaderPath(jule::Str);
inline jule::Bool _1c97ee9ee_IsValidHeaderExt(jule::Str);
inline jule::Bool _1c97eecb8_IsValidCppExt(jule::Str);
inline jule::Str _1c980c215_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c980c523_argToStr(jule::Any);
inline jule::I64 _1c980c7dc_findNextFmt(jule::Str);
inline jule::Str _1c980cba5_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c980da0d_IsTopDirective(jule::Str);
inline jule::Bool _1c980ee2c_IsWindows(jule::Str);
inline jule::Bool _1c981023a_IsDarwin(jule::Str);
inline jule::Bool _1c9810504_IsLinux(jule::Str);
inline jule::Bool _1c9810845_IsI386(jule::Str);
inline jule::Bool _1c9810acb_IsAmd64(jule::Str);
inline jule::Bool _1c9810d95_IsArm64(jule::Str);
inline jule::Bool _1c981115e_IsUnix(jule::Str);
inline jule::Bool _1c9811538_Is32Bit(jule::Str);
inline jule::Bool _1c981177a_Is64Bit(jule::Str);
inline void _1c908bad8_init(void);
inline jule::I64 _1b28302e9_LeadingZeros64(jule::U64);
inline jule::I64 _1b2831240_TrailingZeros(jule::U64);
inline jule::I64 _1b2831b25_TrailingZeros32(jule::U32);
inline jule::I64 _1b2831dde_TrailingZeros64(jule::U64);
inline jule::I64 _1b28378b7_Len32(jule::U32);
inline jule::I64 _1b2837b81_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1b283891d_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1b283a227_Mul64(jule::U64, jule::U64);
inline jule::U32 _1b1b3184e_F32Bits(jule::F32);
inline jule::F32 _1b1b31b5c_F32FromBits(jule::U32);
inline jule::U64 _1b1b31e26_F64Bits(jule::F64);
inline jule::F64 _1b1b32267_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1b1b347ca_Frexp(jule::F64);
inline jule::F64 _1b2842361_NaN(void);
inline jule::Bool _1b284266e_IsNaN(jule::F64);
inline jule::F64 _1b2842938_Inf(jule::I64);
inline jule::Bool _1b2842d01_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1b28430ba_normalize(jule::F64);
inline jule::F64 _1b2844a8e_Log(jule::F64);
inline jule::F64 _1b2845474_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1b284c04c_Modf(jule::F64);
inline jule::F64 _1b284c855_Log2(jule::F64);
inline jule::Str _1b2876780_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1b2876d68_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1b2877572_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1b2875570_floatInfo*);
inline jule::Slice<jule::U8> _1b2877c48_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1b28761ec_decimalSlice, jule::I64, jule::U8);
inline void _1b2878166_roundShortest(_1b2888e57_decimal*, jule::U64, jule::I64, _1b2875570_floatInfo*);
inline jule::Slice<jule::U8> _1b287870a_fmtE(jule::Slice<jule::U8>, jule::Bool, _1b28761ec_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1b2878be4_fmtF(jule::Slice<jule::U8>, jule::Bool, _1b28761ec_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1b2879398_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1b2875570_floatInfo*);
inline jule::Slice<jule::U8> _1b2879a2a_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1b2875570_floatInfo*);
inline jule::I64 _1b2879d9e_min(jule::I64, jule::I64);
inline jule::I64 _1b287a223_max(jule::I64, jule::I64);
inline jule::U8 _1b287adb1_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1b14a08b6_ConvError _1b287b334_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1b287b763_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1b287bc19_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1b287c8c9_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1b287cd4c_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1b287eb2e_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b287ee3c_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b2880206_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1b2881c52_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1b2882181_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1b14a08b6_ConvError _1b2882725_atofHex(_1b2875570_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b2882aee_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b2882d41_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b28831b5_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1b2883539_ParseFloat(jule::Str, jule::I64);
inline void _1b2883db9_ryuFtoaFixed32(_1b28761ec_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1b288435e_ryuFtoaFixed64(_1b28761ec_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1b2884b9a_formatDecimal(_1b28761ec_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1b2885173_ryuFtoaShortest(_1b28761ec_decimalSlice*, jule::U64, jule::I64, _1b2875570_floatInfo*);
inline jule::I64 _1b2885409_mulByLog2Log10(jule::I64);
inline jule::I64 _1b28856c3_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b2885b02_computeBounds(jule::U64, jule::I64, _1b2875570_floatInfo*);
inline void _1b2886251_ryuDigits(_1b28761ec_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1b28868c2_ryuDigits32(_1b28761ec_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b2886d01_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b2887230_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1b28875a4_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1b288786d_divmod1e9(jule::U64);
inline void _1b288a7a5_trim(_1b2888e57_decimal*);
inline void _1b288aa91_rightShift(_1b2888e57_decimal*, jule::U64);
inline jule::Bool _1b288b047_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1b288b300_leftShift(_1b2888e57_decimal*, jule::U64);
inline jule::Bool _1b288b674_shouldRoundUp(_1b2888e57_decimal*, jule::I64);
inline jule::Str _1b288ce06_FmtUint(jule::U64, jule::I64);
inline jule::Str _1b288d2be_FmtInt(jule::I64, jule::I64);
inline jule::Str _1b288d588_Itoa(jule::I64);
inline jule::Str _1b288d8c9_small(jule::I64);
inline jule::Bool _1b288db60_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1b288e204_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1b2890700_RealKindOf(jule::Str);
inline jule::I64 _1b28909b9_BitsizeOf(jule::Str);
inline jule::Str _1b2890d0a_IntFromBits(jule::I64);
inline jule::Str _1b2891091_UintFromBits(jule::I64);
inline jule::Str _1b289135a_FloatFromBits(jule::I64);
inline jule::Bool _1b2891e60_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1b2892229_BitsizeOfFloat(jule::F64);
inline jule::I64 _1b28924e3_BitsizeOfInt(jule::I64);
inline jule::I64 _1b28927ac_BitsizeOfUint(jule::U64);
inline void _1b2892955_UpdateTarget(void);
inline void _1b2892acb_init(void);
inline jule::I64 _1b2896739_MinI(jule::Str);
inline jule::I64 _1b2896a47_MaxI(jule::Str);
inline jule::U64 _1b2896d11_MaxU(jule::Str);
inline jule::F64 _1b2897152_Min(jule::Str);
inline jule::F64 _1b28973d8_Max(jule::Str);
inline jule::Bool _1b289788e_IsI16Greater(jule::Str);
inline jule::Bool _1b2897b9c_IsI32Greater(jule::Str);
inline jule::Bool _1b2897e66_IsI64Greater(jule::Str);
inline jule::Bool _1b28982a7_IsU16Greater(jule::Str);
inline jule::Bool _1b289853d_IsU32Greater(jule::Str);
inline jule::Bool _1b2898807_IsU64Greater(jule::Str);
inline jule::Bool _1b2898ac1_IsF32Greater(jule::Str);
inline jule::Bool _1b2898e9a_IsF64Greater(jule::Str);
inline jule::Bool _1b2899297_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1b289a40d_IsSigInt(jule::Str);
inline jule::Bool _1b289a71b_IsUnsigInt(jule::Str);
inline jule::Bool _1b289a9d5_IsInt(jule::Str);
inline jule::Bool _1b289ad26_IsFloat(jule::Str);
inline jule::Bool _1b289b0ac_IsNum(jule::Str);
inline jule::Bool _1b289b376_IsSigNum(jule::Str);
inline void _1b28a566b_lshiftUnsig(_1b289b651_Const*, _1b289b651_Const*);
inline void _1b28a599b_rshiftUnsig(_1b289b651_Const*, _1b289b651_Const*);
inline jule::Bool _1a3db88d5_IsUnaryOp(jule::U64);
inline jule::Bool _1a3db8be3_IsBinOp(jule::U64);
inline jule::Bool _1a3db92ed_IsStr(jule::Str);
inline jule::Bool _1a3db9584_IsRawStr(jule::Str);
inline jule::Bool _1a3db984d_IsRune(jule::Str);
inline jule::Bool _1a3dba233_IsFloat(jule::Str);
inline jule::Bool _1a3dba4ec_IsNum(jule::Str);
inline jule::Bool _1a3dbaa80_IsIgnoreIdent(jule::Str);
inline jule::Bool _1a3dbad49_IsAnonIdent(jule::Str);
inline jule::Bool _1a3dbb3cc_IsSpace(jule::I32);
inline jule::Bool _1a3dbb8c7_IsLetter(jule::I32);
inline jule::Bool _1a3dbbd4a_IsDecimal(jule::U8);
inline jule::Bool _1a3dbc114_IsBinary(jule::U8);
inline jule::Bool _1a3dbc3cd_IsOctal(jule::U8);
inline jule::Bool _1a3dbc697_IsHex(jule::U8);
inline jule::Bool _1a3dbc961_IsAssign(jule::U64);
inline jule::Bool _1a3dbcc2a_IsPostfixOp(jule::U64);
inline jule::Bool _1a3dbcee4_IsAssignOp(jule::U64);
inline jule::Ptr<_1a3dbd92e_File> _1a3dbed09_NewFileSet(jule::Str);
inline _1c980bca3_Log _1a3dc1833_makeErr(jule::I64, jule::I64, jule::Ptr<_1a3dbd92e_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3dc1beb_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1a3dc2070_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc2438_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc27ac_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc2b31_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc2ea5_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc3439_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc367b_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc3945_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1a3dc3cb9_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1a3dc413d_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1a3dc44b2_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1a3dc4836_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1a3dc4baa_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc51a5_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc5381_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc56d3_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a3dc599c_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc5c66_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc6030_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a3dc62e9_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1c980bca3_Log> _1a3dcb2dd_Lex(jule::Ptr<_1a3dbd92e_File>, jule::I64);
inline jule::Bool _1a3e940cb_FindModuleFile(jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>*);
inline jule::Str _1a3e94384_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1c980bca3_Log> _1a3e9464d_CheckModuleFile(jule::Str*);
inline jule::Bool _1a3e94e9a_IsPub(jule::Str);
inline jule::Bool _1a3ee2965_IsAscii(jule::I32);
inline jule::I32 _1a400d1cd_ToRune(jule::Str);
inline jule::Str _1a400d3ed_ToRawStr(jule::Str);
inline jule::Str _1a400d73e_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1a400d9c5_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1a400dd49_runeFromEsqSeq(jule::Str, jule::I64*);
inline void _1a400e1e0_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I64*);
inline jule::I64 _1a395bc92_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1a395c15a_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1a395c446_FmtByDefault(_1c9754d1c_StrBuilder*, jule::Any*);
inline void _1a395c864_applyFmtByDefault(_1c9754d1c_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1a395cc82_applyFmt(jule::Slice<jule::U8>*, _1c9754d1c_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1a395d106_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a414d73b_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e195b2_parameterUsesGenerics(jule::Ptr<_1a3e16339_ParamIns>*, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>*);
inline jule::Ptr<_1a4062100_TypeSymbol> _1a3e1bd34_buildType(jule::Ptr<_1a3dcd653_TypeDecl>);
inline jule::Ptr<_1a402a0da_Value> _1a3e1c142_buildExpr(jule::Ptr<_1a3dd2987_Expr>);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e1c40b_buildTypeAlias(jule::Ptr<_1a3de5170_TypeAliasDecl>);
inline jule::Ptr<_1a3deb5b6_Field> _1a3e1c74c_buildField(jule::Ptr<_1a3de8a25_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a3deb5b6_Field>> _1a3e1c9d3_buildFields(jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>>*);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e1cc9c_buildStruct(jule::Ptr<_1a3de941b_StructDecl>);
inline jule::Ptr<_1a3e1290c_Param> _1a3e1d066_buildParam(jule::Ptr<_1a3ddddb1_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a3e1290c_Param>> _1a3e1d440_buildParams(jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>>*);
inline jule::Ptr<_1a3e1217b_RetType> _1a3e1d682_buildRetType(jule::Ptr<_1a3dd1546_RetTypeDecl>);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e1d94b_buildFunc(jule::Ptr<_1a3de0313_FnDecl>);
inline jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _1a3e1dc15_buildMethods(jule::Slice<jule::Ptr<_1a3de0313_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>> _1a3e1dece_buildTraitInherits(jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>*);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e1e298_buildTrait(jule::Ptr<_1a3de9b58_TraitDecl>);
inline jule::Ptr<_1a3e2934c_EnumItem> _1a3e1e562_buildEnumItem(jule::Ptr<_1a3de6c10_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _1a3e1e82b_buildEnumItems(jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>>*);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e1ed26_buildEnum(jule::Ptr<_1a3de77c1_EnumDecl>);
inline jule::Ptr<_1a3e2aeec_TypeEnumItem> _1a3e20002_buildTypeEnumItem(jule::Ptr<_1a3de80eb_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> _1a3e20299_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>>*);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e20563_buildTypeEnum(jule::Ptr<_1a3de875b_TypeEnumDecl>);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e2082c_buildVar(jule::Ptr<_1a3de14bd_VarDecl>);
inline jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _1a3e20ae6_buildVars(jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>>);
inline jule::Ptr<_1a3e50d24_Impl> _1a3e20db0_buildImpl(jule::Ptr<_1a3dea2b8_Impl>);
inline jule::Ptr<_1a4028e63_Data> _1a3e4b270_buildAsComptimeMethodData(jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e4b57d_findComptimePackage(jule::Ptr<_1a3e97dd2_Sema>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4b902_buildComptimeTypeInfoData(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Ptr<_1a4028e63_Data> _1a3e4bc43_buildComptimeValue(jule::Ptr<_1a4028e63_Data>*);
inline jule::Str _1a3e4ecbd_toStrConstraints(jule::Ptr<_1a4058547_InsGeneric>);
inline jule::Bool _1a3e50186_matchConstraint(jule::Str*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a3e50450_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e53057_newScopeCheckerBase(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e53420_newScopeChecker(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a3e172d5_FnIns>);
inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e53794_findLabelParent(jule::Str*, jule::Ptr<_1a3e5d57e_scopeChecker>);
inline jule::Bool _1a3e53b5c_modelIsGotoScope(jule::Any, jule::Ptr<_1a3e5627a_Scope>*);
inline jule::Bool _1a3e53ed1_stmtIsGotoScope(jule::Any*, jule::Ptr<_1a3e5627a_Scope>*);
inline jule::I64 _1a3e54355_countMatchType(jule::Ptr<_1a3e5a3b1_Match>*, jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Slice<jule::Ptr<_1a4028e63_Data>> _1a3e5461e_getDatasFromTupleData(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a3e54e5a_checkMut(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3e55444_checkAssign(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a3e5570d_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1a3e559c7_isValidStForNextSt(jule::Any*);
inline jule::Bool _1a3e55c91_stmtIsDef(jule::Any*);
inline jule::U64 _1a3e70393_removeEqFromOp(jule::U64);
inline void _1a3e705c4_makeComptimeRange(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a3e70abe_canComptimeMatch(jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a3ebac4b_Var> _1a3e75046_findVarInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1a405913b_TypeAlias> _1a3e754b9_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1a3dee4dc_Struct> _1a3e758e8_findStructInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1a3e143d1_Fn> _1a3e75d9e_findFnInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1a3e276ad_Trait> _1a3e761e0_findTraitInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1a3e29db9_Enum> _1a3e76564_findEnumInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e768d8_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*);
inline jule::Any _1a3e76e27_defByIdentPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1a3e7ce61_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1a3e95572_isValidModelForRef(jule::Any*);
inline _1c980bca3_Log _1a3e95a28_compilerErr(jule::Ptr<_1a3db8198_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a3e95d9c_impIsLookupable(jule::Ptr<_1a3e77a60_ImportInfo>*, jule::Str*);
inline void _1a3e961cc_appendRetVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a3e964b8_appendParamVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a3e967a4_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Ptr<_1a4023aea_SymbolTable> _1a3e96b28_findFile(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>*, jule::Ptr<_1a3dbd92e_File>*);
inline void _1a3e970ce_pushSuggestion(_1c980bca3_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1a3eb9431_pushImplemented(jule::Ptr<_1a3e276ad_Trait>, jule::Ptr<_1a3dee4dc_Struct>*);
inline void _1a3eb971c_pushImplements(jule::Ptr<_1a3dee4dc_Struct>*, jule::Ptr<_1a3e276ad_Trait>);
inline jule::Bool _1a400e971_traitHasReferenceReceiver(jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a400ed28_floatAssignable(jule::Str*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a401019c_sigAssignable(jule::Str, jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a4010565_unsigAssignable(jule::Str, jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a40108d9_intAssignable(jule::Str, jule::Ptr<_1a4028e63_Data>*);
inline void _1a401bd02_checkMutRiskOfStructLit(jule::Ptr<_1a3e97dd2_Sema>*, jule::Ptr<_1a3e07418_StructLitExprModel>*);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a4022896_lenKind(void);
inline jule::Bool _1a4022be8_isGoodValueToInfer(jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a3dcca70_Directive> _1a405280a_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Any _1a4052bc3_findBuiltinsImport(jule::Str*, jule::Ptr<_1a3e77a60_ImportInfo>);
inline void _1a4052e04_fitBitsize(jule::Ptr<_1a4028e63_Data>*);
inline void _1a4053234_makeStructLitAlloc(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3e07418_StructLitExprModel>*);
inline jule::Ptr<_1a3ebac4b_Var> _1a40535a8_buildErrorVar(jule::Ptr<_1a3e5627a_Scope>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Any _1a405392c_findBuiltinsSema(jule::Str*, jule::Ptr<_1a3e97dd2_Sema>);
inline jule::Bool _1a4053be6_isOkForShifting(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a40540c0_isInstancedStruct(jule::Ptr<_1a3e0226a_StructIns>);
inline jule::Bool _1a40543bc_isPtrArithmeticCompatible(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a4054763_applyCastKindModel(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a4054b09_applyCastKind(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a4028e63_Data> _1a4054d18_buildVoidData(void);
inline jule::Str _1a405518c_checkDataForIntegerIndexing(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline void _1a4055533_applyCastModelByEnum(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3e29db9_Enum>, jule::Ptr<_1a3db8198_Token>*);
inline void _1a405581e_castConstByType(jule::Str*, jule::Ptr<_1a4028e63_Data>*);
inline void _1a4055d3b_updateModelToGenericIns(jule::Any*, jule::Ptr<_1a3e172d5_FnIns>*);
inline jule::Bool _1a40560a0_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1a3dce027_SubIdentTypeDecl>*);
inline jule::Str _1a4056369_constoa(jule::Ptr<_1b289b651_Const>*);
inline jule::Ptr<_1a4028e63_Data> _1a4056798_evalEnumStatic(jule::Ptr<_1a3e29db9_Enum>*, jule::Ptr<_1a3e2934c_EnumItem>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Ptr<_1a3e07418_StructLitExprModel> _1a4056a62_isLitBased(jule::Any*);
inline void _1a4056d4d_makeImplicitDeref(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>);
inline void _1a788e275_updateRefer(jule::Ptr<_1a3e1a4a3_ReferenceStack>, jule::Ptr<_1a3e172d5_FnIns>*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a40574d0_makeVariadic(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a4075685_kindUsesGenerics(jule::Ptr<_1a4059e2d_TypeKind>*, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>*);
inline jule::Bool _1a4075a4d_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Bool _1a4075d17_canGetPtr(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a4076158_isValidForSptrType(jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a40763de_isValidForRef(jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a40766a8_isBuiltinStrConvertable(jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Str _1a4076972_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a4062a07_Prim> _1a4076d4b_buildPrimType(jule::Str);
inline void _1a4077434_applyImplicitCast(jule::Ptr<_1a4059e2d_TypeKind>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3db8198_Token>*);
inline jule::Bool _1a40776ed_validTypeForXof(jule::Ptr<_1a4059e2d_TypeKind>*);
inline __jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log _1a407a811_buildSymbols(jule::Ptr<_1a3dcb73e_Ast>*, jule::Trait<_1a3e74b4a_Importer>*, jule::Ptr<_1a3e21476_symbolBuilder>);
inline __jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log _1a407ac84_analyzePackage(jule::Slice<jule::Ptr<_1a3dcb73e_Ast>>*, jule::Trait<_1a3e74b4a_Importer>*, jule::I64*);
inline __jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log _1a407b1b3_AnalyzePackage(jule::Slice<jule::Ptr<_1a3dcb73e_Ast>>, jule::Trait<_1a3e74b4a_Importer>, jule::I64);
inline jule::Ptr<_1a3e172d5_FnIns> _1a414e242_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1a405913b_TypeAlias> _1a414e550_primTypeAlias(jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Ptr<_1a3ebac4b_Var> _1a4152e05_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1a405913b_TypeAlias> _1a4153246_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1a41534cc_findBuiltinDef(jule::Str*);
inline jule::Any _1a4153796_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1a4153a60_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1a4153e39_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1a415417b_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1a4154500_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1a4028e63_Data> _1a4154874_builtinCallerError(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*);
inline jule::Ptr<_1a4028e63_Data> _1a4154ca3_builtinCallerOut(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a41551d2_builtinCallerOutln(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4155611_builtinCallerNew(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4155a40_builtinCallerPanic(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a41561a0_builtinCallerMake(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a41564be_builtinCallerAppend(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a41569a8_callerCopySlice(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4156dd7_builtinCallerCopy(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415725b_callerLenSlice(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a41575d0_callerLenMap(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4157954_callerLenArr(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4157cc8_callerLenStr(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415814c_callerLenComptime(jule::Ptr<_1a4028e63_Data>*, jule::I64);
inline jule::Ptr<_1a4028e63_Data> _1a415857b_builtinCallerLen(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4158900_callerCapSlice(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4158d2e_builtinCallerCap(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4159318_callerDeleteMap(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4159747_builtinCallerDelete(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a4159b76_builtinCallerAssert(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415a0a5_builtinCallerStdComptimeTypeOf(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415a726_builtinCallerStdComptimeValueOf(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415ab55_builtinCallerStdComptimeLine(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415b084_builtinCallerStdComptimeFile(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415b4b3_builtinCallerStdComptimeFiles(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415b8e2_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415bd21_builtinCallerStdMemSizeOf(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415c250_builtinCallerStdMemAlignOf(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415c67e_builtinCallerStdMemFree(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415caad_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415cedc_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415d41b_builtinCallerStdDebugOut(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a4028e63_Data> _1a415d84a_builtinCallerStdDebugOutln(jule::Ptr<_1a402ab8a_Eval>*, jule::Ptr<_1a3dd66b1_FnCallExpr>*, jule::Ptr<_1a4028e63_Data>*);
inline jule::Ptr<_1a49d5e19_FileInfo> _1a4a298b9_ParseFile(jule::Ptr<_1a3dbd92e_File>);
inline __jule_tuple_x_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log _1a4a29e5d_parseFileset(jule::Ptr<_1a3dbd92e_File>);
inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a2a8ed_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a4a2ac83_isSt(jule::Ptr<_1a3db8198_Token>, jule::Ptr<_1a3db8198_Token>);
inline jule::Bool _1a4a2b107_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1a4a2b4c0_nextStPos(jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::I64);
inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_bool _1a4a2b844_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _1a4a2c02b_splitStmts(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Bool _1a4a45682_isTypeOp(jule::U64*);
inline jule::Bool _1a4a45990_isTypeRange(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a45c59_getBlockExpr(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token _1a4a46122_splitDelim(jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::U64);
inline jule::I64 _1a4a463db_findLowestPrecOp(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Ptr<_1a3dd42a2_IdentExpr> _1a4a466a5_buildIdentExpr(jule::Ptr<_1a3db8198_Token>*);
inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_int _1a4a4696e_getRangeExprTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline jule::Bool _1a4a47783_checkAssignTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline _1c980bca3_Log _1a4a4894e_makeErr(jule::I64, jule::I64, jule::Ptr<_1a3dbd92e_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a48e7c_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token _1a4a49246_rangeLast(jule::Slice<jule::Ptr<_1a3db8198_Token>>*);
inline __jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log _1a4a496ec_parts(jule::Slice<jule::Ptr<_1a3db8198_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1a4a49983_getCloseOfBrace(jule::U64);
inline _1c980bca3_Log _1a4a49db2_compilerErr(jule::Ptr<_1a3db8198_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a4a4a258_pushSuggestion(_1c980bca3_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5c1e3_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a41ca477_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1a425b7b1_checkArch(jule::Str);
inline jule::Bool _1a425ba69_isPassFileAnnotation(jule::Str);
inline void _1a4277436_setOsVars(jule::Slice<jule::Str>*);
inline void _1a42776ab_setArchVars(jule::Slice<jule::Str>*);
inline void _1a4277997_initVars(jule::Slice<jule::Str>*, _1a4277117_CompileInfo*);
inline jule::Slice<jule::U8> _1a4a612e6_readBuff(jule::Str);
inline _1c980bca3_Log _1a4a61604_flatCompilerErr(jule::Str);
inline void _1a4a65e22_pushPasses(jule::Ptr<_1a3e7a986_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a4a662da_getAllUniquePasses(jule::Ptr<_1a3e7a986_Package>*, jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>>);
inline _1a4277117_CompileInfo _1a4a664e9_buildCompileInfo(void);
inline void _1a39c1b2b_EliminateDefines(jule::Ptr<_1a4a6456e_IR>*);
inline jule::Ptr<_1a3dcca70_Directive> _1a39c1ee4_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Bool _1a39c2368_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Bool _1a39c2731_isTraitMethod(jule::Ptr<_1a3e0226a_StructIns>*, jule::Ptr<_1a3e172d5_FnIns>*);
inline void _1a39c6735_eliminateDeadCodeOfScope(jule::Ptr<_1a3e5627a_Scope>);
inline void _1a39c69aa_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a3e143d1_Fn>>*);
inline void _1a39c6bdb_eliminateFunctionsScopePackage(jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39c6e94_eliminateScopePackage(jule::Ptr<_1a3e7a986_Package>*);
inline void _1a39c7192_EliminateScopes(jule::Ptr<_1a4a6456e_IR>*);
inline jule::Uintptr _1a415db8b_typeData(jule::Any*);
inline jule::Bool _1a415e021_equalConst(jule::Ptr<_1b289b651_Const>, jule::Ptr<_1b289b651_Const>);
inline jule::Bool _1a415e395_equalCasting(jule::Ptr<_1a3e07c98_CastingExprModel>, jule::Ptr<_1a3e07c98_CastingExprModel>);
inline jule::Bool _1a415e75d_equalUnary(jule::Ptr<_1a3e06a44_UnaryExprModel>, jule::Ptr<_1a3e06a44_UnaryExprModel>);
inline jule::Bool _1a415ead2_equalIndexing(jule::Ptr<_1a3e08eca_IndexingExprModel>, jule::Ptr<_1a3e08eca_IndexingExprModel>);
inline jule::Bool _1a415ee56_equalBinary(jule::Ptr<_1a3e0666a_BinaryExprModel>, jule::Ptr<_1a3e0666a_BinaryExprModel>);
inline jule::Bool _1a41602ca_equalModels(jule::Any, jule::Any);
inline void _1a4165d4c_possibleNilRemove(jule::Ptr<_1a4164d6d_nils>*, jule::Any);
inline jule::Bool _1a4166215_isGuaranteedNonNilExpr(jule::Ptr<_1a4164d6d_nils>*, jule::Any);
inline jule::Bool _1a41664ce_isNilValidType(jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Uintptr _1a4166820_getNilVar(jule::Any);
inline jule::Bool _1a416c75a_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1a416ca68_isConstantValidConditionalCase(jule::Ptr<_1a3e56698_If>*);
inline jule::Bool _1a416cd32_isUnreachableExpr(jule::Any*);
inline jule::Bool _1a416d173_isConstantValidMatchCase(jule::Ptr<_1a3e5add9_Case>*);
inline jule::Bool _1a416d409_isUnreachableConditionalCase(jule::Ptr<_1a3e56698_If>*);
inline jule::Bool _1a416d6c3_isUnreachableMatchCase(jule::Ptr<_1a3e5add9_Case>*);
inline jule::Bool _1a416d98c_isForwarded(jule::Ptr<_1a3e5627a_Scope>*);
inline __jule_tuple_bool__jule_tuple_u64 _1a4178315_checkForBitShiftOpt(jule::Ptr<_1a3e06170_OperandExprModel>*, jule::Ptr<_1a3e06170_OperandExprModel>*);
inline jule::Bool _1a41786cd_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1a417a6e1_possibleDynamicRemove(jule::Ptr<_1a4179657_dynamic>*, jule::Any);
inline jule::Bool _1a417a9ee_isDynamicValidType(jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Ptr<_1a4059e2d_TypeKind> _1a417ae2d_isTypeGuaranteedDynamicData(jule::Ptr<_1a4179657_dynamic>*, jule::Ptr<_1a4059e2d_TypeKind>, jule::Any);
inline jule::Uintptr _1a417b26e_getDynamicVar(jule::Any);
inline jule::Bool _1a417b505_isAny(jule::Ptr<_1a4059e2d_TypeKind>*);
inline jule::Bool _1a418000e_isValidBoundaryInfo(jule::Any);
inline jule::I64 _1a41803c7_fitsMaxSize(jule::Slice<jule::Any>, jule::Any);
inline jule::Bool _1a418074b_fitsSize(jule::Any, jule::Any);
inline void _1a4180a7b_possibleBoundaryRemove(jule::Ptr<_1a417de97_boundary>*, jule::Any);
inline jule::Bool _1a4180d45_isBoundaryRiskyType(jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Bool _1a418110e_isBoundaryValidType(jule::Ptr<_1a4059e2d_TypeKind>);
inline jule::Uintptr _1a41813c8_getBoundaryVar(jule::Any);
inline void _1a4184453_PushOptLevel(jule::I64);
inline void _1a39d16a7_detectEnabled(void);
inline void _1a3a0a11a_Throw(jule::Str);
inline jule::U64 _1a4e739d3_unix(void);
inline jule::Bool _1a4e65189_isCopyOptimizable(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a4e65552_isIterCopyOptimizable(jule::Ptr<_1a4028e63_Data>*, jule::Ptr<_1a3ebac4b_Var>*);
inline jule::Str _1a45a2684_decomposeCommonEsq(jule::U8);
inline jule::Str _1a45a2992_sbtoa(jule::U8);
inline void _1a45a2c7d_cstrBytes(_1c9754d1c_StrBuilder*, jule::Str);
inline void _1a45a30ad_cstrLit(_1c9754d1c_StrBuilder*, jule::Str);
inline void _1a45a3454_ftoa(_1c9754d1c_StrBuilder*, jule::F64, jule::I64);
inline void _1a45a3740_itoa(_1c9754d1c_StrBuilder*, jule::I64);
inline void _1a45a3a2b_utoa(_1c9754d1c_StrBuilder*, jule::U64);
inline jule::Bool _1a45a3e05_isForwarded(jule::Ptr<_1a3e5627a_Scope>*);
inline jule::Bool _1a45a4147_isExprComesFromBind(jule::Ptr<_1a4028e63_Data>*);
inline jule::Bool _1a45a4411_isAny(jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1a4e8808b_iterFiles(jule::Ptr<_1a3e7a986_Package>*, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1a4e88399_concatAllParts(jule::Slice<jule::Ptr<_1a3db8198_Token>>);
inline jule::Bool _1a4e8871d_containsTraitMethod(jule::Ptr<_1a3e276ad_Trait>*, jule::Str*);
inline void _1a4e88a4d_pushMethodsFromInherit(jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a3e276ad_Trait>*);
inline void _1a4e88d39_pushMethodsFromInherits(jule::Ptr<_1a3e276ad_Trait>*, jule::Ptr<_1a3e276ad_Trait>*);
inline jule::Bool _1a4e89103_isOpMethod(jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Bool _1a4e893bc_isHeadDecl(jule::Ptr<_1a3e143d1_Fn>*);
inline jule::Ptr<_1a3dcca70_Directive> _1a4e986b7_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Bool _1a4e98a80_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>*, jule::Str);
inline jule::Bool _1a4e98d49_shouldInitialized(jule::Ptr<_1a4059e2d_TypeKind>*);
inline void _1c908eb52_printErrorMessage(jule::Str);
inline void _1c908edc7_help(jule::Slice<jule::Str>*);
inline void _1c9090108_version(jule::Slice<jule::Str>*);
inline void _1c9090317_toolDistos(void);
inline void _1c909047c_toolDistarch(void);
inline void _1c909067a_tool(jule::Slice<jule::Str>*);
inline void _1c90908ab_julenv(jule::Slice<jule::Str>*);
inline void _1c9090bec_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1c9090e3e_processCommand(jule::Slice<jule::Str>*);
inline void _1c90910d7_showInfo(void);
void entry_point(void);
inline void _1a50151c3_init(void);
inline jule::Ptr<_20c07ab0a_File> _1a501548c_openOutput(jule::Str*);
inline void _1a5015635_clearObjects(void);
inline void _1a5015943_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a5015c0c_isCppSourceFile(jule::Str);
inline void _1a5015e3d_pushCompCmdClang(_1c9754d1c_StrBuilder*);
inline void _1a501616e_pushCompCmdGcc(_1c9754d1c_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1a5016603_genCompileCmd(jule::Str, jule::Ptr<_1a4a6456e_IR>*);
inline jule::Str _1a501678a_getCompilePath(void);
inline void _1a50169bb_applyTargetIndependentOptimizations(jule::Ptr<_1a4a6456e_IR>*);
inline void _1a5016b64_checkCompilerFlag(void);
inline void _1a5016d73_checkTargetArch(jule::Str);
inline void _1a50170a4_checkTargetOs(jule::Str);
inline void _1a50172d5_checkTargetFlag(jule::Str*);
inline void _1a5017516_checkOptFlag(jule::Str*);
inline void _1a50178ce_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a5017a99_checkFlags(jule::Slice<jule::Str>*);
inline void _1a5017ca8_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1a4a6456e_IR> _1a5018072_buildIr(jule::Slice<jule::Str>*);
inline void _1a50182a3_compileCommand(jule::Slice<jule::Str>*);


struct _1a3e2e50b_comptimeRangeKindMptrData {
	void(*_1a3e2dc03_ready)(jule::Trait<_1a3e2e50b_comptimeRangeKind>, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
	void(*_1a3e2e121_step)(jule::Trait<_1a3e2e50b_comptimeRangeKind>, jule::I64, jule::Ptr<_1a3ebac4b_Var>*, jule::Ptr<_1a3ebac4b_Var>*);
	jule::I64(*_1a3e2e3a7_len)(jule::Trait<_1a3e2e50b_comptimeRangeKind>);
};

struct _1a3e74b4a_ImporterMptrData {
	void(*_1a3e73929_SetModPath)(jule::Trait<_1a3e74b4a_Importer>, jule::Str);
	jule::Str(*_1a3e73bb0_GetModPath)(jule::Trait<_1a3e74b4a_Importer>);
	jule::Str(*_1a3e74001_ModById)(jule::Trait<_1a3e74b4a_Importer>, jule::I64);
	jule::Ptr<_1a3e77a60_ImportInfo>(*_1a3e74342_GetImport)(jule::Trait<_1a3e74b4a_Importer>, jule::Str);
	__jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log(*_1a3e7473d_ImportPackage)(jule::Trait<_1a3e74b4a_Importer>, jule::Str, jule::Bool);
	void(*_1a3e749e6_Imported)(jule::Trait<_1a3e74b4a_Importer>, jule::Ptr<_1a3e77a60_ImportInfo>);
};

struct _1a4059977_KindMptrData {
	jule::Str(*_1a40594d2_Str)(jule::Trait<_1a4059977_Kind>);
	jule::Bool(*_1a4059823_Equal)(jule::Trait<_1a4059977_Kind>, jule::Ptr<_1a4059e2d_TypeKind>);
};

struct _1a4079a1e_LookupMptrData {
	jule::Ptr<_1a3e77a60_ImportInfo>(*_1a4077d08_SelectPackage)(jule::Trait<_1a4079a1e_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>);
	jule::Ptr<_1a3ebac4b_Var>(*_1a4078204_FindVar)(jule::Trait<_1a4079a1e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a405913b_TypeAlias>(*_1a4078600_FindTypeAlias)(jule::Trait<_1a4079a1e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a3dee4dc_Struct>(*_1a40789eb_FindStruct)(jule::Trait<_1a4079a1e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a3e143d1_Fn>(*_1a4078de7_FindFn)(jule::Trait<_1a4079a1e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a3e276ad_Trait>(*_1a4079238_FindTrait)(jule::Trait<_1a4079a1e_Lookup>, jule::Str);
	jule::Ptr<_1a3e29db9_Enum>(*_1a4079579_FindEnum)(jule::Trait<_1a4079a1e_Lookup>, jule::Str);
	jule::Ptr<_1a3e2b5c4_TypeEnum>(*_1a40798ba_FindTypeEnum)(jule::Trait<_1a4079a1e_Lookup>, jule::Str);
};

struct _1a500cd8b_CommonFlagMptrData {
	jule::Str(*_1a4ecc256_Name)(jule::Trait<_1a500cd8b_CommonFlag>);
	jule::I32(*_1a4ecc399_Short)(jule::Trait<_1a500cd8b_CommonFlag>);
	jule::Str(*_1a4ecc5ec_What)(jule::Trait<_1a500cd8b_CommonFlag>);
	void(*_1a500cc37_Reset)(jule::Trait<_1a500cd8b_CommonFlag>);
};



inline void _1a3e2dc03_ready_comptimeRangeKind_0(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e329e8_ready(_self_.safe_ptr<_1a3e31db0_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_0(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e32e16_step(_self_.safe_ptr<_1a3e31db0_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_0(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e3319c_len(_self_.safe_ptr<_1a3e31db0_comptimeStructFields>());
}
inline void _1a3e2dc03_ready_comptimeRangeKind_1(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e35ca4_ready(_self_.safe_ptr<_1a3e3516b_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_1(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e361c2_step(_self_.safe_ptr<_1a3e3516b_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_1(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e36458_len(_self_.safe_ptr<_1a3e3516b_comptimeStatics>());
}
inline void _1a3e2dc03_ready_comptimeRangeKind_2(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e38746_ready(_self_.safe_ptr<_1a3e37b0d_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_2(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e38b64_step(_self_.safe_ptr<_1a3e37b0d_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_2(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e38dea_len(_self_.safe_ptr<_1a3e37b0d_comptimeEnumFields>());
}
inline void _1a3e2dc03_ready_comptimeRangeKind_3(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e3be97_ready(_self_.safe_ptr<_1a3e3b392_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_3(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e3c3b5_step(_self_.safe_ptr<_1a3e3b392_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_3(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e3c64b_len(_self_.safe_ptr<_1a3e3b392_comptimeParams>());
}
inline void _1a3e2dc03_ready_comptimeRangeKind_4(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e3d592_ready(_self_.safe_ptr<_1a3e3c959_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_4(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e3d9b0_step(_self_.safe_ptr<_1a3e3c959_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_4(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e3dc46_len(_self_.safe_ptr<_1a3e3c959_comptimeTypeInfos>());
}
inline void _1a3e2dc03_ready_comptimeRangeKind_5(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::Ptr<_1a3ebac4b_Var>* _2429_keyA, jule::Ptr<_1a3ebac4b_Var>* _2446_keyB) {
	_1a3e489ed_ready(_self_.safe_ptr<_1a3e47db5_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1a3e2e121_step_comptimeRangeKind_5(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1a3ebac4b_Var>* _2536_keyA, jule::Ptr<_1a3ebac4b_Var>* _2553_keyB) {
	_1a3e48e1b_step(_self_.safe_ptr<_1a3e47db5_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1a3e2e3a7_len_comptimeRangeKind_5(jule::Trait<_1a3e2e50b_comptimeRangeKind> _self_) {
	return _1a3e491a2_len(_self_.safe_ptr<_1a3e47db5_comptimeFiles>());
}
inline void _1a3e73929_SetModPath_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_, jule::Str _1729_path) {
	_1a4a626b0_SetModPath(_self_.safe_ptr<_1a4a61add_JuleImporter>(), _1729_path);
}
inline jule::Str _1a3e73bb0_GetModPath_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_) {
	return _1a4a62946_GetModPath(_self_.safe_ptr<_1a4a61add_JuleImporter>());
}
inline jule::Str _1a3e74001_ModById_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_, jule::I64 _2522_id) {
	return _1a4a62c87_ModById(_self_.safe_ptr<_1a4a61add_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e74342_GetImport_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_, jule::Str _3128_path) {
	return _1a4a630c8_GetImport(_self_.safe_ptr<_1a4a61add_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log _1a3e7473d_ImportPackage_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a4a634c4_ImportPackage(_self_.safe_ptr<_1a4a61add_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1a3e749e6_Imported_Importer_0(jule::Trait<_1a3e74b4a_Importer> _self_, jule::Ptr<_1a3e77a60_ImportInfo> _4131__0) {
	_1a4a6377c_Imported(_self_.safe_ptr<_1a4a61add_JuleImporter>(), _4131__0);
}
inline jule::Str _1a40594d2_Str_Kind_0(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e025de_Str(_self_.safe_ptr<_1a3e0226a_StructIns>());
}
inline jule::Bool _1a4059823_Equal_Kind_0(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e02930_Equal(_self_.data.as<_1a3e0226a_StructIns>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_1(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e17626_Str(_self_.safe_ptr<_1a3e172d5_FnIns>());
}
inline jule::Bool _1a4059823_Equal_Kind_1(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e17967_Equal(_self_.data.as<_1a3e172d5_FnIns>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_2(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e27a76_Str(_self_.safe_ptr<_1a3e276ad_Trait>());
}
inline jule::Bool _1a4059823_Equal_Kind_2(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e27db7_Equal(_self_.data.as<_1a3e276ad_Trait>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_3(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e2a23d_Str(_self_.safe_ptr<_1a3e29db9_Enum>());
}
inline jule::Bool _1a4059823_Equal_Kind_3(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e2a57e_Equal(_self_.data.as<_1a3e29db9_Enum>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_4(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e2b915_Str(_self_.safe_ptr<_1a3e2b5c4_TypeEnum>());
}
inline jule::Bool _1a4059823_Equal_Kind_4(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e2bc56_Equal(_self_.data.as<_1a3e2b5c4_TypeEnum>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_5(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e2eaa0_Str(_self_.safe_ptr<_1a3e2e72b_comptimeRange>());
}
inline jule::Bool _1a4059823_Equal_Kind_5(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e2ede1_Equal(_self_.data.as<_1a3e2e72b_comptimeRange>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_6(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e305b7_Str(_self_.safe_ptr<_1a3e301ee_comptimeStructField>());
}
inline jule::Bool _1a4059823_Equal_Kind_6(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e30908_Equal(_self_.data.as<_1a3e301ee_comptimeStructField>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_7(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e32234_Str(_self_.safe_ptr<_1a3e31db0_comptimeStructFields>());
}
inline jule::Bool _1a4059823_Equal_Kind_7(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e32575_Equal(_self_.data.as<_1a3e31db0_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_8(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e3382e_Str(_self_.safe_ptr<_1a3e334aa_comptimeStatic>());
}
inline jule::Bool _1a4059823_Equal_Kind_8(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e33b70_Equal(_self_.data.as<_1a3e334aa_comptimeStatic>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_9(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e354e0_Str(_self_.safe_ptr<_1a3e3516b_comptimeStatics>());
}
inline jule::Bool _1a4059823_Equal_Kind_9(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e35831_Equal(_self_.data.as<_1a3e3516b_comptimeStatics>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_10(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e36bea_Str(_self_.safe_ptr<_1a3e36766_comptimeEnumField>());
}
inline jule::Bool _1a4059823_Equal_Kind_10(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e3703b_Equal(_self_.data.as<_1a3e36766_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_11(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e37e82_Str(_self_.safe_ptr<_1a3e37b0d_comptimeEnumFields>());
}
inline jule::Bool _1a4059823_Equal_Kind_11(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e382c3_Equal(_self_.data.as<_1a3e37b0d_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_12(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e3957c_Str(_self_.safe_ptr<_1a3e39208_comptimeParam>());
}
inline jule::Bool _1a4059823_Equal_Kind_12(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e398bd_Equal(_self_.data.as<_1a3e39208_comptimeParam>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_13(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e3b6d3_Str(_self_.safe_ptr<_1a3e3b392_comptimeParams>());
}
inline jule::Bool _1a4059823_Equal_Kind_13(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e3ba24_Equal(_self_.data.as<_1a3e3b392_comptimeParams>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_14(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e3cccd_Str(_self_.safe_ptr<_1a3e3c959_comptimeTypeInfos>());
}
inline jule::Bool _1a4059823_Equal_Kind_14(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e3d11e_Equal(_self_.data.as<_1a3e3c959_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_15(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e3e3c8_Str(_self_.safe_ptr<_1a3e3e054_comptimeTypeInfo>());
}
inline jule::Bool _1a4059823_Equal_Kind_15(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e3e719_Equal(_self_.data.as<_1a3e3e054_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_16(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e458da_Str(_self_.safe_ptr<_1a3e45566_comptimeValue>());
}
inline jule::Bool _1a4059823_Equal_Kind_16(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e45c2b_Equal(_self_.data.as<_1a3e45566_comptimeValue>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_17(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e48239_Str(_self_.safe_ptr<_1a3e47db5_comptimeFiles>());
}
inline jule::Bool _1a4059823_Equal_Kind_17(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e4857a_Equal(_self_.data.as<_1a3e47db5_comptimeFiles>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_18(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a3e49a65_Str(_self_.safe_ptr<_1a3e494b0_comptimeFile>());
}
inline jule::Bool _1a4059823_Equal_Kind_18(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a3e49da6_Equal(_self_.data.as<_1a3e494b0_comptimeFile>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_19(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a405a2e6_Str(_self_.safe_ptr<_1a4059e2d_TypeKind>());
}
inline jule::Bool _1a4059823_Equal_Kind_19(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a405a637_Equal(_self_.data.as<_1a4059e2d_TypeKind>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_20(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a4062d48_Str(_self_.safe_ptr<_1a4062a07_Prim>());
}
inline jule::Bool _1a4059823_Equal_Kind_20(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a4063189_Equal(_self_.data.as<_1a4062a07_Prim>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_21(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a40668a7_Str(_self_.safe_ptr<_1a4066533_Sptr>());
}
inline jule::Bool _1a4059823_Equal_Kind_21(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a4066be8_Equal(_self_.data.as<_1a4066533_Sptr>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_22(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a406748a_Str(_self_.safe_ptr<_1a4067006_Slc>());
}
inline jule::Bool _1a4059823_Equal_Kind_22(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a40677cb_Equal(_self_.data.as<_1a4067006_Slc>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_23(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a4067e6e_Str(_self_.safe_ptr<_1a4067aea_Tuple>());
}
inline jule::Bool _1a4059823_Equal_Kind_23(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a40682b0_Equal(_self_.data.as<_1a4067aea_Tuple>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_24(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a4068a1e_Str(_self_.safe_ptr<_1a406869a_Map>());
}
inline jule::Bool _1a4059823_Equal_Kind_24(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a4068d60_Equal(_self_.data.as<_1a406869a_Map>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_25(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a406969b_Str(_self_.safe_ptr<_1a4069327_Arr>());
}
inline jule::Bool _1a4059823_Equal_Kind_25(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a40699dc_Equal(_self_.data.as<_1a4069327_Arr>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_26(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a406a16e_Str(_self_.safe_ptr<_1a4069cea_Ptr>());
}
inline jule::Bool _1a4059823_Equal_Kind_26(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a406a4b0_Equal(_self_.data.as<_1a4069cea_Ptr>(), _5621_other);
}
inline jule::Str _1a40594d2_Str_Kind_27(jule::Trait<_1a4059977_Kind> _self_) {
	return _1a4e8a8da_Str(_self_.safe_ptr<_1a4e8a555_customType>());
}
inline jule::Bool _1a4059823_Equal_Kind_27(jule::Trait<_1a4059977_Kind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _5621_other) {
	return _1a4e8ac2b_Equal(_self_.data.as<_1a4e8a555_customType>(), _5621_other);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4077d08_SelectPackage_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _932_selector) {
	return _1a3e5da24_SelectPackage(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1a3ebac4b_Var> _1a4078204_FindVar_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a3e5de20_FindVar(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a405913b_TypeAlias> _1a4078600_FindTypeAlias_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a3e5e31b_FindTypeAlias(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a3dee4dc_Struct> _1a40789eb_FindStruct_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a3e5e717_FindStruct(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a3e143d1_Fn> _1a4078de7_FindFn_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a3e5eb13_FindFn(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a3e276ad_Trait> _1a4079238_FindTrait_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2928_ident) {
	return _1a3e5ee54_FindTrait(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1a3e29db9_Enum> _1a4079579_FindEnum_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3327_ident) {
	return _1a3e60295_FindEnum(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a40798ba_FindTypeEnum_Lookup_0(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3731_ident) {
	return _1a3e605d6_FindTypeEnum(_self_.safe_ptr<_1a3e5d57e_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4077d08_SelectPackage_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _932_selector) {
	return _1a3e78049_SelectPackage(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1a3ebac4b_Var> _1a4078204_FindVar_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a3e78445_FindVar(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a405913b_TypeAlias> _1a4078600_FindTypeAlias_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a3e78841_FindTypeAlias(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a3dee4dc_Struct> _1a40789eb_FindStruct_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a3e78c3c_FindStruct(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a3e143d1_Fn> _1a4078de7_FindFn_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a3e79138_FindFn(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a3e276ad_Trait> _1a4079238_FindTrait_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2928_ident) {
	return _1a3e79479_FindTrait(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1a3e29db9_Enum> _1a4079579_FindEnum_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3327_ident) {
	return _1a3e797ba_FindEnum(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a40798ba_FindTypeEnum_Lookup_1(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3731_ident) {
	return _1a3e79b0b_FindTypeEnum(_self_.safe_ptr<_1a3e77a60_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4077d08_SelectPackage_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _932_selector) {
	return _1a3e7ae2b_SelectPackage(_self_.safe_ptr<_1a3e7a986_Package>(), _932_selector);
}
inline jule::Ptr<_1a3ebac4b_Var> _1a4078204_FindVar_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a3e7b327_FindVar(_self_.safe_ptr<_1a3e7a986_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a405913b_TypeAlias> _1a4078600_FindTypeAlias_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a3e7b723_FindTypeAlias(_self_.safe_ptr<_1a3e7a986_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a3dee4dc_Struct> _1a40789eb_FindStruct_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a3e7bb1e_FindStruct(_self_.safe_ptr<_1a3e7a986_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a3e143d1_Fn> _1a4078de7_FindFn_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a3e7c01a_FindFn(_self_.safe_ptr<_1a3e7a986_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a3e276ad_Trait> _1a4079238_FindTrait_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2928_ident) {
	return _1a3e7c35b_FindTrait(_self_.safe_ptr<_1a3e7a986_Package>(), _2928_ident);
}
inline jule::Ptr<_1a3e29db9_Enum> _1a4079579_FindEnum_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3327_ident) {
	return _1a3e7c69c_FindEnum(_self_.safe_ptr<_1a3e7a986_Package>(), _3327_ident);
}
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a40798ba_FindTypeEnum_Lookup_2(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3731_ident) {
	return _1a3e7c9dd_FindTypeEnum(_self_.safe_ptr<_1a3e7a986_Package>(), _3731_ident);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4077d08_SelectPackage_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _932_selector) {
	return _1a3e98377_SelectPackage(_self_.safe_ptr<_1a3e97dd2_Sema>(), _932_selector);
}
inline jule::Ptr<_1a3ebac4b_Var> _1a4078204_FindVar_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a3e98773_FindVar(_self_.safe_ptr<_1a3e97dd2_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a405913b_TypeAlias> _1a4078600_FindTypeAlias_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a3e98b6e_FindTypeAlias(_self_.safe_ptr<_1a3e97dd2_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a3dee4dc_Struct> _1a40789eb_FindStruct_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a3e9906a_FindStruct(_self_.safe_ptr<_1a3e97dd2_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a3e143d1_Fn> _1a4078de7_FindFn_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a3e99466_FindFn(_self_.safe_ptr<_1a3e97dd2_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a3e276ad_Trait> _1a4079238_FindTrait_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2928_ident) {
	return _1a3e997a7_FindTrait(_self_.safe_ptr<_1a3e97dd2_Sema>(), _2928_ident);
}
inline jule::Ptr<_1a3e29db9_Enum> _1a4079579_FindEnum_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3327_ident) {
	return _1a3e99ae8_FindEnum(_self_.safe_ptr<_1a3e97dd2_Sema>(), _3327_ident);
}
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a40798ba_FindTypeEnum_Lookup_3(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3731_ident) {
	return _1a3e99e39_FindTypeEnum(_self_.safe_ptr<_1a3e97dd2_Sema>(), _3731_ident);
}
inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4077d08_SelectPackage_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _932_selector) {
	return _1a40240d4_SelectPackage(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1a3ebac4b_Var> _1a4078204_FindVar_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a40244d0_FindVar(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a405913b_TypeAlias> _1a4078600_FindTypeAlias_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a40248cb_FindTypeAlias(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a3dee4dc_Struct> _1a40789eb_FindStruct_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a4024cc7_FindStruct(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a3e143d1_Fn> _1a4078de7_FindFn_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a40251c3_FindFn(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a3e276ad_Trait> _1a4079238_FindTrait_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _2928_ident) {
	return _1a4025514_FindTrait(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1a3e29db9_Enum> _1a4079579_FindEnum_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3327_ident) {
	return _1a4025855_FindEnum(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a40798ba_FindTypeEnum_Lookup_4(jule::Trait<_1a4079a1e_Lookup> _self_, jule::Str _3731_ident) {
	return _1a4025b96_FindTypeEnum(_self_.safe_ptr<_1a4023aea_SymbolTable>(), _3731_ident);
}
inline jule::Str _1a4ecc256_Name_CommonFlag_0(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b4e5cd_Name(_self_.safe_ptr<_1a8b4e743_Flag>());
}
inline jule::I32 _1a4ecc399_Short_CommonFlag_0(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b4ecc6_Short(_self_.safe_ptr<_1a8b4e743_Flag>());
}
inline jule::Str _1a4ecc5ec_What_CommonFlag_0(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b4ea2e_What(_self_.safe_ptr<_1a8b4e743_Flag>());
}
inline void _1a500cc37_Reset_CommonFlag_0(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	_1a8b4eb72_Reset(_self_.safe_ptr<_1a8b4e743_Flag>());
}
inline jule::Str _1a4ecc256_Name_CommonFlag_1(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b52c0d_Name(_self_.safe_ptr<_1a8b53093_Flag>());
}
inline jule::I32 _1a4ecc399_Short_CommonFlag_1(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b53615_Short(_self_.safe_ptr<_1a8b53093_Flag>());
}
inline jule::Str _1a4ecc5ec_What_CommonFlag_1(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5337e_What(_self_.safe_ptr<_1a8b53093_Flag>());
}
inline void _1a500cc37_Reset_CommonFlag_1(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	_1a8b534c2_Reset(_self_.safe_ptr<_1a8b53093_Flag>());
}
inline jule::Str _1a4ecc256_Name_CommonFlag_2(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b563b5_Name(_self_.safe_ptr<_1a8b5674a_Flag>());
}
inline jule::I32 _1a4ecc399_Short_CommonFlag_2(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b56cbc_Short(_self_.safe_ptr<_1a8b5674a_Flag>());
}
inline jule::Str _1a4ecc5ec_What_CommonFlag_2(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b56a36_What(_self_.safe_ptr<_1a8b5674a_Flag>());
}
inline void _1a500cc37_Reset_CommonFlag_2(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	_1a8b56b79_Reset(_self_.safe_ptr<_1a8b5674a_Flag>());
}
inline jule::Str _1a4ecc256_Name_CommonFlag_3(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b59ab1_Name(_self_.safe_ptr<_1a8b59e46_Flag>());
}
inline jule::I32 _1a4ecc399_Short_CommonFlag_3(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5a4b8_Short(_self_.safe_ptr<_1a8b59e46_Flag>());
}
inline jule::Str _1a4ecc5ec_What_CommonFlag_3(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5a232_What(_self_.safe_ptr<_1a8b59e46_Flag>());
}
inline void _1a500cc37_Reset_CommonFlag_3(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	_1a8b5a375_Reset(_self_.safe_ptr<_1a8b59e46_Flag>());
}
inline jule::Str _1a4ecc256_Name_CommonFlag_4(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5d268_Name(_self_.safe_ptr<_1a8b5d5ed_Flag>());
}
inline jule::I32 _1a4ecc399_Short_CommonFlag_4(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5db70_Short(_self_.safe_ptr<_1a8b5d5ed_Flag>());
}
inline jule::Str _1a4ecc5ec_What_CommonFlag_4(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	return _1a8b5d8d9_What(_self_.safe_ptr<_1a8b5d5ed_Flag>());
}
inline void _1a500cc37_Reset_CommonFlag_4(jule::Trait<_1a500cd8b_CommonFlag> _self_) {
	_1a8b5da2c_Reset(_self_.safe_ptr<_1a8b5d5ed_Flag>());
}


static _1a3e2e50b_comptimeRangeKindMptrData _1a3e2e50b_comptimeRangeKind_mptr_data[] = {
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_0,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_0,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_0,
	},
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_1,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_1,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_1,
	},
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_2,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_2,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_2,
	},
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_3,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_3,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_3,
	},
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_4,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_4,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_4,
	},
	{
		._1a3e2dc03_ready=_1a3e2dc03_ready_comptimeRangeKind_5,
		._1a3e2e121_step=_1a3e2e121_step_comptimeRangeKind_5,
		._1a3e2e3a7_len=_1a3e2e3a7_len_comptimeRangeKind_5,
	},
};
static _1a3e74b4a_ImporterMptrData _1a3e74b4a_Importer_mptr_data[] = {
	{
		._1a3e73929_SetModPath=_1a3e73929_SetModPath_Importer_0,
		._1a3e73bb0_GetModPath=_1a3e73bb0_GetModPath_Importer_0,
		._1a3e74001_ModById=_1a3e74001_ModById_Importer_0,
		._1a3e74342_GetImport=_1a3e74342_GetImport_Importer_0,
		._1a3e7473d_ImportPackage=_1a3e7473d_ImportPackage_Importer_0,
		._1a3e749e6_Imported=_1a3e749e6_Imported_Importer_0,
	},
};
static _1a4059977_KindMptrData _1a4059977_Kind_mptr_data[] = {
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_0,
		._1a4059823_Equal=_1a4059823_Equal_Kind_0,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_1,
		._1a4059823_Equal=_1a4059823_Equal_Kind_1,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_2,
		._1a4059823_Equal=_1a4059823_Equal_Kind_2,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_3,
		._1a4059823_Equal=_1a4059823_Equal_Kind_3,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_4,
		._1a4059823_Equal=_1a4059823_Equal_Kind_4,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_5,
		._1a4059823_Equal=_1a4059823_Equal_Kind_5,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_6,
		._1a4059823_Equal=_1a4059823_Equal_Kind_6,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_7,
		._1a4059823_Equal=_1a4059823_Equal_Kind_7,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_8,
		._1a4059823_Equal=_1a4059823_Equal_Kind_8,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_9,
		._1a4059823_Equal=_1a4059823_Equal_Kind_9,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_10,
		._1a4059823_Equal=_1a4059823_Equal_Kind_10,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_11,
		._1a4059823_Equal=_1a4059823_Equal_Kind_11,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_12,
		._1a4059823_Equal=_1a4059823_Equal_Kind_12,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_13,
		._1a4059823_Equal=_1a4059823_Equal_Kind_13,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_14,
		._1a4059823_Equal=_1a4059823_Equal_Kind_14,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_15,
		._1a4059823_Equal=_1a4059823_Equal_Kind_15,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_16,
		._1a4059823_Equal=_1a4059823_Equal_Kind_16,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_17,
		._1a4059823_Equal=_1a4059823_Equal_Kind_17,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_18,
		._1a4059823_Equal=_1a4059823_Equal_Kind_18,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_19,
		._1a4059823_Equal=_1a4059823_Equal_Kind_19,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_20,
		._1a4059823_Equal=_1a4059823_Equal_Kind_20,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_21,
		._1a4059823_Equal=_1a4059823_Equal_Kind_21,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_22,
		._1a4059823_Equal=_1a4059823_Equal_Kind_22,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_23,
		._1a4059823_Equal=_1a4059823_Equal_Kind_23,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_24,
		._1a4059823_Equal=_1a4059823_Equal_Kind_24,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_25,
		._1a4059823_Equal=_1a4059823_Equal_Kind_25,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_26,
		._1a4059823_Equal=_1a4059823_Equal_Kind_26,
	},
	{
		._1a40594d2_Str=_1a40594d2_Str_Kind_27,
		._1a4059823_Equal=_1a4059823_Equal_Kind_27,
	},
};
static _1a4079a1e_LookupMptrData _1a4079a1e_Lookup_mptr_data[] = {
	{
		._1a4077d08_SelectPackage=_1a4077d08_SelectPackage_Lookup_0,
		._1a4078204_FindVar=_1a4078204_FindVar_Lookup_0,
		._1a4078600_FindTypeAlias=_1a4078600_FindTypeAlias_Lookup_0,
		._1a40789eb_FindStruct=_1a40789eb_FindStruct_Lookup_0,
		._1a4078de7_FindFn=_1a4078de7_FindFn_Lookup_0,
		._1a4079238_FindTrait=_1a4079238_FindTrait_Lookup_0,
		._1a4079579_FindEnum=_1a4079579_FindEnum_Lookup_0,
		._1a40798ba_FindTypeEnum=_1a40798ba_FindTypeEnum_Lookup_0,
	},
	{
		._1a4077d08_SelectPackage=_1a4077d08_SelectPackage_Lookup_1,
		._1a4078204_FindVar=_1a4078204_FindVar_Lookup_1,
		._1a4078600_FindTypeAlias=_1a4078600_FindTypeAlias_Lookup_1,
		._1a40789eb_FindStruct=_1a40789eb_FindStruct_Lookup_1,
		._1a4078de7_FindFn=_1a4078de7_FindFn_Lookup_1,
		._1a4079238_FindTrait=_1a4079238_FindTrait_Lookup_1,
		._1a4079579_FindEnum=_1a4079579_FindEnum_Lookup_1,
		._1a40798ba_FindTypeEnum=_1a40798ba_FindTypeEnum_Lookup_1,
	},
	{
		._1a4077d08_SelectPackage=_1a4077d08_SelectPackage_Lookup_2,
		._1a4078204_FindVar=_1a4078204_FindVar_Lookup_2,
		._1a4078600_FindTypeAlias=_1a4078600_FindTypeAlias_Lookup_2,
		._1a40789eb_FindStruct=_1a40789eb_FindStruct_Lookup_2,
		._1a4078de7_FindFn=_1a4078de7_FindFn_Lookup_2,
		._1a4079238_FindTrait=_1a4079238_FindTrait_Lookup_2,
		._1a4079579_FindEnum=_1a4079579_FindEnum_Lookup_2,
		._1a40798ba_FindTypeEnum=_1a40798ba_FindTypeEnum_Lookup_2,
	},
	{
		._1a4077d08_SelectPackage=_1a4077d08_SelectPackage_Lookup_3,
		._1a4078204_FindVar=_1a4078204_FindVar_Lookup_3,
		._1a4078600_FindTypeAlias=_1a4078600_FindTypeAlias_Lookup_3,
		._1a40789eb_FindStruct=_1a40789eb_FindStruct_Lookup_3,
		._1a4078de7_FindFn=_1a4078de7_FindFn_Lookup_3,
		._1a4079238_FindTrait=_1a4079238_FindTrait_Lookup_3,
		._1a4079579_FindEnum=_1a4079579_FindEnum_Lookup_3,
		._1a40798ba_FindTypeEnum=_1a40798ba_FindTypeEnum_Lookup_3,
	},
	{
		._1a4077d08_SelectPackage=_1a4077d08_SelectPackage_Lookup_4,
		._1a4078204_FindVar=_1a4078204_FindVar_Lookup_4,
		._1a4078600_FindTypeAlias=_1a4078600_FindTypeAlias_Lookup_4,
		._1a40789eb_FindStruct=_1a40789eb_FindStruct_Lookup_4,
		._1a4078de7_FindFn=_1a4078de7_FindFn_Lookup_4,
		._1a4079238_FindTrait=_1a4079238_FindTrait_Lookup_4,
		._1a4079579_FindEnum=_1a4079579_FindEnum_Lookup_4,
		._1a40798ba_FindTypeEnum=_1a40798ba_FindTypeEnum_Lookup_4,
	},
};
static _1a500cd8b_CommonFlagMptrData _1a500cd8b_CommonFlag_mptr_data[] = {
	{
		._1a4ecc256_Name=_1a4ecc256_Name_CommonFlag_0,
		._1a4ecc399_Short=_1a4ecc399_Short_CommonFlag_0,
		._1a4ecc5ec_What=_1a4ecc5ec_What_CommonFlag_0,
		._1a500cc37_Reset=_1a500cc37_Reset_CommonFlag_0,
	},
	{
		._1a4ecc256_Name=_1a4ecc256_Name_CommonFlag_1,
		._1a4ecc399_Short=_1a4ecc399_Short_CommonFlag_1,
		._1a4ecc5ec_What=_1a4ecc5ec_What_CommonFlag_1,
		._1a500cc37_Reset=_1a500cc37_Reset_CommonFlag_1,
	},
	{
		._1a4ecc256_Name=_1a4ecc256_Name_CommonFlag_2,
		._1a4ecc399_Short=_1a4ecc399_Short_CommonFlag_2,
		._1a4ecc5ec_What=_1a4ecc5ec_What_CommonFlag_2,
		._1a500cc37_Reset=_1a500cc37_Reset_CommonFlag_2,
	},
	{
		._1a4ecc256_Name=_1a4ecc256_Name_CommonFlag_3,
		._1a4ecc399_Short=_1a4ecc399_Short_CommonFlag_3,
		._1a4ecc5ec_What=_1a4ecc5ec_What_CommonFlag_3,
		._1a500cc37_Reset=_1a500cc37_Reset_CommonFlag_3,
	},
	{
		._1a4ecc256_Name=_1a4ecc256_Name_CommonFlag_4,
		._1a4ecc399_Short=_1a4ecc399_Short_CommonFlag_4,
		._1a4ecc5ec_What=_1a4ecc5ec_What_CommonFlag_4,
		._1a500cc37_Reset=_1a500cc37_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e172d5_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a3e172d5_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ebac4b_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a3ebac4b_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0226a_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a3e0226a_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e276ad_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a3e276ad_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dea2b8_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a3dea2b8_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de5170_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a3de5170_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de941b_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a3de941b_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de0313_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a3de0313_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de9b58_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a3de9b58_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de14bd_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a3de14bd_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de77c1_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a3de77c1_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de875b_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a3de875b_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b289b651_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b289b651_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dcdc5d_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a3dcdc5d_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e58b1d_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a3e58b1d_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e5627a_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a3e5627a_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0ed6b_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4028e63_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a4028e63_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e1117a_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a3e1117a_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0dae5_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0c132_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0c50b_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0ccae_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0d265_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0e992_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a3e0e992_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0e5b8_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e11477_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a3e11477_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0864a_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a3e0864a_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e56db3_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a3e56db3_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e571b0_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a3e571b0_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de2942_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a3de2942_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e57666_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a3e57666_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de3349_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a3de3349_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e580b2_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a3e580b2_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e58447_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a3e58447_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e58ee7_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a3e58ee7_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e593c1_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a3e593c1_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e59877_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a3e59877_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e08eca_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a3e08eca_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e59c51_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a3e59c51_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e5a3b1_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a3e5a3b1_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e5b5d2_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a3e5b5d2_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e58821_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a3e58821_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e5b978_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a3e5b978_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ddd674_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a3ddd674_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd2987_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a3dd2987_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de4933_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a3de4933_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de2117_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a3de2117_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de3aec_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a3de3aec_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ddac37_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a3ddac37_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ddb111_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a3ddb111_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ddc101_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a3ddc101_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de5e40_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a3de5e40_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ddb40d_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a3ddb40d_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de3723_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a3de3723_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3de1897_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a3de1897_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd335b_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a3dd335b_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e143d1_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a3e143d1_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dee4dc_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a3dee4dc_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a405913b_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a405913b_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e29db9_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a3e29db9_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e2b5c4_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a3e2b5c4_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd091e_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a3dd091e_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dcea83_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a3dcea83_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd017c_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a3dd017c_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dce6ed_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a3dce6ed_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd116c_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a3dd116c_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dced80_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a3dced80_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd4e1d_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a3dd4e1d_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e08a24_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a3e08a24_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd71a6_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a3dd71a6_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd87b2_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a3dd87b2_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd42a2_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a3dd42a2_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd357b_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a3dd357b_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0bc58_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a3e0bc58_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e109a4_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a3e109a4_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4059e2d_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a4059e2d_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0b95b_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a3e0b95b_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd5a9a_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a3dd5a9a_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dce027_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a3dce027_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd4a44_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a3dd4a44_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dcd653_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a3dcd653_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd56c1_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a3dd56c1_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dce401_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a3dce401_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0a2b7_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a3e0a2b7_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e07c98_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a3e07c98_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd8edd_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a3dd8edd_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e07418_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a3e07418_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0b582_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a3e0b582_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0a84a_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0b1db_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e09c34_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a3e09c34_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e093a4_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a3e093a4_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd2c51_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a3dd2c51_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd3922_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a3dd3922_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd3ceb_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a3dd3ceb_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd994a_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a3dd994a_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dda0aa_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a3dda0aa_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd52e7_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a3dd52e7_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd79d1_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a3dd79d1_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd66b1_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a3dd66b1_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd7e87_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a3dd7e87_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3dd6051_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a3dd6051_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e06a44_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a3e06a44_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0666a_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a3e0666a_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e07715_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a3e07715_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0c8d5_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0d71b_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0dde2_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e0e1de_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e10520_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a3e10520_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e1070c_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a3e1070c_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e10ca1_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4160d58_ExceptionalForwardingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a4160d58_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4163751_StrRuneIter>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a4163751_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4162442_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a4162442_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4162e9d_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a4162e9d_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4163377_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a4163377_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a41611dd_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a41611dd_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a41615b7_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a41615b7_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4161dae_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a4161dae_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a416273e_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a416273e_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4163a4d_UnsafeDerefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a4163a4d_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a416193b_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a416193b_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e07072_StructArgExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a3e07072_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4163d4a_UnsafeCastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a4163d4a_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4162ac4_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a4162ac4_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1c908e976_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a5014975_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a5014c61_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a5015019_Out = jule::Str();
jule::Str _20ad67ac4_Compiler = jule::Str();
jule::Str _20ad67cd3_CompilerPath = jule::Str();
jule::Str _20ad67ee2_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _20ad68201_Shadowing = false;
jule::Bool _20ad68410_Transpilation = false;
jule::Bool _20ad68696_Test = false;
jule::Bool _20ad6894e_RC = true;
jule::Bool _20ad68d17_Safety = true;
jule::Bool _20ad69059_Production = false;
jule::Ptr<_1c95e287a_RangeTable> _1c9580708__L = jule::new_ptr<_1c95e287a_RangeTable>(_1c95e287a_RangeTable{._field_R16=jule::Slice<_1c95e1dc9_Range16>::make({_1c95e1dc9_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1c95e1dc9_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1c95e1dc9_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1c95e1dc9_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1c95e1dc9_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1c95e1dc9_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1c95e1dc9_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1c95e1dc9_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1c95e1dc9_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1c95e1dc9_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1c95e1dc9_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1c95e1dc9_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1c95e1dc9_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1c95e1dc9_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1c95e1dc9_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1c95e1dc9_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1c95e1dc9_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1c95e1dc9_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1c95e1dc9_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1c95e1dc9_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1c95e1dc9_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1c95e1dc9_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1c95e1dc9_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1c95e1dc9_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1c95e1dc9_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1c95e1dc9_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1c95e1dc9_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1c95e1dc9_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1c95e1dc9_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1c95e1dc9_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1c95e1dc9_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1c95e1dc9_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1c95e1dc9_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1c95e1dc9_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1c95e1dc9_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1c95e1dc9_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1c95e1dc9_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1c95e2407_Range32>::make({_1c95e2407_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1c95e2407_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1c95e2407_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1c95e2407_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1c95e2407_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1c95e2407_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1c95e2407_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1c95e2407_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1c95e2407_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1c95e2407_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1c95e2407_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1c95e2407_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1c95e2407_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1c95e2407_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1c95e2407_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1c95e2407_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1c95e2407_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1c95e2407_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1c95e2407_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1c95e2407_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1c95e2407_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1c95e2407_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1c95e2407_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1c95e2407_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1c95e287a_RangeTable> _1c958161b__LU = jule::new_ptr<_1c95e287a_RangeTable>(_1c95e287a_RangeTable{._field_R16=jule::Slice<_1c95e1dc9_Range16>::make({_1c95e1dc9_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1c95e1dc9_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1c95e1dc9_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1c95e1dc9_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1c95e1dc9_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1c95e1dc9_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1c95e1dc9_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1c95e1dc9_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1c95e1dc9_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1c95e1dc9_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1c95e1dc9_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1c95e1dc9_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1c95e2407_Range32>::make({_1c95e2407_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1c95e2407_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1c95e2407_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1c95e2407_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1c95e2407_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1c95e2407_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1c95db39b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1c96ea378_first = jule::Array<jule::U8,256>({});
jule::Array<_1c96ea92d_acceptRange,16> _1c96eacc4_acceptRanges = jule::Array<_1c96ea92d_acceptRange,16>({_1c96ea92d_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1c96ea92d_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1c96ea92d_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1c96ea92d_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1c96ea92d_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1c976623a_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1c97edc62_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1c97ec9a8_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1c908aa82_PathStdlib = jule::Str();
jule::Str _1c908ad7e_PathExec = jule::Str();
jule::Str _1c908b137_PathWd = jule::Str();
jule::Str _1c908b434_PathApi = jule::Str();
jule::Str _1c908b6dc_Os = jule::Str::lit("darwin", 6);
jule::Str _1c908b995_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1b2830937__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b2830ecb__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b2875570_floatInfo _1b287596b_f32info = _1b2875570_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b2875570_floatInfo _1b2875c68_f64info = _1b2875570_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b287d743_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1b2880558_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b2881119_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b2881449_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b28846a0_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b2888440_leftCheat> _1b288886e_leftCheats = jule::Slice<_1b2888440_leftCheat>::make({_1b2888440_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b2888440_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1b2888440_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1b2888440_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1b2888440_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1b2888440_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1b2888440_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1b2888440_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1b2888440_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1b2888440_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1b2888440_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1b2888440_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1b2888440_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1b2888440_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1b2888440_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1b2888440_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1b2888440_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1b2888440_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1b2888440_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1b2888440_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1b2888440_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1b2888440_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1b2888440_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1b2888440_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1b2888440_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1b2888440_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1b2888440_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1b2888440_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1b2888440_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1b2888440_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1b2888440_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1b2888440_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1b2888440_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1b2888440_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1b2888440_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1b2888440_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1b2888440_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1b2888440_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1b2888440_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1b2888440_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1b2888440_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1b2888440_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1b2888440_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1b2888440_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1b2888440_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1b2888440_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1b2888440_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1b2888440_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1b2888440_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1b2888440_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1b2888440_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1b2888440_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1b2888440_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1b2888440_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1b2888440_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1b2888440_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1b2888440_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1b2888440_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1b2888440_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1b2888440_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1b2888440_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1b288e91e_BitSize = 0LL;
jule::Str _1b288ec1b_SysInt = jule::Str();
jule::Str _1b288eec4_SysUint = jule::Str();
jule::Array<jule::I32,5> _1a3bad125_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1a3bad345_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1a3bad675_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1a3db267b_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1a3db2967_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1a3dc0a85_kindPair,28> _1a3dc0eb4_keywords = jule::Array<_1a3dc0a85_kindPair,28>({_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1a3dc0a85_kindPair,46> _1a3dc12e4_basicOps = jule::Array<_1a3dc0a85_kindPair,46>({_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1a3dc0a85_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1a3e4d184_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1a4059e2d_TypeKind> _1a414e85d_primNil = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1a4059e2d_TypeKind> _1a414eb5a_primVoid = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a414ee13_primAny = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4150210_primStr = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a41504b8_primBool = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4150771_primUintptr = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4150a29_primUint = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4150de2_primInt = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4151134_primI8 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a41513cb_primI16 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4151684_primI32 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a415193c_primI64 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4151be5_primU8 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4151e9d_primU16 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4152256_primU32 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4152740_primU64 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4152982_primF32 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1a4059e2d_TypeKind> _1a4152b91_primF64 = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Ptr<_1a417c5a0_data> _1a417bba9_emptyData = jule::new_ptr<_1a417c5a0_data>();
jule::Bool _1a4181b37_Copy = false;
jule::Bool _1a4181e34_Deadcode = false;
jule::Bool _1a41821dc_Append = false;
jule::Bool _1a41824d9_Math = false;
jule::Bool _1a4182792_Access = false;
jule::Bool _1a4182a4a_Inline = false;
jule::Bool _1a4182d03_Ptr = false;
jule::Bool _1a41831bb_Cond = false;
jule::Bool _1a418340d_Str = false;
jule::Bool _1a41836a5_Slice = false;
jule::Bool _1a418395d_Assign = false;
jule::Bool _1a4183c16_Exceptional = false;
jule::Bool _1a4183ebe_Iter = false;
jule::Bool _1a4184277_Dynamic = false;
jule::Bool _1a39ce3b9_exprEnabled = false;
jule::Bool _1a39ce6a5_scopeEnabled = false;
jule::Array<jule::U64,12> _1a4e7067d_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a4e5cc42_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1c95e287a_RangeTable> _1c958d8c0_Upper = _1c958161b__LU;
jule::Ptr<_1c95e287a_RangeTable> _1c9587600_Letter = _1c9580708__L;



std::ostream &operator<<(std::ostream &_Stream, _1c95e1dc9_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c95e2407_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c95e287a_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c96ea92d_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1c9754d1c_StrBuilder static__1c97550d6_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1c9754d1c_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1c975d870_Write(_1c9754d1c_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1c975db28_WriteStr(_1c9754d1c_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_20c13747a_StrBytes(_3027_s));;
}



inline void _1c975ddd1_WriteByte(_1c9754d1c_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1c975e420_Str(_1c9754d1c_StrBuilder* _self_) {
	jule::Str _5013_s = _20c1379ca_StrFromBytes((*(_self_))._field_buf);;
	_1c975e61d_Clear(_self_);
	return _5013_s;;
}



inline void _1c975e61d_Clear(_1c9754d1c_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1c975e8a4_Len(_1c9754d1c_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1c975edc1_Buf(_1c9754d1c_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1c9760179_SetBuf(_1c9754d1c_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1c9754d1c_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c9760da0_index(_1c976091b_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1c9761158_append(_1c976091b_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1c97613de_string(_1c976091b_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _20c137711_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c976091b_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20c078c3a_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>> static__1c9765305_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_20c078c3a_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _169_s = _20c03472e_StrToBytes(_1520_path);;
	DIR* _1713_dir = _20c045135_Opendir((&(_169_s[0LL])));;
	if ((_1713_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>>{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _2213_dirent = _20c045311_Readdir(_1713_dir);;
			if ((_2213_dirent == nullptr)) {
				goto _iter_end_1a619ddd8;
			};
			jule::Str _2613_name = _20c034498_BytePtrToStr(((jule::U8*)((*(_2213_dirent)).d_name)));;
			jule::Ptr<_20c07cbea_Status> _2717_stat = ({
				auto except = static__20c079884_Of(_1c97621c0_Join(jule::Slice<jule::Str>::make({_1520_path,_2613_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>>{.error=except.error};
				} jule::Ptr<_20c07cbea_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_20c078c3a_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_20c078c3a_DirEntry>(_20c078c3a_DirEntry{._field_Name=_2613_name, ._field_Stat=_2717_stat})); };
		}
	_iter_next_1a619ddd8:;
	}
	_iter_end_1a619ddd8:;;
	_20c0455a8_Closedir(_1713_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1c9765536_Create(jule::Str _4022_path) {
	jule::Slice<jule::U8> _449_s = _20c03472e_StrToBytes(_4022_path);;
	if ((_20c045eb0_Mkdir((&(_449_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1c9765767_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U8> _549_s = _20c03472e_StrToBytes(_5322_path);;
	if ((_20c046279_Rmdir((&(_549_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _20c078ec1_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20c07ab0a_File>> static__20c077b5c_Open(jule::Str _1920_path, jule::I64 _1931_flag, jule::I64 _1944_mode) {
	jule::Slice<jule::U8> _209_s = _20c03472e_StrToBytes(_1920_path);;
	jule::I64 _219_handle = _20c0447b6_Open((&(_209_s[0LL])), _1931_flag, _1944_mode);;
	if ((_219_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c07ab0a_File>>{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_20c07ab0a_File>>{.result=static__20c07b028_New(static_cast<jule::Uintptr>(_219_handle))};;
}



inline jule::VoidExceptional static__20c077d8d_Remove(jule::Str _3222_path) {
	jule::Slice<jule::U8> _339_s = _20c03472e_StrToBytes(_3222_path);;
	if ((_20c046543_Unlink((&(_339_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20c078322_Write(_20c07ab0a_File* _self_, jule::Slice<jule::U8> _4724_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_20c057675_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4724_buf[0LL])), static_cast<jule::U64>(_4724_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _20c078663_Read(_20c07ab0a_File* _self_, jule::Slice<jule::U8> _6727_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6727_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_20c056de4_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6727_buf[0LL])), static_cast<jule::U64>(_6727_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_20c07ab0a_File> static__20c07b028_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_20c07ab0a_File>(_20c07ab0a_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_20c07ab0a_File>> static__20c07b2e2_Create(jule::Str _5522_path) {
	return static__20c077b5c_Open(_5522_path, static_cast<jule::I64>(1538LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20c07b5ab_Read(jule::Str _6720_path) {
	jule::Ptr<_20c07cbea_Status> _689_s = ({
		auto except = static__20c079884_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20c07cbea_Status>(nullptr);});
	});;
	if ((!(_20c07d35a_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	if ((_20c07d5e1_Size(_689_s) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.result=jule::Slice<jule::U8>::alloc(0LL, 0LL, 0)};;
	};
	jule::Ptr<_20c07ab0a_File> _7813_f = ({
		auto except = static__20c077b5c_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20c07ab0a_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _20c07c18e_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_20c07d5e1_Size(_689_s)), static_cast<jule::I64>(_20c07d5e1_Size(_689_s)), 0);;
	jule::I64 _829_n = ({
		auto except = _20c078663_Read(_7813_f, _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8113_buff.slice(0LL, _829_n)};;
}



inline jule::VoidExceptional static__20c07b952_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_20c07ab0a_File> _9213_f = ({
		auto except = static__20c077b5c_Open(_9121_path, static_cast<jule::I64>(1537LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_20c07ab0a_File>(nullptr);});
	});;
	({
		auto except = _20c078322_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	return _20c07c18e_Close(_9213_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _20c07c18e_Close(_20c07ab0a_File* _self_) {
	if ((_20c0572bd_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _20c07ab0a_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_20c07cbea_Status>> static__20c079884_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_20c07cbea_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _1613_handle = (struct stat){};;
	jule::Slice<jule::U8> _179_s = _20c03472e_StrToBytes(_1218_path);;
	jule::I64 _189_code = _20c044387_Stat((&(_179_s[0LL])), (&(_1613_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c07cbea_Status>>{.error=jule::Any(_20c0770ac_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_20c07cbea_Status> _2213_stat = jule::new_ptr<_20c07cbea_Status>();;
	(*_2213_stat.alloc)._field_size=_1613_handle.st_size;
	if (((_1613_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1613_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_20c07cbea_Status>>{.result=_2213_stat};;
}



inline jule::Bool _20c07d0c4_IsDir(_20c07cbea_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _20c07d35a_IsReg(_20c07cbea_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _20c07d5e1_Size(_20c07cbea_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _20c07cbea_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c9088024_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c980bca3_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2875570_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b28761ec_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2888440_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2880888_set(_1b2888e57_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1a69d054e:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1a69d062b:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1a69d04b6:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1a69d2056:;
					{
						goto _iter_next_1a69d1929;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1a69d2100:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a69d1929;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1a69d2166:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a69d1929;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a69d1929;
					}
				}
				_match_end_1a69d1e35:;
			};
			goto _iter_end_1a69d1929;
		}
	_iter_next_1a69d1929:;
	}
	_iter_end_1a69d1929:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1b287adb1_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1a69d749b;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1a69d749b:;
		}
		_iter_end_1a69d749b:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b2880bc9_floatBits(_1b2888e57_decimal* _self_, _1b2875570_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1a69ecbba;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a69ddc11;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1a69ecbba;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b2880558_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1b2880558_powtab[(*(_self_))._field_dp];
			};
			_1b28895b7_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1a69ddb89:;
	}
	_iter_end_1a69ddb89:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b2880558_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1b2880558_powtab[(-((*(_self_))._field_dp))];
			};
			_1b28895b7_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1a69de55d:;
	}
	_iter_end_1a69de55d:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1b28895b7_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1a69ddc11;
	};
	_1b28895b7_shift(_self_, static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_1b288a167_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1a69ddc11;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1a69ecbba;
	_julec_label_1a69ddc11:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a69ecbba:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b288930e_assign(_1b2888e57_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1a6a00ad0:;
	}
	_iter_end_1a6a00ad0:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a6a02274:;
	}
	_iter_end_1a6a02274:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b288a7a5_trim(_self_);
}



inline void _1b28895b7_shift(_1b2888e57_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a6a03693:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1a6a0373c:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1b288b300_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1a6a03d36:;
				}
				_iter_end_1a6a03d36:;;
				_1b288b300_leftShift(_self_, static_cast<jule::U64>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1a6a037a3:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1b288aa91_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1a6a0508a:;
				}
				_iter_end_1a6a0508a:;;
				_1b288aa91_rightShift(_self_, static_cast<jule::U64>((-(_17628_k))));
			}
		}
		_match_end_1a6a0353e:;
	};
}



inline void _1b2889870_roundDown(_1b2888e57_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1b288a7a5_trim(_self_);
}



inline void _1b2889b28_roundUp(_1b2888e57_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1a6a07785:;
	}
	_iter_end_1a6a07785:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b2889dd1_round(_1b2888e57_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b288b674_shouldRoundUp(_self_, _23224_nd)) {
		_1b2889b28_roundUp(_self_, _23224_nd);
	} else {
		_1b2889870_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1b288a167_roundedInteger(_1b2888e57_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1a6a0a1d3:;
	}
	_iter_end_1a6a0a1d3:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1a6a0b965:;
	}
	_iter_end_1a6a0b965:;;
	if (_1b288b674_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2888e57_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b289b651_Const> static__1b289ba91_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1b289b651_Const> static__1b289bd5a_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b289b651_Const> static__1b289c124_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b289b651_Const> static__1b289c3dd_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b289b651_Const> static__1b289c6a7_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b289b651_Const> static__1b289c8b6_NewNil(void) {
	return jule::new_ptr<_1b289b651_Const>(_1b289b651_Const{._field_data=nullptr});;
}



inline jule::I64 _1b289d026_ReadI64(_1b289b651_Const* _self_) {
	if ((!(_1b28a0622_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1b289d2ac_ReadU64(_1b289b651_Const* _self_) {
	if ((!(_1b28a08a8_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1b289d543_ReadBool(_1b289b651_Const* _self_) {
	if ((!(_1b28a0b3e_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1b289d7c9_ReadStr(_1b289b651_Const* _self_) {
	if ((!(_1b28a0dc5_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1b289da60_ReadF64(_1b289b651_Const* _self_) {
	if ((!(_1b28a115b_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1b289dce6_AsI64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6a73ceb:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a6a73aba:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6a73b31:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a6a73669:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a73614:;
	};
}



inline jule::U64 _1b289e07c_AsU64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a6a73b97:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6a753b3:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6a75429:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a6a740e8:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6a74093:;
	};
}



inline jule::F64 _1b289e313_AsF64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6a76ddc:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6a75490:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a6a76bab:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1a6a758e1:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a7588b:;
	};
}



inline void _1b289e5bb_SetI64(_1b289b651_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1b289e874_SetU64(_1b289b651_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1b289eb2c_SetBool(_1b289b651_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1b289edd5_SetStr(_1b289b651_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1b28a018d_SetF64(_1b289b651_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1b28a0622_IsI64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6a7a75e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a7a9d4:;
			{
				return false;;
			}
		}
		_match_end_1a6a7a97e:;
	};
}



inline jule::Bool _1b28a08a8_IsU64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a6a7b40d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a7ac26:;
			{
				return false;;
			}
		}
		_match_end_1a6a7abc1:;
	};
}



inline jule::Bool _1b28a0b3e_IsBool(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a6a7bd59:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a7b6d8:;
			{
				return false;;
			}
		}
		_match_end_1a6a7b683:;
	};
}



inline jule::Bool _1b28a0dc5_IsStr(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a6a7c7a5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a7c134:;
			{
				return false;;
			}
		}
		_match_end_1a6a7c0ce:;
	};
}



inline jule::Bool _1b28a115b_IsF64(_1b289b651_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6a7d201:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a7ca80:;
			{
				return false;;
			}
		}
		_match_end_1a6a7ca2a:;
	};
}



inline jule::Bool _1b28a13e2_IsNil(_1b289b651_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b28a1a74_And(_1b289b651_Const* _self_, _1b289b651_Const _23818_x) {
	{
		
		if ((_1b28a0b3e_IsBool(_self_) && _1b28a0b3e_IsBool(&_23818_x))) {
			_case_begin_1a6a82458:;
			{
				return (_1b289d543_ReadBool(_self_) && _1b289d543_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1a6a823e2:;
			{
				return false;;
			}
		}
		_match_end_1a6a82018:;
	};
}



inline jule::Bool _1b28a1db5_Or(_1b289b651_Const* _self_, _1b289b651_Const _24917_x) {
	{
		
		if ((_1b28a0b3e_IsBool(_self_) && _1b28a0b3e_IsBool(&_24917_x))) {
			_case_begin_1a6a83756:;
			{
				return (_1b289d543_ReadBool(_self_) || _1b289d543_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1a6a82e1a:;
			{
				return false;;
			}
		}
		_match_end_1a6a82d1b:;
	};
}



inline jule::Bool _1b28a2206_Eq(_1b289b651_Const* _self_, _1b289b651_Const _26017_x) {
	{
		
		if (_1b28a13e2_IsNil(_self_)) {
			_case_begin_1a6a84a87:;
			{
				return _1b28a13e2_IsNil(&_26017_x);;
			}
		}
		else if (_1b28a0b3e_IsBool(_self_)) {
			_case_begin_1a6a84aed:;
			{
				return (_1b28a0b3e_IsBool(&_26017_x) && (_1b289d543_ReadBool(_self_) == _1b289d543_ReadBool(&_26017_x)));;
			}
		}
		else if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a84b64:;
			{
				return (_1b28a0dc5_IsStr(&_26017_x) && (_1b289d7c9_ReadStr(_self_) == _1b289d7c9_ReadStr(&_26017_x)));;
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a84bdb:;
			{
				return (_1b289d026_ReadI64(_self_) == _1b289dce6_AsI64(&_26017_x));;
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a84da6:;
			{
				return (_1b289d2ac_ReadU64(_self_) == _1b289e07c_AsU64(&_26017_x));;
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a84e1c:;
			{
				return (_1b289da60_ReadF64(_self_) == _1b289e313_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1a6a841c4:;
			{
				return false;;
			}
		}
		_match_end_1a6a840c5:;
	};
}



inline jule::Bool _1b28a2547_Lt(_1b289b651_Const* _self_, _1b289b651_Const _28717_x) {
	{
		
		if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a88728:;
			{
				return (_1b28a0dc5_IsStr(&_28717_x) && (_1b289d7c9_ReadStr(_self_) < _1b289d7c9_ReadStr(&_28717_x)));;
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a8878e:;
			{
				return (_1b289d026_ReadI64(_self_) < _1b289dce6_AsI64(&_28717_x));;
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a88805:;
			{
				return (_1b289d2ac_ReadU64(_self_) < _1b289e07c_AsU64(&_28717_x));;
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a8887c:;
			{
				return (_1b289da60_ReadF64(_self_) < _1b289e313_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1a6a854d3:;
			{
				return false;;
			}
		}
		_match_end_1a6a853d4:;
	};
}



inline jule::Bool _1b28a2888_LtEq(_1b289b651_Const* _self_, _1b289b651_Const _31019_x) {
	{
		
		if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a8b3b8:;
			{
				return (_1b28a0dc5_IsStr(&_31019_x) && (_1b289d7c9_ReadStr(_self_) <= _1b289d7c9_ReadStr(&_31019_x)));;
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a8b42e:;
			{
				return (_1b289d026_ReadI64(_self_) <= _1b289dce6_AsI64(&_31019_x));;
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a8b495:;
			{
				return (_1b289d2ac_ReadU64(_self_) <= _1b289e07c_AsU64(&_31019_x));;
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a8b51c:;
			{
				return (_1b289da60_ReadF64(_self_) <= _1b289e313_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1a6a89075:;
			{
				return false;;
			}
		}
		_match_end_1a6a88e76:;
	};
}



inline jule::Bool _1b28a2bc9_Gt(_1b289b651_Const* _self_, _1b289b651_Const _33317_x) {
	{
		
		if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a8e058:;
			{
				return (_1b28a0dc5_IsStr(&_33317_x) && (_1b289d7c9_ReadStr(_self_) > _1b289d7c9_ReadStr(&_33317_x)));;
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a8e0be:;
			{
				return (_1b289d026_ReadI64(_self_) > _1b289dce6_AsI64(&_33317_x));;
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a8e135:;
			{
				return (_1b289d2ac_ReadU64(_self_) > _1b289e07c_AsU64(&_33317_x));;
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a8e1ac:;
			{
				return (_1b289da60_ReadF64(_self_) > _1b289e313_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1a6a8bc15:;
			{
				return false;;
			}
		}
		_match_end_1a6a8bb16:;
	};
}



inline jule::Bool _1b28a301a_GtEq(_1b289b651_Const* _self_, _1b289b651_Const _35619_x) {
	{
		
		if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a91be8:;
			{
				return (_1b28a0dc5_IsStr(&_35619_x) && (_1b289d7c9_ReadStr(_self_) >= _1b289d7c9_ReadStr(&_35619_x)));;
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a91c5e:;
			{
				return (_1b289d026_ReadI64(_self_) >= _1b289dce6_AsI64(&_35619_x));;
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a91cc5:;
			{
				return (_1b289d2ac_ReadU64(_self_) >= _1b289e07c_AsU64(&_35619_x));;
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a91d4c:;
			{
				return (_1b289da60_ReadF64(_self_) >= _1b289e313_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1a6a8e8a5:;
			{
				return false;;
			}
		}
		_match_end_1a6a8e7a6:;
	};
}



inline jule::Bool _1b28a335b_Add(_1b289b651_Const* _self_, _1b289b651_Const _37722_x) {
	{
		
		if (_1b28a0dc5_IsStr(_self_)) {
			_case_begin_1a6a94888:;
			{
				if ((!(_1b28a0dc5_IsStr(&_37722_x)))) {
					return false;;
				};
				_1b289edd5_SetStr(_self_, (_1b289d7c9_ReadStr(_self_) + _1b289d7c9_ReadStr(&_37722_x)));
			}
		}
		else if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a948ee:;
			{
				_1b28a018d_SetF64(_self_, (_1b289da60_ReadF64(_self_) + _1b289e313_AsF64(&_37722_x)));
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a94965:;
			{
				if (_1b28a115b_IsF64(&_37722_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) + _1b289da60_ReadF64(&_37722_x)));
				} else {
					_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) + _1b289dce6_AsI64(&_37722_x)));
				};
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a949dc:;
			{
				if (_1b28a115b_IsF64(&_37722_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) + _1b289da60_ReadF64(&_37722_x)));
				} else {
					_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) + _1b289e07c_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1a6a92545:;
			{
				return false;;
			}
		}
		_match_end_1a6a92446:;
	};
	return true;;
}



inline jule::Bool _1b28a369c_Sub(_1b289b651_Const* _self_, _1b289b651_Const _40622_x) {
	{
		
		if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a99591:;
			{
				_1b28a018d_SetF64(_self_, (_1b289da60_ReadF64(_self_) - _1b289e313_AsF64(&_40622_x)));
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a9963a:;
			{
				if (_1b28a115b_IsF64(&_40622_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) - _1b289da60_ReadF64(&_40622_x)));
				} else {
					_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) - _1b289dce6_AsI64(&_40622_x)));
				};
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a996b2:;
			{
				if (_1b28a115b_IsF64(&_40622_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) - _1b289da60_ReadF64(&_40622_x)));
				} else {
					_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) - _1b289e07c_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1a6a98cdd:;
			{
				return false;;
			}
		}
		_match_end_1a6a98c00:;
	};
	return true;;
}



inline jule::Bool _1b28a39dd_Mul(_1b289b651_Const* _self_, _1b289b651_Const _43022_x) {
	{
		
		if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6a9d3ec:;
			{
				_1b28a018d_SetF64(_self_, (_1b289da60_ReadF64(_self_) * _1b289e313_AsF64(&_43022_x)));
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6a9d496:;
			{
				if (_1b28a115b_IsF64(&_43022_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) * _1b289da60_ReadF64(&_43022_x)));
				} else {
					_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) * _1b289dce6_AsI64(&_43022_x)));
				};
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6a9d51d:;
			{
				if (_1b28a115b_IsF64(&_43022_x)) {
					_1b28a018d_SetF64(_self_, (_1b289e313_AsF64(_self_) * _1b289da60_ReadF64(&_43022_x)));
				} else {
					_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) * _1b289e07c_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1a6a9ca06:;
			{
				return false;;
			}
		}
		_match_end_1a6a9c918:;
	};
	return true;;
}



inline jule::Bool _1b28a3d2e_Div(_1b289b651_Const* _self_, _1b289b651_Const _45822_x) {
	{
		
		if (_1b28a115b_IsF64(_self_)) {
			_case_begin_1a6aa2258:;
			{
				jule::F64 _46113_l = _1b289e313_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1b28a018d_SetF64(_self_, jule::div(_1b289da60_ReadF64(_self_),_46113_l));
			}
		}
		else if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aa2302:;
			{
				jule::F64 _46713_l = _1b289e313_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1b28a018d_SetF64(_self_, jule::div(_1b289e313_AsF64(_self_),_46713_l));
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aa2379:;
			{
				jule::F64 _47313_l = _1b289e313_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1b28a018d_SetF64(_self_, jule::div(_1b289e313_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1a6aa1862:;
			{
				return false;;
			}
		}
		_match_end_1a6aa1774:;
	};
	return true;;
}



inline jule::Bool _1b28a4170_Mod(_1b289b651_Const* _self_, _1b289b651_Const _48722_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aa623a:;
			{
				jule::I64 _49013_l = _1b289dce6_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1b289e5bb_SetI64(_self_, jule::mod(_1b289d026_ReadI64(_self_),_49013_l));
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aa62d4:;
			{
				jule::U64 _49613_l = _1b289e07c_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1b289e874_SetU64(_self_, jule::mod(_1b289d2ac_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1a6aa61b3:;
			{
				return false;;
			}
		}
		_match_end_1a6aa60c5:;
	};
	return true;;
}



inline jule::Bool _1b28a44b1_BitwiseAnd(_1b289b651_Const* _self_, _1b289b651_Const _50929_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aa9040:;
			{
				_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) & _1b289dce6_AsI64(&_50929_x)));
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aa90d9:;
			{
				_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) & _1b289e07c_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1a6aa8eb8:;
			{
				return false;;
			}
		}
		_match_end_1a6aa8dca:;
	};
	return true;;
}



inline jule::Bool _1b28a4802_BitwiseOr(_1b289b651_Const* _self_, _1b289b651_Const _52328_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aaacbc:;
			{
				_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) | _1b289dce6_AsI64(&_52328_x)));
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aaad66:;
			{
				_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) | _1b289e07c_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1a6aaac45:;
			{
				return false;;
			}
		}
		_match_end_1a6aaab79:;
	};
	return true;;
}



inline jule::Bool _1b28a4b43_Xor(_1b289b651_Const* _self_, _1b289b651_Const _53722_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aaca49:;
			{
				_1b289e5bb_SetI64(_self_, (_1b289d026_ReadI64(_self_) ^ _1b289dce6_AsI64(&_53722_x)));
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aacae3:;
			{
				_1b289e874_SetU64(_self_, (_1b289d2ac_ReadU64(_self_) ^ _1b289e07c_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1a6aac9c2:;
			{
				return false;;
			}
		}
		_match_end_1a6aac906:;
	};
	return true;;
}



inline jule::Bool _1b28a4e84_Lshift(_1b289b651_Const* _self_, _1b289b651_Const _55125_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6aae7c6:;
			{
				jule::I64 _55413_l = _1b289dce6_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1b289e07c_AsU64(&_55125_x);;
					_1b289e5bb_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_1b28a566b_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6aae870:;
			{
				_1b28a566b_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1a6aae74e:;
			{
				return false;;
			}
		}
		_match_end_1a6aae683:;
	};
	return true;;
}



inline jule::Bool _1b28a52c5_Rshift(_1b289b651_Const* _self_, _1b289b651_Const _57125_x) {
	{
		
		if (_1b28a0622_IsI64(_self_)) {
			_case_begin_1a6ab1ce5:;
			{
				jule::I64 _57413_l = _1b289dce6_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1b289e07c_AsU64(&_57125_x);;
					_1b289e5bb_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_1b28a599b_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1b28a08a8_IsU64(_self_)) {
			_case_begin_1a6ab1d8e:;
			{
				_1b28a599b_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1a6ab1c6d:;
			{
				return false;;
			}
		}
		_match_end_1a6ab1b80:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b289b651_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a3db851c_Prec(_1a3db8198_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a6b1d4a0:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a6b1d329:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a6b1d390:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a6b1d527:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a6b1d59e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a6b1cd51:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6b1d25d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3db8198_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1a3dbdd4c_Fill(_1a3dbd92e_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1a3dbe0d3_Dir(_1a3dbd92e_File* _self_) {
	return _1c9762db3_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a3dbe369_Name(_1a3dbd92e_File* _self_) {
	return _1c97629d9_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a3dbe941_GetRow(_1a3dbd92e_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1a6b23d8a;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1a6b23d8a:;
	}
	_iter_end_1a6b23d8a:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dbd92e_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dc0a85_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a3dc70ec_pushErr(_1a3dc6a69_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3dc1833_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1a3dc765d_lex(_1a3dc6a69_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a3dc9880_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a3db8198_Token> _46217_token = _1a3dcad6a_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a3db8198_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1a6397037:;
	}
	_iter_end_1a6397037:;;
}



inline jule::Str _1a3dc799e_id(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;;
	jule::I64 _47516_i;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1a3dbb8c7_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;;
			jule::I64 _48117_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1a3dbbd4a_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1a3dbb8c7_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1a639a667:;
	}
	_iter_end_1a639a667:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1a3dc7c35_resume(_1a3dc6a69_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1a3dbb3cc_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a639e8ad:;
						{
							_1a3dc9880_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a639e605:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a639e2b4:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a639e4e5:;
				};
				goto _iter_next_1a639c669;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1a639d2c4;
					};
				}
			_iter_next_1a639d2c4:;
			}
			_iter_end_1a639d2c4:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1a639c669:;
	}
	_iter_end_1a639c669:;;
	return nullptr;;
}



inline void _1a3dc7edd_lexLineComment(_1a3dc6a69_lex* _self_, jule::Ptr<_1a3db8198_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1a63a254d;
			};
		}
	_iter_next_1a63a254d:;
	}
	_iter_end_1a63a254d:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1a3dc8296_lexRangeComment(_1a3dc6a69_lex* _self_, jule::Ptr<_1a3db8198_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1a63a5bb1;
			};
			if ((_54313_r == '\n')) {
				_1a3dc9880_newLine(_self_);
				goto _iter_next_1a63a5bb1;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a63a5bb1:;
	}
	_iter_end_1a63a5bb1:;;
	_1a3dc70ec_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1a3dc85d7_num(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a3dc5381_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a63ad59d;
	};
	__jule_func_result=_1a3dc51a5_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a63ad59d;
	};
	__jule_func_result=_1a3dc3945_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a63ad59d;
	};
	__jule_func_result=_1a3dc367b_commonNum(_56723_txt);
	_julec_label_1a63ad59d:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a3dc8928_escapeSeq(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1a63b233d;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a63b0517:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a63b057d:;
			{
				_59013_seq=_1a3dc599c_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a63b0160:;
			{
				_59013_seq=_1a3dc5c66_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a63b01c6:;
			{
				_59013_seq=_1a3dc6030_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1a63aeaaa:;
			{
				_59013_seq=_1a3dc62e9_byteEscape(_58929_txt);
			}
		}
		_match_end_1a63aeeea:;
	};
	_julec_label_1a63b233d:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a3dc70ec_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1a3dc8d24_getRune(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1a3dc8928_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;;
	jule::I64 _62312_n;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1a3dc9165_lexRune(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1c9754d1c_StrBuilder _62913_run = static__1c97550d6_New(8LL);;
	_1c975ddd1_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1a63b663e;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1a3dc70ec_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a3dc9880_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1a3dc8d24_getRune(_self_, &(_64513_part), false);;
			_1c975db28_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1c96ed403_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a63b663e;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1a63b663e:;
	}
	_iter_end_1a63b663e:;;
	if ((_63213_n == 0LL)) {
		_1a3dc70ec_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1a3dc70ec_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1c975e420_Str(&_62913_run);;
}



inline jule::Str _1a3dc93eb_lexStr(_1a3dc6a69_lex* _self_) {
	_1c9754d1c_StrBuilder _66913_s = static__1c97550d6_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1c975ddd1_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1a63bbd92;
			};
			if ((_67713_ch == '\n')) {
				_1a3dc9880_newLine(_self_);
				if ((!(_6729_raw))) {
					_1a3dc70ec_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1a3dc8d24_getRune(_self_, &(_68917_part), _6729_raw);;
			_1c975db28_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1c96ed403_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1a63bbd92;
			};
		}
	_iter_next_1a63bbd92:;
	}
	_iter_end_1a63bbd92:;;
	return _1c975e420_Str(&_66913_s);;
}



inline void _1a3dc9880_newLine(_1a3dc6a69_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a3dc9de1_isOp(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1a3db8198_Token>* _71066_t) {
	if ((!(_1a3dc1beb_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1a3dca2dc_lexBasicOps(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1a3db8198_Token>* _72048_tok) {
	{
		auto expr = &(_1a3dc12e4_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a63c375b:;
		if (it != expr_end) {
			_1a3dc0a85_kindPair *_72116_pair = it;
			{
				if (_1a3dc9de1_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1a63c375b:;
			++it;
			goto _iter_begin_1a63c375b;
		}
		_iter_end_1a63c375b:;
	};
	return false;;
}



inline jule::Bool _1a3dca6d8_lexId(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1a3db8198_Token>* _72943_t) {
	jule::Str _7309_lex = _1a3dc799e_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a3dcaad4_lexNum(_1a3dc6a69_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1a3db8198_Token>* _73944_t) {
	jule::Str _7409_lex = _1a3dc85d7_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a3db8198_Token> _1a3dcad6a_token(_1a3dc6a69_lex* _self_) {
	jule::Ptr<_1a3db8198_Token> _75113_t = jule::new_ptr<_1a3db8198_Token>(_1a3db8198_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1a3dc7c35_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a3dcaad4_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1a63c9ed2:;
			{
				goto _match_end_1a63c8794;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1a63ca048:;
			{
				(*_75113_t.alloc)._field_Kind=_1a3dc9165_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1a63ca0ae:;
			{
				(*_75113_t.alloc)._field_Kind=_1a3dc93eb_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1a3dc1beb_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1a63c93ee:;
			{
				_1a3dc7edd_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1a3dc1beb_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1a63c9465:;
			{
				_1a3dc8296_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1a3dca2dc_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1a63c94cb:;
			{
				goto _match_end_1a63c8794;
			}
		}
		else if (_1a3dca6d8_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1a63c9542:;
			{
				{
					auto expr = &(_1a3dc0eb4_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a63ce613:;
					if (it != expr_end) {
						_1a3dc0a85_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1a63ce613;
							};
						}
						_iter_next_1a63ce613:;
						++it;
						goto _iter_begin_1a63ce613;
					}
					_iter_end_1a63ce613:;
				};
			}
		}
		else {
			_case_begin_1a63c9388:;
			{
				jule::I32 _79513_r;;
				jule::I64 _79516_sz;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a3dc70ec_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1a63c8794:;
	};
	(*(_self_))._field_column+=_1c96ed403_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dc6a69_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcb73e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcc652_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcca70_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcd653_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcdc5d_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dce027_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dce401_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dce6ed_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dcea83_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dced80_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3dd04e0_IsUnsafe(_1a3dd017c_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd017c_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3dd0c82_AutoSized(_1a3dd091e_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd091e_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd116c_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd1546_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd2987_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd2c51_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd335b_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd357b_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd3922_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd3ceb_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd42a2_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd4a44_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd4e1d_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd52e7_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd56c1_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd5a9a_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd6051_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3dd6a35_Unhandled(_1a3dd66b1_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a3dd6cbb_Ignored(_1a3dd66b1_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd66b1_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd71a6_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd79d1_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd7e87_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd87b2_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd8edd_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dd994a_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dda0aa_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dda3a7_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dda85d_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddac37_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddb111_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddb40d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddba6d_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddc101_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddd014_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddd674_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3dde235_IsSelf(_1a3ddddb1_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ddddb1_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3de0676_IsAnon(_1a3de0313_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de0313_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de14bd_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de1897_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3de247a_IsInf(_1a3de2117_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de2117_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3de2ca5_IsWhileNext(_1a3de2942_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de2942_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de3349_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de3723_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de3aec_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de40a3_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de447c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de4933_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de5170_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de5626_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de5e40_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de6759_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de6c10_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de77c1_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de80eb_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de875b_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de8a25_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de941b_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3de9b58_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dea2b8_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e016ba_FieldIns> _1a3deb96d_instance(jule::Ptr<_1a3deb5b6_Field> _self_) {
	return jule::new_ptr<_1a3e016ba_FieldIns>(_1a3e016ba_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3deb5b6_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ded5c9_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e0226a_StructIns> _1a3dee94e_instance(jule::Ptr<_1a3dee4dc_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1a3e0226a_StructIns> _10013_ins = jule::new_ptr<_1a3e0226a_StructIns>(_1a3e0226a_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a3e016ba_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1a3e1a7a0_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d4e66a:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({jule::new_ptr<_1a3ebac4b_Var>((*(_10721_s)))}));
			}
			_iter_next_1a6d4e66a:;
			++it;
			goto _iter_begin_1a6d4e66a;
		}
		_iter_end_1a6d4e66a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5045c:;
		if (it != expr_end) {
			jule::Ptr<_1a3deb5b6_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1a3e016ba_FieldIns>>::make({_1a3deb96d_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a405b7ae_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1a6d5045c:;
			++it;
			goto _iter_begin_1a6d5045c;
		}
		_iter_end_1a6d5045c:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1a3e143d1_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6d54197:;
			if (it != expr_end) {
				jule::Ptr<_1a3e143d1_Fn> _12225_f = *it;
				{
					jule::Ptr<_1a3e143d1_Fn> _12321_fins = jule::new_ptr<_1a3e143d1_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1a3e143d1_Fn>>::make({_12321_fins}));
				}
				_iter_next_1a6d54197:;
				++it;
				goto _iter_begin_1a6d54197;
			}
			_iter_end_1a6d54197:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1a3e0226a_StructIns> _1a3deec5c_appendInstance(_1a3dee4dc_Struct* _self_, jule::Ptr<_1a3e0226a_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5451b:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _14021_ains = *it;
			{
				if (_1a3e02dd6_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1a6d5451b:;
			++it;
			goto _iter_begin_1a6d5451b;
		}
		_iter_end_1a6d5451b:;
	};
	{ jule::Slice<jule::Ptr<_1a3e0226a_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e00158_FindMethod(_1a3dee4dc_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d57a4c:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1a6d57a4c:;
			++it;
			goto _iter_begin_1a6d57a4c;
		}
		_iter_end_1a6d57a4c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e00499_FindStatic(_1a3dee4dc_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d58d6c:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1a6d58d6c:;
			++it;
			goto _iter_begin_1a6d58d6c;
		}
		_iter_end_1a6d58d6c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3deb5b6_Field> _1a3e007da_FindField(_1a3dee4dc_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d59d3a:;
		if (it != expr_end) {
			jule::Ptr<_1a3deb5b6_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1a6d59d3a:;
			++it;
			goto _iter_begin_1a6d59d3a;
		}
		_iter_end_1a6d59d3a:;
	};
	return nullptr;;
}



inline jule::Bool _1a3e00b2b_IsImplements(_1a3dee4dc_Struct* _self_, jule::Ptr<_1a3e276ad_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5ad08:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1a6d5ad08:;
			++it;
			goto _iter_begin_1a6d5ad08;
		}
		_iter_end_1a6d5ad08:;
	};
	return false;;
}



inline jule::Bool _1a3e00e6c_IsUses(_1a3dee4dc_Struct* _self_, jule::Ptr<_1a3dee4dc_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5b336:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1a6d5c25a:;
				}
				_iter_end_1a6d5c25a:;;
			}
			_iter_next_1a6d5b336:;
			++it;
			goto _iter_begin_1a6d5b336;
		}
		_iter_end_1a6d5b336:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3dee4dc_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e016ba_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e06170_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0666a_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e06a44_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e07072_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e07418_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e07715_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e07c98_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0864a_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e08a24_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e08eca_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e093a4_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0977d_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e09c34_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0a2b7_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0a84a_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0b1db_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0b582_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0b95b_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0bc58_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0c132_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0c50b_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0c8d5_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0ccae_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0d265_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0d71b_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0dae5_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0dde2_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0e1de_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0e5b8_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0e992_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0ed6b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e10520_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1070c_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e109a4_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e10ca1_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1117a_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e11477_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1217b_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e16339_ParamIns> _1a3e12c92_instance(jule::Ptr<_1a3e1290c_Param> _self_) {
	return jule::new_ptr<_1a3e16339_ParamIns>(_1a3e16339_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a3e13028_IsSelf(_1a3e1290c_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a3e132ae_IsRef(_1a3e1290c_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1290c_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e14854_IsVoid(_1a3e143d1_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a3e14ada_IsMethod(_1a3e143d1_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a3e14d71_IsEntryPoint(_1a3e143d1_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a3e15107_IsInit(_1a3e143d1_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a3e1538d_IsAnon(_1a3e143d1_Fn* _self_) {
	return _1a3dbad49_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a3e15624_AnyVar(_1a3e143d1_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3e158aa_instanceForce(jule::Ptr<_1a3e143d1_Fn> _self_) {
	jule::Ptr<_1a3e172d5_FnIns> _10113_ins = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a3e5627a_Scope>(), ._field_Refers=static__1a3e1a7a0_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d73c55:;
		if (it != expr_end) {
			jule::Ptr<_1a3e1290c_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>::make({_1a3e12c92_instance(_10821_p)}));
			}
			_iter_next_1a6d73c55:;
			++it;
			goto _iter_begin_1a6d73c55;
		}
		_iter_end_1a6d73c55:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3e15b41_instance(jule::Ptr<_1a3e143d1_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1a3e158aa_instanceForce(_self_);;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3e15e4e_appendInstance(_1a3e143d1_Fn* _self_, jule::Ptr<_1a3e172d5_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d78b6c:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _14521_ains = *it;
			{
				if (_1a3e18d42_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1a6d78b6c:;
			++it;
			goto _iter_begin_1a6d78b6c;
		}
		_iter_end_1a6d78b6c:;
	};
	{ jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e143d1_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3e1669c_Str(_1a3e16339_ParamIns* _self_) {
	_1c9754d1c_StrBuilder _16713_s = static__1c97550d6_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1c975db28_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1c975db28_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1a3e13028_IsSelf((*(_self_))._field_Decl)) {
		if (_1a3e132ae_IsRef((*(_self_))._field_Decl)) {
			_1c975ddd1_WriteByte(&_16713_s, '&');
		};
		_1c975db28_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1c975e420_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1c975db28_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1c975db28_WriteStr(&_16713_s, _1a405a2e6_Str((*(_self_))._field_Kind));
	};
	return _1c975e420_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e16339_ParamIns _Src) {
	_Stream << _1a3e1669c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e17626_Str(_1a3e172d5_FnIns* _self_) {
	;
	return _1a3e19183_GetKindStr(_self_, false);;
}



inline jule::Bool _1a3e17967_Equal(jule::Ptr<_1a3e172d5_FnIns> _self_, jule::Ptr<_1a4059e2d_TypeKind> _21821_other) {
	jule::Ptr<_1a3e172d5_FnIns> _2199_f = _1a405d86b_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1a3e17e0c_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1a3e17e0c_EqualFn(jule::Ptr<_1a3e172d5_FnIns> _self_, jule::Ptr<_1a3e172d5_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a3e14854_IsVoid((*_self_.alloc)._field_Decl) != _1a3e14854_IsVoid((*((*(_22924_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1a3e16339_ParamIns>,jule::Ptr<_1a3e16339_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1a3e16339_ParamIns>,jule::Ptr<_1a3e16339_ParamIns>)>([=](jule::Ptr<_1a3e16339_ParamIns> _23927_p1, jule::Ptr<_1a3e16339_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*(*(_23942_p2))._field_Decl.alloc)._field_Mutable)) {
			return false;;
		};
		if (_1a3e13028_IsSelf((*_23927_p1.alloc)._field_Decl)) {
			if ((!(_1a3e13028_IsSelf((*_23942_p2.alloc)._field_Decl)))) {
				return false;;
			};
			if ((_1a3e132ae_IsRef((*_23927_p1.alloc)._field_Decl) != _1a3e132ae_IsRef((*_23942_p2.alloc)._field_Decl))) {
				return false;;
			};
			return true;;
		};
		if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Reference)) {
			return false;;
		};
		if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
			return false;;
		};
		return _1a405a637_Equal((*_23927_p1.alloc)._field_Kind, (*_23942_p2.alloc)._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*_self_.alloc)._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*_self_.alloc)._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1a6d89d04:;
	}
	_iter_end_1a6d89d04:;;
	if ((!(_1a3e14854_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1a405a637_Equal((*_self_.alloc)._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a3e1824d_equalTrait(jule::Ptr<_1a3e172d5_FnIns> _self_, jule::Ptr<_1a3e172d5_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a3e17e0c_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _1a3e184d4_Types(_1a3e172d5_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a6d90a63:;
			{
				return nullptr;;
			}
		}
		else if ((_1a405e3a5_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a6d90ac9:;
			{
				return jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a6d90612:;
			{
				return (*(_1a405e3a5_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1a6d90513:;
	};
}



inline jule::Bool _1a3e1876a_IsBuiltin(_1a3e172d5_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a3e18a01_IsAnon(_1a3e172d5_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a3e1538d_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a3e18d42_Same(_1a3e172d5_FnIns* _self_, jule::Ptr<_1a3e172d5_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*_33119_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d93ed9:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1a4058547_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1a4058547_InsGeneric> _33713_g2 = (*_33119_f.alloc)._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*(*(_33713_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a405a637_Equal((*(*(_33616_g)).alloc)._field_Kind, (*_33713_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a6d93ed9:;
			++it;
			_33613_i++;
			goto _iter_begin_1a6d93ed9;
		}
		_iter_end_1a6d93ed9:;
	};
	return true;;
}



inline jule::Str _1a3e19183_GetKindStr(_1a3e172d5_FnIns* _self_, jule::Bool _34825_ident) {
	_1c9754d1c_StrBuilder _34913_s = static__1c97550d6_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1c975db28_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_1c975db28_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1c975ddd1_WriteByte(&_34913_s, ' ');
		_1c975db28_WriteStr(&_34913_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1c975ddd1_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6d992ec:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1a3e16339_ParamIns> *_36520_p = it;
				{
					_1c975db28_WriteStr(&_34913_s, _1a3e1669c_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1c975ddd1_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1a6d992ec:;
				++it;
				_36517_i++;
				goto _iter_begin_1a6d992ec;
			}
			_iter_end_1a6d992ec:;
		};
	};
	_1c975ddd1_WriteByte(&_34913_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_1c975ddd1_WriteByte(&_34913_s, '!');
	};
	if ((!(_1a3e14854_IsVoid((*(_self_))._field_Decl)))) {
		_1c975ddd1_WriteByte(&_34913_s, ':');
		_1c975db28_WriteStr(&_34913_s, _1a405a2e6_Str((*(_self_))._field_Result.ptr()));
	};
	return _1c975e420_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e172d5_FnIns _Src) {
	_Stream << _1a3e17626_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a3e1a4a3_ReferenceStack> static__1a3e1a7a0_new(void) {
	return jule::new_ptr<_1a3e1a4a3_ReferenceStack>(_1a3e1a4a3_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a3e1ab9b_Len(_1a3e1a4a3_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a3e1aedc_At(_1a3e1a4a3_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1a3e1b295_Push(_1a3e1a4a3_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1a77ec6bc_Exist(_1a3e1a4a3_ReferenceStack* _self_, jule::Ptr<_1a3e172d5_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77eda53:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a77eda53:;
			++it;
			goto _iter_begin_1a77eda53;
		}
		_iter_end_1a77eda53:;
	};
	return false;;
}

inline jule::Bool _1a781246d_Exist(_1a3e1a4a3_ReferenceStack* _self_, jule::Ptr<_1a3ebac4b_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78137b0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a78137b0:;
			++it;
			goto _iter_begin_1a78137b0;
		}
		_iter_end_1a78137b0:;
	};
	return false;;
}

inline jule::Bool _1a78cc02c_Exist(_1a3e1a4a3_ReferenceStack* _self_, jule::Ptr<_1a3e0226a_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78cd3b3:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a78cd3b3:;
			++it;
			goto _iter_begin_1a78cd3b3;
		}
		_iter_end_1a78cd3b3:;
	};
	return false;;
}

inline jule::Bool _1a79b04d9_Exist(_1a3e1a4a3_ReferenceStack* _self_, jule::Ptr<_1a3e276ad_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79b181a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a79b181a:;
			++it;
			goto _iter_begin_1a79b181a;
		}
		_iter_end_1a79b181a:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1a4a3_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e1b9c1_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e21e27_pushErr(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3db8198_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3e95a28_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1a3e226a8_pushSuggestion(_1a3e21476_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1a3e970ce_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1a3e22aa4_checkCppUseDeclPath(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3de6759_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1c9762456_Ext((*(_34556_path)));;
	if (((!(_1c97ee9ee_IsValidHeaderExt(_3469_ext))) && (!(_1c97eecb8_IsValidCppExt(_3469_ext))))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20c07cbea_Status> _3539_info = ({
		auto except = static__20c079884_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1a3e21e27_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_20c07cbea_Status>(nullptr);});
	});;
	if (_20c07d0c4_IsDir(_3539_info.ptr())) {
		_1a3e21e27_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e22db2_buildCppHeaderImport(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3de6759_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1c97ee724_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1c97621c0_Join(jule::Slice<jule::Str>::make({_1a3dbe0d3_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1a3e22aa4_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9762720_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1a3e21e27_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1a3e77a60_ImportInfo>(_1a3e77a60_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23203_buildStdImport(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3de6759_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1c9746858_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39513_path=_1c97621c0_Join(jule::Slice<jule::Str>::make({_1c908aa82_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9762720_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20c07cbea_Status> _4059_info = ({
		auto except = static__20c079884_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1a3e21e27_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20c07cbea_Status>(nullptr);});
	});;
	if ((!(_20c07d0c4_IsDir(_4059_info.ptr())))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1c9742469_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1a3e77a60_ImportInfo>(_1a3e77a60_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a3e7a986_Package>(_1a3e7a986_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23544_buildIdentImport(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3de6759_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1c9741b2d_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1c974137a_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a3e21e27_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73bb0_GetModPath((*_self_.alloc)._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1a3e21e27_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a3e226a8_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1c9746858_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44813_path=_1c97621c0_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9762720_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20c07cbea_Status> _4599_info = ({
		auto except = static__20c079884_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1a3e21e27_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_20c07cbea_Status>(nullptr);});
	});;
	if ((!(_20c07d0c4_IsDir(_4599_info.ptr())))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1c9742469_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1a3e77a60_ImportInfo>(_1a3e77a60_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a3e7a986_Package>(_1a3e7a986_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e23885_buildImport(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3de6759_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1a6dd8a23:;
			{
				return _1a3e22db2_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1a6dd8e0d:;
			{
				return _1a3e23203_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1a6dd89ac:;
			{
				return _1a3e23544_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1a6dd88ad:;
	};
}



inline jule::Bool _1a3e23bc6_checkDuplicateUseDecl(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3e77a60_ImportInfo> _5009_lpkg = _1a40240d4_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>([=](jule::Ptr<_1a3e77a60_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a3e21e27_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1a3e226a8_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a3e24039_implImportSelections(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _51244_imp, jule::Ptr<_1a3de6759_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ddda5b:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6dde441:;
					if (it != expr_end) {
						jule::Ptr<_1a3db8198_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1a6dde441;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1a3e21e27_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1a3e226a8_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a6dde441;
							};
						}
						_iter_next_1a6dde441:;
						++it;
						goto _iter_begin_1a6dde441;
					}
					_iter_end_1a6dde441:;
				};
			}
			_iter_next_1a6ddda5b:;
			++it;
			goto _iter_begin_1a6ddda5b;
		}
		_iter_end_1a6ddda5b:;
	};
}



inline jule::Str _1a3e2437a_getAsLinkPath(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1c9740a83_HasPrefix(_52737_path, _1c908aa82_PathStdlib)) {
		(_52737_path).mut_slice(_1c908aa82_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1c9746858_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9762720_Abs(_1a3e74b4a_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1a3e73bb0_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 47LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1c9746858_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1a3e24798_pushCycleError(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3e21476_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1c9754d1c_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1c980c215_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a3e2437a_getAsLinkPath(_self_, _1a3dbe0d3_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1a3e2437a_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _1c975e420_Str(_54171_message);;
	_1c975db28_WriteStr(_54171_message, _1c974028b_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c975db28_WriteStr(_54171_message, _5439_refersTo);
	_1c975ddd1_WriteByte(_54171_message, '\n');
	_1c975db28_WriteStr(_54171_message, _5479_m);
}



inline void _1a3e24bb6_pushCrossCycleError(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3e21476_symbolBuilder>* _55440_target, jule::Ptr<_1a3e77a60_ImportInfo>* _55465_imp, jule::Ptr<_1a3db8198_Token>* _55484_errorToken) {
	_1c9754d1c_StrBuilder _55513_message = static__1c97550d6_New(32LL);;
	_1a3e24798_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1a3e21476_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a3e21476_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1a3e24798_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1a3dbe0d3_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1a3e24798_pushCycleError(_self_, _55440_target, _1a3dbe0d3_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1a6de6c95;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1a6de6c95:;
	}
	_iter_end_1a6de6c95:;;
	_1a3e21e27_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1c975e420_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1a3e250b2_checkImportCycles(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3e77a60_ImportInfo> _57737_imp, jule::Ptr<_1a3de6759_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1a3dbe0d3_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a3e2437a_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a3e21476_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1a6ded928:;
	if ((_1a3dbe0d3_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1a3e24bb6_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1a6ded928;
	};
	return true;;
}



inline void _1a3e254d0_checkPackageAccessibility(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3de6759_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1a3e74b4a_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1a3e73bb0_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _1c974547d_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1a3e21e27_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3e258cb_importPackage(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _61438_imp, jule::Ptr<_1a3de6759_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e77a60_ImportInfo> _61913_port = _1a3e74b4a_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1a3e74342_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73bb0_GetModPath((*_self_.alloc)._field_importer);;
		_1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73929_SetModPath((*_self_.alloc)._field_importer, _1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e74001_ModById((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1a3e254d0_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		_1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73929_SetModPath((*_self_.alloc)._field_importer, _62413_oldMod);
	} else {
		if ((!(_1a3e250b2_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73bb0_GetModPath((*_self_.alloc)._field_importer);;
		__JULE_DEFER({
			_1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73929_SetModPath((*_self_.alloc)._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e73929_SetModPath((*_self_.alloc)._field_importer, _1c908aa82_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> _63817_asts;;
		jule::Slice<_1c980bca3_Log> _63827_errors;;
		({
			__jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e7473d_ImportPackage((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a3e254d0_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6e0a072:;
			if (it != expr_end) {
				jule::Ptr<_1a3dcb73e_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1a4023aea_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a407a811_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1a6e0a072:;
				++it;
				goto _iter_begin_1a6e0a072;
			}
			_iter_end_1a6e0a072:;
		};
	};
	_1a3e24039_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e25c1c_importUseDecl(jule::Ptr<_1a3e21476_symbolBuilder> _self_, jule::Ptr<_1a3de6759_UseDecl>* _66138_decl) {
	jule::Ptr<_1a3e77a60_ImportInfo> _66213_imp = _1a3e23885_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1a3e23bc6_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1a3e258cb_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		_1a3e74b4a_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1a3e749e6_Imported((*_self_.alloc)._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1a3e25e1a_importUseDecls(jule::Ptr<_1a3e21476_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e10907:;
		if (it != expr_end) {
			jule::Ptr<_1a3de6759_UseDecl> _68321_decl = *it;
			{
				_1a3e25c1c_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1a6e10907;
				};
			}
			_iter_next_1a6e10907:;
			++it;
			goto _iter_begin_1a6e10907;
		}
		_iter_end_1a6e10907:;
	};
}



inline void _1a3e261c3_appendNode(_1a3e21476_symbolBuilder* _self_, _1a3dcc652_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a6e10e46:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1a3e50d24_Impl>>::make({_1a3e20db0_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3dea2b8_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a6e11e69:;
			{
				jule::Ptr<_1a405913b_TypeAlias> _69717_ta = _1a3e1c40b_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de5170_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a6e11ed0:;
			{
				jule::Ptr<_1a3dee4dc_Struct> _70017_srct = _1a3e1cc9c_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de941b_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a6e12046:;
			{
				jule::Ptr<_1a3e143d1_Fn> _70317_f = _1a3e1d94b_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de0313_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1a3e143d1_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a6e120ac:;
			{
				jule::Ptr<_1a3e276ad_Trait> _70617_t = _1a3e1e298_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de9b58_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1a3e276ad_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a6e12750:;
			{
				jule::Ptr<_1a3ebac4b_Var> _70917_v = _1a3e2082c_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de14bd_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a6e127b6:;
			{
				jule::Ptr<_1a3e29db9_Enum> _71217_e = _1a3e1ed26_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de77c1_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1a3e29db9_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a6e1282c:;
			{
				jule::Ptr<_1a3e2b5c4_TypeEnum> _71517_e = _1a3e20563_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1a3de875b_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1a3e2b5c4_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1a6e11d59:;
			{
				_1a3e21e27_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6e11d04:;
	};
}



inline void _1a3e263c1_appendNodes(_1a3e21476_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e218b3:;
		if (it != expr_end) {
			_1a3dcc652_Node _72321_node = *it;
			{
				_1a3e261c3_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1a6e218b3:;
			++it;
			goto _iter_begin_1a6e218b3;
		}
		_iter_end_1a6e218b3:;
	};
}



inline void _1a3e26679_pushDirectivePass(_1a3e21476_symbolBuilder* _self_, jule::Ptr<_1a3dcca70_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1a3e21e27_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a3db8198_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1a3e21e27_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3db8198_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3e21e27_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3e21e27_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1a3e1b9c1_Pass>::make({_1a3e1b9c1_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1a3e26877_appendTopDirectives(_1a3e21476_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e27028:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1a6e289b9:;
						{
							_1a3e26679_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1a6e288ed:;
				};
			}
			_iter_next_1a6e27028:;
			++it;
			goto _iter_begin_1a6e27028;
		}
		_iter_end_1a6e27028:;
	};
}



inline void _1a3e26a75_build(jule::Ptr<_1a3e21476_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a4023aea_SymbolTable>(_1a4023aea_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1a3e26877_appendTopDirectives(_self_);
	_1a3e25e1a_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a3e263c1_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e21476_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3e27a76_Str(_1a3e276ad_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3e27db7_Equal(jule::Ptr<_1a3e276ad_Trait> _self_, jule::Ptr<_1a4059e2d_TypeKind> _2521_other) {
	jule::Ptr<_1a3e276ad_Trait> _269_trt = _1a405dd88_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e2835c_FindMethod(_1a3e276ad_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2c391:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1a6e2c391:;
			++it;
			goto _iter_begin_1a6e2c391;
		}
		_iter_end_1a6e2c391:;
	};
	return _1a3e289de_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e289de_findMethodInherit(_1a3e276ad_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2e4a3:;
		if (it != expr_end) {
			jule::Ptr<_1a4062100_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1a6e2e4a3;
				};
				jule::Ptr<_1a3e276ad_Trait> _6017_t = _1a405dd88_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1a3e143d1_Fn> _6221_f2 = _1a3e2835c_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1a6e2e4a3:;
			++it;
			goto _iter_begin_1a6e2e4a3;
		}
		_iter_end_1a6e2e4a3:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e276ad_Trait _Src) {
	_Stream << _1a3e27a76_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a3e29704_AutoExpr(_1a3e2934c_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e2934c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3e2a23d_Str(_1a3e29db9_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3e2a57e_Equal(jule::Ptr<_1a3e29db9_Enum> _self_, jule::Ptr<_1a4059e2d_TypeKind> _3821_other) {
	jule::Ptr<_1a3e29db9_Enum> _399_enm = _1a405cd32_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1a3e2934c_EnumItem> _1a3e2a9ad_FindItem(_1a3e29db9_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e33cc1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2934c_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1a6e33cc1:;
			++it;
			goto _iter_begin_1a6e33cc1;
		}
		_iter_end_1a6e33cc1:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e29db9_Enum _Src) {
	_Stream << _1a3e2a23d_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e2aeec_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3e2b915_Str(_1a3e2b5c4_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3e2bc56_Equal(jule::Ptr<_1a3e2b5c4_TypeEnum> _self_, jule::Ptr<_1a4059e2d_TypeKind> _8021_other) {
	jule::Ptr<_1a3e2b5c4_TypeEnum> _819_tenm = _1a405d0b8_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1a3e2aeec_TypeEnumItem> _1a3e2c185_FindItem(_1a3e2b5c4_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e36048:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2aeec_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1a6e36048:;
			++it;
			goto _iter_begin_1a6e36048;
		}
		_iter_end_1a6e36048:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e2b5c4_TypeEnum _Src) {
	_Stream << _1a3e2b915_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e2eaa0_Str(_1a3e2e72b_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a3e2ede1_Equal(jule::Ptr<_1a3e2e72b_comptimeRange> _self_, jule::Ptr<_1a4059e2d_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e2e72b_comptimeRange _Src) {
	_Stream << _1a3e2eaa0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e305b7_Str(_1a3e301ee_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a3e30908_Equal(jule::Ptr<_1a3e301ee_comptimeStructField> _self_, jule::Ptr<_1a4059e2d_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e30e9c__Name(jule::Ptr<_1a3e301ee_comptimeStructField> _self_, jule::Ptr<_1a402ab8a_Eval>* _5026_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _5513_constant = static__1b289c3dd_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e31398__Type(jule::Ptr<_1a3e301ee_comptimeStructField> _self_, jule::Ptr<_1a402ab8a_Eval>* _6330_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e31794__Public(jule::Ptr<_1a3e301ee_comptimeStructField> _self_, jule::Ptr<_1a402ab8a_Eval>* _7132_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _7613_constant = static__1b289c124_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e31aa2_subIdent(jule::Ptr<_1a3e301ee_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a6e43b05:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _8717_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _8833_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _8848_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e30e9c__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a6e43b9e:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _9417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _9533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _9548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e31794__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6e43c26:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _10117_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _10233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _10248_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e31398__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1a6e43819:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6e439a1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e301ee_comptimeStructField _Src) {
	_Stream << _1a3e305b7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e32234_Str(_1a3e31db0_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a3e32575_Equal(jule::Ptr<_1a3e31db0_comptimeStructFields> _self_, jule::Ptr<_1a4059e2d_TypeKind> _12021_other) {
	return false;;
}



inline void _1a3e329e8_ready(_1a3e31db0_comptimeStructFields* _self_, jule::Ptr<_1a3ebac4b_Var>* _12429_keyA, jule::Ptr<_1a3ebac4b_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e301ee_comptimeStructField>(), 6)})});
	};
}



inline void _1a3e32e16_step(_1a3e31db0_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1a3ebac4b_Var>* _14536_keyA, jule::Ptr<_1a3ebac4b_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1a405eb58_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1a3e3319c_len(_1a3e31db0_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e31db0_comptimeStructFields _Src) {
	_Stream << _1a3e32234_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e3382e_Str(_1a3e334aa_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a3e33b70_Equal(jule::Ptr<_1a3e334aa_comptimeStatic> _self_, jule::Ptr<_1a4059e2d_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3429c__Name(jule::Ptr<_1a3e334aa_comptimeStatic> _self_, jule::Ptr<_1a402ab8a_Eval>* _17326_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _17813_constant = static__1b289c3dd_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e34698__Type(jule::Ptr<_1a3e334aa_comptimeStatic> _self_, jule::Ptr<_1a402ab8a_Eval>* _18630_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e34a94__Public(jule::Ptr<_1a3e334aa_comptimeStatic> _self_, jule::Ptr<_1a402ab8a_Eval>* _19432_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _19913_constant = static__1b289c124_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e34dd5_subIdent(jule::Ptr<_1a3e334aa_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a6e59610:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _21017_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _21133_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _21148_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3429c__Name(_self_, _21133_e, _21148_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a6e596a9:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _21717_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _21833_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _21848_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e34a94__Public(_self_, _21833_e, _21848_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6e59731:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _22417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _22533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _22548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e34698__Type(_self_, _22533_e, _22548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1a6e59324:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6e594ab:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e334aa_comptimeStatic _Src) {
	_Stream << _1a3e3382e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e354e0_Str(_1a3e3516b_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a3e35831_Equal(jule::Ptr<_1a3e3516b_comptimeStatics> _self_, jule::Ptr<_1a4059e2d_TypeKind> _24321_other) {
	return false;;
}



inline void _1a3e35ca4_ready(_1a3e3516b_comptimeStatics* _self_, jule::Ptr<_1a3ebac4b_Var>* _24729_keyA, jule::Ptr<_1a3ebac4b_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e334aa_comptimeStatic>(), 8)})});
	};
}



inline void _1a3e361c2_step(_1a3e3516b_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1a3ebac4b_Var>* _26836_keyA, jule::Ptr<_1a3ebac4b_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1a4061462_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1a3e36458_len(_1a3e3516b_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e3516b_comptimeStatics _Src) {
	_Stream << _1a3e354e0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e36bea_Str(_1a3e36766_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a3e3703b_Equal(jule::Ptr<_1a3e36766_comptimeEnumField> _self_, jule::Ptr<_1a4059e2d_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e374ae__Name(jule::Ptr<_1a3e36766_comptimeEnumField> _self_, jule::Ptr<_1a402ab8a_Eval>* _29626_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _30113_constant = static__1b289c3dd_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e37800_subIdent(jule::Ptr<_1a3e36766_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a6e6a302:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _31217_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _31333_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _31348_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e374ae__Name(_self_, _31333_e, _31348_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1a6e6a016:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6e6a19d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e36766_comptimeEnumField _Src) {
	_Stream << _1a3e36bea_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e37e82_Str(_1a3e37b0d_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a3e382c3_Equal(jule::Ptr<_1a3e37b0d_comptimeEnumFields> _self_, jule::Ptr<_1a4059e2d_TypeKind> _33121_other) {
	return false;;
}



inline void _1a3e38746_ready(_1a3e37b0d_comptimeEnumFields* _self_, jule::Ptr<_1a3ebac4b_Var>* _33529_keyA, jule::Ptr<_1a3ebac4b_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e36766_comptimeEnumField>(), 10)})});
	};
}



inline void _1a3e38b64_step(_1a3e37b0d_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1a3ebac4b_Var>* _35636_keyA, jule::Ptr<_1a3ebac4b_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1a4060175_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1a3e38dea_len(_1a3e37b0d_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e37b0d_comptimeEnumFields _Src) {
	_Stream << _1a3e37e82_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e3957c_Str(_1a3e39208_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a3e398bd_Equal(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Ptr<_1a4059e2d_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3a12c__Name(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Ptr<_1a402ab8a_Eval>* _38426_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _38913_constant = static__1b289c3dd_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3a528__Type(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Ptr<_1a402ab8a_Eval>* _39730_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3a924__Variadic(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Ptr<_1a402ab8a_Eval>* _40534_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _41013_constant = static__1b289c124_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3ad20__Reference(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Ptr<_1a402ab8a_Eval>* _41835_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _42313_constant = static__1b289c124_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3b161_subIdent(jule::Ptr<_1a3e39208_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a6e7ebb8:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _43417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _43533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _43548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3a12c__Name(_self_, _43533_e, _43548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1a6e7ec2e:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _44117_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _44233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _44248_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3a924__Variadic(_self_, _44233_e, _44248_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1a6e7ec95:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _44817_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _44933_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _44948_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3ad20__Reference(_self_, _44933_e, _44948_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6e7ed1c:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _45517_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _45633_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _45648_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3a528__Type(_self_, _45633_e, _45648_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1a6e7e877:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6e7ea0e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e39208_comptimeParam _Src) {
	_Stream << _1a3e3957c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e3b6d3_Str(_1a3e3b392_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a3e3ba24_Equal(jule::Ptr<_1a3e3b392_comptimeParams> _self_, jule::Ptr<_1a4059e2d_TypeKind> _47421_other) {
	return false;;
}



inline void _1a3e3be97_ready(_1a3e3b392_comptimeParams* _self_, jule::Ptr<_1a3ebac4b_Var>* _47829_keyA, jule::Ptr<_1a3ebac4b_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e39208_comptimeParam>(), 12)})});
	};
}



inline void _1a3e3c3b5_step(_1a3e3b392_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1a3ebac4b_Var>* _49936_keyA, jule::Ptr<_1a3ebac4b_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1a4060692_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1a3e3c64b_len(_1a3e3b392_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e3b392_comptimeParams _Src) {
	_Stream << _1a3e3b6d3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e3cccd_Str(_1a3e3c959_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a3e3d11e_Equal(jule::Ptr<_1a3e3c959_comptimeTypeInfos> _self_, jule::Ptr<_1a4059e2d_TypeKind> _52321_other) {
	return false;;
}



inline void _1a3e3d592_ready(_1a3e3c959_comptimeTypeInfos* _self_, jule::Ptr<_1a3ebac4b_Var>* _52729_keyA, jule::Ptr<_1a3ebac4b_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e3e054_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1a3e3d9b0_step(_1a3e3c959_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1a3ebac4b_Var>* _54836_keyA, jule::Ptr<_1a3ebac4b_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1a4059977_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I64 _1a3e3dc46_len(_1a3e3c959_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e3c959_comptimeTypeInfos _Src) {
	_Stream << _1a3e3cccd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e3e3c8_Str(_1a3e3e054_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a405a2e6_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a3e3e719_Equal(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a4059e2d_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e3ed68__Str(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _57625_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _58113_constant = static__1b289c3dd_NewStr(_1a405a2e6_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e40264__Kind(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _58930_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e29db9_Enum> _59413_enm = _1a3e797ba_FindEnum(_1a3e4b57d_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a3e2934c_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1a405b292_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1a6e9c444:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a405db02_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9c345:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a405dd88_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9c103:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a405ca9b_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9c169:;
			{
				if (_1a406a834_IsUnsafe(_1a405ca9b_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a405c815_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9c1d0:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a405cd32_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9c246:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a405e11e_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cba3:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a405d5d5_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cc19:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a405d34e_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cc80:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a405d86b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cce6:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a405e3a5_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cd5c:;
			{
				_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a405c57e_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6e9cdd4:;
			{
				jule::Ptr<_1a4062a07_Prim> _62413_prim = _1a405c57e_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1a4066225_IsAny(_62413_prim.ptr())) {
						_case_begin_1a6ea8d13:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a4065c08_IsBool(_62413_prim.ptr())) {
						_case_begin_1a6ea8c14:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a4065e8e_IsStr(_62413_prim.ptr())) {
						_case_begin_1a6ea8a16:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a4064e38_IsF32(_62413_prim.ptr())) {
						_case_begin_1a6ea8a7c:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a40651be_IsF64(_62413_prim.ptr())) {
						_case_begin_1a6ea8ae3:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a40638b5_IsI8(_62413_prim.ptr())) {
						_case_begin_1a6ea9572:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a4063b4b_IsI16(_62413_prim.ptr())) {
						_case_begin_1a6ea95d8:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a4063dd2_IsI32(_62413_prim.ptr())) {
						_case_begin_1a6ea964e:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a4064168_IsI64(_62413_prim.ptr())) {
						_case_begin_1a6ea96b5:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a40643ee_IsU8(_62413_prim.ptr())) {
						_case_begin_1a6ea972b:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a4064685_IsU16(_62413_prim.ptr())) {
						_case_begin_1a6ea9792:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a406491b_IsU32(_62413_prim.ptr())) {
						_case_begin_1a6ea9808:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a4064ba2_IsU64(_62413_prim.ptr())) {
						_case_begin_1a6ea986e:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a4065455_IsInt(_62413_prim.ptr())) {
						_case_begin_1a6ea98e6:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a40656db_IsUint(_62413_prim.ptr())) {
						_case_begin_1a6ea996d:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a4065972_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1a6ea99e5:;
						{
							_59517_item=_1a3e2a9ad_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a6ea886d:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a405a2e6_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1a6ea8807:;
				};
			}
		}
		else {
			_case_begin_1a6e9be9e:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a405a2e6_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1a6e9be16:;
	};
	return _1a4056798_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e40660__Bits(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _66730_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4062a07_Prim> _6729_prim = _1a405c57e_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1a402b1da_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _1b28909b9_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1a402b1da_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _68213_constant = static__1b289ba91_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e40a5b__Elem(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _69030_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4069cea_Ptr> _69513_ptr = _1a405ca9b_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1a406a834_IsUnsafe(_69513_ptr)) {
			_1a402b1da_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a4066533_Sptr> _70313_sptr = _1a405c815_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a4067006_Slc> _70713_slice = _1a405d5d5_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a4069327_Arr> _71113_array = _1a405d34e_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a3e29db9_Enum> _71513_enm = _1a405cd32_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a402b1da_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e40e57__Size(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _72330_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4069327_Arr> _72813_arr = _1a405d34e_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1a402b1da_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _73313_constant = static__1b289ba91_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150de2_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e41353__Key(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _74129_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a406869a_Map> _74613_m = _1a405e11e_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1a402b1da_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4174e__Value(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _75431_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a406869a_Map> _75913_m = _1a405e11e_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1a402b1da_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e41b4a__Fields(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _76732_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _77213_s = _1a405db02_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e31db0_comptimeStructFields>(_1a3e31db0_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1a3e29db9_Enum> _78213_enm = _1a405cd32_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e37b0d_comptimeEnumFields>(_1a3e37b0d_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), 11)}), });;
	};
	_1a402b1da_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e42046__Statics(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _79633_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _80113_s = _1a405db02_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1a402b1da_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e3516b_comptimeStatics>(_1a3e3516b_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e42442__Public(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _81532_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1a405db02_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6453467:;
			{
				_82013_public=(*((*(_1a405db02_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1a405dd88_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6454567:;
			{
				_82013_public=(*(_1a405dd88_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a405cd32_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a64545cd:;
			{
				_82013_public=(*(_1a405cd32_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a64531ae:;
			{
				_82013_public=(*(_1a405d0b8_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1a6453148:;
			{
				_1a402b1da_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a6453027:;
	};
	jule::Ptr<_1b289b651_Const> _83413_constant = static__1b289c124_NewBool(_82013_public);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4283d__Binded(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _84232_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _84713_constant = static__1b289c124_NewBool(_1a405ac75_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e42c39__Ordered(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _85529_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _86013_constant = static__1b289c124_NewBool(_1a405ba45_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e43135__Comparable(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _86832_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _87313_constant = static__1b289c124_NewBool(_1a405b528_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e43531__Mutable(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _88129_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _88613_constant = static__1b289c124_NewBool(_1a405b7ae_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4392c__Types(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _89431_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4067aea_Tuple> _89913_tup = _1a405e3a5_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1a402b1da_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e3c959_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1a3e3c959_comptimeTypeInfos>(_1a3e3c959_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a3e3e054_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6468ba8:;
		if (it != expr_end) {
			jule::Ptr<_1a4059e2d_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1a3e3e054_comptimeTypeInfo>>::make({_1a3e9771c_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1a6468ba8:;
			++it;
			goto _iter_begin_1a6468ba8;
		}
		_iter_end_1a6468ba8:;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e43d28__Exceptional(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _91737_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _92213_f = _1a405d86b_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1a402b1da_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _92713_constant = static__1b289c124_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e44224__CanNil(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _93532_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _94013_constant = static__1b289c124_NewBool(_1a405bccb_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e44620__RC(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _94828_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _95313_constant = static__1b289c124_NewBool(_1a405c062_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e44a1b__Result(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _96132_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _96613_f = _1a405d86b_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1a402b1da_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1a414eb5a_primVoid));;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e44e17__Params(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Ptr<_1a402ab8a_Eval>* _97732_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _98213_f = _1a405d86b_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1a402b1da_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e3b392_comptimeParams>(_1a3e3b392_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e45258_subIdent(jule::Ptr<_1a3e3e054_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1a708e426:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _99717_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _99833_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _99848_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e3ed68__Str(_self_, _99833_e, _99848_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1a708e206:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _100417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _100533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _100548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e40660__Bits(_self_, _100533_e, _100548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1a708e26c:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _101117_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _101233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _101248_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e40a5b__Elem(_self_, _101233_e, _101248_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1a708e48c:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _101817_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _101933_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _101948_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e40e57__Size(_self_, _101933_e, _101948_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1a708e503:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _102517_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _102633_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _102648_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e41353__Key(_self_, _102633_e, _102648_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1a708e569:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _103217_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _103333_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _103348_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4174e__Value(_self_, _103333_e, _103348_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a708e5d0:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _103917_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _104033_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _104048_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e41b4a__Fields(_self_, _104033_e, _104048_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a708e6bd:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _104617_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _104733_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _104748_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e42046__Statics(_self_, _104733_e, _104748_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a708e734:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _105317_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _105433_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _105448_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e44e17__Params(_self_, _105433_e, _105448_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1a708e79a:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _106017_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _106133_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _106148_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4392c__Types(_self_, _106133_e, _106148_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a708e822:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _106717_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _106833_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _106848_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e42442__Public(_self_, _106833_e, _106848_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a708e899:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _107417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _107533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _107548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4283d__Binded(_self_, _107533_e, _107548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1a708e921:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _108117_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _108233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _108248_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e42c39__Ordered(_self_, _108233_e, _108248_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1a708e998:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _108817_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _108933_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _108948_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e43135__Comparable(_self_, _108933_e, _108948_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a708ea20:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _109517_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _109633_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _109648_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e43531__Mutable(_self_, _109633_e, _109648_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1a708ea97:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _110217_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _110333_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _110348_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e43d28__Exceptional(_self_, _110333_e, _110348_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1a708eb1e:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _110917_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _111033_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _111048_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e44224__CanNil(_self_, _111033_e, _111048_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1a708eb96:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _111617_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _111733_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _111748_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e44620__RC(_self_, _111733_e, _111748_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1a708ec1d:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _112317_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _112433_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _112448_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e44a1b__Result(_self_, _112433_e, _112448_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1a708ec95:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _113017_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _113133_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _113148_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e40264__Kind(_self_, _113133_e, _113148_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1a708beb2:;
			{
				return nullptr;;
			}
		}
		_match_end_1a708ded6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e3e054_comptimeTypeInfo _Src) {
	_Stream << _1a3e3e3c8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e458da_Str(_1a3e45566_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a3e45c2b_Equal(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a4059e2d_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4627b__Unwrap(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _115332_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e46677__Type(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _116130_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e46a73__Lvalue(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _116932_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _117413_constant = static__1b289c124_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e46e6e__Mutable(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _118233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _118713_constant = static__1b289c124_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4736a__Const(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _119531_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _120013_constant = static__1b289c124_NewBool(_1a402986a_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e47766__Field(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Ptr<_1a402ab8a_Eval>* _120831_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _121313_s = _1a405db02_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1a402b1da_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3dd2987_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1a4028e63_Data> _121913_d = _1a4048dea_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a402986a_IsConst(_121913_d.ptr())))) {
		_1a402b1da_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4062a07_Prim> _12279_prim = _1a405c57e_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1a4065e8e_IsStr(_12279_prim.ptr()))))) {
		_1a402b1da_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _1b289d7c9_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1a3e016ba_FieldIns> _123313_f = _1a3e03623_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1a402b1da_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1a4028e63_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1a4042201_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1a3e4bc43_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e47aa7_subIdent(jule::Ptr<_1a3e45566_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1a70d19b8:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _124617_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _124733_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _124748_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4627b__Unwrap(_self_, _124733_e, _124748_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a70d1a2e:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _125317_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _125433_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _125448_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e46677__Type(_self_, _125433_e, _125448_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1a70d1a95:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _126017_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _126133_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _126148_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e46a73__Lvalue(_self_, _126133_e, _126148_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a70d1b1c:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _126717_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _126833_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _126848_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e46e6e__Mutable(_self_, _126833_e, _126848_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1a70d1cd7:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _127417_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _127533_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _127548_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4736a__Const(_self_, _127533_e, _127548_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1a70d1d4d:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _128117_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _128233_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _128248_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e47766__Field(_self_, _128233_e, _128248_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1a70d1765:;
			{
				return nullptr;;
			}
		}
		_match_end_1a70d1897:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e45566_comptimeValue _Src) {
	_Stream << _1a3e458da_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e48239_Str(_1a3e47db5_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a3e4857a_Equal(jule::Ptr<_1a3e47db5_comptimeFiles> _self_, jule::Ptr<_1a4059e2d_TypeKind> _130021_other) {
	return false;;
}



inline void _1a3e489ed_ready(_1a3e47db5_comptimeFiles* _self_, jule::Ptr<_1a3ebac4b_Var>* _130429_keyA, jule::Ptr<_1a3ebac4b_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e494b0_comptimeFile>(), 18)})});
	};
}



inline void _1a3e48e1b_step(_1a3e47db5_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1a3ebac4b_Var>* _132536_keyA, jule::Ptr<_1a3ebac4b_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a3e494b0_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1a3e491a2_len(_1a3e47db5_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e47db5_comptimeFiles _Src) {
	_Stream << _1a3e48239_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3e49a65_Str(_1a3e494b0_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a3e49da6_Equal(jule::Ptr<_1a3e494b0_comptimeFile> _self_, jule::Ptr<_1a4059e2d_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4a2b3__Path(jule::Ptr<_1a3e494b0_comptimeFile> _self_, jule::Ptr<_1a402ab8a_Eval>* _135330_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _135813_constant = static__1b289c3dd_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4a6ae__Name(jule::Ptr<_1a3e494b0_comptimeFile> _self_, jule::Ptr<_1a402ab8a_Eval>* _136630_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _137113_constant = static__1b289c3dd_NewStr(_1a3dbe369_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4aaaa__Dir(jule::Ptr<_1a3e494b0_comptimeFile> _self_, jule::Ptr<_1a402ab8a_Eval>* _137929_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b289b651_Const> _138413_constant = static__1b289c3dd_NewStr(_1a3dbe0d3_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4adeb_subIdent(jule::Ptr<_1a3e494b0_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1a70ee0bd:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _139517_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _139633_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _139648_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4a2b3__Path(_self_, _139633_e, _139648_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a70ee167:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _140217_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _140333_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _140348_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4a6ae__Name(_self_, _140333_e, _140348_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1a70ee1de:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _140917_method = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>([=](jule::Ptr<_1a402ab8a_Eval>* _141033_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _141048_fc, jule::Ptr<_1a4028e63_Data>* ) mutable -> jule::Ptr<_1a4028e63_Data> {
					return _1a3e4aaaa__Dir(_self_, _141033_e, _141048_fc);;
				}), });;
				return _1a3e4b270_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1a70edcd2:;
			{
				return nullptr;;
			}
		}
		_match_end_1a70ede69:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e494b0_comptimeFile _Src) {
	_Stream << _1a3e49a65_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)> _1a3e4ddbb_readyFn(jule::Ptr<_1a3e4d9c0_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)>([=](jule::Ptr<_1a3e97dd2_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*_self_.alloc)._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7110c6c:;
			if (it != expr_end) {
				jule::I64 _6518_i = it - expr->begin();
				jule::Ptr<_1a3dda85d_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1a4058547_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1a7110c6c;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a71139c8:;
						if (it != expr_end) {
							jule::Ptr<_1a3dcd653_TypeDecl> _7129_mask = *it;
							{
								jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1a4059e2d_TypeKind> _7325_kind = _1a3ea099a_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1a4079a1e_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1a7115799:;
											{
												jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1a3dcdc5d_IdentTypeDecl>();;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1a3e50450_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType((*_7733_itd.alloc)._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1a7118417;
												};
											}
										}
										_match_end_1a7115733:;
									};
									return false;;
								};
								_julec_label_1a7118417:;
								(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::make({_7325_kind}));
							}
							_iter_next_1a71139c8:;
							++it;
							goto _iter_begin_1a71139c8;
						}
						_iter_end_1a71139c8:;
					};
				}
				_iter_next_1a7110c6c:;
				++it;
				_6518_i++;
				goto _iter_begin_1a7110c6c;
			}
			_iter_end_1a7110c6c:;
		};
		return true;;
	});;
}



inline jule::Bool _1a3e4e152_readyFi(jule::Ptr<_1a3e4d9c0_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a3ea63a7_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a3e4ddbb_readyFn(_self_)));;
}



inline jule::Bool _1a3e4e3d8_readySi(jule::Ptr<_1a3e4d9c0_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a3e4ddbb_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a3e4e66e_ready(jule::Ptr<_1a3e4d9c0_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a3e4e152_readyFi(_self_);;
	};
	return _1a3e4e3d8_readySi(_self_);;
}



inline jule::Bool _1a3e4e905_check(jule::Ptr<_1a3e4d9c0_constraintChecker> _self_) {
	if ((!(_1a3e4e66e_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a711e53e:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a711eb6b:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1a4058547_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1a711eb6b;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7120d37:;
					if (it != expr_end) {
						jule::Ptr<_1a4059e2d_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1a4062a07_Prim> _12521_prim = _1a405c57e_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1a406362e_IsConstraint(_12521_prim))) {
								if (_1a3e50186_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1a711eb6b;
								};
								goto _iter_next_1a7120d37;
							};
							if (_1a405a637_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1a711eb6b;
							};
						}
						_iter_next_1a7120d37:;
						++it;
						goto _iter_begin_1a7120d37;
					}
					_iter_end_1a7120d37:;
				};
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1a3e4ecbd_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1a711eb6b:;
			++it;
			_12014_i++;
			goto _iter_begin_1a711eb6b;
		}
		_iter_end_1a711eb6b:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e4d9c0_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3e511dc_IsTraitImpl(_1a3e50d24_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a3e51473_IsStructImpl(_1a3e50d24_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e50d24_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5627a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e56698_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e56995_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e56db3_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e571b0_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e57666_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e580b2_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e58447_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e58821_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e58b1d_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e58ee7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e593c1_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e59877_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e59c51_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5a3b1_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5add9_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5b5d2_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5b978_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5c0d8_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5c66b_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e5da24_SelectPackage(_1a3e5d57e_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _45832_selector) {
	return _1a3e98377_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e5de20_FindVar(_1a3e5d57e_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1a3ebac4b_Var> _47213_v = _1a40262b2_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1a40262b2_findVar((*_47713_parent.alloc)._field_table, &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*_47713_parent.alloc)._field_parent;
		}
	_iter_next_1a715d36e:;
	}
	_iter_end_1a715d36e:;;
	return _1a3e98773_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e5e31b_FindTypeAlias(_1a3e5d57e_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1a405913b_TypeAlias> _49913_ta = _1a4026768_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1a4026768_findTypeAlias((*_50413_parent.alloc)._field_table, &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*_50413_parent.alloc)._field_parent;
		}
	_iter_next_1a716131c:;
	}
	_iter_end_1a716131c:;;
	return _1a3e98b6e_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e5e717_FindStruct(_1a3e5d57e_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1a3e9906a_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e5eb13_FindFn(_1a3e5d57e_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1a3e99466_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e5ee54_FindTrait(_1a3e5d57e_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1a3e997a7_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e60295_FindEnum(_1a3e5d57e_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1a3e99ae8_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e605d6_FindTypeEnum(_1a3e5d57e_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1a3e99e39_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1a3e60938_isUnsafe(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _56513_scope = _self_;;
	_julec_label_1a7166432:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_56513_scope.alloc)._field_parent != nullptr)) {
		_56513_scope=(*_56513_scope.alloc)._field_parent;
		goto _julec_label_1a7166432;
	};
	return false;;
}



inline jule::Bool _1a3e60bbe_isRoot(_1a3e5d57e_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a3e60dbc_stop(_1a3e5d57e_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a3e61153_stopped(_1a3e5d57e_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a3e613d9_isDeferred(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _59813_scope = _self_;;
	_julec_label_1a7169754:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_59813_scope.alloc)._field_parent != nullptr)) {
		_59813_scope=(*_59813_scope.alloc)._field_parent;
		goto _julec_label_1a7169754;
	};
	return false;;
}



inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e61670_getRoot(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*_61613_root.alloc)._field_owner == nullptr))) {
		{
			_61613_root=(*_61613_root.alloc)._field_parent;
		}
	_iter_next_1a716b844:;
	}
	_iter_end_1a716b844:;;
	return _61613_root;;
}



inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e61906_getHardRoot(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*_62613_root.alloc)._field_parent;
		}
	_iter_next_1a716cb75:;
	}
	_iter_end_1a716cb75:;;
	return _62613_root;;
}



inline jule::Ptr<_1a3e58b1d_Label> _1a3e61c47_findLabel(_1a3e5d57e_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a716dbba:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a716e47e:;
						{
							jule::Ptr<_1a3e58b1d_Label> _64021_label = _63721_st.unsafe_cast_ptr<_1a3e58b1d_Label>();;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1a716e429:;
				};
			}
			_iter_next_1a716dbba:;
			++it;
			goto _iter_begin_1a716dbba;
		}
		_iter_end_1a716dbba:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e62088_findLabelScope(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1a3e5c0d8_scopeLabel> _65313_label = _1a3e623c9_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*_65313_label.alloc)._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e623c9_findLabelAll(_1a3e5d57e_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7171a7a:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5c0d8_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1a7171a7a:;
			++it;
			goto _iter_begin_1a7171a7a;
		}
		_iter_end_1a7171a7a:;
	};
	return nullptr;;
}



inline jule::Bool _1a3e627c5_isDuplicatedIdent(_1a3e5d57e_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1a3ebac4b_Var> _6779_v = _1a3e5de20_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*_6779_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6779_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a3e9a346_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a405913b_TypeAlias> _6859_ta = _1a3e5e31b_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*_6859_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6859_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a3e9a346_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a3e62a7d_checkVarDecl(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de14bd_VarDecl> _69636_decl) {
	jule::Ptr<_1a3ebac4b_Var> _69713_v = _1a3e2082c_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({_69713_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_69713_v, &__jule_any_type8)}));
	});;
	if (_1a3e627c5_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_69713_v), &((*_69713_v.alloc)._field_Ident))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_69713_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_69713_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a3e60dbc_stop(_self_);
		return;;
	};
	_1a3eae091_checkVarDecl((*_self_.alloc)._field_s, &(_69713_v), jule::Trait<_1a4079a1e_Lookup>(_self_, 0));
	if (((!(_1a3ebb3ab_IsTypeInferred(_69713_v))) && (((*_69713_v.alloc)._field_Kind == nullptr) || ((*((*_69713_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a3eb2836_evalVarValue((*_self_.alloc)._field_s, &(_69713_v), jule::Trait<_1a4079a1e_Lookup>(_self_, 0));
	if (((!(_1a3ebb125_IsInitialized(_69713_v))) || ((*((*_69713_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a3e68ce8_removeInteriorMutRisk(_self_, &((*(*_69713_v.alloc)._field_Value.alloc)._field_Data));
	_1a3eb24c3_checkVarValue((*_self_.alloc)._field_s, &(_69713_v));
}



inline void _1a3e62d36_checkTypeAlias(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a405913b_TypeAlias>* _72739_ta) {
	if (_1a3e627c5_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_72739_ta))), &((*((*(_72739_ta))))._field_Ident))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a3e60dbc_stop(_self_);
		return;;
	};
	_1a3ea8123_checkTypeAliasDecl((*_self_.alloc)._field_s, _72739_ta, jule::Trait<_1a4079a1e_Lookup>(_self_, 0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>::make({(*(_72739_ta))}));
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a3e60dbc_stop(_self_);
	};
}



inline void _1a3e630de_checkTypeAliasDecl(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de5170_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1a405913b_TypeAlias> _74413_ta = _1a3e1c40b_buildTypeAlias(_74342_decl);;
	_1a3e62d36_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e63375_getChild(_1a3e5d57e_scopeChecker* _self_) {
	return jule::new_ptr<_1a3e5627a_Scope>(_1a3e5627a_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a3e63793_checkChildSsc(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddd674_ScopeTree>* _75438_tree, jule::Ptr<_1a3e5627a_Scope>* _75461_s, jule::Ptr<_1a3e5d57e_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1a3e6ec88_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e63b8e_checkChildSc(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddd674_ScopeTree>* _75937_tree, jule::Ptr<_1a3e5d57e_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1a3e5627a_Scope> _76013_s = _1a3e63375_getChild(_self_.ptr());;
	_1a3e63793_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e63ed0_checkChild(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddd674_ScopeTree>* _76535_tree) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _76613_ssc = _1a3e7001e_newChildChecker(_self_);;
	return _1a3e63b8e_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1a3e64288_checkAnonScope(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddd674_ScopeTree> _77038_tree) {
	jule::Ptr<_1a3e5627a_Scope> _77113_s = _1a3e63ed0_checkChild(_self_, &(_77038_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_77113_s, &__jule_any_type22)}));
}



inline void _1a3e645eb_processErrorCall(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1a3db8198_Token> _77572_err) {
	if (_1a3e613d9_isDeferred(_self_)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _78013_root = _1a3e61670_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*_78013_root.alloc)._field_owner;
}



inline void _1a3e648a4_checkExpr(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3dd2987_Expr> _78833_expr) {
	jule::Ptr<_1a402ab8a_Eval> _78913_eval = _1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1a4028e63_Data> _79113_d = _1a4048dea_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a718e3b1:;
			{
				jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.unsafe_cast_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>();;
				_1a3e645eb_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_79113_d, &__jule_any_type24)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1a718ea10:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_79113_d, &__jule_any_type24)}));
			}
		}
		else {
			_case_begin_1a718e999:;
			{
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a718e944:;
	};
}



inline jule::Ptr<_1a3e56698_If> _1a3e64be5_checkIf(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de40a3_If> _81931_i) {
	jule::Ptr<_1a3e5627a_Scope> _82013_s = _1a3e63ed0_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1a4028e63_Data> _82213_d = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*_81931_i.alloc)._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4062a07_Prim> _82713_prim = _1a405c57e_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1a4065c08_IsBool(_82713_prim.ptr()))))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*_81931_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3e56698_If>(_1a3e56698_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1a3e56995_Else> _1a3e65036_checkElse(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de447c_Else> _83933_e) {
	return jule::new_ptr<_1a3e56995_Else>(_1a3e56995_Else{._field_Scope=_1a3e63ed0_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1a3e652de_checkConditional(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de4933_Conditional> _84540_conditional) {
	jule::Ptr<_1a3e56db3_Conditional> _84613_c = jule::new_ptr<_1a3e56db3_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_84613_c, &__jule_any_type35)}));
	(*_84613_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1a3e56698_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	(*_84613_c.alloc)._field_Elifs=jule::append((*_84613_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a3e56698_If>>::make({_1a3e64be5_checkIf(_self_, (*_84540_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_84540_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a719b2ad:;
		if (it != expr_end) {
			jule::Ptr<_1a3de40a3_If> _85221_elif = *it;
			{
				(*_84613_c.alloc)._field_Elifs=jule::append((*_84613_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a3e56698_If>>::make({_1a3e64be5_checkIf(_self_, _85221_elif)}));
			}
			_iter_next_1a719b2ad:;
			++it;
			goto _iter_begin_1a719b2ad;
		}
		_iter_end_1a719b2ad:;
	};
	if (((*_84540_conditional.alloc)._field_Default != nullptr)) {
		(*_84613_c.alloc)._field_Default=_1a3e65036_checkElse(_self_, (*_84540_conditional.alloc)._field_Default);
	};
}



inline void _1a3e657b7_checkIterScopeSsc(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1a3ddd674_ScopeTree> _86154_tree, jule::Ptr<_1a3e5627a_Scope>* _86177_s, jule::Ptr<_1a3e5d57e_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1a3e63793_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e65c6d_checkIterScopeSc(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1a3ddd674_ScopeTree> _86653_tree, jule::Ptr<_1a3e5d57e_scopeChecker> _86675_ssc) {
	jule::Ptr<_1a3e5627a_Scope> _86713_scope = _1a3e63375_getChild(_self_.ptr());;
	_1a3e657b7_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e66169_checkIterScope(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1a3ddd674_ScopeTree>* _87252_tree) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _87313_ssc = _1a3e7001e_newChildChecker(_self_);;
	return _1a3e65c6d_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1a3e66422_checkInfIter(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de2117_Iter>* _87737_it) {
	jule::Ptr<_1a3e571b0_InfIter> _87813_kind = jule::new_ptr<_1a3e571b0_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_87813_kind, &__jule_any_type36)}));
	(*_87813_kind.alloc)._field_Scope=_1a3e66169_checkIterScope(_self_, static_cast<jule::Uintptr>(_87813_kind), &((*((*(_87737_it))))._field_Scope));
}



inline void _1a3e666ca_checkWhileIter(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de2117_Iter>* _88339_it) {
	jule::Ptr<_1a3de2942_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1a3de2942_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*_88413_wh.alloc)._field_Next == nullptr))) {
		_1a3e66422_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1a3e57666_WhileIter> _89013_kind = jule::new_ptr<_1a3e57666_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_89013_kind, &__jule_any_type38)}));
	(*_89013_kind.alloc)._field_Scope=_1a3e66169_checkIterScope(_self_, static_cast<jule::Uintptr>(_89013_kind), &((*((*(_88339_it))))._field_Scope));
	if (((*_88413_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a4028e63_Data> _89517_d = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*_88413_wh.alloc)._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a4062a07_Prim> _90013_prim = _1a405c57e_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a4065c08_IsBool(_90013_prim.ptr())))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_89013_kind.alloc)._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1a3de2ca5_IsWhileNext(_88413_wh)) {
		if ((!(_1a3e5570d_isValidAstStForNextSt(&((*_88413_wh.alloc)._field_Next))))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_88413_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1a3e6d8be_checkNode(_self_, &((*_88413_wh.alloc)._field_Next));
		if ((_92013_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _92321_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_92013_n];;
			(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1a3e559c7_isValidStForNextSt(&(_92321_st))))) {
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_88413_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_89013_kind.alloc)._field_Next=_92321_st;
		};
	};
}



inline void _1a3e66ae8_checkComptimeRangeIter(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de2117_Iter>* _93347_it, jule::Ptr<_1a3e580b2_RangeIter>* _93363_kind, jule::Ptr<_1a4028e63_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a3e9a346_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a3e627c5_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a3e9a346_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a3e627c5_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a3de3349_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1a3de3349_RangeKind>(&__jule_any_type39);;
	_1a3e705c4_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1a401e0bd_rangeChecker _95413_rc = _1a401e0bd_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1a40210d1_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1a3e2e72b_comptimeRange> _96513_comptime = _1a4060928_comptimeRange((*((*(_93386_d))))._field_Kind);;
	_1a3e2e50b_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1a3e2dc03_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _96713_i = 0LL;;
	jule::I64 _9689_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_96713_i < _1a3e2e50b_comptimeRangeKind_mptr_data[((*_96513_comptime.alloc)._field_kind).type_offset]._1a3e2e3a7_len((*_96513_comptime.alloc)._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1a3e5d57e_scopeChecker> _97017_ssc = _1a3e7001e_newChildChecker(_self_);;
			jule::Ptr<_1a3e5627a_Scope> _97117_scope = _1a3e63375_getChild(_self_);;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Scope=_97117_scope;
				(*((*(_97017_ssc))._field_table))._field_Vars=jule::append((*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({(*((*(_93363_kind))))._field_KeyA}));
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Scope=_97117_scope;
				(*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({(*((*(_93363_kind))))._field_KeyB}));
			};
			_1a3e2e50b_comptimeRangeKind_mptr_data[((*_96513_comptime.alloc)._field_kind).type_offset]._1a3e2e121_step((*_96513_comptime.alloc)._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1a3e63793_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1a71bbc90;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_97117_scope, &__jule_any_type22)}));
		}
	_iter_next_1a71bbc90:;
	}
	_iter_end_1a71bbc90:;;
}



inline void _1a3e66da1_checkRangeIter(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de2117_Iter>* _99039_it) {
	jule::Ptr<_1a3de3349_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1a3de3349_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1a4028e63_Data> _99313_d = _1a4048aa9_evalExpr1(_1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e580b2_RangeIter> _99813_kind = jule::new_ptr<_1a3e580b2_RangeIter>(_1a3e580b2_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1a3e66ae8_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1a405e63b_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*_99113_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1a401e0bd_rangeChecker _101213_rc = _1a401e0bd_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1a40210d1_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_99813_kind, &__jule_any_type40)}));
	jule::Ptr<_1a3e5d57e_scopeChecker> _102513_ssc = _1a3e7001e_newChildChecker(_self_);;
	jule::Ptr<_1a3e5627a_Scope> _102613_scope = _1a3e63375_getChild(_self_);;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1a3e9a346_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a3e627c5_isDuplicatedIdent(_self_, 0LLU, &((*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Scope=_102613_scope;
		(*((*(_102513_ssc))._field_table))._field_Vars=jule::append((*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({(*_99813_kind.alloc)._field_KeyA}));
	};
	if (((*_99813_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a3e9a346_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a3e627c5_isDuplicatedIdent(_self_, 0LLU, &((*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Scope=_102613_scope;
		(*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({(*_99813_kind.alloc)._field_KeyB}));
	};
	_1a3e657b7_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_99813_kind), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*_99813_kind.alloc)._field_Scope=_102613_scope;
}



inline void _1a3e67159_checkIter(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de2117_Iter> _105033_it) {
	if (_1a3de247a_IsInf(_105033_it.ptr())) {
		if ((*_105033_it.alloc)._field_Comptime) {
			_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_105033_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1a3e66422_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a71db0ab:;
			{
				if ((*_105033_it.alloc)._field_Comptime) {
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_105033_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1a3e666ca_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a71d9807:;
			{
				_1a3e66da1_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1a71daab1:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a71daa5b:;
	};
}



inline jule::Bool _1a3e6749a_checkValidContLabel(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _107513_scope = _self_;;
	_julec_label_1a71dd09c:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*_107513_scope.alloc)._field_parent != nullptr)) {
		_107513_scope=(*_107513_scope.alloc)._field_parent;
		goto _julec_label_1a71dd09c;
	};
	return false;;
}



inline jule::Bool _1a3e677db_checkValidBreakLabel(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _109113_scope = _self_;;
	_julec_label_1a71e0126:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*_109113_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1a3e5add9_Case*)((*_109113_scope.alloc)._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*_109113_scope.alloc)._field_parent != nullptr)) {
		_109113_scope=(*_109113_scope.alloc)._field_parent;
		goto _julec_label_1a71e0126;
	};
	return false;;
}



inline jule::Ptr<_1a3e58447_ContSt> _1a3e67b2c_checkContValidScope(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de3aec_ContSt> _111339_c) {
	if (_1a3e613d9_isDeferred(_self_)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_111339_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a3e58447_ContSt>();;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _112313_scope = _self_;;
	_julec_label_1a71e305d:;
	{
		
		if (((((*_112313_scope.alloc)._field_it == 0LLU) && ((*_112313_scope.alloc)._field_parent != nullptr)) && ((*_112313_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a71e4d51:;
			{
				_112313_scope=(*_112313_scope.alloc)._field_parent;
				goto _julec_label_1a71e305d;
			}
		}
		else if (((*_112313_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a71e4dd9:;
			{
				return jule::new_ptr<_1a3e58447_ContSt>(_1a3e58447_ContSt{._field_It=(*_112313_scope.alloc)._field_it});;
			}
		}
		_match_end_1a71e4cb8:;
	};
	_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_111339_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a3e67dd5_checkCont(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de3aec_ContSt> _113729_c) {
	jule::Ptr<_1a3e58447_ContSt> _113813_cont = _1a3e67b2c_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1a3e5c0d8_scopeLabel> _114417_label = _1a3e53794_findLabelParent(&((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_114417_label == nullptr)) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_113729_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*(*(*(_114417_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*(*(*(_114417_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1a7200642:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1a3e571b0_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1a720082e:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1a3e580b2_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1a7200895:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1a3e57666_WhileIter>());
					}
				}
				else {
					_case_begin_1a72007b8:;
					{
						_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1a7200763:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1a3e6749a_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_113813_cont, &__jule_any_type41)}));
}



inline void _1a3e6818d_checkLabel(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddac37_LabelSt> _118434_l) {
	if ((_1a3e61c47_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_118434_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_118434_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a3e58b1d_Label> _119013_label = jule::new_ptr<_1a3e58b1d_Label>(_1a3e58b1d_Label{._field_Ident=(*_118434_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_119013_label, &__jule_any_type21)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a3e5c0d8_scopeLabel>>::make({jule::new_ptr<_1a3e5c0d8_scopeLabel>(_1a3e5c0d8_scopeLabel{._field_token=(*_118434_l.alloc)._field_Token, ._field_label=_119013_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1a3e68446_pushGoto(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddb111_GotoSt> _120332_gt) {
	jule::Ptr<_1a3e58ee7_GotoSt> _120413_st = jule::new_ptr<_1a3e58ee7_GotoSt>(_1a3e58ee7_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_120413_st, &__jule_any_type42)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a3e5c66b_scopeGoto>>::make({jule::new_ptr<_1a3e5c66b_scopeGoto>(_1a3e5c66b_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1a3e686ee_checkPostfix(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddc101_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_121736_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3dd2987_Expr> _122313_expr = (*((*_121736_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a4028e63_Data> _122413_d = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1a3e55444_checkAssign(&((*_self_.alloc)._field_s), &(_122413_d), nullptr, (*_121736_a.alloc)._field_Setter);
	if ((_1a405ca9b_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a4069cea_Ptr> _123217_ptr = _1a405ca9b_Ptr((*(_122413_d))._field_Kind);;
		if (_1a406a834_IsUnsafe(_123217_ptr.ptr())) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_121736_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_121736_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_122413_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1a405c57e_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_1b289b0ac_IsNum((*(_1a405c57e_Prim((*(_122413_d))._field_Kind)))._field_Kind))))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_121736_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_121736_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_122413_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3e593c1_Postfix>(_1a3e593c1_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*_121736_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type43)}));
}



inline jule::Bool _1a3e68a40_isNewAssignIdent(_1a3e5d57e_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1a3dbaa80_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1a4026b64_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1a3e68ce8_removeInteriorMutRisk(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a4028e63_Data>* _126346_d) {
	jule::Ptr<_1a3e0226a_StructIns> _12649_s = _1a405db02_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _12689_root = _1a3e61906_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1a3e6929e_checkStructureAssignOp(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e0226a_StructIns>* _127747_s, jule::Ptr<_1a3ddc101_AssignSt>* _127767_a, jule::Ptr<_1a4028e63_Data>* _127786_r) {
	jule::Ptr<_1a3e172d5_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a721bc68:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a721b949:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a721b9b0:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a721ba26:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a721ba8c:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a721bb03:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a721bb69:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a721d2ca:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a721d341:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a721d3a7:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a721b372:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3e025de_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a721b8d3:;
	};
	if ((_128017_overload == nullptr)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3e025de_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a3e16339_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1a3ea352a_checkAssignType((*_self_.alloc)._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*_131213_p.alloc)._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1a3e69557_checkSingleAssign(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddc101_AssignSt>* _131642_a) {
	jule::Ptr<_1a4028e63_Data> _131717_l = nullptr;;
	if ((!(_1a3dbaa80_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a3dd2987_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1a4048dea_evalExpr(_1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a402ab8a_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1a3ea2b78_evalp((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1a3e60938_isUnsafe(_self_);
	jule::Ptr<_1a4028e63_Data> _133413_r = _1a4048dea_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1a3e68ce8_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1a405b292_Void((*(_133413_r))._field_Kind.ptr())) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_133413_r, &__jule_any_type24)}));
		return;;
	};
	if ((!(_1a3e55444_checkAssign(&((*_self_.alloc)._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a405e3a5_Tup((*(_133413_r))._field_Kind) != nullptr)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3e06170_OperandExprModel> _135813_lm = jule::new_ptr<_1a3e06170_OperandExprModel>(_1a3e06170_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1a3e06170_OperandExprModel> _136213_rm = jule::new_ptr<_1a3e06170_OperandExprModel>(_1a3e06170_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3e59877_Assign>(_1a3e59877_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)}));
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a4012b72_assignTypeChecker _136917_checker = _1a4012b72_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1a4013b40_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _138113_strct = _1a405db02_Struct((*(_131717_l))._field_Kind);;
	if ((_138113_strct != nullptr)) {
		_1a3e6929e_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U64 _13869_id = (*(*((*(_131642_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_131642_a))))._field_Setter.alloc)._field_Id=_1a3e70393_removeEqFromOp((*(*((*(_131642_a))))._field_Setter.alloc)._field_Id);
	_1a404b34d_binaryEval _138813_solver = static__1a404bc77_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1a4028e63_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1a4028e63_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1a4050dbe_evalOp(&_138813_solver);
	(*(*((*(_131642_a))))._field_Setter.alloc)._field_Id=_13869_id;
}



inline void _1a3e69ada_processEndPartOfMultiAssign(_1a3e5d57e_scopeChecker* _self_, jule::Ptr<_1a3e59c51_MultiAssign>* _139451_st, jule::Ptr<_1a3ddc101_AssignSt>* _139514_a, jule::Ptr<_1a3ddba6d_AssignLeft>* _139533_lexpr, jule::Ptr<_1a4028e63_Data>* _139558_l, jule::Ptr<_1a4028e63_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1a3dbaa80_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1a405b292_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a4028e63_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1a3e68a40_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1a3e627c5_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1a3e9aa1c_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a3e60dbc_stop(_self_);
			return;;
		};
		if (_1a3dbaa80_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1a3e9aa1c_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a3ebac4b_Var> _141617_v = jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1a3eb24c3_checkVarValue((*(_self_))._field_s, &(_141617_v));
		{ jule::Slice<jule::Ptr<_1a4028e63_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*((*_141617_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_141617_v.alloc)._field_Mutable, ._field_Reference=(*_141617_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({_141617_v}));
		(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_141617_v, &__jule_any_type8)}));
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a3e55444_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1a3ea78b4_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1a4012b72_assignTypeChecker _145413_checker = _1a4012b72_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1a4013b40_check(&_145413_checker);
	{ jule::Slice<jule::Ptr<_1a4028e63_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1a3e69d93_checkMultiAssign(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddc101_AssignSt>* _146441_a) {
	jule::Ptr<_1a4028e63_Data> _146513_rd = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*((*(_146441_a))))._field_Right);;
	if ((_146513_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _146913_right = _1a3e5461e_getDatasFromTupleData(&(_146513_rd));;
	if ((_146913_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_146913_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1a7249e3e:;
				{
					jule::Ptr<_1a3e08eca_IndexingExprModel> _147321_iem = (*(_146913_right[0LL]))._field_Model.unsafe_cast_ptr<_1a3e08eca_IndexingExprModel>();;
					if ((_1a405e11e_Map((*((*(_147321_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_146913_right=jule::Slice<jule::Ptr<_1a4028e63_Data>>::make({jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*(_1a405e11e_Map((*(*_147321_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, })});
					};
				}
			}
			_match_end_1a7249d95:;
		};
	};
	{
		
		if (((*((*(_146441_a))))._field_Left.len() > _146913_right.len())) {
			_case_begin_1a724a4a0:;
			{
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_146441_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146441_a))))._field_Left.len() < _146913_right.len())) {
			_case_begin_1a724968b:;
			{
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_146441_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a7249ee9:;
	};
	jule::Ptr<_1a3e59c51_MultiAssign> _149213_st = jule::new_ptr<_1a3e59c51_MultiAssign>(_1a3e59c51_MultiAssign{._field_R=(*(_146513_rd))._field_Model});;
	{
		auto expr = &((*((*(_146441_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a724ee33:;
		if (it != expr_end) {
			jule::I64 _149513_i = it - expr->begin();
			{
				jule::Ptr<_1a3ddba6d_AssignLeft> _149617_lexpr = (*((*(_146441_a))))._field_Left[_149513_i];;
				jule::Ptr<_1a4028e63_Data> _149721_l = nullptr;;
				if (((!(_1a3dbaa80_IsIgnoreIdent((*(_149617_lexpr))._field_Ident))) && ((!((*((*(_146441_a))))._field_Declarative)) || (!(_1a3e68a40_isNewAssignIdent(_self_, (*_149617_lexpr.alloc)._field_Ident)))))) {
					_149721_l=_1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*_149617_lexpr.alloc)._field_Expr);
					if ((_149721_l == nullptr)) {
						goto _iter_next_1a724ee33;
					};
				};
				jule::Ptr<_1a4028e63_Data> _150517_r = _146913_right[_149513_i];;
				_1a3e68ce8_removeInteriorMutRisk(_self_, &(_150517_r));
				_1a3e69ada_processEndPartOfMultiAssign(_self_, &(_149213_st), _146441_a, &(_149617_lexpr), &(_149721_l), &(_150517_r));
			}
			_iter_next_1a724ee33:;
			++it;
			_149513_i++;
			goto _iter_begin_1a724ee33;
		}
		_iter_end_1a724ee33:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_149213_st, &__jule_any_type46)}));
}



inline void _1a3e6a14b_checkAssignSt(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddc101_AssignSt> _151237_a) {
	{
		
		if (_1a3dbcc2a_IsPostfixOp((*((*(_151237_a))._field_Setter))._field_Id)) {
			_case_begin_1a72552ac:;
			{
				_1a3e686ee_checkPostfix(_self_, _151237_a);
			}
		}
		else if (((*(_151237_a))._field_Left.len() == 1LL)) {
			_case_begin_1a7254e7c:;
			{
				_1a3e69557_checkSingleAssign(_self_, &(_151237_a));
			}
		}
		else {
			_case_begin_1a7254e16:;
			{
				_1a3e69d93_checkMultiAssign(_self_, &(_151237_a));
			}
		}
		_match_end_1a7254d17:;
	};
}



inline jule::Ptr<_1a3e5627a_Scope> _1a3e6a547_checkCaseScope(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e5add9_Case>* _152335_c, jule::Ptr<_1a3ddd674_ScopeTree>* _152350_tree) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _152413_ssc = _1a3e7001e_newChildChecker(_self_);;
	(*(_152413_ssc))._field_cse=static_cast<jule::Uintptr>((*(_152335_c)));
	return _1a3e63b8e_checkChildSc(_self_, _152350_tree, &(_152413_ssc));;
}



inline jule::Ptr<_1a3e5add9_Case> _1a3e6aaa8_checkCase(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e5a3b1_Match> _152933_m, jule::I64 _152944_i, jule::Ptr<_1a3de5626_Case> _152956_c, jule::Ptr<_1a4028e63_Data> _152975_expr) {
	jule::Ptr<_1a3e5add9_Case> _153013_case = (*(_152933_m))._field_Cases[_152944_i];;
	(*(_153013_case))._field_Exprs=jule::Slice<jule::Ptr<_1a4028e63_Data>>::alloc(0LL, (*(_152956_c))._field_Exprs.len());
	jule::Bool _153213_constMatched = false;;
	jule::Ptr<_1a402ab8a_Eval> _153313_eval = _1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0));;
	{
		auto expr = &((*_152956_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a725aa54:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _153421_e = *it;
			{
				jule::Ptr<_1a4028e63_Data> _153517_d = _1a40480d6_evalExprKind(_153313_eval, (*(_153421_e))._field_Kind);;
				if ((_153517_d == nullptr)) {
					goto _iter_next_1a725aa54;
				};
				if ((*_152933_m.alloc)._field_TypeMatch) {
					(*_153013_case.alloc)._field_Exprs=jule::append((*_153013_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a4028e63_Data>>::make({_153517_d}));
					if ((_1a3e54355_countMatchType(&(_152933_m), &((*(_153517_d))._field_Kind)) > 1LL)) {
						_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_153517_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_152933_m.alloc)._field_Comptime) {
						_153213_constMatched=(_153213_constMatched || _1a405a637_Equal((*(_152975_expr))._field_Kind, (*(_153517_d))._field_Kind));
					} else {
						if ((_1a405d0b8_TypeEnum((*(_152975_expr))._field_Kind) != nullptr)) {
							_1a3ea3e87_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_152975_expr.alloc)._field_Kind), &((*(_153517_d))._field_Kind), &((*_153421_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a3e276ad_Trait> _155425_trt = _1a405dd88_Trait((*(_152975_expr))._field_Kind);;
							if ((_155425_trt != nullptr)) {
								_1a3ea3e87_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_152975_expr.alloc)._field_Kind), &((*(_153517_d))._field_Kind), &((*_153421_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1a725aa54;
				};
				if ((*(_153517_d))._field_Decl) {
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a725aa54;
				};
				if ((*_152933_m.alloc)._field_Comptime) {
					if (((!(_1a402986a_IsConst(_153517_d.ptr()))) && (_1a4060e45_comptimeTypeInfo((*(_153517_d))._field_Kind) == nullptr))) {
						_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1a725aa54;
					};
					if ((!(_153213_constMatched))) {
						if (_1a402986a_IsConst(_153517_d.ptr())) {
							_153213_constMatched=(_1a402986a_IsConst(_152975_expr.ptr()) && _1b28a2206_Eq((*(_153517_d))._field_Constant.ptr(), (*(*_152975_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1a3e3e054_comptimeTypeInfo> _157925_exprCti = _1a4060e45_comptimeTypeInfo((*(_152975_expr))._field_Kind);;
							_153213_constMatched=((_157925_exprCti != nullptr) && _1a405a637_Equal((*(_1a4060e45_comptimeTypeInfo((*(_153517_d))._field_Kind)))._field_base, (*_157925_exprCti.alloc)._field_base));
						};
					};
				};
				(*_153013_case.alloc)._field_Exprs=jule::append((*_153013_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a4028e63_Data>>::make({_153517_d}));
				if ((((!((*_152933_m.alloc)._field_Comptime)) || (_1a4060e45_comptimeTypeInfo((*(_152975_expr))._field_Kind) == nullptr)) || (_1a4060e45_comptimeTypeInfo((*(_153517_d))._field_Kind) == nullptr))) {
					_1a4012b72_assignTypeChecker _158921_checker = _1a4012b72_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_152975_expr.alloc)._field_Kind, ._field_d=_153517_d, ._field_errorToken=(*_153421_e.alloc)._field_Token};;
					_1a4013b40_check(&_158921_checker);
				};
			}
			_iter_next_1a725aa54:;
			++it;
			goto _iter_begin_1a725aa54;
		}
		_iter_end_1a725aa54:;
	};
	if (((!((*_152933_m.alloc)._field_Comptime)) || _153213_constMatched)) {
		(*_153013_case.alloc)._field_Scope=_1a3e6a547_checkCaseScope(_self_, &(_153013_case), &((*_152956_c.alloc)._field_Scope));
	};
	return _153013_case;;
}



inline void _1a3e6aec6_checkCases(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de5e40_MatchCase>* _160435_m, jule::Ptr<_1a3e5a3b1_Match> _160454_rm, jule::Ptr<_1a4028e63_Data> _160470_expr) {
	(*(_160454_rm))._field_Cases=jule::Slice<jule::Ptr<_1a3e5add9_Case>>::alloc(0LL, (*((*(_160435_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160435_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a726d2a3:;
		if (it != expr_end) {
			jule::I64 _160613_i = it - expr->begin();
			{
				jule::Ptr<_1a3e5add9_Case> _160717_case = jule::new_ptr<_1a3e5add9_Case>(_1a3e5add9_Case{._field_Owner=_160454_rm, });;
				if ((_160613_i > 0LL)) {
					(*((*_160454_rm.alloc)._field_Cases[(_160613_i - 1LL)]))._field_Next=_160717_case;
				};
				(*_160454_rm.alloc)._field_Cases=jule::append((*_160454_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1a3e5add9_Case>>::make({_160717_case}));
			}
			_iter_next_1a726d2a3:;
			++it;
			_160613_i++;
			goto _iter_begin_1a726d2a3;
		}
		_iter_end_1a726d2a3:;
	};
	if ((((*_160454_rm.alloc)._field_Default != nullptr) && ((*((*(_160435_m))))._field_Cases.len() > 0LL))) {
		(*((*_160454_rm.alloc)._field_Cases[((*_160454_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_160454_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_160435_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a727186c:;
		if (it != expr_end) {
			jule::I64 _162014_i = it - expr->begin();
			jule::Ptr<_1a3de5626_Case> _162021_c = *it;
			{
				_1a3e6aaa8_checkCase(_self_, _160454_rm, _162014_i, _162021_c, _160470_expr);
			}
			_iter_next_1a727186c:;
			++it;
			_162014_i++;
			goto _iter_begin_1a727186c;
		}
		_iter_end_1a727186c:;
	};
}



inline jule::Ptr<_1a3e5add9_Case> _1a3e6b3c2_checkDefault(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e5a3b1_Match> _162536_m, jule::Ptr<_1a3de447c_Else> _162551_d) {
	jule::Ptr<_1a3e5add9_Case> _162613_def = jule::new_ptr<_1a3e5add9_Case>(_1a3e5add9_Case{._field_Owner=_162536_m, });;
	(*(_162613_def))._field_Scope=_1a3e6a547_checkCaseScope(_self_, &(_162613_def), &((*(_162551_d))._field_Scope));
	return _162613_def;;
}



inline void _1a3e6b735_checkComptimePanic(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3db8198_Token> _163342_callToken, jule::Ptr<_1a3e5627a_Scope>* _163362_s) {
	if (((*((*(_163362_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16379_stmt = (*((*(_163362_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16379_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a7275079:;
			{
				jule::Ptr<_1a4028e63_Data> _164013_d = _16379_stmt.unsafe_cast_ptr<_1a4028e63_Data>();;
				{
					auto &_match_expr{ (*(_164013_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1a7276003:;
						{
							jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel> _164321_m = (*(_164013_d))._field_Model.unsafe_cast_ptr<_1a3e0ccae_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_164321_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1a727719c:;
									{
										jule::Ptr<_1b289b651_Const> _164621_c = (*(_164321_m))._field_Expr.unsafe_cast_ptr<_1b289b651_Const>();;
										if ((!(_1b28a0dc5_IsStr(_164621_c.ptr())))) {
											goto _match_end_1a7277136;
										};
										if ((_163342_callToken == nullptr)) {
											jule::Ptr<_1a3e5d57e_scopeChecker> _165129_root = _1a3e61906_getHardRoot(_self_);;
											if (((*(_165129_root))._field_calledFrom == nullptr)) {
												_163342_callToken=(*(_164321_m))._field_Token;
											} else {
												_163342_callToken=(*(_165129_root))._field_calledFrom;
											};
										};
										_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), _163342_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b289d7c9_ReadStr(_164621_c), &__jule_any_type4)}));
										_1a3e60dbc_stop(_self_);
									}
								}
								_match_end_1a7277136:;
							};
						}
					}
					_match_end_1a7275e8c:;
				};
			}
		}
		_match_end_1a7275024:;
	};
}



inline void _1a3e6ba98_processConstMatch(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3e5a3b1_Match>* _166542_tm, jule::Ptr<_1a3de5e40_MatchCase>* _166559_m) {
	{
		auto expr = &((*((*(_166542_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7276377:;
		if (it != expr_end) {
			jule::I64 _166614_i = it - expr->begin();
			jule::Ptr<_1a3e5add9_Case> _166621_c = *it;
			{
				if (((*(_166621_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a3db8198_Token> _166825_token = nullptr;;
					if (((!((*((*(_166542_tm))))._field_TypeMatch)) && ((*(*_166621_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_166825_token=(*((*((*((*(_166559_m))))._field_Cases[_166614_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a3e6b735_checkComptimePanic(_self_, _166825_token, &((*_166621_c.alloc)._field_Scope));
					(*((*(_166542_tm))))._field_Default=_166621_c;
					(*((*(_166542_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a7276377:;
			++it;
			_166614_i++;
			goto _iter_begin_1a7276377;
		}
		_iter_end_1a7276377:;
	};
	if (((*((*(_166559_m))))._field_Default != nullptr)) {
		(*((*(_166542_tm))))._field_Cases=nullptr;
		(*((*(_166542_tm))))._field_Default=_1a3e6b3c2_checkDefault(_self_, (*(_166542_tm)), (*((*(_166559_m))))._field_Default);
		if (((*((*(_166542_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a3db8198_Token> _168225_token = nullptr;;
			if ((!((*((*(_166542_tm))))._field_TypeMatch))) {
				_168225_token=(*((*(*((*(_166559_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a3e6b735_checkComptimePanic(_self_, _168225_token, &((*(*((*(_166542_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_166542_tm))))._field_Cases=nullptr;
	};
}



inline void _1a3e6bd51_checkTypeMatch(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de5e40_MatchCase>* _169439_m) {
	jule::Ptr<_1a4028e63_Data> _169513_d = _1a4048427_eval1(_1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*((*(_169439_m))))._field_Expr);;
	if ((_169513_d == nullptr)) {
		return;;
	};
	if ((*((*(_169439_m))))._field_Comptime) {
		jule::Ptr<_1a3e3e054_comptimeTypeInfo> _170117_cti = _1a4060e45_comptimeTypeInfo((*(_169513_d))._field_Kind.ptr());;
		if ((_170117_cti == nullptr)) {
			if ((!((*(_169513_d))._field_Decl))) {
				_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*((*(_169439_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_169513_d))._field_Kind=(*(_170117_cti))._field_base;
		};
	} else if (((*(_169513_d))._field_Decl || (!(((((_1a405c57e_Prim((*(_169513_d))._field_Kind.ptr()) != nullptr) && _1a4066225_IsAny(_1a405c57e_Prim((*(_169513_d))._field_Kind).ptr())) || (_1a405dd88_Trait((*(_169513_d))._field_Kind) != nullptr)) || (_1a405d0b8_TypeEnum((*(_169513_d))._field_Kind) != nullptr)))))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*((*(_169439_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3e5a3b1_Match> _171513_tm = jule::new_ptr<_1a3e5a3b1_Match>(_1a3e5a3b1_Match{._field_Expr=_169513_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169439_m))))._field_Comptime, });;
	if (((!((*(_171513_tm))._field_Comptime)) && ((*((*(_169439_m))))._field_Default != nullptr))) {
		(*_171513_tm.alloc)._field_Default=_1a3e6b3c2_checkDefault(_self_, _171513_tm, (*((*(_169439_m))))._field_Default);
	};
	_1a3e6aec6_checkCases(_self_, _169439_m, _171513_tm, _169513_d);
	if ((*_171513_tm.alloc)._field_Comptime) {
		_1a3e6ba98_processConstMatch(_self_, &(_171513_tm), _169439_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_171513_tm, &__jule_any_type47)}));
}



inline void _1a3e6c109_checkCommonMatch(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de5e40_MatchCase>* _173641_m) {
	jule::Ptr<_1a4028e63_Data> _173717_d = nullptr;;
	if (((*((*(_173641_m))))._field_Expr == nullptr)) {
		_173717_d=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Constant=static__1b289c124_NewBool(true)});
		(*(_173717_d))._field_Model=jule::Any((*_173717_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_173717_d=_1a4048aa9_evalExpr1(_1a3ea2eb9_eval((*(_self_))._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*((*(_173641_m))))._field_Expr);
		if ((_173717_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_173641_m))))._field_Comptime) {
		if ((!(_1a3e70abe_canComptimeMatch(&(_173717_d))))) {
			_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_173641_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a405e63b_comptime((*(_173717_d))._field_Kind.ptr())) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_173641_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3e5a3b1_Match> _176313_mc = jule::new_ptr<_1a3e5a3b1_Match>(_1a3e5a3b1_Match{._field_Expr=_173717_d, ._field_Comptime=(*((*(_173641_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_176313_mc, &__jule_any_type47)}));
	if (((!((*(_176313_mc))._field_Comptime)) && ((*((*(_173641_m))))._field_Default != nullptr))) {
		(*_176313_mc.alloc)._field_Default=_1a3e6b3c2_checkDefault(_self_, _176313_mc, (*((*(_173641_m))))._field_Default);
	};
	_1a3e6aec6_checkCases(_self_, _173641_m, _176313_mc, _173717_d);
	if ((*_176313_mc.alloc)._field_Comptime) {
		_1a3e6ba98_processConstMatch(_self_, &(_176313_mc), _173641_m);
	};
}



inline void _1a3e6c3b2_checkMatch(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de5e40_MatchCase> _178634_m) {
	if ((*(_178634_m))._field_TypeMatch) {
		_1a3e6bd51_checkTypeMatch(_self_, &(_178634_m));
		return;;
	};
	_1a3e6c109_checkCommonMatch(_self_, &(_178634_m));
}



inline void _1a3e6c66a_checkFall(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddb40d_FallSt> _179429_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1a3e613d9_isDeferred(_self_))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_179429_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a3e5add9_Case* _180213_case = ((_1a3e5add9_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_180213_case))._field_Owner))._field_Comptime) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_179429_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180213_case))._field_Next == nullptr)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_179429_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3e5b5d2_FallSt>(_1a3e5b5d2_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_180213_case))._field_Next)}), &__jule_any_type48)}));
}



inline jule::Ptr<_1a3e58821_BreakSt> _1a3e6c9ab_checkBreakWithLabel(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de3723_BreakSt> _181739_b) {
	jule::Ptr<_1a3e58821_BreakSt> _181813_brk = _1a3e6ccec_checkPlainBreak(_self_, _181739_b);;
	if ((_181813_brk == nullptr)) {
		return nullptr;;
	};
	(*(_181813_brk))._field_It=0LLU;
	(*(_181813_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a3e5c0d8_scopeLabel> _182813_label = _1a3e53794_findLabelParent(&((*((*(_181739_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_182813_label == nullptr)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_181739_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_182813_label))._field_used=true;
	if ((((*(_182813_label))._field_pos + 1LL) >= (*((*((*(_182813_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18419_i = ((*(_182813_label))._field_pos + 1LL);;
	if ((_18419_i >= (*(*(*(_182813_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _184517_st = (*(*(*(_182813_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18419_i];;
		{
			auto &_match_expr{ _184517_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1a72a662c:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1a3e571b0_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1a72a6819:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1a3e580b2_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1a72a6880:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1a3e57666_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1a72a68e6:;
				{
					(*(_181813_brk))._field_Mtch=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1a3e5a3b1_Match>());
				}
			}
			else {
				_case_begin_1a72a67a3:;
				{
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1a72a674d:;
		};
	};
	if (((*(_181813_brk))._field_It != 0LLU)) {
		if ((!(_1a3e677db_checkValidBreakLabel(_self_, (*(_181813_brk))._field_It)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_181813_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a3e677db_checkValidBreakLabel(_self_, (*(_181813_brk))._field_Mtch)))) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _181813_brk;;
}



inline jule::Ptr<_1a3e58821_BreakSt> _1a3e6ccec_checkPlainBreak(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de3723_BreakSt> _187535_b) {
	if (_1a3e613d9_isDeferred(_self_)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_187535_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _188113_scope = _self_;;
	_julec_label_1a72ad964:;
	{
		
		if ((((((*_188113_scope.alloc)._field_it == 0LLU) && ((*_188113_scope.alloc)._field_cse == 0LLU)) && ((*_188113_scope.alloc)._field_parent != nullptr)) && ((*_188113_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a72aea64:;
			{
				_188113_scope=(*_188113_scope.alloc)._field_parent;
				goto _julec_label_1a72ad964;
			}
		}
		else if (((*_188113_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a72aeaec:;
			{
				return jule::new_ptr<_1a3e58821_BreakSt>(_1a3e58821_BreakSt{._field_It=(*_188113_scope.alloc)._field_it, });;
			}
		}
		else if (((*_188113_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1a72aeb63:;
			{
				return jule::new_ptr<_1a3e58821_BreakSt>(_1a3e58821_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1a3e5add9_Case*)((*_188113_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1a72ae987:;
	};
	_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_187535_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a3e6d0a5_checkBreak(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de3723_BreakSt> _189730_b) {
	if (((*(_189730_b))._field_Label != nullptr)) {
		jule::Ptr<_1a3e58821_BreakSt> _189917_brk = _1a3e6c9ab_checkBreakWithLabel(_self_, _189730_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_189917_brk, &__jule_any_type49)}));
		return;;
	};
	jule::Ptr<_1a3e58821_BreakSt> _190413_brk = _1a3e6ccec_checkPlainBreak(_self_, _189730_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_190413_brk, &__jule_any_type49)}));
}



inline void _1a3e6d35d_checkRet(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3de1897_RetSt> _190832_r) {
	if (_1a3e613d9_isDeferred(_self_)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_190832_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3e5b978_RetSt> _191313_rt = jule::new_ptr<_1a3e5b978_RetSt>(_1a3e5b978_RetSt{._field_Func=(*(_1a3e61670_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_191313_rt, &__jule_any_type50)}));
	jule::Ptr<_1a402182e_retTypeChecker> _191813_rtc = jule::new_ptr<_1a402182e_retTypeChecker>(_1a402182e_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191313_rt))._field_Func, ._field_errorToken=(*_190832_r.alloc)._field_Token, });;
	jule::Bool _19239_ok = _1a4022544_check(_191813_rtc.ptr(), &((*_190832_r.alloc)._field_Expr));;
	if ((!(_19239_ok))) {
		return;;
	};
	if (((*_190832_r.alloc)._field_Expr != nullptr)) {
		(*_191313_rt.alloc)._field_Expr=(*_191813_rtc.alloc)._field_model;
	};
}



inline void _1a3e6d616_checkUseExpr(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3dd335b_UseExpr> _193332_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_193332_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a3e613d9_isDeferred(_self_)) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_193332_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_193332_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a3e6d8be_checkNode(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Any* _194934_node) {
	{
		auto &_match_expr{ (*(_194934_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a46595c6:;
			{
				_1a3e64288_checkAnonScope(_self_, (*(_194934_node)).cast_ptr<_1a3ddd674_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a4658e44:;
			{
				_1a3e62a7d_checkVarDecl(_self_, (*(_194934_node)).cast_ptr<_1a3de14bd_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a46592a7:;
			{
				_1a3e630de_checkTypeAliasDecl(_self_, (*(_194934_node)).cast_ptr<_1a3de5170_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a465931d:;
			{
				_1a3e648a4_checkExpr(_self_, (*(_194934_node)).cast_ptr<_1a3dd2987_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a4659384:;
			{
				_1a3e652de_checkConditional(_self_, (*(_194934_node)).cast_ptr<_1a3de4933_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a46596d6:;
			{
				_1a3e67159_checkIter(_self_, (*(_194934_node)).cast_ptr<_1a3de2117_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a465974c:;
			{
				_1a3e67dd5_checkCont(_self_, (*(_194934_node)).cast_ptr<_1a3de3aec_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a46597b3:;
			{
				_1a3e6818d_checkLabel(_self_, (*(_194934_node)).cast_ptr<_1a3ddac37_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a4659829:;
			{
				_1a3e68446_pushGoto(_self_, (*(_194934_node)).cast_ptr<_1a3ddb111_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a4659890:;
			{
				_1a3e6a14b_checkAssignSt(_self_, (*(_194934_node)).cast_ptr<_1a3ddc101_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a4659906:;
			{
				_1a3e6c3b2_checkMatch(_self_, (*(_194934_node)).cast_ptr<_1a3de5e40_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a465996c:;
			{
				_1a3e6c66a_checkFall(_self_, (*(_194934_node)).cast_ptr<_1a3ddb40d_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a46599d3:;
			{
				_1a3e6d0a5_checkBreak(_self_, (*(_194934_node)).cast_ptr<_1a3de3723_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a4659a5a:;
			{
				_1a3e6d35d_checkRet(_self_, (*(_194934_node)).cast_ptr<_1a3de1897_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a4659ad2:;
			{
				_1a3e6d616_checkUseExpr(_self_, (*(_194934_node)).cast_ptr<_1a3dd335b_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1a4659120:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a46590ba:;
	};
}



inline void _1a3e6dabc_checkResult(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	_1a3ddd014_Stmt _198713_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _198713_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a46638ee:;
			{
				jule::Ptr<_1a3dd335b_UseExpr> _199017_ue = _198713_stmt._field_Data.unsafe_cast_ptr<_1a3dd335b_UseExpr>();;
				jule::Ptr<_1a4028e63_Data> _199117_d = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), (*(_199017_ue))._field_Expr);;
				if ((_199117_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_199117_d, &__jule_any_type24)}));
				jule::Ptr<_1a402182e_retTypeChecker> _199617_rtc = jule::new_ptr<_1a402182e_retTypeChecker>(_1a402182e_retTypeChecker{._field_sc=_self_, ._field_types=_1a3e184d4_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_199017_ue.alloc)._field_Expr))._field_Token, });;
				_1a4022544_check(_199617_rtc.ptr(), &((*_199017_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a46644b0:;
			{
				jule::Ptr<_1a3dd2987_Expr> _200317_expr = _198713_stmt._field_Data.unsafe_cast_ptr<_1a3dd2987_Expr>();;
				jule::Ptr<_1a4028e63_Data> _200417_d = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*_self_.alloc)._field_s, jule::Trait<_1a4079a1e_Lookup>(_self_, 0)), _200317_expr);;
				if ((_200417_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200417_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a4669dab:;
						{
							jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> _201021_m = (*(_200417_d))._field_Model.unsafe_cast_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>();;
							_1a3e645eb_processErrorCall(_self_, &(_201021_m), (*(_200317_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_200417_d, &__jule_any_type24)}));
						}
					}
					else {
						_case_begin_1a466a098:;
						{
							return;;
						}
					}
					_match_end_1a466a043:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1a4663b96:;
			{
				_1a3e6d8be_checkNode(_self_, &(_198713_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a4663b30:;
			{
				_1a3e6d8be_checkNode(_self_, &(_198713_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a4663aca:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a3e6dcba_checkTree(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _203213_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_203213_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _203213_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a3ddd014_Stmt _204017_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a3e6d8be_checkNode(_self_, &(_204017_stmt._field_Data));
			if (_1a3e61153_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1a466e19b:;
	}
	_iter_end_1a466e19b:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a3e6dabc_checkResult(_self_);
	};
}



inline void _1a3e6e12d_checkGoto(_1a3e5d57e_scopeChecker* _self_, jule::Ptr<_1a3e5c66b_scopeGoto>* _205133_gt, jule::Ptr<_1a3e5c0d8_scopeLabel>* _205154_label) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _205213_gtsc = (*((*(_205133_gt))))._field_scope;;
	while ((((*(_205213_gtsc))._field_childIndex - 1LL) > (*((*((*(_205154_label))))._field_scope))._field_childIndex)) {
		{
			_205213_gtsc=(*_205213_gtsc.alloc)._field_parent;
		}
	_iter_next_1a4672556:;
	}
	_iter_end_1a4672556:;;
	jule::I64 _205713_n = 0LL;;
	if (((*_205213_gtsc.alloc)._field_scope == (*(*((*(_205154_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_205133_gt))))._field_pos > (*((*(_205154_label))))._field_pos)) {
			return;;
		};
		_205713_n=(*((*(_205133_gt))))._field_pos;
	};
	jule::I64 _207013_i = ((*((*(_205154_label))))._field_pos - 1LL);;
	if ((_205713_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_205154_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a4675eb6:;
			if (it != expr_end) {
				jule::I64 _207317_j = it - expr->begin();
				jule::Any _207320_stmt = *it;
				{
					if (_1a3e53ed1_stmtIsGotoScope(&(_207320_stmt), &((*_205213_gtsc.alloc)._field_scope))) {
						_205713_n=_207317_j;
						goto _iter_end_1a4675eb6;
					};
				}
				_iter_next_1a4675eb6:;
				++it;
				_207317_j++;
				goto _iter_begin_1a4675eb6;
			}
			_iter_end_1a4675eb6:;
		};
	};
	for (; (_207013_i >= _205713_n); (_207013_i)--) {
		{
			jule::Any _208317_stmt = (*(*(*((*(_205154_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_207013_i];;
			if (_1a3e55c91_stmtIsDef(&(_208317_stmt))) {
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205133_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_205133_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1a4675526:;
	}
	_iter_end_1a4675526:;;
}



inline void _1a3e6e32b_checkGotos(_1a3e5d57e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4676747:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5c66b_scopeGoto> _209221_gt = *it;
			{
				jule::Ptr<_1a3e5c0d8_scopeLabel> _209317_label = _1a3e623c9_findLabelAll(_self_, &((*((*((*(_209221_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209317_label == nullptr)) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*(*_209221_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_209221_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1a4676747;
				};
				(*((*_209221_gt.alloc)._field_st))._field_Label=(*(_209317_label))._field_label;
				(*(_209317_label))._field_used=true;
				_1a3e6e12d_checkGoto(_self_, &(_209221_gt), &(_209317_label));
			}
			_iter_next_1a4676747:;
			++it;
			goto _iter_begin_1a4676747;
		}
		_iter_end_1a4676747:;
	};
}



inline void _1a3e6e529_checkLabels(_1a3e5d57e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a467c8c4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5c0d8_scopeLabel> _210516_l = *it;
			{
				if ((!((*(_210516_l))._field_used))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_210516_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_210516_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a467c8c4:;
			++it;
			goto _iter_begin_1a467c8c4;
		}
		_iter_end_1a467c8c4:;
	};
}



inline void _1a3e6e727_checkVars(_1a3e5d57e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a467e530:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _211316_v = *it;
			{
				if (((((!((*(_211316_v))._field_Used)) && (!((*_211316_v.alloc)._field_Constant))) && (!(_1a3dbaa80_IsIgnoreIdent((*_211316_v.alloc)._field_Ident)))) && (!(_1a3dbad49_IsAnonIdent((*_211316_v.alloc)._field_Ident))))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_211316_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_211316_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a467e530:;
			++it;
			goto _iter_begin_1a467e530;
		}
		_iter_end_1a467e530:;
	};
}



inline void _1a3e6e925_checkAliases(_1a3e5d57e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a4681bd6:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> _212116_a = *it;
			{
				if ((((!((*(_212116_a))._field_Used)) && (!(_1a3dbaa80_IsIgnoreIdent((*_212116_a.alloc)._field_Ident)))) && (!(_1a3dbad49_IsAnonIdent((*_212116_a.alloc)._field_Ident))))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_212116_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_212116_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a4681bd6:;
			++it;
			goto _iter_begin_1a4681bd6;
		}
		_iter_end_1a4681bd6:;
	};
}



inline void _1a3e6ec88_check(jule::Ptr<_1a3e5d57e_scopeChecker> _self_, jule::Ptr<_1a3ddd674_ScopeTree>* _212930_tree, jule::Ptr<_1a3e5627a_Scope>* _212953_s) {
	(*((*(_212953_s))))._field_Deferred=(*((*(_212930_tree))))._field_Deferred;
	(*((*(_212953_s))))._field_Unsafety=(*((*(_212930_tree))))._field_Unsafety;
	jule::I64 _21339_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_212930_tree));
	(*_self_.alloc)._field_scope=(*(_212953_s));
	_1a3e6dcba_checkTree(_self_);
	if ((_21339_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1a3e6e727_checkVars(_self_);
		_1a3e6e925_checkAliases(_self_);
		if (_1a3e60bbe_isRoot(_self_)) {
			_1a3e6e32b_checkGotos(_self_);
			_1a3e6e529_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e7001e_newChildChecker(jule::Ptr<_1a3e5d57e_scopeChecker> _self_) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _215313_base = _1a3e53057_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215313_base))._field_parent=_self_;
	(*_215313_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_215313_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_215313_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _215313_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e5d57e_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e719c1_checkCdef(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a4689958:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3e143d1_Fn>()))._field_Binded) {
					goto _match_end_1a4689b9a;
				};
				goto _case_begin_1a4689c00;
			}
		}
		else {
			_case_begin_1a4689c00:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a4689b9a:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3e71c79_checkTypedef(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a468c8b2:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3dee4dc_Struct>()))._field_Binded) {
					goto _match_end_1a468cb04;
				};
				goto _case_begin_1a468cb59;
			}
		}
		else {
			_case_begin_1a468cb59:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a468cb04:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3e72032_checkNamespace(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a469081b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3dee4dc_Struct>()))._field_Binded))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a4690b29:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3e143d1_Fn>()))._field_Binded))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a4690b90:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3ebac4b_Var>()))._field_Binded))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a4690ab3:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a4690a5d:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3db8198_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a469b629:;
			{
				if ((_1a405280a_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a3dcca70_Directive> _9021_typedef = jule::new_ptr<_1a3dcca70_Directive>(_1a3dcca70_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1a3dcca70_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1a469b5b3:;
	};
}



inline void _1a3e722da_checkDeprecated(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a469d7b3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3dee4dc_Struct>()))._field_Binded) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a469da5a:;
			{
				jule::Ptr<_1a3e143d1_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a3e143d1_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1a3e14d71_IsEntryPoint(_10617_f)) || _1a3e15107_IsInit(_10617_f))) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a469dac1:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3ebac4b_Var>()))._field_Binded) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a469d9e4:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a469d98e:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3db8198_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a3e72593_checkTest(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a46a5149:;
			{
				jule::Ptr<_1a3e143d1_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a3e143d1_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1a3e15107_IsInit(_14213_f)))) && (!(_1a3e14d71_IsEntryPoint(_14213_f))))) {
					goto _match_end_1a46a99bc;
				};
				if (_1a3e14ada_IsMethod(_14213_f)) {
					_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a46a99bc;
				};
				goto _case_begin_1a46a9b43;
			}
		}
		else {
			_case_begin_1a46a9b43:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a46a99bc:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3e7284b_checkDirective(_1a3e715b4_directiveChecker* _self_, jule::Ptr<_1a3dcca70_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1a46ae807:;
			{
				_1a3e719c1_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1a46ae86d:;
			{
				_1a3e71c79_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1a46ae8d4:;
			{
				_1a3e72032_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1a46ae94a:;
			{
				_1a3e722da_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1a46ae9b1:;
			{
				_1a3e72593_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1a46aea27:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a46ae230:;
			{
				_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a46ae73b:;
	};
}



inline void _1a3e72a49_check(_1a3e715b4_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a58133e9:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _18121_d = *it;
			{
				_1a3e7284b_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1a58133e9:;
			++it;
			goto _iter_begin_1a58133e9;
		}
		_iter_end_1a58133e9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e715b4_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e78049_SelectPackage(_1a3e77a60_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e78445_FindVar(_1a3e77a60_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1a3e75046_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e78841_FindTypeAlias(_1a3e77a60_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1a3e754b9_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e78c3c_FindStruct(_1a3e77a60_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1a3e758e8_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e79138_FindFn(_1a3e77a60_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1a3e75d9e_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e79479_FindTrait(_1a3e77a60_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1a3e761e0_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e797ba_FindEnum(_1a3e77a60_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1a3e76564_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e79b0b_FindTypeEnum(_1a3e77a60_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1a3e7a0a1_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1a3e768d8_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1a3e7a0a1_isLookupable(_1a3e77a60_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a3e7a3e2_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a3e7a3e2_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a3e7a3e2_existIdent(_1a3e77a60_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a582840e:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1a582840e:;
			++it;
			goto _iter_begin_1a582840e;
		}
		_iter_end_1a582840e:;
	};
	return false;;
}



inline jule::Bool _1a3e7a678_isAccessibleViaSelection(_1a3e77a60_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a3e7a3e2_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e77a60_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e7ae2b_SelectPackage(_1a3e7a986_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e7b327_FindVar(_1a3e7a986_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1a3e75046_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e7b723_FindTypeAlias(_1a3e7a986_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1a3e754b9_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e7bb1e_FindStruct(_1a3e7a986_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1a3e758e8_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e7c01a_FindFn(_1a3e7a986_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1a3e75d9e_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e7c35b_FindTrait(_1a3e7a986_Package* _self_, jule::Str _33828_ident) {
	return _1a3e761e0_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e7c69c_FindEnum(_1a3e7a986_Package* _self_, jule::Str _34427_ident) {
	return _1a3e76564_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e7c9dd_FindTypeEnum(_1a3e7a986_Package* _self_, jule::Str _35031_ident) {
	return _1a3e768d8_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e7a986_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e3e054_comptimeTypeInfo> _1a3e9771c_pushComptimeTypeInfo(_1a3e972cc_commonSemaMeta* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5859e02:;
		if (it != expr_end) {
			jule::Ptr<_1a3e3e054_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1a405a637_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1a5859e02:;
			++it;
			goto _iter_begin_1a5859e02;
		}
		_iter_end_1a5859e02:;
	};
	jule::Ptr<_1a3e3e054_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1a3e3e054_comptimeTypeInfo>(_1a3e3e054_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1a3e3e054_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e972cc_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e98377_SelectPackage(_1a3e97dd2_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _24332_selector) {
	return _1a40240d4_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e98773_FindVar(_1a3e97dd2_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1a3ebac4b_Var> _25513_v = _1a3e75046_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1a3e94e9a_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a585dda1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1a585dda1;
				};
				_25513_v=_1a3e78445_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1a585dda1:;
			++it;
			goto _iter_begin_1a585dda1;
		}
		_iter_end_1a585dda1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e98b6e_FindTypeAlias(_1a3e97dd2_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1a405913b_TypeAlias> _28713_ta = _1a3e754b9_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1a3e94e9a_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7344225:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1a7344225;
				};
				_28713_ta=_1a3e78841_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1a7344225:;
			++it;
			goto _iter_begin_1a7344225;
		}
		_iter_end_1a7344225:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e9906a_FindStruct(_1a3e97dd2_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1a3dee4dc_Struct> _31913_s = _1a3e758e8_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1a3e94e9a_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7347129:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1a7347129;
				};
				_31913_s=_1a3e78c3c_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1a7347129:;
			++it;
			goto _iter_begin_1a7347129;
		}
		_iter_end_1a7347129:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e99466_FindFn(_1a3e97dd2_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1a3e143d1_Fn> _35013_f = _1a3e75d9e_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1a3e94e9a_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a734a02d:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1a734a02d;
				};
				_35013_f=_1a3e79138_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1a734a02d:;
			++it;
			goto _iter_begin_1a734a02d;
		}
		_iter_end_1a734a02d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e997a7_FindTrait(_1a3e97dd2_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1a3e276ad_Trait> _38213_t = _1a3e761e0_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1a3e94e9a_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a734cbe0:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1a734cbe0;
				};
				_38213_t=_1a3e79479_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1a734cbe0:;
			++it;
			goto _iter_begin_1a734cbe0;
		}
		_iter_end_1a734cbe0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e99ae8_FindEnum(_1a3e97dd2_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1a3e29db9_Enum> _41413_e = _1a3e76564_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1a3e94e9a_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73508a2:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1a73508a2;
				};
				_41413_e=_1a3e797ba_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1a73508a2:;
			++it;
			goto _iter_begin_1a73508a2;
		}
		_iter_end_1a73508a2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e99e39_FindTypeEnum(_1a3e97dd2_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1a3e2b5c4_TypeEnum> _44613_e = _1a3e768d8_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1a3e94e9a_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7353564:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1a3e95d9c_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1a7353564;
				};
				_44613_e=_1a3e79b0b_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1a3e9b27b_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1a7353564:;
			++it;
			goto _iter_begin_1a7353564;
		}
		_iter_end_1a7353564:;
	};
	return nullptr;;
}



inline jule::Bool _1a3e9a346_isFlag(_1a3e97dd2_Sema* _self_, jule::I64 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1a3e9a5ee_setCurrentFile(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a4023aea_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1a3e9aa1c_pushErr(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3e95a28_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1a3e9ad80_pushSuggestion(_1a3e97dd2_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1a3e970ce_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1a3e9b27b_isAccessibleDefine(_1a3e97dd2_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1a3db8198_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1a3dbe0d3_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1a3dbe0d3_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1a3e9b732_isDuplicatedIdent(_1a3e97dd2_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7359c74:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> *_49516_f = it;
			{
				if (_1a402711a_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a735ac64:;
					if (it != expr_end) {
						jule::Ptr<_1a3e77a60_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a735b649:;
								if (it != expr_end) {
									jule::Ptr<_1a3db8198_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1a735b649:;
									++it;
									goto _iter_begin_1a735b649;
								}
								_iter_end_1a735b649:;
							};
						}
						_iter_next_1a735ac64:;
						++it;
						goto _iter_begin_1a735ac64;
					}
					_iter_end_1a735ac64:;
				};
			}
			_iter_next_1a7359c74:;
			++it;
			goto _iter_begin_1a7359c74;
		}
		_iter_end_1a7359c74:;
	};
	return false;;
}



inline void _1a3e9ba95_checkDirectives(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _51140_d, jule::Any _51166_o) {
	_1a3e715b4_directiveChecker _51213_dc = _1a3e715b4_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a3dcca70_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1a3e72a49_check(&_51213_dc);
}



inline jule::Bool _1a3e9c04b_checkGenericQuantity(_1a3e97dd2_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_1a3db8198_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1a735db68:;
			{
				_1a3e9aa1c_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1a735dbe0:;
			{
				_1a3e9aa1c_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1a735dc67:;
			{
				_1a3e9aa1c_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1a735dcde:;
			{
				_1a3e9aa1c_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a735da9c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a735d9d1:;
	};
}



inline jule::Bool _1a3e9c447_isDuplicatedImportSelection(_1a3e97dd2_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73619e5:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1a73619e5;
				};
				if (_1a3e7a3e2_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1a73619e5:;
			++it;
			goto _iter_begin_1a73619e5;
		}
		_iter_end_1a73619e5:;
	};
	return false;;
}



inline jule::Any _1a3e9c843_getImportDef(_1a3e97dd2_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1a3e77a60_ImportInfo>* _55245_imp) {
	if ((_1a4154500_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7363b4b:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1a4026b64_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1a7363b4b:;
			++it;
			goto _iter_begin_1a7363b4b;
		}
		_iter_end_1a7363b4b:;
	};
	return nullptr;;
}



inline jule::Bool _1a736a191_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3ebac4b_Var>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a736e492_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a405913b_TypeAlias>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a737374e_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3dee4dc_Struct>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7377cc5_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3e276ad_Trait>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a737c082_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3e29db9_Enum>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a738133e_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3e2b5c4_TypeEnum>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a73855eb_checkImportSelection(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3db8198_Token>* _56743_ident, jule::Ptr<_1a3e143d1_Fn>* _56759_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3e76e27_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a3e9d080_checkImportSelectedSelections(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7365785:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1a7365785;
				};
				if (_1a3e9c447_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1a3e9aa1c_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a7365785;
				};
				jule::Any _59517_def = _1a3e9c843_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1a7367a51:;
						{
							goto _iter_next_1a7365785;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a736825a:;
						{
							jule::Ptr<_1a3ebac4b_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1a3ebac4b_Var>();;
							__jule_func_result=(_1a736a191_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a73682c1:;
						{
							jule::Ptr<_1a405913b_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1a405913b_TypeAlias>();;
							__jule_func_result=(_1a736e492_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a7368337:;
						{
							jule::Ptr<_1a3dee4dc_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1a3dee4dc_Struct>();;
							__jule_func_result=(_1a737374e_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a736839d:;
						{
							jule::Ptr<_1a3e276ad_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1a3e276ad_Trait>();;
							__jule_func_result=(_1a7377cc5_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a7369019:;
						{
							jule::Ptr<_1a3e29db9_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1a3e29db9_Enum>();;
							__jule_func_result=(_1a737c082_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1a7369080:;
						{
							jule::Ptr<_1a3e2b5c4_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1a3e2b5c4_TypeEnum>();;
							__jule_func_result=(_1a738133e_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1a73690e6:;
						{
							jule::Ptr<_1a3e143d1_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1a3e143d1_Fn>();;
							__jule_func_result=(_1a73855eb_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a736814a:;
						{
							_1a3e9aa1c_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1a7365785;
						}
					}
					_match_end_1a7365e06:;
				};
			}
			_iter_next_1a7365785:;
			++it;
			goto _iter_begin_1a7365785;
		}
		_iter_end_1a7365785:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7389dc5_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a738bb41:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a736a191_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a738bb41:;
			++it;
			goto _iter_begin_1a738bb41;
		}
		_iter_end_1a738bb41:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a738b05d_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a738e34c:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a736e492_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a738e34c:;
			++it;
			goto _iter_begin_1a738e34c;
		}
		_iter_end_1a738e34c:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a738d7ad_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7391a47:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a737374e_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a7391a47:;
			++it;
			goto _iter_begin_1a7391a47;
		}
		_iter_end_1a7391a47:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a7390ea8_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7394264:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a73855eb_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a7394264:;
			++it;
			goto _iter_begin_1a7394264;
		}
		_iter_end_1a7394264:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a739364d_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e276ad_Trait>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a739691a:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a7377cc5_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a739691a:;
			++it;
			goto _iter_begin_1a739691a;
		}
		_iter_end_1a739691a:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a7395dc0_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e29db9_Enum>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73990c1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e29db9_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a737c082_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a73990c1:;
			++it;
			goto _iter_begin_1a73990c1;
		}
		_iter_end_1a73990c1:;
	};
	return _63113_ok;;
}

inline jule::Bool _1a7398576_checkImportsAllSelectionsFromCollection(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e2b5c4_TypeEnum>>* _63062_s, jule::Ptr<_1a3db8198_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a739b810:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2b5c4_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1a738133e_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1a739b810:;
			++it;
			goto _iter_begin_1a739b810;
		}
		_iter_end_1a739b810:;
	};
	return _63113_ok;;
}



inline jule::Bool _1a3e9d7bc_checkImportAllSelections(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7365ba3:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1a7389dc5_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a738b05d_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a738d7ad_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7390ea8_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a739364d_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7395dc0_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7398576_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1a7365ba3:;
			++it;
			goto _iter_begin_1a7365ba3;
		}
		_iter_end_1a7365ba3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3e9db0d_checkImportSelections(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a3e9d080_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1a3e9d7bc_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3e9de4e_isUseAliasDuplication(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a739d8ab:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1a739d8ab;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a739d8ab:;
			++it;
			goto _iter_begin_1a739d8ab;
		}
		_iter_end_1a739d8ab:;
	};
	return false;;
}



inline jule::Bool _1a3e9e290_checkImport(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e77a60_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1a3dbaa80_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1a3e9de4e_isUseAliasDuplication(_self_, _67935_imp)) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1a3e97dd2_Sema> _70217_sema = jule::new_ptr<_1a3e97dd2_Sema>(_1a3e97dd2_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a3eb7671_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a3e9db0d_checkImportSelections(_self_, _67935_imp);;
}



inline void _1a3e9e48d_checkImports(_1a3e97dd2_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73a7dd2:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _71721_file = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a73a8a81:;
					if (it != expr_end) {
						jule::Ptr<_1a3e77a60_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1a3e9e290_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1a73a8a81:;
						++it;
						goto _iter_begin_1a73a8a81;
					}
					_iter_end_1a73a8a81:;
				};
			}
			_iter_next_1a73a7dd2:;
			++it;
			goto _iter_begin_1a73a7dd2;
		}
		_iter_end_1a73a7dd2:;
	};
}



inline void _1a3e9e68b_implFileImpls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73a9037:;
		if (it != expr_end) {
			jule::Ptr<_1a3e50d24_Impl> _73021_imp = *it;
			{
				_1a3eadc2d_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1a73a9037:;
			++it;
			goto _iter_begin_1a73a9037;
		}
		_iter_end_1a73a9037:;
	};
}



inline void _1a3e9e889_implImpls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73aa8c9:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _73621_file = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _73621_file);
				_1a3e9e68b_implFileImpls(_self_);
			}
			_iter_next_1a73aa8c9:;
			++it;
			goto _iter_begin_1a73aa8c9;
		}
		_iter_end_1a73aa8c9:;
	};
}



inline void _1a3e9ea87_checkEnums(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73ab974:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _74321_file = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1a3eaa169_checkEnumDecls(_self_)))) {
						_case_begin_1a73ac090:;
					}
					else if ((!(_1a3eaa400_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a73ac656:;
					}
					_match_end_1a73ac59b:;
				};
			}
			_iter_next_1a73ab974:;
			++it;
			goto _iter_begin_1a73ab974;
		}
		_iter_end_1a73ab974:;
	};
}



inline void _1a3e9ec85_checkFileInherits(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73ad4d1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1a3eabcb4__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1a73ad4d1:;
			++it;
			goto _iter_begin_1a73ad4d1;
		}
		_iter_end_1a73ad4d1:;
	};
}



inline void _1a3e9ee83_checkInherits(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73ae7e0:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _76221_file = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _76221_file);
				_1a3e9ec85_checkFileInherits(_self_);
			}
			_iter_next_1a73ae7e0:;
			++it;
			goto _iter_begin_1a73ae7e0;
		}
		_iter_end_1a73ae7e0:;
	};
}



inline _1a406bcdb_typeChecker _1a3ea0439_typeChecker(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Trait<_1a4079a1e_Lookup> _76835_l, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _76850_generics, jule::Ptr<_1a406aceb_referencer> _76913_referencer) {
	_1a406bcdb_typeChecker _77013_tc = _1a406bcdb_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a73b16c1:;
			{
				jule::Ptr<_1a3e5d57e_scopeChecker> _77917_hard = _1a3e61906_getHardRoot(_76835_l.cast_ptr<_1a3e5d57e_scopeChecker>(0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1a73b112c:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a73b3041:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1a405913b_TypeAlias>();
				}
			}
			_match_end_1a73b2edb:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea099a_buildTypeWithRefers(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dcd653_TypeDecl>* _79544_t, jule::Trait<_1a4079a1e_Lookup> _79567_l, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _79613_generics, jule::Ptr<_1a406aceb_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1a3ea0439_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1a4074486_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1a3ea100b_checkTypeWithRefers(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4062100_TypeSymbol>* _80244_t, jule::Trait<_1a4079a1e_Lookup> _80264_l, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _80313_generics, jule::Ptr<_1a406aceb_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a4062474_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1a3ea099a_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1a4062474_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e4d9c0_constraintChecker> _1a3ea1292_constraintChecker(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	return jule::new_ptr<_1a3e4d9c0_constraintChecker>(_1a3e4d9c0_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a3ea168d_checkType(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4062100_TypeSymbol>* _81734_t, jule::Trait<_1a4079a1e_Lookup> _81754_l) {
	return _1a3ea100b_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea1b44_buildTypeWithGenerics(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dcd653_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _82413_generics, jule::Ptr<_1a3e1a4a3_ReferenceStack> _82441_refers) {
	jule::Ptr<_1a406bcdb_typeChecker> _82513_tc = jule::new_ptr<_1a406bcdb_typeChecker>(_1a406bcdb_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1a4074486_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea22c6_selectType(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dcd653_TypeDecl>* _84135_t) {
	jule::Ptr<_1a406bcdb_typeChecker> _84213_tc = jule::new_ptr<_1a406bcdb_typeChecker>(_1a406bcdb_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a4074486_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1a402ab8a_Eval> _1a3ea277c_evalpd(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Trait<_1a4079a1e_Lookup> _85330_l, jule::Ptr<_1a4059e2d_TypeKind> _85345_p, jule::Ptr<_1a3ebac4b_Var> _85363_owner) {
	jule::Ptr<_1a402ab8a_Eval> _85413_e = jule::new_ptr<_1a402ab8a_Eval>(_1a402ab8a_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a73bc37a:;
			{
				(*(_85413_e))._field_unsafety=_1a3e60938_isUnsafe(_85330_l.cast_ptr<_1a3e5d57e_scopeChecker>(0));
			}
		}
		_match_end_1a73bc127:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1a402ab8a_Eval> _1a3ea2b78_evalp(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Trait<_1a4079a1e_Lookup> _86829_l, jule::Ptr<_1a4059e2d_TypeKind> _86844_p) {
	return _1a3ea277c_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1a402ab8a_Eval> _1a3ea2eb9_eval(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Trait<_1a4079a1e_Lookup> _87328_l) {
	return _1a3ea2b78_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1a3ea352a_checkAssignType(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1a4059e2d_TypeKind>* _87757_dest, jule::Ptr<_1a4028e63_Data>* _87814_d, jule::Ptr<_1a3db8198_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1a3e9aa1c_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1a405a637_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1a3e9aa1c_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a4012b72_assignTypeChecker> _88917_atc = jule::new_ptr<_1a4012b72_assignTypeChecker>(_1a4012b72_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1a4013b40_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1a402986a_IsConst((*(_87814_d)).ptr()))) || (_1a405c57e_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1a405c57e_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b289a40d_IsSigInt(_90513_kind)) {
			_case_begin_1a73c4bac:;
			{
				_1b289e5bb_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _1b289dce6_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b289a71b_IsUnsigInt(_90513_kind)) {
			_case_begin_1a73c4c56:;
			{
				_1b289e874_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _1b289e07c_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b289ad26_IsFloat(_90513_kind)) {
			_case_begin_1a73c4cbc:;
			{
				_1b28a018d_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _1b289e313_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1a73c4b02:;
	};
	return true;;
}



inline jule::Bool _1a3ea39d1__checkTypeCompatibility(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4059e2d_TypeKind>* _91948_dest, jule::Ptr<_1a4059e2d_TypeKind>* _91970_src, jule::Ptr<_1a3db8198_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1a405e3a5_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a4010dc3_typeCompatibilityChecker _92813_tcc = _1a4010dc3_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1a4012589_check(&_92813_tcc);;
}



inline jule::Bool _1a3ea3e87_checkTypeCompatibility(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4059e2d_TypeKind>* _93747_dest, jule::Ptr<_1a4059e2d_TypeKind>* _93814_src, jule::Ptr<_1a3db8198_Token>* _93835_errorToken) {
	if (_1a3ea39d1__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1a3e9aa1c_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1a3ea43a5_pushCompatiblityError(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _94645_dest, jule::Ptr<_1a4028e63_Data>* _94667_src, jule::Ptr<_1a3db8198_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_1b28a0622_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1a73cc1e2:;
				{
					_1a3e9aa1c_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b28a08a8_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1a73cc28b:;
				{
					_1a3e9aa1c_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b28a115b_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1a73cc302:;
				{
					_1a3e9aa1c_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1a73cc0c1:;
		};
	};
	_1a3e9aa1c_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a3ea485b_checkTypeCompatibility1(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4059e2d_TypeKind>* _96448_dest, jule::Ptr<_1a4028e63_Data>* _96470_src, jule::Ptr<_1a3db8198_Token>* _96514_errorToken) {
	if (_1a3ea39d1__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1a3ea43a5_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a3ea4d12_buildNonGenericTypeKind(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dcd653_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1a406bcdb_typeChecker> _98113_tc = jule::new_ptr<_1a406bcdb_typeChecker>(_1a406bcdb_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1a4074486_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1a3ea520d_buildFnNonGenericTypeKinds(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _99317_generics = nullptr;;
	if (_1a3e14ada_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73d6581:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> _100021_p = *it;
			{
				if ((!(_1a3e13028_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1a3ea4d12_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1a73d6581:;
			++it;
			goto _iter_begin_1a73d6581;
		}
		_iter_end_1a73d6581:;
	};
	if ((!(_1a3e14854_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1a3ea4d12_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3ea554e_getTraitCheckFnKind(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a3e172d5_FnIns> _101713_ins = _1a3e158aa_instanceForce((*(_101344_f)));;
	jule::Ptr<_1a406bcdb_typeChecker> _101913_tc = jule::new_ptr<_1a406bcdb_typeChecker>(_1a406bcdb_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73dc6b9:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> _102421_p = *it;
			{
				if ((!(_1a3e13028_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1a4074486_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1a73dc6b9:;
			++it;
			goto _iter_begin_1a73dc6b9;
		}
		_iter_end_1a73dc6b9:;
	};
	if ((!(_1a3e14854_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1a4074486_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1a3ea5a05_checkConstraintsFn(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns>* _103643_f, jule::Ptr<_1a3db8198_Token>* _103659_et, jule::Ptr<_1a3e172d5_FnIns> _103675_exist) {
	jule::Ptr<_1a3e4d9c0_constraintChecker> _103713_cc = _1a3ea1292_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a73e1bb8:;
			if (it != expr_end) {
				jule::I64 _104118_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1a73e1bb8:;
				++it;
				_104118_i++;
				goto _iter_begin_1a73e1bb8;
			}
			_iter_end_1a73e1bb8:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1a3e4e905_check(_103713_cc);;
}



inline jule::Bool _1a3ea5eab_checkConstraintsStruct(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _105047_s, jule::Ptr<_1a3db8198_Token>* _105067_et, jule::Ptr<_1a3e0226a_StructIns> _105083_exist) {
	jule::Ptr<_1a3e4d9c0_constraintChecker> _105113_cc = _1a3ea1292_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a73e4d53:;
			if (it != expr_end) {
				jule::I64 _105518_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1a73e4d53:;
				++it;
				_105518_i++;
				goto _iter_begin_1a73e4d53;
			}
			_iter_end_1a73e4d53:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1a3e4e905_check(_105113_cc);;
}



inline jule::Bool _1a3ea63a7_fnEnvironment(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns>* _106738_f, jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)> _106749_algo) {
	jule::Ptr<_1a3e97dd2_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a4023aea_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a3e9a5ee_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1a4023aea_SymbolTable> _107113_file = _1a3e96b28_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1a3e9a5ee_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I64 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>::alloc(0LL, _107613_size);;
	_1a3e967a4_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1a3ea6660_checkFnParamKind(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e16339_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1a40763de_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1a3ea69a1_reloadFnInsTypes(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns> _110140_f) {
	if ((_1a3e1876a_IsBuiltin(_110140_f.ptr()) || _1a3e18a01_IsAnon(_110140_f))) {
		return true;;
	};
	return _1a3ea63a7_fnEnvironment(_self_, &(_110140_f), jule::Fn<jule::Bool(jule::Ptr<_1a3e97dd2_Sema>*,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>*)>([=](jule::Ptr<_1a3e97dd2_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>* _110561_generics) mutable -> jule::Bool {
		jule::Bool _110617_ok = true;;
		{
			auto expr = &((*_110140_f.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a74039dd:;
			if (it != expr_end) {
				jule::Ptr<_1a3e16339_ParamIns> _110725_p = *it;
				{
					if (_1a3e13028_IsSelf((*(_110725_p))._field_Decl.ptr())) {
						if (_1a3e132ae_IsRef((*_110725_p.alloc)._field_Decl)) {
							(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4066533_Sptr>(_1a4066533_Sptr{._field_Elem=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*_110140_f.alloc)._field_Owner, 0)})}), 21)});
						} else {
							(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*_110140_f.alloc)._field_Owner, 0)});
						};
					} else {
						(*(_110725_p))._field_Kind=_1a3ea1b44_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*_110140_f.alloc)._field_Refers);
						if (((*_110725_p.alloc)._field_Kind != nullptr)) {
							_1a3ea6660_checkFnParamKind(_self_, &(_110725_p));
						} else {
							_110617_ok=false;
						};
					};
				}
				_iter_next_1a74039dd:;
				++it;
				goto _iter_begin_1a74039dd;
			}
			_iter_end_1a74039dd:;
		};
		if ((!(_1a3e14854_IsVoid((*_110140_f.alloc)._field_Decl.ptr())))) {
			(*_110140_f.alloc)._field_Result=_1a3ea1b44_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*_110140_f.alloc)._field_Refers);
			_110617_ok=(((*_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
		};
		return _110617_ok;;
	}));;
}



inline jule::Bool _1a3ea6e57_checkRefValidityForInitExpr(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1a4028e63_Data>* _113767_d, jule::Ptr<_1a3db8198_Token>* _113782_errorToken) {
	if ((!(_1a3e95572_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1a3e9aa1c_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a3ea7298_isMutRiskyStruct(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e0226a_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a740be03:;
		if (it != expr_end) {
			jule::Ptr<_1a3e016ba_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1a405b7ae_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1a3e9b27b_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1a740be03:;
			++it;
			goto _iter_begin_1a740be03;
		}
		_iter_end_1a740be03:;
	};
	return false;;
}



inline jule::Bool _1a3ea78b4_checkValidityForInitExpr(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1a4059e2d_TypeKind>* _118210_leftKind, jule::Ptr<_1a4028e63_Data>* _118236_d, jule::Ptr<_1a3db8198_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1a405b7ae_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1a3e9aa1c_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1a3e0226a_StructIns> _119013_s = _1a405db02_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1a3ea7298_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1a3e9aa1c_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1a3ea6e57_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a4012b72_assignTypeChecker> _120113_atc = jule::new_ptr<_1a4012b72_assignTypeChecker>(_1a4012b72_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1a401338c_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1a3ea7cb0_checkTypeAliasDeclKind(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a405913b_TypeAlias>* _120947_ta, jule::Trait<_1a4079a1e_Lookup> _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4023aea_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a3e9a5ee_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a4023aea_SymbolTable> _121517_file = _1a3e96b28_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1a3e9a5ee_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1a3ea100b_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1a406aceb_referencer>(_1a406aceb_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a405d34e_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a405d34e_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a3ea8123_checkTypeAliasDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a405913b_TypeAlias>* _123243_ta, jule::Trait<_1a4079a1e_Lookup> _123263_l) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a3ea7cb0_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1a3ea83cb_checkTypeAliasDeclDup(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a405913b_TypeAlias>* _124046_ta) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a3e9b732_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3ea7cb0_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));
}



inline jule::Bool _1a3ea8662_checkTypeAliasDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a741eab4:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> _125321_ta = *it;
			{
				_1a3ea83cb_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a741eab4:;
			++it;
			goto _iter_begin_1a741eab4;
		}
		_iter_end_1a741eab4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a744b690_checkEnumItemsDup(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a744c9d2:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2934c_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1a744c9d2;
				} else if (_1a3dbaa80_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1a3e9aa1c_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a744e60a:;
						if (it != expr_end) {
							jule::Ptr<_1a3e2934c_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1a744e60a;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1a3e9aa1c_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a744e60a;
								};
							}
							_iter_next_1a744e60a:;
							++it;
							goto _iter_begin_1a744e60a;
						}
						_iter_end_1a744e60a:;
					};
				};
			}
			_iter_next_1a744c9d2:;
			++it;
			goto _iter_begin_1a744c9d2;
		}
		_iter_end_1a744c9d2:;
	};
}

inline void _1a74589aa_checkEnumItemsDup(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7459cca:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2aeec_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1a7459cca;
				} else if (_1a3dbaa80_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1a3e9aa1c_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a745b903:;
						if (it != expr_end) {
							jule::Ptr<_1a3e2aeec_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1a745b903;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1a3e9aa1c_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a745b903;
								};
							}
							_iter_next_1a745b903:;
							++it;
							goto _iter_begin_1a745b903;
						}
						_iter_end_1a745b903:;
					};
				};
			}
			_iter_next_1a7459cca:;
			++it;
			goto _iter_begin_1a7459cca;
		}
		_iter_end_1a7459cca:;
	};
}



inline void _1a3ea8bc3_checkEnumItemsStr(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e29db9_Enum>* _128442_e) {
	jule::Ptr<_1a402ab8a_Eval> _128513_eval = _1a3ea2eb9_eval(_self_, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7421830:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2934c_EnumItem> _128621_item = *it;
			{
				if (_1a3e29704_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Constant=static__1b289c3dd_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a4028e63_Data> _129521_d = _1a4048dea_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1a7421830;
					};
					if ((!(_1a402986a_IsConst(_129521_d.ptr())))) {
						_1a3e9aa1c_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a3ea352a_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1a7421830:;
			++it;
			goto _iter_begin_1a7421830;
		}
		_iter_end_1a7421830:;
	};
}



inline void _1a742c0bb_checkEnumItemInt(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a402ab8a_Eval>* _131046_eval, jule::Ptr<_1a3e29db9_Enum>* _131064_e, jule::Ptr<_1a4062a07_Prim>* _131075_prim, jule::Ptr<_1a3e2934c_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1a3e29704_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		{
			
{
				_case_begin_1a742e486:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b289bd5a_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1a742e80a:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a4028e63_Data> _132517_d = _1a4048dea_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1a402986a_IsConst(_132517_d.ptr())))) {
			_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a3ea352a_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1a74339da:;
				{
					(*(_1310115_n))=_1b289d2ac_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a7434b62:;
		};
	};
}

inline void _1a743c175_checkEnumItemInt(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a402ab8a_Eval>* _131046_eval, jule::Ptr<_1a3e29db9_Enum>* _131064_e, jule::Ptr<_1a4062a07_Prim>* _131075_prim, jule::Ptr<_1a3e2934c_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1a3e29704_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()});
		{
			
{
				_case_begin_1a743edae:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b289ba91_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1a743e84d:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a4028e63_Data> _132517_d = _1a4048dea_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1a402986a_IsConst(_132517_d.ptr())))) {
			_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a3ea352a_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1a7444da3:;
				{
					(*(_1310115_n))=_1b289d026_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a7444d3c:;
		};
	};
}



inline void _1a742824e_checkEnumItemsInt1(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4062a07_Prim>* _134544_prim, jule::Ptr<_1a3e29db9_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1a7429e76:;
			{
				_134613_max=_1b2896d11_MaxU(_1a4062d48_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1a7429c9a:;
	};
	jule::Ptr<_1a402ab8a_Eval> _135613_eval = _1a3ea2eb9_eval(_self_, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a3e2934c_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1a742c0bb_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a742d9d5:;
				{
					_135713_n=_1b289e07c_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a74354c0:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7431950:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2934c_EnumItem> _137021_item = *it;
			{
				if (((_1a3e29704_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1a3e9aa1c_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a7431950;
				};
				(_135713_n)++;
				_1a742c0bb_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1a7431950:;
			++it;
			goto _iter_begin_1a7431950;
		}
		_iter_end_1a7431950:;
	};
}

inline void _1a74387ae_checkEnumItemsInt1(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a4062a07_Prim>* _134544_prim, jule::Ptr<_1a3e29db9_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1a743a01e:;
			{
				_134613_max=_1b2896a47_MaxI(_1a4062d48_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1a7439bbc:;
	};
	jule::Ptr<_1a402ab8a_Eval> _135613_eval = _1a3ea2eb9_eval(_self_, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a3e2934c_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1a743c175_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a743b064:;
				{
					_135713_n=_1b289dce6_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a743da28:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7446965:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2934c_EnumItem> _137021_item = *it;
			{
				if (((_1a3e29704_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1a3e9aa1c_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a7446965;
				};
				(_135713_n)++;
				_1a743c175_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1a7446965:;
			++it;
			goto _iter_begin_1a7446965;
		}
		_iter_end_1a7446965:;
	};
}



inline void _1a3ea9872_checkEnumItemsInt(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e29db9_Enum>* _138042_e) {
	jule::Ptr<_1a4062a07_Prim> _13819_prim = _1a405c57e_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b289a40d_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1a7427d75:;
			{
				_1a74387ae_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1a74279ce:;
			{
				_1a742824e_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1a7427968:;
	};
}



inline void _1a3ea9b2a_checkEnumDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e29db9_Enum>* _139038_e) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3e9b732_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a744b690_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1a3ea168d_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait<_1a4079a1e_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a4062a07_Prim> _141413_t = _1a405c57e_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a4065e8e_IsStr(_141413_t.ptr())) {
			_case_begin_1a74534dd:;
			{
				_1a3ea8bc3_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_1b289a9d5_IsInt(_1a4062d48_Str(_141413_t.ptr()))) {
			_case_begin_1a74531e1:;
			{
				_1a3ea9872_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1a745317a:;
			{
				_1a3e9aa1c_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a74527c8:;
	};
}



inline void _1a3ea9dd3_checkTypeEnumDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e2b5c4_TypeEnum>* _143142_e) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3e9b732_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a74589aa_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a745ab55:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2aeec_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1a3e9aa1c_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1a745ab55;
				};
				jule::Bool _145013_ok = _1a3ea168d_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait<_1a4079a1e_Lookup>(_self_, 3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1a745ab55;
				};
				jule::Ptr<_1a4062a07_Prim> _145413_p = _1a405c57e_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1a4066225_IsAny(_145413_p))) {
					_1a3e9aa1c_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a745ab55:;
			++it;
			goto _iter_begin_1a745ab55;
		}
		_iter_end_1a745ab55:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a3e2aeec_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1a4059e2d_TypeKind _146113_tk = _1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*(_143142_e)), 4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1a405a637_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1a4059e2d_TypeKind>)((&(_146113_tk))))))) {
			_1a3e9aa1c_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a3e2b915_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1a3eaa169_checkEnumDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7464c5d:;
		if (it != expr_end) {
			jule::Ptr<_1a3e29db9_Enum> _147221_e = *it;
			{
				_1a3ea9b2a_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7464c5d:;
			++it;
			goto _iter_begin_1a7464c5d;
		}
		_iter_end_1a7464c5d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3eaa400_checkTypeEnumDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7466413:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2b5c4_TypeEnum> _148421_e = *it;
			{
				_1a3ea9dd3_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7466413:;
			++it;
			goto _iter_begin_1a7466413;
		}
		_iter_end_1a7466413:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3eaa741_checkDeclGenerics(_1a3e97dd2_Sema* _self_, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74678ba:;
		if (it != expr_end) {
			jule::I64 _149613_i = it - expr->begin();
			jule::Ptr<_1a3dda85d_GenericDecl> *_149616_g = it;
			{
				if (_1a3dbaa80_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1a3e9aa1c_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a74678ba;
				};
				_julec_label_1a74690d6:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a74691e6:;
					if (it != expr_end) {
						jule::I64 _150517_j = it - expr->begin();
						jule::Ptr<_1a3dda85d_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1a7469d0c:;
									{
										goto _iter_end_1a74691e6;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1a7469d95:;
									{
										_1a3e9aa1c_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a74691e6;
									}
								}
								_match_end_1a7469c0d:;
							};
						}
						_iter_next_1a74691e6:;
						++it;
						_150517_j++;
						goto _iter_begin_1a74691e6;
					}
					_iter_end_1a74691e6:;
				};
			}
			_iter_next_1a74678ba:;
			++it;
			_149613_i++;
			goto _iter_begin_1a74678ba;
		}
		_iter_end_1a74678ba:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eaaa82_checkFnDeclParamsDup(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e143d1_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1a746c11c:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a746c408:;
		if (it != expr_end) {
			jule::I64 _152413_i = it - expr->begin();
			jule::Ptr<_1a3e1290c_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a746d0c9:;
					if (it != expr_end) {
						jule::Ptr<_1a3dda85d_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a3e9aa1c_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1a746c408;
							};
						}
						_iter_next_1a746d0c9:;
						++it;
						goto _iter_begin_1a746d0c9;
					}
					_iter_end_1a746d0c9:;
				};
				_julec_label_1a746e8e4:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a746d5a2:;
					if (it != expr_end) {
						jule::I64 _153617_j = it - expr->begin();
						jule::Ptr<_1a3e1290c_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1a74708b2:;
									{
										goto _iter_end_1a746d5a2;
									}
								}
								else if (_1a3dbaa80_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1a3dbaa80_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1a3dbad49_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1a3dbad49_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1a747094a:;
									{
										goto _iter_end_1a746d5a2;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1a74709b1:;
									{
										__jule_func_result=false;
										_1a3e9aa1c_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1a746c408;
									}
								}
								_match_end_1a747076e:;
							};
						}
						_iter_next_1a746d5a2:;
						++it;
						_153617_j++;
						goto _iter_begin_1a746d5a2;
					}
					_iter_end_1a746d5a2:;
				};
			}
			_iter_next_1a746c408:;
			++it;
			_152413_i++;
			goto _iter_begin_1a746c408;
		}
		_iter_end_1a746c408:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eaadc3_checkFnDeclResultDup(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e143d1_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a3e14854_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74744a9:;
		if (it != expr_end) {
			jule::I64 _156513_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> *_156516_v = it;
			{
				if ((_1a3dbaa80_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1a3dbad49_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1a74744a9;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7475a3d:;
					if (it != expr_end) {
						jule::Ptr<_1a3dda85d_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1a7479844;
							};
						}
						_iter_next_1a7475a3d:;
						++it;
						goto _iter_begin_1a7475a3d;
					}
					_iter_end_1a7475a3d:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7476e7e:;
					if (it != expr_end) {
						jule::Ptr<_1a3e1290c_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1a7479844;
							};
						}
						_iter_next_1a7476e7e:;
						++it;
						goto _iter_begin_1a7476e7e;
					}
					_iter_end_1a7476e7e:;
				};
				_julec_label_1a7477be9:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a74786ab:;
					if (it != expr_end) {
						jule::I64 _158417_j = it - expr->begin();
						jule::Ptr<_1a3db8198_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1a7479206:;
									{
										goto _iter_end_1a74786ab;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1a747928e:;
									{
										goto _julec_label_1a7479844;
									}
								}
								_match_end_1a7479107:;
							};
						}
						_iter_next_1a74786ab:;
						++it;
						_158417_j++;
						goto _iter_begin_1a74786ab;
					}
					_iter_end_1a74786ab:;
				};
				goto _iter_next_1a74744a9;
				_julec_label_1a7479844:;
				_1a3e9aa1c_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a74744a9:;
			++it;
			_156513_i++;
			goto _iter_begin_1a74744a9;
		}
		_iter_end_1a74744a9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eab214_checkFnVariadicParam(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a3e1290c_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a3eab4bc_checkFnDeclPrototype(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1a3e14d71_IsEntryPoint((*(_161645_f)).ptr())) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a3e15107_IsInit((*(_161645_f)).ptr())) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a3eaa741_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1a7481780:;
		}
		else if ((!(_1a3eaaa82_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1a74817e6:;
		}
		else if ((!(_1a3eaadc3_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1a748185c:;
		}
		else if ((!(_1a3eab214_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1a74818c3:;
		}
		_match_end_1a747ed99:;
	};
}



inline jule::Bool _1a3eab973_catchTraitInheritCycle(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e276ad_Trait> _163842_t1, jule::Ptr<_1a3e276ad_Trait> _163858_t2, _1c9754d1c_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7483e36:;
		if (it != expr_end) {
			jule::Ptr<_1a4062100_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1a7483e36;
				};
				jule::Ptr<_1a3e276ad_Trait> _164417_t3 = _1a405dd88_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1a3eb1703_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a3eab973_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1a3eb1703_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7483e36:;
			++it;
			goto _iter_begin_1a7483e36;
		}
		_iter_end_1a7483e36:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eabcb4__checkTraitDeclInherits(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e276ad_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74876a9:;
		if (it != expr_end) {
			jule::I64 _165914_i = it - expr->begin();
			jule::Ptr<_1a4062100_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1a3ea168d_checkType(_self_, &(_165921_it), jule::Trait<_1a4079a1e_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1a74876a9;
				};
				jule::Ptr<_1a3e276ad_Trait> _166417_t2 = _1a405dd88_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1a3e9aa1c_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a74876a9;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a748aadb:;
					if (it != expr_end) {
						jule::I64 _167017_j = it - expr->begin();
						jule::Ptr<_1a4062100_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1a748aadb;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1a405a637_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1a3e9aa1c_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1a748aadb;
							};
						}
						_iter_next_1a748aadb:;
						++it;
						_167017_j++;
						goto _iter_begin_1a748aadb;
					}
					_iter_end_1a748aadb:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1a3e9aa1c_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1c9754d1c_StrBuilder _168421_message = static__1c97550d6_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a3eab973_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_1c975e8a4_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _1c975e420_Str(&_168421_message);;
						_1c975e61d_Clear(&_168421_message);
						_1a3eb1703_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_1c975e420_Str(&_168421_message);
						_1a3e9aa1c_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1a74876a9:;
			++it;
			_165914_i++;
			goto _iter_begin_1a74876a9;
		}
		_iter_end_1a74876a9:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a3eac06c_checkTraitDeclInherits(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e276ad_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a749097b:;
		if (it != expr_end) {
			jule::I64 _169914_i = it - expr->begin();
			jule::Ptr<_1a4062100_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1a3e276ad_Trait> _170017_t1 = _1a405dd88_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7493b16:;
					if (it != expr_end) {
						jule::I64 _170118_j = it - expr->begin();
						jule::Ptr<_1a4062100_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1a7493b16;
							};
							jule::Ptr<_1a3e276ad_Trait> _170521_t2 = _1a405dd88_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7495376:;
								if (it != expr_end) {
									jule::Ptr<_1a3e143d1_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1a3e143d1_Fn> _170725_t2m = _1a3e2835c_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1a7495376;
										};
										jule::Ptr<_1a3e172d5_FnIns> _171121_t1f = _1a3ea554e_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1a3e172d5_FnIns> _171221_t2f = _1a3ea554e_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1a3e1824d_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1a3e9aa1c_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a3e19183_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1a3e19183_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1a7495376:;
									++it;
									goto _iter_begin_1a7495376;
								}
								_iter_end_1a7495376:;
							};
						}
						_iter_next_1a7493b16:;
						++it;
						_170118_j++;
						goto _iter_begin_1a7493b16;
					}
					_iter_end_1a7493b16:;
				};
			}
			_iter_next_1a749097b:;
			++it;
			_169914_i++;
			goto _iter_begin_1a749097b;
		}
		_iter_end_1a749097b:;
	};
}



inline void _1a3eac325_checkTraitDeclMethod(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _172345_f) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3dbad49_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1a3eab4bc_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1a3e172d5_FnIns> _173113_ins = _1a3e15b41_instance((*(_172345_f)));;
	_1a3ea69a1_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1a3e15e4e_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1a3eac5cd_checkTraitDeclMethods(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e276ad_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74a232d:;
		if (it != expr_end) {
			jule::I64 _173814_i = it - expr->begin();
			jule::Ptr<_1a3e143d1_Fn> _173821_f = *it;
			{
				_1a3eac325_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a3e289de_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1a3e9aa1c_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1a74a232d;
				};
				_julec_label_1a74a3c36:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a74a5320:;
					if (it != expr_end) {
						jule::I64 _175417_j = it - expr->begin();
						jule::Ptr<_1a3e143d1_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1a74a5d6a:;
									{
										goto _iter_end_1a74a5320;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1a74a5e03:;
									{
										_1a3e9aa1c_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1a74a5320;
									}
								}
								_match_end_1a74a5c6b:;
							};
						}
						_iter_next_1a74a5320:;
						++it;
						_175417_j++;
						goto _iter_begin_1a74a5320;
					}
					_iter_end_1a74a5320:;
				};
			}
			_iter_next_1a74a232d:;
			++it;
			_173814_i++;
			goto _iter_begin_1a74a232d;
		}
		_iter_end_1a74a232d:;
	};
}



inline void _1a3eac886_checkTraitDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e276ad_Trait>* _177339_t) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3e9b732_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3eac06c_checkTraitDeclInherits(_self_, _177339_t);
	_1a3eac5cd_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1a3eacb1c_checkTraitDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74ab26b:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _178721_t = *it;
			{
				_1a3eac886_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a74ab26b:;
			++it;
			goto _iter_begin_1a74ab26b;
		}
		_iter_end_1a74ab26b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3ead018_checkTraitImplMethods(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e276ad_Trait>* _179745_base, jule::Ptr<_1a3e50d24_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74acc2e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> *_179916_f = it;
			{
				if ((_1a3e2835c_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1a3e9aa1c_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a74acc2e:;
			++it;
			goto _iter_begin_1a74acc2e;
		}
		_iter_end_1a74acc2e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3ead414_implToStruct(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _180837_dest, jule::Ptr<_1a3e50d24_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74b044b:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _181221_f = *it;
			{
				if (((_1a3e00158_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1a3e007da_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1a3e9aa1c_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a74b044b;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a74b331c:;
						if (it != expr_end) {
							jule::Ptr<_1a3dda85d_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a74b3c57:;
									if (it != expr_end) {
										jule::Ptr<_1a3dda85d_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1a3e9aa1c_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a74b3c57:;
										++it;
										goto _iter_begin_1a74b3c57;
									}
									_iter_end_1a74b3c57:;
								};
							}
							_iter_next_1a74b331c:;
							++it;
							goto _iter_begin_1a74b331c;
						}
						_iter_end_1a74b331c:;
					};
				};
				_1a3e9ba95_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type64));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1a3e143d1_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1a74b044b:;
			++it;
			goto _iter_begin_1a74b044b;
		}
		_iter_end_1a74b044b:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74b0825:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _183721_v = *it;
			{
				;
				if (((_1a3e00158_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1a3e00499_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1a3e9aa1c_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a74b0825;
				};
				{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1a74b0825:;
			++it;
			goto _iter_begin_1a74b0825;
		}
		_iter_end_1a74b0825:;
	};
	return __jule_func_result;;
}



inline void _1a3ead6bc_implTrait(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e50d24_Impl>* _185034_decl) {
	jule::Ptr<_1a4059e2d_TypeKind> _185113_base_t = _1a3ea22c6_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e276ad_Trait> _185513_base = _1a405dd88_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _186213_destT = _1a3ea22c6_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _186613_destS = _1a405db02_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3dee4dc_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1a3dbe0d3_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1a3dbe0d3_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a3eb9431_pushImplemented(_185513_base, &(_187313_dest));
	_1a3eb971c_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1a3e9aa1c_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a3ead018_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1a6ecc683:;
		}
		else if ((!(_1a3ead414_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1a6ecc71b:;
		}
		_match_end_1a6ecabd1:;
	};
}



inline void _1a3ead975_implStruct(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e50d24_Impl>* _189335_decl) {
	jule::Ptr<_1a4059e2d_TypeKind> _189413_destT = _1a3ea22c6_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _189813_destS = _1a405db02_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3dee4dc_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1a3dbe0d3_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1a3dbe0d3_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a3ead414_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1a6ed3700:;
		}
		_match_end_1a6ed3513:;
	};
}



inline void _1a3eadc2d_implImpl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e50d24_Impl>* _191733_decl) {
	{
		
		if (_1a3e511dc_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1a6ed425b:;
			{
				_1a3ead6bc_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1a3e51473_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1a6ed4305:;
			{
				_1a3ead975_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1a6ed414b:;
	};
}



inline void _1a3eae091_checkVarDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3ebac4b_Var>* _192837_decl, jule::Trait<_1a4079a1e_Lookup> _192853_l) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a3ebb3ab_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1a3ebb125_IsInitialized((*(_192837_decl)).ptr())))) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a3ea168d_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a3ebb125_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1a3e9aa1c_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a3eae349_checkGlobalVarDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3ebac4b_Var>* _196543_decl) {
	if (_1a3e9b732_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a3e9ba95_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1a3eae091_checkVarDecl(_self_, _196543_decl, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));
}



inline jule::Bool _1a3eae5d0_checkGlobalDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ee23e0:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _198321_decl = *it;
			{
				_1a3eae349_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a6ee23e0:;
			++it;
			goto _iter_begin_1a6ee23e0;
		}
		_iter_end_1a6ee23e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3eae9cb_checkStructTraitImpl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _199345_strct, jule::Ptr<_1a3e276ad_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ee3ca4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1a3e143d1_Fn> _199617_sf = _1a3e00158_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1a3e172d5_FnIns> _199713_tfK = _1a3ea554e_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1a3e172d5_FnIns> _199921_sfK = _1a3ea554e_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1a3e1824d_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1a3dcca70_Directive> _200317_d = _1a405280a_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1a3e9aa1c_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a3e9aa1c_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1a3e19183_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a6ee3ca4:;
			++it;
			goto _iter_begin_1a6ee3ca4;
		}
		_iter_end_1a6ee3ca4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eaed1c_checkStructImpls(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ee99e1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1a3eae9cb_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1a6ee99e1:;
			++it;
			goto _iter_begin_1a6ee99e1;
		}
		_iter_end_1a6ee99e1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3eb015d_checkStructFields(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6eeae76:;
		if (it != expr_end) {
			jule::Ptr<_1a3deb5b6_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6eebb7a:;
					if (it != expr_end) {
						jule::Ptr<_1a3deb5b6_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1a6eebb7a;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1a3e9aa1c_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a6eebb7a:;
						++it;
						goto _iter_begin_1a6eebb7a;
					}
					_iter_end_1a6eebb7a:;
				};
			}
			_iter_next_1a6eeae76:;
			++it;
			goto _iter_begin_1a6eeae76;
		}
		_iter_end_1a6eeae76:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a3eb0416_checkStructDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _204240_s) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3e9b732_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1a3e9aa1c_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3e9ba95_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type65));
	{
		
		if ((!(_1a3eaa741_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1a70018e9:;
		}
		else if ((!(_1a3eb015d_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1a7001960:;
		}
		else if ((!(_1a3eaed1c_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1a70019c6:;
		}
		else if ((!(_1a3eb104e_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1a7001a3c:;
		}
		_match_end_1a70017b7:;
	};
}



inline jule::Bool _1a3eb069c_checkStructDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7003c09:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _206221_s = *it;
			{
				_1a3eb0416_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7003c09:;
			++it;
			goto _iter_begin_1a7003c09;
		}
		_iter_end_1a7003c09:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a3eb0955_checkAnonFuncDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1a3eab4bc_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1a3eb0c0d_checkFuncDecl(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _207738_f) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3e1538d_IsAnon((*(_207738_f)).ptr())) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a3e9ba95_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type64));
	_1a3eb0955_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1a3e9b732_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a3e143d1_Fn> _208917_init = _1a3e99466_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1a3e9aa1c_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3eb104e_checkFuncDeclsBy(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a700ae75:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _210021_f = *it;
			{
				_1a3eb0c0d_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a700ae75:;
			++it;
			goto _iter_begin_1a700ae75;
		}
		_iter_end_1a700ae75:;
	};
	return true;;
}



inline jule::Bool _1a3eb12d5_checkFuncDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a3eb104e_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a3eb1703_pushCycleError(_1a3e97dd2_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _1c9754d1c_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _1c980c215_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _1c975e420_Str(_211556_message);;
	_1c975db28_WriteStr(_211556_message, _1c974028b_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c975db28_WriteStr(_211556_message, _21179_refersTo);
	_1c975ddd1_WriteByte(_211556_message, '\n');
	_1c975db28_WriteStr(_211556_message, _21189_m);
}



inline void _1a3eb1da7_checkPackageDecls(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7012ac5:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _214221_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1a3ea8662_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7012ac5:;
			++it;
			goto _iter_begin_1a7012ac5;
		}
		_iter_end_1a7012ac5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7013059:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _214921_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_, _214921_f);
				if ((!(_1a3eacb1c_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7013059:;
			++it;
			goto _iter_begin_1a7013059;
		}
		_iter_end_1a7013059:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7014038:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _215621_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_, _215621_f);
				if ((!(_1a3eae5d0_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7014038:;
			++it;
			goto _iter_begin_1a7014038;
		}
		_iter_end_1a7014038:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a701506c:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _216321_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1a3eb12d5_checkFuncDecls(_self_)))) {
						_case_begin_1a7016678:;
					}
					else if ((!(_1a3eb069c_checkStructDecls(_self_)))) {
						_case_begin_1a7016711:;
					}
					else {
						_case_begin_1a70160c3:;
						{
							goto _iter_next_1a701506c;
						}
					}
					_match_end_1a70165e0:;
				};
				return;;
			}
			_iter_next_1a701506c:;
			++it;
			goto _iter_begin_1a701506c;
		}
		_iter_end_1a701506c:;
	};
}



inline void _1a3eb221a_checkDataForTypeInference(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a4028e63_Data>* _217545_d, jule::Ptr<_1a3db8198_Token>* _217556_err_token) {
	{
		
		if (_1a402934d_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1a70177cd:;
			{
				_1a3e9aa1c_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a40295d4_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1a7017877:;
			{
				_1a3e9aa1c_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1a70178dd:;
			{
				_1a3e9aa1c_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a70176ac:;
	};
}



inline void _1a3eb24c3_checkVarValue(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3ebac4b_Var>* _218738_v) {
	if (_1a3ebb3ab_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1a3eb221a_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a3ea78b4_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a4069327_Arr> _220017_arr = _1a405d34e_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1a4069327_Arr> _220321_dataArr = _1a405d34e_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a3ea352a_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1a3ea78b4_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1a40763de_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1a3e9aa1c_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1a402986a_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1a405e63b_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a3e9aa1c_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a405e3a5_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a3eb2836_evalVarValue(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3ebac4b_Var>* _224037_decl, jule::Trait<_1a4079a1e_Lookup> _224053_l) {
	if ((!(_1a3ebb125_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a402ab8a_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1a3ea277c_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1a3ea277c_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1a4048dea_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a3eb2b99_checkVar(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3ebac4b_Var>* _225733_decl, jule::Trait<_1a4079a1e_Lookup> _225749_l) {
	_1a3eb2836_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a3eb24c3_checkVarValue(_self_, _225733_decl);
}



inline void _1a3eb2d97_checkGlobals(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a702e284:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1a702e284;
				};
				if (((_1a3ebb125_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a3ebb3ab_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a3eb2b99_checkVar(_self_, &(_226721_decl), jule::Trait<_1a4079a1e_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a702e284:;
			++it;
			goto _iter_begin_1a702e284;
		}
		_iter_end_1a702e284:;
	};
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3eb3293_readyToCheckFn(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _228139_s, jule::Ptr<_1a3e143d1_Fn>* _228159_f) {
	jule::Ptr<_1a3e172d5_FnIns> _228213_ins = _1a3e15b41_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1a3e15e4e_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1a3ea69a1_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1a3eb3606_checkTypeMethod(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _229540_s, jule::Ptr<_1a3e143d1_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a3eb60a9_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a3eb3aac_checkStructInsOp(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _230841_s, jule::Ptr<_1a3e143d1_Fn>* _230861_f, jule::Fn<jule::Bool(jule::Ptr<_1a3e143d1_Fn>)> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a3eb3ea8_checkStructEnv(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _231839_s, jule::Ptr<_1a3db8198_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a406bcdb_typeChecker _231913_tc = _1a406bcdb_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1a4079a1e_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_lookup=jule::Trait<_1a4079a1e_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_referencer=jule::new_ptr<_1a406aceb_referencer>(_1a406aceb_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a703a867:;
			if (it != expr_end) {
				jule::I64 _233218_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1a3dda85d_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1a703a867:;
				++it;
				_233218_i++;
				goto _iter_begin_1a703a867;
			}
			_iter_end_1a703a867:;
		};
	};
	jule::Ptr<_1a4023aea_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a3e9a5ee_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a4023aea_SymbolTable> _234617_file = _1a3e96b28_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1a3e9a5ee_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a3e4d9c0_constraintChecker> _235317_cc = _1a3ea1292_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1a3e4e905_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7044167:;
			if (it != expr_end) {
				jule::Ptr<_1a3ebac4b_Var> _236825_v = *it;
				{
					_1a3eae091_checkVarDecl(_self_, &(_236825_v), jule::Trait<_1a4079a1e_Lookup>(_self_, 3));
					_1a3eb2b99_checkVar(_self_, &(_236825_v), jule::Trait<_1a4079a1e_Lookup>(_self_, 3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a7044167:;
				++it;
				goto _iter_begin_1a7044167;
			}
			_iter_end_1a7044167:;
		};
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases.slice(_231913_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a402ab8a_Eval> _237913_eval = _1a3ea2eb9_eval(_self_, jule::Trait<_1a4079a1e_Lookup>(_self_, 3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7047c92:;
		if (it != expr_end) {
			jule::Ptr<_1a3e016ba_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _238217_kind = _1a4074486_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1a7047c92;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1a405b7ae_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1a405b528_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a7047c92;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1a4048dea_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a7047c92;
				};
				;
				_1a3ea352a_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1a7047c92:;
			++it;
			goto _iter_begin_1a7047c92;
		}
		_iter_end_1a7047c92:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3eb43a4_precheckStructIns(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _241542_s, jule::Ptr<_1a3db8198_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a3eb3ea8_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7052890:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1a3eb3293_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a7052890:;
			++it;
			goto _iter_begin_1a7052890;
		}
		_iter_end_1a7052890:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a3eb465c_checkStructIns(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a70542a9:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _243121_f = *it;
			{
				_1a3eb3606_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1a70542a9:;
			++it;
			goto _iter_begin_1a70542a9;
		}
		_iter_end_1a70542a9:;
	};
}



inline void _1a3eb4915_checkTypeStruct(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7055c6c:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _244921_ins = *it;
			{
				_1a3eb465c_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1a7055c6c:;
			++it;
			goto _iter_begin_1a7055c6c;
		}
		_iter_end_1a7055c6c:;
	};
}



inline void _1a3eb4b13_checkStructTypes(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7056c18:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _245521_s = *it;
			{
				_1a3eb4915_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1a7056c18:;
			++it;
			goto _iter_begin_1a7056c18;
		}
		_iter_end_1a7056c18:;
	};
}



inline void _1a3eb4dbb_checkStructInsOperators(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e0226a_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7057b92:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1a70582e1:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebcae9_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1a70588c9:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebcdb3_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1a7058940:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebd17c_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1a70589a6:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebd446_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1a7058a1c:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebd710_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1a7058a94:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebdd4d_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1a7058b1b:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebe117_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1a7058b93:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebe3d1_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1a7058c1a:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebe69a_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1a7058c92:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebe964_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1a7058d19:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebec2d_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1a7058d91:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ebeee7_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1a7058e18:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec02b1_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1a7058e90:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec057a_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1a7059017:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec0844_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1a705908e:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec0e82_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1a7059116:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec124b_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1a705918d:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec1515_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1a7059215:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec1b53_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1a705928c:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec1e1c_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1a7059314:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec21d6_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1a705938b:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec24a0_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1a7059413:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec2769_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1a705948a:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec2a33_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1a7059512:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec2cec_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1a7059589:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec30b6_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1a7059611:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec3380_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1a7059688:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1a3eb3aac_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1a3ec3649_BitXorAssign);
						}
					}
					_match_end_1a70585cc:;
				};
			}
			_iter_next_1a7057b92:;
			++it;
			goto _iter_begin_1a7057b92;
		}
		_iter_end_1a7057b92:;
	};
}



inline void _1a3eb5174_precheckStructType(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3dee4dc_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a3e0226a_StructIns> _253517_ins = _1a3dee94e_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1a3deec5c_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1a3eb43a4_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1a3eb4dbb_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1a3eb5372_precheckStructTypes(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a70705b1:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _254521_s = *it;
			{
				_1a3eb5174_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1a70705b1:;
			++it;
			goto _iter_begin_1a70705b1;
		}
		_iter_end_1a70705b1:;
	};
}



inline void _1a3eb562a_checkRets(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e172d5_FnIns>* _255033_f) {
	if (_1a3e14854_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a3eb7aa0_missingRetChecker _25549_mrc = static__1a3eb7e68_new();;
	jule::Bool _25559_ok = _1a3eb908a_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a3eb598d_checkFnInsSc(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e172d5_FnIns>* _256136_f, jule::Ptr<_1a3e5d57e_scopeChecker>* _256152_sc) {
	_1a3e961cc_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1a3e964b8_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1a3e967a4_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1a3e6ec88_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1a3e61153_stopped((*(_256152_sc)).ptr())))) {
		_1a3eb562a_checkRets(_self_, _256136_f);
	};
}



inline void _1a3eb5d01_checkFnInsCaller(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns>* _257441_f, jule::Ptr<_1a3db8198_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a4023aea_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a3e9a5ee_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1a4023aea_SymbolTable> _258113_file = _1a3e96b28_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1a3e9a5ee_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _258613_sc = _1a3e53420_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1a3eb598d_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a3eb60a9_checkFnIns(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e172d5_FnIns>* _259635_f) {
	_1a3eb5d01_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1a3eb6362_checkFunc(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76114ae:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _261021_ins = *it;
			{
				_1a3eb60a9_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1a76114ae:;
			++it;
			goto _iter_begin_1a76114ae;
		}
		_iter_end_1a76114ae:;
	};
}



inline void _1a3eb661a_checkTestFn(_1a3e97dd2_Sema* _self_, jule::Ptr<_1a3e172d5_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a3e14854_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4066533_Sptr> _263313_sptr = _1a405c815_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _26409_s = _1a405db02_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1a3e7ce61_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a3e9aa1c_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3e9ad80_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a3eb68c3_precheckFunc(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Ptr<_1a3e143d1_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a3e172d5_FnIns> _265917_ins = _1a3e158aa_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1a3ea69a1_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1a4075a4d_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1a3eb661a_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1a3eb6ac1_precheckFuncs(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a761e588:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a761eec3:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _267325_m = *it;
						{
							_1a3eb68c3_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1a761eec3:;
						++it;
						goto _iter_begin_1a761eec3;
					}
					_iter_end_1a761eec3:;
				};
			}
			_iter_next_1a761e588:;
			++it;
			goto _iter_begin_1a761e588;
		}
		_iter_end_1a761e588:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7620347:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _267721_decl = *it;
			{
				_1a3eb68c3_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1a7620347:;
			++it;
			goto _iter_begin_1a7620347;
		}
		_iter_end_1a7620347:;
	};
}



inline void _1a3eb6cbe_checkFuncs(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7621799:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _268421_decl = *it;
			{
				_1a3eb6362_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1a7621799:;
			++it;
			goto _iter_begin_1a7621799;
		}
		_iter_end_1a7621799:;
	};
}



inline void _1a3eb6ebc_checkPackageTypes(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a762257a:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _269221_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _269221_f);
				_1a3eb2d97_checkGlobals(_self_);
				_1a3eb6ac1_precheckFuncs(_self_);
				_1a3eb5372_precheckStructTypes(_self_);
			}
			_iter_next_1a762257a:;
			++it;
			goto _iter_begin_1a762257a;
		}
		_iter_end_1a762257a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76240c6:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _270321_f = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_, _270321_f);
				_1a3eb6cbe_checkFuncs(_self_);
				_1a3eb4b13_checkStructTypes(_self_);
			}
			_iter_next_1a76240c6:;
			++it;
			goto _iter_begin_1a76240c6;
		}
		_iter_end_1a76240c6:;
	};
}



inline void _1a3eb71ba_setFileSemaFields(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a762569e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1a762569e:;
			++it;
			goto _iter_begin_1a762569e;
		}
		_iter_end_1a762569e:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76262e8:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1a76262e8:;
			++it;
			goto _iter_begin_1a76262e8;
		}
		_iter_end_1a76262e8:;
	};
}



inline void _1a3eb73b8_setSemaFields(jule::Ptr<_1a3e97dd2_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7626eb9:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _272021_file = *it;
			{
				_1a3e9a5ee_setCurrentFile(_self_.ptr(), _272021_file);
				_1a3eb71ba_setFileSemaFields(_self_);
			}
			_iter_next_1a7626eb9:;
			++it;
			goto _iter_begin_1a7626eb9;
		}
		_iter_end_1a7626eb9:;
	};
}



inline void _1a3eb7671_check(jule::Ptr<_1a3e97dd2_Sema> _self_, jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1a3e9e48d_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3eb73b8_setSemaFields(_self_);
	_1a3e9ee83_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e9e889_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3e9ea87_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3eb1da7_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3eb6ebc_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e97dd2_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a3eb7aa0_missingRetChecker static__1a3eb7e68_new(void) {
	return _1a3eb7aa0_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a3eb8276_checkConditional(_1a3eb7aa0_missingRetChecker* _self_, jule::Ptr<_1a3e56db3_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a762c5da:;
		if (it != expr_end) {
			jule::Ptr<_1a3e56698_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a3eb8c49_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a762c5da:;
			++it;
			goto _iter_begin_1a762c5da;
		}
		_iter_end_1a762c5da:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1a3eb8c49_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a3eb85b7_checkMatch(_1a3eb7aa0_missingRetChecker* _self_, jule::Ptr<_1a3e5a3b1_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a762e675:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5add9_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I64 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1a3eb8c49_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a76310d3:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1a763117c:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a76311e3;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a76311e3:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a762e675;
						}
					}
					_match_end_1a7630ba4:;
				};
			}
			_iter_next_1a762e675:;
			++it;
			goto _iter_begin_1a762e675;
		}
		_iter_end_1a762e675:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1a3eb8c49_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a3eb8908_checkInfIter(_1a3eb7aa0_missingRetChecker* _self_, jule::Ptr<_1a3e571b0_InfIter> _281231_it) {
	jule::I64 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1a3eb8c49_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a7634ea5:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
						return false;;
					};
				}
				_iter_next_1a7634ea5:;
				++it;
				goto _iter_begin_1a7634ea5;
			}
			_iter_end_1a7634ea5:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
	};
	return true;;
}



inline jule::Bool _1a3eb8c49_checkScope(_1a3eb7aa0_missingRetChecker* _self_, jule::Ptr<_1a3e5627a_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7636902:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a7637271:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a7637040:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1a3e58821_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1a76372e8:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1a763735e:;
						{
							if (_1a3eb8908_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1a3e571b0_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1a76373d6:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a763745d:;
						{
							if (_1a3eb8c49_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1a3e5627a_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1a76374d5:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1a4028e63_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1a763b2a8:;
									{
										return true;;
									}
								}
								_match_end_1a763b242:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a763755c:;
						{
							if (_1a3eb8276_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1a3e56db3_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a76375d4:;
						{
							if (_1a3eb85b7_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1a3e5a3b1_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1a7637161:;
				};
			}
			_iter_next_1a7636902:;
			++it;
			goto _iter_begin_1a7636902;
		}
		_iter_end_1a7636902:;
	};
	return false;;
}



inline jule::Bool _1a3eb908a_check(_1a3eb7aa0_missingRetChecker* _self_, jule::Ptr<_1a3e5627a_Scope> _287724_s) {
	return _1a3eb8c49_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3eb7aa0_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3ebb125_IsInitialized(_1a3ebac4b_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a3ebb3ab_IsTypeInferred(_1a3ebac4b_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a3ebb642_untypedConstant(_1a3ebac4b_Var* _self_) {
	return (_1a3ebb3ab_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ebac4b_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a3ebc1e2_Dispose(jule::Ptr<_1a3e143d1_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1a3e14854_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1a3e132ae_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a3ebc4ab_Str(jule::Ptr<_1a3e143d1_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1a3e14854_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1a3e132ae_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1a4062a07_Prim> _399_prim = _1a405c57e_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1a4065e8e_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1a3ebc830_logical(jule::Ptr<_1a3e143d1_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1a3e14854_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1a3e132ae_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1a4062a07_Prim> _649_prim = _1a405c57e_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1a4065c08_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1a405db02_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a3ebcae9_Eq(jule::Ptr<_1a3e143d1_Fn> _7218_f) {
	return static__1a3ebc830_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a3ebcdb3_Gt(jule::Ptr<_1a3e143d1_Fn> _7718_f) {
	return static__1a3ebc830_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a3ebd17c_GtEq(jule::Ptr<_1a3e143d1_Fn> _8220_f) {
	return static__1a3ebc830_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a3ebd446_Lt(jule::Ptr<_1a3e143d1_Fn> _8718_f) {
	return static__1a3ebc830_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a3ebd710_LtEq(jule::Ptr<_1a3e143d1_Fn> _9220_f) {
	return static__1a3ebc830_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a3ebda84_result(jule::Ptr<_1a3e143d1_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1a3e14854_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1a3e132ae_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1a405db02_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a3ebdd4d_Shl(jule::Ptr<_1a3e143d1_Fn> _11819_f) {
	return static__1a3ebda84_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a3ebe117_Shr(jule::Ptr<_1a3e143d1_Fn> _12319_f) {
	return static__1a3ebda84_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a3ebe3d1_Add(jule::Ptr<_1a3e143d1_Fn> _12819_f) {
	return static__1a3ebda84_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a3ebe69a_Sub(jule::Ptr<_1a3e143d1_Fn> _13319_f) {
	return static__1a3ebda84_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a3ebe964_Div(jule::Ptr<_1a3e143d1_Fn> _13819_f) {
	return static__1a3ebda84_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a3ebec2d_Mul(jule::Ptr<_1a3e143d1_Fn> _14319_f) {
	return static__1a3ebda84_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a3ebeee7_Mod(jule::Ptr<_1a3e143d1_Fn> _14819_f) {
	return static__1a3ebda84_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a3ec02b1_BitAnd(jule::Ptr<_1a3e143d1_Fn> _15322_f) {
	return static__1a3ebda84_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a3ec057a_BitOr(jule::Ptr<_1a3e143d1_Fn> _15821_f) {
	return static__1a3ebda84_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a3ec0844_BitXor(jule::Ptr<_1a3e143d1_Fn> _16322_f) {
	return static__1a3ebda84_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a3ec0bb8_unary(jule::Ptr<_1a3e143d1_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1a3e14854_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1a3e132ae_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1a405db02_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a3ec0e82_Neg(jule::Ptr<_1a3e143d1_Fn> _18719_f) {
	return static__1a3ec0bb8_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a3ec124b_Pos(jule::Ptr<_1a3e143d1_Fn> _19219_f) {
	return static__1a3ec0bb8_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a3ec1515_BitNot(jule::Ptr<_1a3e143d1_Fn> _19722_f) {
	return static__1a3ec0bb8_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a3ec1889_assign(jule::Ptr<_1a3e143d1_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1a3e14854_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1a3e132ae_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a3ec1b53_AddAssign(jule::Ptr<_1a3e143d1_Fn> _22125_f) {
	return static__1a3ec1889_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a3ec1e1c_SubAssign(jule::Ptr<_1a3e143d1_Fn> _22625_f) {
	return static__1a3ec1889_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a3ec21d6_DivAssign(jule::Ptr<_1a3e143d1_Fn> _23125_f) {
	return static__1a3ec1889_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a3ec24a0_MulAssign(jule::Ptr<_1a3e143d1_Fn> _23625_f) {
	return static__1a3ec1889_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a3ec2769_ModAssign(jule::Ptr<_1a3e143d1_Fn> _24125_f) {
	return static__1a3ec1889_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a3ec2a33_ShlAssign(jule::Ptr<_1a3e143d1_Fn> _24625_f) {
	return static__1a3ec1889_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a3ec2cec_ShrAssign(jule::Ptr<_1a3e143d1_Fn> _25125_f) {
	return static__1a3ec1889_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a3ec30b6_BitOrAssign(jule::Ptr<_1a3e143d1_Fn> _25627_f) {
	return static__1a3ec1889_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a3ec3380_BitAndAssign(jule::Ptr<_1a3e143d1_Fn> _26128_f) {
	return static__1a3ec1889_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a3ec3649_BitXorAssign(jule::Ptr<_1a3e143d1_Fn> _26628_f) {
	return static__1a3ec1889_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ebbac6_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a40113bd_pushErr(_1a4010dc3_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1a4011654_checkTrait(_1a4010dc3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a405b00b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e276ad_Trait> _12613_trt = _1a405dd88_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1a405c815_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a767cb02:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1a405c815_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a405db02_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a767cb9b;
			}
		}
		else if ((_1a405db02_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a767cb9b:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _13713_s = _1a405db02_Struct((*(_self_))._field_src);;
				if ((!(_1a3e00b2b_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1a400e971_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1a40113bd_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a405dd88_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a767cc23:;
			{
				jule::Ptr<_1a3e276ad_Trait> _14717_base = _1a405dd88_Trait((*(_self_))._field_src);;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a7682992:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7682dc1:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7683784:;
								if (it != expr_end) {
									jule::Ptr<_1a3dee4dc_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1a7682dc1;
										};
									}
									_iter_next_1a7683784:;
									++it;
									goto _iter_begin_1a7683784;
								}
								_iter_end_1a7683784:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a7682dc1:;
						++it;
						goto _iter_begin_1a7682dc1;
					}
					_iter_end_1a7682dc1:;
				};
				{
					auto expr = &((*_12613_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7683bd5:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1a3e143d1_Fn> _16121_m2 = _1a3e2835c_FindMethod(_14717_base, (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a3e172d5_FnIns> _16517_m1k = _1a3ea554e_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1a3e172d5_FnIns> _16617_m2k = _1a3ea554e_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1a3e1824d_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a7683bd5:;
						++it;
						goto _iter_begin_1a7683bd5;
					}
					_iter_end_1a7683bd5:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a767ca69:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a767ca03:;
	};
}



inline jule::Bool _1a40118da_checkPtr(_1a4010dc3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a405b00b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4069cea_Ptr> _18113_dest = _1a405ca9b_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a406a834_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a405a637_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a4011b71_checkPrim(_1a4010dc3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a4062a07_Prim> _19013_prim = _1a405c57e_Prim((*(_self_))._field_dest);;
		if (((_19013_prim != nullptr) && _1a4066225_IsAny(_19013_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a405a637_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a401206c_typeEnum(_1a4010dc3_typeCompatibilityChecker* _self_, jule::Ptr<_1a3e2b5c4_TypeEnum>* _19828_e, jule::Ptr<_1a4059e2d_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a768aa33:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2aeec_TypeEnumItem> _19921_item = *it;
			{
				if (_1a405a637_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a3e2b5c4_TypeEnum> _20317_ke = _1a405d0b8_TypeEnum((*(*_19921_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1a768aa33;
				};
				if (_1a401206c_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a768aa33:;
			++it;
			goto _iter_begin_1a768aa33;
		}
		_iter_end_1a768aa33:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4012303_checkTypeEnum(_1a4010dc3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a405a637_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e2b5c4_TypeEnum> _21813_e = _1a405d0b8_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a401206c_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a4012589_check(_1a4010dc3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a405ca9b_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a40118da_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a405bccb_NilCompatible((*(_self_))._field_dest)) {
		if (_1a405b00b_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a405c57e_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a7691275:;
			{
				__jule_func_result = _1a4011b71_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a769130d:;
			{
				__jule_func_result = _1a4012303_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a405dd88_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a7690c25:;
			{
				__jule_func_result = _1a4011654_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a769084b:;
			{
				__jule_func_result = _1a405a637_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a769072a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a4010dc3_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a4013106_pushErr(_1a4012b72_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1a401338c_checkValidity(_1a4012b72_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1a405d86b_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7693e04:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _26213_f = _1a405d86b_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1a3e1876a_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1a7695752:;
						{
							_1a4013106_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1a76957eb:;
						{
							_1a4013106_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1a3e14ada_IsMethod((*_26213_f.alloc)._field_Decl))) {
						_case_begin_1a7695862:;
						{
							_1a4013106_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26213_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1a76958c8:;
						{
							_1a4013106_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a3e9ad80_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1a7695675:;
				};
			}
		}
		else if ((_1a405e3a5_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7693e9d:;
			{
				_1a4013106_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1a7693d7c:;
	};
	return _25913_valid;;
}



inline jule::Bool _1a4013623_checkConst(_1a4012b72_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a405c57e_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2919_kind = (*(_1a405c57e_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b289ad26_IsFloat(_2919_kind)) {
			_case_begin_1a769b857:;
			{
				if ((!(_1a400ed28_floatAssignable(&(_2919_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else if (_1b289a9d5_IsInt(_2919_kind)) {
			_case_begin_1a769b8e0:;
			{
				if ((!(_1a40108d9_intAssignable(_2919_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2919_kind;
			}
		}
		else {
			_case_begin_1a769b7e1:;
			{
				return false;;
			}
		}
		_match_end_1a769b6c0:;
	};
	return true;;
}



inline jule::Bool _1a40138a9_checkCompatibility(_1a4012b72_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a769dae0:;
			{
				return false;;
			}
		}
		else if ((!(_1a401338c_checkValidity(_self_)))) {
			_case_begin_1a769db89:;
			{
				return false;;
			}
		}
		else if (_1a4013623_checkConst(_self_)) {
			_case_begin_1a769dc00:;
			{
				return true;;
			}
		}
		else if ((_1a405cd32_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a769dc66:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _32017_dkind = (*(_self_))._field_dest;;
				if ((_1a405cd32_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32017_dkind=(*((*(_1a405cd32_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a4062a07_Prim> _32413_prim = _1a405c57e_Prim((*(_self_))._field_dest);;
				if (((_32413_prim == nullptr) || _1a4066225_IsAny(_32413_prim.ptr()))) {
					goto _match_end_1a769cda8;
				};
				jule::Ptr<_1a4059e2d_TypeKind> _32917_dest = (*(*(_1a405cd32_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1a3ea3e87_checkTypeCompatibility((*(_self_))._field_s, &(_32917_dest), &(_32017_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1a769cda8:;
	};
	return _1a3ea485b_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a4013b40_check(_1a4012b72_assignTypeChecker* _self_) {
	jule::Bool _3369_ok = _1a40138a9_checkCompatibility(_self_);;
	if ((_3369_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a4077434_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3369_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4012b72_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a76b8027_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a76b9732:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1a76ba557:;
						{
							_35921_elem=(*(_1a405d34e_Arr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a76ba49c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dd091e_ArrTypeDecl>()))._field_Elem;
				return _1a4015c52_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1a76b96bb:;
	};
	return false;;
}

inline jule::Bool _1a76b77c9_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a76bd1b4:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1a76bdd41:;
						{
							_35921_elem=(*(_1a405d5d5_Slc((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a76bde2e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dcea83_SlcTypeDecl>()))._field_Elem;
				return _1a4015c52_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1a76bd14d:;
	};
	return false;;
}

inline jule::Bool _1a76b9a62_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a76c1b46:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1a76c29e3:;
						{
							_35921_elem=(*(_1a405ca9b_Ptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a76c28b1:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dd017c_PtrTypeDecl>()))._field_Elem;
				return _1a4015c52_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1a76c1ad0:;
	};
	return false;;
}

inline jule::Bool _1a76c10da_annotateConstraintElem(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _35649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a76c52a9:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _35921_elem = nullptr;;
				{
					
{
						_case_begin_1a76c61bc:;
						{
							_35921_elem=(*(_1a405c815_Sptr((*(_35649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a76c6024:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dce6ed_SptrTypeDecl>()))._field_Elem;
				return _1a4015c52_annotateConstraint(_self_, &(_35921_elem));;
			}
		}
		_match_end_1a76c5243:;
	};
	return false;;
}



inline jule::Bool _1a4014e3d_annotateConstraintMap(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _37645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a76a6026:;
			{
				jule::Ptr<_1a406869a_Map> _37917_m = _1a405e11e_Map((*(_37645_k)).ptr());;
				jule::Ptr<_1a3dd116c_MapTypeDecl> _38017_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dd116c_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38017_m2))._field_Key;
				if ((!(_1a4015c52_annotateConstraint(_self_, &((*(_37917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38017_m2.alloc)._field_Val;
				__jule_func_result = _1a4015c52_annotateConstraint(_self_, &((*_37917_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a76a5eb0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a401527e_annotateConstraintTup(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _39145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a76a8e19:;
			{
				jule::Ptr<_1a3dced80_TupleTypeDecl> _39417_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3dced80_TupleTypeDecl>();;
				jule::Ptr<_1a4067aea_Tuple> _39517_tup2 = _1a405e3a5_Tup((*(_39145_k)).ptr());;
				{
					auto expr = &((*(_39517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a76aa712:;
					if (it != expr_end) {
						jule::Ptr<_1a4059e2d_TypeKind> _39625_t2 = *it;
						{
							{
								auto expr = &((*(_39417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a76ab15d:;
								if (it != expr_end) {
									jule::Ptr<_1a3dcd653_TypeDecl> _39729_t = *it;
									{
										(*(_self_))._field_c=_39729_t;
										if (_1a4015c52_annotateConstraint(_self_, &(_39625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a76ab15d:;
									++it;
									goto _iter_begin_1a76ab15d;
								}
								_iter_end_1a76ab15d:;
							};
						}
						_iter_next_1a76aa712:;
						++it;
						goto _iter_begin_1a76aa712;
					}
					_iter_end_1a76aa712:;
				};
			}
		}
		_match_end_1a76a8da3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a40155c0_annotateConstraintFn(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _40844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a76ab669:;
			{
				jule::Ptr<_1a3de0313_FnDecl> _41117_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3de0313_FnDecl>();;
				jule::Ptr<_1a3e172d5_FnIns> _41217_f = _1a405d86b_Fn((*(_40844_k)).ptr());;
				{
					auto expr = &((*(_41217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a76ad616:;
					if (it != expr_end) {
						jule::I64 _41318_i = it - expr->begin();
						jule::Ptr<_1a3e16339_ParamIns> _41325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41117_pf))._field_Params[_41318_i]))._field_Kind;
							if (_1a4015c52_annotateConstraint(_self_, &((*(_41325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a76ad616:;
						++it;
						_41318_i++;
						goto _iter_begin_1a76ad616;
					}
					_iter_end_1a76ad616:;
				};
				if (((*_41117_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41117_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1a4015c52_annotateConstraint(_self_, &((*_41217_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a76ab603:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a4015911_annotateConstraintIdent(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _42947_k) {
	jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _43013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a3dcdc5d_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1a3e0226a_StructIns> _43113_s = _1a405db02_Struct((*(_42947_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76b2087:;
		if (it != expr_end) {
			jule::I64 _43213_i = it - expr->begin();
			jule::Ptr<_1a3dda85d_GenericDecl> _43216_g = *it;
			{
				if (((*(_43216_g))._field_Ident == (*(_43013_ident))._field_Ident)) {
					jule::Ptr<_1a4058547_InsGeneric> _43421_fg = (*((*(_self_))._field_f))._field_Generics[_43213_i];;
					if ((_43421_fg != nullptr)) {
						return false;;
					};
					_1a40160b5_pushGeneric(_self_, _42947_k, _43213_i);
					return true;;
				};
				if ((_43113_s == nullptr)) {
					goto _iter_next_1a76b2087;
				};
				jule::Ptr<_1a3dcd653_TypeDecl> _44417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43013_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a76b2a16:;
					if (it != expr_end) {
						jule::Ptr<_1a3dcd653_TypeDecl> _44525_ig = *it;
						{
							(*(_self_))._field_c=_44525_ig;
							{
								auto expr = &((*(_43113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a76b56b7:;
								if (it != expr_end) {
									jule::Ptr<_1a4058547_InsGeneric> _44729_sg = *it;
									{
										if (_1a4015c52_annotateConstraint(_self_, &((*(_44729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a76b56b7:;
									++it;
									goto _iter_begin_1a76b56b7;
								}
								_iter_end_1a76b56b7:;
							};
						}
						_iter_next_1a76b2a16:;
						++it;
						goto _iter_begin_1a76b2a16;
					}
					_iter_end_1a76b2a16:;
				};
				(*(_self_))._field_c=_44417_c;
			}
			_iter_next_1a76b2087:;
			++it;
			_43213_i++;
			goto _iter_begin_1a76b2087;
		}
		_iter_end_1a76b2087:;
	};
	return false;;
}



inline jule::Bool _1a4015c52_annotateConstraint(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _45842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a76b5101:;
			{
				return _1a4015911_annotateConstraintIdent(_self_, _45842_k);;
			}
		}
		_match_end_1a76b508a:;
	};
	{
		
		if ((_1a405d34e_Arr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b682d:;
			{
				return _1a76b8027_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1a405d5d5_Slc((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b6894:;
			{
				return _1a76b77c9_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1a405ca9b_Ptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b690a:;
			{
				return _1a76b9a62_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1a405c815_Sptr((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b6971:;
			{
				return _1a76c10da_annotateConstraintElem(_self_, _45842_k);;
			}
		}
		else if ((_1a405e11e_Map((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b69d7:;
			{
				return _1a4014e3d_annotateConstraintMap(_self_, _45842_k);;
			}
		}
		else if ((_1a405d86b_Fn((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b70c0:;
			{
				return _1a40155c0_annotateConstraintFn(_self_, _45842_k);;
			}
		}
		else if ((_1a405e3a5_Tup((*(_45842_k)).ptr()) != nullptr)) {
			_case_begin_1a76b7136:;
			{
				return _1a401527e_annotateConstraintTup(_self_, _45842_k);;
			}
		}
		else {
			_case_begin_1a76b6b5d:;
			{
				return false;;
			}
		}
		_match_end_1a76b6b08:;
	};
}



inline void _1a40160b5_pushGeneric(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _48335_k, jule::I64 _48349_i) {
	(*((*(_self_))._field_f))._field_Generics[_48349_i]=jule::new_ptr<_1a4058547_InsGeneric>(_1a4058547_InsGeneric{._field_Kind=(*(_48335_k)), });
	jule::Ptr<_1a3dda85d_GenericDecl> _48513_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76c92e1:;
		if (it != expr_end) {
			jule::Ptr<_1a4059e2d_TypeKind> _48621_ignored = *it;
			{
				if (((*(_48513_gd))._field_Ident == _1a405a2e6_Str(_48621_ignored.ptr()))) {
					(*_48621_ignored.alloc)._field_Kind=(*((*(_48335_k))))._field_Kind;
				};
			}
			_iter_next_1a76c92e1:;
			++it;
			goto _iter_begin_1a76c92e1;
		}
		_iter_end_1a76c92e1:;
	};
	if ((((*_48513_gd.alloc)._field_Constraint == nullptr) || ((*((*_48513_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48513_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a4015c52_annotateConstraint(_self_, _48335_k);
}



inline jule::Bool _1a4016406_annotatePrim(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _49843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a401842a_annotateAny(_self_, _49843_k);
	return __jule_func_result;;
}



inline jule::Bool _1a4016747_annotateArr(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _50242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4069327_Arr> _50313_parr = _1a405d34e_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4069327_Arr> _50713_arr = _1a405d34e_Arr((*(_50242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50313_parr))._field_Elem));
	__jule_func_result = _1a401876b_annotateKind(_self_, &((*(_50713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4016a88_annotateSlc(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _51242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4067006_Slc> _51313_pslc = _1a405d5d5_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4067006_Slc> _51713_slc = _1a405d5d5_Slc((*(_51242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51313_pslc))._field_Elem));
	__jule_func_result = _1a401876b_annotateKind(_self_, &((*(_51713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4016e84_checkMapKey(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _52241_k, jule::Ptr<_1a4059e2d_TypeKind>* _52261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4059e2d_TypeKind>* _52313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52241_k;
	__jule_func_result=_1a401876b_annotateKind(_self_, _52261_ck);
	(*(_self_))._field_k=_52313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a40172c5_annotateMap(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _53042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a406869a_Map> _53113_pmap = _1a405e11e_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a406869a_Map> _53513_m = _1a405e11e_Map((*(_53042_k)).ptr());;
	__jule_func_result = (_1a4016e84_checkMapKey(_self_, (&((*(_53113_pmap))._field_Key)), &((*(_53513_m))._field_Key)) && _1a4016e84_checkMapKey(_self_, (&((*(_53113_pmap))._field_Val)), &((*_53513_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a4017616_annotateFn(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _54041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3e172d5_FnIns> _54113_pf = _1a405d86b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _54513_f = _1a405d86b_Fn((*(_54041_k)).ptr());;
	{
		
		if (((*(_54113_pf))._field_Params.len() != (*(_54513_f))._field_Params.len())) {
			_case_begin_1a76d696e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a3e14854_IsVoid((*(_54113_pf))._field_Decl.ptr()) != _1a3e14854_IsVoid((*(_54513_f))._field_Decl))) {
			_case_begin_1a76d6a18:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a76d6908:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a4059e2d_TypeKind>* _55413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76d8894:;
		if (it != expr_end) {
			jule::I64 _55514_i = it - expr->begin();
			jule::Ptr<_1a3e16339_ParamIns> _55521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54113_pf))._field_Params[_55514_i]))._field_Kind));
				__jule_func_result=(_1a401876b_annotateKind(_self_, &((*(_55521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a76d8894:;
			++it;
			_55514_i++;
			goto _iter_begin_1a76d8894;
		}
		_iter_end_1a76d8894:;
	};
	if ((!(_1a3e14854_IsVoid((*(_54113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54113_pf))._field_Result));
		__jule_func_result=(_1a401876b_annotateKind(_self_, &((*_54513_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a4017957_annotatePtr(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _56942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4069cea_Ptr> _57013_pptr = _1a405ca9b_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4069cea_Ptr> _57413_ptr = _1a405ca9b_Ptr((*(_56942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57013_pptr))._field_Elem));
	__jule_func_result = _1a401876b_annotateKind(_self_, &((*(_57413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a4017c98_annotateSptr(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _57943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4066533_Sptr> _58013_ssptr = _1a405c815_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4066533_Sptr> _58413_sptr = _1a405c815_Sptr((*(_57943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58013_ssptr))._field_Elem));
	__jule_func_result = _1a401876b_annotateKind(_self_, &((*(_58413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a40180d9_annotateStruct(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _58945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3e0226a_StructIns> _59013_s = _1a405db02_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _59413_s2 = _1a405db02_Struct((*(_58945_k)).ptr());;
	if (((*(_59013_s))._field_Generics.len() != (*(_59413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76e27e3:;
		if (it != expr_end) {
			jule::I64 _59814_i = it - expr->begin();
			jule::Ptr<_1a4058547_InsGeneric> _59821_g = *it;
			{
				jule::Ptr<_1a4058547_InsGeneric> _59917_g2 = (*_59413_s2.alloc)._field_Generics[_59814_i];;
				if (_1a405a637_Equal((*(_59821_g))._field_Kind, (*(_59917_g2))._field_Kind)) {
					goto _iter_next_1a76e27e3;
				};
				(*(_self_))._field_k=(&((*_59821_g.alloc)._field_Kind));
				if ((!(_1a401876b_annotateKind(_self_, &((*_59917_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a76e27e3:;
			++it;
			_59814_i++;
			goto _iter_begin_1a76e27e3;
		}
		_iter_end_1a76e27e3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a401842a_annotateAny(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _61142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6129_kind = _1a405a2e6_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76e5d8a:;
		if (it != expr_end) {
			jule::I64 _61313_i = it - expr->begin();
			jule::Ptr<_1a3dda85d_GenericDecl> _61316_g = *it;
			{
				if ((_6129_kind != (*(_61316_g))._field_Ident)) {
					goto _iter_next_1a76e5d8a;
				};
				jule::Ptr<_1a4058547_InsGeneric> _61713_t = (*((*(_self_))._field_f))._field_Generics[_61313_i];;
				{
					
					if ((_61713_t == nullptr) || ((*(_61713_t))._field_Kind == nullptr)) {
						_case_begin_1a76e7683:;
						{
							_1a40160b5_pushGeneric(_self_, _61142_k, _61313_i);
						}
					}
					else if ((!(_1a405a637_Equal((*(_61713_t))._field_Kind, (*(_61142_k)))))) {
						_case_begin_1a76e772c:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a76e7551:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a76e5d8a:;
			++it;
			_61313_i++;
			goto _iter_begin_1a76e5d8a;
		}
		_iter_end_1a76e5d8a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a401876b_annotateKind(_1a4014547_dynamicTypeAnnotation* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _63243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a401842a_annotateAny(_self_, _63243_k)) {
			_case_begin_1a76e9c7e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a405c57e_Prim((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76e9ce5:;
			{
				__jule_func_result = _1a4016406_annotatePrim(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405d34e_Arr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76e9d5b:;
			{
				__jule_func_result = _1a4016747_annotateArr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405d5d5_Slc((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76e9dd3:;
			{
				__jule_func_result = _1a4016a88_annotateSlc(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405e11e_Map((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76ea07b:;
			{
				__jule_func_result = _1a40172c5_annotateMap(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405d86b_Fn((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76ea0e2:;
			{
				__jule_func_result = _1a4017616_annotateFn(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405ca9b_Ptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76ea158:;
			{
				__jule_func_result = _1a4017957_annotatePtr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405c815_Sptr((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76ea1d0:;
			{
				__jule_func_result = _1a4017c98_annotateSptr(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a405db02_Struct((*(_63243_k)).ptr()) != nullptr)) {
			_case_begin_1a76ea257:;
			{
				__jule_func_result = _1a40180d9_annotateStruct(_self_, _63243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a76e9b5d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a76e96c9:;
	};
}



inline jule::Bool _1a4018a02_annotate(_1a4014547_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a401876b_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4014547_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a4019915_pushErrToken(_1a40193a4_fnCallArgChecker* _self_, jule::Ptr<_1a3db8198_Token> _67731_token, jule::Str _67746_fmt, jule::Slice<jule::Any> _67759_args) {
	_1a3e9aa1c_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67731_token, _67746_fmt, _67759_args);
}



inline void _1a4019c78_pushErr(_1a40193a4_fnCallArgChecker* _self_, jule::Str _68126_fmt, jule::Slice<jule::Any> _68139_args) {
	_1a4019915_pushErrToken(_self_, (*(_self_))._field_errorToken, _68126_fmt, _68139_args);
}



inline jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _1a401a00e_getParams(_1a40193a4_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1a3e13028_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a401a350_checkCounts(_1a40193a4_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>* _69431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69513_n = (*(_69431_params)).len();;
	if (((_69513_n > 0LL) && _1a3e13028_IsSelf((*((*(_69431_params))[0LL]))._field_Decl.ptr()))) {
		(_69513_n)--;
	};
	jule::I64 _70013_diff = (_69513_n - (*(_self_))._field_args.len());;
	jule::Str _70113_log = jule::Str();;
	{
		
		if ((_70013_diff == 0LL)) {
			_case_begin_1a7706ae3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69513_n > 0LL) && (*(*((*(_69431_params))[(_69513_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1a7706a05:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70013_diff < 0LL) || (_70013_diff > (*(_69431_params)).len()))) {
			_case_begin_1a77066c5:;
			{
				_70113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1a770665e:;
			{
				_70113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1a7706609:;
	};
	_1c9754d1c_StrBuilder _71213_err = static__1c97550d6_New(32LL);;
	_1c975db28_WriteStr(&_71213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1c975db28_WriteStr(&_71213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _69431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77093dc:;
		if (it != expr_end) {
			jule::I64 _71513_i = it - expr->begin();
			jule::Ptr<_1a3e16339_ParamIns> *_71516_p = it;
			{
				_1c975db28_WriteStr(&_71213_err, _1a405a2e6_Str((*((*(_71516_p))))._field_Kind.ptr()));
				if ((((*(_69431_params)).len() - _71513_i) > 1LL)) {
					_1c975db28_WriteStr(&_71213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a77093dc:;
			++it;
			_71513_i++;
			goto _iter_begin_1a77093dc;
		}
		_iter_end_1a77093dc:;
	};
	_1c975ddd1_WriteByte(&_71213_err, ')');
	_1a4019c78_pushErr(_self_, _70113_log, jule::Slice<jule::Any>::make({jule::Any(_1c975e420_Str(&_71213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a401a806_checkArg(_1a40193a4_fnCallArgChecker* _self_, jule::Ptr<_1a3e16339_ParamIns>* _72632_p, jule::Ptr<_1a4028e63_Data>* _72651_arg, jule::Ptr<_1a3db8198_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a3e195b2_parameterUsesGenerics(_72632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72632_p))))._field_Decl))._field_Variadic)) && _1a4022be8_isGoodValueToInfer(_72651_arg));
		if (__jule_func_result) {
			_1a4014547_dynamicTypeAnnotation _73121_dta = _1a4014547_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a4018a02_annotate(&_73121_dta);
		};
		if ((!(__jule_func_result))) {
			_1a4019915_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a3ea78b4_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72632_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72632_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, _72668_errorToken)) {
		__jule_func_result = _1a3ea352a_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72632_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72632_p))))._field_Kind), _72651_arg, (*(_72668_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a401ac02_push(_1a40193a4_fnCallArgChecker* _self_, jule::Ptr<_1a3e16339_ParamIns>* _75528_p, jule::Ptr<_1a3dd2987_Expr> _75546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a4059e2d_TypeKind> _75613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7579_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75528_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75528_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a4028e63_Data> _76513_d = _1a4048dea_evalExpr((*(_self_))._field_e, _75546_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75613_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7579_oldImmut;
	if ((_76513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a401a806_checkArg(_self_, _75528_p, &(_76513_d), &((*(_75546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a401b0ed_pushVariadic(_1a40193a4_fnCallArgChecker* _self_, jule::Ptr<_1a3e16339_ParamIns>* _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78113_variadiced = false;;
	jule::Bool _7829_more = ((_77954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a3e08a24_SliceExprModel> _78313_model = jule::new_ptr<_1a3e08a24_SliceExprModel>(_1a3e08a24_SliceExprModel{._field_ElemKind=(*((*(_77936_p))))._field_Kind, });;
	jule::Ptr<_1a4059e2d_TypeKind> _78713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a4059e2d_TypeKind> _79413_oldKind = (*((*(_77936_p))))._field_Kind;;
	(*((*(_77936_p))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>((*(*((*(_77936_p))))._field_Kind.alloc));
	(*(*((*(_77936_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_77936_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_77936_p))))._field_Kind=_79413_oldKind;
	});;
	for (; (_77954_i < (*(_self_))._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1a3dd2987_Expr> _80317_arg = (*(_self_))._field_args[_77954_i];;
			{
				auto &_match_expr{ (*(_80317_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1a771b4dc:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4067006_Slc>(_1a4067006_Slc{._field_Elem=(*((*(_77936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1a771b7d9:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_77936_p))))._field_Kind;
					}
				}
				_match_end_1a771b784:;
			};
			jule::Ptr<_1a4028e63_Data> _81617_d = _1a4048768_eval((*(_self_))._field_e, _80317_arg);;
			if ((_81617_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a771a992;
			};
			if ((*((*(_81617_d))._field_Kind))._field_Variadic) {
				_78113_variadiced=true;
				(*(*((*(_77936_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a401a806_checkArg(_self_, _77936_p, &(_81617_d), &((*(_80317_arg))._field_Token)));
				(*(*((*(_77936_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1a771de29:;
						{
							_78313_model=(*(_81617_d))._field_Model.unsafe_cast_ptr<_1a3e08a24_SliceExprModel>();
							(*(_78313_model))._field_ElemKind=(*((*(_77936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1a7720557:;
						{
							_78313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81617_d))._field_Model); };
						}
					}
					_match_end_1a7720502:;
				};
				(_77954_i)++;
				goto _iter_end_1a771a992;
			};
			__jule_func_result=(__jule_func_result && _1a401a806_checkArg(_self_, _77936_p, &(_81617_d), &((*_80317_arg.alloc)._field_Token)));
			(*(_78313_model))._field_Elems=jule::append((*_78313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81617_d))._field_Model}));
		}
	_iter_next_1a771a992:;
	}
	_iter_end_1a771a992:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78713_old;
	if ((_78113_variadiced && _7829_more)) {
		_1a4019915_pushErrToken(_self_, (*((*(_self_))._field_args[_77954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a401b43e_checkArgs(_1a40193a4_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>* _86033_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8619_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86513_i = 0LL;;
	if ((((*(_86033_params)).len() > 0LL) && _1a3e13028_IsSelf((*((*(_86033_params))[0LL]))._field_Decl.ptr()))) {
		(_86513_i)++;
	};
	_julec_label_1a77258c0:;
	while ((_86513_i < (*(_86033_params)).len())) {
		{
			jule::Ptr<_1a3e16339_ParamIns> _87217_p = (*(_86033_params))[_86513_i];;
			{
				
				if ((*(*(_87217_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1a7727509:;
					{
						__jule_func_result=(_1a401b0ed_pushVariadic(_self_, &(_87217_p), _86513_i) && __jule_func_result);
						goto _iter_end_1a7725c44;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86513_i)) {
					_case_begin_1a7727608:;
					{
						__jule_func_result=false;
						goto _iter_end_1a7725c44;
					}
				}
				else {
					_case_begin_1a7727163:;
					{
						__jule_func_result=(_1a401ac02_push(_self_, &(_87217_p), (*(_self_))._field_args[_86513_i]) && __jule_func_result);
					}
				}
				_match_end_1a77270ec:;
			};
			(_86513_i)++;
		}
	_iter_next_1a7725c44:;
	}
	_iter_end_1a7725c44:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8619_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a401b6c5_checkDynamicTypeAnnotation(_1a40193a4_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77297d6:;
		if (it != expr_end) {
			jule::Ptr<_1a4058547_InsGeneric> _89216_g = *it;
			{
				if ((_89216_g == nullptr)) {
					_1a4019c78_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a77297d6:;
			++it;
			goto _iter_begin_1a77297d6;
		}
		_iter_end_1a77297d6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a401b95b_check(_1a40193a4_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _90213_params = _1a401a00e_getParams(_self_);;
	__jule_func_result=_1a401a350_checkCounts(_self_, &(_90213_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a401b43e_checkArgs(_self_, &(_90213_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a401b6c5_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a40193a4_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a401c83b_pushErr(_1a401c2db_structLitChecker* _self_, jule::Ptr<_1a3db8198_Token> _94026_token, jule::Str _94041_fmt, jule::Slice<jule::Any> _94054_args) {
	_1a402b1da_pushErr((*(_self_))._field_e.ptr(), _94026_token, _94041_fmt, _94054_args);
}



inline void _1a401cb9e_pushSuggestion(_1a401c2db_structLitChecker* _self_, jule::Str _94533_fmt, jule::Slice<jule::Any> _94546_args) {
	_1a402b54d_pushSuggestion((*(_self_))._field_e.ptr(), _94533_fmt, _94546_args);
}



inline void _1a401d0bc_pushMatch(_1a401c2db_structLitChecker* _self_, jule::Ptr<_1a3e016ba_FieldIns>* _94933_f, jule::Ptr<_1a4028e63_Data>* _94952_d, jule::Ptr<_1a3db8198_Token>* _94967_errorToken) {
	;
	jule::Bool _9559_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_94933_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a3ea78b4_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9559_mutable, false, &((*((*(_94933_f))))._field_Kind), _94952_d, _94967_errorToken)) {
		_1a3ea352a_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_94933_f))))._field_Kind), _94952_d, (*(_94967_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a3e07072_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a3e07072_StructArgExprModel>(_1a3e07072_StructArgExprModel{._field_Token=(*(_94967_errorToken)), ._field_Field=(*(_94933_f)), ._field_Expr=(*(_94952_d))})); };
}



inline void _1a401d430_checkPair(_1a401c2db_structLitChecker* _self_, jule::Ptr<_1a3dd71a6_FieldExprPair>* _96833_pair, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>* _96860_exprs) {
	jule::Ptr<_1a3e016ba_FieldIns> _97013_f = _1a3e03623_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96833_pair))))._field_Field))._field_Kind);;
	if ((_97013_f == nullptr)) {
		_1a401c83b_pushErr(_self_, (*((*(_96833_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96833_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1a3e9b27b_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97013_f))._field_Decl))._field_Public, (*(*(_97013_f))._field_Decl.alloc)._field_Token)))) {
		_1a401c83b_pushErr(_self_, (*((*(_96833_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96833_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1a401cb9e_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1a72c01a1:;
	{
		auto expr = _96860_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72bce90:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _98221_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98221_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1a72c156a:;
						{
							jule::Ptr<_1a3dd71a6_FieldExprPair> _98521_dpair = (*(_98221_expr))._field_Kind.unsafe_cast_ptr<_1a3dd71a6_FieldExprPair>();;
							{
								
								if (((*(_96833_pair)) == _98521_dpair)) {
									_case_begin_1a72c2549:;
									{
										goto _iter_end_1a72bce90;
									}
								}
								else if (((*(*((*(_96833_pair))))._field_Field.alloc)._field_Kind == (*(*(_98521_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1a72c25e3:;
									{
										_1a401c83b_pushErr(_self_, (*((*(_96833_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96833_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1a72bce90;
									}
								}
								_match_end_1a72c24c2:;
							};
						}
					}
					_match_end_1a72c1504:;
				};
			}
			_iter_next_1a72bce90:;
			++it;
			goto _iter_begin_1a72bce90;
		}
		_iter_end_1a72bce90:;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _99613_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99613_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97013_f))._field_Kind;
	jule::Ptr<_1a4028e63_Data> _100013_d = _1a4048dea_evalExpr((*(_self_))._field_e, (*((*(_96833_pair))))._field_Expr);;
	if ((_100013_d == nullptr)) {
		return;;
	};
	_1a401d0bc_pushMatch(_self_, &(_97013_f), &(_100013_d), &((*((*(_96833_pair))))._field_Field));
}



inline jule::Bool _1a401d771_readyExprs(_1a401c2db_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>* _100734_exprs) {
	jule::Bool _100813_ok = true;;
	{
		auto expr = _100734_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72c620c:;
		if (it != expr_end) {
			jule::I64 _100914_i = it - expr->begin();
			jule::Ptr<_1a3dd2987_Expr> _100921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a72c7692:;
						{
							jule::Ptr<_1a3dd87b2_KeyValPair> _101221_pair = (*(_100921_expr))._field_Kind.unsafe_cast_ptr<_1a3dd87b2_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101221_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1a72c84ea:;
									{
										goto _match_end_1a72c89b2;
									}
								}
								else {
									_case_begin_1a72c8a17:;
									{
										_1a401c83b_pushErr(_self_, (*(_101221_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100813_ok=false;
										goto _iter_next_1a72c620c;
									}
								}
								_match_end_1a72c89b2:;
							};
							(*((*(_100734_exprs))[_100914_i]))._field_Kind=jule::Any(jule::new_ptr<_1a3dd71a6_FieldExprPair>(_1a3dd71a6_FieldExprPair{._field_Field=(*((*(_101221_pair))._field_Key))._field_Token, ._field_Expr=(*_101221_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1a72c762b:;
				};
			}
			_iter_next_1a72c620c:;
			++it;
			_100914_i++;
			goto _iter_begin_1a72c620c;
		}
		_iter_end_1a72c620c:;
	};
	return _100813_ok;;
}



inline void _1a401da29_check(_1a401c2db_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>* _103129_exprs) {
	if (((*(_103129_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a401d771_readyExprs(_self_, _103129_exprs)))) {
		return;;
	};
	jule::Bool _103813_paired = false;;
	{
		auto expr = _103129_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a72cb146:;
		if (it != expr_end) {
			jule::I64 _103914_i = it - expr->begin();
			jule::Ptr<_1a3dd2987_Expr> _103921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1a72d224b:;
						{
							jule::Ptr<_1a3dd71a6_FieldExprPair> _104221_pair = (*(_103921_expr))._field_Kind.unsafe_cast_ptr<_1a3dd71a6_FieldExprPair>();;
							if (((_103914_i > 0LL) && (!(_103813_paired)))) {
								_1a401c83b_pushErr(_self_, (*(_104221_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103813_paired=true;
							_1a401d430_checkPair(_self_, &(_104221_pair), _103129_exprs);
						}
					}
					else {
						_case_begin_1a72cbe5a:;
						{
							if (_103813_paired) {
								_1a401c83b_pushErr(_self_, (*(_103921_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103914_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a401c83b_pushErr(_self_, (*_103921_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1a72cb146;
							};
							jule::Ptr<_1a3e016ba_FieldIns> _105721_field = (*(*(_self_))._field_s.alloc)._field_Fields[_103914_i];;
							if ((!(_1a3e9b27b_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105721_field))._field_Decl))._field_Public, (*(*_105721_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1a401c83b_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a401cb9e_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a4059e2d_TypeKind> _106521_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106521_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105721_field.alloc)._field_Kind;
							jule::Ptr<_1a4028e63_Data> _106921_d = _1a4048dea_evalExpr((*(_self_))._field_e, _103921_expr);;
							if ((_106921_d == nullptr)) {
								goto _iter_next_1a72cb146;
							};
							_1a401d0bc_pushMatch(_self_, &(_105721_field), &(_106921_d), &((*_103921_expr.alloc)._field_Token));
						}
					}
					_match_end_1a72cbe05:;
				};
			}
			_iter_next_1a72cb146:;
			++it;
			_103914_i++;
			goto _iter_begin_1a72cb146;
		}
		_iter_end_1a72cb146:;
	};
	if ((!(_103813_paired))) {
		jule::I64 _108013_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _108117_diff = (_108013_n - (*(_103129_exprs)).len());;
		{
			
			if ((_108117_diff <= 0LL)) {
				_case_begin_1a72d5084:;
				{
					return;;
				}
			}
			_match_end_1a72d4e74:;
		};
		_1c9754d1c_StrBuilder _108717_idents = static__1c97550d6_New(32LL);;
		for (; (_108117_diff > 0LL); (_108117_diff)--) {
			{
				_1c975db28_WriteStr(&_108717_idents, jule::Str::lit(", ", 2));
				_1c975db28_WriteStr(&_108717_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108013_n - _108117_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1a72d58d1:;
		}
		_iter_end_1a72d58d1:;;
		_1a401c83b_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1c975edc1_Buf(&_108717_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a401c2db_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a401e5a7_buildVar(_1a401e0bd_rangeChecker* _self_, jule::Ptr<_1a3de14bd_VarDecl>* _110728_decl) {
	jule::Ptr<_1a3ebac4b_Var> _110813_v = _1a3e2082c_buildVar((*(_110728_decl)));;
	return _110813_v;;
}



inline void _1a401e7a5_setSizeKey(_1a401e0bd_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1a401ebc3_checkRangeExprValidity(_1a401e0bd_rangeChecker* _self_, jule::Ptr<_1a4028e63_Data>* _112646_d, jule::Ptr<_1a3ebac4b_Var>* _112657_key, jule::Ptr<_1a4059e2d_TypeKind>* _112673_k) {
	jule::Bool _112713__mut = (*((*(_112657_key))))._field_Mutable;;
	if ((_112713__mut && (!(_1a405b7ae_Mutable((*(_112673_k)).ptr()))))) {
		_112713__mut=false;
	};
	_1a3ea78b4_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112713__mut, (*((*(_112657_key))))._field_Reference, &((*((*((*(_112657_key))))._field_Kind))._field_Kind), _112646_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a401edc1_checkSlice(_1a401e0bd_rangeChecker* _self_) {
	_1a401e7a5_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a4067006_Slc> _114513_slc = _1a405d5d5_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_114513_slc))._field_Elem});
	_1a401ebc3_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114513_slc.alloc)._field_Elem));
}



inline void _1a40200be_checkArray(_1a401e0bd_rangeChecker* _self_) {
	_1a401e7a5_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a4069327_Arr> _115813_arr = _1a405d34e_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_115813_arr))._field_Elem});
	_1a401ebc3_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115813_arr.alloc)._field_Elem));
}



inline void _1a40202bc_checkMapKeyA(_1a401e0bd_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a406869a_Map> _117013_m = _1a405e11e_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_117013_m))._field_Key});
	jule::Ptr<_1a4028e63_Data> _117413_d = jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc));;
	(*_117413_d.alloc)._field_Kind=(*_117013_m.alloc)._field_Key;
	_1a401ebc3_checkRangeExprValidity(_self_, &(_117413_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117013_m.alloc)._field_Key));
}



inline void _1a40204ba_checkMapKeyB(_1a401e0bd_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a406869a_Map> _118513_m = _1a405e11e_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_118513_m))._field_Val});
	jule::Ptr<_1a4028e63_Data> _118913_d = jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc));;
	(*_118913_d.alloc)._field_Kind=(*_118513_m.alloc)._field_Val;
	_1a401ebc3_checkRangeExprValidity(_self_, &(_118913_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118513_m.alloc)._field_Val));
}



inline void _1a40206b8_checkMap(_1a401e0bd_rangeChecker* _self_) {
	_1a40202bc_checkMapKeyA(_self_);
	_1a40204ba_checkMapKeyB(_self_);
}



inline void _1a40208b6_checkStr(_1a401e0bd_rangeChecker* _self_) {
	_1a401e7a5_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3dbaa80_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1a4020ab4_checkComptime(_1a401e0bd_rangeChecker* _self_) {
	_1a401e7a5_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1a3e9aa1c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1a3e9aa1c_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a3dbaa80_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a401e5a7_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a4020d4a_checkComptimeRange(_1a401e0bd_rangeChecker* _self_) {
	jule::Ptr<_1a3e2e72b_comptimeRange> _122413_range = _1a4060928_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122413_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1a7306a89:;
			{
				_1a4020ab4_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a7306d86:;
			{
				_1a3e9aa1c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a7306d31:;
	};
}



inline jule::Bool _1a40210d1_check(_1a401e0bd_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1a7308ddd:;
		}
		else if ((_1a405d5d5_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a73086c3:;
			{
				_1a401edc1_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a405d34e_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7308739:;
			{
				_1a40200be_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a405e11e_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7308e54:;
			{
				_1a40206b8_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a4060928_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7308eba:;
			{
				return _1a4020d4a_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a730863a:;
			{
				jule::Ptr<_1a4062a07_Prim> _125613_prim = _1a405c57e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125613_prim != nullptr) && _1a4065e8e_IsStr(_125613_prim))) {
					_1a40208b6_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a73084a3:;
	};
	_1a3e9aa1c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a401e0bd_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a4021c4c_prepareTypes(_1a402182e_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a3e184d4_Types((*(_self_))._field_f);
	};
}



inline void _1a4022005_prepareExprs(_1a402182e_retTypeChecker* _self_, jule::Ptr<_1a3dd2987_Expr>* _128436_e) {
	if (((*(_128436_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128436_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a731093e:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128436_e))))._field_Kind.unsafe_cast_ptr<_1a3dd357b_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1a7310b2b:;
			{
				{ jule::Slice<jule::Ptr<_1a3dd2987_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128436_e))); };
			}
		}
		_match_end_1a7310ac6:;
	};
}



inline void _1a4022203_checkExprs(_1a402182e_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _130013_datas = jule::Slice<jule::Ptr<_1a4028e63_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a402ab8a_Eval> _130113_eval = _1a3ea2eb9_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1a4079a1e_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7313931:;
		if (it != expr_end) {
			jule::I64 _130214_i = it - expr->begin();
			jule::Ptr<_1a3dd2987_Expr> _130221_expr = *it;
			{
				if ((_130214_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a7313931;
				};
				jule::Ptr<_1a4059e2d_TypeKind> _130717_t = (*(_self_))._field_types[_130214_i];;
				(*(_130113_eval))._field_prefix=_130717_t;
				jule::Ptr<_1a4028e63_Data> _131017_d = _1a4048dea_evalExpr(_130113_eval, _130221_expr);;
				if ((_131017_d == nullptr)) {
					goto _iter_next_1a7313931;
				};
				{ jule::Slice<jule::Ptr<_1a4028e63_Data>> &__jule_push_dest = _130013_datas; __jule_push_dest.push(_131017_d); };
				if (((!((*(_131017_d))._field_Mutable)) && _1a405b7ae_Mutable((*(_131017_d))._field_Kind.ptr()))) {
					_1a3e9aa1c_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a4012b72_assignTypeChecker _132217_ac = _1a4012b72_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130717_t, ._field_d=_131017_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a4013b40_check(&_132217_ac);
			}
			_iter_next_1a7313931:;
			++it;
			_130214_i++;
			goto _iter_begin_1a7313931;
		}
		_iter_end_1a7313931:;
	};
	if ((_130013_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a3e0bc58_TupleExprModel>(_1a3e0bc58_TupleExprModel{._field_Datas=_130013_datas}), &__jule_any_type81);
	} else if ((_130013_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130013_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a4022544_check(_1a402182e_retTypeChecker* _self_, jule::Ptr<_1a3dd2987_Expr>* _134129_e) {
	_1a4021c4c_prepareTypes(_self_);
	_1a4022005_prepareExprs(_self_, _134129_e);
	jule::I64 _13459_n = (*(_self_))._field_exprs.len();;
	if (((_13459_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1a3e15624_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1a3e9aa1c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13459_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a3e14854_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl))) {
		_1a3e9aa1c_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13459_n > (*(_self_))._field_types.len())) {
		_1a3e9aa1c_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13459_n < (*(_self_))._field_types.len())) {
		_1a3e9aa1c_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1a4022203_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a402182e_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a40240d4_SelectPackage(_1a4023aea_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7320047:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1a7320047:;
			++it;
			goto _iter_begin_1a7320047;
		}
		_iter_end_1a7320047:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a40244d0_FindVar(_1a4023aea_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1a40262b2_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a40248cb_FindTypeAlias(_1a4023aea_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1a4026768_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a4024cc7_FindStruct(_1a4023aea_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7322764:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1a7322764:;
			++it;
			goto _iter_begin_1a7322764;
		}
		_iter_end_1a7322764:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a40251c3_FindFn(_1a4023aea_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7323ca4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1a7323ca4:;
			++it;
			goto _iter_begin_1a7323ca4;
		}
		_iter_end_1a7323ca4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a4025514_FindTrait(_1a4023aea_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73250c4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1a73250c4:;
			++it;
			goto _iter_begin_1a73250c4;
		}
		_iter_end_1a73250c4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a4025855_FindEnum(_1a4023aea_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7326092:;
		if (it != expr_end) {
			jule::Ptr<_1a3e29db9_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1a7326092:;
			++it;
			goto _iter_begin_1a7326092;
		}
		_iter_end_1a7326092:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a4025b96_FindTypeEnum(_1a4023aea_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7327060:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2b5c4_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1a7327060:;
			++it;
			goto _iter_begin_1a7327060;
		}
		_iter_end_1a7327060:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a40262b2_findVar(_1a4023aea_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1a3ebac4b_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1a7328da8:;
		}
		_iter_end_1a7328da8:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7328eb8:;
			if (it != expr_end) {
				jule::Ptr<_1a3ebac4b_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1a7328eb8:;
				++it;
				goto _iter_begin_1a7328eb8;
			}
			_iter_end_1a7328eb8:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a4026768_findTypeAlias(_1a4023aea_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1a405913b_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1a6b47540:;
		}
		_iter_end_1a6b47540:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6b4a2ce:;
			if (it != expr_end) {
				jule::Ptr<_1a405913b_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1a6b4a2ce:;
				++it;
				goto _iter_begin_1a6b4a2ce;
			}
			_iter_end_1a6b4a2ce:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a4026b64_defByIdent(_1a4023aea_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b4b951:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a6b4b951:;
			++it;
			goto _iter_begin_1a6b4b951;
		}
		_iter_end_1a6b4b951:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b4bca3:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1a6b4bca3:;
			++it;
			goto _iter_begin_1a6b4bca3;
		}
		_iter_end_1a6b4bca3:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b4cc1b:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1a6b4cc1b:;
			++it;
			goto _iter_begin_1a6b4cc1b;
		}
		_iter_end_1a6b4cc1b:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b4dbd9:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1a6b4dbd9:;
			++it;
			goto _iter_begin_1a6b4dbd9;
		}
		_iter_end_1a6b4dbd9:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b50acb:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a6b50acb:;
			++it;
			goto _iter_begin_1a6b50acb;
		}
		_iter_end_1a6b50acb:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b5126e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e29db9_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1a6b5126e:;
			++it;
			goto _iter_begin_1a6b5126e;
		}
		_iter_end_1a6b5126e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b521e8:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2b5c4_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1a6b521e8:;
			++it;
			goto _iter_begin_1a6b521e8;
		}
		_iter_end_1a6b521e8:;
	};
	return nullptr;;
}



inline jule::Bool _1a402711a_isDuplicatedIdent(_1a4023aea_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7763a62:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a7763a62:;
			++it;
			goto _iter_begin_1a7763a62;
		}
		_iter_end_1a7763a62:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7763db4:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a7763db4:;
			++it;
			goto _iter_begin_1a7763db4;
		}
		_iter_end_1a7763db4:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77650a2:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a77650a2:;
			++it;
			goto _iter_begin_1a77650a2;
		}
		_iter_end_1a77650a2:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77662e5:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a77662e5:;
			++it;
			goto _iter_begin_1a77662e5;
		}
		_iter_end_1a77662e5:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77686d2:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a77686d2:;
			++it;
			goto _iter_begin_1a77686d2;
		}
		_iter_end_1a77686d2:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7768825:;
		if (it != expr_end) {
			jule::Ptr<_1a3e29db9_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a7768825:;
			++it;
			goto _iter_begin_1a7768825;
		}
		_iter_end_1a7768825:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a776977c:;
		if (it != expr_end) {
			jule::Ptr<_1a3e2b5c4_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a776977c:;
			++it;
			goto _iter_begin_1a776977c;
		}
		_iter_end_1a776977c:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4023aea_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a402934d_IsNil(_1a4028e63_Data* _self_) {
	return _1a405b00b_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a40295d4_IsVoid(_1a4028e63_Data* _self_) {
	return _1a405b292_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a402986a_IsConst(_1a4028e63_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a4029bab_GoodOperand(_1a4028e63_Data* _self_, jule::Ptr<_1a4028e63_Data>* _10531_other) {
	if ((_1a405d0b8_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a405c57e_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1a4066225_IsAny(_1a405c57e_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1a405dd88_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1a405b00b_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4028e63_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a402a0da_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a402b1da_pushErr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1a402b54d_pushSuggestion(_1a402ab8a_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1a3e9ad80_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1a402b74b_allowBuiltin(_1a402ab8a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a402b949_disallowBuiltin(_1a402ab8a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a402bbd0_isUnsafe(_1a402ab8a_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a402be66_isGlobal(_1a402ab8a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a77b1708:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a77b1b15:;
			{
				return false;;
			}
		}
		_match_end_1a77b1ab0:;
	};
}



inline jule::Bool _1a402c274_applyNumericPrefix(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1a402986a_IsConst((*(_16842_d)).ptr())))) || (_1a405c57e_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a4062a07_Prim> _1759_prim = _1a405c57e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b289ad26_IsFloat(_1a4062d48_Str(_1759_prim.ptr()))) {
			_case_begin_1a77b4530:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>((*((*(_self_))._field_prefix)));
				_1b28a018d_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _1b289e313_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b289a40d_IsSigInt(_1a4062d48_Str(_1759_prim.ptr()))) {
			_case_begin_1a77b4596:;
			{
				if ((!(_1a401019c_sigAssignable(_1a4062d48_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>((*((*(_self_))._field_prefix)));
				_1b289e5bb_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _1b289dce6_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b289a71b_IsUnsigInt(_1a4062d48_Str(_1759_prim.ptr()))) {
			_case_begin_1a77b460c:;
			{
				if ((!(_1a4010565_unsigAssignable(_1a4062d48_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>((*((*(_self_))._field_prefix)));
				_1b289e874_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _1b289e07c_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1a77b4189:;
	};
	return true;;
}



inline jule::Ptr<_1a4028e63_Data> _1a402c5b5_litStr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1a3db9584_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1a400d3ed_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1a400d73e_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_1b289b651_Const> _21013_constant = static__1b289c3dd_NewStr(_20413_s);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a402c906_litRune(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1a400d1cd_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1a4028e63_Data> _22213_data = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_2219_r))});;
	jule::Bool _2269_isAscii = _1a3ee2965_IsAscii(_2219_r);;
	if (_2269_isAscii) {
		(*(_22213_data))._field_Kind=_1a4151be5_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1a4151684_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1a3e109a4_RuneExprModel>(_1a3e109a4_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type82);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1a4028e63_Data> _1a402cc47_litFloat(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr>* _24024_l) {
	jule::F64 _2419_f = ({
		auto except = _1b2883539_ParseFloat((*((*(_24024_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b289b651_Const> _24213_constant = static__1b289c6a7_NewF64(_2419_f);;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152b91_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24213_constant, &__jule_any_type19), ._field_Constant=_24213_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a402d088_litInt(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr>* _25226_l) {
	;
	jule::Str _25513_lit = (*((*(_25226_l))))._field_Value;;
	jule::I64 _25613_base = 0LL;;
	{
		
		if (_1c9740a83_HasPrefix(_25513_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1a77c4133:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=16LLU;
			}
		}
		else if (_1c9740a83_HasPrefix(_25513_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1a77c4034:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=2LLU;
			}
		}
		else if (_1c9740a83_HasPrefix(_25513_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1a77c3c04:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=8LLU;
			}
		}
		else if (((_25513_lit[0LL] == '0') && (_25513_lit.len() > 1LL))) {
			_case_begin_1a77c3c6a:;
			{
				(_25513_lit).mut_slice(1LL);;
				_25613_base=8LLU;
			}
		}
		else {
			_case_begin_1a77c3b8d:;
			{
				_25613_base=10LLU;
			}
		}
		_match_end_1a77c3b27:;
	};
	jule::Ptr<_1a4028e63_Data> _27613_d = jule::new_ptr<_1a4028e63_Data>();;
	jule::Bool _27813_ok = true;;
	jule::I64 _2799_sig = ({
		auto except = _1b287bc19_ParseInt(_25513_lit, _25613_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27813_ok=false;

			0LL;
		});
	});;
	if (_27813_ok) {
		(*_27613_d.alloc)._field_Constant=static__1b289ba91_NewI64(_2799_sig);
		(*_27613_d.alloc)._field_Kind=_1a4150de2_primInt;
	} else {
		jule::U64 _28713_unsig = ({
			auto except = _1b287b763_ParseUint(_25513_lit, _25613_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a402b1da_pushErr(_self_, (*((*(_25226_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a402b54d_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27613_d.alloc)._field_Constant=static__1b289bd5a_NewU64(_28713_unsig);
		(*_27613_d.alloc)._field_Kind=_1a4150a29_primUint;
	};
	(*_27613_d.alloc)._field_Model=jule::Any((*_27613_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27613_d.alloc)._field_untyped=true;
	if ((!(_1a402c274_applyNumericPrefix(_self_, &(_27613_d))))) {
		_1a4052e04_fitBitsize(&(_27613_d));
	};
	return _27613_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a402d3c9_litNum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr>* _30726_l) {
	{
		
		if (_1a3dba233_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1a77caec5:;
			{
				return _1a402cc47_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1a77cae5e:;
			{
				return _1a402d088_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1a77cad71:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a402d71a_evalLit(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd3922_LitExpr> _31626_lit) {
	{
		
		if (_1a3db92ed_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1a77cc13b:;
			{
				return _1a402c5b5_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1a3db984d_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1a77cc1d5:;
			{
				return _1a402c906_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1a3dba4ec_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1a77cc25c:;
			{
				return _1a402d3c9_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1a77cbaca:;
			{
				return nullptr;;
			}
		}
		_match_end_1a77cb9cb:;
	};
}



inline jule::Any _1a402da5b_findBuiltins(_1a402ab8a_Eval* _self_, jule::Str* _32932_ident) {
	if (_1a3e94e9a_IsPub((*(_32932_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1a77ce47e:;
				{
					jule::Any _33321_def = _1a4052bc3_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1a3e77a60_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1a77ce1c6:;
				{
					jule::Any _33821_def = _1a405392c_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1a3e97dd2_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1a77ce4e5:;
				{
					jule::Any _34321_def = _1a405392c_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1a77ce3d5:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a41534cc_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1a402de57_getDef(_1a402ab8a_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1a3ebac4b_Var> _36113_v = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4078204_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a405913b_TypeAlias> _36613_ta = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4078600_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1a3e29db9_Enum> _37217_enm = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4079579_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1a3e2b5c4_TypeEnum> _37717_tenm = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a40798ba_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1a3e143d1_Fn> _38313_f = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4078de7_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1a3dee4dc_Struct> _38813_s = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a40789eb_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1a402da5b_findBuiltins(_self_, _35626_ident);;
}



inline jule::Ptr<_1a3e1a4a3_ReferenceStack> _1a402e1dd_getOwnerRefers(_1a402ab8a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a77d791b:;
			{
				jule::Ptr<_1a3e5d57e_scopeChecker> _39917_sc = _1a3e61906_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0));;
				return (*((*(_39917_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1a77d72ab:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1a77d7256:;
	};
	return nullptr;;
}



inline void _1a77ea368_pushReference(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e172d5_FnIns>* _41140_ref) {
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _41213_refers = _1a402e1dd_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1a77ec6bc_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1a3e1b295_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type7));
	};
}

inline void _1a781016e_pushReference(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3ebac4b_Var>* _41140_ref) {
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _41213_refers = _1a402e1dd_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1a781246d_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1a3e1b295_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type8));
	};
}

inline void _1a78c9bd9_pushReference(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e0226a_StructIns>* _41140_ref) {
	jule::Ptr<_1a3e1a4a3_ReferenceStack> _41213_refers = _1a402e1dd_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1a78cc02c_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1a3e1b295_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a402e7d7__evalEnum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e29db9_Enum> _41828_enm) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_41828_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a4028e63_Data> _1a402ebd3_evalEnum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e29db9_Enum> _42731_enm, jule::Ptr<_1a3db8198_Token> _42743_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42731_enm))._field_Public, (*_42731_enm.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _42743_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42731_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a402e7d7__evalEnum(_self_, _42731_enm);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4030024__evalTypeEnum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e2b5c4_TypeEnum> _43632_enm) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_43632_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4030420_evalTypeEnum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e2b5c4_TypeEnum> _44535_enm, jule::Ptr<_1a3db8198_Token> _44551_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44535_enm))._field_Public, (*_44535_enm.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _44551_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44535_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a4030024__evalTypeEnum(_self_, _44535_enm);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4030761__evalStruct(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e0226a_StructIns> _45430_s) {
	jule::Ptr<_1a4028e63_Data> _45513_d = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_45430_s, 0)}), ._field_Model=jule::Any(_45430_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45430_s))._field_Decl != nullptr) && (*(*_45430_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45513_d))._field_Kind))._field_BindIdent=(*(*_45430_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45513_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4030b5c_evalStruct(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e0226a_StructIns> _46833_s, jule::Ptr<_1a3db8198_Token> _46848_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46833_s))._field_Decl))._field_Public, (*(*_46833_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _46848_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46833_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a4031311_checkDeprecated(_self_, &((*(*_46833_s.alloc)._field_Decl.alloc)._field_Directives), _46848_errorToken);
	return _1a4030761__evalStruct(_self_, _46833_s);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4030e9d_evalFnIns(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e172d5_FnIns> _47828_f) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_47828_f, 1)}), ._field_Model=jule::Any(_47828_f, &__jule_any_type7), });;
}



inline void _1a4031311_checkDeprecated(_1a402ab8a_Eval* _self_, jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _48739_directives, jule::Ptr<_1a3db8198_Token> _48770_tok) {
	if (_1a402bbd0_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a3dcca70_Directive> _4929_d = _1a405280a_findDirective(_48739_directives, jule::Str::lit("deprecated", 10));;
	if ((_4929_d != nullptr)) {
		if (((*_4929_d.alloc)._field_Args.len() == 0LL)) {
			_1a402b1da_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1a402b1da_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4929_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a403170c_evalFn(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e143d1_Fn> _50329_f, jule::Ptr<_1a3db8198_Token> _50337_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50329_f))._field_Public, (*_50329_f.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _50337_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50329_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a4031311_checkDeprecated(_self_, &((*_50329_f.alloc)._field_Directives), _50337_errorToken);
	jule::Ptr<_1a3e172d5_FnIns> _51213_ins = _1a3e15b41_instance(_50329_f);;
	_1a77ea368_pushReference(_self_, &(_51213_ins));
	return _1a4030e9d_evalFnIns(_self_, _51213_ins);;
}



inline void _1a4031b2a_pushIllegalCycleError(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3ebac4b_Var>* _51741_v1, jule::Ptr<_1a3ebac4b_Var>* _51752_v2, _1c9754d1c_StrBuilder* _51767_message) {
	;
	jule::Str _5199_refers_to = _1c980c215_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51741_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51752_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5209_buf = _1c975edc1_Buf(_51767_message);;
	_1c975db28_WriteStr(_51767_message, _1c974028b_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c975db28_WriteStr(_51767_message, _5199_refers_to);
	_1c975ddd1_WriteByte(_51767_message, '\n');
	_1c975d870_Write(_51767_message, _5209_buf);
}



inline jule::Bool _1a4032026_checkCrossCycle(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3ebac4b_Var>* _52735_v, _1c9754d1c_StrBuilder* _52749_message) {
	{
		auto expr = &((*((*(_52735_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7801b44:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> *_52816_d = it;
			{
				if (((*(_52816_d)) == (*(_self_))._field_owner)) {
					_1a4031b2a_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
				if ((!(_1a4032026_checkCrossCycle(_self_, _52816_d, _52749_message)))) {
					_1a4031b2a_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
			}
			_iter_next_1a7801b44:;
			++it;
			goto _iter_begin_1a7801b44;
		}
		_iter_end_1a7801b44:;
	};
	return true;;
}



inline jule::Bool _1a4032422_checkIllegalCycles(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3ebac4b_Var>* _54442_v, jule::Ptr<_1a3db8198_Token> _54451_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54442_v)))) {
		_1a402b1da_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c9754d1c_StrBuilder _55713_message = static__1c97550d6_New(32LL);;
	if ((!(_1a4032026_checkCrossCycle(_self_, _54442_v, &(_55713_message))))) {
		jule::Str _56017_errMsg = _1c975e420_Str(&_55713_message);;
		_1c975e61d_Clear(&_55713_message);
		_1a4031b2a_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54442_v, &(_55713_message));
		_56017_errMsg+=_1c975e420_Str(&_55713_message);
		_1a402b1da_pushErr(_self_, _54451_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_56017_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54442_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4028e63_Data> _1a403281d_evalVar(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3ebac4b_Var> _57230_v, jule::Ptr<_1a3db8198_Token> _57239_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57230_v))._field_Public, (*_57230_v.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _57239_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57230_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a4031311_checkDeprecated(_self_, &((*_57230_v.alloc)._field_Directives), _57239_errorToken);
	if (((*_57230_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1a7817451;
	};
	(*_57230_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a780a653:;
			{
				jule::Bool _59113_ok = _1a4032422_checkIllegalCycles(_self_, &(_57230_v), _57239_errorToken);;
				if ((!(_59113_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7809c5c:;
			{
				if (((!((*_57230_v.alloc)._field_Reference)) || _1a402bbd0_isUnsafe(_self_))) {
					goto _match_end_1a780a5cb;
				};
				jule::Ptr<_1a3e5d57e_scopeChecker> _59917_s = (*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0);;
				while ((((*(_59917_s))._field_owner == nullptr) && ((*_59917_s.alloc)._field_parent != nullptr))) {
					{
						_59917_s=(*_59917_s.alloc)._field_parent;
					}
				_iter_next_1a780b863:;
				}
				_iter_end_1a780b863:;;
				if (((((*_59917_s.alloc)._field_owner != nullptr) && (*((*_59917_s.alloc)._field_owner))._field_Anon) && ((*_57230_v.alloc)._field_Scope != (*((*_59917_s.alloc)._field_owner))._field_Scope))) {
					_1a402b1da_pushErr(_self_, _57239_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57230_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1a780a5cb:;
	};
	if (((*_57230_v.alloc)._field_Scope == nullptr)) {
		_1a781016e_pushReference(_self_, &(_57230_v));
	};
	if (((!((*_57230_v.alloc)._field_Binded)) && (((*_57230_v.alloc)._field_Value == nullptr) || ((*((*_57230_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57230_v.alloc)._field_Constant) {
			_1a3eb2b99_checkVar((*(_self_))._field_s, &(_57230_v), jule::Trait<_1a4079a1e_Lookup>((*(_self_))._field_s, 3));
			if ((((*_57230_v.alloc)._field_Value == nullptr) || ((*((*_57230_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57230_v.alloc)._field_Kind == nullptr) || ((*((*_57230_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57230_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a3eb2b99_checkVar((*(_self_))._field_s, &(_57230_v), (*(_self_))._field_lookup);
		if ((((*_57230_v.alloc)._field_Kind == nullptr) || ((*((*_57230_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1a7817451:;
	jule::Ptr<_1a4028e63_Data> _64313_d = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*((*_57230_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57230_v.alloc)._field_Mutable, ._field_Reference=(*_57230_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57230_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57230_v, &__jule_any_type8), });;
	if ((((!((*_57230_v.alloc)._field_Binded)) && _1a3ebb125_IsInitialized(_57230_v)) && ((*((*_57230_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64313_d))._field_IsRune=(*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57230_v.alloc)._field_Constant && ((*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64313_d.alloc)._field_Constant=jule::new_ptr<_1b289b651_Const>((*(*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64313_d.alloc)._field_Model=jule::Any((*_64313_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1a3ebb642_untypedConstant(_57230_v)) {
			_1a402c274_applyNumericPrefix(_self_, &(_64313_d));
			(*_64313_d.alloc)._field_untyped=true;
		};
	};
	return _64313_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4032c19_evalTypeAlias(_1a402ab8a_Eval* _self_, jule::Ptr<_1a405913b_TypeAlias> _66736_ta, jule::Ptr<_1a3db8198_Token> _66752_errorToken) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66736_ta))._field_Public, (*_66736_ta.alloc)._field_Token)))) {
		_1a402b1da_pushErr(_self_, _66752_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_66736_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66736_ta.alloc)._field_Used=true;
	jule::Trait<_1a4059977_Kind> _67613_kind = (*((*((*_66736_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a4028e63_Data> _67717_d = nullptr;;
	{
		auto &_match_expr{ _67613_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7822aee:;
			{
				_67717_d=_1a4030761__evalStruct(_self_, _67613_kind.cast_ptr<_1a3e0226a_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7821669:;
			{
				_67717_d=_1a402e7d7__evalEnum(_self_, _67613_kind.cast_ptr<_1a3e29db9_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a78216d0:;
			{
				_67717_d=_1a4030024__evalTypeEnum(_self_, _67613_kind.cast_ptr<_1a3e2b5c4_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1a7821603:;
			{
				_67717_d=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=(*(*(*_66736_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_66736_ta.alloc)._field_Binded) {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*_66736_ta.alloc)._field_Ident;
				} else {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*(*(*_66736_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_67717_d))._field_Model=jule::Any((*_67717_d.alloc)._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1a782146b:;
	};
	(*((*(_67717_d))._field_Kind))._field_Generic=(*_66736_ta.alloc)._field_Generic;
	return _67717_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4033115_evalDef(_1a402ab8a_Eval* _self_, jule::Any* _70331_def, jule::Ptr<_1a3db8198_Token> _70341_ident) {
	{
		auto &_match_expr{ (*(_70331_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7826c13:;
			{
				return _1a403281d_evalVar(_self_, (*(_70331_def)).cast_ptr<_1a3ebac4b_Var>(&__jule_any_type8), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a7826c79:;
			{
				return _1a402ebd3_evalEnum(_self_, (*(_70331_def)).cast_ptr<_1a3e29db9_Enum>(&__jule_any_type67), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a7826ce0:;
			{
				return _1a4030420_evalTypeEnum(_self_, (*(_70331_def)).cast_ptr<_1a3e2b5c4_TypeEnum>(&__jule_any_type68), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7826d56:;
			{
				return _1a4030b5c_evalStruct(_self_, _1a3dee94e_instance((*(_70331_def)).cast_ptr<_1a3dee4dc_Struct>(&__jule_any_type65)), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a7826dcd:;
			{
				jule::Ptr<_1a3e143d1_Fn> _71417_f = (*(_70331_def)).cast_ptr<_1a3e143d1_Fn>(&__jule_any_type64);;
				if ((!(*(_71417_f))._field_Ident.equal("init", 4))) {
					return _1a403170c_evalFn(_self_, _71417_f, _70341_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a7826e55:;
			{
				return _1a4030e9d_evalFnIns(_self_, (*(_70331_def)).cast_ptr<_1a3e172d5_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7826ecc:;
			{
				return _1a4032c19_evalTypeAlias(_self_, (*(_70331_def)).cast_ptr<_1a405913b_TypeAlias>(&__jule_any_type66), _70341_ident);;
			}
		}
		_match_end_1a7826bad:;
	};
	_1a402b1da_pushErr(_self_, _70341_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70341_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4033456_evalIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd42a2_IdentExpr> _72728_ident) {
	jule::Any _72813_def = _1a402de57_getDef(_self_, &((*(_72728_ident))._field_Ident), (*_72728_ident.alloc)._field_Binded);;
	return _1a4033115_evalDef(_self_, &(_72813_def), (*_72728_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4033797_evalUnary(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd4a44_UnaryExpr> _73233_u) {
	_1a40493b2_unaryEval _73313_unary = static__1a4049802_new(_self_);;
	return _1a404ac32_eval(&_73313_unary, _73233_u);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4033ad8_evalVariadic(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd4e1d_VariadicExpr> _73736_v) {
	if (((*(_73736_v))._field_Expr == nullptr)) {
		_1a402b1da_pushErr(_self_.ptr(), (*_73736_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _74313_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74313_prefix;
	});;
	jule::Ptr<_1a4028e63_Data> _74713_d = _1a4048dea_evalExpr(_self_, (*_73736_v.alloc)._field_Expr);;
	if ((_74713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a405c2e8_Variadicable((*(_74713_d))._field_Kind.ptr())))) {
		_1a402b1da_pushErr(_self_, (*_73736_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_74713_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1a40574d0_makeVariadic(&(_74713_d), (*(_1a405d5d5_Slc((*(_74713_d))._field_Kind)))._field_Elem);
	return _74713_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4033e29_evalUnsafe(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd3ceb_UnsafeExpr> _75934_u) {
	jule::Bool _7609_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a4028e63_Data> _76213_d = _1a4048dea_evalExpr(_self_, (*(_75934_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7609_unsafety;
	return _76213_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a403426a_evalArr(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd8edd_SliceExpr> _76731_s) {
	jule::Ptr<_1a4069327_Arr> _76913_pt = _1a405d34e_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a4069327_Arr> _77113_arr = jule::new_ptr<_1a4069327_Arr>(_1a4069327_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_76913_pt))._field_Elem});;
	jule::Bool _77713_filled = false;;
	if (((*(_76731_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76731_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1a7837383:;
				{
					if (((*((*((*(_76731_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a3dd4e1d_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1a78372d9;
					};
					if ((*_76913_pt.alloc)._field_Auto) {
						_1a402b1da_pushErr(_self_, (*_76731_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_77713_filled=true;
					(*_76731_s.alloc)._field_Exprs=(*_76731_s.alloc)._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1a78372d9:;
		};
	};
	(*(_77113_arr))._field_N=(*_76731_s.alloc)._field_Exprs.len();
	if ((!((*_76913_pt.alloc)._field_Auto))) {
		if (((*_77113_arr.alloc)._field_N > (*_76913_pt.alloc)._field_N)) {
			_1a402b1da_pushErr(_self_, (*_76731_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77113_arr.alloc)._field_N < (*_76913_pt.alloc)._field_N)) {
			(*_77113_arr.alloc)._field_N=(*_76913_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a3e0b95b_ArrayExprModel> _80613_model = jule::new_ptr<_1a3e0b95b_ArrayExprModel>(_1a3e0b95b_ArrayExprModel{._field_Kind=_77113_arr, });;
	if (_77713_filled) {
		(*(_80613_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80613_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_76731_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a4059e2d_TypeKind> _81513_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77113_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76731_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a783e115:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _81721_elem = *it;
			{
				jule::Ptr<_1a4028e63_Data> _81817_d = _1a4048dea_evalExpr(_self_, _81721_elem);;
				if ((_81817_d == nullptr)) {
					goto _iter_next_1a783e115;
				};
				;
				if (_1a3ea78b4_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77113_arr.alloc)._field_Elem), &(_81817_d), &((*(_81721_elem))._field_Token))) {
					_1a3ea352a_checkAssignType((*_self_.alloc)._field_s, false, &((*_77113_arr.alloc)._field_Elem), &(_81817_d), (*_81721_elem.alloc)._field_Token);
				};
				(*(_80613_model))._field_Elems=jule::append((*_80613_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81817_d))._field_Model}));
			}
			_iter_next_1a783e115:;
			++it;
			goto _iter_begin_1a783e115;
		}
		_iter_end_1a783e115:;
	};
	(*_self_.alloc)._field_prefix=_81513_prefix;
	if (_77713_filled) {
		(*_80613_model.alloc)._field_Elems=jule::append((*_80613_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_77113_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80613_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4034721_evalExpSlc(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd8edd_SliceExpr> _84434_s, jule::Ptr<_1a4059e2d_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1a4067006_Slc> _84513_slc = jule::new_ptr<_1a4067006_Slc>(_1a4067006_Slc{._field_Elem=_84453_t});;
	jule::I64 _84913_i = 0LL;;
	jule::Ptr<_1a3e08a24_SliceExprModel> _85013_model = jule::new_ptr<_1a3e08a24_SliceExprModel>(_1a3e08a24_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		(*(_85013_model))._field_Elems=jule::append((*_85013_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84471_first}));
		_84913_i=1LL;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _85913_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84513_slc))._field_Elem;
	{
		auto expr = (*_84434_s.alloc)._field_Exprs.slice(_84913_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7847272:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1a4028e63_Data> _86217_d = _1a4048dea_evalExpr(_self_, _86121_elem);;
				if ((_86217_d != nullptr)) {
					;
					if (_1a3ea78b4_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84513_slc.alloc)._field_Elem), &(_86217_d), &((*(_86121_elem))._field_Token))) {
						_1a3ea352a_checkAssignType((*_self_.alloc)._field_s, false, &((*_84513_slc.alloc)._field_Elem), &(_86217_d), (*_86121_elem.alloc)._field_Token);
					};
					(*_85013_model.alloc)._field_Elems=jule::append((*_85013_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86217_d.alloc)._field_Model}));
				};
			}
			_iter_next_1a7847272:;
			++it;
			goto _iter_begin_1a7847272;
		}
		_iter_end_1a7847272:;
	};
	(*_self_.alloc)._field_prefix=_85913_prefix;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_84513_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85013_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4034a62_evalSliceExpr(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd8edd_SliceExpr> _88237_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a405d34e_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1a784bb6c:;
				{
					return _1a403426a_evalArr(_self_, _88237_s);;
				}
			}
			else if ((_1a405d5d5_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1a784bc16:;
				{
					jule::Ptr<_1a4067006_Slc> _88821_pt = _1a405d5d5_Slc((*_self_.alloc)._field_prefix);;
					return _1a4034721_evalExpSlc(_self_, _88237_s, (*(_88821_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1a784ba90:;
		};
	};
	jule::Ptr<_1a4059e2d_TypeKind> _89313_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88237_s))._field_Exprs.len() == 0LL)) {
		_1a402b1da_pushErr(_self_, (*_88237_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _90113_firstElem = _1a4048dea_evalExpr(_self_, (*_88237_s.alloc)._field_Exprs[0LL]);;
	if ((_90113_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a3ea78b4_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90113_firstElem))._field_Kind), &(_90113_firstElem), &((*((*_88237_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1a4028e63_Data> _91113_d = _1a4034721_evalExpSlc(_self_, _88237_s, (*(_90113_firstElem))._field_Kind, (*(_90113_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89313_prefix;
	return _91113_d;;
}



inline void _1a4034dc5_checkIntegerIndexingByData(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _91750_d, jule::Ptr<_1a3db8198_Token> _91764_token) {
	jule::Str _9189_errKey = _1a405518c_checkDataForIntegerIndexing(_91750_d, &(_91764_token));;
	{
		auto &_match_expr{ _9189_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a78548bc:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1a785459d:;
			{
				_1a402b1da_pushErr(_self_, _91764_token, _9189_errKey, jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_91750_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a7854207:;
			{
				_1a402b1da_pushErr(_self_, _91764_token, _9189_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a78544b0:;
	};
}



inline void _1a40352e3_indexingPtr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _92935_d, jule::Ptr<_1a4028e63_Data>* _92950_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _92969_i) {
	_1a4034dc5_checkIntegerIndexingByData(_self_, _92950_index, (*((*(_92969_i))))._field_Token);
	(*((*(_92935_d))))._field_Lvalue=true;
	jule::Ptr<_1a4069cea_Ptr> _93313_ptr = _1a405ca9b_Ptr((*((*(_92935_d))))._field_Kind.ptr());;
	{
		
		if (_1a406a834_IsUnsafe(_93313_ptr.ptr())) {
			_case_begin_1a785746e:;
			{
				_1a402b1da_pushErr(_self_, (*((*(_92969_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a402bbd0_isUnsafe(_self_)))) {
			_case_begin_1a7857518:;
			{
				_1a402b1da_pushErr(_self_, (*((*(_92969_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7857408:;
	};
	(*((*(_92935_d))))._field_Kind=(*(_93313_ptr))._field_Elem;
}



inline void _1a4035711_indexingArr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _94535_d, jule::Ptr<_1a4028e63_Data>* _94550_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _94569_i) {
	jule::Ptr<_1a4069327_Arr> _94613_arr = _1a405d34e_Arr((*((*(_94535_d))))._field_Kind.ptr());;
	(*((*(_94535_d))))._field_Kind=(*(_94613_arr))._field_Elem;
	_1a4034dc5_checkIntegerIndexingByData(_self_, _94550_index, (*((*(_94569_i))))._field_Token);
	(*((*(_94535_d))))._field_Lvalue=true;
	if ((_1a402986a_IsConst((*(_94550_index)).ptr()) && (_1b289e313_AsF64((*((*(_94550_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94613_arr.alloc)._field_N)))) {
		_1a402b1da_pushErr(_self_, (*((*(_94569_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a4035b2e_indexingSlc(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _95535_d, jule::Ptr<_1a4028e63_Data>* _95550_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _95569_i) {
	jule::Ptr<_1a4067006_Slc> _95613_slc = _1a405d5d5_Slc((*((*(_95535_d))))._field_Kind.ptr());;
	(*((*(_95535_d))))._field_Kind=(*(_95613_slc))._field_Elem;
	_1a4034dc5_checkIntegerIndexingByData(_self_, _95550_index, (*((*(_95569_i))))._field_Token);
	(*((*(_95535_d))))._field_Lvalue=true;
	if ((!(_1a402986a_IsConst((*(_95550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95535_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a785e7b7:;
			{
				jule::Ptr<_1a3e08a24_SliceExprModel> _96717_m = (*((*(_95535_d))))._field_Model.unsafe_cast_ptr<_1a3e08a24_SliceExprModel>();;
				jule::F64 _96813_indx = _1b289e313_AsF64((*((*(_95550_index))))._field_Constant.ptr());;
				if ((_96813_indx >= static_cast<jule::F64>((*(_96717_m))._field_Elems.len()))) {
					_1a402b1da_pushErr(_self_, (*((*(_95569_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95535_d))))._field_Model=(*(_96717_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96813_indx))];
					(*((*(_95535_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1a785e751:;
	};
}



inline void _1a403604c_indexingMap(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _97835_d, jule::Ptr<_1a4028e63_Data>* _97850_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _97869_i) {
	(*((*(_97835_d))))._field_Lvalue=true;
	if (((*(_97850_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a406869a_Map> _98313_m = _1a405e11e_Map((*((*(_97835_d))))._field_Kind.ptr());;
	_1a4012b72_assignTypeChecker _98413_atc = _1a4012b72_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98313_m))._field_Key, ._field_d=(*(_97850_index)), ._field_errorToken=(*((*(_97869_i))))._field_Token};;
	_1a4013b40_check(&_98413_atc);
	(*((*(_97835_d))))._field_Kind=(*_98313_m.alloc)._field_Val;
}



inline void _1a403646a_indexingStr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _99435_d, jule::Ptr<_1a4028e63_Data>* _99450_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _99469_i) {
	(*((*(_99435_d))))._field_Kind=_1a4151be5_primU8;
	(*((*(_99435_d))))._field_Mutable=false;
	(*((*(_99435_d))))._field_Lvalue=true;
	if (((*(_99450_index)) == nullptr)) {
		return;;
	};
	_1a4034dc5_checkIntegerIndexingByData(_self_, _99450_index, (*((*(_99469_i))))._field_Token);
	if ((!(_1a402986a_IsConst((*(_99450_index)).ptr())))) {
		(*((*(_99435_d))))._field_Constant=nullptr;
		(*((*(_99435_d))))._field_untyped=false;
		return;;
	};
	if (_1a402986a_IsConst((*(_99435_d)).ptr())) {
		jule::Ptr<_1a3db8198_Token> _101213_errorToken = (*((*(_99469_i))))._field_Token;;
		jule::I64 _101313_j = _1b289dce6_AsI64((*((*(_99450_index))))._field_Constant.ptr());;
		jule::Str _101413_s = _1b289d7c9_ReadStr((*((*(_99435_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_101313_j) >= _101413_s.len())) {
			_1a402b1da_pushErr(_self_, _101213_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b289e874_SetU64((*((*(_99435_d))))._field_Constant, static_cast<jule::U64>(_101413_s[_101313_j]));
		};
	};
}



inline void _1a4036888_toIndexing(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _102334_d, jule::Ptr<_1a4028e63_Data>* _102349_index, jule::Ptr<_1a3dd994a_IndexingExpr>* _102368_i) {
	{
		
		if ((_1a405ca9b_Ptr((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a786ae66:;
			{
				_1a40352e3_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a405d34e_Arr((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a786b010:;
			{
				_1a4035711_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a405d5d5_Slc((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a786b076:;
			{
				_1a4035b2e_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a405e11e_Map((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a786b0dc:;
			{
				_1a403604c_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a786b153:;
			{
				jule::Ptr<_1a4062a07_Prim> _103813_prim = _1a405c57e_Prim((*((*(_102334_d))))._field_Kind);;
				{
					
					if (_1a4065e8e_IsStr(_103813_prim.ptr())) {
						_case_begin_1a78704a9:;
						{
							_1a403646a_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1a7870410:;
				};
			}
		}
		_match_end_1a786ad23:;
	};
	_1a402b1da_pushErr(_self_, (*((*(_102368_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_102334_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a4036d3e_pushGenericsFromExprSubIdent(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>* _104914_generics, jule::Ptr<_1a3dd2987_Expr>* _104942_expr) {
	jule::Ptr<_1a3dce027_SubIdentTypeDecl> _105013_t = jule::new_ptr<_1a3dce027_SubIdentTypeDecl>();;
	if ((!(_1a40560a0_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type85), &(_105013_t))))) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*(_104942_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Kind=jule::Any(_105013_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1a403723a_pushGenericsFromData(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>* _105945_generics, jule::Ptr<_1a3dd2987_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*((*(_105973_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a7874a63:;
			{
				jule::Ptr<_1a3dd4a44_UnaryExpr> _106217_u = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dd4a44_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106217_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1a7876229:;
						{
							jule::Ptr<_1a3dd017c_PtrTypeDecl> _106521_kind = jule::new_ptr<_1a3dd017c_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _106621__generics = jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, 1LL);;
							_1a403723a_pushGenericsFromData(_self_, &(_106621__generics), &((*(_106217_u))._field_Expr));
							(*_106521_kind.alloc)._field_Elem=_106621__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*((*(_105973_expr))))._field_Token, ._field_Kind=jule::Any(_106521_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1a7876a32:;
						{
							jule::Ptr<_1a3dce6ed_SptrTypeDecl> _107421_kind = jule::new_ptr<_1a3dce6ed_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _107521__generics = jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, 1LL);;
							_1a403723a_pushGenericsFromData(_self_, &(_107521__generics), &((*(_106217_u))._field_Expr));
							(*_107421_kind.alloc)._field_Elem=_107521__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*((*(_105973_expr))))._field_Token, ._field_Kind=jule::Any(_107421_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1a78758ee:;
						{
							_1a402b1da_pushErr(_self_.ptr(), (*(_106217_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a7875d94:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a7874ac9:;
			{
				{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dcd653_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a7874b40:;
			{
				jule::Ptr<_1a3dd5a9a_SubIdentExpr> _108917_sexpr = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dd5a9a_SubIdentExpr>();;
				return _1a4036d3e_pushGenericsFromExprSubIdent(_self_, &(_108917_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7873e91:;
			{
				jule::Ptr<_1a3dd42a2_IdentExpr> _109217_ident = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dd42a2_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*_109217_ident.alloc)._field_Token, ._field_Ident=(*_109217_ident.alloc)._field_Ident, ._field_Binded=(*(_109217_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a7874007:;
			{
				{
					auto expr = &((*((*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dd357b_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a787d0bb:;
					if (it != expr_end) {
						jule::Ptr<_1a3dd2987_Expr> _110125_texpr = *it;
						{
							if ((!(_1a403723a_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a787d0bb:;
						++it;
						goto _iter_begin_1a787d0bb;
					}
					_iter_end_1a787d0bb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a787406d:;
			{
				jule::Ptr<_1a3dd56c1_NsSelectionExpr> _110717_ns = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1a3dd56c1_NsSelectionExpr>();;
				jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _110817_decl = jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*(_110717_ns))._field_Ident, ._field_Ident=(*((*_110717_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*(_110817_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dce401_NamespaceTypeDecl>(_1a3dce401_NamespaceTypeDecl{._field_Idents=(*_110717_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*_110817_decl.alloc)._field_Token, ._field_Kind=jule::Any(_110817_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1a7873e2a:;
			{
				_1a402b1da_pushErr(_self_.ptr(), (*((*(_105973_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a7873dc5:;
	};
	return true;;
}



inline void _1a403759d_evalIdentDeclFromIndexing(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a4028e63_Data>* _112950_d, jule::Ptr<_1a3dd994a_IndexingExpr>* _112965_i) {
	jule::Ptr<_1a3e0226a_StructIns> _113013_s = _1a405db02_Struct((*((*(_112950_d))))._field_Kind.ptr());;
	if ((_113013_s == nullptr)) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*((*(_112965_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_112950_d))))._field_Kind), &__jule_any_type4)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112965_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7884ec4:;
			{
				jule::Ptr<_1a3dd42a2_IdentExpr> _114017_expr = (*((*((*(_112965_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a3dd42a2_IdentExpr>();;
				_113717_decl=jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*_114017_expr.alloc)._field_Token, ._field_Ident=(*_114017_expr.alloc)._field_Ident, ._field_Binded=(*(_114017_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a78863b0:;
			{
				jule::Ptr<_1a3dd56c1_NsSelectionExpr> _114717_expr = (*((*((*(_112965_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a3dd56c1_NsSelectionExpr>();;
				_113717_decl=jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*(_114717_expr))._field_Ident, ._field_Ident=(*((*_114717_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1a7885557:;
			{
				_1a402b1da_pushErr(_self_, (*((*(_112965_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1a7885502:;
	};
	if ((!(_1a403723a_pushGenericsFromData(_self_, &((*(_113717_decl))._field_Generics), &((*((*(_112965_i))))._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113013_s=({ auto _wrap_copy = _1a403e099_typeChecker(_self_); _1a4070c35_fromStruct(&_wrap_copy, &(_113717_decl), &((*(_113013_s))._field_Decl)); });
	if ((_113013_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(*((*(_112950_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1a4059977_Kind>(_113013_s, 0);
}



inline jule::Bool _1a4037a54_checkGenericFn(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3e172d5_FnIns>* _117239_f, jule::Ptr<_1a3db8198_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _11739_ok = _1a3ea69a1_reloadFnInsTypes((*(_self_))._field_s, (*(_117239_f)));;
	(*((*(_117239_f))))._field_reloaded=true;
	if ((!(_11739_ok))) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _117813_existInstance = _1a3e15e4e_appendInstance((*((*(_117239_f))))._field_Decl.ptr(), _117239_f);;
	if ((!(_1a3ea5a05_checkConstraintsFn((*_self_.alloc)._field_s, _117239_f, _117255_et, _117813_existInstance)))) {
		return false;;
	};
	if ((_117813_existInstance != nullptr)) {
		_1a4055d3b_updateModelToGenericIns(_117272_model, &(_117813_existInstance));
		_1a788e275_updateRefer(_1a402e1dd_getOwnerRefers(_self_), _117239_f, &(_117813_existInstance));
		(*(_117239_f))=_117813_existInstance;
	} else {
		_1a3eb5d01_checkFnInsCaller((*_self_.alloc)._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1a4037db7_evalFnGenericFromIndexing(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a4028e63_Data>* _120150_d, jule::Ptr<_1a3dd994a_IndexingExpr>* _120165_i) {
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _120213_generics = jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a403723a_pushGenericsFromData(_self_, &(_120213_generics), &((*((*(_120165_i))))._field_Index))))) {
		(*(_120150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _120813_f = _1a405d86b_Fn((*((*(_120150_d))))._field_Kind.ptr());;
	jule::I64 _120913_genericsLen = 0LL;;
	if (((*(_120813_f))._field_Decl != nullptr)) {
		_120913_genericsLen=(*(*_120813_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a3e9c04b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _120913_genericsLen, _120213_generics.len(), (*((*((*(_120165_i))))._field_Expr))._field_Token)))) {
		(*(_120150_d))=nullptr;
		return;;
	};
	(*_120813_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a4058547_InsGeneric>>::alloc(0LL, (*(*_120813_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120213_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7895d92:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcd653_TypeDecl> _122021_g = *it;
			{
				jule::Ptr<_1a4028e63_Data> _122117_k = _1a403e3da_evalType(_self_, _122021_g);;
				if ((_122117_k == nullptr)) {
					(*(_120150_d))=nullptr;
					return;;
				};
				(*_120813_f.alloc)._field_Generics=jule::append((*_120813_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a4058547_InsGeneric>>::make({jule::new_ptr<_1a4058547_InsGeneric>(_1a4058547_InsGeneric{._field_Kind=(*(_122117_k))._field_Kind, })}));
			}
			_iter_next_1a7895d92:;
			++it;
			goto _iter_begin_1a7895d92;
		}
		_iter_end_1a7895d92:;
	};
	if (_1a3e1876a_IsBuiltin(_120813_f)) {
		return;;
	};
	if (_1a4037a54_checkGenericFn(_self_, &(_120813_f), &((*(*((*(_120165_i))))._field_Expr.alloc)._field_Token), &((*((*(_120150_d))))._field_Model))) {
		(*(*((*(_120150_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1a4059977_Kind>(_120813_f, 1);
	} else {
		(*(_120150_d))=nullptr;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4038208_evalIndexing(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd994a_IndexingExpr> _124036_i) {
	jule::Ptr<_1a4059e2d_TypeKind> _124113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124113_prefix;
	});;
	jule::Ptr<_1a4028e63_Data> _124513_d = _1a40480d6_evalExprKind(_self_, (*((*(_124036_i))._field_Expr))._field_Kind);;
	if ((_124513_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124513_d))._field_Decl) {
		_1a403759d_evalIdentDeclFromIndexing(_self_, &(_124513_d), &(_124036_i));
		return _124513_d;;
	};
	if ((_1a405d86b_Fn((*(_124513_d))._field_Kind.ptr()) != nullptr)) {
		_1a4037db7_evalFnGenericFromIndexing(_self_, &(_124513_d), &(_124036_i));
		return _124513_d;;
	};
	_1a4028e63_Data _126113_oldData = (*(_124513_d));;
	jule::Ptr<_1a4028e63_Data> _126313_index = _1a4048dea_evalExpr(_self_, (*_124036_i.alloc)._field_Index);;
	if ((_126313_index == nullptr)) {
		return nullptr;;
	};
	(*(_124513_d))._field_Decl=false;
	_1a4036888_toIndexing(_self_, &(_124513_d), &(_126313_index), &(_124036_i));
	if (_1a402986a_IsConst(_124513_d.ptr())) {
		(*(_124513_d))._field_Decl=false;
		(*(_124513_d))._field_Model=jule::Any((*(_124513_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124513_d))._field_Decl) {
		(*(_124513_d))._field_Decl=false;
	} else {
		(*(_124513_d))._field_Model=jule::Any(jule::new_ptr<_1a3e08eca_IndexingExprModel>(_1a3e08eca_IndexingExprModel{._field_Token=(*_124036_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a4028e63_Data>(_126113_oldData), ._field_Index=_126313_index}), &__jule_any_type45);
	};
	return _124513_d;;
}



inline __jule_tuple_x_1a4028e63_Data__jule_tuple_x_1a4028e63_Data _1a4038549_evalSlicingExprs(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dda0aa_SlicingExpr>* _129441_s) {
	__jule_tuple_x_1a4028e63_Data__jule_tuple_x_1a4028e63_Data __jule_func_result;
	jule::Ptr<_1a4059e2d_TypeKind> _129513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129513_prefix;
	});;
	jule::Ptr<_1a4028e63_Data> _129917_l = nullptr;;
	jule::Ptr<_1a4028e63_Data> _130017_r = nullptr;;
	if (((*((*(_129441_s))))._field_Start != nullptr)) {
		_129917_l=_1a4048dea_evalExpr(_self_, (*((*(_129441_s))))._field_Start);
		if ((_129917_l != nullptr)) {
			_1a4034dc5_checkIntegerIndexingByData(_self_, &(_129917_l), (*((*(_129441_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129917_l=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150de2_primInt, ._field_Constant=static__1b289ba91_NewI64(0LL)});
		(*((*(_129917_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_129917_l.alloc)._field_Model=jule::Any((*_129917_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129441_s))))._field_To != nullptr)) {
		_130017_r=_1a4048dea_evalExpr(_self_, (*((*(_129441_s))))._field_To);
		if ((_130017_r != nullptr)) {
			_1a4034dc5_checkIntegerIndexingByData(_self_, &(_130017_r), (*((*(_129441_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129917_l;
	__jule_func_result.__jule_result_arg1 = _130017_r;
	return __jule_func_result;;
}



inline void _1a4038802_slicingArr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _133030_d) {
	jule::Ptr<_1a4059e2d_TypeKind> _133113_elemType = (*(_1a405d34e_Arr((*((*(_133030_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133030_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4067006_Slc>(_1a4067006_Slc{._field_Elem=_133113_elemType}), 22)});
	(*((*(_133030_d))))._field_Lvalue=false;
	(*((*(_133030_d))))._field_Mutable=((*((*(_133030_d))))._field_Mutable || (!(_1a405b7ae_Mutable(_133113_elemType.ptr()))));
}



inline void _1a4038c20_slicingStr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _134530_d, jule::Ptr<_1a4028e63_Data>* _134541_l, jule::Ptr<_1a4028e63_Data>* _134552_r) {
	(*((*(_134530_d))))._field_Lvalue=false;
	(*((*(_134530_d))))._field_Mutable=true;
	if ((!(_1a402986a_IsConst((*(_134530_d)).ptr())))) {
		return;;
	};
	if ((((*(_134541_l)) == nullptr) || ((*(_134552_r)) == nullptr))) {
		(*((*(_134530_d))))._field_Constant=nullptr;
		(*((*(_134530_d))))._field_untyped=false;
		return;;
	};
	if ((_1a402986a_IsConst((*(_134541_l)).ptr()) && _1a402986a_IsConst((*(_134552_r)).ptr()))) {
		jule::I64 _135913_left = _1b289dce6_AsI64((*((*(_134541_l))))._field_Constant.ptr());;
		if ((_135913_left < 0LL)) {
			return;;
		};
		jule::Str _136413_s = _1b289d7c9_ReadStr((*((*(_134530_d))))._field_Constant);;
		jule::I64 _136517_right = static_cast<jule::I64>(0LL);;
		if (((*(_134552_r)) == nullptr)) {
			_136517_right=static_cast<jule::I64>(_136413_s.len());
		} else {
			_136517_right=_1b289dce6_AsI64((*((*(_134552_r))))._field_Constant);
		};
		if ((_135913_left > _136517_right)) {
			return;;
		};
		_1b289edd5_SetStr((*((*(_134530_d))))._field_Constant, _136413_s.slice(_135913_left, _136517_right));
		(*((*(_134530_d))))._field_Decl=true;
	} else {
		(*((*(_134530_d))))._field_Constant=nullptr;
		(*((*(_134530_d))))._field_untyped=false;
	};
}



inline void _1a40391e8_checkSlicing(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _138336_d, jule::Ptr<_1a4028e63_Data>* _138347_l, jule::Ptr<_1a4028e63_Data>* _138358_r, jule::Ptr<_1a3dda0aa_SlicingExpr>* _138369_s) {
	{
		
		if ((_1a405d34e_Arr((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a78b160a:;
			{
				_1a4038802_slicingArr(_self_, _138336_d);
				return;;
			}
		}
		else if ((_1a405d5d5_Slc((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a78b16a4:;
			{
				return;;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a78b171a:;
			{
				jule::Ptr<_1a4062a07_Prim> _139113_prim = _1a405c57e_Prim((*((*(_138336_d))))._field_Kind);;
				{
					
					if (_1a4065e8e_IsStr(_139113_prim.ptr())) {
						_case_begin_1a78b3e9d:;
						{
							_1a4038c20_slicingStr(_self_, _138336_d, _138347_l, _138358_r);
							return;;
						}
					}
					_match_end_1a78b3e04:;
				};
			}
		}
		_match_end_1a78b14d9:;
	};
	_1a402b1da_pushErr(_self_, (*((*(_138369_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_138336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1a4028e63_Data> _1a4039539_evalSlicing(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dda0aa_SlicingExpr> _140235_s) {
	jule::Ptr<_1a4028e63_Data> _140313_d = _1a4048dea_evalExpr(_self_, (*(_140235_s))._field_Expr);;
	if ((_140313_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _140813_l;;
	jule::Ptr<_1a4028e63_Data> _140820_r;;
	({
		__jule_tuple_x_1a4028e63_Data__jule_tuple_x_1a4028e63_Data __jule_assign_result = _1a4038549_evalSlicingExprs(_self_, &(_140235_s));
		_140813_l = __jule_assign_result.__jule_result_arg0;
		_140820_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140813_l == nullptr)) {
		return _140313_d;;
	};
	(*(_140313_d))._field_Decl=false;
	_1a40391e8_checkSlicing(_self_, &(_140313_d), &(_140813_l), &(_140820_r), &(_140235_s));
	if (_1a402986a_IsConst(_140313_d.ptr())) {
		(*(_140313_d))._field_Decl=false;
		(*(_140313_d))._field_Model=jule::Any((*(_140313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140313_d))._field_Decl) {
		(*(_140313_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a3e0a2b7_SlicingExprModel> _142617_model = jule::new_ptr<_1a3e0a2b7_SlicingExprModel>(_1a3e0a2b7_SlicingExprModel{._field_Token=(*_140235_s.alloc)._field_Token, ._field_Expr=(*(_140313_d))._field_Model, ._field_Left=(*(_140813_l))._field_Model, });;
		if ((_140820_r != nullptr)) {
			(*(_142617_model))._field_Right=(*_140820_r.alloc)._field_Model;
		};
		(*(_140313_d))._field_Model=jule::Any(_142617_model, &__jule_any_type91);
	};
	return _140313_d;;
}



inline void _1a4039957_castPtr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _143930_t, jule::Ptr<_1a4028e63_Data> _143948_d, jule::Ptr<_1a3db8198_Token> _143958_errorToken) {
	(*(_143948_d))._field_Constant=nullptr;
	(*_143948_d.alloc)._field_untyped=false;
	jule::Ptr<_1a4066533_Sptr> _14429_sptr = _1a405c815_Sptr((*_143948_d.alloc)._field_Kind.ptr());;
	if ((_14429_sptr != nullptr)) {
		if ((!(_1a405a637_Equal((*(_1a405ca9b_Ptr(_143930_t.ptr())))._field_Elem, (*_14429_sptr.alloc)._field_Elem)))) {
			_1a402b1da_pushErr(_self_, _143958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_143948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_143930_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1a402bbd0_isUnsafe(_self_)))) {
		_1a402b1da_pushErr(_self_, _143958_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _14559_prim = _1a405c57e_Prim((*_143948_d.alloc)._field_Kind);;
	if (((_1a405ca9b_Ptr((*_143948_d.alloc)._field_Kind) == nullptr) && ((_14559_prim == nullptr) || (!(_1b289a9d5_IsInt(_1a4062d48_Str(_14559_prim.ptr()))))))) {
		_1a402b1da_pushErr(_self_, _143958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_143948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_143930_t), &__jule_any_type4)}));
	};
}



inline void _1a4039d75_castStruct(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _146133_t, jule::Ptr<_1a4028e63_Data> _146151_d, jule::Ptr<_1a3db8198_Token> _146161_errorToken) {
	(*(_146151_d))._field_Constant=nullptr;
	(*_146151_d.alloc)._field_untyped=false;
	jule::Ptr<_1a3e276ad_Trait> _146413_tr = _1a405dd88_Trait((*_146151_d.alloc)._field_Kind.ptr());;
	if ((_146413_tr == nullptr)) {
		_1a402b1da_pushErr(_self_, _146161_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_146151_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_146133_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _147013_s = _1a405db02_Struct(_146133_t);;
	_1a78c9bd9_pushReference(_self_, &(_147013_s));
	if ((!(_1a3e00b2b_IsImplements((*(_147013_s))._field_Decl.ptr(), _146413_tr)))) {
		_1a402b1da_pushErr(_self_, _146161_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_146151_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_146133_t), &__jule_any_type4)}));
	};
}



inline void _1a403a293_castRef(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _147830_t, jule::Ptr<_1a4028e63_Data> _147848_d, jule::Ptr<_1a3db8198_Token> _147858_errorToken) {
	(*(_147848_d))._field_Constant=nullptr;
	(*_147848_d.alloc)._field_untyped=false;
	jule::Ptr<_1a4066533_Sptr> _148113_sptr = _1a405c815_Sptr(_147830_t.ptr());;
	jule::Ptr<_1a4069cea_Ptr> _148313_ptr = _1a405ca9b_Ptr((*_147848_d.alloc)._field_Kind.ptr());;
	if (((_148313_ptr != nullptr) && _1a405a637_Equal((*(_148113_sptr))._field_Elem, (*_148313_ptr.alloc)._field_Elem))) {
		if ((!(_1a402bbd0_isUnsafe(_self_)))) {
			_1a402b1da_pushErr(_self_, _147858_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a405db02_Struct((*_148113_sptr.alloc)._field_Elem) != nullptr)) {
		_1a4039d75_castStruct(_self_, (*_148113_sptr.alloc)._field_Elem, _147848_d, _147858_errorToken);
		return;;
	};
	_1a402b1da_pushErr(_self_, _147858_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_147848_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_147830_t), &__jule_any_type4)}));
}



inline void _1a403a6b1_castSlc(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _150130_t, jule::Ptr<_1a4028e63_Data> _150148_d, jule::Ptr<_1a3db8198_Token> _150158_errorToken) {
	jule::Ptr<_1b289b651_Const> _15029_c = (*(_150148_d))._field_Constant;;
	(*_150148_d.alloc)._field_Constant=nullptr;
	(*_150148_d.alloc)._field_untyped=false;
	if ((_1a405cd32_Enum((*_150148_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a405c57e_Prim((*((*(_1a405cd32_Enum((*_150148_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a4065e8e_IsStr(_1a405c57e_Prim((*(*(_1a405cd32_Enum((*_150148_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1a402b1da_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_150148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_150130_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1a405c57e_Prim((*_150148_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a4065e8e_IsStr(_1a405c57e_Prim((*_150148_d.alloc)._field_Kind).ptr()))))) {
		_1a402b1da_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_150148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_150130_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150130_t=(*(_1a405d5d5_Slc(_150130_t.ptr())))._field_Elem;
	jule::Ptr<_1a4062a07_Prim> _15179_prim = _1a405c57e_Prim(_150130_t);;
	if (((_15179_prim == nullptr) || ((!(_1a40643ee_IsU8(_15179_prim.ptr()))) && (!(_1a4063dd2_IsI32(_15179_prim.ptr())))))) {
		_1a402b1da_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_150148_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_150130_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15029_c != nullptr)) {
		{
			
			if (_1a40643ee_IsU8(_15179_prim.ptr())) {
				_case_begin_1a78dd99a:;
				{
					jule::Str _152717_s = _1b289d7c9_ReadStr(_15029_c);;
					jule::Ptr<_1a3e08a24_SliceExprModel> _152821_model = jule::new_ptr<_1a3e08a24_SliceExprModel>(_1a3e08a24_SliceExprModel{._field_ElemKind=_150130_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a78e04a2:;
						if (it != expr_end) {
							jule::U8 *_153224_b = it;
							{
								jule::Ptr<_1b289b651_Const> _153325_bc = static__1b289bd5a_NewU64(static_cast<jule::U64>((*(_153224_b))));;
								(*(_153325_bc))._field_Kind=(*(_15179_prim))._field_Kind;
								(*(_152821_model))._field_Elems=jule::append((*_152821_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153325_bc, &__jule_any_type19)}));
							}
							_iter_next_1a78e04a2:;
							++it;
							goto _iter_begin_1a78e04a2;
						}
						_iter_end_1a78e04a2:;
					};
					(*_150148_d.alloc)._field_Model=jule::Any(_152821_model, &__jule_any_type76);
					(*_150148_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a4063dd2_IsI32(_15179_prim.ptr())) {
				_case_begin_1a78dda44:;
				{
					jule::Slice<jule::I32> _154017_runes = static_cast<jule::Slice<jule::I32>>(_1b289d7c9_ReadStr(_15029_c));;
					jule::Ptr<_1a3e08a24_SliceExprModel> _154121_model = jule::new_ptr<_1a3e08a24_SliceExprModel>(_1a3e08a24_SliceExprModel{._field_ElemKind=_150130_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a78e38b2:;
						if (it != expr_end) {
							jule::I32 *_154524_r = it;
							{
								jule::Ptr<_1b289b651_Const> _154625_rc = static__1b289ba91_NewI64(static_cast<jule::I64>((*(_154524_r))));;
								(*(_154625_rc))._field_Kind=(*(_15179_prim))._field_Kind;
								(*(_154121_model))._field_Elems=jule::append((*_154121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154625_rc, &__jule_any_type19)}));
							}
							_iter_next_1a78e38b2:;
							++it;
							goto _iter_begin_1a78e38b2;
						}
						_iter_end_1a78e38b2:;
					};
					(*_150148_d.alloc)._field_Model=jule::Any(_154121_model, &__jule_any_type76);
					(*_150148_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1a78dd8bd:;
		};
	};
}



inline void _1a403aa24_castStr(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data> _155630_d, jule::Ptr<_1a3db8198_Token> _155640_errorToken) {
	if ((_1a405cd32_Enum((*(_155630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3e29db9_Enum> _155817_e = _1a405cd32_Enum((*_155630_d.alloc)._field_Kind);;
		if (((_1a405c57e_Prim((*((*(_155817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a4065e8e_IsStr(_1a405c57e_Prim((*(*_155817_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b289b651_Const> _15649_c = (*_155630_d.alloc)._field_Constant;;
	(*_155630_d.alloc)._field_Constant=nullptr;
	(*_155630_d.alloc)._field_untyped=false;
	if ((_1a405c57e_Prim((*_155630_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a4062a07_Prim> _156813_prim = _1a405c57e_Prim((*_155630_d.alloc)._field_Kind);;
		if (((!(_1a40643ee_IsU8(_156813_prim.ptr()))) && (!(_1a4063dd2_IsI32(_156813_prim))))) {
			_1a402b1da_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15649_c != nullptr)) {
			{
				
				if (_1a40643ee_IsU8(_156813_prim)) {
					_case_begin_1a78eb205:;
					{
						(*_155630_d.alloc)._field_Constant=static__1b289c3dd_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1b289e07c_AsU64(_15649_c))));
						(*_155630_d.alloc)._field_Model=jule::Any((*_155630_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155630_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a4063dd2_IsI32(_156813_prim)) {
					_case_begin_1a78eb29e:;
					{
						(*_155630_d.alloc)._field_Constant=static__1b289c3dd_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1b289dce6_AsI64(_15649_c))));
						(*_155630_d.alloc)._field_Model=jule::Any((*_155630_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155630_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1a78eb106:;
			};
		};
		return;;
	};
	jule::Ptr<_1a4067006_Slc> _158913_s = _1a405d5d5_Slc((*_155630_d.alloc)._field_Kind);;
	if ((_158913_s == nullptr)) {
		_1a402b1da_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _159513_t = (*(_158913_s))._field_Elem;;
	jule::Ptr<_1a4062a07_Prim> _15969_prim = _1a405c57e_Prim(_159513_t.ptr());;
	if (((_15969_prim == nullptr) || ((!(_1a40643ee_IsU8(_15969_prim.ptr()))) && (!(_1a4063dd2_IsI32(_15969_prim.ptr())))))) {
		_1a402b1da_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1a403ae42_castInt(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _160330_t, jule::Ptr<_1a4028e63_Data> _160348_d, jule::Ptr<_1a3db8198_Token> _160358_errorToken) {
	if (_1a402986a_IsConst(_160348_d.ptr())) {
		jule::Ptr<_1a4062a07_Prim> _160513_prim = _1a405c57e_Prim(_160330_t.ptr());;
		{
			
			if (_1b289a40d_IsSigInt((*(_160513_prim))._field_Kind)) {
				_case_begin_1a7904791:;
				{
					_1b289e5bb_SetI64((*_160348_d.alloc)._field_Constant.ptr(), _1b289dce6_AsI64((*_160348_d.alloc)._field_Constant));
				}
			}
			else if (_1b289a71b_IsUnsigInt((*(_160513_prim))._field_Kind)) {
				_case_begin_1a790483a:;
				{
					_1b289e874_SetU64((*_160348_d.alloc)._field_Constant.ptr(), _1b289e07c_AsU64((*_160348_d.alloc)._field_Constant));
				}
			}
			_match_end_1a7904719:;
		};
	} else {
		(*(_160348_d))._field_Constant=nullptr;
		(*_160348_d.alloc)._field_untyped=false;
	};
	if ((_1a405cd32_Enum((*(_160348_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3e29db9_Enum> _161813_e = _1a405cd32_Enum((*_160348_d.alloc)._field_Kind);;
		if (_1b289b0ac_IsNum(_1a405a2e6_Str((*((*(_161813_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a405c815_Sptr((*_160348_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a4062a07_Prim> _162513_prim = _1a405c57e_Prim(_160330_t.ptr());;
		if ((!(_1a4065972_IsUintptr(_162513_prim.ptr())))) {
			_1a402b1da_pushErr(_self_, _160358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_160348_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_160330_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1a405ca9b_Ptr((*_160348_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a4062a07_Prim> _163213_prim = _1a405c57e_Prim(_160330_t);;
		if (_1a4065972_IsUintptr(_163213_prim.ptr())) {
		} else if ((!(_1a402bbd0_isUnsafe(_self_)))) {
			_1a402b1da_pushErr(_self_, _160358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _16419_prim = _1a405c57e_Prim((*_160348_d.alloc)._field_Kind);;
	if (((_16419_prim != nullptr) && _1b289b0ac_IsNum(_1a4062d48_Str(_16419_prim)))) {
		return;;
	};
	_1a402b1da_pushErr(_self_, _160358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_160348_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_160330_t), &__jule_any_type4)}));
}



inline void _1a403b360_castNum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _164930_t, jule::Ptr<_1a4028e63_Data> _164948_d, jule::Ptr<_1a3db8198_Token> _164958_errorToken) {
	if (_1a402986a_IsConst(_164948_d.ptr())) {
		jule::Ptr<_1a4062a07_Prim> _165113_prim = _1a405c57e_Prim(_164930_t.ptr());;
		{
			
			if (_1b289ad26_IsFloat((*(_165113_prim))._field_Kind)) {
				_case_begin_1a7910aaa:;
				{
					_1b28a018d_SetF64((*_164948_d.alloc)._field_Constant.ptr(), _1b289e313_AsF64((*_164948_d.alloc)._field_Constant));
				}
			}
			else if (_1b289a40d_IsSigInt((*(_165113_prim))._field_Kind)) {
				_case_begin_1a7910b54:;
				{
					_1b289e5bb_SetI64((*_164948_d.alloc)._field_Constant.ptr(), _1b289dce6_AsI64((*_164948_d.alloc)._field_Constant));
				}
			}
			else if (_1b289a71b_IsUnsigInt((*(_165113_prim))._field_Kind)) {
				_case_begin_1a7910bba:;
				{
					_1b289e874_SetU64((*_164948_d.alloc)._field_Constant.ptr(), _1b289e07c_AsU64((*_164948_d.alloc)._field_Constant));
				}
			}
			_match_end_1a79109de:;
		};
	} else {
		(*(_164948_d))._field_Constant=nullptr;
		(*_164948_d.alloc)._field_untyped=false;
	};
	if ((_1a405cd32_Enum((*(_164948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3e29db9_Enum> _166613_e = _1a405cd32_Enum((*_164948_d.alloc)._field_Kind);;
		if (_1b289b0ac_IsNum(_1a405a2e6_Str((*((*(_166613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a4062a07_Prim> _16729_prim = _1a405c57e_Prim((*_164948_d.alloc)._field_Kind);;
	if (((_16729_prim != nullptr) && _1b289b0ac_IsNum(_1a4062d48_Str(_16729_prim)))) {
		return;;
	};
	_1a402b1da_pushErr(_self_, _164958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_164948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_164930_t.ptr()), &__jule_any_type4)}));
}



inline void _1a403b77d_castPrim(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _168031_t, jule::Ptr<_1a4028e63_Data> _168049_d, jule::Ptr<_1a3db8198_Token> _168059_errorToken) {
	jule::Ptr<_1a4062a07_Prim> _16819_prim = _1a405c57e_Prim(_168031_t.ptr());;
	{
		
		if (_1a4066225_IsAny(_16819_prim.ptr())) {
			_case_begin_1a7919069:;
			{
				(*(_168049_d))._field_Constant=nullptr;
				(*_168049_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a4065e8e_IsStr(_16819_prim.ptr())) {
			_case_begin_1a7918c39:;
			{
				_1a403aa24_castStr(_self_, _168049_d, _168059_errorToken);
			}
		}
		else if (_1b289a9d5_IsInt(_1a4062d48_Str(_16819_prim.ptr()))) {
			_case_begin_1a7918ca0:;
			{
				_1a403ae42_castInt(_self_, _168031_t, _168049_d, _168059_errorToken);
			}
		}
		else if (_1b289b0ac_IsNum(_1a4062d48_Str(_16819_prim.ptr()))) {
			_case_begin_1a7918d16:;
			{
				_1a403b360_castNum(_self_, _168031_t, _168049_d, _168059_errorToken);
			}
		}
		else {
			_case_begin_1a7918bc3:;
			{
				_1a402b1da_pushErr(_self_, _168059_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str(_168031_t), &__jule_any_type4)}));
			}
		}
		_match_end_1a7918b6d:;
	};
}



inline void _1a403bae1_castConstant(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _169836_t, jule::Ptr<_1a4028e63_Data>* _169855_d) {
	if ((((*(_169855_d)) == nullptr) || (!(_1a402986a_IsConst((*(_169855_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _17029_prim = _1a405c57e_Prim((*(_169836_t)).ptr());;
	_1a405581e_castConstByType(&((*(_17029_prim))._field_Kind), _169855_d);
	(*((*(_169855_d))))._field_Model=jule::Any((*((*(_169855_d))))._field_Constant, &__jule_any_type19);
}



inline void _1a403c00e_castTypeEnum(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _170736_t, jule::Ptr<_1a4028e63_Data>* _170755_d, jule::Ptr<_1a3db8198_Token>* _170770_errorToken) {
	jule::I64 _17089_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a3ea3e87_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_170755_d))))._field_Kind), _170736_t, _170770_errorToken)))) {
		(*(*(_self_))._field_s.alloc)._field_errors=(*(*(_self_))._field_s.alloc)._field_errors.slice(0LL, _17089_n);
		_1a402b1da_pushErr(_self_, (*(_170770_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_170755_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_170736_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170755_d))))._field_Constant=nullptr;
	(*((*(_170755_d))))._field_untyped=false;
}



inline void _1a403c42c_castTypeEnumT(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _171737_t, jule::Ptr<_1a4028e63_Data>* _171756_d, jule::Ptr<_1a3db8198_Token>* _171771_errorToken) {
	jule::I64 _17189_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a3ea3e87_checkTypeCompatibility((*(_self_))._field_s, _171737_t, &((*((*(_171756_d))))._field_Kind), _171771_errorToken)))) {
		(*(*(_self_))._field_s.alloc)._field_errors=(*(*(_self_))._field_s.alloc)._field_errors.slice(0LL, _17189_n);
		_1a402b1da_pushErr(_self_, (*(_171771_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_171756_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_171737_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171756_d))))._field_Constant=nullptr;
	(*((*(_171756_d))))._field_untyped=false;
}



inline jule::Ptr<_1a4028e63_Data> _1a403c8d3_evalCastByTypeNData(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4059e2d_TypeKind> _172742_t, jule::Ptr<_1a4028e63_Data> _172760_d, jule::Ptr<_1a3db8198_Token> _172774_errorToken) {
	if (((_172760_d != nullptr) && (*_172760_d.alloc)._field_Decl)) {
		_1a402b1da_pushErr(_self_, _172774_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a402934d_IsNil(_172760_d)) {
			_case_begin_1a7926829:;
			{
				if ((!(_1a405bccb_NilCompatible(_172742_t.ptr())))) {
					_1a402b1da_pushErr(_self_, _172774_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1a405a2e6_Str(_172742_t), &__jule_any_type4)}));
				};
				(*_172760_d.alloc)._field_Constant=nullptr;
				(*_172760_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a405c57e_Prim((*_172760_d.alloc)._field_Kind.ptr()) != nullptr) && _1a4066225_IsAny(_1a405c57e_Prim((*_172760_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1a7926890:;
			{
				if ((_1a405cd32_Enum(_172742_t.ptr()) != nullptr)) {
					_1a402b1da_pushErr(_self_, _172774_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a402b54d_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a405d0b8_TypeEnum(_172742_t.ptr()) != nullptr)) {
					_1a402b1da_pushErr(_self_, _172774_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_172760_d.alloc)._field_Constant=nullptr;
				(*_172760_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*_172760_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7926906:;
			{
				_1a403c00e_castTypeEnum(_self_, &(_172742_t), &(_172760_d), &(_172774_errorToken));
			}
		}
		else if ((_1a405d0b8_TypeEnum(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a792696c:;
			{
				_1a403c42c_castTypeEnumT(_self_, &(_172742_t), &(_172760_d), &(_172774_errorToken));
			}
		}
		else if ((_1a405ca9b_Ptr(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a79269d3:;
			{
				_1a4039957_castPtr(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1a405c815_Sptr(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a7926a49:;
			{
				_1a403a293_castRef(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1a405d5d5_Slc(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a79276d7:;
			{
				_1a403a6b1_castSlc(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1a405db02_Struct(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a792774d:;
			{
				_1a4039d75_castStruct(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1a405c57e_Prim(_172742_t.ptr()) != nullptr)) {
			_case_begin_1a79277b4:;
			{
				_1a403b77d_castPrim(_self_, _172742_t, _172760_d, _172774_errorToken);
				_1a403bae1_castConstant(_self_, &(_172742_t), &(_172760_d));
			}
		}
		else {
			_case_begin_1a79267b3:;
			{
				_1a402b1da_pushErr(_self_, _172774_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str(_172742_t.ptr()), &__jule_any_type4)}));
				_172760_d=nullptr;
			}
		}
		_match_end_1a792674c:;
	};
	if ((_172760_d == nullptr)) {
		return nullptr;;
	};
	(*_172760_d.alloc)._field_Mutable=((*_172760_d.alloc)._field_Mutable || (!(_1a405b7ae_Mutable((*_172760_d.alloc)._field_Kind.ptr()))));
	if (((!((*_172760_d.alloc)._field_Decl)) && ((_1a405cd32_Enum((*_172760_d.alloc)._field_Kind) == nullptr) || (!(_1a405a637_Equal((*((*(_1a405cd32_Enum((*_172760_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _172742_t)))))) {
		_1a4054b09_applyCastKind(&(_172760_d), &(_172742_t), &(_172774_errorToken));
		(*((*_172760_d.alloc)._field_Model.cast_ptr<_1a3e07c98_CastingExprModel>(&__jule_any_type92)))._field_Token=_172774_errorToken;
	} else {
		(*_172760_d.alloc)._field_Kind=_172742_t;
	};
	(*_172760_d.alloc)._field_Decl=false;
	(*_172760_d.alloc)._field_Lvalue=false;
	(*_172760_d.alloc)._field_untyped=false;
	if (_1a402986a_IsConst(_172760_d)) {
		(*((*_172760_d.alloc)._field_Constant))._field_Kind=(*(_1a405c57e_Prim(_172742_t.ptr())))._field_Kind;
	};
	return _172760_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a403cd89_evalCastT(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a4059e2d_TypeKind>* _180034_t, jule::Ptr<_1a3dd2987_Expr>* _180053_e, jule::Ptr<_1a3db8198_Token>* _180068_et) {
	jule::Ptr<_1a4059e2d_TypeKind> _180113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180113_prefix;
	});;
	if ((_1a405d5d5_Slc((*(_180034_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180053_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1a793797d:;
				{
					(*_self_.alloc)._field_prefix=(*(_180034_t));
				}
			}
			_match_end_1a7937917:;
		};
	};
	jule::Ptr<_1a4028e63_Data> _181013_d = _1a4048dea_evalExpr(_self_, (*(_180053_e)));;
	if (((_181013_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181013_d;;
	};
	return _1a403c8d3_evalCastByTypeNData(_self_, (*(_180034_t)), _181013_d, (*(_180068_et)));;
}



inline jule::Ptr<_1a4028e63_Data> _1a403d1ca_evalCast(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd52e7_CastExpr> _181732_c) {
	jule::Ptr<_1a4062100_TypeSymbol> _181813_t = _1a3e1bd34_buildType((*(_181732_c))._field_Kind);;
	jule::Bool _18199_ok = _1a3ea168d_checkType((*(_self_))._field_s, &(_181813_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18199_ok))) {
		return nullptr;;
	};
	return _1a403cd89_evalCastT(_self_, &((*(_181813_t))._field_Kind), &((*_181732_c.alloc)._field_Expr), &((*((*_181732_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a4028e63_Data> _1a403d51b_evalNsSelection(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dd56c1_NsSelectionExpr> _182634_s) {
	jule::Str _18279_path = _1a4076972_buildLinkPathByTokens(&((*(_182634_s))._field_Ns));;
	jule::Ptr<_1a3e77a60_ImportInfo> _182813_imp = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4077d08_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>([=](jule::Ptr<_1a3e77a60_ImportInfo> _182849_imp) mutable -> jule::Bool {
		if ((((*_182634_s.alloc)._field_Ns.len() == 1LL) && ((*(_182849_imp))._field_Alias == _18279_path))) {
			return true;;
		};
		return (((*_182849_imp.alloc)._field_LinkPath == _18279_path) && _1a3e7a678_isAccessibleViaSelection(_182849_imp));;
	}));;
	if ((_182813_imp == nullptr)) {
		_1a402b1da_pushErr(_self_, (*_182634_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18279_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1a4079a1e_Lookup> _184013_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_182813_imp, 1);
	;
	_1a402b949_disallowBuiltin(_self_);
	jule::Any _184513_def = _1a402de57_getDef(_self_, &((*((*_182634_s.alloc)._field_Ident))._field_Kind), false);;
	_1a402b74b_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184013_lookup;
	jule::Ptr<_1a4028e63_Data> _184813_d = _1a4033115_evalDef(_self_, &(_184513_def), (*_182634_s.alloc)._field_Ident);;
	return _184813_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a403d9c2_evalStructLitExplicit(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3e0226a_StructIns> _185245_s, jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _185313_exprs, jule::Ptr<_1a3db8198_Token> _185333_errorToken) {
	jule::Bool _18549_ok = _1a3e9c04b_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185245_s))._field_Decl))._field_Generics.len(), (*_185245_s.alloc)._field_Generics.len(), _185333_errorToken);;
	if ((!(_18549_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185245_s.alloc)._field_Decl))) {
		_1a402b1da_pushErr(_self_, _185333_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185245_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1a78c9bd9_pushReference(_self_, &(_185245_s));
	_1a4031311_checkDeprecated(_self_, &((*(*_185245_s.alloc)._field_Decl.alloc)._field_Directives), _185333_errorToken);
	_1a401c2db_structLitChecker _186713_slc = _1a401c2db_structLitChecker{._field_e=_self_, ._field_errorToken=_185333_errorToken, ._field_s=_185245_s, };;
	_1a401da29_check(&_186713_slc, &(_185313_exprs));
	jule::Ptr<_1a4028e63_Data> _187413_d = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_185245_s, 0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a3e07418_StructLitExprModel>(_1a3e07418_StructLitExprModel{._field_Strct=_185245_s, ._field_Args=_186713_slc._field_args}), &__jule_any_type94), });;
	if ((*(*_185245_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187413_d))._field_Kind))._field_BindIdent=(*(*_185245_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187413_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a403dd13_evalStructLit(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd79d1_StructLit> _189037_lit) {
	jule::Ptr<_1a4062100_TypeSymbol> _189113_t = _1a3e1bd34_buildType((*(_189037_lit))._field_Kind);;
	jule::Bool _18929_ok = _1a3ea168d_checkType((*(_self_))._field_s, &(_189113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18929_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _189713_s = _1a405db02_Struct((*(_189113_t))._field_Kind.ptr());;
	if ((_189713_s == nullptr)) {
		if ((_1a405c815_Sptr((*_189113_t.alloc)._field_Kind) != nullptr)) {
			_189713_s=_1a405db02_Struct((*(_1a405c815_Sptr((*_189113_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_189713_s != nullptr)) {
				goto _julec_label_1a794dd4b;
			};
		};
		_1a402b1da_pushErr(_self_, (*((*_189037_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a794dd4b:;
	jule::Ptr<_1a4028e63_Data> _191013_d = _1a403d9c2_evalStructLitExplicit(_self_, _189713_s, (*_189037_lit.alloc)._field_Exprs, (*(*_189037_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1a405c815_Sptr((*_189113_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a3e07418_StructLitExprModel> _191217_model = (*(_191013_d))._field_Model.cast_ptr<_1a3e07418_StructLitExprModel>(&__jule_any_type94);;
		_1a4053234_makeStructLitAlloc(&(_191013_d), &(_191217_model));
	};
	return _191013_d;;
}



inline _1a406bcdb_typeChecker _1a403e099_typeChecker(_1a402ab8a_Eval* _self_) {
	return _1a3ea0439_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a4028e63_Data> _1a403e3da_evalType(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3dcd653_TypeDecl> _192231_t) {
	jule::Ptr<_1a4062100_TypeSymbol> _192313_tk = _1a3e1bd34_buildType(_192231_t);;
	jule::Bool _19249_ok = _1a3ea168d_checkType((*(_self_))._field_s, &(_192313_tk), (*(_self_))._field_lookup);;
	if ((!(_19249_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*(_192313_tk))._field_Kind, ._field_Model=jule::Any((*_192313_tk.alloc)._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1a403e74d_callTypeFn(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd66b1_FnCallExpr>* _193535_fc, jule::Ptr<_1a4028e63_Data>* _193557_d) {
	if (((*((*(_193535_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193535_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*((*(_193535_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_193557_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193535_fc))))._field_IsCo) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193557_d))=nullptr;
		return;;
	} else if (((*((*(_193535_fc))))._field_Exception != nullptr)) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193557_d))=nullptr;
		return;;
	};
	if (((*((*(_193535_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a3dd2987_Expr> _195117_arg = (*((*(_193535_fc))))._field_Args[0LL];;
		(*(_193557_d))=_1a403cd89_evalCastT(_self_, &((*((*(_193557_d))))._field_Kind), &(_195117_arg), &((*(_195117_arg))._field_Token));
		return;;
	};
	if (((*(_193557_d)) != nullptr)) {
		(*((*(_193557_d))))._field_Decl=false;
	};
}



inline void _1a403eab1_callBuiltinFn(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd66b1_FnCallExpr>* _196138_fc, jule::Ptr<_1a4028e63_Data>* _196160_d) {
	if ((!(_1a3dd6a35_Unhandled((*(_196138_fc)).ptr())))) {
		_1a402b1da_pushErr(_self_.ptr(), (*((*(_196138_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196160_d))=(*(_1a405d86b_Fn((*((*(_196160_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196138_fc, _196160_d);
	if (((*(_196160_d)) == nullptr)) {
		return;;
	};
	(*((*(_196160_d))))._field_Mutable=true;
}



inline void _1a403ee24_checkFnOfConcurrentCall(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e172d5_FnIns>* _197343_f, jule::Ptr<_1a3db8198_Token> _197354_errorToken) {
	if (_1a402bbd0_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197343_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a795dbc4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> *_197716_p = it;
			{
				if (_1a3e13028_IsSelf((*((*(_197716_p))))._field_Decl.ptr())) {
					if ((!(_1a3e132ae_IsRef((*(*(_197716_p)).alloc)._field_Decl)))) {
						_1a402b1da_pushErr(_self_, _197354_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a402b54d_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_197716_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1a402b1da_pushErr(_self_, _197354_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a402b54d_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a795dbc4:;
			++it;
			goto _iter_begin_1a795dbc4;
		}
		_iter_end_1a795dbc4:;
	};
}



inline void _1a4040342_processExceptionalHandler(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e172d5_FnIns>* _199249_f, jule::Ptr<_1a3dd66b1_FnCallExpr>* _199265_fc, jule::Ptr<_1a4028e63_Data>* _199287_d) {
	jule::Bool _19939_resultNeeded = ((!(_1a3e14854_IsVoid((*((*(_199249_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a3e5d57e_scopeChecker> _199417_csc = nullptr;;
	jule::Ptr<_1a3e5627a_Scope> _199517_ch = nullptr;;
	jule::Ptr<_1a3e0864a_FnCallExprModel> _199713_model = (*((*(_199287_d))))._field_Model.cast_ptr<_1a3e0864a_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1a3e5d57e_scopeChecker> _200113_sc = (*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0);;
	_199417_csc=_1a3e7001e_newChildChecker(_200113_sc);
	if (_19939_resultNeeded) {
		(*(_199417_csc))._field_result=(*(_199249_f));
	};
	_199517_ch=_1a3e63375_getChild(_200113_sc);
	(*((*((*(_199265_fc))))._field_Exception))._field_Parent=(*_200113_sc.alloc)._field_tree;
	(*((*_199417_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199417_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({_1a40535a8_buildErrorVar(&(_199517_ch), _199265_fc)}));
	_1a3e63793_checkChildSsc(_200113_sc, &((*((*(_199265_fc))))._field_Exception), &(_199517_ch), &(_199417_csc));
	(*(_199713_model))._field_Assigned=_19939_resultNeeded;
	(*_199713_model.alloc)._field_Except=_199517_ch;
	if ((_19939_resultNeeded && ((*_199417_csc.alloc)._field_result != nullptr))) {
		_1a402b1da_pushErr(_self_, (*((*(_199265_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a40406a5_callFn(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd66b1_FnCallExpr>* _201931_fc, jule::Ptr<_1a4028e63_Data>* _201953_d) {
	jule::Ptr<_1a3e172d5_FnIns> _202013_f = _1a405d86b_Fn((*((*(_201953_d))))._field_Kind.ptr());;
	if (_1a3e1876a_IsBuiltin(_202013_f.ptr())) {
		_1a403eab1_callBuiltinFn(_self_, _201931_fc, _201953_d);
		return;;
	};
	if ((_1a402be66_isGlobal(_self_) && (*((*_202013_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201953_d))=nullptr;
		return;;
	};
	if (((!(_1a3e14ada_IsMethod((*_202013_f.alloc)._field_Decl))) && _1a4075a4d_hasDirective(&((*(*_202013_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201953_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201953_d))))._field_Mutable)) && _1a3e14ada_IsMethod((*_202013_f.alloc)._field_Decl)) && (!((*(*_202013_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202013_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a3e07418_StructLitExprModel> _204617_lit = _1a4056a62_isLitBased(&((*((*(_201953_d))))._field_Model));;
			if ((_204617_lit == nullptr)) {
				_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a401bd02_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204617_lit));
			};
		};
	} else if (((!(_1a402bbd0_isUnsafe(_self_))) && (*(*_202013_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _205813_dynamicAnnotation = ((((*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202013_f.alloc)._field_Generics.len() == 0LL)) && ((*_202013_f.alloc)._field_Params.len() > 0LL));;
	if (_205813_dynamicAnnotation) {
		(*_202013_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a4058547_InsGeneric>>::alloc((*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202013_f.alloc)._field_Generics.len() != (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1a3e9c04b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202013_f.alloc)._field_Generics.len(), (*((*(_201931_fc))))._field_Token);
		(*(_201953_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3e97dd2_Sema> _206713_old = (*_self_.alloc)._field_s;;
	if (((*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_206713_old != (*_self_.alloc)._field_s)) {
			(*(_206713_old))._field_errors=jule::append((*_206713_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_206713_old;
	});;
	_1a40193a4_fnCallArgChecker _208013_fcac = _1a40193a4_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201931_fc))))._field_Args, ._field_errorToken=(*((*(_201931_fc))))._field_Token, ._field_dynamicAnnotation=_205813_dynamicAnnotation, };;
	if ((!(_205813_dynamicAnnotation))) {
		if ((!((*_202013_f.alloc)._field_reloaded))) {
			jule::Bool _208917_ok = _1a3ea69a1_reloadFnInsTypes((*_self_.alloc)._field_s, _202013_f);;
			(*_202013_f.alloc)._field_reloaded=true;
			if ((!(_208917_ok))) {
				(*(_201953_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a3e172d5_FnIns> _209617_existInstance = _1a3e15e4e_appendInstance((*_202013_f.alloc)._field_Decl, &(_202013_f));;
		if ((_209617_existInstance != nullptr)) {
			_202013_f=_209617_existInstance;
		};
	} else if ((!(_1a3ea520d_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202013_f), &(_208013_fcac._field_ignored))))) {
		(*(_201953_d))=nullptr;
		return;;
	};
	_208013_fcac._field_f=_202013_f;
	jule::Bool _210713_ok = false;;
	if (((*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_206713_old, (*_self_.alloc)._field_s);
		_210713_ok=_1a401b95b_check(&_208013_fcac);
		std::swap(_206713_old, (*_self_.alloc)._field_s);
	} else {
		_210713_ok=_1a401b95b_check(&_208013_fcac);
	};
	if (_205813_dynamicAnnotation) {
		if ((!(_210713_ok))) {
			(*(_201953_d))=nullptr;
			return;;
		};
		if ((!(_1a4037a54_checkGenericFn(_self_, &(_202013_f), &((*((*(_201931_fc))))._field_Token), &((*((*(_201953_d))))._field_Model))))) {
			(*(_201953_d))=nullptr;
			return;;
		};
	};
	jule::Any _212713_callModel = (*((*(_201953_d))))._field_Model;;
	if (_1a3e14854_IsVoid((*_202013_f.alloc)._field_Decl)) {
		(*(_201953_d))=_1a4054d18_buildVoidData();
	} else {
		(*((*(_201953_d))))._field_Kind=(*_202013_f.alloc)._field_Result;
		(*((*(_201953_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a3e0864a_FnCallExprModel> _213613_model = jule::new_ptr<_1a3e0864a_FnCallExprModel>(_1a3e0864a_FnCallExprModel{._field_Token=(*((*(_201931_fc))))._field_Token, ._field_Func=_202013_f, ._field_IsCo=(*((*(_201931_fc))))._field_IsCo, ._field_Expr=_212713_callModel, ._field_Args=_208013_fcac._field_argModels, });;
	(*((*(_201953_d))))._field_Model=jule::Any(_213613_model, &__jule_any_type34);
	(*((*(_201953_d))))._field_Mutable=true;
	if ((*(*_202013_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_201931_fc))))._field_IsCo) {
			_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*((*(_201931_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a3e9ad80_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a3dd6a35_Unhandled((*(_201931_fc)).ptr())) {
				_case_begin_1a7984a74:;
				{
					_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a402b54d_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a3dd6cbb_Ignored((*(_201931_fc)).ptr())) {
				_case_begin_1a7984777:;
				{
					goto _match_end_1a7983523;
				}
			}
			else {
				_case_begin_1a7983578:;
				{
					_1a4040342_processExceptionalHandler(_self_, &(_202013_f), _201931_fc, _201953_d);
				}
			}
			_match_end_1a7983523:;
		};
	} else if ((!(_1a3dd6a35_Unhandled((*(_201931_fc)).ptr())))) {
		_1a402b1da_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201931_fc))))._field_IsCo) {
		_1a403ee24_checkFnOfConcurrentCall(_self_, &((*(_213613_model))._field_Func), (*((*(_201931_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a40409e6_evalFnCall(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd66b1_FnCallExpr> _217134_fc) {
	jule::Ptr<_1a4059e2d_TypeKind> _217213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217213_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217134_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a798911c:;
			{
				if ((*((*((*(_217134_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1a4154874_builtinCallerError(&(_self_), &(_217134_fc));;
				};
			}
		}
		_match_end_1a79890a6:;
	};
	jule::Ptr<_1a4028e63_Data> _218513_d = _1a40480d6_evalExprKind(_self_, (*(*_217134_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218513_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218513_d))._field_Decl) {
		_1a403e74d_callTypeFn(_self_, &(_217134_fc), &(_218513_d));
		return _218513_d;;
	};
	if ((_1a405d86b_Fn((*(_218513_d))._field_Kind.ptr()) == nullptr)) {
		_1a402b1da_pushErr(_self_, (*_217134_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a40406a5_callFn(_self_, &(_217134_fc), &(_218513_d));
	return _218513_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4040de2_evalEnumStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e29db9_Enum> _220437_enm, jule::Ptr<_1a3db8198_Token> _220453_ident) {
	jule::Ptr<_1a3e2934c_EnumItem> _220513_item = _1a3e2a9ad_FindItem(_220437_enm.ptr(), (*(_220453_ident))._field_Kind);;
	if ((_220513_item == nullptr)) {
		_1a402b1da_pushErr(_self_, _220453_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220437_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220453_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1a4056798_evalEnumStatic(&(_220437_enm), &(_220513_item), &(_220453_ident));;
}



inline jule::Ptr<_1a4028e63_Data> _1a40412dd_evalTypeEnumStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e2b5c4_TypeEnum> _221241_enm, jule::Ptr<_1a3db8198_Token> _221257_ident) {
	jule::Ptr<_1a3e2aeec_TypeEnumItem> _221313_item = _1a3e2c185_FindItem(_221241_enm.ptr(), (*(_221257_ident))._field_Kind);;
	if ((_221313_item == nullptr)) {
		_1a402b1da_pushErr(_self_, _221257_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221241_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221257_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1a405cd32_Enum((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7992521:;
			{
				return _1a402e7d7__evalEnum(_self_, _1a405cd32_Enum((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a79926a8:;
			{
				return _1a4030024__evalTypeEnum(_self_, _1a405d0b8_TypeEnum((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a405db02_Struct((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a799092b:;
			{
				return _1a4030761__evalStruct(_self_, _1a405db02_Struct((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1a79908b5:;
			{
				jule::Ptr<_1a4028e63_Data> _222617_d = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*((*(_221313_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222617_d))._field_Model=jule::Any((*_222617_d.alloc)._field_Kind, &__jule_any_type83);
				return _222617_d;;
			}
		}
		_match_end_1a7990a80:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a40416d9_evalStructStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e0226a_StructIns> _223539_s, jule::Ptr<_1a3db8198_Token> _223554_ident) {
	jule::Ptr<_1a4028e63_Data> _223613_d = jule::new_ptr<_1a4028e63_Data>();;
	;
	jule::Ptr<_1a3e143d1_Fn> _224013_method = _1a3e032d2_FindMethod(_223539_s.ptr(), (*(_223554_ident))._field_Kind, true);;
	if ((_224013_method != nullptr)) {
		if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224013_method.alloc)._field_Public, (*_224013_method.alloc)._field_Token)))) {
			_1a402b1da_pushErr(_self_, _223554_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223554_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a3e172d5_FnIns> _224717_ins = _1a3e15b41_instance(_224013_method);;
		(*(_224717_ins))._field_Owner=_223539_s;
		_1a77ea368_pushReference(_self_, &(_224717_ins));
		(*_223613_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e0b582_StructStaticIdentExprModel>(_1a3e0b582_StructStaticIdentExprModel{._field_Structure=_223539_s, ._field_Expr=(*_223613_d.alloc)._field_Model, ._field_Method=_224717_ins}), &__jule_any_type95);
		(*_223613_d.alloc)._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_224717_ins, 1)});
		return _223613_d;;
	};
	jule::Ptr<_1a3ebac4b_Var> _226113_sttc = _1a3e03964_FindStatic(_223539_s, (*_223554_ident.alloc)._field_Kind);;
	if ((_226113_sttc != nullptr)) {
		return _1a403281d_evalVar(_self_, _226113_sttc, _223554_ident);;
	};
	_1a402b1da_pushErr(_self_, _223554_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223539_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223554_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4041b90_evalTraitSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data> _227040_d, jule::Ptr<_1a3e276ad_Trait> _227054_trt, jule::Ptr<_1a3db8198_Token> _227071_ident) {
	jule::Ptr<_1a3e143d1_Fn> _227113_f = _1a3e2835c_FindMethod(_227054_trt.ptr(), (*(_227071_ident))._field_Kind);;
	if ((_227113_f == nullptr)) {
		_1a402b1da_pushErr(_self_, _227071_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227054_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227071_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a3e15b41_instance(_227113_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a3e0a84a_TraitSubIdentExprModel>(_1a3e0a84a_TraitSubIdentExprModel{._field_Token=_227071_ident, ._field_Expr=(*(_227040_d))._field_Model, ._field_Method=_227113_f, ._field_Trt=_227054_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4042201_evalStructSubIdentField(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _229047_d, jule::Ptr<_1a3e0226a_StructIns>* _229062_s, jule::Ptr<_1a3db8198_Token>* _229082_tok, jule::Ptr<_1a3e016ba_FieldIns>* _2290100_f) {
	jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _229113_model = jule::new_ptr<_1a3e0b1db_StructSubIdentExprModel>(_1a3e0b1db_StructSubIdentExprModel{._field_Token=(*(_229082_tok)), ._field_Expr=jule::new_ptr<_1a4028e63_Data>((*((*(_229047_d))))), ._field_Field=(*(_2290100_f)), ._field_Owner=(*(_229062_s))});;
	(*((*(_229047_d))))._field_Model=jule::Any(_229113_model, &__jule_any_type97);
	(*((*(_229047_d))))._field_Kind=(*((*(_2290100_f))))._field_Kind;
	(*((*(_229047_d))))._field_Lvalue=true;
	if (((*((*((*(_2290100_f))))._field_Decl))._field_Mutable && (!((*((*(_229047_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a79a3d6d:;
				{
					jule::Ptr<_1a3e5d57e_scopeChecker> _230517_scope = _1a3e61670_getRoot((*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0));;
					(*((*(_229047_d))))._field_Mutable=(((*(_230517_scope))._field_owner != nullptr) && ((*(*_230517_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229062_s))));
				}
			}
			_match_end_1a79a3d18:;
		};
	};
	return (*(_229047_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4042762_evalStructSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data> _231341_d, jule::Ptr<_1a3e0226a_StructIns> _231355_s, jule::Ptr<_1a3dd5a9a_SubIdentExpr> _231374_si, jule::Bool _231393_ref) {
	jule::Ptr<_1a3e016ba_FieldIns> _231413_f = _1a3e03623_FindField(_231355_s.ptr(), (*((*(_231374_si))._field_Ident))._field_Kind);;
	if ((_231413_f != nullptr)) {
		if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231413_f.alloc)._field_Decl))._field_Public, (*(*_231413_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1a402b1da_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231413_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a4042201_evalStructSubIdentField(_self_, &(_231341_d), &(_231355_s), &((*_231374_si.alloc)._field_Ident), &(_231413_f));;
	};
	;
	jule::Ptr<_1a3e143d1_Fn> _232413_m = _1a3e032d2_FindMethod(_231355_s, (*(*_231374_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232413_m == nullptr)) {
		_1a402b1da_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231355_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231374_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s, (*(_232413_m))._field_Public, (*(_232413_m))._field_Token)))) {
		_1a402b1da_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232413_m))._field_Ident, &__jule_any_type4)}));
		_1a402b54d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a3e132ae_IsRef((*(_232413_m))._field_Params[0LL].ptr()) && (!(_231393_ref)))) {
		_1a402b1da_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a4031311_checkDeprecated(_self_, &((*(_232413_m))._field_Directives), (*_231374_si.alloc)._field_Ident);
	jule::Ptr<_1a3e172d5_FnIns> _234013_ins = _1a3e15b41_instance(_232413_m);;
	(*(_234013_ins))._field_Owner=_231355_s;
	_1a77ea368_pushReference(_self_, &(_234013_ins));
	jule::Ptr<_1a4028e63_Data> _234313_model = jule::new_ptr<_1a4028e63_Data>((*(_231341_d)));;
	(*_231341_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e0b1db_StructSubIdentExprModel>(_1a3e0b1db_StructSubIdentExprModel{._field_Token=(*_231374_si.alloc)._field_Ident, ._field_Expr=_234313_model, ._field_Method=_234013_ins, ._field_Owner=_231355_s}), &__jule_any_type97);
	(*_231341_d.alloc)._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_234013_ins, 1)});
	return _231341_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4042aa3_evalIntTypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _235436_ident) {
	;
	{
		auto &_match_expr{ (*(_235436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a77350a5:;
			{
				jule::Ptr<_1b289b651_Const> _235817_c = static__1b289ba91_NewI64(_1b2896a47_MaxI(jule::Str::lit("int", 3)));;
				(*(_235817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4150de2_primInt, ._field_Model=jule::Any(_235817_c, &__jule_any_type19), ._field_Constant=_235817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a7735abc:;
			{
				jule::Ptr<_1b289b651_Const> _236717_c = static__1b289ba91_NewI64(static_cast<jule::I64>(_1b2897152_Min(jule::Str::lit("int", 3))));;
				(*(_236717_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4150de2_primInt, ._field_Model=jule::Any(_236717_c, &__jule_any_type19), ._field_Constant=_236717_c});;
			}
		}
		else {
			_case_begin_1a7734802:;
			{
				_1a402b1da_pushErr(_self_, _235436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7734c20:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4042de4_evalUintTypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ (*(_238137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a7738dab:;
			{
				jule::Ptr<_1b289b651_Const> _238517_c = static__1b289bd5a_NewU64(_1b2896d11_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4150a29_primUint, ._field_Model=jule::Any(_238517_c, &__jule_any_type19), ._field_Constant=_238517_c});;
			}
		}
		else {
			_case_begin_1a77387e5:;
			{
				_1a402b1da_pushErr(_self_, _238137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7738a26:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4043235_evalI8TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _239935_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239935_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a773c0bd:;
			{
				jule::Ptr<_1b289b651_Const> _240517_c = static__1b289ba91_NewI64(127LL);;
				(*(_240517_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151134_primI8, ._field_Model=jule::Any(_240517_c, &__jule_any_type19), ._field_Constant=_240517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a773cad5:;
			{
				jule::Ptr<_1b289b651_Const> _241417_c = static__1b289ba91_NewI64(-128LL);;
				(*(_241417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151134_primI8, ._field_Model=jule::Any(_241417_c, &__jule_any_type19), ._field_Constant=_241417_c});;
			}
		}
		else {
			_case_begin_1a773b94c:;
			{
				_1a402b1da_pushErr(_self_, _239935_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239935_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a773bc38:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4043576_evalI16TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _242836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a774138b:;
			{
				jule::Ptr<_1b289b651_Const> _243417_c = static__1b289ba91_NewI64(32767LL);;
				(*(_243417_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a41513cb_primI16, ._field_Model=jule::Any(_243417_c, &__jule_any_type19), ._field_Constant=_243417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a7741da3:;
			{
				jule::Ptr<_1b289b651_Const> _244317_c = static__1b289ba91_NewI64(-32768LL);;
				(*(_244317_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a41513cb_primI16, ._field_Model=jule::Any(_244317_c, &__jule_any_type19), ._field_Constant=_244317_c});;
			}
		}
		else {
			_case_begin_1a774070e:;
			{
				_1a402b1da_pushErr(_self_, _242836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7741017:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a40438b7_evalI32TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _245736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a7745659:;
			{
				jule::Ptr<_1b289b651_Const> _246317_c = static__1b289ba91_NewI64(2147483647LL);;
				(*(_246317_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151684_primI32, ._field_Model=jule::Any(_246317_c, &__jule_any_type19), ._field_Constant=_246317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a7746171:;
			{
				jule::Ptr<_1b289b651_Const> _247217_c = static__1b289ba91_NewI64(-2147483648LL);;
				(*(_247217_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151684_primI32, ._field_Model=jule::Any(_247217_c, &__jule_any_type19), ._field_Constant=_247217_c});;
			}
		}
		else {
			_case_begin_1a77449cc:;
			{
				_1a402b1da_pushErr(_self_, _245736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_245736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a77452d5:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4043c08_evalI64TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _248636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a7749927:;
			{
				jule::Ptr<_1b289b651_Const> _249217_c = static__1b289ba91_NewI64(jule::MAX_I64);;
				(*(_249217_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a415193c_primI64, ._field_Model=jule::Any(_249217_c, &__jule_any_type19), ._field_Constant=_249217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a774a43e:;
			{
				jule::Ptr<_1b289b651_Const> _250117_c = static__1b289ba91_NewI64(jule::MIN_I64);;
				(*(_250117_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a415193c_primI64, ._field_Model=jule::Any(_250117_c, &__jule_any_type19), ._field_Constant=_250117_c});;
			}
		}
		else {
			_case_begin_1a7748c9a:;
			{
				_1a402b1da_pushErr(_self_, _248636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a77495a3:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4044049_evalU8TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _251535_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251535_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a774d82c:;
			{
				jule::Ptr<_1b289b651_Const> _252017_c = static__1b289bd5a_NewU64(255LLU);;
				(*(_252017_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151be5_primU8, ._field_Model=jule::Any(_252017_c, &__jule_any_type19), ._field_Constant=_252017_c});;
			}
		}
		else {
			_case_begin_1a774d068:;
			{
				_1a402b1da_pushErr(_self_, _251535_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251535_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a774d442:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404438a_evalU16TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _253436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a77515aa:;
			{
				jule::Ptr<_1b289b651_Const> _253917_c = static__1b289bd5a_NewU64(65535LLU);;
				(*(_253917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4151e9d_primU16, ._field_Model=jule::Any(_253917_c, &__jule_any_type19), ._field_Constant=_253917_c});;
			}
		}
		else {
			_case_begin_1a7750cc4:;
			{
				_1a402b1da_pushErr(_self_, _253436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a77511c0:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a40446cb_evalU32TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _255336_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a7754338:;
			{
				jule::Ptr<_1b289b651_Const> _255817_c = static__1b289bd5a_NewU64(4294967295LLU);;
				(*(_255817_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152256_primU32, ._field_Model=jule::Any(_255817_c, &__jule_any_type19), ._field_Constant=_255817_c});;
			}
		}
		else {
			_case_begin_1a7753a52:;
			{
				_1a402b1da_pushErr(_self_, _255336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7753e4d:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4044a1c_evalU64TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _257236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a77570b6:;
			{
				jule::Ptr<_1b289b651_Const> _257717_c = static__1b289bd5a_NewU64(jule::MAX_U64);;
				(*(_257717_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152740_primU64, ._field_Model=jule::Any(_257717_c, &__jule_any_type19), ._field_Constant=_257717_c});;
			}
		}
		else {
			_case_begin_1a77567d0:;
			{
				_1a402b1da_pushErr(_self_, _257236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7756bcb:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4044d5d_evalF32TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _259136_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a775a54d:;
			{
				jule::Ptr<_1b289b651_Const> _259817_c = static__1b289c6a7_NewF64(340282346638528860000000000000000000000.0);;
				(*(_259817_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152982_primF32, ._field_Model=jule::Any(_259817_c, &__jule_any_type19), ._field_Constant=_259817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a775b065:;
			{
				jule::Ptr<_1b289b651_Const> _260717_c = static__1b289c6a7_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_260717_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152982_primF32, ._field_Model=jule::Any(_260717_c, &__jule_any_type19), ._field_Constant=_260717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a775b0cb:;
			{
				jule::Ptr<_1b289b651_Const> _261617_c = static__1b289c6a7_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261617_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152982_primF32, ._field_Model=jule::Any(_261617_c, &__jule_any_type19), ._field_Constant=_261617_c});;
			}
		}
		else {
			_case_begin_1a7759904:;
			{
				_1a402b1da_pushErr(_self_, _259136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a775a1b8:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404519e_evalF64TypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3db8198_Token> _263036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a7a2c204:;
			{
				jule::Ptr<_1b289b651_Const> _263717_c = static__1b289c6a7_NewF64(jule::MAX_F64);;
				(*(_263717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152b91_primF64, ._field_Model=jule::Any(_263717_c, &__jule_any_type19), ._field_Constant=_263717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a7a2cc1b:;
			{
				jule::Ptr<_1b289b651_Const> _264617_c = static__1b289c6a7_NewF64(jule::MIN_F64);;
				(*(_264617_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152b91_primF64, ._field_Model=jule::Any(_264617_c, &__jule_any_type19), ._field_Constant=_264617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a7a2cc82:;
			{
				jule::Ptr<_1b289b651_Const> _265517_c = static__1b289c6a7_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265517_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_untyped=true, ._field_Kind=_1a4152b91_primF64, ._field_Model=jule::Any(_265517_c, &__jule_any_type19), ._field_Constant=_265517_c});;
			}
		}
		else {
			_case_begin_1a7a2b5aa:;
			{
				_1a402b1da_pushErr(_self_, _263036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7a2bd6e:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404559a_evalPrimStatic(_1a402ab8a_Eval* _self_, jule::Str _266933_kind, jule::Ptr<_1a3db8198_Token> _266944_ident) {
	{
		auto &_match_expr{ _266933_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a7a318e0:;
			{
				return _1a4042aa3_evalIntTypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a7a315e3:;
			{
				return _1a4042de4_evalUintTypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a7a31659:;
			{
				return _1a4043235_evalI8TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a7a316c0:;
			{
				return _1a4043576_evalI16TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a7a31736:;
			{
				return _1a40438b7_evalI32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a7a3179c:;
			{
				return _1a4043c08_evalI64TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a7a31813:;
			{
				return _1a4044049_evalU8TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a7a32506:;
			{
				return _1a404438a_evalU16TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a7a3256c:;
			{
				return _1a40446cb_evalU32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a7a325d3:;
			{
				return _1a4044a1c_evalU64TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a7a32649:;
			{
				return _1a4044d5d_evalF32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a7a326b0:;
			{
				return _1a404519e_evalF64TypeStatic(_self_, _266944_ident);;
			}
		}
		else {
			_case_begin_1a7a2ce5d:;
			{
				_1a402b1da_pushErr(_self_, _266944_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266933_kind, &__jule_any_type4),jule::Any((*(_266944_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7a303b1:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4045996_evalTypeStatic(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data> _270137_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr> _270151_si) {
	{
		
		if ((_1a405c57e_Prim((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a36a8d:;
			{
				return _1a404559a_evalPrimStatic(_self_, _1a4062d48_Str(_1a405c57e_Prim((*_270137_d.alloc)._field_Kind).ptr()), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1a405cd32_Enum((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a378a2:;
			{
				return _1a4040de2_evalEnumStatic(_self_, _1a405cd32_Enum((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a37918:;
			{
				return _1a40412dd_evalTypeEnumStatic(_self_, _1a405d0b8_TypeEnum((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1a405db02_Struct((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3797e:;
			{
				return _1a40416d9_evalStructStatic(_self_, _1a405db02_Struct((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1a7a366d6:;
			{
				_1a402b1da_pushErr(_self_, (*(_270151_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_270137_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7a3661a:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a7a3e6bc_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e3e054_comptimeTypeInfo>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e45258_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a43d53_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e301ee_comptimeStructField>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e31aa2_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a48473_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e36766_comptimeEnumField>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e37800_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a4cad7_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e39208_comptimeParam>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e3b161_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a5234a_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e334aa_comptimeStatic>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e34dd5_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a5696a_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e45566_comptimeValue>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e47aa7_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1a4028e63_Data> _1a7a5b08a_comptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a3e494b0_comptimeFile>* _271757_ct, jule::Ptr<_1a4028e63_Data>* _271777_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1a4028e63_Data> _271813_cd = _1a3e4adeb_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1a402b1da_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}



inline __jule_tuple_x_1a4028e63_Data__jule_tuple_bool _1a4046348_tryComptimeObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data>* _272546_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr> _272560_si) {
	__jule_tuple_x_1a4028e63_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a4060e45_comptimeTypeInfo((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3caa5:;
			{
				jule::Ptr<_1a3e3e054_comptimeTypeInfo> _272817_ct = _1a4060e45_comptimeTypeInfo((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a3e6bc_comptimeObjSubIdent(_self_, &(_272817_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a405eb58_comptimeStructField((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c6cb:;
			{
				jule::Ptr<_1a3e301ee_comptimeStructField> _273117_ct = _1a405eb58_comptimeStructField((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a43d53_comptimeObjSubIdent(_self_, &(_273117_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a4060175_comptimeEnumField((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c742:;
			{
				jule::Ptr<_1a3e36766_comptimeEnumField> _273417_ct = _1a4060175_comptimeEnumField((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a48473_comptimeObjSubIdent(_self_, &(_273417_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a4060692_comptimeParam((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c7a8:;
			{
				jule::Ptr<_1a3e39208_comptimeParam> _273717_ct = _1a4060692_comptimeParam((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a4cad7_comptimeObjSubIdent(_self_, &(_273717_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a4061462_comptimeStatic((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c830:;
			{
				jule::Ptr<_1a3e334aa_comptimeStatic> _274017_ct = _1a4061462_comptimeStatic((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a5234a_comptimeObjSubIdent(_self_, &(_274017_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a40616e8_comptimeValue((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c8a7:;
			{
				jule::Ptr<_1a3e45566_comptimeValue> _274317_ct = _1a40616e8_comptimeValue((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a5696a_comptimeObjSubIdent(_self_, &(_274317_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a406197e_comptimeFile((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a3c92e:;
			{
				jule::Ptr<_1a3e494b0_comptimeFile> _274617_ct = _1a406197e_comptimeFile((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a7a5b08a_comptimeObjSubIdent(_self_, &(_274617_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7a3c665:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a7a3c5bb:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4046744_evalObjSubIdent(_1a402ab8a_Eval* _self_, jule::Ptr<_1a4028e63_Data> _275338_d, jule::Ptr<_1a3dd5a9a_SubIdentExpr> _275352_si) {
	if (_1a3dbaa80_IsIgnoreIdent((*((*(_275352_si))._field_Ident))._field_Kind)) {
		_1a402b1da_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a4028e63_Data> _276017_compData;;
		jule::Bool _276027_ok;;
		({
			__jule_tuple_x_1a4028e63_Data__jule_tuple_bool __jule_assign_result = _1a4046348_tryComptimeObjSubIdent(_self_, &(_275338_d), _275352_si);
			_276017_compData = __jule_assign_result.__jule_result_arg0;
			_276027_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276027_ok) {
			return _276017_compData;;
		};
	};
	jule::Ptr<_1a4059e2d_TypeKind> _276613_kind = (*(_275338_d))._field_Kind;;
	{
		
		if ((_1a405ca9b_Ptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a61568:;
			{
				jule::Ptr<_1a4069cea_Ptr> _276913_ptr = _1a405ca9b_Ptr((*_275338_d.alloc)._field_Kind);;
				if (_1a406a834_IsUnsafe(_276913_ptr.ptr())) {
					goto _match_end_1a7a614ad;
				};
				if ((!(_1a402bbd0_isUnsafe(_self_)))) {
					_1a402b1da_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276613_kind=(*(_1a405ca9b_Ptr((*_275338_d.alloc)._field_Kind)))._field_Elem;
				_1a4056d4d_makeImplicitDeref(&(_275338_d), (*_275352_si.alloc)._field_Ident);
			}
		}
		else if ((_1a405c815_Sptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a61612:;
			{
				_276613_kind=(*(_1a405c815_Sptr((*_275338_d.alloc)._field_Kind)))._field_Elem;
				_1a4056d4d_makeImplicitDeref(&(_275338_d), (*_275352_si.alloc)._field_Ident);
			}
		}
		_match_end_1a7a614ad:;
	};
	{
		
		if ((_1a405dd88_Trait((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a616cd:;
			{
				return _1a4041b90_evalTraitSubIdent(_self_, _275338_d, _1a405dd88_Trait((*_275338_d.alloc)._field_Kind), (*_275352_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a405db02_Struct(_276613_kind.ptr()) != nullptr)) {
			_case_begin_1a7a64879:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _278713_s = _1a405db02_Struct(_276613_kind);;
				if (_1a40540c0_isInstancedStruct(_278713_s)) {
					jule::Bool _278921_usedReferenceElem = (_1a405c815_Sptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a4042762_evalStructSubIdent(_self_, _275338_d, _1a405db02_Struct(_276613_kind), _275352_si, _278921_usedReferenceElem);;
				};
			}
		}
		_match_end_1a7a64c64:;
	};
	_1a402b1da_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_275338_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4046a85_evalSubIdent(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd5a9a_SubIdentExpr> _279736_si) {
	jule::Ptr<_1a4059e2d_TypeKind> _279813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_279813_prefix;
	});;
	jule::Ptr<_1a4028e63_Data> _280113_d = _1a40480d6_evalExprKind(_self_, (*((*(_279736_si))._field_Expr))._field_Kind);;
	if ((_280113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280113_d))._field_Decl) {
		return _1a4045996_evalTypeStatic(_self_, _280113_d, _279736_si);;
	};
	return _1a4046744_evalObjSubIdent(_self_, _280113_d, _279736_si);;
}



inline jule::Ptr<_1a4028e63_Data> _1a4046dc6_evalTuple(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd357b_TupleExpr> _281133_tup) {
	jule::Ptr<_1a4067aea_Tuple> _281213_tupT = jule::new_ptr<_1a4067aea_Tuple>();;
	(*_281213_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::alloc(0LL, (*(_281133_tup))._field_Expr.len());
	jule::Ptr<_1a3e0bc58_TupleExprModel> _281513_model = jule::new_ptr<_1a3e0bc58_TupleExprModel>(_1a3e0bc58_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a4028e63_Data>>::alloc(0LL, (*_281133_tup.alloc)._field_Expr.len())});;
	jule::Bool _281913_ok = true;;
	{
		auto expr = &((*_281133_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a6e5cb:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _282021_expr = *it;
			{
				jule::Ptr<_1a4028e63_Data> _282117_d = _1a4048dea_evalExpr(_self_, _282021_expr);;
				if ((_282117_d == nullptr)) {
					_281913_ok=false;
					goto _iter_next_1a7a6e5cb;
				};
				(*_281213_tupT.alloc)._field_Types=jule::append((*_281213_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::make({(*(_282117_d))._field_Kind}));
				(*(_281513_model))._field_Datas=jule::append((*_281513_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1a4028e63_Data>>::make({_282117_d}));
			}
			_iter_next_1a7a6e5cb:;
			++it;
			goto _iter_begin_1a7a6e5cb;
		}
		_iter_end_1a7a6e5cb:;
	};
	if ((!(_281913_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_281213_tupT, 23)}), ._field_Model=jule::Any(_281513_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a40472c2_evalMap(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a406869a_Map> _284031_m, jule::Ptr<_1a3dd7e87_BraceLit> _284044_lit) {
	jule::Ptr<_1a3e09c34_MapExprModel> _284113_model = jule::new_ptr<_1a3e09c34_MapExprModel>(_1a3e09c34_MapExprModel{._field_KeyKind=(*(_284031_m))._field_Key, ._field_ValKind=(*_284031_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284044_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a7338d:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _284621_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284621_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a7a73976:;
						{
							goto _match_end_1a7a73c73;
						}
					}
					else {
						_case_begin_1a7a73cc8:;
						{
							_1a402b1da_pushErr(_self_.ptr(), (*(_284044_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a7a73c73:;
				};
				jule::Ptr<_1a3dd87b2_KeyValPair> _285617_pair = (*(_284621_expr))._field_Kind.cast_ptr<_1a3dd87b2_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1a4028e63_Data> _285817_key = _1a4048dea_evalExpr(_self_, (*(_285617_pair))._field_Key);;
				if ((_285817_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a4028e63_Data> _286317_val = _1a4048dea_evalExpr(_self_, (*_285617_pair.alloc)._field_Val);;
				if ((_286317_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a3ea78b4_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284031_m.alloc)._field_Key), &(_285817_key), &((*((*_285617_pair.alloc)._field_Key))._field_Token))) {
					_1a3ea352a_checkAssignType((*_self_.alloc)._field_s, false, &((*_284031_m.alloc)._field_Key), &(_285817_key), (*(*_285617_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1a3ea78b4_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284031_m.alloc)._field_Val), &(_286317_val), &((*((*_285617_pair.alloc)._field_Val))._field_Token))) {
					_1a3ea352a_checkAssignType((*_self_.alloc)._field_s, false, &((*_284031_m.alloc)._field_Val), &(_286317_val), (*(*_285617_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284113_model))._field_Entries=jule::append((*_284113_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1a3e0977d_KeyValPairExprModel>>::make({jule::new_ptr<_1a3e0977d_KeyValPairExprModel>(_1a3e0977d_KeyValPairExprModel{._field_Key=(*(_285817_key))._field_Model, ._field_Val=(*(_286317_val))._field_Model})}));
			}
			_iter_next_1a7a7338d:;
			++it;
			goto _iter_begin_1a7a7338d;
		}
		_iter_end_1a7a7338d:;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_284031_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284113_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4047613_evalBraceLit(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd7e87_BraceLit> _288936_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1a7a7c72c:;
			{
				_1a402b1da_pushErr(_self_, (*(_288936_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a405e11e_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a7a7d035:;
			{
				return _1a40472c2_evalMap(_self_, _1a405e11e_Map((*_self_.alloc)._field_prefix), _288936_lit);;
			}
		}
		else if ((_1a405db02_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a7a7d09b:;
			{
				return _1a403d9c2_evalStructLitExplicit(_self_, _1a405db02_Struct((*_self_.alloc)._field_prefix), (*(_288936_lit))._field_Exprs, (*_288936_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1a7a7c397:;
			{
				_1a402b1da_pushErr(_self_.ptr(), (*(_288936_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7a7b682:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4047954_evalAnonFunc(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3de0313_FnDecl> _290436_decl) {
	_1a406bcdb_typeChecker _290513_tc = _1a406bcdb_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1a3e172d5_FnIns> _291013_ins = _1a40739b3_buildFunc(&_290513_tc, _290436_decl);;
	if ((_291013_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7a82864:;
			{
				jule::Ptr<_1a3e5d57e_scopeChecker> _291617_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0);;
				jule::Ptr<_1a3e5d57e_scopeChecker> _291717_scc = _1a3e7001e_newChildChecker(_291617_sc);;
				(*(_291717_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e5c0d8_scopeLabel>>>(nullptr);
				(*_291717_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e5c66b_scopeGoto>>>(nullptr);
				(*_291717_scc.alloc)._field_owner=nullptr;
				(*_291717_scc.alloc)._field_childIndex=0LL;
				(*_291717_scc.alloc)._field_it=0LLU;
				(*_291717_scc.alloc)._field_cse=0LLU;
				(*_291717_scc.alloc)._field_owner=_291013_ins;
				_1a3eb598d_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291013_ins), &(_291717_scc));
			}
		}
		else {
			_case_begin_1a7a82e5d:;
			{
				_1a3eb60a9_checkFnIns((*_self_.alloc)._field_s, &(_291013_ins));
			}
		}
		_match_end_1a7a82d4d:;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_291013_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a3e093a4_AnonFnExprModel>(_1a3e093a4_AnonFnExprModel{._field_Func=_291013_ins, ._field_Global=_1a402be66_isGlobal(_self_)}), &__jule_any_type99), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a4047c95_evalBinary(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd6051_BinaryExpr> _293934_op) {
	_1a404b34d_binaryEval _294013_bs = static__1a404b903_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a4062a07_Prim> _294313_prim = _1a405c57e_Prim((*_self_.alloc)._field_prefix);;
		if (((_294313_prim == nullptr) || (!(_1b289b0ac_IsNum(_1a4062d48_Str(_294313_prim.ptr())))))) {
			jule::Ptr<_1a4059e2d_TypeKind> _294521_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_294521_prefix;
			});;
			return _1a40523cb_eval(&_294013_bs, &(_293934_op));;
		};
	};
	return _1a40523cb_eval(&_294013_bs, &(_293934_op));;
}



inline jule::Ptr<_1a4028e63_Data> _1a40480d6_evalExprKind(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Any _295436_kind) {
	{
		auto &_match_expr{ _295436_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a7a8b10e:;
			{
				jule::Ptr<_1a3dd2c51_RangeExpr> _295717_e = _295436_kind.unsafe_cast_ptr<_1a3dd2c51_RangeExpr>();;
				return _1a40480d6_evalExprKind(_self_, (*((*(_295717_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a7a8b351:;
			{
				return _1a402d71a_evalLit(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1a3dd3922_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7a8b3b7:;
			{
				return _1a4033456_evalIdent(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1a3dd42a2_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a7a8b42d:;
			{
				return _1a4033797_evalUnary(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd4a44_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a7a8b494:;
			{
				return _1a4033ad8_evalVariadic(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd4e1d_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a7a8b50a:;
			{
				return _1a4033e29_evalUnsafe(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd3ceb_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a7a8b571:;
			{
				return _1a4034a62_evalSliceExpr(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd8edd_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a7a8b917:;
			{
				return _1a4038208_evalIndexing(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd994a_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a7a8b97d:;
			{
				return _1a4039539_evalSlicing(_self_, _295436_kind.unsafe_cast_ptr<_1a3dda0aa_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a7a8b9e4:;
			{
				return _1a403d1ca_evalCast(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd52e7_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a7a8ba5a:;
			{
				return _1a403d51b_evalNsSelection(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1a3dd56c1_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a7a8bad2:;
			{
				return _1a403dd13_evalStructLit(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd79d1_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a7a8bb59:;
			{
				return _1a403e3da_evalType(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1a3dcd653_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a7a8bbd1:;
			{
				return _1a40409e6_evalFnCall(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd66b1_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a7a8bc58:;
			{
				return _1a4046a85_evalSubIdent(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd5a9a_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a7a8bcd0:;
			{
				return _1a4046dc6_evalTuple(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd357b_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a7a8bd57:;
			{
				return _1a4047613_evalBraceLit(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd7e87_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a7a8bdce:;
			{
				return _1a4047954_evalAnonFunc(_self_, _295436_kind.unsafe_cast_ptr<_1a3de0313_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a7a8be56:;
			{
				return _1a4047c95_evalBinary(_self_, _295436_kind.unsafe_cast_ptr<_1a3dd6051_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1a7a8b2da:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7a8b285:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4048427_eval1(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd2987_Expr> _300229_expr) {
	jule::Ptr<_1a4028e63_Data> _300313_d = _1a40480d6_evalExprKind(_self_, (*(_300229_expr))._field_Kind);;
	if (((_300313_d == nullptr) || ((*(_300313_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a405d86b_Fn((*(_300313_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7a984e5:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _301017_f = _1a405d86b_Fn((*(_300313_d))._field_Kind.ptr());;
				if (_1a3e1876a_IsBuiltin(_301017_f.ptr())) {
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*_300229_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1a7a97b54;
				};
				if (((*_301017_f.alloc)._field_Generics.len() != (*((*_301017_f.alloc)._field_Decl))._field_Generics.len())) {
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_300229_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*(*_301017_f.alloc)._field_Decl.alloc)._field_Statically)) && _1a3e14ada_IsMethod((*_301017_f.alloc)._field_Decl))) {
					_1a3e9aa1c_pushErr((*_self_.alloc)._field_s, (*_300229_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a7a97b54:;
	};
	return _300313_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4048768_eval(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd2987_Expr> _302928_expr) {
	jule::Ptr<_1a4028e63_Data> _303013_d = _1a4048427_eval1(_self_, _302928_expr);;
	if ((_303013_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a405e63b_comptime((*(_303013_d))._field_Kind.ptr()))) {
		_1a3e9aa1c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_302928_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303013_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4048aa9_evalExpr1(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd2987_Expr> _304433_expr) {
	jule::Ptr<_1a4028e63_Data> _304513_d = _1a4048427_eval1(_self_, _304433_expr);;
	{
		
		if ((_304513_d == nullptr)) {
			_case_begin_1a7aa1388:;
			{
				return nullptr;;
			}
		}
		else if ((*(_304513_d))._field_Decl) {
			_case_begin_1a7aa1432:;
			{
				_1a402b1da_pushErr(_self_, (*(_304433_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a7aa1311:;
			{
				return _304513_d;;
			}
		}
		_match_end_1a7aa12ab:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4048dea_evalExpr(jule::Ptr<_1a402ab8a_Eval> _self_, jule::Ptr<_1a3dd2987_Expr> _306032_expr) {
	jule::Ptr<_1a4028e63_Data> _306113_d = _1a4048768_eval(_self_, _306032_expr);;
	{
		
		if ((_306113_d == nullptr)) {
			_case_begin_1a7aa327a:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306113_d))._field_Decl) {
			_case_begin_1a7aa3324:;
			{
				_1a402b1da_pushErr(_self_, (*(_306032_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a7aa3203:;
			{
				return _306113_d;;
			}
		}
		_match_end_1a7aa319d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a402ab8a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a40493b2_unaryEval static__1a4049802_new(jule::Ptr<_1a402ab8a_Eval> _308123_e) {
	return _1a40493b2_unaryEval{._field_e=_308123_e, };;
}



inline void _1a4049a00_minus(_1a40493b2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a7aa4e6e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7aa4b3e:;
			{
				if ((!(_1b289b0ac_IsNum(_1a405a2e6_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a405db02_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7aa4ba5:;
			{
				if (((*(_1a405db02_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a7aa4ac8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a7aa3e90:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a402986a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b28a115b_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7aa9737:;
				{
					_1b28a018d_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b289da60_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b28a0622_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7aa965a:;
				{
					_1b289e5bb_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b289d026_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b28a08a8_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7aa932a:;
				{
					_1b289e5bb_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b289dce6_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a7aa92b4:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3119:17"));;
				}
			}
			_match_end_1a7aa921a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a4049bed_plus(_1a40493b2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a7aaeb9e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7aae86e:;
			{
				if ((!(_1b289b0ac_IsNum(_1a405a2e6_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a405db02_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7aae8d5:;
			{
				if (((*(_1a405db02_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a7aae808:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a7aae709:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a402986a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b28a115b_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7ab4467:;
				{
					_1b28a018d_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b289da60_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b28a0622_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7ab438a:;
				{
					_1b289e5bb_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b289d026_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b28a08a8_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7ab405a:;
				{
					_1b289e5bb_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b289dce6_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a7ab3ee4:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3164:17"));;
				}
			}
			_match_end_1a7ab3e4a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a4049deb_caret(_1a40493b2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a7ab98ac:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7ab957c:;
			{
				if ((!(_1b289a9d5_IsInt(_1a405a2e6_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a405db02_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7ab95e3:;
			{
				if (((*(_1a405db02_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a7ab9516:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a7ab9417:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a402986a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b28a0622_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7abe175:;
				{
					_1b289e5bb_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b289d026_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b28a08a8_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7abe087:;
				{
					_1b289e874_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b289d2ac_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a7abdc02:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3207:17"));;
				}
			}
			_match_end_1a7abdb58:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a404a0e9_excl(_1a40493b2_unaryEval* _self_) {
	jule::Ptr<_1a4062a07_Prim> _32219_t = _1a405c57e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32219_t == nullptr) || (!(_1a4065c08_IsBool(_32219_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a402986a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b28a0b3e_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a7ac52ad:;
				{
					_1b289eb2c_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_1b289d543_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a7ac4d29:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3235:17"));;
				}
			}
			_match_end_1a7ac4c5d:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a404a2e7_star(_1a40493b2_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1a405ca9b_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7ac8a31:;
			{
				if ((!(_1a402bbd0_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a4069cea_Ptr> _326017_t = _1a405ca9b_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1a406a834_IsUnsafe(_326017_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326017_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a405c815_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7ac8712:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a405c815_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1a7ac869b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a7ac76bc:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a404a4e5_amper(_1a40493b2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a7ad20de:;
			{
				jule::Ptr<_1a3e07418_StructLitExprModel> _328217_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a3e07418_StructLitExprModel>();;
				_1a4053234_makeStructLitAlloc(&((*(_self_))._field_d), &(_328217_lit));
			}
		}
		else {
			_case_begin_1a7ace5a3:;
			{
				{
					
					if (_1a4075d17_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a7acee33:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4069cea_Ptr>(_1a4069cea_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), 26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1a7ace1a7:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1a7acea26:;
				};
			}
		}
		_match_end_1a7ace54d:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a404a6e3_typeDecl(_1a40493b2_unaryEval* _self_) {
	_1a406bcdb_typeChecker _330713_tc = _1a406bcdb_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a7ad7567:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a40721cb_buildPtrFromType(&_330713_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7ad57eb:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a4071a49_buildSptrFromType(&_330713_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1a7ad5246:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a7ad5785:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a404a8e1_evalData(_1a40493b2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7adb291:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _333217_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a4048768_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333217_prefix;
			}
		}
		else {
			_case_begin_1a7ad5862:;
			{
				(*(_self_))._field_d=_1a4048768_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1a7adadb7:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404ac32_eval(_1a40493b2_unaryEval* _self_, jule::Ptr<_1a3dd4a44_UnaryExpr> _334127_u) {
	(*(_self_))._field_u=_334127_u;
	_1a404a8e1_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a404a6e3_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _33529_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a7ae0938:;
			{
				_1a4049a00_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a7ae099e:;
			{
				_1a4049bed_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a7ae0a15:;
			{
				_1a4049deb_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1a7ae0a7b:;
			{
				_1a404a0e9_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a7ae0ae2:;
			{
				_1a404a2e7_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7ae0b58:;
			{
				_1a404a4e5_amper(_self_);
			}
		}
		else {
			_case_begin_1a7ae03e9:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a7ae08c2:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a7ae1142:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str(_33529_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1a402986a_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a7ade10c:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1a7ae2ad3:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a40493b2_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a404b34d_binaryEval static__1a404b903_newPlain(jule::Ptr<_1a402ab8a_Eval> _338928_e) {
	return _1a404b34d_binaryEval{._field_e=_338928_e, };;
}



inline _1a404b34d_binaryEval static__1a404bc77_new(jule::Ptr<_1a402ab8a_Eval> _339523_e, jule::Ptr<_1a3db8198_Token> _339537_op) {
	return _1a404b34d_binaryEval{._field_e=_339523_e, ._field_op=_339537_op};;
}



inline jule::Bool _1a404c00d_checkTypeCompatibility(_1a404b34d_binaryEval* _self_) {
	return _1a3ea485b_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a404c294_checkStructCommonOperatorCompatibility(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a3e172d5_FnIns> _340917_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a7ae8237:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a7ae7e18:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a7ae7e7e:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a7ae7ee5:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a7ae805b:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a7ae80c2:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a7ae8138:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7ae9733:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a7ae9799:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a7ae9810:;
			{
				_340917_overload=(*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a7ae7940:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a7ae7da2:;
	};
	if ((_340917_overload == nullptr)) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a3e16339_ParamIns> _344113_p = (*(_340917_overload))._field_Params[1LL];;
	return _1a3ea352a_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344113_p))._field_Decl))._field_Reference, &((*_344113_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a4028e63_Data> _1a404c52a_evalComptimeTypeInfo(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a3e3e054_comptimeTypeInfo> _344613_r = _1a4060e45_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_344613_r == nullptr)) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3e3e054_comptimeTypeInfo> _345113_l = _1a4060e45_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a7b083ac:;
			{
				jule::Ptr<_1b289b651_Const> _345417_constant = static__1b289c124_NewBool(_1a405a637_Equal((*(_345113_l))._field_base, (*(_344613_r))._field_base));;
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_345417_constant, &__jule_any_type19), ._field_Constant=_345417_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b09754:;
			{
				jule::Ptr<_1b289b651_Const> _346117_constant = static__1b289c124_NewBool((!(_1a405a637_Equal((*(_345113_l))._field_base, (*(_344613_r))._field_base))));;
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, ._field_Model=jule::Any(_346117_constant, &__jule_any_type19), ._field_Constant=_346117_constant});;
			}
		}
		else {
			_case_begin_1a7b07c3b:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b08027:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404c7b1_evalNil(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a405bccb_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b0deea:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b0bda5:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b0db65:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404ca47_evalEnum(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a3e29db9_Enum> _349213_enm = _1a405cd32_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b112e9:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _349617_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a405cd32_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_349617_rkind=(*((*(_1a405cd32_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a3ea3e87_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349213_enm))._field_Kind.alloc)._field_Kind), &(_349617_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		_match_end_1a7b11283:;
	};
	if (((_1a405cd32_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349213_enm != _1a405cd32_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7b16c7d:;
			{
				if ((!(_1b289b0ac_IsNum(_1a405a2e6_Str((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7b17cc3:;
			{
				jule::Ptr<_1a3e2934c_EnumItem> _352613_first = (*_349213_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b28a0622_IsI64((*((*((*(_352613_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a7b1b48b:;
						{
							if ((_1b289d026_ReadI64((*(*(*_352613_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1a7b21260;
							};
							goto _julec_label_1a7b1c5be;
						}
					}
					else if (_1b28a08a8_IsU64((*((*((*(_352613_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a7b1b3ae:;
						{
							if ((_1b289d2ac_ReadU64((*(*(*_352613_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1a7b21260;
							};
							goto _julec_label_1a7b1c5be;
						}
					}
					else {
						_case_begin_1a7b1b007:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3539:17"));;
						}
					}
					_match_end_1a7b1ae91:;
				};
				_julec_label_1a7b1c5be:;
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1a402b54d_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1a7b21260:;
				goto _case_begin_1a7b17d39;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a7b17d39:;
			{
				if (((_1a405c57e_Prim((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b289a9d5_IsInt(_1a4062d48_Str(_1a405c57e_Prim((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a7b11360:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b168e8:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404cccd_evalTypeEnum(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a3e2b5c4_TypeEnum> _355913_enm = _1a405d0b8_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b25e8a:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b25341:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3e2b915_Str(_355913_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b25aa0:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404d064_evalSptr(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b28366:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b273ba:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b27ed1:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404d2ea_evalPtr(_1a404b34d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a7b2a5aa:;
			{
				if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a7b2b941:;
			{
				if ((_1a405ca9b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a406a834_IsUnsafe(_1a405ca9b_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1a40543bc_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a7b29be7:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b29b2b:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404d581_evalArr(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b3310c:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b32925:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b32c77:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404d817_evalSlc(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b35791:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b347e5:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b3540b:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404da9d_evalStruct(_1a404b34d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a7b371ee:;
			{
				if (((*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a7b3773d:;
			{
				if (((*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a7b377a4:;
			{
				if (((*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7b3781a:;
			{
				if (((*(_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b37881:;
			{
				if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		_match_end_1a7b37056:;
	};
	if ((!(_1a404c294_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a4028e63_Data> _1a404dd34_evalTrait(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b436c2:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b42abc:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b4333c:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404e0ba_evalAny(_1a404b34d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7b45916:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b45053:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b44e87:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404e351_evalBool(_1a404b34d_binaryEval* _self_) {
	if ((!(_1a404c00d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a7b47b05:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a7b46b59:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b47770:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a404e5d7_evalStr(_1a404b34d_binaryEval* _self_) {
	jule::Str _375813_rk = _1a405a2e6_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_375813_rk.equal("str", 3))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_375813_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a7b4b8d9:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7b4c775:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		else {
			_case_begin_1a7b4a6c9:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b4b4ee:;
	};
}



inline void _1a404e7d5_setTypeToGreater(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a4062a07_Prim> _37839_lp = _1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a4062a07_Prim> _37849_rp = _1a405c57e_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1a402986a_IsConst((*(_self_))._field_l)) {
		if ((!(_1a402986a_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37849_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1a7b52208;
	};
	if (_1a402986a_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37839_lp))._field_Kind;
		return;;
	};
	_julec_label_1a7b52208:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a402986a_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37849_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1b2899297_IsGreater((*_37849_rp.alloc)._field_Kind, (*_37839_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a402986a_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37849_rp.alloc)._field_Kind;
		};
	};
}



inline void _1a404ea8d_checkModData(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _381636_d) {
	if ((!(_1a402986a_IsConst((*(_381636_d)).ptr())))) {
		if (((_1a405c57e_Prim((*((*(_381636_d))))._field_Kind.ptr()) == nullptr) || (!(_1b289a9d5_IsInt((*(_1a405c57e_Prim((*((*(_381636_d))))._field_Kind)))._field_Kind))))) {
			_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a401019c_sigAssignable(jule::Str::lit("i64", 3), _381636_d)) {
			_case_begin_1a7b59ee1:;
			{
				_1b289e5bb_SetI64((*((*(_381636_d))))._field_Constant.ptr(), _1b289dce6_AsI64((*((*(_381636_d))))._field_Constant));
			}
		}
		else if (_1a4010565_unsigAssignable(jule::Str::lit("u64", 3), _381636_d)) {
			_case_begin_1a7b59bd3:;
			{
				_1b289e874_SetU64((*((*(_381636_d))))._field_Constant.ptr(), _1b289e07c_AsU64((*((*(_381636_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1a7b59b6c:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7b59ad4:;
	};
}



inline void _1a404ec8b_mod(_1a404b34d_binaryEval* _self_) {
	_1a404ea8d_checkModData(_self_, &((*(_self_))._field_l));
	_1a404ea8d_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a4050187_numbersAreCompatibile(_1a404b34d_binaryEval* _self_, jule::Str* _383837_lk, jule::Str* _383847_rk) {
	if ((!(_1b289b0ac_IsNum((*(_383847_rk)))))) {
		return false;;
	};
	if ((_1a402986a_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_383837_lk)).equal("f32", 3)) {
		if ((_1a402986a_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a400ed28_floatAssignable(_383837_lk, &((*(_self_))._field_r));;
		};
		return (*(_383847_rk)).equal("f32", 3);;
	};
	if ((*(_383837_lk)).equal("f64", 3)) {
		if ((_1a402986a_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a400ed28_floatAssignable(_383837_lk, &((*(_self_))._field_r));;
		};
		return (*(_383847_rk)).equal("f64", 3);;
	};
	if ((_1a402986a_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a40108d9_intAssignable((*(_383837_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_383837_lk)) == (*(_383847_rk)));;
}



inline jule::Ptr<_1a4028e63_Data> _1a405041d_evalFloat(_1a404b34d_binaryEval* _self_) {
	jule::Str _38649_lk = (*(_1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38659_rk = (*(_1a405c57e_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a4050187_numbersAreCompatibile(_self_, &(_38649_lk), &(_38659_rk))))) {
		_1a3ea43a5_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a7b64cdc:;
			{
				if (((!(_1a402986a_IsConst((*(_self_))._field_l))) || (!(_1a40108d9_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1a402986a_IsConst((*(_self_))._field_r))) || (!(_1a40108d9_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b289e5bb_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b289dce6_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_1b289e874_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _1b289e07c_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1a4053be6_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a7b64c76:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7b64d53:;
			{
				_1a404e7d5_setTypeToGreater(_self_);
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		_match_end_1a7b6545d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a7b6c07a:;
			{
				_1a404e7d5_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a7b6cc6d:;
			{
				if ((!(_1b289a9d5_IsInt(_38659_rk)))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a404ec8b_mod(_self_);
				_1a404e7d5_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a7b6553a:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b6b4ca:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a40506a4_evalInt(_1a404b34d_binaryEval* _self_) {
	jule::Str _39289_lk = (*(_1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39299_rk = (*(_1a405c57e_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a7b717aa:;
			{
				if (((!(_1b289a9d5_IsInt(_39289_lk))) || (!(_1b289a9d5_IsInt(_39299_rk))))) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39289_lk, &__jule_any_type4),jule::Any(_39299_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1a4053be6_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a7b71a96:;
	};
	if ((!(_1a4050187_numbersAreCompatibile(_self_, &(_39289_lk), &(_39299_rk))))) {
		_1a3ea43a5_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7b753c4:;
			{
				return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a41504b8_primBool, });;
			}
		}
		_match_end_1a7b7535d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a7b76b89:;
			{
				_1a404e7d5_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a7b7787c:;
			{
				_1a404ec8b_mod(_self_);
				_1a404e7d5_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a7b754b2:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b7677c:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a405093a_evalPrim(_1a404b34d_binaryEval* _self_) {
	jule::Ptr<_1a4062a07_Prim> _39859_prim = _1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a4065c08_IsBool(_39859_prim.ptr())) {
			_case_begin_1a7b7a055:;
			{
				return _1a404e351_evalBool(_self_);;
			}
		}
		else if (_1a4065e8e_IsStr(_39859_prim.ptr())) {
			_case_begin_1a7b7a0ee:;
			{
				return _1a404e5d7_evalStr(_self_);;
			}
		}
		_match_end_1a7b79ede:;
	};
	if ((_1a405c57e_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a4062d48_Str(_39859_prim.ptr()), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1b289ad26_IsFloat((*_39859_prim.alloc)._field_Kind)) {
			_case_begin_1a7b7ca80:;
			{
				return _1a405041d_evalFloat(_self_);;
			}
		}
		else if (_1b289a9d5_IsInt((*_39859_prim.alloc)._field_Kind)) {
			_case_begin_1a7b7cb18:;
			{
				return _1a40506a4_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a7b7ca19:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7b7a198:;
	};
}



inline void _1a4050b38_checkSpecialCases(_1a404b34d_binaryEval* _self_) {
	if (((!(_1a405b528_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a405b00b_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1a405b528_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a405b00b_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4050dbe_evalOp(_1a404b34d_binaryEval* _self_) {
	_1a4050b38_checkSpecialCases(_self_);
	{
		
		if (_1a405b292_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a7b88162:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1a4060e45_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89509:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b89570;
			}
		}
		else if ((_1a4060e45_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89570:;
			{
				return _1a404c52a_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a405c57e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1a4066225_IsAny(_1a405c57e_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1a7b87edb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b88052;
			}
		}
		else if (_1a405b00b_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1a7b88052:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b8965d;
			}
		}
		else if (_1a405b00b_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a7b8965d:;
			{
				return _1a404c7b1_evalNil(_self_);;
			}
		}
		else if (((_1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1a4066225_IsAny(_1a405c57e_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1a7b896c4:;
			{
				return _1a404e0ba_evalAny(_self_);;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b8973a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b897a1;
			}
		}
		else if ((_1a405d0b8_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b897a1:;
			{
				return _1a404cccd_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a405cd32_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89817:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b8987d;
			}
		}
		else if ((_1a405cd32_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b8987d:;
			{
				return _1a404ca47_evalEnum(_self_);;
			}
		}
		else if ((_1a405c815_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b898e4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b8995a;
			}
		}
		else if ((_1a405c815_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b8995a:;
			{
				return _1a404d064_evalSptr(_self_);;
			}
		}
		else if ((_1a405ca9b_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b899c1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b89a37;
			}
		}
		else if ((_1a405ca9b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89a37:;
			{
				return _1a404d2ea_evalPtr(_self_);;
			}
		}
		else if ((_1a405d34e_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89a9d:;
			{
				return _1a404d581_evalArr(_self_);;
			}
		}
		else if ((_1a405d5d5_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89b14:;
			{
				return _1a404d817_evalSlc(_self_);;
			}
		}
		else if ((_1a405dd88_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89b7a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a7b89be1;
			}
		}
		else if ((_1a405dd88_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89be1:;
			{
				return _1a404dd34_evalTrait(_self_);;
			}
		}
		else if ((_1a405db02_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89c57:;
			{
				return _1a404da9d_evalStruct(_self_);;
			}
		}
		else if ((_1a405c57e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7b89cbd:;
			{
				return _1a405093a_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a7b878d1:;
			{
				_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a405a2e6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7b87cbb:;
	};
}



inline void _1a4051177_evalConst(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _407633_d) {
	{
		
		if (((*(_407633_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1a7b9c83b:;
			{
				return;;
			}
		}
		else if ((!(_1a402986a_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a402986a_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a7b9cde1:;
			{
				(*((*(_407633_d))))._field_Constant=nullptr;
				(*((*(_407633_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1a7b9c75e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a7b9cebd:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a2206_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a7ba03dd:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool((!(_1b28a2206_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a7ba0454:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a1db5_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a7ba04ba:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a1a74_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a7ba0531:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a2bc9_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a7ba05a8:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a2547_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a7ba0630:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a301a_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a7ba06a7:;
			{
				(*((*(_407633_d))))._field_Constant=static__1b289c124_NewBool(_1b28a2888_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a7ba072e:;
			{
				_1b28a335b_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a7ba07a6:;
			{
				_1b28a369c_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a7ba082d:;
			{
				_1b28a39dd_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a7ba08a5:;
			{
				jule::Bool _411613_ok = _1b28a3d2e_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_411613_ok)) && (_1b289e313_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a4062a07_Prim> _412117_prim = _1a405c57e_Prim((*((*(_407633_d))))._field_Kind.ptr());;
				{
					
					if (_1b289a40d_IsSigInt((*(_412117_prim))._field_Kind)) {
						_case_begin_1a7bb17ea:;
						{
							_1b289e5bb_SetI64((*((*(_407633_d))))._field_Constant, _1b289dce6_AsI64((*((*(_407633_d))))._field_Constant));
						}
					}
					else if (_1b289a71b_IsUnsigInt((*(_412117_prim))._field_Kind)) {
						_case_begin_1a7bb1894:;
						{
							_1b289e874_SetU64((*((*(_407633_d))))._field_Constant, _1b289e07c_AsU64((*((*(_407633_d))))._field_Constant));
						}
					}
					_match_end_1a7bb1795:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a7ba092c:;
			{
				jule::Bool _412913_ok = _1b28a4170_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412913_ok)) && (_1b289e313_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a7ba09a4:;
			{
				_1b28a4802_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a7ba0a2b:;
			{
				_1b28a44b1_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a7ba0aa3:;
			{
				_1b28a4b43_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a7ba0b2a:;
			{
				_1b28a4e84_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a7ba0ba2:;
			{
				_1b28a52c5_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1a7b9e6ea:;
	};
	(*((*(_407633_d))))._field_Model=jule::Any((*((*(_407633_d))))._field_Constant, &__jule_any_type19);
	_1a4055533_applyCastModelByEnum(_407633_d, _1a405cd32_Enum((*((*(_407633_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1a4051430_checkData(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _415433_d) {
	jule::Ptr<_1a3e172d5_FnIns> _41559_f = _1a405d86b_Fn((*((*(_415433_d))))._field_Kind.ptr());;
	if ((((_41559_f != nullptr) && ((*_41559_f.alloc)._field_Decl != nullptr)) && _1a3e14ada_IsMethod((*_41559_f.alloc)._field_Decl))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a405162d_checkDatas(_1a404b34d_binaryEval* _self_) {
	_1a4051430_checkData(_self_, &((*(_self_))._field_l));
	_1a4051430_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a40518d6_setModel(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _416632_d) {
	if (_1a402986a_IsConst((*(_416632_d)).ptr())) {
		if (((_1a402986a_IsConst((*(_self_))._field_l.ptr()) && _1a402986a_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a4028e63_Data> _417513_l = (*(_self_))._field_l;;
	jule::Ptr<_1a4028e63_Data> _417520_r = (*(_self_))._field_r;;
	({
		jule::Ptr<_1a4028e63_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a4028e63_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_417513_l = ___jule_assign_arg;
		_417520_r = _1___jule_assign_arg;
	});
	if ((!(_1a4029bab_GoodOperand(_417513_l, &(_417520_r))))) {
		std::swap(_417513_l, _417520_r);
	};
	(*((*(_416632_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0666a_BinaryExprModel>(_1a3e0666a_BinaryExprModel{._field_Left=jule::new_ptr<_1a3e06170_OperandExprModel>(_1a3e06170_OperandExprModel{._field_Kind=(*_417513_l.alloc)._field_Kind, ._field_Model=(*_417513_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a3e06170_OperandExprModel>(_1a3e06170_OperandExprModel{._field_Kind=(*_417520_r.alloc)._field_Kind, ._field_Model=(*_417520_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1a4051b8e_postEval(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _419332_d) {
	(*((*(_419332_d))))._field_Lvalue=false;
	_1a40518d6_setModel(_self_, _419332_d);
}



inline jule::Ptr<_1a4028e63_Data> _1a405208a_solveExplicit(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a4028e63_Data>* _419837_l, jule::Ptr<_1a4028e63_Data>* _419852_r) {
	({
		jule::Ptr<_1a4028e63_Data> ___jule_assign_arg = (*(_419837_l));
		jule::Ptr<_1a4028e63_Data> _1___jule_assign_arg = (*(_419852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a405162d_checkDatas(_self_);
	jule::Ptr<_1a4028e63_Data> _420313_d = _1a4050dbe_evalOp(_self_);;
	({
		jule::Ptr<_1a4028e63_Data> ___jule_assign_arg = (*(_419837_l));
		jule::Ptr<_1a4028e63_Data> _1___jule_assign_arg = (*(_419852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a4051177_evalConst(_self_, &(_420313_d));
	if ((_420313_d != nullptr)) {
		(*_420313_d.alloc)._field_Mutable=true;
		_1a4051b8e_postEval(_self_, &(_420313_d));
	};
	return _420313_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a40523cb_eval(_1a404b34d_binaryEval* _self_, jule::Ptr<_1a3dd6051_BinaryExpr>* _421828_op) {
	if (((*((*((*(_421828_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a402b1da_pushErr((*(_self_))._field_e.ptr(), (*((*(_421828_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a402b54d_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _422513_l = _1a4048aa9_evalExpr1((*(_self_))._field_e, (*((*(_421828_op))))._field_Left);;
	if (((_422513_l == nullptr) || ((*(_422513_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _423013_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_422513_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423013_prefix;
	});;
	jule::Ptr<_1a4028e63_Data> _423313_r = _1a4048aa9_evalExpr1((*(_self_))._field_e, (*((*(_421828_op))))._field_Right);;
	if (((_423313_r == nullptr) || ((*(_423313_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421828_op))))._field_Op;
	jule::Ptr<_1a4028e63_Data> _424013_d = _1a405208a_solveExplicit(_self_, &(_422513_l), &(_423313_r));;
	if ((((_424013_d != nullptr) && (*(_422513_l))._field_IsRune) && (*(_423313_r))._field_IsRune)) {
		(*_424013_d.alloc)._field_IsRune=true;
	};
	return _424013_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a404b34d_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4058547_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a405913b_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a405a2e6_Str(_1a4059e2d_TypeKind* _self_) {
	if (_1a405b00b_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1c9754d1c_StrBuilder _7413_kind = static__1c97550d6_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1c975db28_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1a405ac75_Binded(_self_)) {
		_1c975db28_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1c975db28_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1c975db28_WriteStr(&_7413_kind, _1a4059977_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1a40594d2_Str((*(_self_))._field_Kind));
	};
	return _1c975e420_Str(&_7413_kind);;
}



inline jule::Bool _1a405a637_Equal(jule::Ptr<_1a4059e2d_TypeKind> _self_, jule::Ptr<_1a4059e2d_TypeKind> _9021_other) {
	if (_1a405b00b_IsNil(_self_.ptr())) {
		return _1a405b00b_IsNil(_9021_other.ptr());;
	};
	if (_1a405ac75_Binded(_self_)) {
		return (_1a405ac75_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return _1a4059977_Kind_mptr_data[((*_self_.alloc)._field_Kind).type_offset]._1a4059823_Equal((*_self_.alloc)._field_Kind, _9021_other);;
}



inline jule::Bool _1a405ac75_Binded(_1a4059e2d_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a405b00b_IsNil(_1a4059e2d_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a405b292_Void(_1a4059e2d_TypeKind* _self_) {
	jule::Ptr<_1a4062a07_Prim> _1109_prim = _1a405c57e_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a405b528_Comparable(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _11717__self = _self_;;
		if ((_1a405db02_Struct(_11717__self) != nullptr)) {
			return (*(_1a405db02_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1a405e11e_Map(_11717__self) == nullptr) && (_1a405d5d5_Slc(_11717__self) == nullptr)) && (_1a405d86b_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1a405b7ae_Mutable(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _12817__self = _self_;;
		if ((_1a405db02_Struct(_12817__self) != nullptr)) {
			return (*(_1a405db02_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1a405dd88_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1a405c57e_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1a4062a07_Prim> _13617_p = _1a405c57e_Prim(_12817__self);;
			return _1a4066225_IsAny(_13617_p.ptr());;
		};
		if ((_1a405d34e_Arr(_12817__self) != nullptr)) {
			return _1a405b7ae_Mutable((*(_1a405d34e_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1a405d5d5_Slc(_12817__self) != nullptr) || (_1a405ca9b_Ptr(_12817__self) != nullptr)) || (_1a405c815_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1a405ba45_Ordered(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1a4062a07_Prim> _15213_prim = _1a405c57e_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1b289b0ac_IsNum((*_15213_prim.alloc)._field_Kind) || _1a4065e8e_IsStr(_15213_prim));;
		};
		if ((_1a405ca9b_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a3e0226a_StructIns> _15913_s = _1a405db02_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a3e29db9_Enum> _16613_enm = _1a405cd32_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1b289b0ac_IsNum(_1a405a2e6_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a405bccb_NilCompatible(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1a4062a07_Prim> _17913_prim = _1a405c57e_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1a4066225_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1a405b00b_IsNil(_17717__self) || (_1a405d86b_Fn(_17717__self) != nullptr)) || (_1a405c815_Sptr(_17717__self) != nullptr)) || (_1a405ca9b_Ptr(_17717__self) != nullptr)) || (_1a405dd88_Trait(_17717__self) != nullptr)) || (_1a405d5d5_Slc(_17717__self) != nullptr)) || (_1a405e11e_Map(_17717__self) != nullptr)) || (_1a405d0b8_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1a405c062_PerformsRC(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1a4062a07_Prim> _19913_prim = _1a405c57e_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1a4066225_IsAny(_19913_prim) || _1a4065e8e_IsStr(_19913_prim));;
		};
		return (((_1a405c815_Sptr(_19817__self) != nullptr) || (_1a405d5d5_Slc(_19817__self) != nullptr)) || (_1a405dd88_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1a405c2e8_Variadicable(_1a4059e2d_TypeKind* _self_) {
	{
		_1a4059e2d_TypeKind* _21017__self = _self_;;
		return (_1a405d5d5_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1a4062a07_Prim> _1a405c57e_Prim(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1a7bea2d4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4062a07_Prim>(20);;
			}
		}
		else {
			_case_begin_1a7c0dcba:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c0dc65:;
	};
}



inline jule::Ptr<_1a4066533_Sptr> _1a405c815_Sptr(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1a7c0e3e7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4066533_Sptr>(21);;
			}
		}
		else {
			_case_begin_1a7c0eb56:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c0eb01:;
	};
}



inline jule::Ptr<_1a4069cea_Ptr> _1a405ca9b_Ptr(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a7c1043c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4069cea_Ptr>(26);;
			}
		}
		else {
			_case_begin_1a7c1088d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c10838:;
	};
}



inline jule::Ptr<_1a3e29db9_Enum> _1a405cd32_Enum(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7c11174:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e29db9_Enum>(3);;
			}
		}
		else {
			_case_begin_1a7c115c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c11570:;
	};
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a405d0b8_TypeEnum(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a7c11dab:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e2b5c4_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1a7c1230c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c122a7:;
	};
}



inline jule::Ptr<_1a4069327_Arr> _1a405d34e_Arr(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1a7c12b04:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4069327_Arr>(25);;
			}
		}
		else {
			_case_begin_1a7c13055:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c13000:;
	};
}



inline jule::Ptr<_1a4067006_Slc> _1a405d5d5_Slc(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1a7c1384c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4067006_Slc>(22);;
			}
		}
		else {
			_case_begin_1a7c13c9d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c13c48:;
	};
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a405d86b_Fn(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a7c14595:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e172d5_FnIns>(1);;
			}
		}
		else {
			_case_begin_1a7c149e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c14991:;
	};
}



inline jule::Ptr<_1a3e0226a_StructIns> _1a405db02_Struct(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7c152cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e0226a_StructIns>(0);;
			}
		}
		else {
			_case_begin_1a7c1572d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c156c8:;
	};
}



inline jule::Ptr<_1a3e276ad_Trait> _1a405dd88_Trait(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1a7c16014:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e276ad_Trait>(2);;
			}
		}
		else {
			_case_begin_1a7c16465:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c16410:;
	};
}



inline jule::Ptr<_1a406869a_Map> _1a405e11e_Map(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1a7c16c5c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a406869a_Map>(24);;
			}
		}
		else {
			_case_begin_1a7c171ad:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c17158:;
	};
}



inline jule::Ptr<_1a4067aea_Tuple> _1a405e3a5_Tup(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1a7c17994:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a4067aea_Tuple>(23);;
			}
		}
		else {
			_case_begin_1a7c17de5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c17d90:;
	};
}



inline jule::Bool _1a405e63b_comptime(_1a4059e2d_TypeKind* _self_) {
	return (((((((((((((_1a4060bae_comptimeTypeInfos(_self_) != nullptr) || (_1a4060e45_comptimeTypeInfo(_self_) != nullptr)) || (_1a405e8c2_comptimeStructFields(_self_) != nullptr)) || (_1a405eb58_comptimeStructField(_self_) != nullptr)) || (_1a405edde_comptimeEnumFields(_self_) != nullptr)) || (_1a4060175_comptimeEnumField(_self_) != nullptr)) || (_1a40611cb_comptimeStatics(_self_) != nullptr)) || (_1a4061462_comptimeStatic(_self_) != nullptr)) || (_1a406040b_comptimeParams(_self_) != nullptr)) || (_1a4060692_comptimeParam(_self_) != nullptr)) || (_1a40616e8_comptimeValue(_self_) != nullptr)) || (_1a4061c15_comptimeFiles(_self_) != nullptr)) || (_1a406197e_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a3e31db0_comptimeStructFields> _1a405e8c2_comptimeStructFields(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1a7c18a94:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e31db0_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1a7c1c449:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c1c3e4:;
	};
}



inline jule::Ptr<_1a3e301ee_comptimeStructField> _1a405eb58_comptimeStructField(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1a7c1c647:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e301ee_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1a7c1ccda:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c1cc85:;
	};
}



inline jule::Ptr<_1a3e37b0d_comptimeEnumFields> _1a405edde_comptimeEnumFields(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1a7c1d37e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e37b0d_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1a7c1da22:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c1d9bc:;
	};
}



inline jule::Ptr<_1a3e36766_comptimeEnumField> _1a4060175_comptimeEnumField(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1a7c1e0a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e36766_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1a7c1e759:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c1e704:;
	};
}



inline jule::Ptr<_1a3e3b392_comptimeParams> _1a406040b_comptimeParams(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1a7c1eced:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e3b392_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1a7c20491:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c2043b:;
	};
}



inline jule::Ptr<_1a3e39208_comptimeParam> _1a4060692_comptimeParam(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1a7c21052:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e39208_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1a7c211ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c21195:;
	};
}



inline jule::Ptr<_1a3e2e72b_comptimeRange> _1a4060928_comptimeRange(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1a7c219e2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e2e72b_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1a7c21e10:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c21daa:;
	};
}



inline jule::Ptr<_1a3e3c959_comptimeTypeInfos> _1a4060bae_comptimeTypeInfos(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1a7c229c1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e3c959_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1a7c22b69:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c22b14:;
	};
}



inline jule::Ptr<_1a3e3e054_comptimeTypeInfo> _1a4060e45_comptimeTypeInfo(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1a7c231db:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e3e054_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1a7c23890:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c2383a:;
	};
}



inline jule::Ptr<_1a3e3516b_comptimeStatics> _1a40611cb_comptimeStatics(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1a7c23e34:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e3516b_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1a7c245d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c24583:;
	};
}



inline jule::Ptr<_1a3e334aa_comptimeStatic> _1a4061462_comptimeStatic(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1a7c251aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e334aa_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1a7c25353:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c252ed:;
	};
}



inline jule::Ptr<_1a3e45566_comptimeValue> _1a40616e8_comptimeValue(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1a7c25b4a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e45566_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1a7c26068:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c26013:;
	};
}



inline jule::Ptr<_1a3e494b0_comptimeFile> _1a406197e_comptimeFile(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1a7c26871:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e494b0_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1a7c26c8e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c26c39:;
	};
}



inline jule::Ptr<_1a3e47db5_comptimeFiles> _1a4061c15_comptimeFiles(_1a4059e2d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1a7c27850:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3e47db5_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1a7c279e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7c27993:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a4059e2d_TypeKind _Src) {
	_Stream << _1a405a2e6_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a4062474_checked(_1a4062100_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4062100_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a4062d48_Str(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a4063189_Equal(jule::Ptr<_1a4062a07_Prim> _self_, jule::Ptr<_1a4059e2d_TypeKind> _50821_other) {
	jule::Ptr<_1a4062a07_Prim> _5099_prim = _1a405c57e_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1a406362e_IsConstraint(_1a4062a07_Prim* _self_) {
	return ((((!(_1a4065e8e_IsStr(_self_))) && (!(_1a4066225_IsAny(_self_)))) && (!(_1a4065c08_IsBool(_self_)))) && (!(_1b289b0ac_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a40638b5_IsI8(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a4063b4b_IsI16(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a4063dd2_IsI32(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a4064168_IsI64(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a40643ee_IsU8(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a4064685_IsU16(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a406491b_IsU32(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a4064ba2_IsU64(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a4064e38_IsF32(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a40651be_IsF64(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a4065455_IsInt(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a40656db_IsUint(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a4065972_IsUintptr(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a4065c08_IsBool(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a4065e8e_IsStr(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a4066225_IsAny(_1a4062a07_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4062a07_Prim _Src) {
	_Stream << _1a4062d48_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a40668a7_Str(_1a4066533_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a405a2e6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a4066be8_Equal(jule::Ptr<_1a4066533_Sptr> _self_, jule::Ptr<_1a4059e2d_TypeKind> _58521_other) {
	jule::Ptr<_1a4066533_Sptr> _5869_sptr = _1a405c815_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1a405a637_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4066533_Sptr _Src) {
	_Stream << _1a40668a7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a406748a_Str(_1a4067006_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a405a2e6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a40677cb_Equal(jule::Ptr<_1a4067006_Slc> _self_, jule::Ptr<_1a4059e2d_TypeKind> _60421_other) {
	jule::Ptr<_1a4067006_Slc> _6059_slc = _1a405d5d5_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1a405a637_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4067006_Slc _Src) {
	_Stream << _1a406748a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a4067e6e_Str(_1a4067aea_Tuple* _self_) {
	_1c9754d1c_StrBuilder _62113_s = static__1c97550d6_New(16LL);;
	_1c975ddd1_WriteByte(&_62113_s, '(');
	_1c975db28_WriteStr(&_62113_s, _1a405a2e6_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7c37ee2:;
		if (it != expr_end) {
			jule::Ptr<_1a4059e2d_TypeKind> *_62416_t = it;
			{
				_1c975ddd1_WriteByte(&_62113_s, ',');
				_1c975db28_WriteStr(&_62113_s, _1a405a2e6_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1a7c37ee2:;
			++it;
			goto _iter_begin_1a7c37ee2;
		}
		_iter_end_1a7c37ee2:;
	};
	_1c975ddd1_WriteByte(&_62113_s, ')');
	return _1c975e420_Str(&_62113_s);;
}



inline jule::Bool _1a40682b0_Equal(jule::Ptr<_1a4067aea_Tuple> _self_, jule::Ptr<_1a4059e2d_TypeKind> _63321_other) {
	jule::Ptr<_1a4067aea_Tuple> _6349_tup = _1a405e3a5_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1a405a637_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1a7c3a467:;
	}
	_iter_end_1a7c3a467:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4067aea_Tuple _Src) {
	_Stream << _1a4067e6e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a4068a1e_Str(_1a406869a_Map* _self_) {
	_1c9754d1c_StrBuilder _66113_s = static__1c97550d6_New(16LL);;
	_1c975db28_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_1c975db28_WriteStr(&_66113_s, _1a405a2e6_Str((*(_self_))._field_Key.ptr()));
	_1c975ddd1_WriteByte(&_66113_s, ']');
	_1c975db28_WriteStr(&_66113_s, _1a405a2e6_Str((*(_self_))._field_Val.ptr()));
	return _1c975e420_Str(&_66113_s);;
}



inline jule::Bool _1a4068d60_Equal(jule::Ptr<_1a406869a_Map> _self_, jule::Ptr<_1a4059e2d_TypeKind> _67021_other) {
	jule::Ptr<_1a406869a_Map> _6719_m = _1a405e11e_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1a405a637_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1a405a637_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a406869a_Map _Src) {
	_Stream << _1a4068a1e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a406969b_Str(_1a4069327_Arr* _self_) {
	_1c9754d1c_StrBuilder _68913_s = static__1c97550d6_New(16LL);;
	_1c975ddd1_WriteByte(&_68913_s, '[');
	_1c975db28_WriteStr(&_68913_s, _1b288d588_Itoa((*(_self_))._field_N));
	_1c975ddd1_WriteByte(&_68913_s, ']');
	_1c975db28_WriteStr(&_68913_s, _1a405a2e6_Str((*(_self_))._field_Elem.ptr()));
	return _1c975e420_Str(&_68913_s);;
}



inline jule::Bool _1a40699dc_Equal(jule::Ptr<_1a4069327_Arr> _self_, jule::Ptr<_1a4059e2d_TypeKind> _69821_other) {
	jule::Ptr<_1a4069327_Arr> _6999_arr = _1a405d34e_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1a405a637_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4069327_Arr _Src) {
	_Stream << _1a406969b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a406a16e_Str(_1a4069cea_Ptr* _self_) {
	if (_1a406a834_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a405a2e6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a406a4b0_Equal(jule::Ptr<_1a4069cea_Ptr> _self_, jule::Ptr<_1a4059e2d_TypeKind> _72221_other) {
	jule::Ptr<_1a4069cea_Ptr> _7239_ptr = _1a405ca9b_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1a405a637_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1a406a834_IsUnsafe(_1a4069cea_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4069cea_Ptr _Src) {
	_Stream << _1a406a16e_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a406aceb_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a406c528_pushErr(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3db8198_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1a3e9aa1c_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1a406c726_allowBuiltin(_1a406bcdb_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a406c924_disallowBuiltin(_1a406bcdb_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a7c4a5ba_pushReference(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3e0226a_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a78cc02c_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1a3e1b295_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1a79ad76d_pushReference(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3e276ad_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a79b04d9_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1a3e1b295_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1a406ce85_pushReferenceByKind(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _83043_k) {
	{
		
		if ((_1a405db02_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1a7c49201:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _83317_t = _1a405db02_Struct((*(_83043_k)).ptr());;
				_1a7c4a5ba_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1a405dd88_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1a7c4929a:;
			{
				jule::Ptr<_1a3e276ad_Trait> _83617_t = _1a405dd88_Trait((*(_83043_k)).ptr());;
				_1a79ad76d_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1a7c490e1:;
	};
}



inline void _1a406d3a3_pushCycleError(_1a406bcdb_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _1c9754d1c_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a79b3c6d:;
				{
					return (*((*(_84325_def)).cast_ptr<_1a405913b_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1a79b34ba:;
				{
					return (*((*(_84325_def)).cast_ptr<_1a3dee4dc_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1a79b3674:;
				{
					return jule::Str();;
				}
			}
			_match_end_1a79b361e:;
		};
	});;
	jule::Str _8539_m = _1c975e420_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _1c980c215_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_1c975db28_WriteStr(_84156_message, _1c974028b_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1c975db28_WriteStr(_84156_message, _8569_refersTo);
	_1c975ddd1_WriteByte(_84156_message, '\n');
	_1c975db28_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1a406d79e_checkCrossCycle(_1a406bcdb_typeChecker* _self_, jule::Any _86330_decl, _1c9754d1c_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a79b6d1a:;
			{
				jule::Ptr<_1a405913b_TypeAlias> _86613_ta = _86330_decl.unsafe_cast_ptr<_1a405913b_TypeAlias>();;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a79b7cb6:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1a79b858b:;
									{
										_1a406d3a3_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1a406d79e_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1a79b8624:;
									{
										_1a406d3a3_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1a79b848c:;
							};
						}
						_iter_next_1a79b7cb6:;
						++it;
						goto _iter_begin_1a79b7cb6;
					}
					_iter_end_1a79b7cb6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a79b6b72:;
			{
				jule::Ptr<_1a3dee4dc_Struct> _87813_s = _86330_decl.unsafe_cast_ptr<_1a3dee4dc_Struct>();;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a79ba109:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1a79ba8ce:;
									{
										_1a406d3a3_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1a406d79e_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1a79ba967:;
									{
										_1a406d3a3_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1a79ba7d0:;
							};
						}
						_iter_next_1a79ba109:;
						++it;
						goto _iter_begin_1a79ba109;
					}
					_iter_end_1a79ba109:;
				};
			}
		}
		_match_end_1a79b6cb5:;
	};
	return true;;
}



inline jule::Bool _1a406db9a_checkIllegalCycles(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a79bc9be:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1a3dee4dc_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a79ba428:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1a405913b_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a79bc617:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a406c528_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c9754d1c_StrBuilder _92013_message = static__1c97550d6_New(32LL);;
	if ((!(_1a406d79e_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _1c975e420_Str(&_92013_message);;
		_1c975e61d_Clear(&_92013_message);
		_1a406d3a3_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_1c975e420_Str(&_92013_message);
		_1a406c528_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a79c23ec:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a79c05a4:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a79c2881:;
						{
							jule::Ptr<_1a3dee4dc_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a3dee4dc_Struct>();;
							(*(_93921_s))._field_Depends=jule::append((*_93921_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>::make({_89765_decl.unsafe_cast_ptr<_1a3dee4dc_Struct>()}));
						}
					}
					_match_end_1a79c2c27:;
				};
			}
		}
		_match_end_1a79c2397:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1a4059977_Kind> _1a406e096_fromTypeAlias(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _94733_decl, jule::Ptr<_1a405913b_TypeAlias>* _94760_ta) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1a406c528_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1a406c528_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a79c7ed5:;
			if (it != expr_end) {
				jule::Ptr<_1a405913b_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1a405a637_Equal((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96420_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a79c7ed5;
					};
				}
				_iter_next_1a79c7ed5:;
				++it;
				goto _iter_begin_1a79c7ed5;
			}
			_iter_end_1a79c7ed5:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a79ca2b2:;
			if (it != expr_end) {
				jule::Ptr<_1a405913b_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1a406c528_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a79cab75:;
						if (it != expr_end) {
							jule::Ptr<_1a405913b_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1a406c528_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1a79cab75:;
							++it;
							goto _iter_begin_1a79cab75;
						}
						_iter_end_1a79cab75:;
					};
				}
				_iter_next_1a79ca2b2:;
				++it;
				goto _iter_begin_1a79ca2b2;
			}
			_iter_end_1a79ca2b2:;
		};
	};
	jule::Bool _98913_ok = _1a406db9a_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_98913_ok=_1a3ea7cb0_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>::make({(*(_94760_ta))}));
	};
	jule::Ptr<_1a4059e2d_TypeKind> _100813_tk = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1a406ce85_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait<_1a4059977_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a406e492_fromEnum(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _102128_decl, jule::Ptr<_1a3e29db9_Enum>* _102155_e) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1a406c528_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1a406c528_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a406e88d_fromTypeEnum(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _103332_decl, jule::Ptr<_1a3e2b5c4_TypeEnum>* _103359_e) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1a406c528_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1a406c528_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a406ec89_fromTrait(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _104529_decl, jule::Ptr<_1a3e276ad_Trait>* _104556_t) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1a406c528_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1a406c528_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a79ad76d_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1a4070185_checkStructIns(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3e0226a_StructIns>* _105838_ins, jule::Ptr<_1a3db8198_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a3eb43a4_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1a3eb4dbb_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1a3eb465c_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a407043d_appendUsedStructReference(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dee4dc_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a79de87b:;
			{
				jule::Ptr<_1a3dee4dc_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a3dee4dc_Struct>();;
				if ((!(_1a3e00e6c_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					(*_108517_refS.alloc)._field_Uses=jule::append((*_108517_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>::make({(*(_107949_s))}));
				};
			}
		}
		_match_end_1a79de826:;
	};
}



inline jule::Ptr<_1a3e0226a_StructIns> _1a4070839_buildStructInstance(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _109243_decl, jule::Ptr<_1a3dee4dc_Struct>* _109270_s) {
	jule::Ptr<_1a406aceb_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a79e2829:;
				{
					jule::Ptr<_1a3e5d57e_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0);;
					jule::Ptr<_1a3e5d57e_scopeChecker> _110421_hard = _1a3e61906_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1a79e27c4;
					};
					jule::I64 _110817_n = ((*(*_110421_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110421_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1a79e27c4:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1a4079a1e_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a3e0226a_StructIns> _112213_ins = _1a3dee94e_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1a4058547_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79e7b4d:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcd653_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _112517_kind = _1a4074145_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				(*_112213_ins.alloc)._field_Generics=jule::append((*_112213_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a4058547_InsGeneric>>::make({jule::new_ptr<_1a4058547_InsGeneric>(_1a4058547_InsGeneric{._field_Kind=_112517_kind, })}));
			}
			_iter_next_1a79e7b4d:;
			++it;
			goto _iter_begin_1a79e7b4d;
		}
		_iter_end_1a79e7b4d:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1a3e0226a_StructIns> _1a4070c35_fromStruct(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _114034_decl, jule::Ptr<_1a3dee4dc_Struct>* _114061_s) {
	if ((!(_1a3e9b27b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1a406c528_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1a406c528_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a3e0226a_StructIns>(_1a3e0226a_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1a406db9a_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1a407043d_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1a3e0226a_StructIns> _116413_ins = _1a4070839_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1a3e9c04b_checkGenericQuantity((*(_self_))._field_s, (*((*(_116413_ins))._field_Decl))._field_Generics.len(), (*(_116413_ins))._field_Generics.len(), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _117413_existInstance = _1a3deec5c_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1a3ea5eab_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1a7c4a5ba_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1a4070185_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1a7c4a5ba_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1a4059977_Kind> _1a4071076_getDef(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a020ec:;
		if (it != expr_end) {
			jule::Ptr<_1a3dda85d_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1a4059977_Kind>(_1a4076d4b_buildPrimType((*_119916_g.alloc)._field_Ident), 20);;
				};
			}
			_iter_next_1a7a020ec:;
			++it;
			goto _iter_begin_1a7a020ec;
		}
		_iter_end_1a7a020ec:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a0286c:;
		if (it != expr_end) {
			jule::Ptr<_1a405913b_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1a406c528_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1a3e0226a_StructIns> _121121_st = _1a405db02_Struct((*((*_120521_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1a406db9a_checkIllegalCycles(_self_, _119830_decl, jule::Any((*_121121_st.alloc)._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120521_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1a7a0286c:;
			++it;
			goto _iter_begin_1a7a0286c;
		}
		_iter_end_1a7a0286c:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1a3e29db9_Enum> _122317_e = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4079579_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1a4059977_Kind>(_1a406e492_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1a3e2b5c4_TypeEnum> _122817_te = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a40798ba_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1a4059977_Kind>(_1a406e88d_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1a3e276ad_Trait> _123317_t = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4079238_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1a4059977_Kind>(_1a406ec89_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a406c528_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3dee4dc_Struct> _124213_s = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a40789eb_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1a4059977_Kind>(_1a4070c35_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1a405913b_TypeAlias> _124713_ta = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4078600_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1a4153246_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1a406e096_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1a406c528_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1a4059977_Kind> _1a40713b7_buildIdent(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _125933_decl) {
	return _1a4071076_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1a4059977_Kind> _1a4071708_buildSubIdent(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dce027_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1a4059977_Kind> _126413_ident = _1a40713b7_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a7a1054a:;
			{
				goto _match_end_1a7a10858;
			}
		}
		else {
			_case_begin_1a7a108ad:;
			{
				_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7a10858:;
	};
	jule::Ptr<_1a3e2b5c4_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1a3e2b5c4_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>> _127613_idents = (*_126336_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a120c9:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1a3e2aeec_TypeEnumItem> _127817_item = _1a3e2c185_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1a406c528_pushErr(_self_, (*_127716_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127513_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_127716_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1a406ce85_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1a4059977_Kind>((*(*(_127817_item))._field_Kind.alloc)._field_Kind, 19);;
				};
				_127513_t=_1a405d0b8_TypeEnum((*(*(_127817_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a7a120c9:;
			++it;
			_127713_i++;
			goto _iter_begin_1a7a120c9;
		}
		_iter_end_1a7a120c9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4066533_Sptr> _1a4071a49_buildSptrFromType(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1a7c4c90d:;
			{
				return nullptr;;
			}
		}
		else if ((_1a405db02_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1a7c4c996:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _130313_s = _1a405db02_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*(*_130313_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a405d34e_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1a405d34e_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1a7c4ca0c:;
			{
				_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7c4c7a9:;
	};
	return jule::new_ptr<_1a4066533_Sptr>(_1a4066533_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1a4066533_Sptr> _1a4071d8a_buildSptr(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dce6ed_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1a4059e2d_TypeKind> _132213_elem = _1a4074486_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1a4071a49_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1a4069cea_Ptr> _1a40721cb_buildPtrFromType(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1a7c529e0:;
			{
				return nullptr;;
			}
		}
		else if (((_1a405d34e_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1a405d34e_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1a7c52a89:;
			{
				_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a4069cea_Ptr>();;
			}
		}
		_match_end_1a7c528d0:;
	};
	return jule::new_ptr<_1a4069cea_Ptr>(_1a4069cea_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1a4069cea_Ptr> _1a407251c_buildPtr(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dd017c_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1a4059e2d_TypeKind> _134617_elem = nullptr;;
	if ((!(_1a3dd04e0_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1a4074486_checkDecl(_self_, &((*_134131_decl.alloc)._field_Elem));
		return _1a40721cb_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1a4069cea_Ptr>(_1a4069cea_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1a4067006_Slc> _1a407285d_buildSlc(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcea83_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1a4059e2d_TypeKind> _136313_elem = _1a4074486_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1a7c57b05:;
			{
				return nullptr;;
			}
		}
		else if (((_1a405d34e_Arr(_136313_elem.ptr()) != nullptr) && (*(_1a405d34e_Arr(_136313_elem)))._field_Auto)) {
			_case_begin_1a7c57b8d:;
			{
				_1a406c528_pushErr(_self_, (*((*_135831_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7c57aa0:;
	};
	return jule::new_ptr<_1a4067006_Slc>(_1a4067006_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1a4069327_Arr> _1a4072b9e_buildArr(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dd091e_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1a3dd0c82_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1a4028e63_Data> _138317_size = _1a4048dea_evalExpr(_1a3ea2eb9_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_137931_decl.alloc)._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a402986a_IsConst(_138317_size.ptr())))) {
			_1a406c528_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a405c57e_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_1b289a9d5_IsInt((*(_1a405c57e_Prim((*(_138317_size))._field_Kind)))._field_Kind))))) {
			_1a406c528_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(_1b289dce6_AsI64((*(_138317_size))._field_Constant.ptr()));
		if ((_138013_n < 0LL)) {
			_1a406c528_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _1b2896a47_MaxI(jule::Str::lit("int", 3));;
			if (((_1b288e91e_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1a406c528_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a4056369_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_1b288d2be_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a4059e2d_TypeKind> _141013_elem = _1a4074486_checkDecl(_self_, &((*_137931_decl.alloc)._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1a7c625d2:;
			{
				return nullptr;;
			}
		}
		else if (((_1a405d34e_Arr(_141013_elem.ptr()) != nullptr) && (*(_1a405d34e_Arr(_141013_elem)))._field_Auto)) {
			_case_begin_1a7c6267b:;
			{
				_1a406c528_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7c60b1e:;
	};
	return jule::new_ptr<_1a4069327_Arr>(_1a4069327_Arr{._field_Auto=_1a3dd0c82_AutoSized(_137931_decl), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1a406869a_Map> _1a4072ee0_buildMap(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dd116c_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1a4059e2d_TypeKind> _143313_key = _1a4074486_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _143813_val = _1a4074486_checkDecl(_self_, &((*_142831_decl.alloc)._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a405cd32_Enum(_143813_val.ptr()) != nullptr)) {
		_1a406c528_pushErr(_self_, (*((*_142831_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a406869a_Map>(_1a406869a_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1a4067aea_Tuple> _1a4073331_buildTuple(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dced80_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*_145233_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c68ad3:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcd653_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _145517_kind = _1a4074486_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1a7c68ad3:;
			++it;
			goto _iter_begin_1a7c68ad3;
		}
		_iter_end_1a7c68ad3:;
	};
	return jule::new_ptr<_1a4067aea_Tuple>(_1a4067aea_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1a4073672_checkFuncTypes(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3e172d5_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c6a5eb:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1a4074145_build(_self_, &((*((*((*((*_146621_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_146621_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a3ea6660_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1a7c6a5eb:;
			++it;
			goto _iter_begin_1a7c6a5eb;
		}
		_iter_end_1a7c6a5eb:;
	};
	if ((!(_1a3e14854_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1a4074145_build(_self_, &((*(*((*((*(*((*(_146538_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a40739b3_buildFunc(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3de0313_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1a406c528_pushErr(_self_, (*_148332_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3e143d1_Fn> _149313_f = _1a3e1d94b_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a3eb0955_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _150113_ins = _1a3e158aa_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1a4073672_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1a4059977_Kind> _1a4073d04_buildByNamespace(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dce401_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1a4076972_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1a3e77a60_ImportInfo> _151413_imp = _1a4079a1e_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a4077d08_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>([=](jule::Ptr<_1a3e77a60_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*_151239_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*_151449_imp.alloc)._field_LinkPath == _15139_path) && _1a3e7a678_isAccessibleViaSelection(_151449_imp));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1a3e7a0a1_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1a406c528_pushErr(_self_, (*_151239_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a406c924_disallowBuiltin(_self_);
	jule::Trait<_1a4079a1e_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a4079a1e_Lookup>(_151413_imp, 1);
	jule::Ptr<_1a4059e2d_TypeKind> _153013_kind = _1a4074486_checkDecl(_self_, &((*_151239_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1a406c726_allowBuiltin(_self_);
	return jule::Trait<_1a4059977_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a4074145_build(_1a406bcdb_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1a4059977_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a7c7a3ec:;
			{
				jule::Trait<_1a4059977_Kind> _154017_t = _1a40713b7_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1a3dcdc5d_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a7c7982a:;
			{
				jule::Trait<_1a4059977_Kind> _154517_t = _1a4071708_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1a3dce027_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a7c7997e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4066533_Sptr> _155117_t = _1a4071d8a_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1a3dce6ed_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7c799e5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4069cea_Ptr> _155717_t = _1a407251c_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1a3dd017c_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a7c79a5b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4067006_Slc> _156317_t = _1a407285d_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1a3dcea83_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a7c79ac2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4069327_Arr> _156917_t = _1a4072b9e_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1a3dd091e_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a7c79b38:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a406869a_Map> _157517_t = _1a4072ee0_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1a3dd116c_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a7c79b9e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a4067aea_Tuple> _158117_t = _1a4073331_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1a3dced80_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a7c7a4b8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3e172d5_FnIns> _158717_t = _1a40739b3_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1a3de0313_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1a4059977_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a7c7a52e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1a4059977_Kind> _159317_t = _1a4073d04_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1a3dce401_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1a7c79918:;
			{
				_1a406c528_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7c798b3:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1a7c886e6:;
			{
				return _153717_kind.cast_ptr<_1a4059e2d_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1a7c7a8a3:;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _160817_tk = jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1a7c86ae0:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1a7c86969:;
						{
							jule::Ptr<_1a3e0226a_StructIns> _161517_s = _153717_kind.cast_ptr<_1a3e0226a_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*(*_161517_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*(*_161517_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1a7c86a8a:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1a7c85c54:;
	};
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a4074486_checkDecl(_1a406bcdb_typeChecker* _self_, jule::Ptr<_1a3dcd653_TypeDecl>* _162433_decl) {
	jule::Ptr<_1a3db8198_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1a4059e2d_TypeKind> _162913_kind = _1a4074145_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a406bcdb_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a4074dd2_prim(jule::Str* _165121_ident, jule::Ptr<_1a4062a07_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1a4075256_exist(jule::Str* _165522_ident, jule::Ptr<_1a4059e2d_TypeKind>* _165539_k) {
	{
		
		if ((_1a405c57e_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d531:;
			{
				return static__1a4074dd2_prim(_165522_ident, _1a405c57e_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1a405c815_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d5a8:;
			{
				jule::Ptr<_1a4066533_Sptr> _166017_sptr = _1a405c815_Sptr((*(_165539_k)).ptr());;
				return static__1a4075256_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1a405ca9b_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d630:;
			{
				jule::Ptr<_1a4069cea_Ptr> _166317_ptr = _1a405ca9b_Ptr((*(_165539_k)).ptr());;
				return static__1a4075256_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1a405d5d5_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d6a7:;
			{
				jule::Ptr<_1a4067006_Slc> _166617_slc = _1a405d5d5_Slc((*(_165539_k)).ptr());;
				return static__1a4075256_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1a405d34e_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d861:;
			{
				jule::Ptr<_1a4069327_Arr> _166917_arr = _1a405d34e_Arr((*(_165539_k)).ptr());;
				return static__1a4075256_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1a405e11e_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d8c7:;
			{
				jule::Ptr<_1a406869a_Map> _167217_m = _1a405e11e_Map((*(_165539_k)).ptr());;
				return (static__1a4075256_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1a4075256_exist(_165522_ident, &((*_167217_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a405db02_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d93d:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _167617_s = _1a405db02_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c95a33:;
					if (it != expr_end) {
						jule::Ptr<_1a4058547_InsGeneric> _167725_g = *it;
						{
							if (static__1a4075256_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a7c95a33:;
						++it;
						goto _iter_begin_1a7c95a33;
					}
					_iter_end_1a7c95a33:;
				};
				return false;;
			}
		}
		else if ((_1a405d86b_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8d9b5:;
			{
				jule::Ptr<_1a3e172d5_FnIns> _168417_f = _1a405d86b_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c97529:;
					if (it != expr_end) {
						jule::Ptr<_1a3e16339_ParamIns> _168525_p = *it;
						{
							if (_1a3e13028_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1a7c97529;
							};
							if (static__1a4075256_exist(_165522_ident, &((*_168525_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a7c97529:;
						++it;
						goto _iter_begin_1a7c97529;
					}
					_iter_end_1a7c97529:;
				};
				if (((*_168417_f.alloc)._field_Result != nullptr)) {
					return static__1a4075256_exist(_165522_ident, &((*_168417_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a405e3a5_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1a7c8da3c:;
			{
				jule::Ptr<_1a4067aea_Tuple> _169817_tup = _1a405e3a5_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c99d45:;
					if (it != expr_end) {
						jule::Ptr<_1a4059e2d_TypeKind> _169925_t = *it;
						{
							if (static__1a4075256_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1a7c99d45:;
						++it;
						goto _iter_begin_1a7c99d45;
					}
					_iter_end_1a7c99d45:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a7c8d410:;
			{
				return false;;
			}
		}
		_match_end_1a7c8d311:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a4074992_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a49d5e19_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a2bb74_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a4a2cb86_stop(_1a4a2c515_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a4a2ce1c_stopped(_1a4a2c515_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a4a2d1a3_finished(_1a4a2c515_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a4a2d439_isLastSt(_1a4a2c515_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a4a2d79c_pushErr(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a3db8198_Token> _18926_token, jule::Str _18941_fmt) {
	_1a4a4b27b_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1a4a2db10_pushSuggestion(_1a4a2c515_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1a4a4b5de_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1a4a2ddb8_insertAsNext(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a4a2bb74_stmt>(_1a4a2bb74_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1a4a2bb74_stmt> _1a4a2e14e_next(_1a4a2c515_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a2e54a_buildScope(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _20834_tokens, jule::Ptr<_1a3db8198_Token> _20856_end) {
	jule::Ptr<_1a3ddd674_ScopeTree> _20913_s = _1a4a2a8ed_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*_20913_s.alloc)._field_End=_20856_end;
	_1a4a2c515_scopeParser _21213_ssp = _1a4a2c515_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a4a393bd_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a2e88b_buildVarSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _21934_tokens) {
	jule::Ptr<_1a3de14bd_VarDecl> _22013_v = _1a4a4e108_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1a3de1897_RetSt> _1a4a2ebcc_buildRetSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _22533_tokens) {
	jule::Ptr<_1a3de1897_RetSt> _22613_st = jule::new_ptr<_1a3de1897_RetSt>(_1a3de1897_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1a3de2117_Iter> _1a4a3001d_buildWhileNextIter(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a4a2bb74_stmt>* _23642_s) {
	jule::Ptr<_1a3de2117_Iter> _23713_it = jule::new_ptr<_1a3de2117_Iter>(_1a3de2117_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a3de2942_WhileKind> _24113_kind = jule::new_ptr<_1a3de2942_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*_24113_kind.alloc)._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1a4a2d439_isLastSt(_self_)) {
		_1a4a2d79c_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1a4a2e14e_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _25313_stTokens = _1a4a45c59_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1a4a2bb74_stmt> _25517_stmt = jule::new_ptr<_1a4a2bb74_stmt>(_1a4a2bb74_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*_24113_kind.alloc)._field_NextToken=_25313_stTokens[0LL];
		(*_24113_kind.alloc)._field_Next=_1a4a3905a_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _26413_blockTokens = _1a4a48e7c_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1a4a2cb86_stop(_self_);
		_1a4a2d79c_pushErr(_self_, (*_23713_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1a4a2d79c_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23713_it.alloc)._field_Scope=_1a4a2e54a_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*_23713_it.alloc)._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1a3de2942_WhileKind> _1a4a3035e_buildWhileIterKind(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _28142_tokens) {
	return jule::new_ptr<_1a3de2942_WhileKind>(_1a3de2942_WhileKind{._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a306a0_getRangeKindKeysTokens(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _28813_vars;;
	jule::Slice<_1c980bca3_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28819_errs);
	return _28813_vars;;
}



inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a309e1_buildRangeKindKey(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3de14bd_VarDecl> _29713_key = jule::new_ptr<_1a3de14bd_VarDecl>(_1a3de14bd_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_29713_key.alloc)._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1a4a2d79c_pushErr(_self_, (*_29713_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29713_key.alloc)._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a2d79c_pushErr(_self_, (*_29713_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29713_key.alloc)._field_Ident=(*(*_29713_key.alloc)._field_Token.alloc)._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _1a4a30d32_buildRangeKindKeys(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eb7da9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1a4a309e1_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1a7eb7da9:;
			++it;
			goto _iter_begin_1a7eb7da9;
		}
		_iter_end_1a7eb7da9:;
	};
	return _32017_keys;;
}



inline void _1a4a31195_setupRangeKindKeysPlain(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a3de3349_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _32813_keyTokens = _1a4a306a0_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1a4a2d79c_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _33513_keys = _1a4a30d32_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1a4a31508_setupRangeKindKeysExplicit(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a3de3349_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _34272_tokens) {
	jule::I64 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _34413_rang = _1a4a48e7c_range(&(_34313_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1a4a2d79c_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1a4a31195_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1a4a3186b_setupRangeKindKeys(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a3de3349_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a4a31508_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1a4a31195_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1a3de3349_RangeKind> _1a4a31d22_buildRangeIterKind(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _36014_exprTokens, jule::Ptr<_1a3db8198_Token>* _36041_inToken) {
	jule::Ptr<_1a3de3349_RangeKind> _36113_rng = jule::new_ptr<_1a3de3349_RangeKind>(_1a3de3349_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*_36113_rng.alloc)._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1a4a3186b_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1a4a3221d_buildCommonIterKind(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _37543_tokens, jule::Ptr<_1a3db8198_Token>* _37562_err_tok) {
	jule::I64 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ec2776:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a7ec3205:;
						{
							(_37613_braceN)++;
							goto _iter_next_1a7ec2776;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a7ec35ce:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1a7ec3502:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1a7ec2776;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1a7ec46e0:;
						{
							jule::Slice<jule::Ptr<_1a3db8198_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1a3db8198_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1a4a31d22_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1a7ec4cc8:;
				};
			}
			_iter_next_1a7ec2776:;
			++it;
			_37714_i++;
			goto _iter_begin_1a7ec2776;
		}
		_iter_end_1a7ec2776:;
	};
	return jule::Any(_1a4a3035e_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1a3de2117_Iter> _1a4a3255e_buildCommonIter(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _40238_tokens) {
	jule::Ptr<_1a3de2117_Iter> _40313_it = jule::new_ptr<_1a3de2117_Iter>(_1a3de2117_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1a4a2cb86_stop(_self_);
		_1a4a2d79c_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _41313_exprTokens = _1a4a45c59_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*_40313_it.alloc)._field_Kind=_1a4a3221d_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*_40313_it.alloc)._field_Token));
	};
	jule::I64 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _41813_scopeTokens = _1a4a48e7c_range(&(_41713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1a4a2cb86_stop(_self_);
		_1a4a2d79c_pushErr(_self_, (*_40313_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1a4a2d79c_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40313_it.alloc)._field_Scope=_1a4a2e54a_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1a3de2117_Iter> _1a4a328a0_buildIterSt(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a4a2bb74_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1a4a3001d_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1a4a3255e_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1a3de3723_BreakSt> _1a4a32be1_buildBreakSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _43936_tokens) {
	jule::Ptr<_1a3de3723_BreakSt> _44013_brk = jule::new_ptr<_1a3de3723_BreakSt>(_1a3de3723_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a4a2d79c_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1a4a2d79c_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1a3de3aec_ContSt> _1a4a33032_buildContSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _45735_tokens) {
	jule::Ptr<_1a3de3aec_ContSt> _45813_cont = jule::new_ptr<_1a3de3aec_ContSt>(_1a3de3aec_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a4a2d79c_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1a4a2d79c_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1a3de40a3_If> _1a4a33373_buildIf(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _47531_tokens) {
	jule::Ptr<_1a3de40a3_If> _47613_model = jule::new_ptr<_1a3de40a3_If>(_1a3de40a3_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _48013_exprTokens = _1a4a45c59_getBlockExpr(_47531_tokens);;
	jule::I64 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=_48013_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _48713_scopeTokens = _1a4a48e7c_range(&(_48113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1a4a2cb86_stop(_self_);
		_1a4a2d79c_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3db8198_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1a4a2d79c_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*_47613_model.alloc)._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*_47613_model.alloc)._field_Scope=_1a4a2e54a_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1a3de447c_Else> _1a4a336b4_buildElse(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _50833_tokens) {
	jule::Ptr<_1a3de447c_Else> _50913_els = jule::new_ptr<_1a3de447c_Else>(_1a3de447c_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I64 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _51413_scopeTokens = _1a4a48e7c_range(&(_51313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1a4a2d79c_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1a4a2cb86_stop(_self_);
			_1a4a2d79c_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1a4a2d79c_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1a4a2e54a_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1a3de4933_Conditional> _1a4a33a05_buildIfElseChain(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _53239_tokens) {
	jule::Ptr<_1a3de4933_Conditional> _53313_chain = jule::new_ptr<_1a3de4933_Conditional>(_1a3de4933_Conditional{._field_Head=_1a4a33373_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1a7edebe4;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3de40a3_If> _54521_elif = _1a4a33373_buildIf(_self_, &(_53239_tokens));;
				(*_53313_chain.alloc)._field_Tail=jule::append((*_53313_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1a3de40a3_If>>::make({_54521_elif}));
				goto _iter_next_1a7edebe4;
			};
			(*_53313_chain.alloc)._field_Default=_1a4a336b4_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1a7edebe4;
		}
	_iter_next_1a7edebe4:;
	}
	_iter_end_1a7edebe4:;;
	return _53313_chain;;
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a33d46_buildCoCallSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _55536_tokens) {
	jule::Ptr<_1a3db8198_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3dd2987_Expr> _55813_e = _1a4a4b930_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a7ee4864:;
			{
				(*((*(_55813_e))._field_Kind.unsafe_cast_ptr<_1a3dd66b1_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a7ee4358:;
			{
				_1a4a2d79c_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1a7ee4303:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1a3ddb111_GotoSt> _1a4a34187_buildGotoSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _57135_tokens) {
	jule::Ptr<_1a3ddb111_GotoSt> _57213_gt = jule::new_ptr<_1a3ddb111_GotoSt>(_1a3ddb111_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a3db8198_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a2d79c_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1a3ddb40d_FallSt> _1a4a344c8_buildFallSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _59135_tokens) {
	jule::Ptr<_1a3ddb40d_FallSt> _59213_fll = jule::new_ptr<_1a3ddb40d_FallSt>(_1a3ddb40d_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a34819_buildTypeAliasSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _60140_tokens) {
	jule::Ptr<_1a3de5170_TypeAliasDecl> _60213_tad = _1a4a4d1c3_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1a4a34ce2_pushCaseExpr(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _60735_tokens, jule::Ptr<_1a3db8198_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1a3dcd653_TypeDecl> _61417_t;;
		jule::Bool _61420_ok;;
		({
			__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1a3dd2987_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1a3dd2987_Expr>(_1a3dd2987_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1a4a2d79c_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a3dd2987_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1a4a4b930_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1a3dd2987_Expr__jule_tuple_bool _1a4a35298_buildCaseExprs(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _63038_tokens, jule::Ptr<_1a3db8198_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1a3dd2987_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63213_braceN = 0LL;;
	jule::I64 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80003a8:;
		if (it != expr_end) {
			jule::I64 _63414_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a8001a4c:;
						{
							(_63213_braceN)++;
							goto _iter_next_1a80003a8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a8001e26:;
						{
							(_63213_braceN)--;
							goto _iter_next_1a80003a8;
						}
					}
					_match_end_1a8001d49:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1a80003a8;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1a80035a9:;
						{
							jule::Slice<jule::Ptr<_1a3db8198_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1a4a2d79c_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1a4a34ce2_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=(_63414_i + 1LL);
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1a8003620:;
						{
							(*(_63061_colon))=_63421_tok;
							_1a4a34ce2_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1a8003499:;
				};
			}
			_iter_next_1a80003a8:;
			++it;
			_63414_i++;
			goto _iter_begin_1a80003a8;
		}
		_iter_end_1a80003a8:;
	};
	_1a4a2d79c_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a355d9_buildCaseScope(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _67238_tokens) {
	jule::I64 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _67617_next;;
			({
				__jule_tuple_sx_1a3db8198_Token__jule_tuple_bool __jule_assign_result = _1a4a2b844_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1a80071b2;
			};
			jule::Ptr<_1a3db8198_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1a80071b2;
			};
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1a3ddd674_ScopeTree> _68617_scope = _1a4a2e54a_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1a80071b2:;
	}
	_iter_end_1a80071b2:;;
	jule::Ptr<_1a3db8198_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a3ddd674_ScopeTree> _69413_scope = _1a4a2e54a_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1a3de5626_Case__jule_tuple_bool _1a4a359d5_buildCase(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1a3de5626_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3de5626_Case> _70013_c = jule::new_ptr<_1a3de5626_Case>(_1a3de5626_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a3db8198_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok;;
	({
		__jule_tuple_sx_1a3dd2987_Expr__jule_tuple_bool __jule_assign_result = _1a4a35298_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_70013_c.alloc)._field_Scope=_1a4a355d9_buildCaseScope(_self_, _69933_tokens);
	if (((*((*_70013_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_70013_c.alloc)._field_Scope.alloc)._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*_70013_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a3de5626_Case__jule_tuple_x_1a3de447c_Else _1a4a35dd1_buildCases(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1a3de5626_Case__jule_tuple_x_1a3de447c_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a3de5626_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1a3de447c_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a3db8198_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a4a2d79c_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1a80106a4;
			};
			jule::Ptr<_1a3de5626_Case> _72417_c;;
			jule::Bool _72420_isDefault;;
			({
				__jule_tuple_x_1a3de5626_Case__jule_tuple_bool __jule_assign_result = _1a4a359d5_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1a3de447c_Else>(_1a3de447c_Else{._field_Token=(*_72417_c.alloc)._field_Token, ._field_Scope=(*_72417_c.alloc)._field_Scope});
				} else {
					_1a4a2d79c_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a3de5626_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1a80106a4:;
	}
	_iter_end_1a80106a4:;;
	if (_71713_defNotLast) {
		_1a4a2d79c_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3de5e40_MatchCase> _1a4a36222_buildMatchCase(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _74837_tokens) {
	jule::Ptr<_1a3de5e40_MatchCase> _74913_m = jule::new_ptr<_1a3de5e40_MatchCase>(_1a3de5e40_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _75913_exprTokens = _1a4a45c59_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*_74913_m.alloc)._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*_74913_m.alloc)._field_TypeMatch) {
		_1a4a2d79c_pushErr(_self_, (*_74913_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _76713_blockToks = _1a4a48e7c_range(&(_76613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1a4a2cb86_stop(_self_);
		_1a4a2d79c_pushErr(_self_, (*_74913_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a4a2db10_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1a4a2d79c_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74913_m.alloc)._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1a3de5626_Case__jule_tuple_x_1a3de447c_Else __jule_assign_result = _1a4a35dd1_buildCases(_self_, _76713_blockToks, (*_74913_m.alloc)._field_TypeMatch);
		(*_74913_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74913_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a36563_buildScopeSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1a3db8198_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1a4a2d79c_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*_78413_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1a4a2d79c_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1a4a2d79c_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _81113_scopeTokens = _1a4a48e7c_range(&(_81013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1a4a2d79c_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1a4a2d79c_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a3ddd674_ScopeTree> _81813_scope = _1a4a2e54a_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*_81813_scope.alloc)._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1a3ddac37_LabelSt> _1a4a368a4_buildLabelSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _82436_tokens) {
	jule::Ptr<_1a3ddac37_LabelSt> _82513_lbl = jule::new_ptr<_1a3ddac37_LabelSt>(_1a3ddac37_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1a4a2ddb8_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a36be5_buildIdSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _83933_tokens) {
	__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a3db8198_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a8026258:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a4a368a4_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8026a1c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a4a473cb_assignInfo> _1a4a37036_buildAssignInfo(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _85339_tokens) {
	jule::Ptr<_1a4a473cb_assignInfo> _85413_info = jule::new_ptr<_1a4a473cb_assignInfo>(_1a4a473cb_assignInfo{._field_ok=true});;
	jule::I64 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8028238:;
		if (it != expr_end) {
			jule::I64 _85814_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a8028ba6:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a802904c:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1a8028e81:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1a802914b:;
						{
							goto _iter_next_1a8028238;
						}
					}
					else if (((!(_1a3dbcee4_IsAssignOp((*(_85821_token))._field_Id))) && ((*_85821_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1a802a229:;
						{
							goto _iter_next_1a8028238;
						}
					}
					_match_end_1a802a191:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*_85413_info.alloc)._field_l.len() == 0LL)) {
					(*_85413_info.alloc)._field_ok=false;
				};
				(*_85413_info.alloc)._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*_85413_info.alloc)._field_r=nullptr;
					(*_85413_info.alloc)._field_ok=_1a3dbcc2a_IsPostfixOp((*((*_85413_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1a8028238;
				};
				(*_85413_info.alloc)._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1a3dbcc2a_IsPostfixOp((*(*_85413_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85413_info.alloc)._field_r.len() > 0LL)) {
						_1a4a2d79c_pushErr(_self_, (*_85413_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85413_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1a8028238;
			}
			_iter_next_1a8028238:;
			++it;
			_85814_i++;
			goto _iter_begin_1a8028238;
		}
		_iter_end_1a8028238:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1a3ddba6d_AssignLeft> _1a4a37377_buildAssignL(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _89836_tokens) {
	jule::Ptr<_1a3ddba6d_AssignLeft> _89913_l = jule::new_ptr<_1a3ddba6d_AssignLeft>(_1a3ddba6d_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*_89913_l.alloc)._field_Token))._field_Kind;
	};
	(*_89913_l.alloc)._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> _1a4a376b8_buildAssignLs(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8032c37:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _91121_part = *it;
			{
				jule::Ptr<_1a3ddba6d_AssignLeft> _91217_l = _1a4a37377_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1a8032c37:;
			++it;
			goto _iter_begin_1a8032c37;
		}
		_iter_end_1a8032c37:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a37a09_buildPlainAssign(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _91840_tokens) {
	__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a4a473cb_assignInfo> _91913_info = _1a4a37036_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3ddc101_AssignSt> _92413_assign = jule::new_ptr<_1a3ddc101_AssignSt>(_1a3ddc101_AssignSt{._field_Setter=(*_91913_info.alloc)._field_setter, });;
	if (((*((*_91913_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*_92413_assign.alloc)._field_Right=_1a4a4b930_buildExpr((*(_self_))._field_p, &((*_91913_info.alloc)._field_r));
		jule::Bool _93213_ok = _1a4a37e05_buildDeclAssign1(_self_, &((*_91913_info.alloc)._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92413_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a3ddba6d_AssignLeft> _94117_left = (*_92413_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1a3de14bd_VarDecl> _94217_decl = jule::new_ptr<_1a3de14bd_VarDecl>(_1a3de14bd_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94117_left))._field_Token, ._field_Setter=(*_92413_assign.alloc)._field_Setter, ._field_Ident=(*_94117_left.alloc)._field_Ident, ._field_Mutable=(*_94117_left.alloc)._field_Mutable, ._field_Reference=(*_94117_left.alloc)._field_Reference, ._field_Expr=(*_92413_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94217_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _95413_parts;;
	jule::Slice<_1c980bca3_Log> _95420_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&((*_91913_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_95413_parts = __jule_assign_result.__jule_result_arg0;
		_95420_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95420_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95420_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92413_assign.alloc)._field_Left=_1a4a376b8_buildAssignLs(_self_, &(_95413_parts));
	if (((*_91913_info.alloc)._field_r != nullptr)) {
		(*_92413_assign.alloc)._field_Right=_1a4a4b930_buildExpr((*(_self_))._field_p, &((*_91913_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a4a37e05_buildDeclAssign1(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _96840_lefts, jule::Ptr<_1a3ddc101_AssignSt>* _96862_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _97013_parts;;
	jule::Slice<_1c980bca3_Log> _97020_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(_96840_lefts, static_cast<jule::U64>(5LLU), true);
		_97013_parts = __jule_assign_result.__jule_result_arg0;
		_97020_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97020_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97020_errs);
		return false;;
	};
	{
		auto expr = &(_97013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a803e3e7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _97621_part = *it;
			{
				jule::Bool _97717_isMut = false;;
				jule::Bool _97817_isRef = false;;
				jule::Ptr<_1a3db8198_Token> _98013_token = _97621_part[0LL];;
				if (((*(_98013_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97717_isMut=true;
					(_97621_part).mut_slice(1LL);;
					if ((_97621_part.len() == 0LL)) {
						_1a4a2d79c_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97621_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97817_isRef=true;
					(_97621_part).mut_slice(1LL);;
					if ((_97621_part.len() == 0LL)) {
						_1a4a2d79c_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97621_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97621_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a4a2d79c_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1a3ddba6d_AssignLeft> _100417_l = _1a4a37377_buildAssignL(_self_, &(_97621_part));;
				(*(_100417_l))._field_Mutable=_97717_isMut;
				(*_100417_l.alloc)._field_Reference=_97817_isRef;
				{ jule::Slice<jule::Ptr<_1a3ddba6d_AssignLeft>> &__jule_push_dest = (*((*(_96862_assign))))._field_Left; __jule_push_dest.push(_100417_l); };
			}
			_iter_next_1a803e3e7:;
			++it;
			goto _iter_begin_1a803e3e7;
		}
		_iter_end_1a803e3e7:;
	};
	return true;;
}



inline __jule_tuple_x_1a3ddc101_AssignSt__jule_tuple_bool _1a4a38246_buildDeclAssign(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _101338_tokens) {
	__jule_tuple_x_1a3ddc101_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101338_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101338_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3db8198_Token> _101913_token = _101338_tokens[0LL];;
	if (((*(_101913_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3ddc101_AssignSt> _102413_assign = jule::new_ptr<_1a3ddc101_AssignSt>(_1a3ddc101_AssignSt{._field_Declarative=true, });;
	jule::I64 _102813_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _102913_rang = _1a4a48e7c_range(&(_102813_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101338_tokens));;
	if ((_102913_rang == nullptr)) {
		_1a4a2d79c_pushErr(_self_, _101913_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102813_i + 1LL) < _101338_tokens.len())) {
		(*(_102413_assign))._field_Setter=_101338_tokens[_102813_i];
		if (((*((*_102413_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a4a2d79c_pushErr(_self_, (*_102413_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102813_i)++;
		jule::Slice<jule::Ptr<_1a3db8198_Token>> _103917_exprTokens = _101338_tokens.slice(_102813_i);;
		(*_102413_assign.alloc)._field_Right=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_103917_exprTokens));
	};
	jule::Bool _10439_ok = _1a4a37e05_buildDeclAssign1(_self_, &(_102913_rang), &(_102413_assign));;
	__jule_func_result.__jule_result_arg0 = _102413_assign;
	__jule_func_result.__jule_result_arg1 = _10439_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool _1a4a38587_buildAssignSt(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _104737_tokens) {
	__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a4a47783_checkAssignTokens(_104737_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104737_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a7e06721:;
			{
				({
					__jule_tuple_x_1a3ddc101_AssignSt__jule_tuple_bool __jule_assign_result = _1a4a38246_buildDeclAssign(_self_, (*(_104737_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a7e05b93:;
			{
				({
					__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_assign_result = _1a4a37a09_buildPlainAssign(_self_, _104737_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a7e0615a:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a3dd335b_UseExpr> _1a4a388c8_buildUseExpr(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _106036_tokens) {
	if (((*(_106036_tokens)).len() == 1LL)) {
		_1a4a2d79c_pushErr(_self_, (*(_106036_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a3dd335b_UseExpr> _106513_ue = jule::new_ptr<_1a3dd335b_UseExpr>(_1a3dd335b_UseExpr{._field_Token=(*(_106036_tokens))[0LL], });;
	((*(_106036_tokens))).mut_slice(1LL);;
	(*(_106513_ue))._field_Expr=_1a4a4b930_buildExpr((*(_self_))._field_p, _106036_tokens);
	return _106513_ue;;
}



inline jule::Any _1a4a38c19_buildConstSt(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a4a2bb74_stmt>* _107336_st) {
	if (((*((*(_107336_st))))._field_tokens.len() == 1LL)) {
		_1a4a2d79c_pushErr(_self_, (*((*(_107336_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107336_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a7e0ad52:;
			{
				(*((*(_107336_st))))._field_tokens=(*((*(_107336_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1a3de2117_Iter> _108117_iter = _1a4a328a0_buildIterSt(_self_, _107336_st);;
				if ((_108117_iter != nullptr)) {
					(*_108117_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108117_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a7e0ab32:;
			{
				(*((*(_107336_st))))._field_tokens=(*((*(_107336_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1a3de5e40_MatchCase> _108817_mt = _1a4a36222_buildMatchCase(_self_, (*((*(_107336_st))))._field_tokens);;
				if ((_108817_mt != nullptr)) {
					(*_108817_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108817_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1a7e0969c:;
			{
				return jule::Any(_1a4a2e88b_buildVarSt(_self_, &((*((*(_107336_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1a7e0a6c0:;
	};
}



inline jule::Any _1a4a3905a_buildSt(_1a4a2c515_scopeParser* _self_, jule::Ptr<_1a4a2bb74_stmt>* _109831_st) {
	jule::Ptr<_1a3db8198_Token> _109913_token = (*((*(_109831_st))))._field_tokens[0LL];;
	if (((*(_109913_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110117_s;;
		jule::Bool _110120_ok;;
		({
			__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_assign_result = _1a4a36be5_buildIdSt(_self_, &((*((*(_109831_st))))._field_tokens));
			_110117_s = __jule_assign_result.__jule_result_arg0;
			_110120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110120_ok) {
			return _110117_s;;
		};
	};
	jule::Any _110713_s;;
	jule::Bool _110716_ok;;
	({
		__jule_tuple__1a3ddccb1_StmtData__jule_tuple_bool __jule_assign_result = _1a4a38587_buildAssignSt(_self_, &((*((*(_109831_st))))._field_tokens));
		_110713_s = __jule_assign_result.__jule_result_arg0;
		_110716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110716_ok) {
		return _110713_s;;
	};
	{
		auto &_match_expr{ (*(_109913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a7e117b4:;
			{
				return jule::Any(_1a4a388c8_buildUseExpr(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a7e11550:;
			{
				return _1a4a38c19_buildConstSt(_self_, _109831_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a7e11ece:;
			{
				return jule::Any(_1a4a2e88b_buildVarSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a7e12045:;
			{
				return jule::Any(_1a4a2ebcc_buildRetSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a7e120ab:;
			{
				return jule::Any(_1a4a328a0_buildIterSt(_self_, _109831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a7e12122:;
			{
				return jule::Any(_1a4a32be1_buildBreakSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a7e12188:;
			{
				return jule::Any(_1a4a33032_buildContSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a7e121ee:;
			{
				return jule::Any(_1a4a33a05_buildIfElseChain(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a7e12265:;
			{
				return jule::Any(_1a4a33d46_buildCoCallSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1a7e122cb:;
			{
				return jule::Any(_1a4a34187_buildGotoSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1a7e12353:;
			{
				return jule::Any(_1a4a344c8_buildFallSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a7e123ca:;
			{
				return jule::Any(_1a4a34819_buildTypeAliasSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a7e12452:;
			{
				return jule::Any(_1a4a36222_buildMatchCase(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a7e124c9:;
			{
				if (((*((*(_109831_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1a7e11b7c;
				};
				if ((((*((*((*(_109831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a4a36563_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a7e12551:;
			{
				return jule::Any(_1a4a36563_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a7e125c8:;
			{
				return jule::Any(_1a4a36563_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1a7e11b7c:;
	};
	jule::Ptr<_1a3dd2987_Expr> _115413_expr = _1a4a4b930_buildExpr((*(_self_))._field_p, &((*((*(_109831_st))))._field_tokens));;
	if ((_115413_expr != nullptr)) {
		return jule::Any(_115413_expr, &__jule_any_type52);;
	};
	_1a4a2d79c_pushErr(_self_, _109913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1a4a393bd_build(_1a4a2c515_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _116229_tokens, jule::Ptr<_1a3ddd674_ScopeTree>* _116252_s) {
	if (((*(_116252_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a4a2c02b_splitStmts(_116229_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116252_s));
	while (((!(_1a4a2d439_isLastSt(_self_))) && (!(_1a4a2d1a3_finished(_self_))))) {
		{
			jule::Ptr<_1a4a2bb74_stmt> _117017_st = _1a4a2e14e_next(_self_);;
			jule::Any _117117_data = _1a4a3905a_buildSt(_self_, &(_117017_st));;
			if ((_117117_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1a3ddd014_Stmt>::make({_1a3ddd014_Stmt{._field_Token=(*(_117017_st))._field_tokens[0LL], ._field_Data=_117117_data}}));
			};
			if (_1a4a2ce1c_stopped(_self_)) {
				goto _iter_end_1a7e1e89e;
			};
		}
	_iter_next_1a7e1e89e:;
	}
	_iter_end_1a7e1e89e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a2c515_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a4a3a721_pushErr(_1a4a39e3a_exprBuilder* _self_, jule::Ptr<_1a3db8198_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1a4a4b27b_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1a4a3aa84_pushSuggestion(_1a4a39e3a_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1a4a4b5de_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1a3dd357b_TupleExpr> _1a4a3adc5_buildTuple(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>* _5434_parts) {
	jule::Ptr<_1a3dd357b_TupleExpr> _5513_tuple = jule::new_ptr<_1a3dd357b_TupleExpr>(_1a3dd357b_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3eb88:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::make({_1a4a452b9_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1a7e3eb88:;
			++it;
			goto _iter_begin_1a7e3eb88;
		}
		_iter_end_1a7e3eb88:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1a3dd3922_LitExpr> _1a4a3b216_buildLit(_1a4a39e3a_exprBuilder* _self_, jule::Ptr<_1a3db8198_Token> _6427_token) {
	return jule::new_ptr<_1a3dd3922_LitExpr>(_1a3dd3922_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1a4a3b898_buildSingle(_1a4a39e3a_exprBuilder* _self_, jule::Ptr<_1a3db8198_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a7e41ae1:;
			{
				return jule::Any(_1a4a3b216_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a7e41b57:;
			{
				return jule::Any(jule::new_ptr<_1a3dd4e1d_VariadicExpr>(_1a3dd4e1d_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a7e41bbd:;
			{
				return jule::Any(_1a4a466a5_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1a7e41a36:;
	};
	_1a4a3a721_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a3dd42a2_IdentExpr> _1a4a3bbd9_buildBindIdent(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a4a3a721_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3db8198_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a3a721_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3dd42a2_IdentExpr> _10613_expr = _1a4a466a5_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1a3dd4a44_UnaryExpr> _1a4a3c02a_buildUnary(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _11133_tokens) {
	jule::Ptr<_1a3db8198_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1a4a3a721_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a3db88d5_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1a4a3a721_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a3dd4a44_UnaryExpr>(_1a3dd4a44_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1a4a452b9_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1a3dd5a9a_SubIdentExpr> _1a4a3c36b_buildObjSubIdent(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1a3db8198_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3dd5a9a_SubIdentExpr>(_1a3dd5a9a_SubIdentExpr{._field_Expr=_1a4a452b9_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1a3dd56c1_NsSelectionExpr> _1a4a3c6ac_buildNsSubIdent(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _14739_tokens) {
	jule::Ptr<_1a3dd56c1_NsSelectionExpr> _14813_ns = jule::new_ptr<_1a3dd56c1_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a80ad1e1:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1a3db8198_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1a4a3a721_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1a3db8198_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1a4a3a721_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a80ad1e1:;
				++it;
				_15418_i++;
				goto _iter_begin_1a80ad1e1;
			}
			_iter_end_1a80ad1e1:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		(*_14813_ns.alloc)._field_Ns=(*_14813_ns.alloc)._field_Ns.slice(0LL, ((*_14813_ns.alloc)._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a3c9ed_buildType(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1a3dcd653_TypeDecl> _17413_t;;
	jule::Bool _17416_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1a4a3a721_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1a4a3a721_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1a4a3cd3e_buildSubIdent(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1a3db8198_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1a80b6ace:;
			{
				return jule::Any(_1a4a3c36b_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a80b71ea:;
			{
				return jule::Any(_1a4a3c6ac_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a80b7261:;
			{
				return jule::Any(_1a4a3c9ed_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1a80b6d76:;
	};
	_1a4a3a721_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a3dd4e1d_VariadicExpr> _1a4a3d180_buildVariadic(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _20236_tokens) {
	jule::Ptr<_1a3db8198_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1a3dd4e1d_VariadicExpr>(_1a3dd4e1d_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1a4a452b9_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1a3dd2c51_RangeExpr> _1a4a3d4c1_buildBetweenParentheses(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1a4a3a721_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1a3dd2c51_RangeExpr>(_1a3dd2c51_RangeExpr{._field_Expr=_1a4a452b9_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1a3dd52e7_CastExpr> _1a4a3d812_tryBuildCast(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80bc200:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a80bcd38:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1a80bc200;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a80bd212:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1a80bd135:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1a80bc200;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a3db8198_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a3dd52e7_CastExpr> _25717_cast = jule::new_ptr<_1a3dd52e7_CastExpr>(_1a3dd52e7_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1a4a3a721_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1a4a3a721_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1a3dcd653_TypeDecl> _27221_t;;
					jule::Bool _27224_ok;;
					({
						__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1a4a3a721_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1a4a48e7c_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*_25717_cast.alloc)._field_Expr=_1a4a452b9_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1a80bc200:;
			++it;
			_22513_i++;
			goto _iter_begin_1a80bc200;
		}
		_iter_end_1a80bc200:;
	};
	return nullptr;;
}



inline void _1a4a3dc30_pushArg(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3dd2987_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1a3db8198_Token>> _29750_tokens, jule::Ptr<_1a3db8198_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a3dd2987_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1a4a452b9_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _1a4a3e071_buildArgs(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80caa7c:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a80cb363:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a80cb73c:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1a80cb660:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1a80caa7c;
				};
				_1a4a3dc30_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=(_31613_i + 1LL);
			}
			_iter_next_1a80caa7c:;
			++it;
			_31613_i++;
			goto _iter_begin_1a80caa7c;
		}
		_iter_end_1a80caa7c:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1a4a3dc30_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1a4a3dc30_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1a3dd66b1_FnCallExpr> _1a4a3e868_buildFnCall(_1a4a39e3a_exprBuilder* _self_, jule::Ptr<_1a3db8198_Token>* _37235_token, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _37276_args) {
	return jule::new_ptr<_1a3dd66b1_FnCallExpr>(_1a3dd66b1_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1a4a452b9_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1a4a3e071_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1a4a3eba9_buildParenthesesRange(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _38045_tokens) {
	jule::Ptr<_1a3db8198_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a3dd52e7_CastExpr> _38317_expr = _1a4a3d812_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_assign_result = _1a4a49246_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1a4a3d4c1_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1a4a3e868_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1a3dd3ceb_UnsafeExpr> _1a4a3eeea_buildUnsafeExpr(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _39738_tokens) {
	jule::Ptr<_1a3db8198_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _40113_rangeTokens = _1a4a48e7c_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3dd3ceb_UnsafeExpr>(_1a3dd3ceb_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1a4a452b9_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1a3de0313_FnDecl> _1a4a4033b_buildAnonFn(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _41235_tokens) {
	jule::Ptr<_1a3de0313_FnDecl> _41313_f = _1a4a524c4_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1a3de0676_IsAnon(_41313_f.ptr())))) {
		_1a4a3a721_pushErr(_self_, (*_41313_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1a4a4067c_buildUnsafe(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a80dd595:;
			{
				return jule::Any(_1a4a4033b_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1a80dc96d:;
			{
				return jule::Any(_1a4a3eeea_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1a80dcdad:;
	};
}



inline void _1a4a40a9a_pushRangeLitPart(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _43139_part, jule::Ptr<_1a3db8198_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a40ddb_getBraceRangeLitExprParts(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80e1ee4:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a80e27ca:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a80e2ba4:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1a80e2ac7:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1a80e1ee4;
				};
				_1a4a40a9a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=(_45313_i + 1LL);
			}
			_iter_next_1a80e1ee4:;
			++it;
			_45313_i++;
			goto _iter_begin_1a80e1ee4;
		}
		_iter_end_1a80e1ee4:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1a4a40a9a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1a4a40a9a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1a3dd71a6_FieldExprPair> _1a4a4122c_buildFieldExprPair(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1a4a3a721_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3dd71a6_FieldExprPair> _48913_pair = jule::new_ptr<_1a3dd71a6_FieldExprPair>(_1a3dd71a6_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1a4a452b9_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a4156d_buildStructLitExpr(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _49742_tokens) {
	jule::Ptr<_1a3db8198_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*_49813_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a3dd2987_Expr>(_1a3dd2987_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a4a4122c_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1a4a452b9_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _1a4a418ae_buildStructLitExprs(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _51313_parts = _1a4a40ddb_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3dd2987_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80eb4c6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3dd2987_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1a4a4156d_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1a80eb4c6:;
			++it;
			goto _iter_begin_1a80eb4c6;
		}
		_iter_end_1a80eb4c6:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1a3dd79d1_StructLit> _1a4a41c00_buildTypedStructLiteral(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1a3dcd653_TypeDecl> _52713_t;;
	jule::Bool _52716_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1a4a3a721_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1a3db8198_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a4a3a721_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3dd79d1_StructLit>(_1a3dd79d1_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1a4a418ae_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a42041_buildBraceLitPart(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _55020_r;;
	({
		__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_assign_result = _1a4a46122_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1a3dd2987_Expr>(_1a3dd2987_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a3dd87b2_KeyValPair>(_1a3dd87b2_KeyValPair{._field_Key=_1a4a452b9_buildFromTokens(_self_, _55013_l), ._field_Val=_1a4a452b9_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1a4a452b9_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1a3dd7e87_BraceLit> _1a4a42382_buildBraceLit(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _56637_tokens) {
	jule::Ptr<_1a3dd7e87_BraceLit> _56713_lit = jule::new_ptr<_1a3dd7e87_BraceLit>(_1a3dd7e87_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _57213_parts = _1a4a40ddb_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8105bd9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _57821_part = *it;
			{
				(*_56713_lit.alloc)._field_Exprs=jule::append((*_56713_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::make({_1a4a42041_buildBraceLitPart(_self_, &(_57821_part))}));
			}
			_iter_next_1a8105bd9:;
			++it;
			goto _iter_begin_1a8105bd9;
		}
		_iter_end_1a8105bd9:;
	};
	return _56713_lit;;
}



inline jule::Any _1a4a426c3_buildBraceRange(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN;;
	({
		__jule_tuple_sx_1a3db8198_Token__jule_tuple_int __jule_assign_result = _1a4a4696e_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1a8107823:;
			{
				return jule::Any(_1a4a42382_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1a810789a:;
			{
				_1a4a3a721_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a81077bd:;
	};
	jule::Ptr<_1a3db8198_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1a4a44b37_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1a810a22c:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1a3db8198_Token>> _60821_rangeTokens = _1a4a48e7c_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1a3dd66b1_FnCallExpr> _60921_model = _60017_d.unsafe_cast_ptr<_1a3dd66b1_FnCallExpr>();;
					if (_1a3dd6cbb_Ignored(_60921_model.ptr())) {
						_1a4a3a721_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_60921_model.alloc)._field_Exception=_1a4a4c425_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1a810a56d:;
				{
					_1a4a3a721_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a810a518:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a810eb8d:;
			{
				return _1a4a4067c_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a8110298:;
			{
				return jule::Any(_1a4a4033b_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a811030e:;
			{
				return jule::Any(_1a4a41c00_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1a810cd9a:;
			{
				_1a4a3a721_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a810e64e:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a42a14_getEnumerableParts(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _63913_parts;;
	jule::Slice<_1c980bca3_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_63920_errors);
	return _63913_parts;;
}



inline jule::Ptr<_1a3dd8edd_SliceExpr> _1a4a42d55_buildSlice(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _64433_tokens) {
	jule::Ptr<_1a3dd8edd_SliceExpr> _64513_slc = jule::new_ptr<_1a3dd8edd_SliceExpr>(_1a3dd8edd_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _65013_parts = _1a4a42a14_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81150b1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1a81150b1;
				};
				(*_64513_slc.alloc)._field_Exprs=jule::append((*_64513_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3dd2987_Expr>>::make({_1a4a452b9_buildFromTokens(_self_, _65621_p)}));
			}
			_iter_next_1a81150b1:;
			++it;
			goto _iter_begin_1a81150b1;
		}
		_iter_end_1a81150b1:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1a3dd994a_IndexingExpr> _1a4a4330b_buildIndexing(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1a3db8198_Token>> _66713_tokens, jule::Ptr<_1a3db8198_Token> _66735_errorToken) {
	jule::Ptr<_1a3db8198_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3dd2987_Expr> _67413_expr = _1a4a452b9_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3dd2987_Expr> _67813_index = _1a4a452b9_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3dd994a_IndexingExpr>(_1a3dd994a_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1a3dda0aa_SlicingExpr> _1a4a43927_buildSlicing(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _69063_start, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _69114_to, jule::Ptr<_1a3db8198_Token>* _69133_errorToken, jule::Ptr<_1a3db8198_Token> _69157_end) {
	jule::Ptr<_1a3dda0aa_SlicingExpr> _69213_slc = jule::new_ptr<_1a3dda0aa_SlicingExpr>(_1a3dda0aa_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1a4a452b9_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1a4a452b9_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*_69213_slc.alloc)._field_To=_1a4a452b9_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1a4a43c68_buildBracketRange(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _70640_tokens) {
	jule::Ptr<_1a3db8198_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN;;
	({
		__jule_tuple_sx_1a3db8198_Token__jule_tuple_int __jule_assign_result = _1a4a4696e_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1a4a42d55_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1a4a3a721_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _72424_to;;
	({
		__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_assign_result = _1a4a46122_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1a4a43927_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1a4a4330b_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1a4a440a9_buildExclRight(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _73138_tokens) {
	jule::Ptr<_1a3db8198_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1a4a44b37_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a8123025:;
			{
				(*(_73413_d.unsafe_cast_ptr<_1a3dd66b1_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a3ddd674_ScopeTree>(_1a3ddd674_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1a8122ec0:;
	};
	_1a4a3a721_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a4a443ea_buildData(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a8124697:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a812470d:;
			{
				return _1a4a3b898_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8124774:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a4a3bbd9_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1a81244ee:;
	};
	jule::Ptr<_1a3db8198_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a4a3d180_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1a3db88d5_IsUnaryOp((*_76113_token.alloc)._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*_76113_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a4a3c9ed_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1a4a3c02a_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1a812923a:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1a3db8198_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1a8128e71;
						};
					};
					jule::Ptr<_1a3db8198_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1a8128e71;
					};
					return jule::Any(_1a4a3c9ed_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1a8128e71:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a812c3e7:;
			{
				return _1a4a3cd3e_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1a812c480:;
			{
				return _1a4a440a9_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1a812c4e6:;
			{
				return _1a4a3eba9_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a812c55c:;
			{
				return _1a4a426c3_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a812c5c3:;
			{
				return _1a4a43c68_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a812c64a:;
			{
				return jule::Any(_1a4a3c9ed_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1a812c392:;
	};
	_1a4a3a721_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a4a447e6_buildBinary(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1a3db8198_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1a4a45682_isTypeOp(&((*(_82213_op))._field_Id)) && _1a4a45990_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1a4a3c9ed_buildType(_self_, _82135_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1a4a3a721_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a3aa84_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a3dd6051_BinaryExpr>(_1a3dd6051_BinaryExpr{._field_Left=_1a4a452b9_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1a4a452b9_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1a4a44b37_build(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a4a3c9ed_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1a4a463db_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1a4a443ea_buildData(_self_, _84629_tokens);;
	};
	return _1a4a447e6_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1a4a44e78_buildKind(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _85813_parts;;
	jule::Slice<_1c980bca3_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_85820_errors);
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1a4a3adc5_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1a4a44b37_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a452b9_buildFromTokens(_1a4a39e3a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1a4a44e78_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3dd2987_Expr>(_1a3dd2987_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a39e3a_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a473cb_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a4a4aac7_stop(_1a4a4a7ca_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a4a4ad5d_stopped(_1a4a4a7ca_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a4a4b27b_pushErr(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3db8198_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a4a49db2_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _1a4a4b5de_pushSuggestion(_1a4a4a7ca_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_1a4a4a258_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a4b930_buildExpr(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _21734_tokens) {
	return _1a4a452b9_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1a3dcca70_Directive> _1a4a4bc71_buildDirective(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_1a4a4b27b_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_1a4a4b27b_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3dcca70_Directive>(_1a3dcca70_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _1a4a4c029_pushDirective(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3dcca70_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8159aea:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a8159aea:;
			++it;
			goto _iter_begin_1a8159aea;
		}
		_iter_end_1a8159aea:;
	};
	{ jule::Slice<jule::Ptr<_1a3dcca70_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a4c425_buildScope(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _24935_tokens, jule::Ptr<_1a3db8198_Token> _24957_end) {
	jule::Ptr<_1a3ddd674_ScopeTree> _25013_s = _1a4a2a8ed_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1a4a2c515_scopeParser _25213_sp = _1a4a2c515_scopeParser{._field_p=_self_, };;
	_1a4a393bd_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a4c8cb__buildType(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _25942_tokens, jule::I64* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a4a5c9a7_typeBuilder _26113_tb = _1a4a5c9a7_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	jule::Ptr<_1a3dcd653_TypeDecl> _26713_decl;;
	jule::Bool _26719_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a60988_build(&_26113_tb);
		_26713_decl = __jule_assign_result.__jule_result_arg0;
		_26719_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _26713_decl;
	__jule_func_result.__jule_result_arg1 = _26719_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a4cd82_buildType(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _27241_tokens, jule::I64* _27313_i, jule::Bool _27322_err) {
	__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3db8198_Token> _2749_token = (*(_27241_tokens))[(*(_27313_i))];;
	jule::Ptr<_1a3dcd653_TypeDecl> _27513_t;;
	jule::Bool _27516_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4c8cb__buildType(_self_, _27241_tokens, _27313_i, _27322_err);
		_27513_t = __jule_assign_result.__jule_result_arg0;
		_27516_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27322_err && (!(_27516_ok)))) {
		_1a4a4b27b_pushErr(_self_, _2749_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27513_t;
	__jule_func_result.__jule_result_arg1 = _27516_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a4d1c3_buildTypeAliasDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _28243_tokens) {
	jule::I64 _28313_i = 1LL;;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3de5170_TypeAliasDecl> _28813_tad = jule::new_ptr<_1a3de5170_TypeAliasDecl>(_1a3de5170_TypeAliasDecl{._field_Token=(*(_28243_tokens))[1LL], ._field_Ident=(*((*(_28243_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1a3db8198_Token> _29213_token = (*(_28243_tokens))[_28313_i];;
	if (((*(_29213_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, _29213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28313_i)++;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	_29213_token=(*(_28243_tokens))[_28313_i];
	if (((*_29213_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a4a4b27b_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	(_28313_i)++;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	jule::Ptr<_1a3dcd653_TypeDecl> _31313_t;;
	jule::Bool _31316_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _28243_tokens, (&(_28313_i)), true);
		_31313_t = __jule_assign_result.__jule_result_arg0;
		_31316_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28813_tad))._field_Kind=_31313_t;
	if ((_31316_ok && (_28313_i < (*(_28243_tokens)).len()))) {
		_1a4a4b27b_pushErr(_self_, (*(_28243_tokens))[_28313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28813_tad.alloc)._field_Public=_1a3e94e9a_IsPub((*_28813_tad.alloc)._field_Ident);
	return _28813_tad;;
}



inline void _1a4a4d536_buildVarTypeAndExpr(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3de14bd_VarDecl>* _32244_v, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _32262_tokens) {
	jule::I64 _32313_i = 0LL;;
	jule::Ptr<_1a3db8198_Token> _32413_tok = (*(_32262_tokens))[_32313_i];;
	if (((*(_32413_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_32313_i)++;
		if (((_32313_i >= (*(_32262_tokens)).len()) || ((*((*(_32262_tokens))[_32313_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a4a4b27b_pushErr(_self_.ptr(), _32413_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a3dcd653_TypeDecl> _33117_t;;
		jule::Bool _33120_ok;;
		({
			__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _32262_tokens, (&(_32313_i)), true);
			_33117_t = __jule_assign_result.__jule_result_arg0;
			_33120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33120_ok) {
			(*((*(_32244_v))))._field_Kind=_33117_t;
			if ((_32313_i >= (*(_32262_tokens)).len())) {
				return;;
			};
			_32413_tok=(*(_32262_tokens))[_32313_i];
		};
	};
	if (((*_32413_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a4a4b27b_pushErr(_self_, _32413_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32244_v))))._field_Setter=_32413_tok;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _34713_exprTokens = (*(_32262_tokens)).slice((_32313_i + 1LL));;
	if ((_34713_exprTokens.len() == 0LL)) {
		_1a4a4b27b_pushErr(_self_, _32413_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32244_v))))._field_Expr=_1a4a4b930_buildExpr(_self_, &(_34713_exprTokens));
}



inline void _1a4a4d899_buildVarCommon(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3de14bd_VarDecl>* _35539_v, jule::Slice<jule::Ptr<_1a3db8198_Token>> _35556_tokens) {
	(*((*(_35539_v))))._field_Token=_35556_tokens[0LL];
	if (((*((*((*(_35539_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*((*(_35539_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35539_v))))._field_Ident=(*(*((*(_35539_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35539_v))))._field_Public=_1a3e94e9a_IsPub((*((*(_35539_v))))._field_Ident);
	(*((*(_35539_v))))._field_Kind=nullptr;
	if ((_35556_tokens.len() > 1LL)) {
		(_35556_tokens).mut_slice(1LL);;
		_1a4a4d536_buildVarTypeAndExpr(_self_, _35539_v, &(_35556_tokens));
	};
}



inline void _1a4a4dcb7_buildVarBegin(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de14bd_VarDecl>* _37137_v, jule::I64* _37155_i, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _37164_tokens) {
	jule::Ptr<_1a3db8198_Token> _3729_tok = (*(_37164_tokens))[(*(_37155_i))];;
	{
		auto &_match_expr{ (*(_3729_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a81757b4:;
			{
				(*((*(_37137_v))))._field_Statically=true;
				goto _case_begin_1a8175cc0;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a8175cc0:;
			{
				((*(_37155_i)))++;
				if (((*(_37155_i)) >= (*(_37164_tokens)).len())) {
					_1a4a4b27b_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_37164_tokens))[(*(_37155_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37137_v))))._field_Mutable=true;
					((*(_37155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a8175495:;
			{
				((*(_37155_i)))++;
				(*((*(_37137_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1a8175198:;
			{
				_1a4a4b27b_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a8175231:;
	};
	if (((*(_37155_i)) >= (*(_37164_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a4e108_buildVar(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _40132_tokens) {
	jule::I64 _40213_i = 0LL;;
	jule::Ptr<_1a3de14bd_VarDecl> _40313_v = jule::new_ptr<_1a3de14bd_VarDecl>(_1a3de14bd_VarDecl{._field_Token=_40132_tokens[0LL], });;
	_1a4a4dcb7_buildVarBegin(_self_.ptr(), &(_40313_v), &(_40213_i), &(_40132_tokens));
	if ((_40213_i >= _40132_tokens.len())) {
		return nullptr;;
	};
	(_40132_tokens).mut_slice(_40213_i);;
	if (((*(_40132_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_40313_v))._field_Reference=true;
		if ((_40132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_40132_tokens).mut_slice(1LL);;
	};
	_1a4a4d899_buildVarCommon(_self_, &(_40313_v), _40132_tokens);
	return _40313_v;;
}



inline jule::Ptr<_1a3dda85d_GenericDecl> _1a4a4e449_buildGeneric(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _42337_tokens) {
	jule::Ptr<_1a3dda85d_GenericDecl> _42413_g = jule::new_ptr<_1a3dda85d_GenericDecl>(_1a3dda85d_GenericDecl{._field_Token=(*(_42337_tokens))[0LL], });;
	if (((*((*(_42413_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*_42413_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_42413_g.alloc)._field_Ident=(*(*_42413_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_42337_tokens)).len() > 1LL)) {
		if (((*((*(_42337_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a4a4b27b_pushErr(_self_, (*(_42337_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_42337_tokens)).len() == 2LL)) {
			_1a4a4b27b_pushErr(_self_, (*(_42337_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a3db8198_Token>> _44117_constraintTokens = (*(_42337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _44217_parts;;
		jule::Slice<_1c980bca3_Log> _44224_errors;;
		({
			__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&(_44117_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_44217_parts = __jule_assign_result.__jule_result_arg0;
			_44224_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_44224_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_44224_errors);
			return nullptr;;
		};
		(*_42413_g.alloc)._field_Constraint=jule::new_ptr<_1a3dda3a7_Constraint>(_1a3dda3a7_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, _44217_parts.len())});
		{
			auto expr = &(_44217_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a81832d8:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _44825_part = *it;
				{
					jule::I64 _44921_i = 0LL;;
					jule::Ptr<_1a3dcd653_TypeDecl> _45021_kind;;
					({
						__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_44825_part), (&(_44921_i)), true);
						_45021_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_42413_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_42413_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::make({_45021_kind}));
					if ((_44921_i < _44825_part.len())) {
						_1a4a4b27b_pushErr(_self_, _44825_part[_44921_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a81832d8:;
				++it;
				goto _iter_begin_1a81832d8;
			}
			_iter_end_1a81832d8:;
		};
	};
	return _42413_g;;
}



inline jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _1a4a4e845_buildGenerics(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _46038_tokens, jule::Ptr<_1a3db8198_Token>* _46057_errorToken) {
	if (((*(_46038_tokens)).len() == 0LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*(_46057_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _46613_parts;;
	jule::Slice<_1c980bca3_Log> _46620_errors;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(_46038_tokens, static_cast<jule::U64>(5LLU), true);
		_46613_parts = __jule_assign_result.__jule_result_arg0;
		_46620_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46620_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46620_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> _47213_generics = jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>::alloc(0LL, _46613_parts.len());;
	{
		auto expr = &(_46613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8188002:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _47321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>> &__jule_push_dest = _47213_generics; __jule_push_dest.push(_1a4a4e449_buildGeneric(_self_, &(_47321_part))); };
			}
			_iter_next_1a8188002:;
			++it;
			goto _iter_begin_1a8188002;
		}
		_iter_end_1a8188002:;
	};
	return _47213_generics;;
}



inline jule::Ptr<_1a3ddddb1_ParamDecl> _1a4a4eb86_buildSelfParam(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _48037_tokens) {
	if ((_48037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3ddddb1_ParamDecl> _48513_param = jule::new_ptr<_1a3ddddb1_ParamDecl>();;
	jule::I64 _48813_i = 0LL;;
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_48513_param.alloc)._field_Mutable=true;
		(_48813_i)++;
		if ((_48813_i >= _48037_tokens.len())) {
			_1a4a4b27b_pushErr(_self_, _48037_tokens[(_48813_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1c9754d1c_StrBuilder _49813_ident = static__1c97550d6_New(5LL);;
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1c975db28_WriteStr(&_49813_ident, jule::Str::lit("&", 1));
		(_48813_i)++;
		if ((_48813_i >= _48037_tokens.len())) {
			_1a4a4b27b_pushErr(_self_, _48037_tokens[(_48813_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1c975db28_WriteStr(&_49813_ident, jule::Str::lit("self", 4));
		(*_48513_param.alloc)._field_Token=_48037_tokens[_48813_i];
		(_48813_i)++;
		if ((_48813_i < _48037_tokens.len())) {
			_1a4a4b27b_pushErr(_self_, _48037_tokens[_48813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_48513_param.alloc)._field_Ident=_1c975e420_Str(&_49813_ident);
	return _48513_param;;
}



inline void _1a4a500a4_paramTypeBegin(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3ddddb1_ParamDecl>* _52238_param, jule::I64* _52262_i, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _52271_tokens) {
	for (; ((*(_52262_i)) < (*(_52271_tokens)).len()); ((*(_52262_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _52413_token = (*(_52271_tokens))[(*(_52262_i))];;
			if (((*(_52413_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_52238_param))))._field_Variadic) {
				_1a4a4b27b_pushErr(_self_, _52413_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1a8190779;
			};
			(*((*(_52238_param))))._field_Variadic=true;
		}
	_iter_next_1a8190779:;
	}
	_iter_end_1a8190779:;;
}



inline void _1a4a50417_buildParamType(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3ddddb1_ParamDecl>* _53739_param, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _53763_tokens) {
	jule::I64 _53813_i = 0LL;;
	_1a4a500a4_paramTypeBegin(_self_.ptr(), _53739_param, &(_53813_i), _53763_tokens);
	if ((_53813_i >= (*(_53763_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _53763_tokens, (&(_53813_i)), true);
		(*((*(_53739_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53813_i < (*(_53763_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_53763_tokens))[_53813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a4a5077a_buildParamBody(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3ddddb1_ParamDecl>* _55039_param, jule::Slice<jule::Ptr<_1a3db8198_Token>> _55062_tokens) {
	jule::Ptr<_1a3db8198_Token> _55113_tok = _55062_tokens[0LL];;
	if ((_55062_tokens.len() == 1LL)) {
		(*((*(_55039_param))))._field_Ident=(*(_55113_tok))._field_Kind;
		return;;
	} else if ((_55062_tokens.len() < 3LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), _55113_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_55062_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_55039_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a4a50417_buildParamType(_self_, _55039_param, &(_55062_tokens));
		return;;
	};
	(*((*(_55039_param))))._field_Ident=(*(_55113_tok))._field_Kind;
	(_55062_tokens).mut_slice(2LL);;
	_1a4a50417_buildParamType(_self_, _55039_param, &(_55062_tokens));
}



inline jule::Ptr<_1a3ddddb1_ParamDecl> _1a4a50abb_buildParam(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _57034_tokens) {
	jule::Ptr<_1a3ddddb1_ParamDecl> _57113_param = jule::new_ptr<_1a3ddddb1_ParamDecl>(_1a3ddddb1_ParamDecl{._field_Token=_57034_tokens[0LL], });;
	if (((*((*(_57113_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_57113_param.alloc)._field_Mutable=true;
		if ((_57034_tokens.len() == 1LL)) {
			_1a4a4b27b_pushErr(_self_.ptr(), _57034_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_57034_tokens).mut_slice(1LL);;
		(*_57113_param.alloc)._field_Token=_57034_tokens[0LL];
	};
	if ((_57034_tokens.len() >= 3LL)) {
		if (((*(*_57113_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_57034_tokens.len() == 1LL)) {
				_1a4a4b27b_pushErr(_self_, _57034_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_57034_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_57034_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_57113_param.alloc)._field_Reference=true;
				(_57034_tokens).mut_slice(1LL);;
				(*_57113_param.alloc)._field_Token=_57034_tokens[0LL];
			};
		};
	};
	if (((*(*_57113_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_57113_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a4a50417_buildParamType(_self_, &(_57113_param), &(_57034_tokens));
	} else {
		_1a4a5077a_buildParamBody(_self_, &(_57113_param), _57034_tokens);
	};
	return _57113_param;;
}



inline void _1a4a50d74_checkParams(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>>* _61335_params) {
	{
		auto expr = _61335_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a0ec53:;
		if (it != expr_end) {
			jule::Ptr<_1a3ddddb1_ParamDecl> _61421_param = *it;
			{
				if ((_1a3dde235_IsSelf(_61421_param.ptr()) || ((*_61421_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1a7a0ec53;
				};
				if (((*_61421_param.alloc)._field_Token == nullptr)) {
					_1a4a4b27b_pushErr(_self_, (*_61421_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_61421_param.alloc)._field_Kind=jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*_61421_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*_61421_param.alloc)._field_Token, ._field_Ident=(*((*_61421_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*_61421_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1a7a0ec53:;
			++it;
			goto _iter_begin_1a7a0ec53;
		}
		_iter_end_1a7a0ec53:;
	};
}



inline jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> _1a4a51270_buildParams(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _63336_tokens, jule::Bool _63354_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _63413_parts;;
	jule::Slice<_1c980bca3_Log> _63420_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(_63336_tokens, static_cast<jule::U64>(5LLU), true);
		_63413_parts = __jule_assign_result.__jule_result_arg0;
		_63420_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_63420_errs);
	if ((_63413_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> _64017_params = nullptr;;
	if ((_63354_method && (_63413_parts.len() > 0LL))) {
		jule::Ptr<_1a3ddddb1_ParamDecl> _64217_param = _1a4a4eb86_buildSelfParam(_self_, _63413_parts[0LL]);;
		if (((_64217_param != nullptr) && _1a3dde235_IsSelf(_64217_param))) {
			{ jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> &__jule_push_dest = _64017_params; __jule_push_dest.push(_64217_param); };
			(_63413_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_63413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a1bee6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _64921_part = *it;
			{
				if ((_64921_part.len() == 0LL)) {
					goto _iter_next_1a7a1bee6;
				};
				jule::Ptr<_1a3ddddb1_ParamDecl> _65317_param = _1a4a50abb_buildParam(_self_, _64921_part);;
				if ((_65317_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>> &__jule_push_dest = _64017_params; __jule_push_dest.push(_65317_param); };
				};
			}
			_iter_next_1a7a1bee6:;
			++it;
			goto _iter_begin_1a7a1bee6;
		}
		_iter_end_1a7a1bee6:;
	};
	_1a4a50d74_checkParams(_self_, &(_64017_params));
	return _64017_params;;
}



inline __jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool _1a4a5166b_buildMultiRetType(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _66342_tokens, jule::I64* _66365_i) {
	__jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a3dd1546_RetTypeDecl>();
	((*(_66365_i)))++;
	if (((*(_66365_i)) >= (*(_66342_tokens)).len())) {
		((*(_66365_i)))--;
		({
			__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _66342_tokens, _66365_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_66365_i)))--;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _67313_rangeTokens = _1a4a48e7c_range(_66365_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _66342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _67513_parts;;
	jule::Slice<_1c980bca3_Log> _67520_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&(_67313_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_67513_parts = __jule_assign_result.__jule_result_arg0;
		_67520_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_67520_errs);
	if ((_67513_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _68113_types = jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, _67513_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1a3db8198_Token>>::alloc(0LL, _67513_parts.len());
	{
		auto expr = &(_67513_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a22c66:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _68321_part = *it;
			{
				if ((_68321_part.len() == 0LL)) {
					goto _iter_next_1a7a22c66;
				};
				jule::Ptr<_1a3db8198_Token> _68717_token = _68321_part[0LL];;
				jule::I64 _68817_offset = 0LL;;
				if ((_68321_part.len() > 1LL)) {
					_68717_token=_68321_part[1LL];
					if (((*(_68717_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_68817_offset=2LL;
						if ((_68321_part.len() < 3LL)) {
							_1a4a4b27b_pushErr(_self_, _68717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1a7a22c66;
						};
					};
				};
				_68717_token=_68321_part[0LL];
				if ((_68817_offset != 2LL)) {
					jule::Ptr<_1a3db8198_Token> _70421_newToken = jule::new_ptr<_1a3db8198_Token>((*_68717_token.alloc));;
					(*_70421_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3db8198_Token>>::make({_70421_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3db8198_Token>>::make({_68717_token}));
				};
				jule::Ptr<_1a3dcd653_TypeDecl> _71117_tk;;
				({
					__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_68321_part), (&(_68817_offset)), true);
					_71117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68817_offset < _68321_part.len())) {
					_1a4a4b27b_pushErr(_self_, _68321_part[_68817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = _68113_types; __jule_push_dest.push(_71117_tk); };
			}
			_iter_next_1a7a22c66:;
			++it;
			goto _iter_begin_1a7a22c66;
		}
		_iter_end_1a7a22c66:;
	};
	if ((_68113_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*(_66342_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a3dced80_TupleTypeDecl>(_1a3dced80_TupleTypeDecl{._field_Types=_68113_types}), &__jule_any_type74)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_68113_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool _1a4a51a67_buildRetType(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _73437_tokens, jule::I64* _73460_i) {
	__jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a3dd1546_RetTypeDecl>();
	if (((*(_73460_i)) >= (*(_73437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a3db8198_Token> _74013_token = (*(_73437_tokens))[(*(_73460_i))];;
	{
		auto &_match_expr{ (*(_74013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a821a293:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1a821a309:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a821a370:;
			{
				if ((((*(_73460_i)) + 1LL) >= (*(_73437_tokens)).len())) {
					_1a4a4b27b_pushErr(_self_.ptr(), _74013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_73460_i)))++;
				_74013_token=(*(_73437_tokens))[(*(_73460_i))];
				{
					auto &_match_expr{ (*(_74013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a821b580:;
						{
							({
								__jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a4a5166b_buildMultiRetType(_self_, _73437_tokens, _73460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a821c273:;
						{
							_1a4a4b27b_pushErr(_self_, _74013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1a821c1eb:;
				};
				({
					__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _73437_tokens, _73460_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a821a23d:;
	};
	((*(_73460_i)))++;
	_1a4a4b27b_pushErr(_self_.ptr(), _74013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a3de0313_FnDecl> _1a4a5201d_buildFnPrototype(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _77341_tokens, jule::I64* _77364_i, jule::Bool _77372_method) {
	jule::Ptr<_1a3de0313_FnDecl> _77413_f = jule::new_ptr<_1a3de0313_FnDecl>(_1a3de0313_FnDecl{._field_Token=(*(_77341_tokens))[(*(_77364_i))], });;
	if (((*((*(_77413_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_77413_f.alloc)._field_Statically=true;
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_.ptr(), (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Token=(*(_77341_tokens))[(*(_77364_i))];
	};
	if (((*(*_77413_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_77413_f.alloc)._field_Unsafety=true;
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Token=(*(_77341_tokens))[(*(_77364_i))];
	};
	((*(_77364_i)))++;
	if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3db8198_Token> _8079_tok = (*(_77341_tokens))[(*(_77364_i))];;
	if (((*(_8079_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Ident=(*_8079_tok.alloc)._field_Kind;
	} else {
		(*_77413_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1a3db8198_Token> _8199_errorToken = (*(_77341_tokens))[(*(_77364_i))];;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _82013_genericsTokens = _1a4a48e7c_range(_77364_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _77341_tokens);;
	if ((_82013_genericsTokens != nullptr)) {
		(*_77413_f.alloc)._field_Generics=_1a4a4e845_buildGenerics(_self_, &(_82013_genericsTokens), &(_8199_errorToken));
	};
	if (((*((*(_77341_tokens))[(*(_77364_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a4a4b27b_pushErr(_self_, (*(_77341_tokens))[(*(_77364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _83013_paramsToks = _1a4a48e7c_range(_77364_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _77341_tokens);;
	if ((_83013_paramsToks.len() > 0LL)) {
		(*_77413_f.alloc)._field_Params=_1a4a51270_buildParams(_self_, &(_83013_paramsToks), _77372_method);
	};
	if (((*(_77364_i)) < (*(_77341_tokens)).len())) {
		jule::Ptr<_1a3db8198_Token> _83613_token = (*(_77341_tokens))[(*(_77364_i))];;
		if (((*(_83613_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_77413_f.alloc)._field_Exceptional=true;
			((*(_77364_i)))++;
		};
	};
	(*_77413_f.alloc)._field_Public=_1a3e94e9a_IsPub((*_77413_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a3dd1546_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a4a51a67_buildRetType(_self_, _77341_tokens, _77364_i);
		(*_77413_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _77413_f;;
}



inline jule::Ptr<_1a3de0313_FnDecl> _1a4a524c4_buildFn(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _85032_tokens, jule::Bool _85050_method, jule::Bool _85064_prototype) {
	jule::I64 _85113_i = 0LL;;
	jule::Ptr<_1a3de0313_FnDecl> _85213_f = _1a4a5201d_buildFnPrototype(_self_, _85032_tokens, &(_85113_i), _85050_method);;
	if (_85064_prototype) {
		if ((_85113_i < (*(_85032_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, (*(_85032_tokens))[(_85113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _85213_f;;
	} else if ((_85213_f == nullptr)) {
		return _85213_f;;
	};
	if ((_85113_i >= (*(_85032_tokens)).len())) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*(_85213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _86813_blockTokens = _1a4a48e7c_range(&(_85113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _85032_tokens);;
	if ((_86813_blockTokens != nullptr)) {
		(*_85213_f.alloc)._field_Scope=_1a4a4c425_buildScope(_self_, &(_86813_blockTokens), (*(_85032_tokens))[(_85113_i - 1LL)]);
		(*((*_85213_f.alloc)._field_Scope))._field_Unsafety=(*_85213_f.alloc)._field_Unsafety;
		if ((_85113_i < (*(_85032_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, (*(_85032_tokens))[_85113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*_85213_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _85213_f;;
}



inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a52815_getUseDeclSelectors(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _88442_tokens) {
	jule::I64 _88513_i = 0LL;;
	_88442_tokens=_1a4a48e7c_range(&(_88513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_88442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _88713_parts;;
	jule::Slice<_1c980bca3_Log> _88720_errs;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&(_88442_tokens), static_cast<jule::U64>(5LLU), true);
		_88713_parts = __jule_assign_result.__jule_result_arg0;
		_88720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_88720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_88720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _89313_selectors = jule::Slice<jule::Ptr<_1a3db8198_Token>>::alloc(0LL, _88713_parts.len());;
	{
		auto expr = &(_88713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82356ba:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _89421_part = *it;
			{
				if ((_89421_part.len() > 1LL)) {
					_1a4a4b27b_pushErr(_self_, _89421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a3db8198_Token> _89817_tok = _89421_part[0LL];;
				if ((((*(_89817_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_89817_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a4a4b27b_pushErr(_self_, _89817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1a82356ba;
				};
				{ jule::Slice<jule::Ptr<_1a3db8198_Token>> &__jule_push_dest = _89313_selectors; __jule_push_dest.push(_89817_tok); };
			}
			_iter_next_1a82356ba:;
			++it;
			goto _iter_begin_1a82356ba;
		}
		_iter_end_1a82356ba:;
	};
	return _89313_selectors;;
}



inline void _1a4a52b78_buildBindUseDecl(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de6759_UseDecl>* _90940_decl, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _90957_tokens) {
	if (((*(_90957_tokens)).len() > 1LL)) {
		_1a4a4b27b_pushErr(_self_, (*(_90957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3db8198_Token> _9139_token = (*(_90957_tokens))[0LL];;
	if ((((*(_9139_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9139_token.alloc)._field_Kind[0LL] != '`') && ((*_9139_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1a4a4b27b_pushErr(_self_, _9139_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90940_decl))))._field_Binded=true;
	(*((*(_90940_decl))))._field_LinkPath=(*_9139_token.alloc)._field_Kind.slice(1LL, ((*_9139_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1a4a52eb9_useDeclTokstoa(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _92234_tokens) {
	jule::I64 _92313_n = 0LL;;
	{
		auto expr = _92234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a823caac:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_92416_token = it;
			{
				if ((((*((*(_92416_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_92416_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1a4a4b27b_pushErr(_self_, (*(_92416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_92313_n+=(*(*(_92416_token)).alloc)._field_Kind.len();
			}
			_iter_next_1a823caac:;
			++it;
			goto _iter_begin_1a823caac;
		}
		_iter_end_1a823caac:;
	};
	_1c9754d1c_StrBuilder _93013_s = static__1c97550d6_New(_92313_n);;
	{
		auto expr = _92234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a823cc22:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_93116_token = it;
			{
				_1c975db28_WriteStr(&_93013_s, (*((*(_93116_token))))._field_Kind);
			}
			_iter_next_1a823cc22:;
			++it;
			goto _iter_begin_1a823cc22;
		}
		_iter_end_1a823cc22:;
	};
	return _1c975e420_Str(&_93013_s);;
}



inline void _1a4a5332c_buildStdUseDecl(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de6759_UseDecl>* _93739_decl, jule::Slice<jule::Ptr<_1a3db8198_Token>> _93759_tokens) {
	(*((*(_93739_decl))))._field_Std=true;
	jule::Ptr<_1a3db8198_Token> _94013_token = _93759_tokens[0LL];;
	if ((_93759_tokens.len() < 3LL)) {
		_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_93759_tokens).mut_slice(2LL);;
	_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a82426c7:;
			{
				_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a824273d:;
			{
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _95321_selectors = nullptr;;
				({
					__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_assign_result = _1a4a49246_rangeLast(&(_93759_tokens));
					_93759_tokens = __jule_assign_result.__jule_result_arg0;
					_95321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_93739_decl))))._field_Selected=_1a4a52815_getUseDeclSelectors(_self_, _95321_selectors);
				if ((_93759_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
				if (((*(_94013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a82427a4:;
			{
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
				if (((*(_94013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_93739_decl))))._field_Full=true;
			}
		}
		_match_end_1a8242672:;
	};
	if (((_93759_tokens.len() == 1LL) && ((*(_93759_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_93739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_93739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1a4a52eb9_useDeclTokstoa(_self_, &(_93759_tokens)));
	};
}



inline void _1a4a53690_buildIdentUseDecl(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de6759_UseDecl>* _99541_decl, jule::Slice<jule::Ptr<_1a3db8198_Token>> _99561_tokens) {
	(*((*(_99541_decl))))._field_Std=false;
	jule::Ptr<_1a3db8198_Token> _99813_token = _99561_tokens[(_99561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a824b24c:;
			{
				_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a824c1b5:;
			{
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _100421_selectors = nullptr;;
				({
					__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_assign_result = _1a4a49246_rangeLast(&(_99561_tokens));
					_99561_tokens = __jule_assign_result.__jule_result_arg0;
					_100421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99541_decl))))._field_Selected=_1a4a52815_getUseDeclSelectors(_self_, _100421_selectors);
				if ((_99561_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99813_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if (((*(_99813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a824c22b:;
			{
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99813_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if (((*(_99813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1a4a4b27b_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99541_decl))))._field_Full=true;
			}
		}
		_match_end_1a824c094:;
	};
	(*((*(_99541_decl))))._field_LinkPath=_1a4a52eb9_useDeclTokstoa(_self_, &(_99561_tokens));
}



inline void _1a4a53a03_parseUseDecl(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de6759_UseDecl>* _104336_decl, jule::Slice<jule::Ptr<_1a3db8198_Token>> _104356_tokens) {
	if ((*((*(_104336_decl))))._field_Binded) {
		_1a4a52b78_buildBindUseDecl(_self_, _104336_decl, &(_104356_tokens));
		return;;
	};
	jule::Ptr<_1a3db8198_Token> _104913_token = _104356_tokens[0LL];;
	if (((*(_104913_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, _104913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104356_tokens.len() > 2LL) && ((*(_104356_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_104336_decl))))._field_Alias=(*_104913_token.alloc)._field_Kind;
		if (((*(_104356_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a4a4b27b_pushErr(_self_, _104913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_104356_tokens).mut_slice(2LL);;
		_104913_token=_104356_tokens[0LL];
	};
	;
	{
		
		if ((*_104913_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1a8259337:;
			{
				_1a4a5332c_buildStdUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		else {
			_case_begin_1a8258e91:;
			{
				_1a4a53690_buildIdentUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		_match_end_1a8258e3b:;
	};
}



inline jule::Ptr<_1a3de6759_UseDecl> _1a4a53dee_buildUseDecl(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _107735_tokens, jule::Bool _107753_binded) {
	jule::Ptr<_1a3de6759_UseDecl> _107813_decl = jule::new_ptr<_1a3de6759_UseDecl>(_1a3de6759_UseDecl{._field_Token=_107735_tokens[0LL], ._field_Binded=_107753_binded, });;
	if ((_107735_tokens.len() < 2LL)) {
		_1a4a4b27b_pushErr(_self_, (*(_107813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_107735_tokens).mut_slice(1LL);;
	_1a4a53a03_parseUseDecl(_self_, &(_107813_decl), _107735_tokens);
	return _107813_decl;;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a542ea_buildTypeEnumItemKind(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::I64* _109146_i, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _109159_tokens) {
	jule::I64 _109213_braceN = 0LL;;
	jule::I64 _10939_exprStart = (*(_109146_i));;
	for (; ((*(_109146_i)) < (*(_109159_tokens)).len()); ((*(_109146_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _109513_t = (*(_109159_tokens))[(*(_109146_i))];;
			{
				auto &_match_expr{ (*(_109513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a825d33b:;
					{
						(_109213_braceN)++;
						goto _iter_next_1a825c824;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a825d68d:;
					{
						(_109213_braceN)--;
					}
				}
				_match_end_1a825d627:;
			};
			if ((_109213_braceN > 0LL)) {
				goto _iter_next_1a825c824;
			};
			if ((((*(_109513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109146_i)) + 1LL) >= (*(_109159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _111125_kindTokens = nullptr;;
				if (((*_109513_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_111125_kindTokens=(*(_109159_tokens)).slice(_10939_exprStart, (*(_109146_i)));
				} else {
					_111125_kindTokens=(*(_109159_tokens)).slice(_10939_exprStart);
				};
				jule::I64 _111721_j = 0LL;;
				jule::Ptr<_1a3dcd653_TypeDecl> _111821_kind;;
				({
					__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_111125_kindTokens), (&(_111721_j)), true);
					_111821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111721_j < _111125_kindTokens.len())) {
					_1a4a4b27b_pushErr(_self_, _111125_kindTokens[_111721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111821_kind;;
			};
		}
	_iter_next_1a825c824:;
	}
	_iter_end_1a825c824:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>> _1a4a5463b_buildTypeEnumItems(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _112843_tokens) {
	jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>> _112913_items = jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113013_i = 0LL;;
	for (; (_113013_i < (*(_112843_tokens)).len()); (_113013_i)++) {
		{
			jule::Ptr<_1a3db8198_Token> _113217_t = (*(_112843_tokens))[_113013_i];;
			jule::Ptr<_1a3de80eb_TypeEnumItemDecl> _113317_item = jule::new_ptr<_1a3de80eb_TypeEnumItemDecl>();;
			(*_113317_item.alloc)._field_Token=_113217_t;
			if ((((*((*_113317_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112843_tokens)).len() - _113013_i) > 2LL))) {
				_113217_t=(*(_112843_tokens))[(_113013_i + 1LL)];
				if (((*(_113217_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_113317_item.alloc)._field_Ident=(*(*_113317_item.alloc)._field_Token.alloc)._field_Kind;
					_113013_i+=2LL;
					if (((_113013_i >= (*(_112843_tokens)).len()) || ((*((*(_112843_tokens))[_113013_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a4a4b27b_pushErr(_self_.ptr(), _113217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1a8263583;
					};
				};
			};
			(*_113317_item.alloc)._field_Kind=_1a4a542ea_buildTypeEnumItemKind(_self_, &(_113013_i), _112843_tokens);
			{ jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>> &__jule_push_dest = _112913_items; __jule_push_dest.push(_113317_item); };
		}
	_iter_next_1a8263583:;
	}
	_iter_end_1a8263583:;;
	return _112913_items;;
}



inline jule::Ptr<_1a3de875b_TypeEnumDecl> _1a4a5497c_buildTypeEnumDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _115242_tokens) {
	jule::I64 _115313_i = 1LL;;
	jule::Ptr<_1a3de875b_TypeEnumDecl> _115413_e = jule::new_ptr<_1a3de875b_TypeEnumDecl>(_1a3de875b_TypeEnumDecl{._field_Token=(*(_115242_tokens))[_115313_i], });;
	if (((*((*(_115413_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*_115413_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_115413_e.alloc)._field_Ident=(*(*_115413_e.alloc)._field_Token.alloc)._field_Kind;
	_115313_i+=3LL;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _116413_itemTokens = _1a4a48e7c_range(&(_115313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115242_tokens);;
	if ((_116413_itemTokens == nullptr)) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*_115413_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115413_e;;
	} else if ((_115313_i < (*(_115242_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_115242_tokens))[_115313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_115413_e.alloc)._field_Public=_1a3e94e9a_IsPub((*_115413_e.alloc)._field_Ident);
	(*_115413_e.alloc)._field_End=(*(_115242_tokens))[(_115313_i - 1LL)];
	(*_115413_e.alloc)._field_Items=_1a4a5463b_buildTypeEnumItems(_self_, &(_116413_itemTokens));
	return _115413_e;;
}



inline jule::Ptr<_1a3dd2987_Expr> _1a4a54d78_buildEnumItemExpr(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::I64* _117942_i, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _117955_tokens) {
	jule::I64 _118013_braceN = 0LL;;
	jule::I64 _11819_exprStart = (*(_117942_i));;
	for (; ((*(_117942_i)) < (*(_117955_tokens)).len()); ((*(_117942_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _118313_t = (*(_117955_tokens))[(*(_117942_i))];;
			{
				auto &_match_expr{ (*(_118313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a827123e:;
					{
						(_118013_braceN)++;
						goto _iter_next_1a8270727;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a8271591:;
					{
						(_118013_braceN)--;
					}
				}
				_match_end_1a827152a:;
			};
			if ((_118013_braceN > 0LL)) {
				goto _iter_next_1a8270727;
			};
			if ((((*(_118313_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117942_i)) + 1LL) >= (*(_117955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a3db8198_Token>> _119925_exprTokens = nullptr;;
				if (((*_118313_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119925_exprTokens=(*(_117955_tokens)).slice(_11819_exprStart, (*(_117942_i)));
				} else {
					_119925_exprTokens=(*(_117955_tokens)).slice(_11819_exprStart);
				};
				return _1a4a4b930_buildExpr(_self_, &(_119925_exprTokens));;
			};
		}
	_iter_next_1a8270727:;
	}
	_iter_end_1a8270727:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> _1a4a551b9_buildEnumItems(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _121139_tokens) {
	jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> _121213_items = jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121313_i = 0LL;;
	for (; (_121313_i < (*(_121139_tokens)).len()); (_121313_i)++) {
		{
			jule::Ptr<_1a3db8198_Token> _121517_t = (*(_121139_tokens))[_121313_i];;
			jule::Ptr<_1a3de6c10_EnumItemDecl> _121617_item = jule::new_ptr<_1a3de6c10_EnumItemDecl>();;
			(*_121617_item.alloc)._field_Token=_121517_t;
			if (((*((*_121617_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a4a4b27b_pushErr(_self_.ptr(), (*_121617_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_121617_item.alloc)._field_Ident=(*(*_121617_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_121313_i + 1LL) >= (*(_121139_tokens)).len()) || ((*((*(_121139_tokens))[(_121313_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121313_i + 1LL) < (*(_121139_tokens)).len())) {
					(_121313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> &__jule_push_dest = _121213_items; __jule_push_dest.push(_121617_item); };
				goto _iter_next_1a8275155;
			};
			(_121313_i)++;
			_121517_t=(*(_121139_tokens))[_121313_i];
			(_121313_i)++;
			if (((*(_121517_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a4a4b27b_pushErr(_self_, _121517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1a8275155;
			};
			if (((_121313_i >= (*(_121139_tokens)).len()) || ((*((*(_121139_tokens))[_121313_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a4a4b27b_pushErr(_self_, _121517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1a8275155;
			};
			(*_121617_item.alloc)._field_Expr=_1a4a54d78_buildEnumItemExpr(_self_, &(_121313_i), _121139_tokens);
			{ jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>> &__jule_push_dest = _121213_items; __jule_push_dest.push(_121617_item); };
		}
	_iter_next_1a8275155:;
	}
	_iter_end_1a8275155:;;
	return _121213_items;;
}



inline jule::Ptr<_1a3de77c1_EnumDecl> _1a4a5550a_buildEnumDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _124838_tokens) {
	if (((*(_124838_tokens)).len() < 3LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*(_124838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3de77c1_EnumDecl> _125313_e = jule::new_ptr<_1a3de77c1_EnumDecl>(_1a3de77c1_EnumDecl{._field_Token=(*(_124838_tokens))[1LL], });;
	if (((*((*(_125313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_125313_e.alloc)._field_Ident=(*(*_125313_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _126113_i = 2LL;;
	if (((*((*(_124838_tokens))[_126113_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126113_i)++;
		if ((_126113_i >= (*(_124838_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, (*(_124838_tokens))[(_126113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125313_e;;
		};
		({
			__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, _124838_tokens, (&(_126113_i)), true);
			(*_125313_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126113_i >= (*(_124838_tokens)).len())) {
			_1a4a4aac7_stop(_self_);
			_1a4a4b27b_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125313_e;;
		};
	} else {
		(*_125313_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _127813_itemTokens = _1a4a48e7c_range(&(_126113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124838_tokens);;
	if ((_127813_itemTokens == nullptr)) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125313_e;;
	} else if ((_126113_i < (*(_124838_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_124838_tokens))[_126113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_125313_e.alloc)._field_Public=_1a3e94e9a_IsPub((*_125313_e.alloc)._field_Ident);
	(*_125313_e.alloc)._field_End=(*(_124838_tokens))[(_126113_i - 1LL)];
	(*_125313_e.alloc)._field_Items=_1a4a551b9_buildEnumItems(_self_, &(_127813_itemTokens));
	return _125313_e;;
}



inline jule::Any _1a4a5584b_buildNodeEnumDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _129342_tokens) {
	if ((((*(_129342_tokens)).len() > 3LL) && ((*((*(_129342_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_129342_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a4a5497c_buildTypeEnumDecl(_self_, _129342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a4a5550a_buildEnumDecl(_self_, _129342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a3de8a25_FieldDecl> _1a4a55b8c_buildField(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _130234_tokens) {
	jule::Ptr<_1a3de8a25_FieldDecl> _130313_f = jule::new_ptr<_1a3de8a25_FieldDecl>();;
	(*_130313_f.alloc)._field_Mutable=((*(_130234_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_130313_f.alloc)._field_Mutable) {
		if ((_130234_tokens.len() == 1LL)) {
			_1a4a4b27b_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130234_tokens).mut_slice(1LL);;
	};
	(*_130313_f.alloc)._field_Token=_130234_tokens[0LL];
	if (((*((*_130313_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, (*_130313_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_130313_f.alloc)._field_Ident=(*(*_130313_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_130234_tokens.len() == 1LL)) {
		_1a4a4b27b_pushErr(_self_, _130234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130234_tokens.len() < 3LL) || ((*(_130234_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a4a4b27b_pushErr(_self_, _130234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_130234_tokens).mut_slice(2LL);;
	jule::I64 _133113_i = 0LL;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_130234_tokens), (&(_133113_i)), true);
		(*_130313_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133113_i < _130234_tokens.len())) {
		jule::Ptr<_1a3db8198_Token> _133413_token = _130234_tokens[_133113_i];;
		if (((*(_133413_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a4a4b27b_pushErr(_self_, _130234_tokens[_133113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133113_i)++;
		if ((_133113_i >= _130234_tokens.len())) {
			_1a4a4b27b_pushErr(_self_, _133413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130234_tokens).mut_slice(_133113_i);;
		(*_130313_f.alloc)._field_Default=_1a4a4b930_buildExpr(_self_, &(_130234_tokens));
	};
	(*_130313_f.alloc)._field_Public=_1a3e94e9a_IsPub((*_130313_f.alloc)._field_Ident);
	return _130313_f;;
}



inline jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>> _1a4a55ecd_buildStructDeclFields(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _135145_tokens) {
	jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>> _135217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _135313_stmts = _1a4a2c02b_splitStmts(&(_135145_tokens));;
	{
		auto expr = &(_135313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82955b5:;
		if (it != expr_end) {
			jule::Ptr<_1a4a2bb74_stmt> _135421_stmt = *it;
			{
				_135145_tokens=(*(_135421_stmt))._field_tokens;
				jule::Ptr<_1a3de8a25_FieldDecl> _135617_f = _1a4a55b8c_buildField(_self_, _135145_tokens);;
				{ jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>> &__jule_push_dest = _135217_fields; __jule_push_dest.push(_135617_f); };
			}
			_iter_next_1a82955b5:;
			++it;
			goto _iter_begin_1a82955b5;
		}
		_iter_end_1a82955b5:;
	};
	return _135217_fields;;
}



inline jule::Ptr<_1a3de941b_StructDecl> _1a4a5631e_buildStructDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _136240_tokens) {
	if (((*(_136240_tokens)).len() < 3LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*(_136240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _136813_i = 1LL;;
	jule::Ptr<_1a3de941b_StructDecl> _136913_s = jule::new_ptr<_1a3de941b_StructDecl>(_1a3de941b_StructDecl{._field_Token=(*(_136240_tokens))[_136813_i], });;
	if (((*((*(_136913_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, (*_136913_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136813_i)++;
	if ((_136813_i >= (*(_136240_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_136240_tokens))[_136813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	(*_136913_s.alloc)._field_Ident=(*(*_136913_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a3db8198_Token> _13839_errorToken = (*(_136240_tokens))[_136813_i];;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _138413_genericsTokens = _1a4a48e7c_range(&(_136813_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136240_tokens);;
	if ((_138413_genericsTokens != nullptr)) {
		(*_136913_s.alloc)._field_Generics=_1a4a4e845_buildGenerics(_self_, &(_138413_genericsTokens), &(_13839_errorToken));
	};
	if ((_136813_i >= (*(_136240_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_136240_tokens))[(_136813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _139413_bodyTokens = _1a4a48e7c_range(&(_136813_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136240_tokens);;
	if ((_139413_bodyTokens == nullptr)) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*_136913_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	if ((_136813_i < (*(_136240_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_136240_tokens))[_136813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136913_s.alloc)._field_Public=_1a3e94e9a_IsPub((*_136913_s.alloc)._field_Ident);
	(*_136913_s.alloc)._field_Fields=_1a4a55ecd_buildStructDeclFields(_self_, _139413_bodyTokens);
	(*_136913_s.alloc)._field_End=(*(_136240_tokens))[(_136813_i - 1LL)];
	return _136913_s;;
}



inline void _1a4a565c7_checkMethodReceiver(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de0313_FnDecl>* _141039_f) {
	if ((*((*(_141039_f))))._field_Statically) {
		if ((((*((*(_141039_f))))._field_Params.len() > 0LL) && _1a3dde235_IsSelf((*((*(_141039_f))))._field_Params[0LL].ptr()))) {
			_1a4a4b27b_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141039_f))))._field_Params.len() == 0LL)) {
		_1a4a4b27b_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3ddddb1_ParamDecl> _14229_param = (*((*(_141039_f))))._field_Params[0LL];;
	if ((!(_1a3dde235_IsSelf(_14229_param.ptr())))) {
		_1a4a4b27b_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a4a5693a_buildTraitBody(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3de9b58_TraitDecl>* _142939_t, jule::Slice<jule::Ptr<_1a3db8198_Token>> _142958_tokens) {
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _143013_stmts = _1a4a2c02b_splitStmts(&(_142958_tokens));;
	{
		auto expr = &(_143013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82a5d12:;
		if (it != expr_end) {
			jule::Ptr<_1a4a2bb74_stmt> _143121_stmt = *it;
			{
				_142958_tokens=(*(_143121_stmt))._field_tokens;
				if ((_142958_tokens.len() == 0LL)) {
					goto _iter_next_1a82a5d12;
				};
				{
					auto &_match_expr{ (*(_142958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1a82a9882:;
						{
							jule::Ptr<_1a3de0313_FnDecl> _143821_f = _1a4a524c4_buildFn(_self_, &(_142958_tokens), true, true);;
							if ((_143821_f == nullptr)) {
								goto _match_end_1a82a71dc;
							};
							_1a4a565c7_checkMethodReceiver(_self_, &(_143821_f));
							if (((*(_143821_f))._field_Generics.len() > 0LL)) {
								_1a4a4b27b_pushErr(_self_, (*(_143821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a3de0313_FnDecl>> &__jule_push_dest = (*((*(_142939_t))))._field_Methods; __jule_push_dest.push(_143821_f); };
						}
					}
					else {
						_case_begin_1a82a69e4:;
						{
							jule::I64 _144821_i = 0LL;;
							jule::Ptr<_1a3dcd653_TypeDecl> _144921_ti;;
							jule::Bool _144925_ok;;
							({
								__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_142958_tokens), (&(_144821_i)), true);
								_144921_ti = __jule_assign_result.__jule_result_arg0;
								_144925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144925_ok))) {
								goto _match_end_1a82a71dc;
							};
							if ((_144821_i < _142958_tokens.len())) {
								_1a4a4b27b_pushErr(_self_, _142958_tokens[_144821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = (*((*(_142939_t))))._field_Inherits; __jule_push_dest.push(_144921_ti); };
						}
					}
					_match_end_1a82a71dc:;
				};
			}
			_iter_next_1a82a5d12:;
			++it;
			goto _iter_begin_1a82a5d12;
		}
		_iter_end_1a82a5d12:;
	};
}



inline jule::Ptr<_1a3de9b58_TraitDecl> _1a4a56c7b_buildTraitDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _146139_tokens) {
	if (((*(_146139_tokens)).len() < 3LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), (*(_146139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3de9b58_TraitDecl> _146613_t = jule::new_ptr<_1a3de9b58_TraitDecl>(_1a3de9b58_TraitDecl{._field_Token=(*(_146139_tokens))[1LL], });;
	if (((*((*(_146613_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a4b27b_pushErr(_self_, (*_146613_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_146613_t.alloc)._field_Ident=(*(*_146613_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _147413_i = 2LL;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _147513_bodyTokens = _1a4a48e7c_range(&(_147413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146139_tokens);;
	if ((_147513_bodyTokens == nullptr)) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, (*_146613_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147413_i < (*(_146139_tokens)).len())) {
		_1a4a4b27b_pushErr(_self_, (*(_146139_tokens))[_147413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_146613_t.alloc)._field_Public=_1a3e94e9a_IsPub((*_146613_t.alloc)._field_Ident);
	_1a4a5693a_buildTraitBody(_self_, &(_146613_t), _147513_bodyTokens);
	(*_146613_t.alloc)._field_End=(*(_146139_tokens))[(_147413_i - 1LL)];
	return _146613_t;;
}



inline jule::Ptr<_1a3de0313_FnDecl> _1a4a570bc_buildBindFn(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _149135_tokens) {
	(_149135_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3de0313_FnDecl> _149313_f = _1a4a524c4_buildFn(_self_, &(_149135_tokens), false, true);;
	if ((_149313_f != nullptr)) {
		(*_149313_f.alloc)._field_Public=false;
		(*_149313_f.alloc)._field_Binded=true;
	};
	return _149313_f;;
}



inline jule::Ptr<_1a3de14bd_VarDecl> _1a4a5740d_buildBindVar(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _150136_tokens) {
	(_150136_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3de14bd_VarDecl> _150313_v = _1a4a4e108_buildVar(_self_, _150136_tokens);;
	if ((_150313_v != nullptr)) {
		(*_150313_v.alloc)._field_Public=false;
		(*_150313_v.alloc)._field_Binded=true;
		if (((*_150313_v.alloc)._field_Expr != nullptr)) {
			_1a4a4b27b_pushErr(_self_, (*_150313_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150313_v;;
}



inline jule::Ptr<_1a3de941b_StructDecl> _1a4a5774e_buildBindStruct(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _151439_tokens) {
	(_151439_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3de941b_StructDecl> _151613_s = _1a4a5631e_buildStructDecl(_self_, &(_151439_tokens));;
	if ((_151613_s != nullptr)) {
		(*_151613_s.alloc)._field_Public=false;
		{
			auto expr = &((*_151613_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82b8a17:;
			if (it != expr_end) {
				jule::Ptr<_1a3de8a25_FieldDecl> _151925_f = *it;
				{
					(*(_151925_f))._field_Public=true;
				}
				_iter_next_1a82b8a17:;
				++it;
				goto _iter_begin_1a82b8a17;
			}
			_iter_end_1a82b8a17:;
		};
		(*_151613_s.alloc)._field_Binded=true;
	};
	return _151613_s;;
}



inline jule::Ptr<_1a3de5170_TypeAliasDecl> _1a4a57a90_buildBindTypeAlias(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _152842_tokens) {
	(_152842_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3de5170_TypeAliasDecl> _153013_t = _1a4a4d1c3_buildTypeAliasDecl(_self_, &(_152842_tokens));;
	if ((_153013_t != nullptr)) {
		(*_153013_t.alloc)._field_Public=false;
		(*_153013_t.alloc)._field_Binded=true;
	};
	return _153013_t;;
}



inline jule::Ptr<_1a3de6759_UseDecl> _1a4a57dd1_buildBindUse(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _153836_tokens) {
	if ((_153836_tokens.len() == 1LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), _153836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153836_tokens).mut_slice(1LL);;
	;
	return _1a4a53dee_buildUseDecl(_self_, _153836_tokens, true);;
}



inline jule::Any _1a4a58222_buildBind(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _154934_tokens) {
	jule::Ptr<_1a3db8198_Token> _155013_token = (*(_154934_tokens))[0LL];;
	if (((*(_154934_tokens)).len() == 1LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), _155013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155013_token=(*(_154934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a82be7cb:;
			{
				return jule::Any(_1a4a570bc_buildBindFn(_self_, (*(_154934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a82be842:;
			{
				return jule::Any(_1a4a5740d_buildBindVar(_self_, (*(_154934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a82be468:;
			{
				return jule::Any(_1a4a5774e_buildBindStruct(_self_, (*(_154934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a82be4ce:;
			{
				return jule::Any(_1a4a57a90_buildBindTypeAlias(_self_, (*(_154934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1a82bd7db:;
			{
				_1a4a4b27b_pushErr(_self_, _155013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a82be413:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3de0313_FnDecl> _1a4a58563_getMethod(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _157334_tokens) {
	jule::I64 _157413_i = 0LL;;
	jule::Ptr<_1a3db8198_Token> _157513_token = (*(_157334_tokens))[_157413_i];;
	if (((*(_157513_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157413_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_.ptr(), _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157413_i)++;
		_157513_token=(*(_157334_tokens))[_157413_i];
	};
	if (((*_157513_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157413_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1a4a4b27b_pushErr(_self_, _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157413_i)++;
		_157513_token=(*(_157334_tokens))[_157413_i];
	};
	if (((*_157513_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a4a4b27b_pushErr(_self_, _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a4a524c4_buildFn(_self_, _157334_tokens, true, false);;
}



inline void _1a4a588c6_parseImplBody(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3dea2b8_Impl>* _160238_ipl, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _160255_tokens) {
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _160313_stmts = _1a4a2c02b_splitStmts(_160255_tokens);;
	{
		auto expr = &(_160313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82c7174:;
		if (it != expr_end) {
			jule::Ptr<_1a4a2bb74_stmt> _160421_stmt = *it;
			{
				(*(_160255_tokens))=(*(_160421_stmt))._field_tokens;
				jule::Ptr<_1a3db8198_Token> _160617_token = (*(_160255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a82c78b1:;
						{
							_1a4a4c029_pushDirective(_self_.ptr(), _1a4a4bc71_buildDirective(_self_, (*(_160255_tokens))));
							goto _iter_next_1a82c7174;
						}
					}
					_match_end_1a82c84d8:;
				};
				{
					auto &_match_expr{ (*(_160617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1a82c96c6:;
						{
							jule::Ptr<_1a3de14bd_VarDecl> _161521_v = _1a4a4e108_buildVar(_self_, (*(_160255_tokens)));;
							if ((_161521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> &__jule_push_dest = (*((*(_160238_ipl))))._field_Statics; __jule_push_dest.push(_161521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1a82c973c:;
						{
							jule::Ptr<_1a3de0313_FnDecl> _162221_f = _1a4a58563_getMethod(_self_, _160255_tokens);;
							if ((_162221_f != nullptr)) {
								_1a4a565c7_checkMethodReceiver(_self_, &(_162221_f));
								_1a4a59311_applyFnMeta(_self_, &(_162221_f));
								{ jule::Slice<jule::Ptr<_1a3de0313_FnDecl>> &__jule_push_dest = (*((*(_160238_ipl))))._field_Methods; __jule_push_dest.push(_162221_f); };
							};
						}
					}
					else {
						_case_begin_1a82c8609:;
						{
							_1a4a4b27b_pushErr(_self_, _160617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1a82c7174;
						}
					}
					_match_end_1a82c8ae3:;
				};
			}
			_iter_next_1a82c7174:;
			++it;
			goto _iter_begin_1a82c7174;
		}
		_iter_end_1a82c7174:;
	};
}



inline jule::Ptr<_1a3dea2b8_Impl> _1a4a58c17_buildImpl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _163533_tokens) {
	jule::Ptr<_1a3db8198_Token> _163613_token = _163533_tokens[0LL];;
	if ((_163533_tokens.len() < 2LL)) {
		_1a4a4b27b_pushErr(_self_.ptr(), _163613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164213_i = 1LL;;
	jule::Ptr<_1a3dcd653_TypeDecl> _164413_base;;
	jule::Bool _164423_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_163533_tokens), (&(_164213_i)), true);
		_164413_base = __jule_assign_result.__jule_result_arg0;
		_164423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164423_ok))) {
		return nullptr;;
	};
	if ((_164213_i >= _163533_tokens.len())) {
		_1a4a4b27b_pushErr(_self_, _163613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3dea2b8_Impl> _165313_ipl = jule::new_ptr<_1a3dea2b8_Impl>(_1a3dea2b8_Impl{._field_Base=_164413_base, });;
	_163613_token=_163533_tokens[_164213_i];
	if (((*(_163613_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_163613_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_165313_ipl))._field_Base, (*_165313_ipl.alloc)._field_Dest);
			goto _julec_label_1a82d62a4;
		};
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164213_i)++;
	if ((_164213_i >= _163533_tokens.len())) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType(_self_, &(_163533_tokens), (&(_164213_i)), true);
		(*_165313_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164423_ok))) {
		return nullptr;;
	};
	if ((_164213_i >= _163533_tokens.len())) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a82d62a4:;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _169113_bodyTokens = _1a4a48e7c_range(&(_164213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163533_tokens));;
	if ((_169113_bodyTokens == nullptr)) {
		_1a4a4aac7_stop(_self_);
		_1a4a4b27b_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164213_i < _163533_tokens.len())) {
		_1a4a4b27b_pushErr(_self_, _163533_tokens[_164213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_165313_ipl.alloc)._field_End=_163533_tokens[(_164213_i - 1LL)];
	_1a4a588c6_parseImplBody(_self_, &(_165313_ipl), &(_169113_bodyTokens));
	return _165313_ipl;;
}



inline jule::Any _1a4a59058_buildNodeData(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _170638_tokens) {
	jule::Ptr<_1a3db8198_Token> _170713_token = (*(_170638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a82db144:;
			{
				jule::Ptr<_1a3de0313_FnDecl> _171117_f = _1a4a524c4_buildFn(_self_, _170638_tokens, false, false);;
				if ((_171117_f != nullptr)) {
					(*_171117_f.alloc)._field_Global=true;
				};
				return jule::Any(_171117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a82db078:;
			{
				return jule::Any(_1a4a4e108_buildVar(_self_, (*(_170638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a82db73d:;
			{
				return jule::Any(_1a4a4d1c3_buildTypeAliasDecl(_self_, _170638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a82dac7b:;
			{
				return _1a4a5584b_buildNodeEnumDecl(_self_, _170638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a82dace2:;
			{
				return jule::Any(_1a4a5631e_buildStructDecl(_self_, _170638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a82dad58:;
			{
				return jule::Any(_1a4a56c7b_buildTraitDecl(_self_, _170638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a82dadbe:;
			{
				return jule::Any(_1a4a58c17_buildImpl(_self_, (*(_170638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a82dae35:;
			{
				return _1a4a58222_buildBind(_self_, _170638_tokens);;
			}
		}
		else {
			_case_begin_1a82da97e:;
			{
				_1a4a4b27b_pushErr(_self_.ptr(), _170713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a82dac26:;
	};
}



inline void _1a4a59311_applyFnMeta(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3de0313_FnDecl>* _173935_f) {
	(*((*(_173935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a4a595b9_applyMeta(_1a4a4a7ca_parser* _self_, _1a3dcc652_Node* _174433_node) {
	{
		auto &_match_expr{ (*(_174433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a82e26de:;
			{
				jule::Ptr<_1a3de14bd_VarDecl> _174717_v = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1a3de14bd_VarDecl>();;
				if ((_174717_v == nullptr)) {
					return;;
				};
				(*(_174717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a82e2447:;
			{
				jule::Ptr<_1a3de0313_FnDecl> _175417_f = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1a3de0313_FnDecl>();;
				if ((_175417_f == nullptr)) {
					return;;
				};
				_1a4a59311_applyFnMeta(_self_, &(_175417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a82e2788:;
			{
				jule::Ptr<_1a3de941b_StructDecl> _176017_sd = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1a3de941b_StructDecl>();;
				if ((_176017_sd == nullptr)) {
					return;;
				};
				(*(_176017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a82e2667:;
	};
}



inline void _1a4a59872_pushUseDecl(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3de6759_UseDecl>* _176936_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1a3de6759_UseDecl>>::make({(*(_176936_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a4a4b27b_pushErr(_self_, (*((*(_176936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a4a4b5de_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a4a59bb3_pushMetaNodes(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _177738_tokens) {
	{
		auto &_match_expr{ (*((*(_177738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a82e8a58:;
			{
				;
				jule::Ptr<_1a3de6759_UseDecl> _178117_decl = _1a4a53dee_buildUseDecl(_self_.ptr(), (*(_177738_tokens)), false);;
				_1a4a59872_pushUseDecl(_self_, &(_178117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a82e8abe:;
			{
				if ((((*(_177738_tokens)).len() > 1LL) && ((*((*(_177738_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a3de6759_UseDecl> _178621_decl = _1a4a57dd1_buildBindUse(_self_, (*(_177738_tokens)));;
					_1a4a59872_pushUseDecl(_self_, &(_178621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a82e8b35:;
			{
				_1a4a4c029_pushDirective(_self_.ptr(), _1a4a4bc71_buildDirective(_self_, (*(_177738_tokens))));
				return true;;
			}
		}
		_match_end_1a82e8959:;
	};
	return false;;
}



inline _1a3dcc652_Node _1a4a5a004_parseNode(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _179734_st) {
	_1a3dcc652_Node _179813_node = _1a3dcc652_Node{._field_Token=(*(_179734_st))[0LL], };;
	if (_1a4a59bb3_pushMetaNodes(_self_, _179734_st)) {
		return _179813_node;;
	};
	jule::Any _180613_data = _1a4a59058_buildNodeData(_self_, _179734_st);;
	if ((_180613_data == nullptr)) {
		return _179813_node;;
	};
	_179813_node._field_Data=_180613_data;
	_1a4a595b9_applyMeta(_self_, &(_179813_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a4a4b27b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179813_node;;
}



inline void _1a4a5a2ac_appendNode(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _182135_st) {
	if (((*(_182135_st)).len() == 0LL)) {
		return;;
	};
	_1a3dcc652_Node _182513_node = _1a4a5a004_parseNode(_self_, _182135_st);;
	if (((_182513_node._field_Data == nullptr) || _1a4a4ad5d_stopped(_self_))) {
		return;;
	};
	(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1a3dcc652_Node>::make({_182513_node}));
}



inline void _1a4a5a785_removeRange(_1a4a4a7ca_parser* _self_, jule::I64 _183230_i, jule::U64 _183238_id, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _183252_tokens, jule::Slice<jule::I64>* _183275_ranges) {
	jule::U64 _18339_close = _1a4a49983_getCloseOfBrace(_183238_id);;
	for (; (_183230_i >= 0LL); (_183230_i)--) {
		{
			jule::Ptr<_1a3db8198_Token> _183513_tok = (*(_183252_tokens))[(*(_183275_ranges))[_183230_i]];;
			if (((*(_183513_tok))._field_Id != _18339_close)) {
				goto _iter_next_1a8303c94;
			};
			(*(_183275_ranges))=jule::append((*(_183275_ranges)).slice(0LL, _183230_i),(*(_183275_ranges)).slice((_183230_i + 1LL)));
			goto _iter_end_1a8303c94;
		}
	_iter_next_1a8303c94:;
	}
	_iter_end_1a8303c94:;;
}



inline void _1a4a5aba3_pushWrongOrderCloseErr(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3db8198_Token>* _184442_t, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _184454_tokens, jule::Slice<jule::I64>* _184473_ranges) {
	{
		auto &_match_expr{ (*((*(_184454_tokens))[(*(_184473_ranges))[((*(_184473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1a8306082:;
			{
				_1a4a4b27b_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a83060e8:;
			{
				_1a4a4b27b_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1a830615e:;
			{
				_1a4a4b27b_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8305e83:;
	};
}



inline void _1a4a5b17b_pushRangeClose(_1a4a4a7ca_parser* _self_, jule::Ptr<_1a3db8198_Token> _185533_t, jule::U64 _185544_left, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _185560_tokens, jule::Slice<jule::I64>* _185583_ranges) {
	jule::I64 _18569_n = (*(_185583_ranges)).len();;
	if ((_18569_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1a8308c44:;
				{
					_1a4a4b27b_pushErr(_self_, _185533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1a8308caa:;
				{
					_1a4a4b27b_pushErr(_self_, _185533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1a8308d21:;
				{
					_1a4a4b27b_pushErr(_self_, _185533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a8308b89:;
		};
		return;;
	} else if (((*((*(_185560_tokens))[(*(_185583_ranges))[(_18569_n - 1LL)]]))._field_Id != _185544_left)) {
		_1a4a5aba3_pushWrongOrderCloseErr(_self_, &(_185533_t), _185560_tokens, _185583_ranges);
	};
	_1a4a5a785_removeRange(_self_, (_18569_n - 1LL), (*(_185533_t))._field_Id, _185560_tokens, _185583_ranges);
}



inline void _1a4a5b434_checkRanges(_1a4a4a7ca_parser* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _187331_tokens) {
	jule::Slice<jule::I64> _187417_ranges = nullptr;;
	{
		auto expr = _187331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a830ae88:;
		if (it != expr_end) {
			jule::I64 _187613_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> *_187616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a830cbb0:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187417_ranges; __jule_push_dest.push(_187613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a830cc37:;
						{
							_1a4a5b17b_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(74LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1a830cc9d:;
						{
							_1a4a5b17b_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(72LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a830cd14:;
						{
							_1a4a5b17b_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(76LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					_match_end_1a830cb05:;
				};
			}
			_iter_next_1a830ae88:;
			++it;
			_187613_i++;
			goto _iter_begin_1a830ae88;
		}
		_iter_end_1a830ae88:;
	};
	{
		auto expr = &(_187417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a830ee04:;
		if (it != expr_end) {
			jule::I64 _189116_i = *it;
			{
				jule::Ptr<_1a3db8198_Token> _189213_token = (*(_187331_tokens))[_189116_i];;
				{
					auto &_match_expr{ (*(_189213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a8310b5d:;
						{
							_1a4a4b27b_pushErr(_self_, _189213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a8310bc4:;
						{
							_1a4a4b27b_pushErr(_self_, _189213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a8310c3a:;
						{
							_1a4a4b27b_pushErr(_self_, _189213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a83108e9:;
				};
			}
			_iter_next_1a830ee04:;
			++it;
			goto _iter_begin_1a830ee04;
		}
		_iter_end_1a830ee04:;
	};
}



inline void _1a4a5b6dc_parse(jule::Ptr<_1a4a4a7ca_parser> _self_, jule::Ptr<_1a3dbd92e_File>* _190430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a3dcb73e_Ast>(_1a3dcb73e_Ast{._field_File=(*(_190430_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a4a39e3a_exprBuilder>(_1a4a39e3a_exprBuilder{._field_p=_self_});
	_1a4a5b434_checkRanges(_self_, &((*((*(_190430_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _191713_stmts = _1a4a2c02b_splitStmts(&((*((*(_190430_f))))._field_Tokens));;
	jule::I64 _192013_i = 0LL;;
	for (; (_192013_i < _191713_stmts.len()); (_192013_i)++) {
		{
			jule::Ptr<_1a4a2bb74_stmt> _192217_stmt = _191713_stmts[_192013_i];;
			if (((*(_192217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_192217_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1a8314524;
			};
			if ((!(_1c980da0d_IsTopDirective((*((*_192217_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1a8314524;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1a3dcca70_Directive>>::make({_1a4a4bc71_buildDirective(_self_, (*_192217_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1a8314524:;
	}
	_iter_end_1a8314524:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; (_192013_i < _191713_stmts.len()); (_192013_i)++) {
		{
			jule::Ptr<_1a4a2bb74_stmt> _193917_stmt = _191713_stmts[_192013_i];;
			_1a4a5a2ac_appendNode(_self_, &((*(_193917_stmt))._field_tokens));
			if (_1a4a4ad5d_stopped(_self_)) {
				goto _iter_end_1a8317879;
			};
		}
	_iter_next_1a8317879:;
	}
	_iter_end_1a8317879:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a4a4b27b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a4a7ca_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a4a5d04b_pushErr(_1a4a5c9a7_typeBuilder* _self_, jule::Ptr<_1a3db8198_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a4a4b27b_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a4a5d3ae_pushSuggestion(_1a4a5c9a7_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a4a4b5de_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5d645_buildNamespace(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3dcd653_TypeDecl> _5513_t = jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a3dce401_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1a3dce401_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a4a5d04b_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1a4a5d3ae_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3db8198_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1a831ce9a;
			};
			(_6013_n)++;
		}
	_iter_next_1a831ce9a:;
	}
	_iter_end_1a831ce9a:;;
	(*_5913_nst.alloc)._field_Idents=(*_5913_nst.alloc)._field_Idents.slice(0LL, ((*_5913_nst.alloc)._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1a4a5dde8_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _1a4a5d8cb_buildGenerics(_1a4a5c9a7_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3db8198_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _9313_parts = _1a4a5db62_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1a4a5d04b_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8325b0c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1a3dcd653_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1a4a5d04b_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1a8325b0c:;
			++it;
			goto _iter_begin_1a8325b0c;
		}
		_iter_end_1a8325b0c:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a4a5db62_identGenerics(_1a4a5c9a7_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1a83293a2:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1a8329704:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1a832968d:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1a8328714;
			};
		}
	_iter_next_1a8328714:;
	}
	_iter_end_1a8328714:;;
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _12813_parts;;
	jule::Slice<_1c980bca3_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a496ec_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5dde8_buildIdent(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a4a5d645_buildNamespace(_self_);;
	};
	jule::Ptr<_1a3db8198_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a3dcdc5d_IdentTypeDecl> _14113_it = jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3dcd653_TypeDecl> _14713_itd = jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1a4a5d8cb_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a4a5d04b_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a4a5d04b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1a3dce027_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1a3dce027_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1a3dcd653_TypeDecl> _16613_ident = _1a4a5dde8_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a8335259:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1a3dcdc5d_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a8332e5a:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1a3dce027_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1a832d2c9:;
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e17e_buildCppLink(_1a4a5c9a7_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a4a5d04b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a3dcd653_TypeDecl> _18513_t = _1a4a5dde8_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1a3dcdc5d_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e415_buildFn(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a3de0313_FnDecl> _19213_f = _1a4a5201d_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3de0676_IsAnon(_19213_f.ptr())))) {
		_1a4a5d04b_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e69b_buildPtr(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dd017c_PtrTypeDecl>(_1a3dd017c_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1a3dcd653_TypeDecl> _22313_elem = _1a4a60702_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dd017c_PtrTypeDecl>(_1a3dd017c_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5e932_buildSptr(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3dcd653_TypeDecl> _24413_elem = _1a4a60702_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dce6ed_SptrTypeDecl>(_1a3dce6ed_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5ebb8_buildSlc(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3dcd653_TypeDecl> _26013_elem = _1a4a60702_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3dcea83_SlcTypeDecl>(_1a3dcea83_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5ee4e_buildArr(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _27313_exprTokens = _1a4a48e7c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a3dcd653_TypeDecl> _27913_elem = _1a4a60702_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3dd091e_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1a3dd091e_ArrTypeDecl>(_1a3dd091e_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1a3db8198_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1a4a4b930_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a601d5_buildMap(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _31013_keyTokens = _1a4a48e7c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1a4a5d04b_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a3dd116c_MapTypeDecl> _31913_mapt = jule::new_ptr<_1a3dd116c_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1a3dcd653_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1a4a5d04b_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1a3dcd653_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4a4cd82_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a6046b_buildEnumerable(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a4a5d04b_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a4a5ebb8_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a4a5ee4e_buildArr(_self_);;
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a60702_step(_1a4a5c9a7_typeBuilder* _self_) {
	jule::Ptr<_1a3db8198_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a835571e:;
			{
				return _1a4a5dde8_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a83552ac:;
			{
				return _1a4a5e17e_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a8355840:;
			{
				return _1a4a5e415_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a8354e8d:;
			{
				return _1a4a5e69b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a8355004:;
			{
				return _1a4a5e932_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a835506a:;
			{
				return jule::new_ptr<_1a3dcd653_TypeDecl>(_1a3dcd653_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a3dce6ed_SptrTypeDecl>(_1a3dce6ed_SptrTypeDecl{._field_Elem=_1a4a5e932_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1a83550d1:;
			{
				return _1a4a6046b_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a8355147:;
			{
				return _1a4a601d5_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1a8354b91:;
			{
				((*((*(_self_))._field_i)))++;
				_1a4a5d04b_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a8354c29:;
	};
}



inline __jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool _1a4a60988_build(_1a4a5c9a7_typeBuilder* _self_) {
	__jule_tuple_x_1a3dcd653_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3dcd653_TypeDecl> _38813_root = _1a4a60702_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a4a5c1e3_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a5c9a7_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4277117_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a4278b41_pushErr(_1a42785e1_directiveEval* _self_, jule::Ptr<_1a3db8198_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_1c980c215_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _1a427903c_splitOperans(_1a42785e1_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1a3db8198_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a74c1eb8:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1a74c14b2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a74c231a:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1a74c22a4:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1a74c14b2;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1a74c14b2:;
	}
	_iter_end_1a74c14b2:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1a4278b41_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1a427937d_evalDirectiveIdent(_1a42785e1_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74c4d78:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1a74c4d78:;
			++it;
			goto _iter_begin_1a74c4d78;
		}
		_iter_end_1a74c4d78:;
	};
	return false;;
}



inline jule::Bool _1a42796be_evalDirectivePart(_1a42785e1_directiveEval* _self_, jule::Slice<jule::Ptr<_1a3db8198_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1a4278b41_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1a427937d_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1a4279955_eval(_1a42785e1_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a4278b41_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _10413_logicalOrParts = _1a427903c_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74ca598:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> _11117_logicalAndParts = _1a427903c_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a74cbce7:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a3db8198_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1a3db8198_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a3db8198_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a4278b41_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1a42796be_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1a74cbce7:;
						++it;
						goto _iter_begin_1a74cbce7;
					}
					_iter_end_1a74cbce7:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1a74ca598:;
			++it;
			goto _iter_begin_1a74ca598;
		}
		_iter_end_1a74ca598:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a42785e1_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4a61add_JuleImporter> static__1a4a61ed9_New(_1a4277117_CompileInfo _5819_info) {
	jule::Ptr<_1a4a61add_JuleImporter> _5913_imp = jule::new_ptr<_1a4a61add_JuleImporter>(_1a4a61add_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1c908aa82_PathStdlib}), });;
	_1a4277997_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _1a4a62270_AllPackages(_1a4a61add_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a4a626b0_SetModPath(_1a4a61add_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a4a62946_GetModPath(_1a4a61add_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a4a62c87_ModById(_1a4a61add_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a4a630c8_GetImport(_1a4a61add_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74d346e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1a74d346e:;
			++it;
			goto _iter_begin_1a74d346e;
		}
		_iter_end_1a74d346e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log _1a4a634c4_ImportPackage(_1a4a61add_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20c078c3a_DirEntry>> _9713_dirents = ({
		auto except = static__1c9765305_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1c980bca3_Log>::make({_1a4a61604_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1a3e94384_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1c980bca3_Log> _10521_errs = _1a3e9464d_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1a3dcb73e_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74d4abe:;
		if (it != expr_end) {
			jule::Ptr<_20c078c3a_DirEntry> _11316_dirent = *it;
			{
				if ((_20c07d0c4_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1c974137a_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1a74d4abe;
				};
				jule::Str _11913__path = _1c97621c0_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1a3dbd92e_File> _12017_file = _1a3dbed09_NewFileSet(_11913__path);;
				_1a3dbdd4c_Fill(_12017_file.ptr(), _1a4a612e6_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_1c980bca3_Log> _12217_errors = _1a3dcb2dd_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a49d5e19_FileInfo> _12717_finfo = _1a4a298b9_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a425ba69_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1a74d4abe;
				};
				jule::Bool _13713_r;;
				jule::Slice<_1c980bca3_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a63bab_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1a74d4abe;
				};
				{ jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1a74d4abe:;
			++it;
			goto _iter_begin_1a74d4abe;
		}
		_iter_end_1a74d4abe:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a4a6377c_Imported(_1a4a61add_JuleImporter* _self_, jule::Ptr<_1a3e77a60_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74d761b:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1a74d761b:;
			++it;
			goto _iter_begin_1a74d761b;
		}
		_iter_end_1a74d761b:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a74e002a:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1a74e069b;
					};
				}
				_iter_next_1a74e002a:;
				++it;
				_16217_i++;
				goto _iter_begin_1a74e002a;
			}
			_iter_end_1a74e002a:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1a74e069b:;
	};
	{ jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1c980bca3_Log _1a4a63bab_isPassBuildDirectives(_1a4a61add_JuleImporter* _self_, jule::Ptr<_1a3dcb73e_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1c980bca3_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74e30a5:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1a74e30a5;
				};
				_1a42785e1_directiveEval _18417_de = _1a42785e1_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1a4279955_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1a74e30a5:;
			++it;
			goto _iter_begin_1a74e30a5;
		}
		_iter_end_1a74e30a5:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a61add_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a66d02_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7514a66_isCommonOrdered(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _1834_s, jule::Ptr<_1a3dee4dc_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7515ccb:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a751653a:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a751653a:;
						++it;
						goto _iter_begin_1a751653a;
					}
					_iter_end_1a751653a:;
				};
			}
			_iter_next_1a7515ccb:;
			++it;
			goto _iter_begin_1a7515ccb;
		}
		_iter_end_1a7515ccb:;
	};
	return true;;
}

inline jule::Bool _1a751995b_isCommonOrdered(jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _1834_s, jule::Ptr<_1a3ebac4b_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a751ab7c:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a751b3db:;
					if (it != expr_end) {
						jule::Ptr<_1a3ebac4b_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a751b3db:;
						++it;
						goto _iter_begin_1a751b3db;
					}
					_iter_end_1a751b3db:;
				};
			}
			_iter_next_1a751ab7c:;
			++it;
			goto _iter_begin_1a751ab7c;
		}
		_iter_end_1a751ab7c:;
	};
	return true;;
}



inline void _1a75111c2_orderCommon(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7512646:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1a7514a66_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1a75131d5:;
				}
				_iter_end_1a75131d5:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1a7512646;
				};
				(_3213_n)--;
			}
			_iter_next_1a7512646:;
			++it;
			goto _iter_begin_1a7512646;
		}
		_iter_end_1a7512646:;
	};
}

inline void _1a7516c55_orderCommon(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a751753b:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1a751995b_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1a75180ca:;
				}
				_iter_end_1a75180ca:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1a751753b;
				};
				(_3213_n)--;
			}
			_iter_next_1a751753b:;
			++it;
			goto _iter_begin_1a751753b;
		}
		_iter_end_1a751753b:;
	};
}



inline void static__1a4a6795c_orderStructures(jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>* _5136_structs) {
	_1a75111c2_orderCommon(_5136_structs);
}



inline void static__1a4a67b8d_orderVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _5730_vars) {
	_1a7516c55_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a67088_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a39bd7e8_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a39c39da_optimizeChild(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e5627a_Scope>* _3938_s) {
	jule::Ptr<_1a39c3501_scopeDeadCode> _4013_sdc = jule::new_ptr<_1a39c3501_scopeDeadCode>(_1a39c3501_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a39c6405_optimizeStmts(_4013_sdc);
	};
}



inline void _1a39c3c93_optimizeBodyChildExceptional(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e5627a_Scope>* _5053_s) {
	jule::Ptr<_1a39c3501_scopeDeadCode> _5113_sdc = jule::new_ptr<_1a39c3501_scopeDeadCode>(_1a39c3501_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a39c6405_optimizeStmts(_5113_sdc);
	};
}



inline void _1a39c404b_optimizeBodyChild(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e5627a_Scope>* _6142_s) {
	jule::Ptr<_1a39c3501_scopeDeadCode> _6213_sdc = jule::new_ptr<_1a39c3501_scopeDeadCode>(_1a39c3501_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a39c6405_optimizeStmts(_6213_sdc);
	};
}



inline void _1a39c4304_optimizeExprModel(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a39c778b_exprDeadCode _729_edc = static__1a39c7dc9_new(&(_self_));;
	_1a39cdd03_optimize(&_729_edc, _7142_model);
}



inline void _1a39c4502_eliminateFollowed(_1a39c3501_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1a39c3501_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*_8313_parent.alloc)._field_stmts))=(*((*_8313_parent.alloc)._field_stmts)).slice(0LL, ((*_8313_parent.alloc)._field_i + 1LL));
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1a83a4b9c:;
	}
	_iter_end_1a83a4b9c:;;
}



inline void _1a39c47aa_pushGoto(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e58ee7_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a83a78d6:;
	}
	_iter_end_1a83a78d6:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a3e58ee7_GotoSt>>::make({_9232_gt}));
}



inline void _1a39c4a63_pushLabel(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e58b1d_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*(*_self_.alloc)._field_gotos.alloc)=(*(*_self_.alloc)._field_gotos.alloc).slice(0LL, ((*(*_self_.alloc)._field_gotos.alloc).len() - 1LL));
				goto _iter_next_1a83a9ab4;
			};
			(_10313_i)++;
		}
	_iter_next_1a83a9ab4:;
	}
	_iter_end_1a83a9ab4:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a3e58b1d_Label>>::make({_10233_l}));
}



inline void _1a39c4d1b_optimizeRangeIter(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e580b2_RangeIter> _11541_it) {
	_1a39c4304_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1a39c404b_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1a39c50c4_optimizeWhileIter(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e57666_WhileIter> _12041_it) {
	_1a39c4304_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1a39c6207_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1a39c404b_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1a39c537c_optimizeInfIter(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e571b0_InfIter> _12839_it) {
	_1a39c404b_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1a39c5635_optimizeConditional(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e56db3_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83b1a88:;
		if (it != expr_end) {
			jule::Ptr<_1a3e56698_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a39c4304_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1a39c404b_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1a83b1a88:;
			++it;
			goto _iter_begin_1a83b1a88;
		}
		_iter_end_1a83b1a88:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a39c39da_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a39c404b_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a39c58dd_optimizeMatch(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e5a3b1_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83b50b9:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5add9_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a83b5a26:;
					if (it != expr_end) {
						jule::Ptr<_1a4028e63_Data> _15225_expr = *it;
						{
							_1a39c4304_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1a83b5a26:;
						++it;
						goto _iter_begin_1a83b5a26;
					}
					_iter_end_1a83b5a26:;
				};
				_1a39c404b_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1a83b50b9:;
			++it;
			goto _iter_begin_1a83b50b9;
		}
		_iter_end_1a83b50b9:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1a39c39da_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a39c404b_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a39c5b96_optimizeAssign(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e59877_Assign> _16838_assign) {
	_1a39c4304_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1a39c4304_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_R))._field_Model));
}



inline void _1a39c5e4e_optimizeMultiAssign(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Ptr<_1a3e59c51_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83b9db0:;
		if (it != expr_end) {
			jule::Ptr<_1a4028e63_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a39c4304_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1a83b9db0:;
			++it;
			goto _iter_begin_1a83b9db0;
		}
		_iter_end_1a83b9db0:;
	};
	_1a39c4304_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_R));
}



inline void _1a39c6207_optimizeStmt(jule::Ptr<_1a39c3501_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a83bba2c:;
			{
				jule::Ptr<_1a3e5627a_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1a3e5627a_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1a39c6735_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1a39c39da_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a83bb796:;
			{
				_1a39c4d1b_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1a3e580b2_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a83bbaa4:;
			{
				_1a39c50c4_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1a3e57666_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a83bbb1a:;
			{
				_1a39c537c_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1a3e571b0_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a83bbb92:;
			{
				_1a39c5635_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1a3e56db3_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a83bbc19:;
			{
				_1a39c58dd_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1a3e5a3b1_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a83bbc91:;
			{
				_1a39c5b96_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1a3e59877_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a83bbd18:;
			{
				_1a39c5e4e_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1a3e59c51_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a83bbd90:;
			{
				jule::Ptr<_1a4028e63_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1a4028e63_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1a83bb8d9;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1a83c2a22:;
						{
							_1a39c4502_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1a83c3182:;
						{
							_1a39c4304_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1a83c312c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a83bbe17:;
			{
				_1a39c4502_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a83bbe8e:;
			{
				_1a39c47aa_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1a3e58ee7_GotoSt>());
				_1a39c4502_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a83bc016:;
			{
				_1a39c4a63_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1a3e58b1d_Label>());
			}
		}
		_match_end_1a83bb8d9:;
	};
}



inline void _1a39c6405_optimizeStmts(jule::Ptr<_1a39c3501_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a39c6207_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a83c5ae1:;
	}
	_iter_end_1a83c5ae1:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a39c3501_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a39c778b_exprDeadCode static__1a39c7dc9_new(jule::Ptr<_1a39c3501_scopeDeadCode>* _4824_s) {
	return _1a39c778b_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1a39c8182_binary(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel> _5425_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1a39cdd03_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1a39c843a_unary(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e06a44_UnaryExprModel> _5924_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1a39c86e3_structureLit(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e07418_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83c9474:;
		if (it != expr_end) {
			jule::Ptr<_1a3e07072_StructArgExprModel> _6421_arg = *it;
			{
				_1a39cdd03_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1a83c9474:;
			++it;
			goto _iter_begin_1a83c9474;
		}
		_iter_end_1a83c9474:;
	};
}



inline void _1a39c899b_allocStructure(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e07715_AllocStructLitExprModel> _6933_m) {
	_1a39c86e3_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1a39c8c54_casting(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e07c98_CastingExprModel> _7326_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1a39c900c_args(_1a39c778b_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83cba70:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1a39cdd03_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1a83cba70:;
			++it;
			goto _iter_begin_1a83cba70;
		}
		_iter_end_1a83cba70:;
	};
}



inline void _1a39c92b5_funcCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0864a_FnCallExprModel> _8327_m) {
	_1a39cdd03_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1a39c900c_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1a39c3c93_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1a39c956d_slice(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e08a24_SliceExprModel> _9124_m) {
	_1a39c900c_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1a39c9826_array(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0b95b_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1a39cdd03_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1a39c900c_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1a39c9ace_indexing(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e08eca_IndexingExprModel> _10227_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1a39cdd03_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1a39c9d87_anonFunc(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e093a4_AnonFnExprModel> _10727_m) {
	_1a39c6735_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1a39ca140_mapExpr(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e09c34_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d2856:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0977d_KeyValPairExprModel> _11221_pair = *it;
			{
				_1a39cdd03_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1a39cdd03_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1a83d2856:;
			++it;
			goto _iter_begin_1a83d2856;
		}
		_iter_end_1a83d2856:;
	};
}



inline void _1a39ca3e8_slicing(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0a2b7_SlicingExprModel> _11826_m) {
	_1a39cdd03_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1a39cdd03_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1a39cdd03_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1a39ca6a1_traitSub(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel> _12627_m) {
	_1a39cdd03_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1a39ca959_structureSub(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _13031_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1a39cac12_tuple(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0bc58_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d7196:;
		if (it != expr_end) {
			jule::Ptr<_1a4028e63_Data> _13521_d = *it;
			{
				_1a39cdd03_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1a83d7196:;
			++it;
			goto _iter_begin_1a83d7196;
		}
		_iter_end_1a83d7196:;
	};
}



inline void _1a39caeba_newCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1a39cdd03_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1a39cb273_outCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel> _14626_m) {
	_1a39cdd03_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1a39cb52b_outlnCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel> _15028_m) {
	_1a39cdd03_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1a39cb7d4_panicCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel> _15428_m) {
	_1a39cdd03_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1a39cba8c_assertCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel> _15829_m) {
	_1a39cdd03_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1a39cbd45_errorCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> _16228_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1a39cc0ed_makeCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1a39cdd03_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1a39cdd03_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1a39cc3a6_appendCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel> _17529_m) {
	_1a39cdd03_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1a39cdd03_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1a39cc65e_lenCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> _18026_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1a39cc917_capCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel> _18426_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1a39ccbc0_deleteCall(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel> _18829_m) {
	_1a39cdd03_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1a39cdd03_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1a39cce78_sizeof(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e10520_SizeofExprModel> _19525_m) {
	_1a39cdd03_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1a39cd231_alignof(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e1070c_AlignofExprModel> _19926_m) {
	_1a39cdd03_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1a39cd4d9_integratedToStr(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel> _20334_m) {
	_1a39cdd03_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1a39cd792_free(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e11477_FreeExprModel> _20723_m) {
	_1a39cdd03_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1a39cda4a_backendEmit(_1a39c778b_exprDeadCode* _self_, jule::Ptr<_1a3e1117a_BackendEmitExprModel> _21130_m) {
	_1a39c900c_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1a39cdd03_optimize(_1a39c778b_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a83e547e:;
			{
				_1a39c8182_binary(_self_, (*(_21528_model)).cast_ptr<_1a3e0666a_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a83e5094:;
			{
				_1a39c843a_unary(_self_, (*(_21528_model)).cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a83e5506:;
			{
				_1a39c86e3_structureLit(_self_, (*(_21528_model)).cast_ptr<_1a3e07418_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a83e556c:;
			{
				_1a39c899b_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1a3e07715_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a83e55e4:;
			{
				_1a39c8c54_casting(_self_, (*(_21528_model)).cast_ptr<_1a3e07c98_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a83e566b:;
			{
				_1a39c92b5_funcCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0864a_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a83e56e3:;
			{
				_1a39c956d_slice(_self_, (*(_21528_model)).cast_ptr<_1a3e08a24_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a83e576a:;
			{
				_1a39c9826_array(_self_, (*(_21528_model)).cast_ptr<_1a3e0b95b_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a83e57e2:;
			{
				_1a39c9ace_indexing(_self_, (*(_21528_model)).cast_ptr<_1a3e08eca_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a83e5869:;
			{
				_1a39c9d87_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1a3e093a4_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a83e58e1:;
			{
				_1a39ca140_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1a3e09c34_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a83e5968:;
			{
				_1a39ca3e8_slicing(_self_, (*(_21528_model)).cast_ptr<_1a3e0a2b7_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a83e59e0:;
			{
				_1a39ca6a1_traitSub(_self_, (*(_21528_model)).cast_ptr<_1a3e0a84a_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a83e5a67:;
			{
				_1a39ca959_structureSub(_self_, (*(_21528_model)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a83e5ade:;
			{
				_1a39cac12_tuple(_self_, (*(_21528_model)).cast_ptr<_1a3e0bc58_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a83e5b66:;
			{
				_1a39cb273_outCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0c132_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a83e5bdd:;
			{
				_1a39cb52b_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a83e5c65:;
			{
				_1a39caeba_newCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0c8d5_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a83e5cdc:;
			{
				_1a39cb7d4_panicCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0ccae_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a83e5d64:;
			{
				_1a39cba8c_assertCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0d265_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a83e5ddb:;
			{
				_1a39cbd45_errorCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a83e5e63:;
			{
				_1a39cc0ed_makeCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0d71b_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a83e5eda:;
			{
				_1a39cc3a6_appendCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a83e6062:;
			{
				_1a39cc65e_lenCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0dde2_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a83e60d9:;
			{
				_1a39cc917_capCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0e1de_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a83e6161:;
			{
				_1a39ccbc0_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a83e61d8:;
			{
				_1a39cce78_sizeof(_self_, (*(_21528_model)).cast_ptr<_1a3e10520_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a83e6260:;
			{
				_1a39cd231_alignof(_self_, (*(_21528_model)).cast_ptr<_1a3e1070c_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a83e62d7:;
			{
				_1a39cd4d9_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1a3e10ca1_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a83e635e:;
			{
				_1a39cd792_free(_self_, (*(_21528_model)).cast_ptr<_1a3e11477_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a83e63d6:;
			{
				_1a39cda4a_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1a3e1117a_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1a83e51d7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a39c778b_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4160d58_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a41611dd_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a41615b7_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a416193b_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4161dae_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4162442_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a416273e_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4162ac4_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4162e9d_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4163377_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4163751_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4163a4d_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4163d4a_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4164a2c_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1a41652d0_pushVar(_1a4164d6d_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1a4182792_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a845d409:;
		if (it != expr_end) {
			_1a4164a2c_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1a845d409:;
			++it;
			goto _iter_begin_1a845d409;
		}
		_iter_end_1a845d409:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a845e2c8:;
		if (it != expr_end) {
			_1a4164a2c_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1a845e2c8:;
			++it;
			goto _iter_begin_1a845e2c8;
		}
		_iter_end_1a845e2c8:;
	};
	{ jule::Slice<_1a4164a2c_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a4164a2c_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1a4165621_removeVar(_1a4164d6d_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8461231:;
			if (it != expr_end) {
				_1a4164a2c_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1a8461231:;
				++it;
				goto _iter_begin_1a8461231;
			}
			_iter_end_1a8461231:;
		};
	};
	return false;;
}



inline jule::Bool _1a4165962_isSafe(_1a4164d6d_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8462892:;
			if (it != expr_end) {
				_1a4164a2c_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1a8462892:;
				++it;
				goto _iter_begin_1a8462892;
			}
			_iter_end_1a8462892:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4164d6d_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4167aeb_scopeOptimizer> static__1a416816d_new(jule::Ptr<_1a3e5627a_Scope> _5023_scope) {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _5113_sc = jule::new_ptr<_1a4167aeb_scopeOptimizer>(_1a4167aeb_scopeOptimizer{._field_scope=_5023_scope, ._field_data=jule::new_ptr<_1a417c5a0_data>(_1a417c5a0_data{._field_boundary=jule::new_ptr<_1a417de97_boundary>(), ._field_nils=jule::new_ptr<_1a4164d6d_nils>(), ._field_dynamic=jule::new_ptr<_1a4179657_dynamic>()})});;
	return _5113_sc;;
}



inline void _1a4168426_setCurrentStmt(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Any _6238_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6238_stmt))))));
}



inline void _1a4168624_removeCurrent(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a41688aa_isLastStmt(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_) {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _7213_r = _self_;;
	for (; (_7213_r != nullptr); _7213_r=(*_7213_r.alloc)._field_parent) {
		{
			if ((((*((*_7213_r.alloc)._field_scope))._field_Stmts.len() - (*_7213_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1a8472198:;
	}
	_iter_end_1a8472198:;;
	return true;;
}



inline jule::Bool _1a4168b41_isIter(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_) {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _8213_r = (*(_self_))._field_parent;;
	for (; (_8213_r != nullptr); _8213_r=(*_8213_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8213_r))._field_scope))._field_Stmts[(*(_8213_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type36) {
					_case_begin_1a84748e8:;
					{
						return true;;
					}
				}
				_match_end_1a8474860:;
			};
		}
	_iter_next_1a847393b:;
	}
	_iter_end_1a847393b:;;
	return false;;
}



inline void _1a4168de9_optimizeData(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a4028e63_Data> _9436_d) {
	{
		auto &_match_expr{ (*(_9436_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8475aa3:;
			{
				jule::Ptr<_1a3e0864a_FnCallExprModel> _9717_m = (*(_9436_d))._field_Model.unsafe_cast_ptr<_1a3e0864a_FnCallExprModel>();;
				if (_20ad69059_Production) {
					if (((!(_1a3e1876a_IsBuiltin((*(_9717_m))._field_Func.ptr()))) && _1a416c75a_isStdPackage(&((*((*((*((*(*_9717_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1a4168426_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a4170384_optimizeData(&((*(_9436_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a4183c16_Exceptional && (*(*(*_9717_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9717_m.alloc)._field_Except != nullptr)) && ((*(*_9717_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a416d98c_isForwarded(&((*_9717_m.alloc)._field_Except))) && _1a41688aa_isLastStmt(_self_)) && (!(_1a4168b41_isIter(_self_))))) {
					_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4160d58_ExceptionalForwardingExprModel>(_1a4160d58_ExceptionalForwardingExprModel{._field_Expr=_9717_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1a8475a3c:;
	};
	static__1a4170384_optimizeData(&((*_9436_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a41691a2_optimizeVar(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3ebac4b_Var> _12035_v) {
	if (((*(_12035_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a41664ce_isNilValidType((*((*_12035_v.alloc)._field_Kind))._field_Kind)) && _1a4166215_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12035_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a41652d0_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a4166820_getNilVar(jule::Any(_12035_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a4059e2d_TypeKind> _12921_kind = _1a417ae2d_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_12921_kind != nullptr)) {
				if (_1a417a9ee_isDynamicValidType((*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1a4179ab9_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a417b26e_getDynamicVar(jule::Any(_12035_v, &__jule_any_type8)), _12921_kind);
				};
			};
		};
		static__1a4170384_optimizeData(&((*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a416945a_optimizeConditional(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e56db3_Conditional> _14143_c) {
	_1a417c0a5_dataCheckpoint _14213_checkpoint = _1a417c924_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a848409a:;
		if (it != expr_end) {
			jule::Ptr<_1a3e56698_If> _14321_elif = *it;
			{
				static__1a4170384_optimizeData(&((*(_14321_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a416c0d9_optimizeChild(_self_, (*_14321_elif.alloc)._field_Scope);
				if ((((*(_14143_c))._field_Elifs.len() > 1LL) || ((*_14143_c.alloc)._field_Default != nullptr))) {
					_1a417cbcc_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
				};
			}
			_iter_next_1a848409a:;
			++it;
			goto _iter_begin_1a848409a;
		}
		_iter_end_1a848409a:;
	};
	if (((*_14143_c.alloc)._field_Default != nullptr)) {
		_1a416c0d9_optimizeChild(_self_, (*(*_14143_c.alloc)._field_Default.alloc)._field_Scope);
		_1a417cbcc_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
	};
	if ((!(_1a41831bb_Cond))) {
		return;;
	};
	jule::Bool _15913_constCase = false;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8487bd6:;
		if (it != expr_end) {
			jule::I64 _16214_i = it - expr->begin();
			jule::Ptr<_1a3e56698_If> _16221_elif = *it;
			{
				if ((!(_1a416ca68_isConstantValidConditionalCase(&(_16221_elif))))) {
					goto _iter_next_1a8487bd6;
				};
				_15913_constCase=true;
				(*_14143_c.alloc)._field_Elifs=(*_14143_c.alloc)._field_Elifs.slice(0LL, _16214_i);
				(*_14143_c.alloc)._field_Default=jule::new_ptr<_1a3e56995_Else>(_1a3e56995_Else{._field_Scope=(*(_16221_elif))._field_Scope});
				goto _iter_end_1a8487bd6;
			}
			_iter_next_1a8487bd6:;
			++it;
			_16214_i++;
			goto _iter_begin_1a8487bd6;
		}
		_iter_end_1a8487bd6:;
	};
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3e56698_If>* _17913_i = (&((*_14143_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1a3e56698_If>* _1809_end = (&((*_14143_c.alloc)._field_Elifs[((*_14143_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_17913_i <= _1809_end); (_17913_i)++) {
		{
			{
				if (_1a416d409_isUnreachableConditionalCase(&((*(_17913_i))))) {
					(*(_17913_i))=nullptr;
				};
			};
		}
	_iter_next_1a848a876:;
	}
	_iter_end_1a848a876:;;
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_15913_constCase))) {
		return;;
	};
	jule::I64 _19813_only = -1LL;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a848cb97:;
		if (it != expr_end) {
			jule::I64 _19913_j = it - expr->begin();
			jule::Ptr<_1a3e56698_If> _19916_elif = *it;
			{
				if ((_19916_elif != nullptr)) {
					if ((_19813_only != -1LL)) {
						return;;
					};
					_19813_only=_19913_j;
				};
			}
			_iter_next_1a848cb97:;
			++it;
			_19913_j++;
			goto _iter_begin_1a848cb97;
		}
		_iter_end_1a848cb97:;
	};
	if ((_19813_only != -1LL)) {
		_1a4168426_setCurrentStmt(_self_, jule::Any((*((*_14143_c.alloc)._field_Elifs[_19813_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1a4169878_buildDefaultConstantTrueCase(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e5add9_Case> _21552_case, jule::I64* _21570_i, jule::Ptr<_1a3e5a3b1_Match>* _21583_m) {
	(*(_21552_case))._field_Exprs=nullptr;
	jule::I64 _2179_start = (*(_21570_i));;
	_julec_label_1a8490172:;
	for (;;) {
		{
			if (((*((*_21552_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a84901d8;
			};
			jule::Any *_22318_stmt = &((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22318_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1a8492839:;
					{
						((*(_21570_i)))++;
						if (((*(_21570_i)) >= (*((*(_21583_m))))._field_Cases.len())) {
							(*(_22318_stmt))=jule::Any((*((*((*(_21583_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1a84901d8;
						};
						_21552_case=(*((*(_21583_m))))._field_Cases[(*(_21570_i))];
						(*(_22318_stmt))=jule::Any((*_21552_case.alloc)._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1a84929b0:;
					{
						goto _iter_end_1a84901d8;
					}
				}
				_match_end_1a849295a:;
			};
		}
	_iter_next_1a84901d8:;
	}
	_iter_end_1a84901d8:;;
	(*((*(_21583_m))))._field_Default=(*((*(_21583_m))))._field_Cases[_2179_start];
	(*((*(_21583_m))))._field_Cases=(*((*(_21583_m))))._field_Cases.slice(0LL, _2179_start);
}



inline void _1a4169b31_optimizeMatch(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e5a3b1_Match> _24137_m) {
	jule::Uintptr _24213_var = 0LLU;;
	if ((_1a4184277_Dynamic && (*(_24137_m))._field_TypeMatch)) {
		_24213_var=_1a417b26e_getDynamicVar((*((*_24137_m.alloc)._field_Expr))._field_Model);
	};
	_1a417c0a5_dataCheckpoint _24613_checkpoint = _1a417c924_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8496ed1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5add9_Case> _24721_case = *it;
			{
				{
					auto expr = &((*(_24721_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a84978a5:;
					if (it != expr_end) {
						jule::Ptr<_1a4028e63_Data> _24825_expr = *it;
						{
							static__1a4170384_optimizeData(&((*(_24825_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1a84978a5:;
						++it;
						goto _iter_begin_1a84978a5;
					}
					_iter_end_1a84978a5:;
				};
				if ((((*_24721_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a4059e2d_TypeKind> _25321_kind = _1a417ae2d_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24721_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25321_kind != nullptr)) {
						_1a4179ab9_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var, _25321_kind);
					} else {
						_1a4179e0a_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var);
					};
				};
				_1a416c0d9_optimizeChild(_self_, (*_24721_case.alloc)._field_Scope);
				if ((((*_24137_m.alloc)._field_Cases.len() > 1LL) || ((*_24137_m.alloc)._field_Default != nullptr))) {
					_1a417cbcc_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
				};
			}
			_iter_next_1a8496ed1:;
			++it;
			goto _iter_begin_1a8496ed1;
		}
		_iter_end_1a8496ed1:;
	};
	if (((*_24137_m.alloc)._field_Default != nullptr)) {
		_1a416c0d9_optimizeChild(_self_, (*(*_24137_m.alloc)._field_Default.alloc)._field_Scope);
		_1a417cbcc_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
	};
	if ((!(_1a41831bb_Cond))) {
		return;;
	};
	jule::Bool _27413_constCase = false;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a849e307:;
		if (it != expr_end) {
			jule::I64 _27718_i = it - expr->begin();
			jule::Ptr<_1a3e5add9_Case> _27725_case = *it;
			{
				if ((!(_1a416d173_isConstantValidMatchCase(&(_27725_case))))) {
					goto _iter_next_1a849e307;
				};
				_27413_constCase=true;
				_1a4169878_buildDefaultConstantTrueCase(_self_, _27725_case, &(_27718_i), &(_24137_m));
				goto _iter_end_1a849e307;
			}
			_iter_next_1a849e307:;
			++it;
			_27718_i++;
			goto _iter_begin_1a849e307;
		}
		_iter_end_1a849e307:;
	};
	if (((*_24137_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3e5add9_Case>* _29113_i = (&((*_24137_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1a3e5add9_Case>* _2929_end = (&((*_24137_m.alloc)._field_Cases[((*_24137_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29113_i <= _2929_end); (_29113_i)++) {
		{
			{
				if (_1a416d6c3_isUnreachableMatchCase(&((*(_29113_i))))) {
					(*(_29113_i))=nullptr;
				};
			};
		}
	_iter_next_1a84a14b3:;
	}
	_iter_end_1a84a14b3:;;
	if ((!(_27413_constCase))) {
		return;;
	};
	jule::I64 _30613_only = -1LL;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84a3185:;
		if (it != expr_end) {
			jule::I64 _30713_j = it - expr->begin();
			jule::Ptr<_1a3e5add9_Case> _30716_case = *it;
			{
				if ((_30716_case != nullptr)) {
					if ((_30613_only != -1LL)) {
						return;;
					};
					_30613_only=_30713_j;
				};
			}
			_iter_next_1a84a3185:;
			++it;
			_30713_j++;
			goto _iter_begin_1a84a3185;
		}
		_iter_end_1a84a3185:;
	};
	if ((_30613_only != -1LL)) {
		_1a4168426_setCurrentStmt(_self_, jule::Any((*((*_24137_m.alloc)._field_Cases[_30613_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1a4169dd9_optimizeRangeIter(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e580b2_RangeIter> _32341_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32341_it))._field_KeyA != nullptr))) {
		_1a417e409_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1a41813c8_getBoundaryVar((*((*_32341_it.alloc)._field_Expr))._field_Model), jule::Any((*_32341_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a416c0d9_optimizeChild(_self_, (*_32341_it.alloc)._field_Scope);
	if (_1a4183ebe_Iter) {
		{
			auto &_match_expr{ (*((*(_32341_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type92) {
				_case_begin_1a84a7cd3:;
				{
					jule::Ptr<_1a3e07c98_CastingExprModel> _33521_cem = (*((*(_32341_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3e07c98_CastingExprModel>();;
					jule::Ptr<_1a4062a07_Prim> _33617_eprim = _1a405c57e_Prim((*(_33521_cem))._field_ExprKind.ptr());;
					if (((_33617_eprim == nullptr) || (!(_1a4065e8e_IsStr(_33617_eprim.ptr()))))) {
						goto _match_end_1a84a7c6c;
					};
					jule::Ptr<_1a4067006_Slc> _34021_s = _1a405d5d5_Slc((*_33521_cem.alloc)._field_Kind.ptr());;
					if ((_34021_s == nullptr)) {
						goto _match_end_1a84a7c6c;
					};
					jule::Ptr<_1a4062a07_Prim> _34417_prim = _1a405c57e_Prim((*(_34021_s))._field_Elem.ptr());;
					if ((_34417_prim == nullptr)) {
						goto _match_end_1a84a7c6c;
					};
					{
						
						if (_1a40643ee_IsU8(_34417_prim.ptr())) {
							_case_begin_1a84ab699:;
							{
								(*_32341_it.alloc)._field_Expr=(*_33521_cem.alloc)._field_Expr;
							}
						}
						else if (_1a4063dd2_IsI32(_34417_prim.ptr())) {
							_case_begin_1a84ab7ed:;
							{
								static__1a4170384_optimizeData(&((*((*_33521_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4163751_StrRuneIter>(_1a4163751_StrRuneIter{._field_Expr=(*_33521_cem.alloc)._field_Expr, ._field_Base=_32341_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1a84a96ec:;
					};
				}
			}
			_match_end_1a84a7c6c:;
		};
	};
	static__1a4170384_optimizeData(&((*(*_32341_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a416a192_optimizeWhileIter(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e57666_WhileIter> _36841_it) {
	static__1a4170384_optimizeData(&((*(_36841_it))._field_Expr), &((*(_self_))._field_data));
	_1a416bd31_optimizeStmt(_self_, (*_36841_it.alloc)._field_Next);
	_1a416c0d9_optimizeChild(_self_, (*_36841_it.alloc)._field_Scope);
}



inline jule::Bool _1a416a4d3_substr(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59877_Assign> _37430_a) {
	if (((*((*(_37430_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37430_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a84b169e:;
			{
				jule::Ptr<_1a3e0a2b7_SlicingExprModel> _38017_sem = (*((*(_37430_a))._field_R))._field_Model.unsafe_cast_ptr<_1a3e0a2b7_SlicingExprModel>();;
				if (((*(_38017_sem))._field_Expr == (*((*_37430_a.alloc)._field_L))._field_Model)) {
					_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4162442_MutSlicingExprModel>(_1a4162442_MutSlicingExprModel{._field_Token=(*_38017_sem.alloc)._field_Token, ._field_Expr=(*_38017_sem.alloc)._field_Expr, ._field_Left=(*_38017_sem.alloc)._field_Left, ._field_Right=(*_38017_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1a84b1638:;
	};
	return false;;
}



inline jule::Bool _1a416a824_strAssign(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59877_Assign> _39433_a) {
	if ((!(_1a418340d_Str))) {
		return false;;
	};
	jule::Ptr<_1a4062a07_Prim> _3989_lp = _1a405c57e_Prim((*((*(_39433_a))._field_L))._field_Kind.ptr());;
	if (((_3989_lp == nullptr) || (!(_1a4065e8e_IsStr(_3989_lp.ptr()))))) {
		return false;;
	};
	return _1a416a4d3_substr(_self_, _39433_a);;
}



inline jule::Bool _1a416ab65_sliceAssign(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59877_Assign> _40535_a) {
	if (((!(_1a41836a5_Slice)) || (_1a405d5d5_Slc((*((*(_40535_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a416a4d3_substr(_self_, _40535_a);;
}



inline void _1a416ae1d_optimizePostfix(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e593c1_Postfix> _41339_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a4180a7b_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41339_postfix))._field_Expr);
	};
	static__1a4170384_optimizeData(&((*_41339_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a416b1c6_optimizeAssign(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59877_Assign> _42038_assign) {
	if ((((*((*(_42038_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1a41602ca_equalModels((*((*_42038_assign.alloc)._field_L))._field_Model, (*((*_42038_assign.alloc)._field_R))._field_Model))) {
		_1a4168624_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a4180d45_isBoundaryRiskyType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
			_1a4180a7b_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1a4166215_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_R.alloc)._field_Model)) {
			if (_1a41664ce_isNilValidType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
				;
				_1a41652d0_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a4166820_getNilVar((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), true);
			};
		} else {
			_1a4165d4c_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a4059e2d_TypeKind> _44417_kind = _1a417ae2d_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_R.alloc)._field_Kind, (*(*_42038_assign.alloc)._field_R.alloc)._field_Model);;
		if ((_44417_kind != nullptr)) {
			if (_1a417a9ee_isDynamicValidType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
				_1a4179ab9_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a417b26e_getDynamicVar((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), _44417_kind);
			};
		} else {
			_1a417a6e1_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	{
		
		if (_1a416a824_strAssign(_self_, _42038_assign) || _1a416ab65_sliceAssign(_self_, _42038_assign)) {
			_case_begin_1a84c44e7:;
			{
				return;;
			}
		}
		_match_end_1a84c0b97:;
	};
	static__1a4170384_optimizeData(&((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a4170384_optimizeData(&((*(*_42038_assign.alloc)._field_R.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a84cb2ac:;
			{
				if (((!(_1a41824d9_Math)) || (_1a405db02_Struct((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1a84cb246;
				};
				jule::U64 _47013_oldId = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;;
				jule::Str _47020_oldKind = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;;
				({
					jule::U64 ___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;
					_47013_oldId = ___jule_assign_arg;
					_47020_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1a84ce07e:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1a84cde91:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1a84cd831:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:479:17"));;
						}
					}
					_match_end_1a84cdb1c:;
				};
				jule::Any _48117_model = jule::Any(jule::new_ptr<_1a3e0666a_BinaryExprModel>(_1a3e0666a_BinaryExprModel{._field_Left=(*_42038_assign.alloc)._field_L, ._field_Right=(*_42038_assign.alloc)._field_R, ._field_Op=(*_42038_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1a4170384_optimizeData(&(_48117_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48117_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1a84cd776:;
						{
							(*_42038_assign.alloc)._field_R=jule::new_ptr<_1a3e06170_OperandExprModel>((*(*_42038_assign.alloc)._field_R.alloc));
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42038_assign.alloc)._field_R.alloc)._field_Model=_48117_model;
							return;;
						}
					}
					_match_end_1a84d214d:;
				};
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=_47013_oldId;
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=_47020_oldKind;
				return;;
			}
		}
		_match_end_1a84cb246:;
	};
	if (_1a41821dc_Append) {
		{
			auto &_match_expr{ (*((*(_42038_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1a84d50a7:;
				{
					jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel> _50321_m = (*(*_42038_assign.alloc)._field_R.alloc)._field_Model.cast_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1a41786cd_areSameLvalueExprModel(&((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), &((*(_50321_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50321_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1a84d654d:;
							{
								_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4162e9d_PushToSliceExprModel>(_1a4162e9d_PushToSliceExprModel{._field_Dest=(*_50321_m.alloc)._field_Dest, ._field_Elems=(*(_50321_m))._field_Elements.unsafe_cast_ptr<_1a3e08a24_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1a84d6b03:;
							{
								_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4163377_AppendToSliceExprModel>(_1a4163377_AppendToSliceExprModel{._field_Dest=(*(*_42038_assign.alloc)._field_L.alloc)._field_Model, ._field_Slice=(*_50321_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1a84d6a9d:;
					};
				}
			}
			_match_end_1a84d5041:;
		};
	};
}



inline jule::Bool _1a416b517_tryOptimizeSwap(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59c51_MultiAssign>* _52540_assign) {
	if (((((!(_1a418395d_Assign)) || ((*((*(_52540_assign))))._field_L.len() != 2LL)) || ((*((*(_52540_assign))))._field_L[0LL] == nullptr)) || ((*((*(_52540_assign))))._field_L[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a3e0bc58_TupleExprModel> _53017_tup;;
	{
		auto &_match_expr{ (*((*(_52540_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a84da71c:;
			{
				_53017_tup=(*((*(_52540_assign))))._field_R.unsafe_cast_ptr<_1a3e0bc58_TupleExprModel>();
			}
		}
		_match_end_1a84da6a6:;
	};
	if (((_53017_tup == nullptr) || ((*(_53017_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a41602ca_equalModels((*((*((*(_52540_assign))))._field_L[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model) && _1a41602ca_equalModels((*((*((*(_52540_assign))))._field_L[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) {
		_1a4168624_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a41602ca_equalModels((*((*((*(_52540_assign))))._field_L[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a41602ca_equalModels((*((*((*(_52540_assign))))._field_L[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a41611dd_SwapExprModel> _55213_model = jule::new_ptr<_1a41611dd_SwapExprModel>(_1a41611dd_SwapExprModel{._field_Left=(*((*(_52540_assign))))._field_L[0LL], ._field_Right=(*((*(_52540_assign))))._field_L[1LL]});;
	static__1a4170384_optimizeData(&((*((*(_55213_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a4170384_optimizeData(&((*((*_55213_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a4168426_setCurrentStmt(_self_, jule::Any(_55213_model, &__jule_any_type125));
	return true;;
}



inline void _1a416b7c0_optimizeMultiAssign(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e59c51_MultiAssign> _56243_assign) {
	if (_1a416b517_tryOptimizeSwap(_self_, &(_56243_assign))) {
		return;;
	};
	jule::Ptr<_1a3e0bc58_TupleExprModel> _56713_tup = static_cast<jule::Ptr<_1a3e0bc58_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56243_assign))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a84e421a:;
			{
				_56713_tup=(*(_56243_assign))._field_R.unsafe_cast_ptr<_1a3e0bc58_TupleExprModel>();
			}
		}
		_match_end_1a84e41a4:;
	};
	{
		auto expr = &((*(_56243_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84e333a:;
		if (it != expr_end) {
			jule::I64 _57214_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _57221_l = *it;
			{
				if ((_57221_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a4180d45_isBoundaryRiskyType((*_57221_l.alloc)._field_Kind)) {
							_1a4180a7b_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57221_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_56713_tup != nullptr) && _1a4166215_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Model))) {
							if (_1a41664ce_isNilValidType((*_57221_l.alloc)._field_Kind)) {
								;
								_1a41652d0_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1a4166820_getNilVar((*_57221_l.alloc)._field_Model), true);
							};
						} else {
							_1a4165d4c_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57221_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_56713_tup != nullptr))) {
						jule::Ptr<_1a4059e2d_TypeKind> _59025_kind = _1a417ae2d_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Kind, (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Model);;
						if ((_59025_kind != nullptr)) {
							if (_1a417a9ee_isDynamicValidType((*_57221_l.alloc)._field_Kind)) {
								_1a4179ab9_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a417b26e_getDynamicVar((*_57221_l.alloc)._field_Model), _59025_kind);
							};
						} else {
							_1a417a6e1_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57221_l.alloc)._field_Model);
						};
					};
					static__1a4170384_optimizeData(&((*_57221_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1a84e333a:;
			++it;
			_57214_i++;
			goto _iter_begin_1a84e333a;
		}
		_iter_end_1a84e333a:;
	};
	static__1a4170384_optimizeData(&((*_56243_assign.alloc)._field_R), &((*_self_.alloc)._field_data));
}



inline void _1a416ba78_optimizeRet(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e5b978_RetSt> _60635_r) {
	static__1a4170384_optimizeData(&((*(_60635_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a4183c16_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60635_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a850015a:;
			{
				goto _match_end_1a850026a;
			}
		}
		else {
			_case_begin_1a85002c0:;
			{
				return;;
			}
		}
		_match_end_1a850026a:;
	};
	jule::Ptr<_1a3e0864a_FnCallExprModel> _62013_fc = (*_60635_r.alloc)._field_Expr.cast_ptr<_1a3e0864a_FnCallExprModel>(&__jule_any_type34);;
	if (((((!((*((*((*(_62013_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62013_fc.alloc)._field_Except == nullptr)) || ((*((*_62013_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a416d98c_isForwarded(&((*_62013_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a4168426_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a4160d58_ExceptionalForwardingExprModel>(_1a4160d58_ExceptionalForwardingExprModel{._field_Expr=_62013_fc}), &__jule_any_type120));
}



inline void _1a416bd31_optimizeStmt(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Any _63036_stmt) {
	{
		auto &_match_expr{ _63036_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a85036d0:;
			{
				_1a416c0d9_optimizeChild(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e5627a_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8503416:;
			{
				_1a4168de9_optimizeData(_self_, _63036_stmt.unsafe_cast_ptr<_1a4028e63_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8503746:;
			{
				_1a41691a2_optimizeVar(_self_, _63036_stmt.unsafe_cast_ptr<_1a3ebac4b_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a85037ac:;
			{
				_1a416945a_optimizeConditional(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e56db3_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a8503823:;
			{
				_1a4169dd9_optimizeRangeIter(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e580b2_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a8503889:;
			{
				_1a416a192_optimizeWhileIter(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e57666_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8503911:;
			{
				_1a416c0d9_optimizeChild(_self_, (*(_63036_stmt.unsafe_cast_ptr<_1a3e571b0_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a8503988:;
			{
				_1a416b1c6_optimizeAssign(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e59877_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a8503a10:;
			{
				_1a416b7c0_optimizeMultiAssign(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e59c51_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8503a87:;
			{
				_1a4169b31_optimizeMatch(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e5a3b1_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a8503b0e:;
			{
				_1a416ba78_optimizeRet(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e5b978_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a8503b86:;
			{
				_1a416ae1d_optimizePostfix(_self_, _63036_stmt.unsafe_cast_ptr<_1a3e593c1_Postfix>());
			}
		}
		_match_end_1a850358c:;
	};
}



inline void _1a416c0d9_optimizeChild(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_, jule::Ptr<_1a3e5627a_Scope> _65937_child) {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _66013_so = static__1a416816d_new(_65937_child);;
	(*(_66013_so))._field_parent=_self_;
	(*_66013_so.alloc)._field_data=(*(_self_))._field_data;
	_1a416c2d7_optimize(_66013_so);
}



inline void _1a416c2d7_optimize(jule::Ptr<_1a4167aeb_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a416bd31_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a850bb39:;
	}
	_iter_end_1a850bb39:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4167aeb_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1a4170098_optimize(jule::Any* _5829_model) {
	static__1a4170384_optimizeData(_5829_model, &(_1a417bba9_emptyData));
}



inline void static__1a4170384_optimizeData(jule::Any* _6233_model, jule::Ptr<_1a417c5a0_data>* _6256_d) {
	if (_1a39ce3b9_exprEnabled) {
		jule::Ptr<_1a416e949_exprOptimizer> _6517_exop = jule::new_ptr<_1a416e949_exprOptimizer>(_1a416e949_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1a4177d92_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1a41706c5_selfCmpCond(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _7331_m) {
	if ((!(_1a41602ca_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a851b330:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b289c124_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a851b3b8:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b289c124_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1a851a1db:;
			{
				return false;;
			}
		}
		_match_end_1a851b2b9:;
	};
}



inline jule::Bool _1a4170a16_boolCond(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1a4062a07_Prim> _989_lp = _1a405c57e_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1a4065c08_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8520ab5:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1a851ece5:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a851e0d0:;
						{
							goto _match_end_1a85205ed;
						}
					}
					else {
						_case_begin_1a8520653:;
						{
							return false;;
						}
					}
					_match_end_1a85205ed:;
				};
			}
		}
		_match_end_1a851ec90:;
	};
	jule::Ptr<_1b289b651_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a85226aa:;
			{
				if (_1b289d543_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b289eb2c_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a8522754:;
			{
				if (_1b289d543_ReadBool(_11513_c.ptr())) {
					_1b289eb2c_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1a85206b9:;
		}
		_match_end_1a8522644:;
	};
	return false;;
}



inline jule::Bool _1a4170d57_strCond(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel> _15026_m) {
	jule::Ptr<_1a4062a07_Prim> _1519_lp = _1a405c57e_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1a4065e8e_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a85292a5:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1a85284d5:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a8527050:;
						{
							goto _match_end_1a8528cdd;
						}
					}
					else {
						_case_begin_1a8528d43:;
						{
							return false;;
						}
					}
					_match_end_1a8528cdd:;
				};
			}
		}
		_match_end_1a8528480:;
	};
	jule::Ptr<_1b289b651_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a8528dba:;
			{
				if ((_1b289d7c9_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1a41615b7_EmptyCompareExprModel>(_1a41615b7_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1a852acbd;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1a4161dae_StrCompExprModel>(_1a4161dae_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a852ad56:;
			{
				if ((_1b289d7c9_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1a41615b7_EmptyCompareExprModel>(_1a41615b7_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1a852acbd;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1a4161dae_StrCompExprModel>(_1a4161dae_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1a852acbd:;
	};
	return true;;
}



inline jule::Bool _1a417130d_tryNeutralElement1(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _20738_m, jule::Ptr<_1b289b651_Const> _20763_c, jule::Ptr<_1a3e06170_OperandExprModel>* _20775_nc) {
	if (_1b28a0dc5_IsStr(_20763_c.ptr())) {
		if ((!(_1a418340d_Str))) {
			return false;;
		};
		if (((_1b289d7c9_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a41824d9_Math)) || (_1b289e313_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a8534953:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a8535624:;
			{
				_1b289e5bb_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a853568a:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1a85354e2:;
	};
	return false;;
}



inline jule::Bool _1a417164e_tryNeutralElement(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8538b11:;
			{
				jule::Ptr<_1b289b651_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b289b651_Const>();;
				return _1a417130d_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1a8538a9a:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8539c33:;
			{
				jule::Ptr<_1b289b651_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b289b651_Const>();;
				return _1a417130d_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1a8539bcd:;
	};
	return false;;
}



inline void _1a4171907_checkBinaryForBoundary(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a853c52c:;
			{
				jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a3e0dde2_BuiltinLenCallExprModel>();;
				if ((!(_1a418110e_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a8540761:;
							{
								jule::Ptr<_1b289b651_Const> _28425_c = jule::new_ptr<_1b289b651_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19))));;
								_1b28a369c_Sub(_28425_c, (*(static__1b289ba91_NewI64(1LL))));
								_1a417e409_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a41813c8_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1a85406ea:;
					};
					return;;
				};
				_1a417e409_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a41813c8_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a853c4b6:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a853ca6b:;
			{
				jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a3e0dde2_BuiltinLenCallExprModel>();;
				if ((!(_1a418110e_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a85471d5:;
							{
								jule::Ptr<_1b289b651_Const> _30725_c = jule::new_ptr<_1b289b651_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19))));;
								_1b28a369c_Sub(_30725_c, (*(static__1b289ba91_NewI64(1LL))));
								_1a417e409_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a41813c8_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1a854716e:;
					};
					return;;
				};
				_1a417e409_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a41813c8_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a853ca05:;
	};
}



inline void _1a4171bb0_checkBinaryForNil(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1a4166820_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1a41664ce_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a854ca37:;
				{
					_1a41652d0_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a854c9c1:;
		};
		return;;
	};
	_32213_var=_1a4166820_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1a41664ce_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a85501cc:;
				{
					_1a41652d0_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a8550166:;
		};
		return;;
	};
}



inline void _1a4171e68_binary(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0666a_BinaryExprModel> _35025_m) {
	_1a4171907_checkBinaryForBoundary(_self_, &(_35025_m));
	_1a4171bb0_checkBinaryForNil(_self_, &(_35025_m));
	static__1a4170384_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1a4170384_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1a41831bb_Cond) {
		{
			
			if (_1a4170d57_strCond(_self_, _35025_m) || _1a4170a16_boolCond(_self_, &(_35025_m)) || _1a41706c5_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1a8552dd3:;
				{
					return;;
				}
			}
			_match_end_1a8552d17:;
		};
	};
	if (_1a417164e_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1a41824d9_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8552322:;
			{
				goto _match_end_1a85541d1;
			}
		}
		else {
			_case_begin_1a8554236:;
			{
				return;;
			}
		}
		_match_end_1a85541d1:;
	};
	jule::Ptr<_1a4062a07_Prim> _3869_lp = _1a405c57e_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _3909_rp = _1a405c57e_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a8556c94:;
			{
				jule::Bool _39713_ok;;
				jule::U64 _39717_x;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a4178315_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1b289b651_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
					_1b289e874_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a85568cb:;
			{
				jule::Bool _40813_ok;;
				jule::U64 _40817_x;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a4178315_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1b289b651_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
					_1b289e874_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a8556942:;
			{
				jule::Ptr<_1b289b651_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
				if ((_1b289e313_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1b289e5bb_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1a85564e1:;
			{
				return;;
			}
		}
		_match_end_1a8556865:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1a416273e_UnsafeBinaryExprModel>(_1a416273e_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1a4172221_unary(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e06a44_UnaryExprModel> _43824_m) {
	static__1a4170384_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1a4182d03_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a856150c:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a85625b8:;
						{
							jule::Ptr<_1a3e06a44_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1a8562552:;
				};
				if ((!(_1a4182792_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a41664ce_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1a4166820_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1a4165962_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1a4163a4d_UnsafeDerefExprModel>(_1a4163a4d_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1a41652d0_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a856192a:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a85680b3:;
						{
							jule::Ptr<_1a3ebac4b_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1a416193b_RefExprModel>(_1a416193b_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1a856804c:;
				};
			}
		}
		_match_end_1a85617d7:;
	};
}



inline void _1a41724c9_structureLit(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e07418_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8567931:;
		if (it != expr_end) {
			jule::Ptr<_1a3e07072_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a4180d45_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1a4180a7b_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a4165d4c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a417a6e1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1a4170384_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1a8567931:;
			++it;
			goto _iter_begin_1a8567931;
		}
		_iter_end_1a8567931:;
	};
}



inline void _1a4172782_allocStructure(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e07715_AllocStructLitExprModel> _49933_m) {
	_1a41724c9_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1a4172a3a_casting(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e07c98_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1a417a9ee_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1a417b26e_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a417a306_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1a4163d4a_UnsafeCastingExprModel>(_1a4163d4a_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1a4170384_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1a4179ab9_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1a4172d9d_args(_1a416e949_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a857481c:;
		if (it != expr_end) {
			jule::I64 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1a3e16339_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1a4180d45_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1a4180a7b_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1a4165d4c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1a417a6e1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1a4170384_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1a857481c:;
			++it;
			_51814_i++;
			goto _iter_begin_1a857481c;
		}
		_iter_end_1a857481c:;
	};
}



inline void _1a4173156_scope(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e5627a_Scope>* _54025_s) {
	jule::Ptr<_1a4167aeb_scopeOptimizer> _54113_scopt = static__1a416816d_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1a416c2d7_optimize(_54113_scopt);
}



inline void _1a417340e_funcCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0864a_FnCallExprModel> _54627_m) {
	static__1a4170384_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1a4172d9d_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1a4173156_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1a41736b7_slice(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e08a24_SliceExprModel> _55424_m) {
	_1a4172d9d_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1a4173970_array(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0b95b_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1a4170384_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1a4172d9d_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1a4173c28_indexing(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e08eca_IndexingExprModel> _56727_m) {
	static__1a4170384_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1a4170384_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1a4182792_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1a405d34e_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1a402986a_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1a4162ac4_UnsafeIndexingExprModel>(_1a4162ac4_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a418110e_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1a41813c8_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1a417eb46_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1a4162ac4_UnsafeIndexingExprModel>(_1a4162ac4_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1a417e409_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1a4173ed1_anonFunc(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e093a4_AnonFnExprModel> _59327_m) {
	_1a4173156_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1a4174289_mapExpr(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e09c34_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a758917e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0977d_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1a4170384_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1a4170384_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1a758917e:;
			++it;
			goto _iter_begin_1a758917e;
		}
		_iter_end_1a758917e:;
	};
}



inline void _1a4174542_slicing(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0a2b7_SlicingExprModel> _60426_m) {
	static__1a4170384_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1a4170384_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1a4170384_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1a41747ea_traitSub(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel> _61227_m) {
	static__1a4170384_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4174aa3_structureSub(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _61631_m) {
	static__1a4170384_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a4174d5b_tuple(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0bc58_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a758d46e:;
		if (it != expr_end) {
			jule::Ptr<_1a4028e63_Data> _62121_d = *it;
			{
				static__1a4170384_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1a758d46e:;
			++it;
			goto _iter_begin_1a758d46e;
		}
		_iter_end_1a758d46e:;
	};
}



inline void _1a4175114_newCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1a4170384_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1a41753bc_outCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel> _63226_m) {
	static__1a4170384_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4175675_outlnCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel> _63628_m) {
	static__1a4170384_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a417592d_panicCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel> _64028_m) {
	static__1a4170384_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4175bd6_assertCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel> _64429_m) {
	static__1a4170384_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4175e8e_errorCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> _64828_m) {
	static__1a4170384_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1a4176247_makeCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1a4170384_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1a4170384_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1a4176500_appendCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel> _66129_m) {
	static__1a4170384_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1a4170384_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1a41767a8_lenCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> _66626_m) {
	static__1a4170384_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a4176a61_capCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel> _67026_m) {
	static__1a4170384_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1a4176d19_deleteCall(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel> _67429_m) {
	static__1a4170384_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1a4170384_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1a41770c2_sizeof(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e10520_SizeofExprModel> _68125_m) {
	static__1a4170384_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a417737a_alignof(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e1070c_AlignofExprModel> _68526_m) {
	static__1a4170384_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4177633_integratedToStr(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel> _68934_m) {
	static__1a4170384_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a41778db_free(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e11477_FreeExprModel> _69323_m) {
	static__1a4170384_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1a4177b94_backendEmit(_1a416e949_exprOptimizer* _self_, jule::Ptr<_1a3e1117a_BackendEmitExprModel> _69730_m) {
	_1a4172d9d_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1a4177d92_do(_1a416e949_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a759bb86:;
			{
				_1a4171e68_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0666a_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a759b625:;
			{
				_1a4172221_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a759bc0d:;
			{
				_1a41724c9_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e07418_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a759bc74:;
			{
				_1a4172782_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e07715_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a759bceb:;
			{
				_1a4172a3a_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e07c98_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a759bd73:;
			{
				_1a417340e_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0864a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a759bdea:;
			{
				_1a41736b7_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e08a24_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a759be72:;
			{
				_1a4173970_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0b95b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a759bee9:;
			{
				_1a4173c28_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e08eca_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a759c071:;
			{
				_1a4173ed1_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e093a4_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a759c0e8:;
			{
				_1a4174289_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e09c34_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a759c170:;
			{
				_1a4174542_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0a2b7_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a759c1e7:;
			{
				_1a41747ea_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0a84a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a759c26e:;
			{
				_1a4174aa3_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a759c2e6:;
			{
				_1a4174d5b_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0bc58_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a759c36d:;
			{
				_1a41753bc_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0c132_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a759c3e5:;
			{
				_1a4175675_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a759c46c:;
			{
				_1a4175114_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0c8d5_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a759c4e4:;
			{
				_1a417592d_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0ccae_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a759c56b:;
			{
				_1a4175bd6_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0d265_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a759c5e3:;
			{
				_1a4175e8e_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a759c66a:;
			{
				_1a4176247_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0d71b_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a759c6e2:;
			{
				_1a4176500_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a759c769:;
			{
				_1a41767a8_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0dde2_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a759c7e1:;
			{
				_1a4176a61_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0e1de_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a759c868:;
			{
				_1a4176d19_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a759c8e0:;
			{
				_1a41770c2_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e10520_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a759c967:;
			{
				_1a417737a_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e1070c_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a759c9de:;
			{
				_1a4177633_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e10ca1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a759ca66:;
			{
				_1a41778db_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e11477_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a759cadd:;
			{
				_1a4177b94_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1a3e1117a_BackendEmitExprModel>());
			}
		}
		_match_end_1a759b8de:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a416e949_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4179316_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1a4179ab9_pushVar(jule::Ptr<_1a4179657_dynamic> _self_, jule::Uintptr _3127_var, jule::Ptr<_1a4059e2d_TypeKind> _3145_kind) {
	if (((!(_1a4184277_Dynamic)) || (_3127_var == 0LLU))) {
		return;;
	};
	_3145_kind=_1a417ae2d_isTypeGuaranteedDynamicData(&(_self_), _3145_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81a4bbc:;
		if (it != expr_end) {
			_1a4179316_dynamicVar _3721_v = *it;
			{
				if ((_3721_v._field_var == _3127_var)) {
					_3721_v._field_kind=_3145_kind;
					return;;
				};
			}
			_iter_next_1a81a4bbc:;
			++it;
			goto _iter_begin_1a81a4bbc;
		}
		_iter_end_1a81a4bbc:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81a50c9:;
		if (it != expr_end) {
			_1a4179316_dynamicVar _4421_v = *it;
			{
				if ((_4421_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3127_var;
						jule::Ptr<_1a4059e2d_TypeKind> _1___jule_assign_arg = _3145_kind;
						_4421_v._field_var = ___jule_assign_arg;
						_4421_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1a81a50c9:;
			++it;
			goto _iter_begin_1a81a50c9;
		}
		_iter_end_1a81a50c9:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1a4179316_dynamicVar>::make({_1a4179316_dynamicVar{._field_var=_3127_var, ._field_kind=_3145_kind}}));
}



inline jule::Bool _1a4179e0a_removeVar(_1a4179657_dynamic* _self_, jule::Uintptr _5428_var) {
	if ((_5428_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a75b5ed0:;
			if (it != expr_end) {
				_1a4179316_dynamicVar _5625_v = *it;
				{
					if ((_5625_v._field_var == _5428_var)) {
						_5625_v._field_var=0LLU;
						_5625_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1a75b5ed0:;
				++it;
				goto _iter_begin_1a75b5ed0;
			}
			_iter_end_1a75b5ed0:;
		};
	};
	return false;;
}



inline jule::Bool _1a417a306_isFits(_1a4179657_dynamic* _self_, jule::Uintptr _6825_var, jule::Ptr<_1a4059e2d_TypeKind> _6839_kind) {
	if ((_6825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a75b7861:;
			if (it != expr_end) {
				_1a4179316_dynamicVar _7020_v = *it;
				{
					if ((_7020_v._field_var == _6825_var)) {
						return ((_7020_v._field_kind != nullptr) && _1a405a637_Equal(_7020_v._field_kind, _6839_kind));;
					};
				}
				_iter_next_1a75b7861:;
				++it;
				goto _iter_begin_1a75b7861;
			}
			_iter_end_1a75b7861:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4179657_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1a417c0a5_dataCheckpoint _1a417c924_getCheckpoint(_1a417c5a0_data* _self_) {
	_1a417c0a5_dataCheckpoint _2513_c = _1a417c0a5_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1a417db56_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75b9742:;
		if (it != expr_end) {
			jule::I64 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1a75b9742:;
			++it;
			_2713_i++;
			goto _iter_begin_1a75b9742;
		}
		_iter_end_1a75b9742:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1a4164a2c_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1a4179316_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1a417cbcc_loadCheckpoint(_1a417c5a0_data* _self_, _1a417c0a5_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1a417c5a0_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a417db56_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1a417e409_pushVar(_1a417de97_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1a4182792_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1a418000e_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75cd8ee:;
		if (it != expr_end) {
			_1a417db56_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a75ce669:;
						if (it != expr_end) {
							jule::I64 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1a418074b_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1a75ce669:;
							++it;
							_3421_i++;
							goto _iter_begin_1a75ce669;
						}
						_iter_end_1a75ce669:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1a75cd8ee:;
			++it;
			goto _iter_begin_1a75cd8ee;
		}
		_iter_end_1a75cd8ee:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75ce25c:;
		if (it != expr_end) {
			_1a417db56_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1a75ce25c:;
			++it;
			goto _iter_begin_1a75ce25c;
		}
		_iter_end_1a75ce25c:;
	};
	{ jule::Slice<_1a417db56_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a417db56_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1a417eb46_fitsMaxSize(_1a417de97_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a75d400e:;
			if (it != expr_end) {
				_1a417db56_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1a41803c7_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1a75d400e:;
				++it;
				goto _iter_begin_1a75d400e;
			}
			_iter_end_1a75d400e:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a417de97_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a39ce8a3_Optimizer> static__1a39ced26_New(jule::Ptr<_1a4a6456e_IR>* _2624_ir) {
	return jule::new_ptr<_1a39ce8a3_Optimizer>(_1a39ce8a3_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1a39d00ce_optimizeGlobal(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3ebac4b_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1a4170098_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a39d0387_optimizeFunction(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3e143d1_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75d9311:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1a4167aeb_scopeOptimizer> _4317_so = static__1a416816d_new((*(_4221_ins))._field_Scope);;
				_1a416c2d7_optimize(_4317_so);
			}
			_iter_next_1a75d9311:;
			++it;
			goto _iter_begin_1a75d9311;
		}
		_iter_end_1a75d9311:;
	};
}



inline void _1a39d0640_optimizeStruct(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3dee4dc_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75da9b6:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75db39b:;
					if (it != expr_end) {
						jule::Ptr<_1a3e016ba_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1a4170098_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1a75db39b:;
						++it;
						goto _iter_begin_1a75db39b;
					}
					_iter_end_1a75db39b:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75db7db:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _5825_m = *it;
						{
							_1a39d0387_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1a75db7db:;
						++it;
						goto _iter_begin_1a75db7db;
					}
					_iter_end_1a75db7db:;
				};
			}
			_iter_next_1a75da9b6:;
			++it;
			goto _iter_begin_1a75da9b6;
		}
		_iter_end_1a75da9b6:;
	};
}



inline void _1a39d08e8_optimizeGlobals(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3e7a986_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75db038:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75dd90e:;
					if (it != expr_end) {
						jule::Ptr<_1a3ebac4b_Var> _6625_v = *it;
						{
							_1a39d00ce_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1a75dd90e:;
						++it;
						goto _iter_begin_1a75dd90e;
					}
					_iter_end_1a75dd90e:;
				};
			}
			_iter_next_1a75db038:;
			++it;
			goto _iter_begin_1a75db038;
		}
		_iter_end_1a75db038:;
	};
}



inline void _1a39d0ba1_optimizeFunctions(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3e7a986_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75de404:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75ded0b:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _7425_func = *it;
						{
							_1a39d0387_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1a75ded0b:;
						++it;
						goto _iter_begin_1a75ded0b;
					}
					_iter_end_1a75ded0b:;
				};
			}
			_iter_next_1a75de404:;
			++it;
			goto _iter_begin_1a75de404;
		}
		_iter_end_1a75de404:;
	};
}



inline void _1a39d0e59_optimizeStructs(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3e7a986_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75e0801:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75e1208:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> _8225_s = *it;
						{
							_1a39d0640_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1a75e1208:;
						++it;
						goto _iter_begin_1a75e1208;
					}
					_iter_end_1a75e1208:;
				};
			}
			_iter_next_1a75e0801:;
			++it;
			goto _iter_begin_1a75e0801;
		}
		_iter_end_1a75e0801:;
	};
}



inline void _1a39d1212_optimizePackage(_1a39ce8a3_Optimizer* _self_, jule::Ptr<_1a3e7a986_Package>* _8839_p) {
	_1a39d08e8_optimizeGlobals(_self_, _8839_p);
	_1a39d0ba1_optimizeFunctions(_self_, _8839_p);
	_1a39d0e59_optimizeStructs(_self_, _8839_p);
}



inline void _1a39d1410_Optimize(_1a39ce8a3_Optimizer* _self_) {
	_1a39d16a7_detectEnabled();
	if (_1a4181e34_Deadcode) {
		_1a39c1b2b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a39ce6a5_scopeEnabled || _1a39ce3b9_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a75e31e9:;
			if (it != expr_end) {
				jule::Ptr<_1a3e77a60_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1a39d1212_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1a75e31e9:;
				++it;
				goto _iter_begin_1a75e31e9;
			}
			_iter_end_1a75e31e9:;
		};
		_1a39d1212_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a4181e34_Deadcode) {
		_1a39c7192_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a39ce8a3_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a39d1c07_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1a3a064e0_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a39d1c07_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1a3a07667_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a3a08eb5_LogFlat(_1c980bca3_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a3a091e6_LogError(_1c980bca3_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a39d1c07_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b288d588_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b288d588_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1c97475d4_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1c97475d4_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1b288d588_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1c974028b_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1c974028b_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1c974028b_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1a3a064e0_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1a3a09427_Log(_1c980bca3_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a7600646:;
			{
				static__1a3a08eb5_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a7600d3e:;
			{
				static__1a3a091e6_LogError(_6520_l);
			}
		}
		_match_end_1a7600c62:;
	};
}



inline void static__1a3a09658_PrintLogs(jule::Slice<_1c980bca3_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7601438:;
		if (it != expr_end) {
			_1c980bca3_Log *_7616_l = it;
			{
				static__1a3a09427_Log(_7616_l);
			}
			_iter_next_1a7601438:;
			++it;
			goto _iter_begin_1a7601438;
		}
		_iter_end_1a7601438:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1b288d588_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1a3a08bda_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e7121c_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a4e718e3_Time static__1a4e71c9a_Unix(jule::U64 _9120_sec) {
	return _1a4e718e3_Time{._field_sec=_9120_sec};;
}



inline _1a4e718e3_Time static__1a4e71ea9_Now(void) {
	return static__1a4e71c9a_Unix(_1a4e739d3_unix());;
}



inline _1a4e7121c_AbsTime _1a4e73692_Abs(_1a4e718e3_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a4e7067d_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1a4e7067d_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1a8662102:;
	}
	_iter_end_1a8662102:;;
	_1a4e7121c_AbsTime _17413_t = _1a4e7121c_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e718e3_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4e5d4a1_scopeCoder> static__1a4e5dade_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>* _7024_oc) {
	return jule::new_ptr<_1a4e5d4a1_scopeCoder>(_1a4e5d4a1_scopeCoder{._field_oc=(*(_7024_oc))});;
}



inline void _1a8707ae3_iterHead(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e580b2_RangeIter>* _7732_it, jule::Bool* _7744_ref, jule::Str _7755_begin) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a4181b37_Copy && _1a4e65189_isCopyOptimizable(&((*((*(_7732_it))))._field_Expr)))) {
		(*(_7744_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7732_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a870ae59:;
				{
					jule::Ptr<_1a3ebac4b_Var> _8617_v = (*((*((*(_7732_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
					if ((*(_8617_v))._field_Reference) {
						_1a45a2013_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
						goto _match_end_1a870b5b9;
					};
					goto _case_begin_1a870b61e;
				}
			}
			else {
				_case_begin_1a870b61e:;
				{
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a45a2013_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1a870b5b9:;
		};
	} else {
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7744_ref))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7744_ref))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, _7755_begin);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
}



inline void _1a4e5e2b5_rangeIndexIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e580b2_RangeIter>* _12639_it) {
	_1c9754d1c_StrBuilder _12713_sb = static__1c97550d6_New(64LL);;
	static__1a45aac97_iterBegin(&(_12713_sb), static_cast<jule::Uintptr>((*(_12639_it))));
	jule::Str _1299_begin = _1c975e420_Str(&_12713_sb);;
	_1c975e61d_Clear(&_12713_sb);
	static__1a45ab36e_iterNext(&(_12713_sb), static_cast<jule::Uintptr>((*(_12639_it))));
	jule::Str _1329_next = _1c975e420_Str(&_12713_sb);;
	jule::Bool _13413_ref = false;;
	_1a8707ae3_iterHead(_self_, _12639_it, &(_13413_ref), _1299_begin);
	if (((*((*(_12639_it))))._field_KeyA != nullptr)) {
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12639_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13413_ref) {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12639_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12639_it))))._field_KeyB.alloc)._field_Reference=(_1a4181b37_Copy && _1a4e65552_isIterCopyOptimizable(&((*((*(_12639_it))))._field_Expr), &((*((*(_12639_it))))._field_KeyB)));
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12639_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(*((*(_12639_it))))._field_KeyB.alloc)._field_Reference) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it", 2));
				} else {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e64a18_scope(_self_, (*((*(_12639_it))))._field_Scope);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1329_next);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12639_it))))._field_KeyA != nullptr)) {
		static__1a45aa9ab_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12639_it))))._field_KeyA);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1299_begin);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab083_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12639_it))));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4e5e56d_rangeHashmapIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e580b2_RangeIter>* _19341_it) {
	_1c9754d1c_StrBuilder _19413_sb = static__1c97550d6_New(64LL);;
	static__1a45aac97_iterBegin(&(_19413_sb), static_cast<jule::Uintptr>((*(_19341_it))));
	jule::Str _1969_begin = _1c975e420_Str(&_19413_sb);;
	_1c975e61d_Clear(&_19413_sb);
	static__1a45ab36e_iterNext(&(_19413_sb), static_cast<jule::Uintptr>((*(_19341_it))));
	jule::Str _1999_next = _1c975e420_Str(&_19413_sb);;
	jule::Bool _20113_ref = false;;
	_1a8707ae3_iterHead(_self_, _19341_it, &(_20113_ref), _1969_begin);
	if (((*((*(_19341_it))))._field_KeyA != nullptr)) {
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19341_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19341_it))))._field_KeyB != nullptr)) {
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19341_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e64a18_scope(_self_, (*((*(_19341_it))))._field_Scope);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1999_next);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1969_begin);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab083_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19341_it))));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4e5e826_strRuneIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a4163751_StrRuneIter> _24035_it) {
	_1c9754d1c_StrBuilder _24113_sb = static__1c97550d6_New(64LL);;
	static__1a45aac97_iterBegin(&(_24113_sb), static_cast<jule::Uintptr>((*(_24035_it))._field_Base));
	jule::Str _2439_begin = _1c975e420_Str(&_24113_sb);;
	_1c975e61d_Clear(&_24113_sb);
	static__1a45ab36e_iterNext(&(_24113_sb), static_cast<jule::Uintptr>((*_24035_it.alloc)._field_Base));
	jule::Str _2469_next = _1c975e420_Str(&_24113_sb);;
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	jule::Bool _25213_ref = false;;
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a4181b37_Copy && _1a4e65189_isCopyOptimizable(&((*_24035_it.alloc)._field_Expr)))) {
		_25213_ref=true;
		{
			auto &_match_expr{ (*((*(_24035_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a873b74d:;
				{
					jule::Ptr<_1a3ebac4b_Var> _25817_v = (*((*(_24035_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
					if ((*(_25817_v))._field_Reference) {
						_1a45a2013_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1a873bdad;
					};
					goto _case_begin_1a873be13;
				}
			}
			else {
				_case_begin_1a873be13:;
				{
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a45a2013_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1a873bdad:;
		};
	} else {
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25213_ref) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25213_ref) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((*((*_24035_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		}));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a4e84175_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, _2439_begin);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1a45aa9ab_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e64a18_scope(_self_, (*(*_24035_it.alloc)._field_Base.alloc)._field_Scope);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, _2469_next);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a45aa9ab_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _2439_begin);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4e5eace_ifCase(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e56698_If> _34830_i) {
	if (((*(_34830_i))._field_Expr != nullptr)) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_34830_i.alloc)._field_Expr);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1a4e64a18_scope(_self_, (*_34830_i.alloc)._field_Scope);
}



inline void _1a4e5ed87_conditional(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e56db3_Conditional> _35735_c) {
	jule::Bool _35813_writed = false;;
	{
		auto expr = &((*(_35735_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a875c340:;
		if (it != expr_end) {
			jule::Ptr<_1a3e56698_If> _35921_elif = *it;
			{
				if ((_35921_elif == nullptr)) {
					goto _iter_next_1a875c340;
				};
				if (_35813_writed) {
					_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_35813_writed=true;
				_1a4e5eace_ifCase(_self_, _35921_elif);
			}
			_iter_next_1a875c340:;
			++it;
			goto _iter_begin_1a875c340;
		}
		_iter_end_1a875c340:;
	};
	if (((*_35735_c.alloc)._field_Default != nullptr)) {
		if (_35813_writed) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a4e64a18_scope(_self_, (*(*_35735_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1a4e60140_infIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e571b0_InfIter> _37731_it) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e64a18_scope(_self_, (*(_37731_it))._field_Scope);
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab36e_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37731_it));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab083_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37731_it));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a4e603e8_whileIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e57666_WhileIter> _39433_it) {
	if ((((*(_39433_it))._field_Expr != nullptr) && ((*_39433_it.alloc)._field_Next == nullptr))) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39433_it.alloc)._field_Expr);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39433_it))._field_Expr != nullptr)) {
			_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39433_it.alloc)._field_Expr);
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39433_it.alloc)._field_Next != nullptr)) {
			_1a4e644a7_st(_self_, (*_39433_it.alloc)._field_Next);
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39433_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e64a18_scope(_self_, (*_39433_it.alloc)._field_Scope);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab36e_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39433_it));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab083_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39433_it));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a4e606a1_rangeIter(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e580b2_RangeIter> _43333_it) {
	{
		
		if ((_1a405d5d5_Slc((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8772c7e:;
			{
				_1a4e5e2b5_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		else if ((_1a405d34e_Arr((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a877294e:;
			{
				_1a4e5e2b5_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		else if ((_1a405e11e_Map((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a87729b5:;
			{
				_1a4e5e56d_rangeHashmapIter(_self_, &(_43333_it));
			}
		}
		else {
			_case_begin_1a87728d8:;
			{
				_1a4e5e2b5_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		_match_end_1a87727d9:;
	};
}



inline void _1a4e60959_cont(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e58447_ContSt> _44624_c) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a45ab36e_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44624_c))._field_It);
}



inline void _1a4e60c12_label(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e58b1d_Label> _45125_l) {
	static__1a45ab65a_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45125_l));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1a4e60eba_gotoSt(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e58ee7_GotoSt> _45626_gt) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a45ab65a_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45626_gt))._field_Label));
}



inline void _1a4e61273_postfix(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e593c1_Postfix> _46131_p) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46131_p))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1a4e7b502_write((*_self_.alloc)._field_oc, (*_46131_p.alloc)._field_Op);
}



inline void _1a4e6152b_assign(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e59877_Assign> _46830_a) {
	_1a4597646_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46830_a))._field_L))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, (*((*_46830_a.alloc)._field_Op))._field_Kind);
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_46830_a.alloc)._field_R))._field_Model);
}



inline void _1a4e617d4_mapLookupAssign(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e59c51_MultiAssign>* _47440_a) {
	jule::Ptr<_1a3e08eca_IndexingExprModel> _47513_iem = (*((*(_47440_a))))._field_R.cast_ptr<_1a3e08eca_IndexingExprModel>(&__jule_any_type45);;
	_1a4597646_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47513_iem))._field_Expr))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47513_iem.alloc)._field_Index))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47440_a))))._field_L[0LL] != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47440_a))))._field_L[0LL]))._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47440_a))))._field_L[1LL] != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47440_a))))._field_L[1LL]))._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a4e61a8c_multiAssignTup(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e59c51_MultiAssign>* _49739_a) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a3e0bc58_TupleExprModel> _50113_tup = (*((*(_49739_a))))._field_R.cast_ptr<_1a3e0bc58_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50113_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8788338:;
		if (it != expr_end) {
			jule::I64 _50314_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _50321_r = *it;
			{
				_1a4e7bda4_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1a4028e63_Data> _50517_l = (*((*(_49739_a))))._field_L[_50314_i];;
				if ((_50517_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50517_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a878b0e9:;
							{
								jule::Ptr<_1a3ebac4b_Var> _50925_v = (*(_50517_l))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
								if (((*(_50925_v))._field_Reference && (!(_1a3ebb125_IsInitialized(_50925_v))))) {
									static__1a45aa9ab_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _50925_v);
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50321_r))._field_Model);
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_49739_a))))._field_L[_50314_i]=nullptr;
									goto _iter_next_1a8788338;
								};
							}
						}
						_match_end_1a878b094:;
					};
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50517_l.alloc)._field_Kind);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1a45a8c0c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a4e5cc42_assignArgName, static_cast<jule::Uintptr>(_50314_i));
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50321_r.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8788338:;
			++it;
			_50314_i++;
			goto _iter_begin_1a8788338;
		}
		_iter_end_1a8788338:;
	};
	{
		auto expr = &((*((*(_49739_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8796c2b:;
		if (it != expr_end) {
			jule::I64 _53014_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _53021_l = *it;
			{
				if ((_53021_l == nullptr)) {
					goto _iter_next_1a8796c2b;
				};
				_1a4e7bda4_indent((*_self_.alloc)._field_oc);
				_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53021_l))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1a45a8c0c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a4e5cc42_assignArgName, static_cast<jule::Uintptr>(_53014_i));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8796c2b:;
			++it;
			_53014_i++;
			goto _iter_begin_1a8796c2b;
		}
		_iter_end_1a8796c2b:;
	};
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a4e61d45_multiAssignFn(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e59c51_MultiAssign>* _54638_a) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a3e0864a_FnCallExprModel> _55113_f = (*((*(_54638_a))))._field_R.cast_ptr<_1a3e0864a_FnCallExprModel>(&__jule_any_type34);;
	_1a4e969c3_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55113_f))._field_Func))._field_Result));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54638_a))))._field_R);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a4067aea_Tuple> _55713_tup = _1a405e3a5_Tup((*(*_55113_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54638_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87a161a:;
		if (it != expr_end) {
			jule::I64 _55814_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _55821_l = *it;
			{
				if ((_55821_l != nullptr)) {
					;
					_1a4e7bda4_indent((*_self_.alloc)._field_oc);
					_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_55821_l.alloc)._field_Model);
					{
						
						if (_1a405a637_Equal((*(_55713_tup))._field_Types[_55814_i], (*_55821_l.alloc)._field_Kind)) {
							_case_begin_1a87ad0b6:;
							{
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_55814_i));
							}
						}
						else if (_1a45a4411_isAny(&((*_55821_l.alloc)._field_Kind))) {
							_case_begin_1a87a5751:;
							{
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_55814_i));
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, (*(_55713_tup))._field_Types[_55814_i])));
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1a87a2b5a:;
							{
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
								if ((_1a405dd88_Trait((*(_55713_tup))._field_Types[_55814_i].ptr()) != nullptr)) {
									jule::Ptr<_1a3e276ad_Trait> _57729_t1 = _1a405dd88_Trait((*_55821_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1a3e276ad_Trait> _57829_t2 = _1a405dd88_Trait((*_55713_tup.alloc)._field_Types[_55814_i].ptr());;
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_55814_i));
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
									static__1a45a9a21_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _57729_t1);
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1a4e7d702_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _57729_t1, _57829_t2);
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1a87a3b7d;
								};
								_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_55821_l.alloc)._field_Kind);
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_55814_i));
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
								_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7d38e_findTypeOffset((*_self_.alloc)._field_oc, _1a405dd88_Trait((*_55821_l.alloc)._field_Kind), (*_55713_tup.alloc)._field_Types[_55814_i])));
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1a87a3b7d:;
					};
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1a87a161a:;
			++it;
			_55814_i++;
			goto _iter_begin_1a87a161a;
		}
		_iter_end_1a87a161a:;
	};
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a4e620ed_multiAssign(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e59c51_MultiAssign> _60535_a) {
	{
		auto &_match_expr{ (*(_60535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a87b3e79:;
			{
				_1a4e617d4_mapLookupAssign(_self_, &(_60535_a));
				return;;
			}
		}
		_match_end_1a87b3e24:;
	};
	{
		auto &_match_expr{ (*(_60535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a87b4023:;
			{
				_1a4e61a8c_multiAssignTup(_self_, &(_60535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a87b4d15:;
			{
				_1a4e61d45_multiAssignFn(_self_, &(_60535_a));
			}
		}
		else {
			_case_begin_1a87b450c:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:619:13"));;
			}
		}
		_match_end_1a87b44a7:;
	};
}



inline jule::Fn<void(void)> _1a4e6243e_matchExpr(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5a3b1_Match> _62333_m) {
	if ((!(_1a402986a_IsConst((*(_62333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1b28a0b3e_IsBool((*(*_62333_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b289d543_ReadBool((*(*_62333_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_62333_m.alloc)._field_Expr.alloc)._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a4e627a2_case(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5a3b1_Match> _63328_m, jule::Ptr<_1a3e5add9_Case> _63343_c) {
	if ((((*(_63343_c))._field_Exprs.len() != 0LL) && (!((*(_63328_m))._field_Comptime)))) {
		if ((((*_63328_m.alloc)._field_Cases.len() > 0LL) && ((*_63328_m.alloc)._field_Cases[0LL] == _63343_c))) {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_63343_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a87bbc0c:;
			if (it != expr_end) {
				jule::I64 _64018_i = it - expr->begin();
				jule::Ptr<_1a4028e63_Data> _64025_expr = *it;
				{
					{
						
						if ((!((*_63328_m.alloc)._field_TypeMatch))) {
							_case_begin_1a87c4561:;
							{
								jule::Fn<void(void)> _64321_caseExpr = _1a4e6243e_matchExpr(_self_, _63328_m);;
								if (_1a4029bab_GoodOperand((*_63328_m.alloc)._field_Expr.ptr(), &(_64025_expr))) {
									if ((_64321_caseExpr != nullptr)) {
										_64321_caseExpr();
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_64025_expr))._field_Model);
								} else {
									_1a4597646_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_64025_expr))._field_Model);
									if ((_64321_caseExpr != nullptr)) {
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_64321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a87bc8cd:;
							{
								_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a4059e2d_TypeKind> _65925_tk = (*(_64025_expr))._field_Model.cast_ptr<_1a4059e2d_TypeKind>(&__jule_any_type83);;
								if ((_1a405dd88_Trait((*((*_63328_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1a456108d_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1a405c815_Sptr((*_64025_expr.alloc)._field_Kind) != nullptr));
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7d38e_findTypeOffset((*_self_.alloc)._field_oc, _1a405dd88_Trait((*(*_63328_m.alloc)._field_Expr.alloc)._field_Kind), (*_64025_expr.alloc)._field_Kind)));
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _66725_j = _1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, _65925_tk);;
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_66725_j));
								};
							}
						}
						_match_end_1a87bc7ce:;
					};
					if ((((*_63343_c.alloc)._field_Exprs.len() - _64018_i) > 1LL)) {
						_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1a87bbc0c:;
				++it;
				_64018_i++;
				goto _iter_begin_1a87bbc0c;
			}
			_iter_end_1a87bbc0c:;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_63328_m))._field_Default == _63343_c) && ((*_63328_m.alloc)._field_Cases.len() != 0LL))) {
		_1a4e7bda4_indent((*(_self_))._field_oc);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1a4e7b9a8_addIndent((*(_self_))._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45abc32_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_63343_c));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_63343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
		_1a4e64a18_scope(_self_, (*_63343_c.alloc)._field_Scope);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4e62a5a_matchSt(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5a3b1_Match> _70131_m) {
	if ((((*(_70131_m))._field_Cases.len() == 0LL) && ((*_70131_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_70131_m.alloc)._field_Comptime && (((*_70131_m.alloc)._field_Default == nullptr) || ((*((*((*_70131_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((!((*_70131_m.alloc)._field_Comptime)) && (!(_1a402986a_IsConst((*_70131_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a4181b37_Copy && _1a4e65189_isCopyOptimizable(&((*_70131_m.alloc)._field_Expr)))) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_70131_m.alloc)._field_Expr.alloc)._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	};
	if (((*_70131_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_70131_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a87d7068:;
			if (it != expr_end) {
				jule::Ptr<_1a3e5add9_Case> _72925_c = *it;
				{
					if ((_72925_c == nullptr)) {
						goto _iter_next_1a87d7068;
					};
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a4e7bda4_indent((*_self_.alloc)._field_oc);
					_1a4e627a2_case(_self_, _70131_m, _72925_c);
				}
				_iter_next_1a87d7068:;
				++it;
				goto _iter_begin_1a87d7068;
			}
			_iter_end_1a87d7068:;
		};
	};
	if (((*_70131_m.alloc)._field_Default != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a4e627a2_case(_self_, _70131_m, (*_70131_m.alloc)._field_Default);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45ab946_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_70131_m));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4e62d13_fallSt(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5b5d2_FallSt> _75626_f) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a45abc32_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_75626_f))._field_DestCase);
}



inline void _1a4e630bb_breakSt(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e58821_BreakSt> _76127_b) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_76127_b))._field_It != 0LLU)) {
		static__1a45ab083_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_76127_b.alloc)._field_It);
	} else {
		static__1a45ab946_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_76127_b))._field_Mtch);
	};
}



inline void _1a4e63374_setResult(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5b978_RetSt> _77033_r) {
	if (((*((*((*((*(_77033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_77033_r.alloc)._field_Expr);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1a4028e63_Data>> _77813_datas = (*((*_77033_r.alloc)._field_Expr.cast_ptr<_1a3e0bc58_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_77813_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87e4c35:;
		if (it != expr_end) {
			jule::I64 _77913_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _77916_data = *it;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_77913_i));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_77916_data))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				_1a4e7bda4_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1a87e4c35:;
			++it;
			_77913_i++;
			goto _iter_begin_1a87e4c35;
		}
		_iter_end_1a87e4c35:;
	};
}



inline void _1a4e6362c_retSt(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5b978_RetSt> _78929_r) {
	if (_1a3e14854_IsVoid((*((*(_78929_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_78929_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_78929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_78929_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_78929_r.alloc)._field_Func.alloc)._field_Result);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78929_r.alloc)._field_Expr);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78929_r.alloc)._field_Expr);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_78929_r))._field_Expr != nullptr)) {
		_1a4e63374_setResult(_self_, _78929_r);
	};
	if ((*((*((*_78929_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a4e969c3_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_78929_r.alloc)._field_Func.alloc)._field_Result));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a4e638d5_var(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3ebac4b_Var> _82527_v) {
	if ((!((*(_82527_v))._field_Constant))) {
		_1a4e8442d_var((*(_self_))._field_oc, _82527_v);
	};
}



inline void _1a4e63b8d_mutSlicing(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a4162442_MutSlicingExprModel> _83134_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_83134_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_20ad69059_Production))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_83134_m.alloc)._field_Token));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_83134_m.alloc)._field_Left);
	if (((*_83134_m.alloc)._field_Right != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_83134_m.alloc)._field_Right);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1a4e63e46_swap(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a41611dd_SwapExprModel> _84828_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_84828_m))._field_Left))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a4597646_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_84828_m.alloc)._field_Right))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a4e641ee_exceptionalForwarding(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a4160d58_ExceptionalForwardingExprModel> _85645_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a4599329_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_85645_m))._field_Expr));
}



inline void _1a4e644a7_st(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Any _86226_st) {
	if ((_86226_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _86226_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8810415:;
			{
				_1a4e64a18_scope(_self_, _86226_st.unsafe_cast_ptr<_1a3e5627a_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8810a31:;
			{
				_1a4e638d5_var(_self_, _86226_st.unsafe_cast_ptr<_1a3ebac4b_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8810a97:;
			{
				_1a45a2013_model((*((*(_self_))._field_oc))._field_ec, (*(_86226_st.unsafe_cast_ptr<_1a4028e63_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a88112c3:;
			{
				_1a4e5ed87_conditional(_self_, _86226_st.unsafe_cast_ptr<_1a3e56db3_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8811339:;
			{
				_1a4e60140_infIter(_self_, _86226_st.unsafe_cast_ptr<_1a3e571b0_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a88113a0:;
			{
				_1a4e603e8_whileIter(_self_, _86226_st.unsafe_cast_ptr<_1a3e57666_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a8811416:;
			{
				_1a4e606a1_rangeIter(_self_, _86226_st.unsafe_cast_ptr<_1a3e580b2_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a881147c:;
			{
				_1a4e60959_cont(_self_, _86226_st.unsafe_cast_ptr<_1a3e58447_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a88114e3:;
			{
				_1a4e60c12_label(_self_, _86226_st.unsafe_cast_ptr<_1a3e58b1d_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a8811559:;
			{
				_1a4e60eba_gotoSt(_self_, _86226_st.unsafe_cast_ptr<_1a3e58ee7_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a88115c0:;
			{
				_1a4e61273_postfix(_self_, _86226_st.unsafe_cast_ptr<_1a3e593c1_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a8811636:;
			{
				_1a4e6152b_assign(_self_, _86226_st.unsafe_cast_ptr<_1a3e59877_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a881169c:;
			{
				_1a4e620ed_multiAssign(_self_, _86226_st.unsafe_cast_ptr<_1a3e59c51_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8811713:;
			{
				_1a4e62a5a_matchSt(_self_, _86226_st.unsafe_cast_ptr<_1a3e5a3b1_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a881178a:;
			{
				_1a4e62d13_fallSt(_self_, _86226_st.unsafe_cast_ptr<_1a3e5b5d2_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a8811812:;
			{
				_1a4e630bb_breakSt(_self_, _86226_st.unsafe_cast_ptr<_1a3e58821_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a8811889:;
			{
				_1a4e6362c_retSt(_self_, _86226_st.unsafe_cast_ptr<_1a3e5b978_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a8811911:;
			{
				_1a459e73b_pushToSlice((*((*(_self_))._field_oc))._field_ec, _86226_st.unsafe_cast_ptr<_1a4162e9d_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a8811988:;
			{
				_1a459e9e4_appendToSlice((*((*(_self_))._field_oc))._field_ec, _86226_st.unsafe_cast_ptr<_1a4163377_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a8811a10:;
			{
				_1a4e63b8d_mutSlicing(_self_, _86226_st.unsafe_cast_ptr<_1a4162442_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a8811a87:;
			{
				_1a4e63e46_swap(_self_, _86226_st.unsafe_cast_ptr<_1a41611dd_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a8811b0e:;
			{
				_1a4e641ee_exceptionalForwarding(_self_, _86226_st.unsafe_cast_ptr<_1a4160d58_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a8811b86:;
			{
				_1a4e5e826_strRuneIter(_self_, _86226_st.unsafe_cast_ptr<_1a4163751_StrRuneIter>());
			}
		}
		else {
			_case_begin_1a8810811:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a881058b:;
	};
}



inline void _1a4e64760_scopeStmts(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5627a_Scope>* _91835_s) {
	{
		auto expr = &((*((*(_91835_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a881e633:;
		if (it != expr_end) {
			jule::Any _91921_st = *it;
			{
				_1a4e7bda4_indent((*(_self_))._field_oc);
				_1a4e644a7_st(_self_, _91921_st);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a881e633:;
			++it;
			goto _iter_begin_1a881e633;
		}
		_iter_end_1a881e633:;
	};
}



inline void _1a4e64a18_scope(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e5627a_Scope> _92729_s) {
	_1a4e7b9a8_addIndent((*(_self_))._field_oc);
	if ((*(_92729_s))._field_Deferred) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a4e64760_scopeStmts(_self_, &(_92729_s));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_92729_s.alloc)._field_Deferred) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a4e64cc1_funcScope(jule::Ptr<_1a4e5d4a1_scopeCoder> _self_, jule::Ptr<_1a3e172d5_FnIns> _94333_f) {
	if (((*(_94333_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	if ((!(_1a3e14854_IsVoid((*_94333_f.alloc)._field_Decl.ptr())))) {
		jule::Ptr<_1a4067aea_Tuple> _95017_tup = _1a405e3a5_Tup((*_94333_f.alloc)._field_Result.ptr());;
		if ((_95017_tup != nullptr)) {
			_1a4e7bda4_indent((*_self_.alloc)._field_oc);
			_1a4e962ec_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _95017_tup);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_95017_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a88289b1:;
				if (it != expr_end) {
					jule::I64 _95522_i = it - expr->begin();
					jule::Ptr<_1a4059e2d_TypeKind> _95529_t = *it;
					{
						if (_1a4e98d49_shouldInitialized(&(_95529_t))) {
							_1a4e7bda4_indent((*_self_.alloc)._field_oc);
							_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_95522_i));
							_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1a45a22bb_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _95529_t);
							_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1a88289b1:;
					++it;
					_95522_i++;
					goto _iter_begin_1a88289b1;
				}
				_iter_end_1a88289b1:;
			};
		} else if (((*((*(*_94333_f.alloc)._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a4e7bda4_indent((*_self_.alloc)._field_oc);
			_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_94333_f.alloc)._field_Result);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a4e98d49_shouldInitialized(&((*_94333_f.alloc)._field_Result))) {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1a45a22bb_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_94333_f.alloc)._field_Result);
			};
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a4e64760_scopeStmts(_self_, &((*_94333_f.alloc)._field_Scope));
	if (((*(*_94333_f.alloc)._field_Decl.alloc)._field_Exceptional && _1a3e14854_IsVoid((*_94333_f.alloc)._field_Decl))) {
		_1a4e7bda4_indent((*_self_.alloc)._field_oc);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e5d4a1_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a427aa11_exprCoder> static__1a4589b99_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_1a427aa11_exprCoder>(_1a427aa11_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _1a4589d42_string(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1b289b651_Const>* _11527_c) {
	jule::Str _1169_content = _1b289d7c9_ReadStr((*(_11527_c)).ptr());;
	if ((_1169_content.len() == 0LL)) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1219_len = _1b288d2be_FmtInt(static_cast<jule::I64>(_1169_content.len()), 10LL);;
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1a45a30ad_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1169_content);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1219_len);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a456108d_boolean(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Bool _13027_b) {
	if (_13027_b) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a4561269_nilLit(jule::Ptr<_1a427aa11_exprCoder> _self_) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a455e597_ftoaSpecialCases(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::F64* _14237_x) {
	{
		
		if (_1b284266e_IsNaN((*(_14237_x)))) {
			_case_begin_1a884da91:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b2842d01_IsInf((*(_14237_x)), 1LL)) {
			_case_begin_1a884db3a:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b2842d01_IsInf((*(_14237_x)), -1LL)) {
			_case_begin_1a884dbb2:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a884da08:;
			{
				return false;;
			}
		}
		_match_end_1a884d909:;
	};
	return true;;
}



inline void _1a455e850_float32(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1b289b651_Const>* _15628_c) {
	jule::F64 _1579_x = _1b289e313_AsF64((*(_15628_c)).ptr());;
	if (_1a455e597_ftoaSpecialCases(_self_, &(_1579_x))) {
		return;;
	};
	{
		
		if ((_1579_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a8852cc6:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1579_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a8851d91:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a8851d2a:;
			{
				_1a45a3454_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1579_x, 32LL);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1a8851bd7:;
	};
}



inline void _1a4560686_float64(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1b289b651_Const>* _17528_c) {
	jule::F64 _1769_x = _1b289e313_AsF64((*(_17528_c)).ptr());;
	if (_1a455e597_ftoaSpecialCases(_self_, &(_1769_x))) {
		return;;
	};
	{
		
		if ((_1769_x == jule::MAX_F64)) {
			_case_begin_1a8855757:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1769_x == jule::MIN_F64)) {
			_case_begin_1a885537d:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a8855317:;
			{
				_1a45a3454_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1769_x, 64LL);
			}
		}
		_match_end_1a88551c4:;
	};
}



inline void _1a456093e_constant(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1b289b651_Const> _19332_c) {
	{
		
		if (_1b28a0dc5_IsStr(_19332_c.ptr())) {
			_case_begin_1a88575b1:;
			{
				_1a4589d42_string(_self_, &(_19332_c));
			}
		}
		else if (_1b28a0b3e_IsBool(_19332_c.ptr())) {
			_case_begin_1a8857627:;
			{
				_1a456108d_boolean(_self_, _1b289d543_ReadBool(_19332_c));
			}
		}
		else if (_1b28a115b_IsF64(_19332_c.ptr())) {
			_case_begin_1a885768d:;
			{
				{
					
					if ((*_19332_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1a885a053:;
						{
							_1a455e850_float32(_self_, &(_19332_c));
						}
					}
					else {
						_case_begin_1a8859bce:;
						{
							_1a4560686_float64(_self_, &(_19332_c));
						}
					}
					_match_end_1a8859ad0:;
				};
			}
		}
		else if (_1b28a0622_IsI64(_19332_c.ptr())) {
			_case_begin_1a8857704:;
			{
				_1a45a3740_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b289d026_ReadI64(_19332_c));
			}
		}
		else if (_1b28a08a8_IsU64(_19332_c.ptr())) {
			_case_begin_1a885776a:;
			{
				_1a45a3a2b_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b289d2ac_ReadU64(_19332_c));
			}
		}
		else if (_1b28a13e2_IsNil(_19332_c.ptr())) {
			_case_begin_1a88577d1:;
			{
				_1a4561269_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a885754a:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a885745c:;
	};
}



inline void _1a4595ea2_divByZeroBinary(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3db8198_Token>* _21736_op, jule::Ptr<_1a3e06170_OperandExprModel>* _21753_l, jule::Ptr<_1a3e06170_OperandExprModel>* _21780_r) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21736_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a885d221:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a885dbb1:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1a885db39:;
	};
	if ((!(_20ad69059_Production))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, _21736_op);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1a4597646_possibleRefExpr(_self_, (*((*(_21753_l))))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1a4597646_possibleRefExpr(_self_, (*((*(_21780_r))))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459625a_unsafeBinary(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0666a_BinaryExprModel> _23936_m) {
	if ((((*((*(_23936_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*_23936_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1a45a4411_isAny(&((*((*_23936_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1a405b00b_IsNil((*((*_23936_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1a45a4411_isAny(&((*(*_23936_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_23936_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24921_i = _1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, (*(*_23936_m.alloc)._field_Right.alloc)._field_Kind);;
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_24921_i));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1a4597646_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Left.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1a4597646_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Right.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Left.alloc)._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a4e7b502_write((*_self_.alloc)._field_oc, (*(*_23936_m.alloc)._field_Op.alloc)._field_Kind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a4597646_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Right.alloc)._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a4596513_binary(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0666a_BinaryExprModel> _27030_m) {
	{
		auto &_match_expr{ (*((*(_27030_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a886ed6a:;
			{
				if ((_1a405db02_Struct((*((*(_27030_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a4595ea2_divByZeroBinary(_self_, &((*_27030_m.alloc)._field_Op), &((*_27030_m.alloc)._field_Left), &((*_27030_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1a886ecb0:;
	};
	_1a459625a_unsafeBinary(_self_, _27030_m);
}



inline void _1a45967bb_var(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3ebac4b_Var> _28227_m) {
	if ((*(_28227_m))._field_Binded) {
		jule::Ptr<_1a3dcca70_Directive> _28413_d = _1a4e986b7_findDirective(&((*_28227_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28413_d != nullptr)) {
			_1a4e7b7aa_writeBytes((*(_self_))._field_oc, _1a4e88399_concatAllParts((*_28413_d.alloc)._field_Args));
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a45aa9ab_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28227_m);
}



inline void _1a4596a74_structureIns(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0226a_StructIns> _29336_m) {
	_1a4e8ecc9_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _29336_m);
}



inline void _1a4596d2c_unary(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e06a44_UnaryExprModel> _29729_m) {
	{
		auto &_match_expr{ (*((*(_29729_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a887590e:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1a4597646_possibleRefExpr(_self_, (*((*(_29729_m))._field_Expr))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a8875ee7:;
			{
				if ((_20ad69059_Production || (_1a405c815_Sptr((*((*(_29729_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1a8875e1a;
				};
				_1a4597646_possibleRefExpr(_self_, (*(*_29729_m.alloc)._field_Expr.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_29729_m.alloc)._field_Op));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1a8875e1a:;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a4e7b502_write((*_self_.alloc)._field_oc, (*((*(_29729_m))._field_Op))._field_Kind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr(_self_, (*((*_29729_m.alloc)._field_Expr))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1a45970d5_structureLit(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e07418_StructLitExprModel> _32136_m) {
	if ((*((*((*(_32136_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1a45aa3d4_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_32136_m.alloc)._field_Strct));
	if ((*(*(*_32136_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_32136_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1a8880b4a:;
		{
			auto expr = &((*(*_32136_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8880ce3:;
			if (it != expr_end) {
				jule::I64 _33417_i = it - expr->begin();
				jule::Ptr<_1a3e016ba_FieldIns> _33420_f = *it;
				{
					{
						auto expr = &((*_32136_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8881b3a:;
						if (it != expr_end) {
							jule::Ptr<_1a3e07072_StructArgExprModel> _33529_arg = *it;
							{
								if (((*(_33529_arg))._field_Field == _33420_f)) {
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1a45aa6c0_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_33529_arg.alloc)._field_Field))._field_Decl));
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1a4597646_possibleRefExpr(_self_, (*((*_33529_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_32136_m.alloc)._field_Strct.alloc)._field_Fields.len() - _33417_i) > 1LL)) {
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1a8880ce3;
								};
							}
							_iter_next_1a8881b3a:;
							++it;
							goto _iter_begin_1a8881b3a;
						}
						_iter_end_1a8881b3a:;
					};
				}
				_iter_next_1a8880ce3:;
				++it;
				_33417_i++;
				goto _iter_begin_1a8880ce3;
			}
			_iter_end_1a8880ce3:;
		};
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a459738d_allocStructure(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e07715_AllocStructLitExprModel> _35238_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a45aa3d4_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_35238_m))._field_Lit))._field_Strct));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1a45970d5_structureLit(_self_, (*_35238_m.alloc)._field_Lit);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a4597646_possibleRefExpr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Any _36035_expr) {
	{
		auto &_match_expr{ _36035_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8888e94:;
			{
				jule::Ptr<_1a3ebac4b_Var> _36313_v = _36035_expr.unsafe_cast_ptr<_1a3ebac4b_Var>();;
				if ((*(_36313_v))._field_Reference) {
					_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a45a2013_model(_self_, _36035_expr);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1a8888e3e:;
	};
	_1a45a2013_model(_self_, _36035_expr);
}



inline void _1a4597a64_castTraitFromTrait(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e07c98_CastingExprModel>* _37443_m, jule::Ptr<_1a3e276ad_Trait> _37469_t1, jule::Ptr<_1a3e276ad_Trait> _37485_t2) {
	_1a4597646_possibleRefExpr(_self_, (*((*((*(_37443_m))))._field_Expr))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
	static__1a45a9a21_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _37469_t1);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1a4e7d702_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _37469_t1, _37485_t2);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a4597d1c_casting(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e07c98_CastingExprModel> _38931_m) {
	{
		
		if (_1a45a4411_isAny(&((*(_38931_m))._field_Kind))) {
			_case_begin_1a888e6b4:;
			{
				if (_1a405b00b_IsNil((*_38931_m.alloc)._field_ExprKind.ptr())) {
					_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a405d0b8_TypeEnum((*_38931_m.alloc)._field_ExprKind) != nullptr)) {
					_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _40013_i = _1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, (*_38931_m.alloc)._field_ExprKind);;
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_38931_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a8892ab3:;
						{
							jule::Ptr<_1a4062a07_Prim> _40417_prim = _1a405c57e_Prim((*_38931_m.alloc)._field_ExprKind);;
							if (((_40417_prim != nullptr) && _1b289a9d5_IsInt((*_40417_prim.alloc)._field_Kind))) {
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1a4e8bd70_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _40417_prim);
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1a4597646_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1a88935a8;
							};
							goto _case_begin_1a889360d;
						}
					}
					else {
						_case_begin_1a889360d:;
						{
							_1a4597646_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1a88935a8:;
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_40013_i));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a45a4411_isAny(&((*(_38931_m))._field_ExprKind))) {
			_case_begin_1a888e75d:;
			{
				_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a405c815_Sptr((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a405c815_Sptr((*_38931_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20ad69059_Production))) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_38931_m.alloc)._field_Token));
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, (*_38931_m.alloc)._field_Kind)));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a405ca9b_Ptr((*(_38931_m))._field_ExprKind.ptr()) != nullptr) || (_1a405ca9b_Ptr((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a888e7c4:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a405dd88_Trait((*(_38931_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a888e83a:;
			{
				if ((_1a405dd88_Trait((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a4597a64_castTraitFromTrait(_self_, &(_38931_m), _1a405dd88_Trait((*_38931_m.alloc)._field_Kind), _1a405dd88_Trait((*_38931_m.alloc)._field_ExprKind));
					return;;
				};
				_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a405c815_Sptr((*_38931_m.alloc)._field_Kind) != nullptr)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a405c815_Sptr((*_38931_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20ad69059_Production))) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_38931_m.alloc)._field_Token));
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7d38e_findTypeOffset((*_self_.alloc)._field_oc, _1a405dd88_Trait((*_38931_m.alloc)._field_ExprKind), (*_38931_m.alloc)._field_Kind)));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a405dd88_Trait((*(_38931_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a888e8a1:;
			{
				_1a4e91a23_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_1a4e7d38e_findTypeOffset((*_self_.alloc)._field_oc, _1a405dd88_Trait((*_38931_m.alloc)._field_Kind), (*_38931_m.alloc)._field_ExprKind)));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1a888e53d:;
	};
	jule::Ptr<_1a4062a07_Prim> _4819_prim = _1a405c57e_Prim((*(_38931_m))._field_Kind.ptr());;
	jule::Ptr<_1a4062a07_Prim> _4829_eprim = _1a405c57e_Prim((*_38931_m.alloc)._field_ExprKind.ptr());;
	if ((((_4829_eprim != nullptr) && (_4819_prim != nullptr)) && _1a4065e8e_IsStr(_4819_prim))) {
		if (_1a40643ee_IsU8(_4829_eprim)) {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a4597646_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1a4597646_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a45980c5_models(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Slice<jule::Any> _50030_args) {
	if ((_50030_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50030_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a6203:;
		if (it != expr_end) {
			jule::I64 _50414_i = it - expr->begin();
			jule::Any _50421_a = *it;
			{
				_1a4597646_possibleRefExpr(_self_, _50421_a);
				if (((_50030_args.len() - _50414_i) > 1LL)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1a88a6203:;
			++it;
			_50414_i++;
			goto _iter_begin_1a88a6203;
		}
		_iter_end_1a88a6203:;
	};
}



inline void _1a459837d_args(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel>* _51229_m) {
	jule::I64 _51313_j = 0LL;;
	if (((((*((*((*(_51229_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_51229_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_51229_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a3e13028_IsSelf((*((*(*((*(_51229_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51313_j)++;
	};
	{
		auto expr = &((*((*(_51229_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a93c1:;
		if (it != expr_end) {
			jule::I64 _51813_i = it - expr->begin();
			jule::Any _51816_arg = *it;
			{
				jule::Ptr<_1a3e16339_ParamIns> _51913_p = (*(*((*(_51229_m))))._field_Func.alloc)._field_Params[_51313_j];;
				if ((((*(_51913_p))._field_Decl != nullptr) && (*(*_51913_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _51816_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a88ac193:;
							{
								jule::Ptr<_1a3ebac4b_Var> _52321_v = _51816_arg.unsafe_cast_ptr<_1a3ebac4b_Var>();;
								if ((*(_52321_v))._field_Reference) {
									_1a45a2013_model(_self_, _51816_arg);
									goto _julec_label_1a88abaee;
								};
							}
						}
						_match_end_1a88ac13d:;
					};
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a45a2013_model(_self_, _51816_arg);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1a88abaee;
				};
				_1a4597646_possibleRefExpr(_self_, _51816_arg);
				_julec_label_1a88abaee:;
				if ((((*((*(_51229_m))))._field_Args.len() - _51813_i) > 1LL)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_51313_j)++;
			}
			_iter_next_1a88a93c1:;
			++it;
			_51813_i++;
			goto _iter_begin_1a88a93c1;
		}
		_iter_end_1a88a93c1:;
	};
}



inline void _1a4598636_modelForCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Any _54336_expr) {
	{
		auto &_match_expr{ _54336_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a88b1e9a:;
			{
				_1a459bbab_funcIns(_self_, _54336_expr.unsafe_cast_ptr<_1a3e172d5_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a88b1ce1:;
			{
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _54917_ssie = _54336_expr.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>();;
				if (((*(_54917_ssie))._field_Method != nullptr)) {
					_1a459bbab_funcIns(_self_, (*_54917_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1a88b1e34:;
	};
	_1a4597646_possibleRefExpr(_self_, _54336_expr);
}



inline void _1a45988de_pushCallInf(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel>* _55832_m) {
	if ((_20ad69059_Production || (!((*((*((*(_55832_m))))._field_Func))._field_Anon)))) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_55832_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55832_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1a88b59a4:;
				{
					if ((*((*((*((*((*((*(_55832_m))))._field_Expr.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1a88b594e:;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*((*(_55832_m))))._field_Token));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55832_m))))._field_Args.len() != 0LL)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a4598c30_isWrapped(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel>* _58134_m) {
	if ((((!(_1a3e1876a_IsBuiltin((*((*(_58134_m))))._field_Func.ptr()))) && ((*((*(*((*(_58134_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a3e13028_IsSelf((*(*(*((*(_58134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_58134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1a88ba701:;
				{
					jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _58521_ssie = (*((*(_58134_m))))._field_Expr.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>();;
					{
						
						if (_1a3e132ae_IsRef((*(*(*((*(_58134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1a405c815_Sptr((*((*(_58521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a88bc390:;
							{
								goto _match_end_1a88bb636;
							}
						}
						else {
							_case_begin_1a88bb69c:;
							{
								if ((_1a405db02_Struct((*((*(_58521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_58521_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a45a2013_model(_self_, (*(*_58521_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1a88bb636:;
					};
				}
			}
			_match_end_1a88ba69b:;
		};
	};
	return false;;
}



inline jule::Bool _1a4599071_writeReceiver(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Any _60537_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _60537_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a88c1e99:;
			{
				_1a4597646_possibleRefExpr(_self_, (*((*(_60537_m.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1a88c21a8:;
			{
				_1a4597646_possibleRefExpr(_self_, (*((*((*(_60537_m.unsafe_cast_ptr<_1a4163a4d_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a88c2142:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:614:13"));;
			}
		}
		_match_end_1a88c20dc:;
	};
}



inline void _1a4599329_pureFuncCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel>* _61837_m) {
	jule::Bool _6199_wrapped = _1a4598c30_isWrapped(_self_, _61837_m);;
	_1a4598636_modelForCall(_self_, (*((*(_61837_m))))._field_Expr);
	if ((!(_1a3e1876a_IsBuiltin((*((*(_61837_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_61837_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a4e98a80_hasDirective(&((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a88c6278:;
					if (it != expr_end) {
						jule::I64 _62526_i = it - expr->begin();
						jule::Ptr<_1a4058547_InsGeneric> _62533_g = *it;
						{
							_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_62533_g))._field_Kind);
							if ((((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics.len() - _62526_i) > 1LL)) {
								_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1a88c6278:;
						++it;
						_62526_i++;
						goto _iter_begin_1a88c6278;
					}
					_iter_end_1a88c6278:;
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a45988de_pushCallInf(_self_, _61837_m);
	jule::Bool _63613_locinfo = false;;
	if ((((!(_1a3e1876a_IsBuiltin((*((*(_61837_m))))._field_Func))) && ((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a3e13028_IsSelf((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_61837_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1a88cb525:;
				{
					jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _64021_ssie = (*((*(_61837_m))))._field_Expr.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>();;
					{
						
						if (_1a3e132ae_IsRef((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1a88d0dcb:;
							{
								_1a4599071_writeReceiver(_self_, (*((*(_64021_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a405c815_Sptr((*((*(_64021_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a88cc5ae:;
							{
								jule::Bool _64721_safe = _1a4599071_writeReceiver(_self_, (*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_64721_safe) {
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_20ad69059_Production))) {
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*((*(_61837_m))))._field_Token));
										_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1a88cc548:;
							{
								if ((_1a405db02_Struct((*((*(_64021_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_64021_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1a88ccd1d:;
											{
												jule::Ptr<_1a3ebac4b_Var> _66129_v = (*((*(_64021_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
												if ((*(_66129_v))._field_Reference) {
													goto _match_end_1a88cd307;
												};
												goto _case_begin_1a88cd35c;
											}
										}
										else {
											_case_begin_1a88cd35c:;
											{
												_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1a88cd307:;
									};
								};
								if (_6199_wrapped) {
									_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a405ca9b_Ptr((*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1a45a2013_model(_self_, (*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1a4597646_possibleRefExpr(_self_, (*((*((*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1a88cc4d2:;
					};
					if (((*((*(_61837_m))))._field_Args.len() > 0LL)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1a88cb1b2:;
				{
					_1a4597646_possibleRefExpr(_self_, (*((*((*(_61837_m))))._field_Expr.unsafe_cast_ptr<_1a3e0a84a_TraitSubIdentExprModel>()))._field_Expr);
					if ((!(_20ad69059_Production))) {
						_63613_locinfo=true;
					};
					if (((*((*(_61837_m))))._field_Args.len() > 0LL)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1a88cb4ae:;
		};
	};
	_1a459837d_args(_self_, _61837_m);
	if (_63613_locinfo) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", \"", 3));
		_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*((*(_61837_m))))._field_Token));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6199_wrapped) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a45995d2_coFuncCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel>* _70635_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1c9754d1c_StrBuilder _70913_head = static__1c97550d6_New(32LL);;
	_1c975db28_WriteStr(&_70913_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_70635_m))))._field_Func))._field_Owner != nullptr)) {
		_1c975db28_WriteStr(&_70913_head, jule::Str::lit("_self_", 6));
		if (((*((*(_70635_m))))._field_Args.len() > 0LL)) {
			_1c975db28_WriteStr(&_70913_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_70635_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88e175a:;
		if (it != expr_end) {
			jule::I64 _71713_i = it - expr->begin();
			jule::Any _71716_arg = *it;
			{
				if ((_71713_i > 0LL)) {
					_1c975db28_WriteStr(&_70913_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _71716_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a88e2c12:;
						{
							jule::Ptr<_1a3ebac4b_Var> _72321_v = _71716_arg.unsafe_cast_ptr<_1a3ebac4b_Var>();;
							static__1a45aa9ab_var(&(_70913_head), _72321_v);
							goto _iter_next_1a88e175a;
						}
					}
					_match_end_1a88e24d6:;
				};
				jule::Str _72713_name = (jule::Str::lit("_co_arg_", 8) + _1b288d588_Itoa(_71713_i));;
				_1c975db28_WriteStr(&_70913_head, _72713_name);
				_1a4e7bda4_indent((*_self_.alloc)._field_oc);
				_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_70635_m))))._field_Func.alloc)._field_Params[_71713_i]))._field_Kind);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_70635_m))))._field_Func.alloc)._field_Params[_71713_i]))._field_Decl))._field_Reference) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, _72713_name);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1a4597646_possibleRefExpr(_self_, _71716_arg);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _73913_argS = jule::Any(_72713_name, &__jule_any_type4);;
				(*((*(_70635_m))))._field_Args[_71713_i]=(*(((jule::Any*)((&(_73913_argS))))));
			}
			_iter_next_1a88e175a:;
			++it;
			_71713_i++;
			goto _iter_begin_1a88e175a;
		}
		_iter_end_1a88e175a:;
	};
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1c975d870_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _1c975edc1_Buf(&_70913_head));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4599329_pureFuncCall(_self_, _70635_m);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a4599945_writeUseExpr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e172d5_FnIns>* _75737_f, jule::Ptr<_1a4028e63_Data> _75752_d) {
	if ((_1a405e3a5_Tup((*(_75752_d))._field_Kind.ptr()) == nullptr)) {
		_1a4597646_possibleRefExpr(_self_, (*_75752_d.alloc)._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a3e0bc58_TupleExprModel> _76313_tup = (*_75752_d.alloc)._field_Model.cast_ptr<_1a3e0bc58_TupleExprModel>(&__jule_any_type81);;
	_1a4e962ec_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a405e3a5_Tup((*((*(_75737_f))))._field_Result.ptr()));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_76313_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8906066:;
		if (it != expr_end) {
			jule::I64 _76613_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _76616_data = *it;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_76613_i));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1a4597646_possibleRefExpr(_self_, (*(_76616_data))._field_Model);
				if ((((*(_76313_tup))._field_Datas.len() - _76613_i) > 1LL)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a8906066:;
			++it;
			_76613_i++;
			goto _iter_begin_1a8906066;
		}
		_iter_end_1a8906066:;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1a4599bed_funcCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0864a_FnCallExprModel> _77832_m) {
	if ((*(_77832_m))._field_IsCo) {
		_1a45995d2_coFuncCall(_self_, &(_77832_m));
		return;;
	};
	if (((_1a3e1876a_IsBuiltin((*_77832_m.alloc)._field_Func.ptr()) || (!((*((*(*_77832_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_77832_m.alloc)._field_Except != nullptr) && ((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a4599329_pureFuncCall(_self_, &(_77832_m));
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1a4599329_pureFuncCall(_self_, &(_77832_m));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if (((*_77832_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_77832_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_77832_m.alloc)._field_Assigned)))) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a4e64a18_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_77832_m.alloc)._field_Except);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _80617_forwarded = _1a45a3e05_isForwarded(&((*_77832_m.alloc)._field_Except));;
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_80617_forwarded) {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _81121_stmt = (*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _81121_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1a8914b35:;
					{
						(*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts=(*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.slice(0LL, ((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL));
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
						_1a4e64760_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_77832_m.alloc)._field_Except));
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a4e7bda4_indent((*_self_.alloc)._field_oc);
						_1a4599945_writeUseExpr(_self_, &((*_77832_m.alloc)._field_Func), _81121_stmt.unsafe_cast_ptr<_1a4028e63_Data>());
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
						_1a4e7bda4_indent((*_self_.alloc)._field_oc);
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1a8916142:;
					{
						_1a4e64a18_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_77832_m.alloc)._field_Except);
					}
				}
				_match_end_1a89160dc:;
			};
			if (_80617_forwarded) {
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1a45a22bb_initExpr(_self_, (*(*_77832_m.alloc)._field_Func.alloc)._field_Result);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_77832_m.alloc)._field_Token));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a3e14854_IsVoid((*(*_77832_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1a4e7bda4_indent((*_self_.alloc)._field_oc);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	};
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a4599ea6_slice(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e08a24_SliceExprModel> _85129_m) {
	if (((*(_85129_m))._field_Elems.len() == 0LL)) {
		_1a4e8d756_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_85129_m.alloc)._field_ElemKind);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a4e8d756_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_85129_m.alloc)._field_ElemKind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1a45980c5_models(_self_, (*_85129_m.alloc)._field_Elems);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a459a25e_indexing(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e08eca_IndexingExprModel> _86332_m) {
	{
		auto &_match_expr{ (*((*(_86332_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a89277d5:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_20ad69059_Production))) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*(_86332_m))._field_Token));
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _87413_s = _1b289d7c9_ReadStr((*((*(_86332_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b289b651_Const>().ptr());;
				_1a45a30ad_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _87413_s);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_87413_s.len()));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1a4597646_possibleRefExpr(_self_, (*((*_86332_m.alloc)._field_Index))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1a8927780:;
	};
	_1a4597646_possibleRefExpr(_self_, (*((*_86332_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_20ad69059_Production || (_1a405ca9b_Ptr((*(*_86332_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a405e11e_Map((*(*_86332_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1a45a4147_isExprComesFromBind(&((*_86332_m.alloc)._field_Expr))) {
			_case_begin_1a8931558:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a4597646_possibleRefExpr(_self_, (*(*_86332_m.alloc)._field_Index.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1a892b069:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_86332_m.alloc)._field_Token));
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1a4597646_possibleRefExpr(_self_, (*(*_86332_m.alloc)._field_Index.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1a892de5c:;
	};
}



inline void _1a459a517_unsafeIndexing(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4162ac4_UnsafeIndexingExprModel> _90338_m) {
	_1a4597646_possibleRefExpr(_self_, (*((*((*(_90338_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_20ad69059_Production || (_1a405ca9b_Ptr((*(*(*_90338_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a405e11e_Map((*(*(*_90338_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1a8935381:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a4597646_possibleRefExpr(_self_, (*((*(*_90338_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1a893444b:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a4597646_possibleRefExpr(_self_, (*((*(*_90338_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1a8934eeb:;
	};
}



inline void _1a459a7c0_anonFunc(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e093a4_AnonFnExprModel> _92032_m) {
	_1a4e916b0_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_92032_m))._field_Func);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("([=]", 4));
	_1a4e83d12_paramsIns((*_self_.alloc)._field_oc, &((*((*_92032_m.alloc)._field_Func))._field_Params));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1a4e90ed9_funcInsResult((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_92032_m.alloc)._field_Func));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a4e64cc1_funcScope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_92032_m.alloc)._field_Func);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459aa78_mapExpr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e09c34_MapExprModel> _93131_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93131_m))._field_KeyKind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_93131_m.alloc)._field_ValKind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_93131_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_93131_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8942cb7:;
			if (it != expr_end) {
				jule::I64 _93818_i = it - expr->begin();
				jule::Ptr<_1a3e0977d_KeyValPairExprModel> _93825_pair = *it;
				{
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1a4597646_possibleRefExpr(_self_, (*(_93825_pair))._field_Key);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1a4597646_possibleRefExpr(_self_, (*_93825_pair.alloc)._field_Val);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_93131_m.alloc)._field_Entries.len() - _93818_i) > 1LL)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1a8942cb7:;
				++it;
				_93818_i++;
				goto _iter_begin_1a8942cb7;
			}
			_iter_end_1a8942cb7:;
		};
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a459ad31_slicing(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0a2b7_SlicingExprModel> _95231_m) {
	_1a4597646_possibleRefExpr(_self_, (*(_95231_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_20ad69059_Production))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_95231_m.alloc)._field_Token));
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a4597646_possibleRefExpr(_self_, (*_95231_m.alloc)._field_Left);
	if (((*_95231_m.alloc)._field_Right != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a4597646_possibleRefExpr(_self_, (*_95231_m.alloc)._field_Right);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459b0d9_traitSub(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0a84a_TraitSubIdentExprModel> _96832_m) {
	static__1a45a9a21_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_96832_m))._field_Trt);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("[(", 2));
	_1a4597646_possibleRefExpr(_self_, (*_96832_m.alloc)._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1a45a9449_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_96832_m.alloc)._field_Method));
}



inline void _1a459b392_structureSub(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _97736_m) {
	_1a4597646_possibleRefExpr(_self_, (*((*(_97736_m))._field_Expr))._field_Model);
	if (((*_97736_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a45aa6c0_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_97736_m.alloc)._field_Field))._field_Decl));
}



inline void _1a459b64a_array(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0b95b_ArrayExprModel> _98629_m) {
	_1a4e9013c_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_98629_m))._field_Kind);
	if (((*_98629_m.alloc)._field_Elems.len() == 0LL)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_98629_m.alloc)._field_Elems.len() == 2LL) && ((*_98629_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a4597646_possibleRefExpr(_self_, (*_98629_m.alloc)._field_Elems[0LL]);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1a45980c5_models(_self_, (*_98629_m.alloc)._field_Elems);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1a459b903_funcInsCommon(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e172d5_FnIns> _100937_m) {
	_1a4e916b0_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _100937_m);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a459bbab_funcIns(_self_, _100937_m);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459bbab_funcIns(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e172d5_FnIns> _101631_m) {
	if ((((*(_101631_m))._field_Decl != nullptr) && (*(*_101631_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a3dcca70_Directive> _101813_d = _1a4e986b7_findDirective(&((*(*_101631_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_101813_d != nullptr)) {
			_1a4e7b7aa_writeBytes((*(_self_))._field_oc, _1a4e88399_concatAllParts((*_101813_d.alloc)._field_Args));
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a45a9735_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_101631_m));
}



inline void _1a459be64_tuple(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0bc58_TupleExprModel> _102729_m) {
	{
		auto expr = &((*_102729_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a895bce2:;
		if (it != expr_end) {
			jule::I64 _102814_i = it - expr->begin();
			jule::Ptr<_1a4028e63_Data> _102821_d = *it;
			{
				_1a4597646_possibleRefExpr(_self_, (*(_102821_d))._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_102729_m))._field_Datas.len() - _102814_i) > 1LL)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a4e7bda4_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1a895bce2:;
			++it;
			_102814_i++;
			goto _iter_begin_1a895bce2;
		}
		_iter_end_1a895bce2:;
	};
}



inline void _1a459c21c_newCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0c8d5_BuiltinNewCallExprModel> _103831_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_103831_m))._field_Kind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_103831_m.alloc)._field_Init != nullptr)) {
		_1a4597646_possibleRefExpr(_self_, (*_103831_m.alloc)._field_Init);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459c4c5_outCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0c132_BuiltinOutCallExprModel> _104831_m) {
	if (((*(_104831_m))._field_Debug && _20ad69059_Production)) {
		return;;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a4597646_possibleRefExpr(_self_, (*_104831_m.alloc)._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459c77d_outlnCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0c50b_BuiltinOutlnCallExprModel> _105733_m) {
	if (((*(_105733_m))._field_Debug && _20ad69059_Production)) {
		return;;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a4597646_possibleRefExpr(_self_, (*_105733_m.alloc)._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459ca36_panicCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0ccae_BuiltinPanicCallExprModel> _106633_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a4597646_possibleRefExpr(_self_, (*(_106633_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_106633_m.alloc)._field_Token));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a459ccde_assertCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel> _107434_m) {
	if (_20ad69059_Production) {
		return;;
	};
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a4597646_possibleRefExpr(_self_, (*(_107434_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a45a30ad_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_107434_m.alloc)._field_Log);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a4e7d9aa_locInfo((*_self_.alloc)._field_oc, &((*_107434_m.alloc)._field_Token));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a459d097_errorCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0ed6b_BuiltinErrorCallExprModel> _108733_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a3e14854_IsVoid((*((*(_108733_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_108733_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a896d243:;
				{
					jule::Ptr<_1a3ebac4b_Var> _109217_v = (*((*(_108733_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
					if ((*(_109217_v))._field_Ident.equal("error", 5)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1a896d1dd:;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a4e969c3_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_108733_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_108733_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a89726a9:;
				{
					jule::Ptr<_1a3ebac4b_Var> _110417_v = (*((*(_108733_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>();;
					if ((*(_110417_v))._field_Ident.equal("error", 5)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1a8972654:;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a4597646_possibleRefExpr(_self_, (*((*(_108733_m))._field_Err))._field_Model);
	jule::I64 _11139_i = _1a4e7c536_pushAnyType((*_self_.alloc)._field_oc, (*(*_108733_m.alloc)._field_Err.alloc)._field_Kind);;
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_11139_i));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a459d350_copyCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0e992_BuiltinCopyCallExprModel> _111932_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1a4597646_possibleRefExpr(_self_, (*((*(_111932_m))._field_Dest))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((_1a405c57e_Prim((*(*_111932_m.alloc)._field_Dest.alloc)._field_Kind.ptr()) != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", (", 3));
	_1a4597646_possibleRefExpr(_self_, (*((*_111932_m.alloc)._field_Src))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((_1a405c57e_Prim((*(*_111932_m.alloc)._field_Src.alloc)._field_Kind) != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459d608_lenCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0dde2_BuiltinLenCallExprModel> _113531_m) {
	_1a4597646_possibleRefExpr(_self_, (*((*(_113531_m))._field_Expr))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a459d8b1_capCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0e1de_BuiltinCapCallExprModel> _114031_m) {
	_1a4597646_possibleRefExpr(_self_, (*((*(_114031_m))._field_Expr))._field_Model);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a459db69_deleteCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel> _114534_m) {
	_1a4597646_possibleRefExpr(_self_, (*((*(_114534_m))._field_Dest))._field_Model);
	if (((*_114534_m.alloc)._field_Key != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1a4597646_possibleRefExpr(_self_, (*(*_114534_m.alloc)._field_Key.alloc)._field_Model);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a459de22_makeCallSlice(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>* _115638_m) {
	jule::Ptr<_1a4067006_Slc> _115713_slice = _1a405d5d5_Slc((*((*(_115638_m))))._field_Kind.ptr());;
	_1a4e91a23_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_115638_m))))._field_Kind);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1a4597646_possibleRefExpr(_self_, (*((*(_115638_m))))._field_Len);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_115638_m))))._field_Cap != nullptr)) {
		_1a4597646_possibleRefExpr(_self_, (*((*(_115638_m))))._field_Cap);
	} else {
		_1a4597646_possibleRefExpr(_self_, (*((*(_115638_m))))._field_Len);
	};
	if (_1a4e98d49_shouldInitialized(&((*(_115713_slice))._field_Elem))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a45a22bb_initExpr(_self_, (*_115713_slice.alloc)._field_Elem);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459e1ca_makeCallStr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel>* _117436_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1a4597646_possibleRefExpr(_self_, (*((*(_117436_m))))._field_Len);
	if (((*((*(_117436_m))))._field_Cap != nullptr)) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a4597646_possibleRefExpr(_self_, (*((*(_117436_m))))._field_Cap);
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a459e483_makeCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel> _118532_m) {
	if ((_1a405d5d5_Slc((*(_118532_m))._field_Kind.ptr()) != nullptr)) {
		_1a459de22_makeCallSlice(_self_, &(_118532_m));
		return;;
	};
	_1a459e1ca_makeCallStr(_self_, &(_118532_m));
}



inline void _1a459e73b_pushToSlice(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4162e9d_PushToSliceExprModel> _119335_m) {
	;
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a4e8d756_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_119335_m))._field_Elems))._field_ElemKind);
	jule::Bool _120113_ptr = false;;
	{
		auto &_match_expr{ (*(_119335_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a898c9e3:;
			{
				jule::Ptr<_1a3e06a44_UnaryExprModel> _120517_u = (*(_119335_m))._field_Dest.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>();;
				if ((_1a405ca9b_Ptr((*((*(_120517_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a4597646_possibleRefExpr(_self_, (*(*_120517_u.alloc)._field_Expr.alloc)._field_Model);
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_120113_ptr=true;
					goto _match_end_1a898e73c;
				};
				goto _case_begin_1a898e792;
			}
		}
		else {
			_case_begin_1a898e792:;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a4597646_possibleRefExpr(_self_, (*_119335_m.alloc)._field_Dest);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1a898e73c:;
	};
	if (((*(*_119335_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_120113_ptr) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a4597646_possibleRefExpr(_self_, (*(*_119335_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_120113_ptr) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa((*(*_119335_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_119335_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a899747b:;
		if (it != expr_end) {
			jule::Any _123921_e = *it;
			{
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_120113_ptr) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a4597646_possibleRefExpr(_self_, _123921_e);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1a899747b:;
			++it;
			goto _iter_begin_1a899747b;
		}
		_iter_end_1a899747b:;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a459e9e4_appendToSlice(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4163377_AppendToSliceExprModel> _125337_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr(_self_, (*(_125337_m))._field_Dest);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1a4597646_possibleRefExpr(_self_, (*_125337_m.alloc)._field_Slice);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1a459ec9c_appendCall(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0dae5_BuiltinAppendCallExprModel> _126134_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a4597646_possibleRefExpr(_self_, (*(_126134_m))._field_Dest);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1a4597646_possibleRefExpr(_self_, (*_126134_m.alloc)._field_Elements);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a45a0055_sizeof(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e10520_SizeofExprModel> _126930_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a4597646_possibleRefExpr(_self_, (*(_126930_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a45a030d_alignof(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e1070c_AlignofExprModel> _127531_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a4597646_possibleRefExpr(_self_, (*(_127531_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a45a05b6_runeLit(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e109a4_RuneExprModel> _128127_m) {
	if (((*(_128127_m))._field_Code <= 127LL)) {
		_1c975ddd1_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _128417_b = _1a45a2992_sbtoa(static_cast<jule::U8>((*_128127_m.alloc)._field_Code));;
		if (_128417_b.equal("'", 1)) {
			_1c975ddd1_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_1c975db28_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _128417_b);
		_1c975ddd1_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a45a3740_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_128127_m.alloc)._field_Code));
}



inline void _1a45a086e_structureStatic(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e0b582_StructStaticIdentExprModel> _129539_m) {
	static__1a45a9735_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_129539_m))._field_Method));
}



inline void _1a45a0b27_integratedToStr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e10ca1_IntegratedToStrExprModel> _129939_m) {
	_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a4597646_possibleRefExpr(_self_, (*(_129939_m))._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a45a0dd0_backendEmit(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e1117a_BackendEmitExprModel> _130535_m) {
	if (((*(_130535_m))._field_Exprs.len() == 0LL)) {
		_1a4e7b502_write((*(_self_))._field_oc, (*_130535_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _13109_n = _1c975e8a4_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _131113_args = jule::Slice<jule::Any>::alloc((*_130535_m.alloc)._field_Exprs.len(), (*_130535_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_130535_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89a9a98:;
		if (it != expr_end) {
			jule::I64 _131214_i = it - expr->begin();
			jule::Any _131221_expr = *it;
			{
				_1a4597646_possibleRefExpr(_self_, _131221_expr);
				jule::Slice<jule::U8> _131417_buf = _1c975edc1_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_131113_args[_131214_i]=jule::Any(static_cast<jule::Str>(_131417_buf.slice(_13109_n)), &__jule_any_type4);
				{
					_1c9760179_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _131417_buf.slice(0LL, _13109_n));
				};
			}
			_iter_next_1a89a9a98:;
			++it;
			_131214_i++;
			goto _iter_begin_1a89a9a98;
		}
		_iter_end_1a89a9a98:;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1a414d73b_Format((*_130535_m.alloc)._field_Code, _131113_args));
}



inline void _1a45a1188_free(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a3e11477_FreeExprModel> _132128_m) {
	_1a4597646_possibleRefExpr(_self_, (*(_132128_m))._field_Expr);
	if (_20ad6894e_RC) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a45a1441_strComp(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4161dae_StrCompExprModel> _133031_m) {
	if ((*(_133031_m))._field_NotEq) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13349_s = _1b289d7c9_ReadStr((*_133031_m.alloc)._field_Right.ptr());;
	_1a4597646_possibleRefExpr(_self_, (*_133031_m.alloc)._field_Left);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1a45a30ad_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13349_s);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_13349_s.len()));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_133031_m.alloc)._field_NotEq) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a45a16e9_emptyCompare(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a41615b7_EmptyCompareExprModel> _134636_m) {
	if ((*(_134636_m))._field_Neg) {
		_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a4597646_possibleRefExpr(_self_, (*_134636_m.alloc)._field_Expr);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a45a19a2_unsafeDeref(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4163a4d_UnsafeDerefExprModel> _135535_m) {
	{
		
		if ((_1a405c815_Sptr((*((*((*(_135535_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89b8634:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a4597646_possibleRefExpr(_self_, (*(*(*_135535_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1a89b81a0:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1362:13"));;
			}
		}
		_match_end_1a89b80a1:;
	};
}



inline void _1a45a1c5a_unsafeCasting(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4163d4a_UnsafeCastingExprModel> _136637_m) {
	{
		
		if (_1a45a4411_isAny(&((*((*(_136637_m))._field_Base))._field_ExprKind))) {
			_case_begin_1a89bb2d5:;
			{
				_1a4597646_possibleRefExpr(_self_, (*((*(*_136637_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a405c815_Sptr((*(*_136637_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a405c815_Sptr((*(*_136637_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_136637_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1a89bad51:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1379:13"));;
			}
		}
		_match_end_1a89bac52:;
	};
}



inline void _1a45a2013_model(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Any _138329_m) {
	{
		auto &_match_expr{ _138329_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a89c18d4:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, _138329_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a89c1a7c:;
			{
				_1a4e91a23_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _138329_m.unsafe_cast_ptr<_1a4059e2d_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a89c1ae3:;
			{
				_1a456093e_constant(_self_, _138329_m.unsafe_cast_ptr<_1b289b651_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a89c1b59:;
			{
				_1a45967bb_var(_self_, _138329_m.unsafe_cast_ptr<_1a3ebac4b_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a89c1bc0:;
			{
				_1a4596a74_structureIns(_self_, _138329_m.unsafe_cast_ptr<_1a3e0226a_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a89c1c36:;
			{
				_1a459b903_funcInsCommon(_self_, _138329_m.unsafe_cast_ptr<_1a3e172d5_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1a89c1c9c:;
			{
				_1a459625a_unsafeBinary(_self_, (*(_138329_m.unsafe_cast_ptr<_1a416273e_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a89c28d5:;
			{
				_1a4596513_binary(_self_, _138329_m.unsafe_cast_ptr<_1a3e0666a_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a89c294b:;
			{
				_1a4596d2c_unary(_self_, _138329_m.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a89c29b2:;
			{
				_1a45970d5_structureLit(_self_, _138329_m.unsafe_cast_ptr<_1a3e07418_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a89c2a28:;
			{
				_1a459738d_allocStructure(_self_, _138329_m.unsafe_cast_ptr<_1a3e07715_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a89c2a8e:;
			{
				_1a4597d1c_casting(_self_, _138329_m.unsafe_cast_ptr<_1a3e07c98_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a89c2b05:;
			{
				_1a4599bed_funcCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0864a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a89c2b6b:;
			{
				_1a4599ea6_slice(_self_, _138329_m.unsafe_cast_ptr<_1a3e08a24_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a89c2be3:;
			{
				_1a459b64a_array(_self_, _138329_m.unsafe_cast_ptr<_1a3e0b95b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1a89c2c6a:;
			{
				_1a459a517_unsafeIndexing(_self_, _138329_m.unsafe_cast_ptr<_1a4162ac4_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a89c2ce2:;
			{
				_1a459a25e_indexing(_self_, _138329_m.unsafe_cast_ptr<_1a3e08eca_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a89c2d69:;
			{
				_1a459a7c0_anonFunc(_self_, _138329_m.unsafe_cast_ptr<_1a3e093a4_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a89c2de1:;
			{
				_1a459aa78_mapExpr(_self_, _138329_m.unsafe_cast_ptr<_1a3e09c34_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a89c2e68:;
			{
				_1a459ad31_slicing(_self_, _138329_m.unsafe_cast_ptr<_1a3e0a2b7_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a89c2ee0:;
			{
				_1a459b0d9_traitSub(_self_, _138329_m.unsafe_cast_ptr<_1a3e0a84a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a89c3067:;
			{
				_1a459b392_structureSub(_self_, _138329_m.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a89c30de:;
			{
				_1a459be64_tuple(_self_, _138329_m.unsafe_cast_ptr<_1a3e0bc58_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a89c3166:;
			{
				_1a459c4c5_outCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0c132_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a89c31dd:;
			{
				_1a459c77d_outlnCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a89c3265:;
			{
				_1a459c21c_newCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0c8d5_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a89c32dc:;
			{
				_1a459ca36_panicCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0ccae_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a89c3364:;
			{
				_1a459ccde_assertCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0d265_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a89c33db:;
			{
				_1a459d097_errorCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a89c3463:;
			{
				_1a459e483_makeCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0d71b_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a89c34da:;
			{
				_1a459ec9c_appendCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a89c3562:;
			{
				_1a459d350_copyCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0e992_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a89c35d9:;
			{
				_1a459d608_lenCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0dde2_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a89c3661:;
			{
				_1a459d8b1_capCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0e1de_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a89c36d8:;
			{
				_1a459db69_deleteCall(_self_, _138329_m.unsafe_cast_ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a89c3760:;
			{
				_1a45a0055_sizeof(_self_, _138329_m.unsafe_cast_ptr<_1a3e10520_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a89c37d7:;
			{
				_1a45a030d_alignof(_self_, _138329_m.unsafe_cast_ptr<_1a3e1070c_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a89c385e:;
			{
				_1a45a05b6_runeLit(_self_, _138329_m.unsafe_cast_ptr<_1a3e109a4_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a89c38d6:;
			{
				_1a45a086e_structureStatic(_self_, _138329_m.unsafe_cast_ptr<_1a3e0b582_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a89c395d:;
			{
				_1a45a0b27_integratedToStr(_self_, _138329_m.unsafe_cast_ptr<_1a3e10ca1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a89c39d5:;
			{
				_1a45a0dd0_backendEmit(_self_, _138329_m.unsafe_cast_ptr<_1a3e1117a_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a89c3a5c:;
			{
				_1a45a1188_free(_self_, _138329_m.unsafe_cast_ptr<_1a3e11477_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1a89c3ad4:;
			{
				_1a45a1441_strComp(_self_, _138329_m.unsafe_cast_ptr<_1a4161dae_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1a89c3b5b:;
			{
				_1a45967bb_var(_self_, (*(_138329_m.unsafe_cast_ptr<_1a416193b_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a89c3bd3:;
			{
				_1a45a16e9_emptyCompare(_self_, _138329_m.unsafe_cast_ptr<_1a41615b7_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1a89c3c5a:;
			{
				_1a45a19a2_unsafeDeref(_self_, _138329_m.unsafe_cast_ptr<_1a4163a4d_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1a89c3cd2:;
			{
				_1a45a1c5a_unsafeCasting(_self_, _138329_m.unsafe_cast_ptr<_1a4163d4a_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1a89c1a16:;
			{
				_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1a89bba55:;
	};
}



inline void _1a45a22bb_initExpr(jule::Ptr<_1a427aa11_exprCoder> _self_, jule::Ptr<_1a4059e2d_TypeKind> _148432_t) {
	if (_1a405bccb_NilCompatible(_148432_t.ptr())) {
		if ((_1a405ca9b_Ptr(_148432_t) != nullptr)) {
			_1a4e7b502_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a4e91a23_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _148432_t);
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a4067aea_Tuple> _149413_tup = _1a405e3a5_Tup(_148432_t);;
	if ((_149413_tup != nullptr)) {
		_1a4e962ec_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _149413_tup);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_149413_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a89e244e:;
			if (it != expr_end) {
				jule::I64 _149818_i = it - expr->begin();
				jule::Ptr<_1a4059e2d_TypeKind> _149825_tt = *it;
				{
					if ((!(_1a4e98d49_shouldInitialized(&(_149825_tt))))) {
						goto _iter_next_1a89e244e;
					};
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a4e7b502_write((*_self_.alloc)._field_oc, _1b288d588_Itoa(_149818_i));
					_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1a45a22bb_initExpr(_self_, _149825_tt);
					if ((((*_149413_tup.alloc)._field_Types.len() - _149818_i) > 1LL)) {
						_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1a89e244e:;
				++it;
				_149818_i++;
				goto _iter_begin_1a89e244e;
			}
			_iter_end_1a89e244e:;
		};
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a3e29db9_Enum> _151313_enm = _1a405cd32_Enum(_148432_t);;
	if ((_151313_enm != nullptr)) {
		_1a45a2013_model(_self_, (*((*((*((*_151313_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _15189_prim = _1a405c57e_Prim(_148432_t);;
	if ((_15189_prim != nullptr)) {
		if (_1b289b0ac_IsNum((*_15189_prim.alloc)._field_Kind)) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1a4065c08_IsBool(_15189_prim)) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1a4065e8e_IsStr(_15189_prim)) {
			_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a405d34e_Arr(_148432_t) != nullptr)) {
		jule::Ptr<_1a4069327_Arr> _153017_arr = _1a405d34e_Arr(_148432_t);;
		_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _148432_t);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a45a22bb_initExpr(_self_, (*(_153017_arr))._field_Elem);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _153713_s = _1a405db02_Struct(_148432_t);;
	if ((((_153713_s != nullptr) && (*((*_153713_s.alloc)._field_Decl))._field_Binded) && (_1a4e986b7_findDirective(&((*(*_153713_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _148432_t);
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a4e91a23_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _148432_t);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a427aa11_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a45a5500_TestCoder> static__1a45a5973_New(jule::Ptr<_1a4e7ad4d_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1a45a5500_TestCoder>(_1a45a5500_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a45a5c09_findTestingPackage(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a021b7:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1a8a021b7:;
			++it;
			goto _iter_begin_1a8a021b7;
		}
		_iter_end_1a8a021b7:;
	};
	return nullptr;;
}



inline void _1a45a5eb2_appendTest(jule::Ptr<_1a45a5500_TestCoder> _self_, jule::Ptr<_1a3e172d5_FnIns> _4434_f) {
	_1a4e7bda4_indent((*(_self_))._field_oc);
	_1a45a66ee_callTmReset(_self_);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a45a30ad_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	static__1a45a9735_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a45a626a_appendPackageTests(jule::Ptr<_1a45a5500_TestCoder> _self_, jule::Ptr<_1a3e7a986_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a08982:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a093de:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _6125_f = *it;
						{
							if (_1a4e98a80_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a45a5eb2_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1a8a093de:;
						++it;
						goto _iter_begin_1a8a093de;
					}
					_iter_end_1a8a093de:;
				};
			}
			_iter_next_1a8a08982:;
			++it;
			goto _iter_begin_1a8a08982;
		}
		_iter_end_1a8a08982:;
	};
}



inline jule::Bool _1a45a6501_readyTestingPackage(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	jule::Ptr<_1a3e77a60_ImportInfo> _7013_p = _1a45a5c09_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1a3e78c3c_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1a3e032d2_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a3e032d2_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a3e032d2_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a45a66ee_callTmReset(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	static__1a45a9449_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a45a68ec_callTmFailed(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	static__1a45a9449_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a45a6aea_callTmSkipped(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	static__1a45a9449_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a45a6ce8_Serialize(jule::Ptr<_1a45a5500_TestCoder> _self_) {
	_1a4e879a3_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a4e877a5_end((*_self_.alloc)._field_oc);
	});;
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	if ((!(_1a45a6501_readyTestingPackage(_self_)))) {
		_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_1c9754d1c_StrBuilder _11813_tb = static__1c97550d6_New(40LL);;
	_1a4e8ecc9_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1a4e8c546_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1c975edc1_Buf(&_11813_tb));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a4e7b7aa_writeBytes((*_self_.alloc)._field_oc, _1c975edc1_Buf(&_11813_tb));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a4e7b9a8_addIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1a45a68ec_callTmFailed(_self_);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1a45a6aea_callTmSkipped(_self_);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1a45a626a_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a4e7bba6_doneIndent((*_self_.alloc)._field_oc);
	_1a4e7bda4_indent((*_self_.alloc)._field_oc);
	_1a4e7b502_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a45a5500_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1a45a8866_writeIdentTo(_1c9754d1c_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a23c99:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1a8a24e21;
				};
			}
			_iter_next_1a8a23c99:;
			++it;
			goto _iter_begin_1a8a23c99;
		}
		_iter_end_1a8a23c99:;
	};
	_1c975db28_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1a8a24e21:;
	{
		auto expr = _3451_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4516_r;
		_iter_begin_1a8a25240:;
		std::tie(_4516_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4516_r < 128LL)) {
					_1c975ddd1_WriteByte(_3433_buf, static_cast<jule::U8>(_4516_r));
					goto _iter_next_1a8a25240;
				};
				_1c975db28_WriteStr(_3433_buf, _1b288d2be_FmtInt(static_cast<jule::I64>(_4516_r), 15LL));
			}
			_iter_next_1a8a25240:;
			it += len;
			goto _iter_begin_1a8a25240;
		}
	};
}



inline void static__1a45a8c0c_toOut(_1c9754d1c_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_1c975ddd1_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_1c975db28_WriteStr(_6226_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_6255_addr), 15LL));
		_1c975ddd1_WriteByte(_6226_buf, '_');
	};
	static__1a45a8866_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1a45a915d_toLocal(_1c9754d1c_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_1c975ddd1_WriteByte(_7728_buf, '_');
	_1c975db28_WriteStr(_7728_buf, _1b288d588_Itoa(_7745_row));
	_1c975db28_WriteStr(_7728_buf, _1b288d588_Itoa(_7755_col));
	_1c975ddd1_WriteByte(_7728_buf, '_');
	static__1a45a8866_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1a45a9449_func(_1c9754d1c_StrBuilder* _8525_buf, jule::Ptr<_1a3e143d1_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1a8a29aa2:;
			{
				_1c975db28_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1a8a29b4b:;
			{
				_1c975db28_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a3e14ada_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1a8a29bb2:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_1c975db28_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1a8a2994d:;
	};
	static__1a45a8c0c_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8543_f))));
}



inline void static__1a45a9735_funcIns(_1c9754d1c_StrBuilder* _10128_buf, jule::Ptr<_1a3e172d5_FnIns>* _10146_f) {
	if (_1a3e1876a_IsBuiltin((*(_10146_f)).ptr())) {
		_1c975db28_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_1c975db28_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10146_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1a45a9449_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1a45a8c0c_toOut(_10128_buf, (*(*((*(_10146_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10146_f))));
}



inline void static__1a45a9a21_traitDecl(_1c9754d1c_StrBuilder* _11630_buf, jule::Ptr<_1a3e276ad_Trait> _11647_t) {
	static__1a45a8c0c_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(_11647_t));
}



inline void static__1a45a9d0c_param(_1c9754d1c_StrBuilder* _12026_buf, jule::Ptr<_1a3e1290c_Param>* _12044_p) {
	if ((_1a3dbad49_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1a3dbaa80_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1a3e13028_IsSelf((*(_12044_p)).ptr())) {
		_1c975db28_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1a45a915d_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1a45a915d_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1a45aa0e8_structure(_1c9754d1c_StrBuilder* _13530_buf, jule::Ptr<_1a3dee4dc_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1a4e98a80_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1c975db28_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_1c975db28_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1a45a8c0c_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13548_s))));
}



inline void static__1a45aa3d4_structureIns(_1c9754d1c_StrBuilder* _14633_buf, jule::Ptr<_1a3e0226a_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1a45aa0e8_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1a45a8c0c_toOut(_14633_buf, (*(*((*(_14651_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14651_s))));
}



inline void static__1a45aa6c0_field(_1c9754d1c_StrBuilder* _15426_buf, jule::Ptr<_1a3deb5b6_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_1c975db28_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_1c975db28_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1a45a8866_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1a45aa9ab_var(_1c9754d1c_StrBuilder* _16424_buf, jule::Ptr<_1a3ebac4b_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1a8a3831e:;
			{
				_1c975db28_WriteStr(_16424_buf, (*_16445_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1a8a38385:;
			{
				_1c975db28_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1a8a383eb:;
			{
				_1c975db28_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1a8a38462:;
			{
				_1c975db28_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1a8a384c8:;
			{
				_1c975db28_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1c975db28_WriteStr(_16424_buf, _1b288d588_Itoa((*_16445_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1a8a3853e:;
			{
				static__1a45a915d_toLocal(_16424_buf, (*((*_16445_v.alloc)._field_Token))._field_Row, (*(*_16445_v.alloc)._field_Token.alloc)._field_Column, &((*_16445_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1a8a382a8:;
			{
				static__1a45a8c0c_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(_16445_v));
			}
		}
		_match_end_1a8a381a9:;
	};
}



inline void static__1a45aac97_iterBegin(_1c9754d1c_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_1c975db28_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_1c975db28_WriteStr(_18630_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_18647_it), 15LL));
}



inline void static__1a45ab083_iterEnd(_1c9754d1c_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_1c975db28_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_1c975db28_WriteStr(_19128_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_19145_it), 15LL));
}



inline void static__1a45ab36e_iterNext(_1c9754d1c_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_1c975db28_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_1c975db28_WriteStr(_19629_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_19646_it), 15LL));
}



inline void static__1a45ab65a_label(_1c9754d1c_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_1c975db28_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_1c975db28_WriteStr(_20126_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_20143_u), 15LL));
}



inline void static__1a45ab946_matchEnd(_1c9754d1c_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_1c975db28_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_1c975db28_WriteStr(_20629_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_20646_m), 15LL));
}



inline void static__1a45abc32_caseBegin(_1c9754d1c_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_1c975db28_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_1c975db28_WriteStr(_21130_buf, _1b288ce06_FmtUint(static_cast<jule::U64>(_21147_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1a45a835a_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e79335_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e7990c_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e79cd6_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a4e8a8da_Str(_1a4e8a555_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a4e8ac2b_Equal(jule::Ptr<_1a4e8a555_customType> _self_, jule::Ptr<_1a4059e2d_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e8a555_customType _Src) {
	_Stream << _1a4e8a8da_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a4e8b15a_typeCoder> static__1a4e8b699_new(jule::Ptr<_1a4e7ad4d_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1a4e8b15a_typeCoder> _6713_tc = jule::new_ptr<_1a4e8b15a_typeCoder>(_1a4e8b15a_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1a4e94916_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1a4e8ba0c_toType(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_1b2890700_RealKindOf(_7351_id);
	};
	_1c975db28_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_1c975ddd1_WriteByte(_7330_buf, (_7351_id[0LL] - 32LLU));
	} else {
		_1c975ddd1_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_1c975db28_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1a4e8bd70_prim(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _8728_buf, jule::Ptr<_1a4062a07_Prim> _8745_p) {
	_1a4e8ba0c_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1a4e8c1d3_tuple(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _9229_buf, jule::Ptr<_1a4067aea_Tuple> _9250_t) {
	_1c975db28_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9250_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b087c9:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1a4059e2d_TypeKind> _9421_tk = *it;
			{
				_1a4e91a23_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_1c975ddd1_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1a8b087c9:;
			++it;
			_9414_i++;
			goto _iter_begin_1a8b087c9;
		}
		_iter_end_1a8b087c9:;
	};
	_1c975ddd1_WriteByte(_9229_buf, '>');
}



inline void _1a4e8c546_asSptr(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_1c975db28_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_1c975d870_Write(_10430_buf, _10447_elem);
	_1c975ddd1_WriteByte(_10430_buf, '>');
}



inline void _1a4e8c8a9_sptr(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _11128_buf, jule::Ptr<_1a4066533_Sptr> _11149_sptr) {
	_1c975db28_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a4e91a23_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_1c975ddd1_WriteByte(_11128_buf, '>');
}



inline void _1a4e8cc1c_ptr(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _11827_buf, jule::Ptr<_1a4069cea_Ptr> _11848_p) {
	;
	if (_1a406a834_IsUnsafe(_11848_p.ptr())) {
		_1c975db28_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1a4e91a23_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_1c975db28_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a4e8d080_enumDecl(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _12932_buf, jule::Ptr<_1a3e29db9_Enum> _12953_e) {
	_1a4e91a23_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1a4e8d3e3_typeEnumDecl(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _13436_buf, jule::Ptr<_1a3e2b5c4_TypeEnum> _13457_e) {
	_1c975db28_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a4e8d756_asSlice(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _13831_buf, jule::Ptr<_1a4059e2d_TypeKind> _13852_elem) {
	_1c975db28_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1a4e91a23_kind(_self_, _13831_buf, _13852_elem);
	_1c975ddd1_WriteByte(_13831_buf, '>');
}



inline void _1a4e8dab9_slice(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _14529_buf, jule::Ptr<_1a4067006_Slc> _14550_s) {
	_1a4e8d756_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1a4e8de2c_mapType(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _15031_buf, jule::Ptr<_1a406869a_Map> _15052_m) {
	_1c975db28_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1a4e91a23_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_1c975ddd1_WriteByte(_15031_buf, ',');
	_1a4e91a23_kind(_self_, _15031_buf, (*_15052_m.alloc)._field_Val);
	_1c975ddd1_WriteByte(_15031_buf, '>');
}



inline void _1a4e8e603_traitDecl(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _16533_buf, jule::Ptr<_1a3e276ad_Trait> _16550_t) {
	_1c975db28_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1a45a9a21_traitDecl(_16533_buf, _16550_t);
	_1c975ddd1_WriteByte(_16533_buf, '>');
}



inline void _1a4e8e966_structure(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _17233_buf, jule::Ptr<_1a3dee4dc_Struct> _17250_s) {
	static__1a45aa0e8_structure(_17233_buf, &(_17250_s));
}



inline void _1a4e8ecc9_structureIns(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _17736_buf, jule::Ptr<_1a3e0226a_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1a45aa3d4_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1a3dcca70_Directive> _1829_d = _1a4e986b7_findDirective(&((*(*_17757_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_1c975d870_Write(_17736_buf, _1a4e88399_concatAllParts((*_1829_d.alloc)._field_Args));
		_1c975db28_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1a45aa3d4_structureIns(_17736_buf, &(_17757_s));
	if (((*_17757_s.alloc)._field_Generics.len() > 0LL)) {
		_1c975ddd1_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*_17757_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8b17d8d:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> _19025_g = *it;
				{
					_1a4e91a23_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*_17757_s.alloc)._field_Generics.len() - _19018_i) > 1LL)) {
						_1c975ddd1_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1a8b17d8d:;
				++it;
				_19018_i++;
				goto _iter_begin_1a8b17d8d;
			}
			_iter_end_1a8b17d8d:;
		};
		_1c975ddd1_WriteByte(_17736_buf, '>');
	};
}



inline void _1a4e9013c_array(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _20129_buf, jule::Ptr<_1a4069327_Arr> _20150_a) {
	_1c975db28_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1a4e91a23_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_1c975ddd1_WriteByte(_20129_buf, ',');
	_1c975db28_WriteStr(_20129_buf, _1b288d588_Itoa((*_20150_a.alloc)._field_N));
	_1c975ddd1_WriteByte(_20129_buf, '>');
}



inline void _1a4e90813_paramIns(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _22432_buf, jule::Ptr<_1a3e16339_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_1c975db28_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1a4e91a23_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_1c975ddd1_WriteByte(_22432_buf, '>');
	} else {
		_1a4e91a23_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_1c975ddd1_WriteByte(_22432_buf, '*');
	};
}



inline void _1a4e90ed9_funcInsResult(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _25637_s, jule::Ptr<_1a3e172d5_FnIns>* _25657_f) {
	if (_1a3e14854_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
			_1c975db28_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1c975db28_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
		_1c975db28_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a4e969c3_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_1c975ddd1_WriteByte(_25637_s, '>');
		return;;
	};
	_1a4e969c3_codeMut1((*(_self_))._field_rc, _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1a4e9134c_anonFunc(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _27432_buf, jule::Ptr<_1a3e172d5_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1a405e3a5_Tup((*_27453_f.alloc)._field_Result) != nullptr))) {
		_1a4e7c7de_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1a4e90ed9_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_1c975ddd1_WriteByte(_27432_buf, '(');
	if (((*_27453_f.alloc)._field_Params.len() > 0LL)) {
		{
			auto expr = &((*_27453_f.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8b294a9:;
			if (it != expr_end) {
				jule::I64 _28118_i = it - expr->begin();
				jule::Ptr<_1a3e16339_ParamIns> _28125_param = *it;
				{
					if (_1a3e13028_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1a8b294a9;
					};
					_1a4e90813_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*_27453_f.alloc)._field_Params.len() - _28118_i) > 1LL)) {
						_1c975ddd1_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1a8b294a9:;
				++it;
				_28118_i++;
				goto _iter_begin_1a8b294a9;
			}
			_iter_end_1a8b294a9:;
		};
	} else {
		_1c975db28_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_1c975ddd1_WriteByte(_27432_buf, ')');
}



inline void _1a4e916b0_func(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _29728_buf, jule::Ptr<_1a3e172d5_FnIns> _29749_f) {
	_1c975db28_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1a4e9134c_anonFunc(_self_, _29728_buf, _29749_f);
	_1c975ddd1_WriteByte(_29728_buf, '>');
}



inline void _1a4e91a23_kind(_1a4e8b15a_typeCoder* _self_, _1c9754d1c_StrBuilder* _30428_buf, jule::Ptr<_1a4059e2d_TypeKind> _30449_k) {
	{
		
		if ((_1a405db02_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d1b1:;
			{
				_1a4e8ecc9_structureIns(_self_, _30428_buf, _1a405db02_Struct(_30449_k));
				return;;
			}
		}
		else if (_1a405ac75_Binded(_30449_k.ptr())) {
			_case_begin_1a8b2d25a:;
			{
				_1c975db28_WriteStr(_30428_buf, (*_30449_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a405c57e_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d2c1:;
			{
				_1a4e8bd70_prim(_self_, _30428_buf, _1a405c57e_Prim(_30449_k));
				return;;
			}
		}
		else if ((_1a405e3a5_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d337:;
			{
				_1a4e8c1d3_tuple(_self_, _30428_buf, _1a405e3a5_Tup(_30449_k));
				return;;
			}
		}
		else if ((_1a405c815_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d39d:;
			{
				_1a4e8c8a9_sptr(_self_, _30428_buf, _1a405c815_Sptr(_30449_k));
				return;;
			}
		}
		else if ((_1a405ca9b_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d425:;
			{
				_1a4e8cc1c_ptr(_self_, _30428_buf, _1a405ca9b_Ptr(_30449_k));
				return;;
			}
		}
		else if ((_1a405cd32_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d49c:;
			{
				_1a4e8d080_enumDecl(_self_, _30428_buf, _1a405cd32_Enum(_30449_k));
				return;;
			}
		}
		else if ((_1a405d0b8_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d524:;
			{
				_1a4e8d3e3_typeEnumDecl(_self_, _30428_buf, _1a405d0b8_TypeEnum(_30449_k));
				return;;
			}
		}
		else if ((_1a405d5d5_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d59b:;
			{
				_1a4e8dab9_slice(_self_, _30428_buf, _1a405d5d5_Slc(_30449_k));
				return;;
			}
		}
		else if ((_1a405e11e_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d623:;
			{
				_1a4e8de2c_mapType(_self_, _30428_buf, _1a405e11e_Map(_30449_k));
				return;;
			}
		}
		else if ((_1a405dd88_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d69a:;
			{
				_1a4e8e603_traitDecl(_self_, _30428_buf, _1a405dd88_Trait(_30449_k));
				return;;
			}
		}
		else if ((_1a405d34e_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d722:;
			{
				_1a4e9013c_array(_self_, _30428_buf, _1a405d34e_Arr(_30449_k));
				return;;
			}
		}
		else if ((_1a405d86b_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1a8b2d799:;
			{
				_1a4e916b0_func(_self_, _30428_buf, _1a405d86b_Fn(_30449_k));
				return;;
			}
		}
		_match_end_1a8b2ced5:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1a8b2d832:;
			{
				_1c975db28_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1a4e8a555_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1a8b37044:;
			{
				_1c975db28_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1a8b36ede:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e8b15a_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4e9443d_resultCoder> static__1a4e94916_new(jule::Ptr<_1a4e8b15a_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1a4e9443d_resultCoder>(_1a4e9443d_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1a4e94c79_ptr(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _37527_s, jule::Ptr<_1a4069cea_Ptr> _37546_p) {
	_1c975db28_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1a4e96660_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1a4e950dc_sptr(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _38028_s, jule::Ptr<_1a4066533_Sptr> _38047_p) {
	_1c975db28_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1a4e96660_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1a4e95450_mapType(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _38531_s, jule::Ptr<_1a406869a_Map> _38550_p) {
	_1c975db28_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1a4e96660_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1a4e96660_codeMut(_self_, _38531_s, &((*_38550_p.alloc)._field_Val));
}



inline void _1a4e957b3_slice(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _39129_s, jule::Ptr<_1a4067006_Slc> _39148_slc) {
	_1c975db28_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1a4e96660_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1a4e95b26_arr(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _39627_s, jule::Ptr<_1a4069327_Arr> _39646_arr) {
	_1c975db28_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_1c975db28_WriteStr(_39627_s, _1b288d2be_FmtInt(static_cast<jule::I64>((*(_39646_arr))._field_N), 16LL));
	_1a4e96660_codeMut(_self_, _39627_s, &((*_39646_arr.alloc)._field_Elem));
}



inline void _1a4e95e89_func(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _40228_s, jule::Ptr<_1a3e172d5_FnIns> _40247_f) {
	_1c975db28_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b3e4be:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_1c975db28_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1a4e96660_codeMut(_self_, _40228_s, &((*_40421_p.alloc)._field_Kind));
			}
			_iter_next_1a8b3e4be:;
			++it;
			goto _iter_begin_1a8b3e4be;
		}
		_iter_end_1a8b3e4be:;
	};
	if (((*_40247_f.alloc)._field_Result != nullptr)) {
		_1a4e96660_codeMut(_self_, _40228_s, &((*_40247_f.alloc)._field_Result));
	};
}



inline void _1a4e962ec_tup(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _41527_s, jule::Ptr<_1a4067aea_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b41b20:;
		if (it != expr_end) {
			jule::Ptr<_1a4059e2d_TypeKind> _41621_t = *it;
			{
				_1c975db28_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1a4e96660_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1a8b41b20:;
			++it;
			goto _iter_begin_1a8b41b20;
		}
		_iter_end_1a8b41b20:;
	};
}



inline void _1a4e96660_codeMut(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _42231_s, jule::Ptr<_1a4059e2d_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a8b42d1e:;
			{
				_1a4e94c79_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a4069cea_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1a8b43539:;
			{
				_1a4e950dc_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a4066533_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1a8b432c5:;
			{
				_1a4e95450_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a406869a_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1a8b4333b:;
			{
				_1a4e957b3_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a4067006_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1a8b433a2:;
			{
				_1a4e95b26_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a4069327_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a8b43418:;
			{
				_1a4e95e89_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a3e172d5_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a8b4377b:;
			{
				jule::Ptr<_1a3e29db9_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1a3e29db9_Enum>(3);;
				static__1a45a8c0c_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(_43713_te));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a8b437e2:;
			{
				jule::Ptr<_1a3e2b5c4_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1a3e2b5c4_TypeEnum>(4);;
				static__1a45a8c0c_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(_44013_te));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8b43858:;
			{
				jule::Ptr<_1a3e0226a_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1a3e0226a_StructIns>(0);;
				static__1a45aa3d4_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a8b438be:;
			{
				jule::Ptr<_1a3e276ad_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1a3e276ad_Trait>(2);;
				static__1a45a9a21_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1a8b43946:;
			{
				_1c975db28_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1a4062a07_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1a8b439bd:;
			{
				_1a4e962ec_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1a4067aea_Tuple>(23));
			}
		}
		else {
			_case_begin_1a8b43171:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1a8b4311b:;
	};
}



inline void _1a4e969c3_codeMut1(_1a4e9443d_resultCoder* _self_, _1c9754d1c_StrBuilder* _45732_s, jule::Ptr<_1a4059e2d_TypeKind>* _45752_t) {
	jule::Ptr<_1a4067aea_Tuple> _45813_tup = _1a405e3a5_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1a4e962ec_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1a4e91a23_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1a4e96cd1_code(_1a4e9443d_resultCoder* _self_, jule::Ptr<_1a4059e2d_TypeKind>* _46628_t) {
	_1c9754d1c_StrBuilder _46713_s = static__1c97550d6_New(20LL);;
	_1a4e96660_codeMut(_self_, &(_46713_s), _46628_t);
	return _1c975edc1_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e9443d_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8b4e5cd_Name(_1a8b4e743_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a8b4ea2e_What(_1a8b4e743_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a8b4eb72_Reset(_1a8b4e743_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a8b4ecc6_Short(_1a8b4e743_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8b4e743_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8b52c0d_Name(_1a8b53093_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a8b5337e_What(_1a8b53093_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a8b534c2_Reset(_1a8b53093_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a8b53615_Short(_1a8b53093_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8b53093_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8b563b5_Name(_1a8b5674a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a8b56a36_What(_1a8b5674a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a8b56b79_Reset(_1a8b5674a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a8b56cbc_Short(_1a8b5674a_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8b5674a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8b59ab1_Name(_1a8b59e46_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a8b5a232_What(_1a8b59e46_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a8b5a375_Reset(_1a8b59e46_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a8b5a4b8_Short(_1a8b59e46_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8b59e46_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8b5d268_Name(_1a8b5d5ed_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a8b5d8d9_What(_1a8b5d5ed_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a8b5da2c_Reset(_1a8b5d5ed_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a8b5db70_Short(_1a8b5d5ed_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8b5d5ed_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a500e95e_FlagSet> static__1a500ec4a_New(void) {
	return jule::new_ptr<_1a500e95e_FlagSet>(_1a500e95e_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a500cd8b_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a500cd8b_CommonFlag> _1a5010201_FindFlag(_1a500e95e_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b68707:;
		if (it != expr_end) {
			jule::Trait<_1a500cd8b_CommonFlag> _7221_flag = *it;
			{
				if ((_1a500cd8b_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a4ecc256_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1a8b68707:;
			++it;
			goto _iter_begin_1a8b68707;
		}
		_iter_end_1a8b68707:;
	};
	return nullptr;;
}



inline jule::Trait<_1a500cd8b_CommonFlag> _1a5010542_FindFlagShort(_1a500e95e_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b68c57:;
		if (it != expr_end) {
			jule::Trait<_1a500cd8b_CommonFlag> _8221_flag = *it;
			{
				if ((_1a500cd8b_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a4ecc399_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1a8b68c57:;
			++it;
			goto _iter_begin_1a8b68c57;
		}
		_iter_end_1a8b68c57:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a5010b19_Parse(_1a500e95e_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a5012423_argParser _11613_ap = _1a5012423_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a501391e_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1a8b5d5ed_Flag> _1a8d37134_addFlagCommon(_1a500e95e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1a5010201_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1a5010542_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1a8b5d5ed_Flag> _14013_flag = jule::new_ptr<_1a8b5d5ed_Flag>(_1a8b5d5ed_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a500cd8b_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a500cd8b_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1a8b59e46_Flag> _1a8d3e04d_addFlagCommon(_1a500e95e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1a5010201_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1a5010542_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1a8b59e46_Flag> _14013_flag = jule::new_ptr<_1a8b59e46_Flag>(_1a8b59e46_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a500cd8b_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a500cd8b_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1a8d34d8a_AddVar(_1a500e95e_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1a8b5d5ed_Flag> _16813_flag = _1a8d37134_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}

inline void _1a8d3bce8_AddVar(_1a500e95e_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1a8b59e46_Flag> _16813_flag = _1a8d3e04d_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a500e95e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1a8b71435_parseInteger(_1a5012423_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1a8b7404d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1a8b743d3:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1a8b73a97:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1a8b73b0d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1a8b73b74:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a8b73a31:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a8b73932:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1a8b78c12_parseInteger(_1a5012423_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1a8b7b7d6:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1a8b7bb6b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1a8b7b330:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c9740a83_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1a8b7b396:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1a8b7b40c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a8b7b2b9:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a8b7b1ba:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a5012c3c_getData(_1a5012423_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a5012eb2_processFlag(_1a5012423_argParser* _self_, jule::Trait<_1a500cd8b_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a8b6d652:;
			{
				jule::Ptr<_1a8b59e46_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1a8b59e46_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*_21217_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1a8b6d5ec:;
	};
	jule::Str _2179_data = _1a5012c3c_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1a500cd8b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1a4ecc256_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8b704de:;
			{
				jule::Ptr<_1a8b4e743_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1a8b4e743_Flag>(0);;
				jule::Bool _22527_ok;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1a8b71435_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = ({
							auto except = _1b287bc19_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						});
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1a500cd8b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1a4ecc256_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a8b6ed6d:;
			{
				jule::Ptr<_1a8b53093_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1a8b53093_Flag>(1);;
				jule::Bool _23328_ok;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a8b78c12_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = ({
							auto except = _1b287b763_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						});
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1a500cd8b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1a4ecc256_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a8b70577:;
			{
				jule::Ptr<_1a8b5674a_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1a8b5674a_Flag>(2);;
				(*((*(_24017_ff))._field_data))=({
					auto except = _1b2883539_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1a500cd8b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1a4ecc256_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a8b705dd:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1a8b5d5ed_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1a8b6ee06:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a501326a_singleDash(_1a5012423_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_24930_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25416_r;
		_iter_begin_1a8b82db4:;
		std::tie(_25416_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait<_1a500cd8b_CommonFlag> _25517_flag = _1a5010542_FindFlagShort(&(*(_self_))._field_set, _25416_r);;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25416_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a5012eb2_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1a8b82db4:;
			it += len;
			goto _iter_begin_1a8b82db4;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5013523_doubleDash(_1a5012423_argParser* _self_, jule::Str* _26330_arg) {
	if (((*(_26330_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait<_1a500cd8b_CommonFlag> _26713_flag = _1a5010201_FindFlag(&(*(_self_))._field_set, (*(_26330_arg)).slice(2LL));;
	if ((_26713_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a5012eb2_processFlag(_self_, &(_26713_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a5013721_tryArg(_1a5012423_argParser* _self_) {
	jule::Str _2759_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2759_arg[0LL] == '-')) {
		if (((_2759_arg.len() > 1LL) && (_2759_arg[1LL] == '-'))) {
			({
				auto except = _1a5013523_doubleDash(_self_, &(_2759_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a501326a_singleDash(_self_, &(_2759_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2759_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a501391e_parse(_1a5012423_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a5013721_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1a8b88815:;
	}
	_iter_end_1a8b88815:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5012423_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4e7ad4d_ObjectCoder> static__1a4e7b249_New(jule::Ptr<_1a4a6456e_IR>* _9424_ir, _1a4e79335_SerializationInfo _9433_info) {
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _9513_oc = jule::new_ptr<_1a4e7ad4d_ObjectCoder>(_1a4e7ad4d_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1a4589b99_new(&(_9513_oc));
	(*_9513_oc.alloc)._field_sc=static__1a4e5dade_new(&(_9513_oc));
	(*_9513_oc.alloc)._field_tc=static__1a4e8b699_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1a4e7b502_write(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Str _10525_s) {
	_1c975db28_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1a4e7b7aa_writeBytes(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_1c975d870_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1a4e7b9a8_addIndent(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1a4e7bba6_doneIndent(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*_self_.alloc)._field_indentBuffer.slice(0LL, ((*_self_.alloc)._field_indentBuffer.len() - 1LL));
}



inline void _1a4e7bda4_indent(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1c975d870_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a4e7c1e5_findAnyType(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a4059e2d_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a62da4:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_1a4059e2d_TypeKind> _12921_at = *it;
			{
				if (_1a405a637_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1a8a62da4:;
			++it;
			_12914_i++;
			goto _iter_begin_1a8a62da4;
		}
		_iter_end_1a8a62da4:;
	};
	return -1LL;;
}



inline jule::I64 _1a4e7c536_pushAnyType(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a4059e2d_TypeKind> _13735_t) {
	if ((_1a405cd32_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1a405cd32_Enum(_13735_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _1a4e7c1e5_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>>::make({_13735_t}));
	jule::Str _1479_si = _1b288d588_Itoa(_14113_i);;
	if ((_1a405c815_Sptr(_13735_t) != nullptr)) {
		_1c9754d1c_StrBuilder _14917_elemKind = static__1c97550d6_New(40LL);;
		_1a4e91a23_kind((*_self_.alloc)._field_tc.ptr(), &(_14917_elemKind), (*(_1a405c815_Sptr(_13735_t)))._field_Elem);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _1c975edc1_Buf(&_14917_elemKind));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a4e8c546_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _1c975edc1_Buf(&_14917_elemKind));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1a405b528_Comparable(_13735_t);;
		_1c9754d1c_StrBuilder _17717_kindB = static__1c97550d6_New(40LL);;
		_1a4e91a23_kind((*_self_.alloc)._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _1c975edc1_Buf(&_17717_kindB);;
		if (_20c137711_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1a405a2e6_Str(_13735_t));
		};
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a405ca9b_Ptr(_13735_t) == nullptr)) {
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
		} else {
			_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1a4e7c7de_pushResultIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e172d5_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1a4e96cd1_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok;;
	(*_self_.alloc)._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_2489_s]=false;
	_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, _2489_s);
	_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a405e3a5_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a83820:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1a4059e2d_TypeKind> _25721_t = *it;
			{
				_1c975ddd1_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a4e91a23_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _25721_t);
				_1c975ddd1_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b288d588_Itoa(_25714_i));
				_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8a83820:;
			++it;
			_25714_i++;
			goto _iter_begin_1a8a83820;
		}
		_iter_end_1a8a83820:;
	};
	_1c975db28_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a4e7ca97_pushResult(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e143d1_Fn>* _26835_f) {
	if ((_1a3e14854_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a8a888be:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _27621_ins = *it;
			{
				_1a4e7c7de_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1a8a888be:;
			++it;
			goto _iter_begin_1a8a888be;
		}
		_iter_end_1a8a888be:;
	};
}



inline jule::I64 _1a4e7ce93_findTypeOffsetS(_1a4e7ad4d_ObjectCoder* _self_, jule::Ptr<_1a3e276ad_Trait> _28130_t, jule::Ptr<_1a3e0226a_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a899e1:;
		if (it != expr_end) {
			jule::Ptr<_1a4e7990c_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*(*(_28516_hash)).alloc)._field_s == _28145_s))) {
					return (*(*(_28516_hash)).alloc)._field_i;;
				};
			}
			_iter_next_1a8a899e1:;
			++it;
			goto _iter_begin_1a8a899e1;
		}
		_iter_end_1a8a899e1:;
	};
	return -1LL;;
}



inline jule::I64 _1a4e7d38e_findTypeOffset(_1a4e7ad4d_ObjectCoder* _self_, jule::Ptr<_1a3e276ad_Trait> _29329_t, jule::Ptr<_1a4059e2d_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a3e0226a_StructIns> _29717_s = nullptr;;
	if ((_1a405c815_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1a405c815_Sptr(_29344_k)))._field_Elem;
	};
	_29717_s=_1a405db02_Struct(_29344_k);
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return _1a4e7ce93_findTypeOffsetS(_self_, _29329_t, _29717_s);;
}



inline void _1a4e7d702_pushAndWriteMaskMapper(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e276ad_Trait> _30846_t1, jule::Ptr<_1a3e276ad_Trait> _30862_t2) {
	_1c9754d1c_StrBuilder _30913_ident = static__1c97550d6_New(32LL);;
	_1c975db28_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1c975db28_WriteStr(&_30913_ident, _1b288ce06_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2)), 15LL));
	_1c975db28_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_1c975db28_WriteStr(&_30913_ident, _1b288ce06_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1)), 15LL));
	_1c975d870_Write(&(*(_self_))._field_Buf, _1c975edc1_Buf(&_30913_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a90e6a:;
		if (it != expr_end) {
			_1a4e79cd6_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1a8a90e6a:;
			++it;
			goto _iter_begin_1a8a90e6a;
		}
		_iter_end_1a8a90e6a:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1a4e79cd6_traitCast>::make({_1a4e79cd6_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}}));
	;
	_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Int", 9));
	_1c975ddd1_WriteByte(&(*_self_.alloc)._field_anyObj, ' ');
	_1c975d870_Write(&(*_self_.alloc)._field_anyObj, _1c975edc1_Buf(&_30913_ident));
	_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a92d90:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a94831:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a8a9569a:;
									if (it != expr_end) {
										jule::Ptr<_1a3e0226a_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _1a4e7ce93_findTypeOffsetS(_self_, _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _1a4e7ce93_findTypeOffsetS(_self_, _30862_t2, _33933_s1i);;
											_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1b288d588_Itoa(_34125_i2));
											_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return ", 9));
											_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1b288d588_Itoa(_34025_i1));
											_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1a8a9569a:;
										++it;
										goto _iter_begin_1a8a9569a;
									}
									_iter_end_1a8a9569a:;
								};
							};
						}
						_iter_next_1a8a94831:;
						++it;
						goto _iter_begin_1a8a94831;
					}
					_iter_end_1a8a94831:;
				};
			}
			_iter_next_1a8a92d90:;
			++it;
			goto _iter_begin_1a8a92d90;
		}
		_iter_end_1a8a92d90:;
	};
	_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" return ", 8));
	_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, _1b288d588_Itoa(0LL));
	_1c975db28_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1a4e7d9aa_locInfo(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3db8198_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_20ad69059_Production) {
		{
			
			if (_1c9740a83_HasPrefix((*(_35810_loc)), _1c908aa82_PathStdlib)) {
				_case_begin_1a8a9a7c1:;
				{
					_1a45a2c7d_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1c9762db3_Dir(_1c908aa82_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1c9740a83_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1a8a9a8ae:;
				{
					_1a45a2c7d_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_35810_loc)).slice((_1c9762db3_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1a8a9a419:;
				{
					_1a45a2c7d_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1a8a9a34d:;
		};
	} else {
		_1a45a2c7d_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1a4e7b502_write(_self_, jule::Str::lit(":", 1));
	_1a4e7b502_write(_self_, _1b288d588_Itoa((*((*(_35728_t))))._field_Row));
	_1a4e7b502_write(_self_, jule::Str::lit(":", 1));
	_1a4e7b502_write(_self_, _1b288d588_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1a4e7dba8_head(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e718e3_Time _3849_time = static__1a4e71ea9_Now();;
	_1a4e7121c_AbsTime _3859_abs = _1a4e73692_Abs(&_3849_time);;
	_1a4e7b502_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a4e7b502_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a4e7b502_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
	_1a4e7b502_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a4e7b502_write(_self_, _1b288ce06_FmtUint(_3859_abs._field_Day, 10LL));
	_1a4e7b502_write(_self_, jule::Str::lit("/", 1));
	_1a4e7b502_write(_self_, _1b288ce06_FmtUint(_3859_abs._field_Month, 10LL));
	_1a4e7b502_write(_self_, jule::Str::lit("/", 1));
	_1a4e7b502_write(_self_, _1b288ce06_FmtUint(_3859_abs._field_Year, 10LL));
	_1a4e7b502_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a4e7b502_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
	_1a4e7b502_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	if (_20ad69059_Production) {
		_1a4e7b502_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20ad6894e_RC))) {
		_1a4e7b502_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20ad68d17_Safety))) {
		_1a4e7b502_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a4e7dda6_links(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a4e7b502_write(_self_, _1c908b434_PathApi);
	_1a4e7b502_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a4e7dda6_links(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aa6e4d:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1a8aa7c40:;
						{
							goto _iter_next_1a8aa6e4d;
						}
					}
					else if (_1c97ee724_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1a8aa7cc8:;
						{
							_1a4e7b502_write(_self_, jule::Str::lit("#include ", 9));
							_1a4e7b502_write(_self_, (*_42216_used.alloc)._field_Path);
							_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1c97ee9ee_IsValidHeaderExt(_1c9762456_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1a8aa7d3e:;
						{
							_1a4e7b502_write(_self_, jule::Str::lit("#include \"", 10));
							_1a4e7b502_write(_self_, (*_42216_used.alloc)._field_Path);
							_1a4e7b502_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1a8aa7aec:;
				};
			}
			_iter_next_1a8aa6e4d:;
			++it;
			goto _iter_begin_1a8aa6e4d;
		}
		_iter_end_1a8aa6e4d:;
	};
}



inline void _1a4e7e15e_prepareStructure(_1a4e7ad4d_ObjectCoder* _self_, jule::Ptr<_1a3dee4dc_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aaabaa:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8aab56d:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1a8aab56d;
							};
							{
								auto expr = &((*_44025_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a8aac0b8:;
								if (it != expr_end) {
									jule::Ptr<_1a3e172d5_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1a3e16339_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_1c9754d1c_StrBuilder _44625_kind = static__1c97550d6_New(40LL);;
										_1a4e91a23_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1a3e132ae_IsRef((*_44525_p.alloc)._field_Decl.ptr())))) {
											_1c975db28_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										(*_44525_p.alloc)._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4e8a555_customType>(_1a4e8a555_customType{._field_kind=_1c975e420_Str(&_44625_kind)}), 27)});
									}
									_iter_next_1a8aac0b8:;
									++it;
									goto _iter_begin_1a8aac0b8;
								}
								_iter_end_1a8aac0b8:;
							};
						}
						_iter_next_1a8aab56d:;
						++it;
						goto _iter_begin_1a8aab56d;
					}
					_iter_end_1a8aab56d:;
				};
			}
			_iter_next_1a8aaabaa:;
			++it;
			goto _iter_begin_1a8aaabaa;
		}
		_iter_end_1a8aaabaa:;
	};
}



inline void _1a4e7e35c_prepareStructures(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aab4c4:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _46221_s = *it;
			{
				if (((*(_46221_s))._field_Token != nullptr)) {
					_1a4e7e15e_prepareStructure(_self_.ptr(), &(_46221_s));
				};
			}
			_iter_next_1a8aab4c4:;
			++it;
			goto _iter_begin_1a8aab4c4;
		}
		_iter_end_1a8aab4c4:;
	};
}



inline void _1a4e7e615_iterPackages(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)> _46932_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ab1683:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _47021_used = *it;
			{
				if ((!((*(_47021_used))._field_Binded))) {
					_46932_f(&((*_47021_used.alloc)._field_Package));
				};
			}
			_iter_next_1a8ab1683:;
			++it;
			goto _iter_begin_1a8ab1683;
		}
		_iter_end_1a8ab1683:;
	};
	_46932_f(&((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1a4e7e813_buildTraitMap(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _47935_pkg) mutable -> void {
		_1a4e8808b_iterFiles(_47935_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _48036_file) mutable -> void {
			{
				auto expr = &((*((*(_48036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a8ab5038:;
				if (it != expr_end) {
					jule::Ptr<_1a3e276ad_Trait> _48129_t = *it;
					{
						if (((*(_48129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*_48129_t.alloc)._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1a4e7990c_traitHash> _48629_hash = jule::new_ptr<_1a4e7990c_traitHash>(_1a4e7990c_traitHash{._field_t=_48129_t, ._field_s=nullptr, ._field_i=0LL});;
							_1c9754d1c_StrBuilder _49129_b = static__1c97550d6_New((*_48129_t.alloc)._field_Ident.len());;
							static__1a45a8866_writeIdentTo(&(_49129_b), &((*_48129_t.alloc)._field_Ident));
							(*(_48629_hash))._field_ti=_1c975e420_Str(&_49129_b);
							(*_self_.alloc)._field_tmap=jule::append((*_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1a4e7990c_traitHash>>::make({_48629_hash}));
							goto _iter_next_1a8ab5038;
						};
						jule::I64 _49725_i = 0LL;;
						{
							auto expr = &((*_48129_t.alloc)._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a8ab59a6:;
							if (it != expr_end) {
								jule::Ptr<_1a3dee4dc_Struct> _49833_s = *it;
								{
									{
										auto expr = &((*(_49833_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a8ab9416:;
										if (it != expr_end) {
											jule::Ptr<_1a3e0226a_StructIns> _49937_ins = *it;
											{
												jule::Ptr<_1a4e7990c_traitHash> _50033_hash = jule::new_ptr<_1a4e7990c_traitHash>(_1a4e7990c_traitHash{._field_t=_48129_t, ._field_s=_49937_ins, ._field_i=_49725_i});;
												_1c9754d1c_StrBuilder _50533_b = static__1c97550d6_New((*_48129_t.alloc)._field_Ident.len());;
												static__1a45a8866_writeIdentTo(&(_50533_b), &((*_48129_t.alloc)._field_Ident));
												(*(_50033_hash))._field_ti=_1c975e420_Str(&_50533_b);
												(*_self_.alloc)._field_tmap=jule::append((*_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1a4e7990c_traitHash>>::make({_50033_hash}));
												(_49725_i)++;
											}
											_iter_next_1a8ab9416:;
											++it;
											goto _iter_begin_1a8ab9416;
										}
										_iter_end_1a8ab9416:;
									};
								}
								_iter_next_1a8ab59a6:;
								++it;
								goto _iter_begin_1a8ab59a6;
							}
							_iter_end_1a8ab59a6:;
						};
						_1a4e88d39_pushMethodsFromInherits(&(_48129_t), &(_48129_t));
					}
					_iter_next_1a8ab5038:;
					++it;
					goto _iter_begin_1a8ab5038;
				}
				_iter_end_1a8ab5038:;
			};
		}));
	}));
}



inline void _1a4e7ea11_traitDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _52135_pkg) mutable -> void {
		_1a4e8808b_iterFiles(_52135_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _52236_file) mutable -> void {
			{
				auto expr = &((*((*(_52236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a8abd030:;
				if (it != expr_end) {
					jule::Ptr<_1a3e276ad_Trait> _52329_t = *it;
					{
						if (((*(_52329_t))._field_Token == nullptr)) {
							return;;
						};
						_1a4e7bda4_indent(_self_);
						_1a4e7b502_write(_self_, jule::Str::lit("struct ", 7));
						static__1a45a9a21_traitDecl(&((*_self_.alloc)._field_Buf), _52329_t);
						_1a4e7b502_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1a8abd030:;
					++it;
					goto _iter_begin_1a8abd030;
				}
				_iter_end_1a8abd030:;
			};
		}));
	}));
}



inline void _1a4e7ecb9_structurePlainDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3dee4dc_Struct>* _53643_s) {
	{
		auto expr = &((*((*(_53643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ab9b20:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _53721_ins = *it;
			{
				_1a4e7b502_write(_self_, jule::Str::lit("struct ", 7));
				static__1a45aa3d4_structureIns(&((*_self_.alloc)._field_Buf), &(_53721_ins));
				_1a4e7b502_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8ab9b20:;
			++it;
			goto _iter_begin_1a8ab9b20;
		}
		_iter_end_1a8ab9b20:;
	};
}



inline void _1a4e7eeb7_structurePlainDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ac02c9:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _54521_s = *it;
			{
				if (((*(_54521_s))._field_Token != nullptr)) {
					_1a4e7ecb9_structurePlainDecl(_self_, &(_54521_s));
				};
			}
			_iter_next_1a8ac02c9:;
			++it;
			goto _iter_begin_1a8ac02c9;
		}
		_iter_end_1a8ac02c9:;
	};
}



inline void _1a4e80270_fieldDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e016ba_FieldIns>* _55234_f) {
	_1a4e91a23_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_55234_f))))._field_Kind);
	_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
	static__1a45aa6c0_field(&((*_self_.alloc)._field_Buf), &((*((*(_55234_f))))._field_Decl));
	if (((*((*(_55234_f))))._field_Default == nullptr)) {
		if (_1a4e98d49_shouldInitialized(&((*((*(_55234_f))))._field_Kind))) {
			_1a4e7b502_write(_self_, jule::Str::lit(" = ", 3));
			_1a45a22bb_initExpr((*_self_.alloc)._field_ec, (*((*(_55234_f))))._field_Kind);
		};
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit(" = ", 3));
		_1a4597646_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_55234_f))))._field_Default))._field_Model);
	};
	_1a4e7b502_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a4e80528_structureDestructor(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _57044_s) {
	;
	jule::Ptr<_1a3e143d1_Fn> _5739_disposeMethod = _1a3e032d2_FindMethod((*(_57044_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57413_disposed = static__1a3ebc1e2_Dispose(_5739_disposeMethod);;
	if ((!(_57413_disposed))) {
		return;;
	};
	_1a4e7b502_write(_self_, jule::Str::lit("~", 1));
	static__1a45aa3d4_structureIns(&((*_self_.alloc)._field_Buf), _57044_s);
	_1a4e7b502_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a45a9449_func(&((*_self_.alloc)._field_Buf), &(_5739_disposeMethod));
	_1a4e7b502_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a4e8088b_structureOperatorEq(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::U8> _58639_ident, jule::Ptr<_1a3e0226a_StructIns>* _58659_s) {
	if ((!((*((*(_58659_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58659_s))))._field_Operators._field_Eq != nullptr)) {
		_1a4e8111c_structureOperator(_self_, _58639_ident, &((*((*(_58659_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1a4e7bda4_indent(_self_);
	if (_1a4182a4a_Inline) {
		_1a4e7b502_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a4e7b502_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1a4e7b7aa_writeBytes(_self_, _58639_ident);
	_1a4e7b502_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58659_s))))._field_Fields.len() > 0LL)) {
		_1a4e7b9a8_addIndent(_self_);
		_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
		_1a4e7bda4_indent(_self_);
		_1a4e7b502_write(_self_, jule::Str::lit("return ", 7));
		_1a4e7b9a8_addIndent(_self_);
		jule::Bool _60917_writed = false;;
		{
			auto expr = &((*((*(_58659_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8ace074:;
			if (it != expr_end) {
				jule::Ptr<_1a3e016ba_FieldIns> _61025_f = *it;
				{
					jule::Ptr<_1a3e0226a_StructIns> _61217_strct = _1a405db02_Struct((*(_61025_f))._field_Kind.ptr());;
					if ((((_61217_strct != nullptr) && ((*_61217_strct.alloc)._field_Decl != nullptr)) && (*(*_61217_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1a8ace074;
					};
					if (_60917_writed) {
						_1a4e7b502_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60917_writed=true;
					_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
					_1a4e7bda4_indent(_self_);
					_1a4e7b502_write(_self_, jule::Str::lit("this->", 6));
					_1c9754d1c_StrBuilder _62321_fIdent = static__1c97550d6_New((*((*_61025_f.alloc)._field_Decl))._field_Ident.len());;
					static__1a45aa6c0_field(&(_62321_fIdent), &((*_61025_f.alloc)._field_Decl));
					_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_62321_fIdent));
					_1a4e7b502_write(_self_, jule::Str::lit(" == _other.", 11));
					_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_62321_fIdent));
				}
				_iter_next_1a8ace074:;
				++it;
				goto _iter_begin_1a8ace074;
			}
			_iter_end_1a8ace074:;
		};
		_1a4e7bba6_doneIndent(_self_);
		if ((!(_60917_writed))) {
			_1a4e7b502_write(_self_, jule::Str::lit("true", 4));
		};
		_1a4e7b502_write(_self_, jule::Str::lit(";\n", 2));
		_1a4e7bba6_doneIndent(_self_);
		_1a4e7bda4_indent(_self_);
		_1a4e7b502_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a4e80bee_structureOperatorNotEq(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::U8> _64342_ident, jule::Ptr<_1a3e0226a_StructIns>* _64362_s) {
	if ((!((*((*(_64362_s))))._field_Comparable))) {
		return;;
	};
	_1a4e7bda4_indent(_self_);
	if (_1a4182a4a_Inline) {
		_1a4e7b502_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a4e7b502_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1a4e7b7aa_writeBytes(_self_, _64342_ident);
	_1a4e7b502_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a4e8111c_structureOperator(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::U8> _65737_ident, jule::Ptr<_1a3e172d5_FnIns>* _65757_f, jule::Str _65768_op) {
	if (((*(_65757_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6629_unary = ((*((*(_65757_f))))._field_Params.len() == 1LL);;
	jule::Bool _6639_assignment = _1a3e14854_IsVoid((*((*(_65757_f))))._field_Decl.ptr());;
	_1a4e7bda4_indent(_self_);
	if (_1a4182a4a_Inline) {
		_1a4e7b502_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6639_assignment) {
		_1a4e7b7aa_writeBytes(_self_, _65737_ident);
		_1a4e7b502_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1a405c57e_Prim((*((*(_65757_f))))._field_Result.ptr()) == nullptr)) {
			_1a4e7b7aa_writeBytes(_self_, _65737_ident);
		} else {
			_1a4e7b502_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1a4e7b502_write(_self_, jule::Str::lit(" operator", 9));
	_1a4e7b502_write(_self_, _65768_op);
	_1a4e7b502_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6629_unary))) {
		jule::Ptr<_1a3e16339_ParamIns> _68517_p = (*((*(_65757_f))))._field_Params[1LL];;
		_1a4e90813_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_68517_p));
		_1a4e7b502_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1a4e7b502_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6639_assignment))) {
		_1a4e7b502_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1a45a9735_funcIns(&((*_self_.alloc)._field_Buf), _65757_f);
	if ((!(_6629_unary))) {
		_1a4e7b502_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6639_assignment) {
			_1a4e7b502_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1a4e7b502_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a4e813c5_structureOperators(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _70643_s) {
	_1c9754d1c_StrBuilder _70713_sb = static__1c97550d6_New(40LL);;
	static__1a45aa3d4_structureIns(&(_70713_sb), _70643_s);
	jule::Slice<jule::U8> _7099_ident = _1c975edc1_Buf(&_70713_sb);;
	_1a4e8088b_structureOperatorEq(_self_, _7099_ident, _70643_s);
	_1a4e80bee_structureOperatorNotEq(_self_, _7099_ident, _70643_s);
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1a4e8111c_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1a4e8167d_structureInsDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _74741_s) {
	{
		auto expr = &((*((*(_74741_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b01b46:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _74821_m = *it;
			{
				if (_1a4e893bc_isHeadDecl(&(_74821_m))) {
					_1a4e82b24_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1a8b01b46:;
			++it;
			goto _iter_begin_1a8b01b46;
		}
		_iter_end_1a8b01b46:;
	};
	_1a4e7b502_write(_self_, jule::Str::lit("struct ", 7));
	static__1a45aa3d4_structureIns(&((*_self_.alloc)._field_Buf), _74741_s);
	_1a4e7b502_write(_self_, jule::Str::lit(" {\n", 3));
	_1a4e7b9a8_addIndent(_self_);
	{
		auto expr = &((*((*(_74741_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a804b8ee:;
		if (it != expr_end) {
			jule::Ptr<_1a3e016ba_FieldIns> _75921_f = *it;
			{
				_1a4e7bda4_indent(_self_);
				_1a4e80270_fieldDecl(_self_, &(_75921_f));
				_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1a804b8ee:;
			++it;
			goto _iter_begin_1a804b8ee;
		}
		_iter_end_1a804b8ee:;
	};
	_1a4e7bda4_indent(_self_);
	_1a4e80528_structureDestructor(_self_, _74741_s);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	_1a4e813c5_structureOperators(_self_, _74741_s);
	_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
	_1a4e7bba6_doneIndent(_self_);
	_1a4e7bda4_indent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("};", 2));
}



inline void _1a4e81936_structureDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3dee4dc_Struct>* _77738_s) {
	{
		auto expr = &((*((*(_77738_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80505a1:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _77821_ins = *it;
			{
				_1a4e8167d_structureInsDecl(_self_, &(_77821_ins));
			}
			_iter_next_1a80505a1:;
			++it;
			goto _iter_begin_1a80505a1;
		}
		_iter_end_1a80505a1:;
	};
}



inline void _1a4e81b34_structureDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8050d10:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _78421_s = *it;
			{
				if (((*(_78421_s))._field_Token != nullptr)) {
					_1a4e81936_structureDecl(_self_, &(_78421_s));
					_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1a8050d10:;
			++it;
			goto _iter_begin_1a8050d10;
		}
		_iter_end_1a8050d10:;
	};
}



inline void _1a4e81d32_structureMethodDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8051d44:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _79321_s = *it;
			{
				if (((*(_79321_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_79321_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8053dce:;
						if (it != expr_end) {
							jule::Ptr<_1a3e0226a_StructIns> _79529_ins = *it;
							{
								{
									auto expr = &((*(_79529_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a8054808:;
									if (it != expr_end) {
										jule::Ptr<_1a3e143d1_Fn> _79633_m = *it;
										{
											if ((!(_1a4e893bc_isHeadDecl(&(_79633_m))))) {
												_1a4e7ca97_pushResult(_self_, &(_79633_m));
												_1a4e82b24_funcDecl(_self_, &(_79633_m), false);
											};
										}
										_iter_next_1a8054808:;
										++it;
										goto _iter_begin_1a8054808;
									}
									_iter_end_1a8054808:;
								};
							}
							_iter_next_1a8053dce:;
							++it;
							goto _iter_begin_1a8053dce;
						}
						_iter_end_1a8053dce:;
					};
				};
			}
			_iter_next_1a8051d44:;
			++it;
			goto _iter_begin_1a8051d44;
		}
		_iter_end_1a8051d44:;
	};
}



inline void _1a4e820da_paramsDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>* _80836_params) {
	if (((*(_80836_params)).len() == 0LL)) {
		_1a4e7b502_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1a4e7b502_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80836_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80550de:;
		if (it != expr_end) {
			jule::I64 _81514_i = it - expr->begin();
			jule::Ptr<_1a3e16339_ParamIns> _81521_p = *it;
			{
				_1a4e90813_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_81521_p));
				if ((((*(_80836_params)).len() - _81514_i) > 1LL)) {
					_1a4e7b502_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a80550de:;
			++it;
			_81514_i++;
			goto _iter_begin_1a80550de;
		}
		_iter_end_1a80550de:;
	};
	_1a4e7b502_write(_self_, jule::Str::lit(")", 1));
}



inline void _1a4e8244d_funcHead(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e172d5_FnIns>* _82533_f, jule::Bool _82544_ptr) {
	if ((((!(_82544_ptr)) && _1a4182a4a_Inline) && (!(_1a3e14d71_IsEntryPoint((*((*(_82533_f))))._field_Decl.ptr()))))) {
		_1a4e7b502_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a4e90ed9_funcInsResult((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _82533_f);
	if (_82544_ptr) {
		_1a4e7b502_write(_self_, jule::Str::lit("(*", 2));
		static__1a45a9735_funcIns(&((*_self_.alloc)._field_Buf), _82533_f);
		_1a4e7b502_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
		static__1a45a9735_funcIns(&((*_self_.alloc)._field_Buf), _82533_f);
	};
}



inline void _1a4e827b1_funcDeclIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e172d5_FnIns>* _84036_f, jule::Bool _84047_ptr) {
	_1a4e7bda4_indent(_self_);
	_1a4e8244d_funcHead(_self_, _84036_f, _84047_ptr);
	_1a4e820da_paramsDecls(_self_, &((*((*(_84036_f))))._field_Params));
	_1a4e7b502_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a4e82b24_funcDecl(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e143d1_Fn>* _84733_f, jule::Bool _84741_ptr) {
	{
		auto expr = &((*((*(_84733_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a805d746:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _84821_c = *it;
			{
				_1a4e827b1_funcDeclIns(_self_, &(_84821_c), _84741_ptr);
			}
			_iter_next_1a805d746:;
			++it;
			goto _iter_begin_1a805d746;
		}
		_iter_end_1a805d746:;
	};
}



inline void _1a4e83042_funcDeclTrait(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e276ad_Trait>* _85338_t, jule::Ptr<_1a3e143d1_Fn>* _85354_f, jule::Bool _85362_ptr) {
	{
		auto expr = &((*((*(_85354_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a805ea77:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _85421_c = *it;
			{
				jule::Ptr<_1a4059e2d_TypeKind> _85517_k = (*((*(_85421_c))._field_Params[0LL]))._field_Kind;;
				(*((*_85421_c.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*(_85338_t)), 2)});
				_1a4e827b1_funcDeclIns(_self_, &(_85421_c), _85362_ptr);
				(*((*_85421_c.alloc)._field_Params[0LL]))._field_Kind=_85517_k;
			}
			_iter_next_1a805ea77:;
			++it;
			goto _iter_begin_1a805ea77;
		}
		_iter_end_1a805ea77:;
	};
}



inline void _1a4e83240_funcDecls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _86335_pkg) mutable -> void {
		_1a4e8808b_iterFiles(_86335_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _86436_file) mutable -> void {
			{
				auto expr = &((*((*(_86436_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a80642a7:;
				if (it != expr_end) {
					jule::Ptr<_1a3e143d1_Fn> _86529_f = *it;
					{
						if (((!((*(_86529_f))._field_Binded)) && ((*_86529_f.alloc)._field_Token != nullptr))) {
							_1a4e7ca97_pushResult(_self_, &(_86529_f));
							_1a4e82b24_funcDecl(_self_, &(_86529_f), false);
						};
					}
					_iter_next_1a80642a7:;
					++it;
					goto _iter_begin_1a80642a7;
				}
				_iter_end_1a80642a7:;
			};
		}));
	}));
}



inline void _1a4e835a3_traitDataTypeMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e276ad_Trait>* _87545_owner, jule::Ptr<_1a3e276ad_Trait>* _87565_t) {
	{
		auto expr = &((*((*(_87565_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8063dcd:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _87621_m = *it;
			{
				jule::Ptr<_1a3e172d5_FnIns> _87717_ins = (*(_87621_m))._field_Instances[0LL];;
				jule::Ptr<_1a3e16339_ParamIns> _87817_p = (*(_87717_ins))._field_Params[0LL];;
				(*(_87817_p))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*(_87565_t)), 2)});
				{
					auto expr = (*_87717_ins.alloc)._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1a8067c28:;
					if (it != expr_end) {
						jule::I64 _88218_i = it - expr.begin();
						jule::Ptr<_1a3e16339_ParamIns> _88225_ip = *it;
						{
							if (_1a3dbad49_IsAnonIdent((*((*(_88225_ip))._field_Decl))._field_Ident)) {
								(*(*_88225_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b288d588_Itoa(_88218_i));
							};
						}
						_iter_next_1a8067c28:;
						++it;
						_88218_i++;
						goto _iter_begin_1a8067c28;
					}
					_iter_end_1a8067c28:;
				};
				if ((!(_20ad69059_Production))) {
					jule::Ptr<_1a3e16339_ParamIns> _88821_lp = (*_87717_ins.alloc)._field_Params[((*_87717_ins.alloc)._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88821_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1a806ab60:;
							{
								goto _match_end_1a806a742;
							}
						}
						else {
							_case_begin_1a806a797:;
							{
								(*_87717_ins.alloc)._field_Params=jule::append((*_87717_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>::make({jule::new_ptr<_1a3e16339_ParamIns>(_1a3e16339_ParamIns{._field_Decl=jule::new_ptr<_1a3e1290c_Param>(_1a3e1290c_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4e8a555_customType>(_1a4e8a555_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})}));
							}
						}
						_match_end_1a806a742:;
					};
				};
				_1a4e7ca97_pushResult(_self_, &(_87621_m));
				_1a4e83042_funcDeclTrait(_self_, _87545_owner, &(_87621_m), true);
			}
			_iter_next_1a8063dcd:;
			++it;
			goto _iter_begin_1a8063dcd;
		}
		_iter_end_1a8063dcd:;
	};
}



inline void _1a4e837a1_traitDataTypes(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _91135_pkg) mutable -> void {
		_1a4e8808b_iterFiles(_91135_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _91236_file) mutable -> void {
			{
				auto expr = &((*((*(_91236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a806e427:;
				if (it != expr_end) {
					jule::Ptr<_1a3e276ad_Trait> _91329_t = *it;
					{
						if (((*(_91329_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*_91329_t.alloc)._field_Methods.len() == 0LL)) {
							goto _iter_next_1a806e427;
						};
						_1a4e7b502_write(_self_, jule::Str::lit("struct ", 7));
						static__1a45a9a21_traitDecl(&((*_self_.alloc)._field_Buf), _91329_t);
						_1a4e7b502_write(_self_, jule::Str::lit("MptrData", 8));
						_1a4e7b502_write(_self_, jule::Str::lit(" {\n", 3));
						_1a4e7b9a8_addIndent(_self_);
						_1a4e835a3_traitDataTypeMethods(_self_, &(_91329_t), &(_91329_t));
						_1a4e7bba6_doneIndent(_self_);
						_1a4e7bda4_indent(_self_);
						_1a4e7b502_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1a806e427:;
					++it;
					goto _iter_begin_1a806e427;
				}
				_iter_end_1a806e427:;
			};
		}));
	}));
}



inline void _1a4e83a59_paramIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e16339_ParamIns>* _93433_p) {
	_1a4e90813_paramIns((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _93433_p);
	_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
	static__1a45a9d0c_param(&((*_self_.alloc)._field_Buf), &((*((*(_93433_p))))._field_Decl));
}



inline void _1a4e83d12_paramsIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a3e16339_ParamIns>>* _94034_params) {
	if (((*(_94034_params)).len() == 0LL)) {
		_1a4e7b502_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1a4e7b502_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80742d9:;
		if (it != expr_end) {
			jule::I64 _94614_i = it - expr->begin();
			jule::Ptr<_1a3e16339_ParamIns> _94621_p = *it;
			{
				_1a4e83a59_paramIns(_self_, &(_94621_p));
				if ((((*(_94034_params)).len() - _94614_i) > 1LL)) {
					_1a4e7b502_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a80742d9:;
			++it;
			_94614_i++;
			goto _iter_begin_1a80742d9;
		}
		_iter_end_1a80742d9:;
	};
	_1a4e7b502_write(_self_, jule::Str::lit(")", 1));
}



inline void _1a4e84175_varInitExpr(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3ebac4b_Var>* _95536_v, jule::Fn<void(void)> _95545_init) {
	if ((*((*(_95536_v))))._field_Statically) {
		_1a4e7b502_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a4e91a23_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_95536_v))))._field_Kind))._field_Kind);
	_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95536_v))))._field_Reference) {
		_1a4e7b502_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a45aa9ab_var(&((*_self_.alloc)._field_Buf), (*(_95536_v)));
	if ((_95545_init != nullptr)) {
		_1a4e7b502_write(_self_, jule::Str::lit(" = ", 3));
		_95545_init();
	};
	_1a4e7b502_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a4e8442d_var(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3ebac4b_Var> _97327_v) {
	if (_1a3dbaa80_IsIgnoreIdent((*(_97327_v))._field_Ident)) {
		return;;
	};
	if ((((*_97327_v.alloc)._field_Value != nullptr) && ((*(*_97327_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_97327_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_97327_v.alloc)._field_Reference) {
				_1a4e84175_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a4e7b502_write(_self_, jule::Str::lit("&(", 2));
					_1a45a2013_model((*_self_.alloc)._field_ec, (*(*(*_97327_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
					_1a4e7b502_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1a4e84175_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a4597646_possibleRefExpr((*_self_.alloc)._field_ec, (*(*(*_97327_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
				}));
			};
			return;;
		};
		_1a4e84175_varInitExpr(_self_, &(_97327_v), nullptr);
		return;;
	};
	if ((*_97327_v.alloc)._field_Reference) {
		_1a4e84175_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a4e7b502_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1a4e98d49_shouldInitialized(&((*((*_97327_v.alloc)._field_Kind))._field_Kind))) {
		_1a4e84175_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a45a22bb_initExpr((*_self_.alloc)._field_ec, (*(*_97327_v.alloc)._field_Kind.alloc)._field_Kind);
		}));
		return;;
	};
	_1a4e84175_varInitExpr(_self_, &(_97327_v), nullptr);
}



inline void _1a4e846d6_funcIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e172d5_FnIns>* _100432_f) {
	_1a4e8244d_funcHead(_self_, _100432_f, false);
	_1a4e83d12_paramsIns(_self_, &((*((*(_100432_f))))._field_Params));
	_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
	_1a4e64cc1_funcScope((*_self_.alloc)._field_sc, (*(_100432_f)));
	if (((*((*(_100432_f))))._field_Scope != nullptr)) {
		_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a4e8498e_func(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e143d1_Fn>* _101429_f) {
	{
		auto expr = &((*((*(_101429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8086098:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _101521_ins = *it;
			{
				_1a4e846d6_funcIns(_self_, &(_101521_ins));
			}
			_iter_next_1a8086098:;
			++it;
			goto _iter_begin_1a8086098;
		}
		_iter_end_1a8086098:;
	};
}



inline void _1a4e84d02_funcTrait(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a4e7990c_traitHash>* _102034_hash, jule::Ptr<_1a3e143d1_Fn>* _102057_f) {
	jule::Str _10219_ident = (*((*(_102057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a808786e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e172d5_FnIns> _102221_ins = *it;
			{
				(*(_102221_ins))._field_Scope=nullptr;
				_1c9754d1c_StrBuilder _102517_s = static__1c97550d6_New((((((*((*(_102057_f))))._field_Ident.len() + _10219_ident.len()) + (*((*(_102034_hash))))._field_ti.len()) + 2LL) + 4LLU));;
				_1c975db28_WriteStr(&_102517_s, _10219_ident);
				_1c975ddd1_WriteByte(&_102517_s, '_');
				_1c975db28_WriteStr(&_102517_s, (*((*(_102034_hash))))._field_ti);
				_1c975ddd1_WriteByte(&_102517_s, '_');
				_1c975db28_WriteStr(&_102517_s, _1b288d588_Itoa((*((*(_102034_hash))))._field_i));
				(*((*(_102057_f))))._field_Ident=_1c975e420_Str(&_102517_s);
				jule::Ptr<_1a4059e2d_TypeKind> _103417_k = (*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind;;
				(*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*((*(_102034_hash))))._field_t, 2)});
				_1a4e846d6_funcIns(_self_, &(_102221_ins));
				(*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind=_103417_k;
			}
			_iter_next_1a808786e:;
			++it;
			goto _iter_begin_1a808786e;
		}
		_iter_end_1a808786e:;
	};
	(*((*(_102057_f))))._field_Ident=_10219_ident;
}



inline void _1a4e85165_traitWrapper(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e143d1_Fn>* _104237_m, jule::Ptr<_1a4e7990c_traitHash>* _104250_hash) {
	_1a4e84d02_funcTrait(_self_, _104250_hash, _104237_m);
	if (((*((*(_104250_hash))))._field_s == nullptr)) {
		if (_20ad69059_Production) {
			_1a4e7b502_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1a4e7b502_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10549_ptr = (!(_1a3e132ae_IsRef((*((*(_104237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1a3e143d1_Fn> _105613_sm = _1a3e032d2_FindMethod((*((*(_104250_hash))))._field_s.ptr(), (*((*(_104237_m))))._field_Ident, false);;
	if (((_105613_sm == nullptr) || ((*(_105613_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1a4e7b9a8_addIndent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("{\n", 2));
	_1a4e7bda4_indent(_self_);
	if (((*(_105613_sm))._field_Exceptional || (!(_1a3e14854_IsVoid(_105613_sm.ptr()))))) {
		_1a4e7b502_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1a45a9449_func(&((*_self_.alloc)._field_Buf), &(_105613_sm));
	_1a4e7b502_write(_self_, jule::Str::lit("(", 1));
	if (_10549_ptr) {
		_1a4e7b502_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1a4e8ecc9_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_104250_hash))))._field_s);
		_1a4e7b502_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_20ad69059_Production))) {
			_1a4e7b502_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1a4e7b502_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1a4e8e966_structure((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*(_105613_sm))._field_Owner);
		_1a4e7b502_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a8093cba:;
		if (it != expr_end) {
			jule::Ptr<_1a3e1290c_Param> _108216_mp = *it;
			{
				_1a4e7b502_write(_self_, jule::Str::lit(", ", 2));
				static__1a45a9d0c_param(&((*_self_.alloc)._field_Buf), &(_108216_mp));
			}
			_iter_next_1a8093cba:;
			++it;
			goto _iter_begin_1a8093cba;
		}
		_iter_end_1a8093cba:;
	};
	_1a4e7b502_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1a4e7bba6_doneIndent(_self_);
}



inline void _1a4e85363_traitWrappers(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80988a2:;
		if (it != expr_end) {
			jule::Ptr<_1a4e7990c_traitHash> _109121_hash = *it;
			{
				{
					auto expr = &((*((*(_109121_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a80992ed:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _109225_m = *it;
						{
							_1a4e85165_traitWrapper(_self_, &(_109225_m), &(_109121_hash));
						}
						_iter_next_1a80992ed:;
						++it;
						goto _iter_begin_1a80992ed;
					}
					_iter_end_1a80992ed:;
				};
			}
			_iter_next_1a80988a2:;
			++it;
			goto _iter_begin_1a80988a2;
		}
		_iter_end_1a80988a2:;
	};
}



inline void _1a4e856c6_traitDataMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e276ad_Trait>* _109841_t, jule::Ptr<_1a4e7990c_traitHash>* _109853_hash) {
	{
		auto expr = &((*((*(_109841_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a809a376:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _109921_m = *it;
			{
				_1c9754d1c_StrBuilder _110017_mIdent = static__1c97550d6_New((*(_109921_m))._field_Ident.len());;
				static__1a45a9449_func(&(_110017_mIdent), &(_109921_m));
				_1a4e7bda4_indent(_self_);
				_1a4e7b502_write(_self_, jule::Str::lit(".", 1));
				_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_110017_mIdent));
				_1a4e7b502_write(_self_, jule::Str::lit("=", 1));
				_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_110017_mIdent));
				_1a4e7b502_write(_self_, jule::Str::lit("_", 1));
				_1a4e7b502_write(_self_, (*((*(_109853_hash))))._field_ti);
				_1a4e7b502_write(_self_, jule::Str::lit("_", 1));
				_1a4e7b502_write(_self_, _1b288d588_Itoa((*((*(_109853_hash))))._field_i));
				_1a4e7b502_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1a809a376:;
			++it;
			goto _iter_begin_1a809a376;
		}
		_iter_end_1a809a376:;
	};
}



inline void _1a4e85a39_traitData(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a4e7990c_traitHash>* _111534_hash, jule::Ptr<_1a3e276ad_Trait>* _111557_old) {
	if (((*((*((*(_111534_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_1c9754d1c_StrBuilder _111913_ident = static__1c97550d6_New((*(*((*(_111534_hash))))._field_t.alloc)._field_Ident.len());;
	static__1a45a9a21_traitDecl(&(_111913_ident), (*((*(_111534_hash))))._field_t);
	if (((*((*(_111534_hash))))._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1a4e7bba6_doneIndent(_self_);
			_1a4e7bda4_indent(_self_);
			_1a4e7b502_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1a4e7b502_write(_self_, jule::Str::lit("static ", 7));
		_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_111913_ident));
		_1a4e7b502_write(_self_, jule::Str::lit("MptrData ", 9));
		_1a4e7b7aa_writeBytes(_self_, _1c975edc1_Buf(&_111913_ident));
		_1a4e7b502_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*((*(_111534_hash))))._field_t;
		_1a4e7b9a8_addIndent(_self_);
	};
	_1a4e7bda4_indent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("{\n", 2));
	_1a4e7b9a8_addIndent(_self_);
	_1a4e856c6_traitDataMethods(_self_, &((*((*(_111534_hash))))._field_t), _111534_hash);
	_1a4e7bba6_doneIndent(_self_);
	_1a4e7bda4_indent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1a4e85c37_traitDatas(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	jule::Ptr<_1a3e276ad_Trait> _114517_old = nullptr;;
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8bb713a:;
		if (it != expr_end) {
			jule::Ptr<_1a4e7990c_traitHash> _114621_hash = *it;
			{
				_1a4e85a39_traitData(_self_, &(_114621_hash), &(_114517_old));
			}
			_iter_next_1a8bb713a:;
			++it;
			goto _iter_begin_1a8bb713a;
		}
		_iter_end_1a8bb713a:;
	};
	if ((_114517_old != nullptr)) {
		_1a4e7bba6_doneIndent(_self_);
		_1a4e7bda4_indent(_self_);
		_1a4e7b502_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1a4e85e35_globals(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8bb8bca:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _115721_v = *it;
			{
				_1a4e91a23_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_115721_v))._field_Kind))._field_Kind);
				_1a4e7b502_write(_self_, jule::Str::lit(" ", 1));
				static__1a45aa9ab_var(&((*_self_.alloc)._field_Buf), _115721_v);
				_1a4e7b502_write(_self_, jule::Str::lit(" = ", 3));
				_1a45a2013_model((*_self_.alloc)._field_ec, (*((*((*_115721_v.alloc)._field_Value))._field_Data))._field_Model);
				_1a4e7b502_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8bb8bca:;
			++it;
			goto _iter_begin_1a8bb8bca;
		}
		_iter_end_1a8bb8bca:;
	};
}



inline void _1a4e86133_decls(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7ea11_traitDecls(_self_);
	_1a4e7eeb7_structurePlainDecls(_self_);
	_1a4e81b34_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1c975e8a4_Len(&(*_self_.alloc)._field_Buf);
	_1a4e81d32_structureMethodDecls(_self_);
	_1a4e83240_funcDecls(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	_1a4e837a1_traitDataTypes(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	_1a4e85363_traitWrappers(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	_1a4e85c37_traitDatas(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1c975e8a4_Len(&(*_self_.alloc)._field_Buf);
	_1a4e85e35_globals(_self_);
}



inline void _1a4e863db_structureMethods(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _118541_s) {
	{
		auto expr = &((*((*(_118541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8bc17c6:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _118621_f = *it;
			{
				_1a4e8498e_func(_self_, &(_118621_f));
				_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1a8bc17c6:;
			++it;
			goto _iter_begin_1a8bc17c6;
		}
		_iter_end_1a8bc17c6:;
	};
}



inline void _1a4e86694_structureOstream(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _119241_s) {
	_1a4e7bda4_indent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1a45aa3d4_structureIns(&((*_self_.alloc)._field_Buf), _119241_s);
	_1a4e7b502_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a4e7b9a8_addIndent(_self_);
	_1a4e7bda4_indent(_self_);
	jule::Ptr<_1a3e143d1_Fn> _120013_fts = _1a3e032d2_FindMethod((*(_119241_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1a3ebc4ab_Str(_120013_fts)) {
		_1a4e7b502_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1a45a9449_func(&((*_self_.alloc)._field_Buf), &(_120013_fts));
		_1a4e7b502_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a45a2c7d_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_119241_s))))._field_Decl))._field_Ident);
		_1a4e7b502_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8bc6402:;
			if (it != expr_end) {
				jule::I64 _121018_i = it - expr->begin();
				jule::Ptr<_1a3e016ba_FieldIns> _121025_f = *it;
				{
					_1a4e7bda4_indent(_self_);
					_1a4e7b502_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a45a2c7d_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_121025_f))._field_Decl))._field_Ident);
					_1a4e7b502_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1a3e0226a_StructIns> _121717_strct = _1a405db02_Struct((*_121025_f.alloc)._field_Kind.ptr());;
					if ((((_121717_strct != nullptr) && ((*_121717_strct.alloc)._field_Decl != nullptr)) && (*(*_121717_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1a4e7b502_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1a45aa6c0_field(&((*_self_.alloc)._field_Buf), &((*_121025_f.alloc)._field_Decl));
						_1a4e7b502_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a4e7b502_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1a45aa6c0_field(&((*_self_.alloc)._field_Buf), &((*_121025_f.alloc)._field_Decl));
					};
					if (((_121018_i + 1LL) < (*((*(_119241_s))))._field_Fields.len())) {
						_1a4e7b502_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a4e7b502_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1a8bc6402:;
				++it;
				_121018_i++;
				goto _iter_begin_1a8bc6402;
			}
			_iter_end_1a8bc6402:;
		};
		_1a4e7bda4_indent(_self_);
		_1a4e7b502_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a4e7bda4_indent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a4e7bba6_doneIndent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a4e8694c_structureIns(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e0226a_StructIns>* _124337_s) {
	_1a4e863db_structureMethods(_self_, _124337_s);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	_1a4e86694_structureOstream(_self_, _124337_s);
}



inline void _1a4e86c05_structure(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3dee4dc_Struct>* _124934_s) {
	{
		auto expr = &((*((*(_124934_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8bd07e6:;
		if (it != expr_end) {
			jule::Ptr<_1a3e0226a_StructIns> _125021_ins = *it;
			{
				_1a4e8694c_structureIns(_self_, &(_125021_ins));
				_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1a8bd07e6:;
			++it;
			goto _iter_begin_1a8bd07e6;
		}
		_iter_end_1a8bd07e6:;
	};
}



inline void _1a4e86e03_structures(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8bd1044:;
		if (it != expr_end) {
			jule::Ptr<_1a3dee4dc_Struct> _125721_s = *it;
			{
				if (((*(_125721_s))._field_Token != nullptr)) {
					_1a4e86c05_structure(_self_, &(_125721_s));
					_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1a8bd1044:;
			++it;
			goto _iter_begin_1a8bd1044;
		}
		_iter_end_1a8bd1044:;
	};
}



inline void _1a4e87101_funcs(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _126635_pkg) mutable -> void {
		_1a4e8808b_iterFiles(_126635_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _126736_file) mutable -> void {
			{
				auto expr = &((*((*(_126736_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a8bd5345:;
				if (it != expr_end) {
					jule::Ptr<_1a3e143d1_Fn> _126829_f = *it;
					{
						if (((!(_20ad68696_Test)) && _1a4e98a80_hasDirective(&((*(_126829_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1a8bd5345;
						};
						if (((!((*_126829_f.alloc)._field_Binded)) && ((*_126829_f.alloc)._field_Token != nullptr))) {
							_1a4e8498e_func(_self_, &(_126829_f));
							_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1a8bd5345:;
					++it;
					goto _iter_begin_1a8bd5345;
				}
				_iter_end_1a8bd5345:;
			};
		}));
	}));
}



inline void _1a4e873a9_pushInit(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_, jule::Ptr<_1a3e7a986_Package>* _128133_pkg) {
	_1a4e8808b_iterFiles(_128133_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)>([=](jule::Ptr<_1a4023aea_SymbolTable>* _128232_file) mutable -> void {
		{
			auto expr = &((*((*(_128232_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8bd7d92:;
			if (it != expr_end) {
				jule::Ptr<_1a3e143d1_Fn> _128320_f = *it;
				{
					if ((*(_128320_f))._field_Ident.equal("init", 4)) {
						_1a4e7bda4_indent(_self_);
						static__1a45a9449_func(&((*_self_.alloc)._field_Buf), &(_128320_f));
						_1a4e7b502_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1a8bd7d92:;
				++it;
				goto _iter_begin_1a8bd7d92;
			}
			_iter_end_1a8bd7d92:;
		};
	}));
}



inline void _1a4e875a7_initCaller(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7b502_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a4e7b9a8_addIndent(_self_);
	_1a4e7e615_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a3e7a986_Package>*)>([=](jule::Ptr<_1a3e7a986_Package>* _129635_pkg) mutable -> void {
		_1a4e873a9_pushInit(_self_, _129635_pkg);
	}));
	_1a4e7bba6_doneIndent(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a4e877a5_end(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7b502_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_20ad68696_Test) {
		_1a4e7b502_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a4e7b502_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a4e879a3_serializeHead(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e7e35c_prepareStructures(_self_);
	_1a4e7e813_buildTraitMap(_self_);
	_1a4e7dba8_head(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
	_1a4e86133_decls(_self_);
	if ((_1c975e8a4_Len(&(*_self_.alloc)._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133117_head = jule::Slice<jule::U8>::alloc(0LL, (_1c975e8a4_Len(&(*_self_.alloc)._field_Buf) + _1c975e8a4_Len(&(*_self_.alloc)._field_resultDecls)), 0);;
		(_133117_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_headPos));;
		(_133117_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_resultDecls));;
		(*_self_.alloc)._field_declPos+=_1c975e8a4_Len(&(*_self_.alloc)._field_resultDecls);
		(_133117_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_headPos));;
		{
			_1c9760179_SetBuf(&(*_self_.alloc)._field_Buf, _133117_head);
		};
	};
	_1a4e7b502_write(_self_, jule::Str::lit("\n", 1));
	_1a4e86e03_structures(_self_);
	_1a4e87101_funcs(_self_);
	_1a4e875a7_initCaller(_self_);
	_1a4e7b502_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_1c975e8a4_Len(&(*_self_.alloc)._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134617_head = jule::Slice<jule::U8>::alloc(0LL, (_1c975e8a4_Len(&(*_self_.alloc)._field_Buf) + _1c975e8a4_Len(&(*_self_.alloc)._field_anyObj)), 0);;
		(_134617_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_declPos));;
		(_134617_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_anyObj));;
		(_134617_head).append(_1c975edc1_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_declPos));;
		{
			_1c9760179_SetBuf(&(*_self_.alloc)._field_Buf, _134617_head);
		};
	};
}



inline void _1a4e87ba1_Serialize(jule::Ptr<_1a4e7ad4d_ObjectCoder> _self_) {
	_1a4e879a3_serializeHead(_self_);
	_1a4e877a5_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a4e7ad4d_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a417c0a5_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a39bdc16_ObjectDeadCode> static__1a39be1ab_new(jule::Ptr<_1a4a6456e_IR>* _3524_ir) {
	return jule::new_ptr<_1a39bdc16_ObjectDeadCode>(_1a39bdc16_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1a7544eb4_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e276ad_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1a3e276ad_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1a7546ba8:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1a7546a87:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7547ca8:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1a7547ca8:;
			++it;
			_5313_i++;
			goto _iter_begin_1a7547ca8;
		}
		_iter_end_1a7547ca8:;
	};
	return false;;
}

inline jule::Bool _1a754a915_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e172d5_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1a3e172d5_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1a754c54e:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1a754c494:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a754c4e9:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1a754c4e9:;
			++it;
			_5313_i++;
			goto _iter_begin_1a754c4e9;
		}
		_iter_end_1a754c4e9:;
	};
	return false;;
}

inline jule::Bool _1a7553c4d_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e0226a_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1a3e0226a_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1a7555e70:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1a7556091:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7557119:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1a7557119:;
			++it;
			_5313_i++;
			goto _iter_begin_1a7557119;
		}
		_iter_end_1a7557119:;
	};
	return false;;
}

inline jule::Bool _1a7558a22_isLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3ebac4b_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1a755a419:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1a755a5a1:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7559979:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1a7559979:;
			++it;
			_5313_i++;
			goto _iter_begin_1a7559979;
		}
		_iter_end_1a7559979:;
	};
	return false;;
}



inline void _1a754538d_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e276ad_Trait> _6135_t) {
	{
		
{
			_case_begin_1a7548d20:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1a3e276ad_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1a7548b77:;
	};
}

inline void _1a754acde_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e172d5_FnIns> _6135_t) {
	{
		
{
			_case_begin_1a754e9e6:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3e172d5_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1a754eba0:;
	};
}

inline void _1a7551cc3_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e0226a_StructIns> _6135_t) {
	{
		
{
			_case_begin_1a7553500:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1a3e0226a_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1a75533bd:;
	};
}

inline void _1a7558deb_pushLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3ebac4b_Var> _6135_t) {
	{
		
{
			_case_begin_1a755cb47:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::make({_6135_t}));
			}
		}
		_match_end_1a755ca8c:;
	};
}



inline void _1a39bea5d_setReferencesAsLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e1a4a3_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7813_i = 0LL;;
	for (; (_7813_i < _1a3e1ab9b_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1a3e1aedc_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1a7543b72:;
					{
						jule::Ptr<_1a3e276ad_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1a3e276ad_Trait>();;
						if (_1a7544eb4_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1a7542e18;
						};
						_1a754538d_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a7544777:;
							if (it != expr_end) {
								jule::Ptr<_1a3e143d1_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a7545b96:;
										if (it != expr_end) {
											jule::Ptr<_1a3e172d5_FnIns> _8933_mins = *it;
											{
												if (_1a754a915_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1a7545b96;
												};
												_1a754acde_pushLive(_self_, _8933_mins);
												_1a39bea5d_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1a7545b96:;
											++it;
											goto _iter_begin_1a7545b96;
										}
										_iter_end_1a7545b96:;
									};
								}
								_iter_next_1a7544777:;
								++it;
								goto _iter_begin_1a7544777;
							}
							_iter_end_1a7544777:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1a7543a1d:;
					{
						jule::Ptr<_1a3e172d5_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1a3e172d5_FnIns>();;
						if (_1a754a915_isLive(_self_, &(_9821_f))) {
							goto _match_end_1a75438db;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1a7553c4d_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1a7551cc3_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1a39bea5d_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1a754acde_pushLive(_self_, _9821_f);
						_1a39bea5d_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1a7543c1b:;
					{
						jule::Ptr<_1a3ebac4b_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1a3ebac4b_Var>();;
						if (_1a7558a22_isLive(_self_, &(_11121_v))) {
							goto _match_end_1a75438db;
						};
						_1a7558deb_pushLive(_self_, _11121_v);
						_1a39bea5d_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1a7543c82:;
					{
						jule::Ptr<_1a3e0226a_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1a3e0226a_StructIns>();;
						if (_1a7553c4d_isLive(_self_, &(_11821_s))) {
							goto _match_end_1a75438db;
						};
						_1a7551cc3_pushLive(_self_, _11821_s);
						_1a39bea5d_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a755e808:;
							if (it != expr_end) {
								jule::Ptr<_1a3e143d1_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a7560b6c:;
										if (it != expr_end) {
											jule::Ptr<_1a3e172d5_FnIns> _12533_ins = *it;
											{
												if (_1a754a915_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1a7560b6c;
												};
												if (_1a39c2731_isTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1a754acde_pushLive(_self_, _12533_ins);
													_1a39bea5d_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1a754acde_pushLive(_self_, _12533_ins);
														_1a39bea5d_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1a7560b6c:;
											++it;
											goto _iter_begin_1a7560b6c;
										}
										_iter_end_1a7560b6c:;
									};
								}
								_iter_next_1a755e808:;
								++it;
								goto _iter_begin_1a755e808;
							}
							_iter_end_1a755e808:;
						};
					}
				}
				_match_end_1a75438db:;
			};
		}
	_iter_next_1a7542e18:;
	}
	_iter_end_1a7542e18:;;
}



inline void _1a39bed16_inits(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e7a986_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8378863:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a83792c0:;
					if (it != expr_end) {
						jule::Ptr<_1a3e143d1_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a3e172d5_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3e172d5_FnIns>>::make({_16025_ins}));
								_1a39bea5d_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1a83792c0:;
						++it;
						goto _iter_begin_1a83792c0;
					}
					_iter_end_1a83792c0:;
				};
			}
			_iter_next_1a8378863:;
			++it;
			goto _iter_begin_1a8378863;
		}
		_iter_end_1a8378863:;
	};
}



inline void _1a39c00be_collectLivePackage(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e7a986_Package>* _16843_pkg) {
	_1a39bed16_inits(_self_, _16843_pkg);
	if (_20ad68696_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a837bcea:;
			if (it != expr_end) {
				jule::Ptr<_1a4023aea_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a837c724:;
						if (it != expr_end) {
							jule::Ptr<_1a3e143d1_Fn> _17529_f = *it;
							{
								if (_1a39c2368_hasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1a3e172d5_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3e172d5_FnIns>>::make({_17729_ins}));
									_1a39bea5d_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1a837c724:;
							++it;
							goto _iter_begin_1a837c724;
						}
						_iter_end_1a837c724:;
					};
				}
				_iter_next_1a837bcea:;
				++it;
				goto _iter_begin_1a837bcea;
			}
			_iter_end_1a837bcea:;
		};
	};
}



inline void _1a39c02bc_collectLive(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a837c45a:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1a39c00be_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1a837c45a:;
			++it;
			goto _iter_begin_1a837c45a;
		}
		_iter_end_1a837c45a:;
	};
	_1a39c00be_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1a3e143d1_Fn> _19513_main = _1a3e7c01a_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1a3e172d5_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3e172d5_FnIns>>::make({_19613_ins}));
	_1a39bea5d_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1a39c0575_removeDeadGlobals(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _20142_vars) {
	jule::I64 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1a3ebac4b_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1a7558a22_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1a8383818;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1a8383818:;
	}
	_iter_end_1a8383818:;;
}



inline void _1a39c082d_removeDeadFns(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3e143d1_Fn>>* _21338_funcs) {
	jule::I64 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1a3e143d1_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I64 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a3e172d5_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1a754a915_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1a83861cd;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1a83861cd:;
			}
			_iter_end_1a83861cd:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1a83853db;
			};
			(_21413_i)++;
		}
	_iter_next_1a83853db:;
	}
	_iter_end_1a83853db:;;
}



inline void _1a39c0ad6_removeDeadStructs(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>* _23442_structs) {
	jule::I64 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1a3dee4dc_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I64 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a3e0226a_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1a39c082d_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1a7553c4d_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1a8389e18;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1a8389e18:;
			}
			_iter_end_1a8389e18:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1a8389126;
			};
			(_23513_i)++;
		}
	_iter_next_1a8389126:;
	}
	_iter_end_1a8389126:;;
}



inline void _1a39c0d8e_removeDeadTraits(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3e276ad_Trait>>* _25641_traits) {
	jule::I64 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1a3e276ad_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1a7544eb4_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1a838d8de;
			};
			jule::I64 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a3dee4dc_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1a838e428;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1a838e428:;
			}
			_iter_end_1a838e428:;;
			(_25713_i)++;
		}
	_iter_next_1a838d8de:;
	}
	_iter_end_1a838d8de:;;
}



inline void _1a39c1147_removeDeadsFile(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a4023aea_SymbolTable>* _27740_file) {
	_1a39c082d_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1a39c0ad6_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1a39c0d8e_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1a39c0575_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1a39c1400_removeDeadsPackage(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_, jule::Ptr<_1a3e7a986_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8394120:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _28521_file = *it;
			{
				_1a39c1147_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1a8394120:;
			++it;
			goto _iter_begin_1a8394120;
		}
		_iter_end_1a8394120:;
	};
}



inline void _1a39c15ed_removeDeads(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a839487e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1a39c1400_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1a839487e:;
			++it;
			goto _iter_begin_1a839487e;
		}
		_iter_end_1a839487e:;
	};
	_1a39c1400_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1a39c17eb_elimanate(jule::Ptr<_1a39bdc16_ObjectDeadCode> _self_) {
	_1a39c02bc_collectLive(_self_);
	_1a39c15ed_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a39bdc16_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a4a6456e_IR__jule_tuple_s_1c980bca3_Log static__1a4a64a14_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1a4a6456e_IR__jule_tuple_s_1c980bca3_Log __jule_func_result;
	jule::Ptr<_1a4a61add_JuleImporter> _2813_importer = static__1a4a61ed9_New(_1a4a664e9_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> _2913_files;;
	jule::Slice<_1c980bca3_Log> _2924_logs;;
	({
		__jule_tuple_sx_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a634c4_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e7a986_Package> _3913_pkg;;
	({
		__jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a407b1b3_AnalyzePackage(_2913_files, jule::Trait<_1a3e74b4a_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4a6456e_IR> _4413_ir = jule::new_ptr<_1a4a6456e_IR>(_1a4a6456e_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1a4a62270_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1a4a662da_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a4a64eed_appendStructs(_1a4a6456e_IR* _self_, jule::Ptr<_1a3e7a986_Package>* _5633_p, jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7508560:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7508e9a:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1a7508e9a:;
						++it;
						goto _iter_begin_1a7508e9a;
					}
					_iter_end_1a7508e9a:;
				};
			}
			_iter_next_1a7508560:;
			++it;
			goto _iter_begin_1a7508560;
		}
		_iter_end_1a7508560:;
	};
}



inline jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _1a4a65284_GetAllStructures(_1a4a6456e_IR* _self_) {
	jule::Slice<jule::Ptr<_1a3dee4dc_Struct>> _6917_buffer = nullptr;;
	_1a4a64eed_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a750a177:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1a4a64eed_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1a750a177:;
			++it;
			goto _iter_begin_1a750a177;
		}
		_iter_end_1a750a177:;
	};
	return _6917_buffer;;
}



inline void _1a4a655e7_appendGlobals(_1a4a6456e_IR* _self_, jule::Ptr<_1a3e7a986_Package>* _7933_p, jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a750b7a5:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a750c1e0:;
					if (it != expr_end) {
						jule::Ptr<_1a3ebac4b_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1a750c1e0:;
						++it;
						goto _iter_begin_1a750c1e0;
					}
					_iter_end_1a750c1e0:;
				};
			}
			_iter_next_1a750b7a5:;
			++it;
			goto _iter_begin_1a750b7a5;
		}
		_iter_end_1a750b7a5:;
	};
}



inline jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _1a4a6587d_GetAllGlobals(_1a4a6456e_IR* _self_) {
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _9217_buffer = nullptr;;
	_1a4a655e7_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a750db09:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1a4a655e7_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1a750db09:;
			++it;
			goto _iter_begin_1a750db09;
		}
		_iter_end_1a750db09:;
	};
	return _9217_buffer;;
}



inline void _1a4a65a7b_Order(_1a4a6456e_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a4a65284_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a4a6587d_GetAllGlobals(_self_);
	static__1a4a6795c_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a4a67b8d_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1a4a6456e_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3e025de_Str(_1a3e0226a_StructIns* _self_) {
	_1c9754d1c_StrBuilder _23913_kind = static__1c97550d6_New(32LL);;
	_1c975db28_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1c975ddd1_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6d6014d:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> *_24320_g = it;
				{
					_1c975db28_WriteStr(&_23913_kind, _1a405a2e6_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1c975ddd1_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1a6d6014d:;
				++it;
				_24317_i++;
				goto _iter_begin_1a6d6014d;
			}
			_iter_end_1a6d6014d:;
		};
		_1c975ddd1_WriteByte(&_23913_kind, ']');
	};
	return _1c975e420_Str(&_23913_kind);;
}



inline jule::Bool _1a3e02930_Equal(jule::Ptr<_1a3e0226a_StructIns> _self_, jule::Ptr<_1a4059e2d_TypeKind> _25521_other) {
	jule::Ptr<_1a3e0226a_StructIns> _2569_s = _1a405db02_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1a405a637_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a6d64163:;
	}
	_iter_end_1a6d64163:;;
	return true;;
}



inline jule::Bool _1a3e02dd6_Same(_1a3e0226a_StructIns* _self_, jule::Ptr<_1a3e0226a_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d66c6a:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1a4058547_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1a4058547_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a405a637_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a6d66c6a:;
			++it;
			_28713_i++;
			goto _iter_begin_1a6d66c6a;
		}
		_iter_end_1a6d66c6a:;
	};
	return true;;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e032d2_FindMethod(_1a3e0226a_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d69795:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1a6d69795:;
			++it;
			goto _iter_begin_1a6d69795;
		}
		_iter_end_1a6d69795:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e016ba_FieldIns> _1a3e03623_FindField(_1a3e0226a_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6aab5:;
		if (it != expr_end) {
			jule::Ptr<_1a3e016ba_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1a6d6aab5:;
			++it;
			goto _iter_begin_1a6d6aab5;
		}
		_iter_end_1a6d6aab5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e03964_FindStatic(_1a3e0226a_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6b126:;
		if (it != expr_end) {
			jule::Ptr<_1a3ebac4b_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1a6d6b126:;
			++it;
			goto _iter_begin_1a6d6b126;
		}
		_iter_end_1a6d6b126:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e0226a_StructIns _Src) {
	_Stream << _1a3e025de_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c9034311_Cmd> static__1c903472e_New(jule::Str _2619_path) {
	return jule::new_ptr<_1c9034311_Cmd>(_1c9034311_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1c903492c_Spawn(_1c9034311_Cmd* _self_) {
	return _1c9088c8e_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1c9034db1_Wait(_1c9034311_Cmd* _self_) {
	return _1c9089223_wait(_self_);
}



inline jule::VoidExceptional _1c9088c8e_spawn(_1c9034311_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:13"));;
	};
	jule::Str _859_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8613_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8613_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_20c044013_Fcntl(static_cast<jule::I64>(_8613_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_8613_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
		_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a64a6982:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a64a5b5c:;
			{
				_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
				jule::Slice<jule::Str> _10117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_10117_args[0LL]=_859_path;
				(_10117_args).append((*(_self_))._field_Args);;
				({
					auto except = _1c9088a3b_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1c908880a_execvp(&(_859_path), &(_10117_args));
				jule::Str _10613_code = _1c908484a_Itoa(_20be99584_GetLastErrno());;
				{
					_20c057675_Write(static_cast<jule::I64>(_8613_pipe[1LL]), (&(_10613_code[0LL])), static_cast<jule::U64>(_10613_code.len()));
				};
				_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
				_1c908a532_Exit(1LL);
			}
		}
		else {
			_case_begin_1a64a1592:;
			{
				_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[1LL]));
				jule::Array<jule::U8,16> _11221_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _11313_n = _20c056de4_Read(static_cast<jule::I64>(_8613_pipe[0LL]), (&(_11221_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_20c0572bd_Close(static_cast<jule::I64>(_8613_pipe[0LL]));
				if ((_11313_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11717_code;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c907b226_AtoiBp((&(_11221_buf[0LL])), _11313_n);
						_11717_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1c90899b5_processErrorFromCode(_11717_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1a64a3a7d:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1c9089223_wait(_1c9034311_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:13"));;
	};
	jule::I64 _13713_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13713_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1c9089c18_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_13713_stat)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1c9034311_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _20c003ba4_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _20c034498_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {};
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1a55c152b:;
		}
		_iter_end_1a55c152b:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::Slice<jule::U8> _20c03472e_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a55c1ebb:;
		if (it != expr_end) {
			jule::I64 _949_i = it - expr->begin();
			jule::U8 *_9412_b = it;
			{
				if (((*(_9412_b)) == 0LLU)) {
					jule::Slice<jule::U8> _9617_bytes = jule::Slice<jule::U8>::alloc((_949_i + 1LL), (_949_i + 1LL), 0);;
					jule::copy((_9617_bytes), (_9315_s.slice(0LL, _9617_bytes.len())).fake_slice());
					return _9617_bytes;;
				};
			}
			_iter_next_1a55c1ebb:;
			++it;
			_949_i++;
			goto _iter_begin_1a55c1ebb;
		}
		_iter_end_1a55c1ebb:;
	};
	jule::Slice<jule::U8> _1019_bytes = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL), 0);;
	jule::copy((_1019_bytes), (_9315_s).fake_slice());
	return _1019_bytes;;
}



inline jule::I64 _20be99584_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _20c044013_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I64 _20c044387_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I64 _20c0447b6_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _20c044b3a_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _20c045135_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _20c045311_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _20c0455a8_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I64 _20c045eb0_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I64 _20c046279_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I64 _20c046543_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I64 _20c056de4_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _20c0572bd_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _20c057675_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _20c0578a6_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _20c12b6d3_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1a56246c2_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _20c13747a_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a56246c2_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _20c137711_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _20c12b6d3_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _20c1379ca_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _20c1616d5_getLastOsError(void) {
	jule::I64 _305_err = _20be99584_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a562c444:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a562bd28:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a562bd8e:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a562be16:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a562be8d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a562c125:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a562c18b:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a562bad6:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a562bc3a:;
	};
}



inline jule::Slice<jule::Str> _20c162681_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _20c162ae3_WorkingDir(void) {
	return _20c16352d_getwd();
}



inline jule::Exceptional<jule::Str> _20c16352d_getwd(void) {
	jule::U8* _119_buf = _20c044b3a_Getcwd(nullptr, 0LLU);;
	if ((_119_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_20c1616d5_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _155_pwd = _20c034498_BytePtrToStr(_119_buf);;
	{
		_20c003ba4_Free(_119_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_155_pwd};;
}



inline jule::Bool _1c957d629_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1c95db39b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1c95e47e4_isExcludingLatin(_1c9587600_Letter, _7613_r);;
}



inline jule::Bool _1c95e3b67_is16(jule::Slice<_1c95e1dc9_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6213931:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1c95e1dc9_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a6213931:;
				++it;
				_19313_i++;
				goto _iter_begin_1a6213931;
			}
			_iter_end_1a6213931:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_1c95e1dc9_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1a6212655:;
	}
	_iter_end_1a6212655:;;
	return false;;
}



inline jule::Bool _1c95e3edb_is32(jule::Slice<_1c95e2407_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a621a042:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1c95e2407_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a621a042:;
				++it;
				_23013_i++;
				goto _iter_begin_1a621a042;
			}
			_iter_end_1a621a042:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_1c95e2407_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1a621999d:;
	}
	_iter_end_1a621999d:;;
	return false;;
}



inline jule::Bool _1c95e47e4_isExcludingLatin(jule::Ptr<_1c95e287a_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1c95e1dc9_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _1c95e3b67_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1c95e2407_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _1c95e3edb_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1c95e4a36_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1c95db39b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1c95e47e4_isExcludingLatin(_1c958d8c0_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1c96eb610_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1c96ea378_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1c96ea92d_acceptRange _1965_accept = _1c96eacc4_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c96eb951_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1c96ea378_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1c96ea92d_acceptRange _2435_accept = _1c96eacc4_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c96ebea1_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_1c96ed6bc_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1a6263794;
			};
		}
	_iter_next_1a6263794:;
	}
	_iter_end_1a6263794:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1c96ec9eb_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _1c96ecd70_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1c96ecd70_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1a6272d25:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1a6271906:;
			{
				_41242_r=128LL;
				goto _case_begin_1a627196c;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1a627196c:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1a62711a8:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1a6271153:;
	};
}



inline jule::I64 _1c96ed403_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1a627b306;
			};
			jule::U8 _4829_x = _1c96ea378_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1a627b306;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1a627b306;
			};
			_1c96ea92d_acceptRange _4929_accept = _1c96eacc4_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1a627b306:;
	}
	_iter_end_1a627b306:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c96ed6bc_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1c973e4dd_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I64)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1a62a06c1:;
	}
	_iter_end_1a62a06c1:;;
	return -1LL;;
}



inline jule::I64 _1c973eb1a_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62a0a78:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1a62a0a78:;
			++it;
			_709_i++;
			goto _iter_begin_1a62a0a78;
		}
		_iter_end_1a62a0a78:;
	};
	return -1LL;;
}



inline jule::I64 _1c973ee8e_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1c973e4dd_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1c974028b_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_1c9754d1c_StrBuilder _189_ss = static__1c97550d6_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1c975db28_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1a62be15c:;
	}
	_iter_end_1a62be15c:;;
	return _1c975e420_Str(&_189_ss);;
}



inline jule::Bool _1c974070e_hasPrefix(jule::Str* _2515_s, jule::Str* _2524_sub, jule::I64 _2538_start) {
	if ((((*(_2524_sub)).len() == 0LL) || (((*(_2515_s)).len() - _2538_start) < (*(_2524_sub)).len()))) {
		return false;;
	};
	jule::I64 _309_i = 0LL;;
	for (; (_309_i < (*(_2524_sub)).len()); ({
		jule::I64 ___jule_assign_arg = (_309_i + 1LL);
		jule::I64 _1___jule_assign_arg = (_2538_start + 1LL);
		_309_i = ___jule_assign_arg;
		_2538_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2515_s))[_2538_start] != (*(_2524_sub))[_309_i])) {
				return false;;
			};
		}
	_iter_next_1a62c11a3:;
	}
	_iter_end_1a62c11a3:;;
	return true;;
}



inline jule::Bool _1c9740a83_HasPrefix(jule::Str _4014_s, jule::Str _4022_sub) {
	return _1c974070e_hasPrefix(&(_4014_s), &(_4022_sub), 0LL);;
}



inline jule::Bool _1c9741039_hasSuffix(jule::Str* _4415_s, jule::Str* _4424_sub, jule::I64 _4438_start) {
	if ((((*(_4424_sub)).len() == 0LL) || (((*(_4415_s)).len() - _4438_start) < (*(_4424_sub)).len()))) {
		return false;;
	};
	_4438_start=((*(_4415_s)).len() - _4438_start);
	jule::I64 _509_i = 0LL;;
	for (; (_509_i < (*(_4424_sub)).len()); (_509_i)++) {
		{
			if (((*(_4415_s))[((_4438_start - _509_i) - 1LL)] != (*(_4424_sub))[(((*(_4424_sub)).len() - _509_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a62c3abd:;
	}
	_iter_end_1a62c3abd:;;
	return true;;
}



inline jule::Bool _1c974137a_HasSuffix(jule::Str _6014_s, jule::Str _6022_sub) {
	return _1c9741039_hasSuffix(&(_6014_s), &(_6022_sub), 0LL);;
}



inline jule::I64 _1c97417a9_FindAt(jule::Str _6811_s, jule::Str _6819_sub, jule::I64 _6833_i) {
	if ((((_6833_i < 0LL) || (_6811_s.len() < _6819_sub.len())) || (_6819_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_6833_i < _6811_s.len()); (_6833_i)++) {
		{
			if (_1c974070e_hasPrefix(&(_6811_s), &(_6819_sub), _6833_i)) {
				return _6833_i;;
			};
		}
	_iter_next_1a62c6dac:;
	}
	_iter_end_1a62c6dac:;;
	return -1LL;;
}



inline jule::I64 _1c9741b2d_Find(jule::Str _839_s, jule::Str _8317_sub) {
	return _1c97417a9_FindAt(_839_s, _8317_sub, 0LL);;
}



inline jule::I64 _1c974216c_FindLastAt(jule::Str _9115_s, jule::Str _9123_sub, jule::I64 _9133_i) {
	jule::I64 _929_j = ((_9133_i - _9123_sub.len()) + 1LL);;
	if (((((_9123_sub.len() == 0LL) || (_9133_i < 0LL)) || (_9133_i >= _9115_s.len())) || (_929_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a62c9b07:;
	for (; (_929_j >= 0LL); (_929_j)--) {
		{
			jule::I64 _9813_k = _929_j;;
			jule::I64 _9913_z = 0LL;;
			for (; (_9913_z < _9123_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_9813_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_9913_z + 1LL);
				_9813_k = ___jule_assign_arg;
				_9913_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9115_s[_9813_k] != _9123_sub[_9913_z])) {
						goto _iter_next_1a62c9761;
					};
				}
			_iter_next_1a62ca71d:;
			}
			_iter_end_1a62ca71d:;;
			return _929_j;;
		}
	_iter_next_1a62c9761:;
	}
	_iter_end_1a62c9761:;;
	return -1LL;;
}



inline jule::I64 _1c9742469_FindLast(jule::Str _11313_s, jule::Str _11321_sub) {
	return _1c974216c_FindLastAt(_11313_s, _11321_sub, (_11313_s.len() - 1LL));;
}



inline jule::I64 _1c9743bb8_FindLastByte(jule::Str _17717_s, jule::U8 _17725_b) {
	return _1c973ee8e_FindLastByteStr(_17717_s, _17725_b);;
}



inline jule::I64 _1c974426d_FindRune(jule::Str _18413_s, jule::I32 _18421_r) {
	jule::I64 _1859_i = 0LL;;
	while ((_1859_i < _18413_s.len())) {
		{
			jule::I32 _1879_br;;
			jule::I64 _18713_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_18413_s.slice(_1859_i));
				_1879_br = __jule_assign_result.__jule_result_arg0;
				_18713_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18421_r == _1879_br)) {
				return _1859_i;;
			};
			_1859_i+=_18713_n;
		}
	_iter_next_1a62d2d52:;
	}
	_iter_end_1a62d2d52:;;
	return -1LL;;
}



inline jule::I64 _1c9744856_FindAny(jule::Str _21412_s, jule::Str _21420_runes) {
	jule::I64 _2159_i = 0LL;;
	while ((_2159_i < _21412_s.len())) {
		{
			jule::I32 _2179_r;;
			jule::I64 _21712_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_21412_s.slice(_2159_i));
				_2179_r = __jule_assign_result.__jule_result_arg0;
				_21712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c974426d_FindRune(_21420_runes, _2179_r) != -1LL)) {
				return _2159_i;;
			};
			_2159_i+=_21712_n;
		}
	_iter_next_1a6147090:;
	}
	_iter_end_1a6147090:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1c9745109_Split(jule::Str _24410_s, jule::Str _24418_sub, jule::I64 _24432_n) {
	jule::I64 _2459_cap = _24432_n;;
	if ((_24432_n < 0LL)) {
		_2459_cap=16LLU;
	};
	jule::Slice<jule::Str> _2499_parts = jule::Slice<jule::Str>::alloc(0LL, _2459_cap);;
	if ((_24432_n == 0LL)) {
		return _2499_parts;;
	};
	if ((_24432_n < 0LL)) {
		_24432_n=_24410_s.len();
	};
	jule::I64 _2569_i = 0LL;;
	for (; (_24432_n > 0LL); (_24432_n)--) {
		{
			jule::I64 _2589_j = _1c97417a9_FindAt(_24410_s, _24418_sub, _2569_i);;
			if ((_2589_j == -1LL)) {
				goto _iter_end_1a614b6d2;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i, _2589_j)); };
			_2569_i=(_2589_j + _24418_sub.len());
		}
	_iter_next_1a614b6d2:;
	}
	_iter_end_1a614b6d2:;;
	if (((_24432_n > 0LL) && (_2569_i < _24410_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i)); };
	};
	return _2499_parts;;
}



inline jule::Bool _1c974547d_Contains(jule::Str _27213_s, jule::Str _27221_sub) {
	return (_1c97417a9_FindAt(_27213_s, _27221_sub, 0LL) != -1LL);;
}



inline jule::Bool _1c9745eea_ContainsAny(jule::Str _28716_s, jule::Str _28724_runes) {
	return (_1c9744856_FindAny(_28716_s, _28724_runes) != -1LL);;
}



inline jule::I64 _1c974636e_Count(jule::Str _29310_s, jule::Str _29318_sub) {
	if ((_29318_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2979_n = 0LL;;
	jule::I64 _2989_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3009_j = _1c97417a9_FindAt(_29310_s, _29318_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1a6151e46;
			};
			(_2979_n)++;
			_2989_i=(_3009_j + _29318_sub.len());
		}
	_iter_next_1a6151e46:;
	}
	_iter_end_1a6151e46:;;
	return _2979_n;;
}



inline jule::Str _1c9746858_Replace(jule::Str _31312_s, jule::Str _31320_sub, jule::Str _31330_new, jule::I64 _31344_n) {
	if (((_31344_n == 0LL) || (_31320_sub == _31330_new))) {
		return _31312_s;;
	};
	jule::I64 _3185_m = _1c974636e_Count(_31312_s, _31320_sub);;
	if ((_3185_m == 0LL)) {
		return _31312_s;;
	};
	if (((_31344_n < 0LL) || (_3185_m < _31344_n))) {
		_31344_n=_3185_m;
	};
	_1c9754d1c_StrBuilder _3269_ss = static__1c97550d6_New(((_31312_s.len() + (_31344_n * (_31330_new.len() - _31320_sub.len()))) + 1LL));;
	jule::I64 _3279_i = 0LL;;
	for (; (_31344_n > 0LL); (_31344_n)--) {
		{
			jule::I64 _3299_j = _1c97417a9_FindAt(_31312_s, _31320_sub, _3279_i);;
			if ((_3299_j == -1LL)) {
				goto _iter_end_1a6154157;
			};
			_1c975db28_WriteStr(&_3269_ss, _31312_s.slice(_3279_i, _3299_j));
			_1c975db28_WriteStr(&_3269_ss, _31330_new);
			_3279_i=(_3299_j + _31320_sub.len());
		}
	_iter_next_1a6154157:;
	}
	_iter_end_1a6154157:;;
	_1c975db28_WriteStr(&_3269_ss, _31312_s.slice(_3279_i));
	return _1c975e420_Str(&_3269_ss);;
}



inline jule::Str _1c97475d4_TrimLeft(jule::Str _37017_s, jule::Str _37025_cutset) {
	jule::I64 _3719_i = 0LL;;
	while ((_3719_i < _37017_s.len())) {
		{
			jule::I32 _3739_r;;
			jule::I64 _37312_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_37017_s.slice(_3719_i));
				_3739_r = __jule_assign_result.__jule_result_arg0;
				_37312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c974426d_FindRune(_37025_cutset, _3739_r) == -1LL)) {
				return _37017_s.slice(_3719_i);;
			};
			_3719_i+=_37312_n;
		}
	_iter_next_1a615a2b2:;
	}
	_iter_end_1a615a2b2:;;
	return jule::Str();;
}



inline jule::Str _1c9747958_TrimRight(jule::Str _38414_s, jule::Str _38422_cutset) {
	jule::I64 _3859_i = _38414_s.len();;
	while ((_3859_i > 0LL)) {
		{
			jule::I32 _3879_r;;
			jule::I64 _38712_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96ebea1_DecodeLastRuneStr(_38414_s.slice(0LL, _3859_i));
				_3879_r = __jule_assign_result.__jule_result_arg0;
				_38712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c974426d_FindRune(_38422_cutset, _3879_r) == -1LL)) {
				return _38414_s.slice(0LL, _3859_i);;
			};
			_3859_i-=_38712_n;
		}
	_iter_next_1a615bbdc:;
	}
	_iter_end_1a615bbdc:;;
	return jule::Str();;
}



inline jule::Str _1c9748063_Trim(jule::Str _3989_s, jule::Str _39817_cutset) {
	return _1c97475d4_TrimLeft(_1c9747958_TrimRight(_3989_s, _39817_cutset), _39817_cutset);;
}



inline jule::Str _1c9748393_Join(jule::Slice<jule::Str> _4049_parts, jule::Str _40423_sep) {
	{
		auto _match_expr{ _4049_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a615dccc:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a615e3d7:;
			{
				return _4049_parts[0LL];;
			}
		}
		_match_end_1a615e1c8:;
	};
	jule::I64 _4119_n = 0LL;;
	{
		auto expr = &(_4049_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a615e63a:;
		if (it != expr_end) {
			jule::Str *_41212_part = it;
			{
				_4119_n+=(*(_41212_part)).len();
				(_4119_n)++;
			}
			_iter_next_1a615e63a:;
			++it;
			goto _iter_begin_1a615e63a;
		}
		_iter_end_1a615e63a:;
	};
	_1c9754d1c_StrBuilder _4169_s = static__1c97550d6_New((_4119_n + 1LL));;
	_1c975db28_WriteStr(&_4169_s, _4049_parts[0LL]);
	{
		auto expr = _4049_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a6160edd:;
		if (it != expr_end) {
			jule::Str *_41812_part = it;
			{
				_1c975db28_WriteStr(&_4169_s, _40423_sep);
				_1c975db28_WriteStr(&_4169_s, (*(_41812_part)));
			}
			_iter_next_1a6160edd:;
			++it;
			goto _iter_begin_1a6160edd;
		}
		_iter_end_1a6160edd:;
	};
	return _1c975e420_Str(&_4169_s);;
}



inline jule::Str _1c97617a7_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1c9764623_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1c976404b_IsPathSep(_1105_originalPath[0LL])) && _1c976404b_IsPathSep(_1105_originalPath[1LL]))) {
			return _1c9761d7e_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1c976404b_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1c976091b_lazyBuff _1289_out = _1c976091b_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0LL;;
	jule::I64 _13316_dotdot = 0LL;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1c9761158_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1c976404b_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1a61723c8:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1c976404b_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1a616dea7:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1c976404b_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1a616e01d:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1a61754a8:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1c976404b_IsPathSep(_1c9760da0_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1a6175c28:;
									}
									_iter_end_1a6175c28:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1a6175541:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1c9761158_append(&_1289_out, 47LLU);
									};
									_1c9761158_append(&_1289_out, '.');
									_1c9761158_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1a6175134:;
						};
					}
				}
				else {
					_case_begin_1a616de41:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1c9761158_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_1c976404b_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1c9761158_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1a61702a5:;
						}
						_iter_end_1a61702a5:;;
					}
				}
				_match_end_1a616d4d4:;
			};
		}
	_iter_next_1a616dc21:;
	}
	_iter_end_1a616dc21:;;
	if ((_1289_out._field_w == 0LL)) {
		_1c9761158_append(&_1289_out, '.');
	};
	return _1c9761d7e_FromSlash(_1c97613de_string(&_1289_out));;
}



inline jule::Str _1c9761d7e_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1c97621c0_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1c9764bea_join(_2269_elem);;
}



inline jule::Str _1c9762456_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1c976404b_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1a61793ad:;
	}
	_iter_end_1a61793ad:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1c9762720_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9764964_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1c97629d9_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1c976404b_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1a617b27d:;
	}
	_iter_end_1a617b27d:;;
	(_25513_path).mut_slice(_1c9763105_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_1c976404b_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1a617ba20:;
	}
	_iter_end_1a617ba20:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1c9762db3_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1c9763105_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_1c976404b_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1a617ee0d:;
	}
	_iter_end_1a617ee0d:;;
	jule::Str _2925_dir = _1c97617a7_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1c9763105_VolumeName(jule::Str _30415_path) {
	return _1c9761d7e_FromSlash(_30415_path.slice(0LL, _1c9764623_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1c976404b_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1c9764359_IsAbs(jule::Str _5310_path) {
	return _1c9740a83_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1c9764623_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1c9764964_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1c9764359_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1c97617a7_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _20c162ae3_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1c9764bea_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1c9764bea_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6188323:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _1c97617a7_Clean(_1c9748393_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1a6188323:;
			++it;
			_749_i++;
			goto _iter_begin_1a6188323;
		}
		_iter_end_1a6188323:;
	};
	return jule::Str();;
}



inline jule::I64 _20c0770ac_getLastFsError(void) {
	jule::I64 _725_err = _20be99584_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a6195b7c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a6195a6c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a61954c8:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a619553e:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a61955a5:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a619561b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1a6195693:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a619571a:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a6195d25:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a6195d9c:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a6195e24:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a6195e9b:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a6196023:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a619609a:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a6196122:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1a6196199:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a6196221:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a6196298:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a6196320:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1a6196397:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a619641e:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a6196496:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a619651d:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a6196595:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a619661c:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1a6196694:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1a619671b:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1a6196793:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a619531e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a6195473:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c907b226_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1a64892a0:;
	}
	_iter_end_1a64892a0:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1c908484a_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1c9084b58_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1c9084b58_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1c9084b58_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU)));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_1a6490c46:;
	}
	_iter_end_1a6490c46:;;
	_209_buf[_219_i]=static_cast<jule::U8>(('0' + _1613_x));
	(_209_buf).mut_slice(0LL, (_219_i + 1LL));;
	_1c9084d89_rev(&(_209_buf));
	return _20c1379ca_StrFromBytes(_209_buf);;
}



inline void _1c9084d89_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _369_i = 0LL;;
	for (; (_369_i < ((*(_3513_b)).len() >> 1LL)); (_369_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_369_i];
				(*(_3513_b))[_369_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a6494a2a:;
	}
	_iter_end_1a6494a2a:;;
}



inline jule::Slice<char*> _1c9088486_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	(*(_3540_bargs))=jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len());
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64b0914:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			jule::Str *_3812_arg = it;
			{
				jule::Slice<jule::U8> _3913_barg = _20c03472e_StrToBytes((*(_3812_arg)));;
				(*(_3540_bargs))[_389_i]=_3913_barg;
				_369_cs[_389_i]=((char*)((&(_3913_barg[0LL]))));
			}
			_iter_next_1a64b0914:;
			++it;
			_389_i++;
			goto _iter_begin_1a64b0914;
		}
		_iter_end_1a64b0914:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _1c908880a_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _489_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _495_cargv = _1c9088486_strSliceToCstrSlice(_4724_argv, &(_489_bargs));;
	jule::Slice<jule::U8> _505_s = _20c03472e_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_505_s[0LL])))), (char*const*)(&(_495_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1c9088a3b_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64b4363:;
		if (it != expr_end) {
			jule::Str *_5812_env = it;
			{
				jule::I64 _599_i = _1c973eb1a_FindByteStr((*(_5812_env)), '=');;
				if ((_599_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _6413_key = _20c03472e_StrToBytes((*(_5812_env)).slice(0LL, _599_i));;
					if ((((*(_5812_env)).len() - _599_i) == 1LL)) {
						jule::Str _6617_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _7117_val = _20c03472e_StrToBytes((*(_5812_env)).slice((_599_i + 1LL)));;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_7117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1a64b4363:;
			++it;
			goto _iter_begin_1a64b4363;
		}
		_iter_end_1a64b4363:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1c90899b5_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1a64baad9:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a64b8d29:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a64b9ab6:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a64b97ec:;
	};
}



inline jule::I64 _1c9089c18_getLastProcessError(void) {
	return _1c90899b5_processErrorFromCode(_20be99584_GetLastErrno());;
}



inline void _1c908a532_Exit(jule::I64 _129_code) {
	_20c0578a6_Exit(_129_code);
}



inline jule::Str _1c908a741_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1c97ee724_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1c97ee9ee_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1c976623a_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64dc138:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a64dc138:;
			++it;
			goto _iter_begin_1a64dc138;
		}
		_iter_end_1a64dc138:;
	};
	return false;;
}



inline jule::Bool _1c97eecb8_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1c97edc62_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64dc655:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1a64dc655:;
			++it;
			goto _iter_begin_1a64dc655;
		}
		_iter_end_1a64dc655:;
	};
	{
		auto expr = &(_1c97ec9a8_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64dd8dc:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1a64dd8dc:;
			++it;
			goto _iter_begin_1a64dd8dc;
		}
		_iter_end_1a64dd8dc:;
	};
	return false;;
}



inline jule::Str _1c980c215_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1c980cba5_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1c980c523_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a64de855:;
			{
				return _32613_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a64deeb5:;
			{
				return jule::Str::from_byte(_32613_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a64e002b:;
			{
				return jule::Str::from_rune(_32613_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1a64dea86:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a64dea31:;
	};
}



inline jule::I64 _1c980c7dc_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64e0d95:;
		if (it != expr_end) {
			jule::I64 _3409_i = it - expr->begin();
			jule::U8 *_34012_b = it;
			{
				if (((*(_34012_b)) == '@')) {
					return _3409_i;;
				};
			}
			_iter_next_1a64e0d95:;
			++it;
			_3409_i++;
			goto _iter_begin_1a64e0d95;
		}
		_iter_end_1a64e0d95:;
	};
	return -1LL;;
}



inline jule::Str _1c980cba5_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1c9754d1c_StrBuilder _3499_s = static__1c97550d6_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64e1a99:;
		if (it != expr_end) {
			jule::Any *_35012_arg = it;
			{
				jule::I64 _3519_i = _1c980c7dc_findNextFmt(_34817_fmt);;
				if ((_3519_i == -1LL)) {
					goto _iter_end_1a64e1a99;
				};
				_1c975db28_WriteStr(&_3499_s, _34817_fmt.slice(0LL, _3519_i));
				_1c975db28_WriteStr(&_3499_s, _1c980c523_argToStr((*(_35012_arg))));
				(_34817_fmt).mut_slice((_3519_i + 1LL));;
			}
			_iter_next_1a64e1a99:;
			++it;
			goto _iter_begin_1a64e1a99;
		}
		_iter_end_1a64e1a99:;
	};
	_1c975db28_WriteStr(&_3499_s, _34817_fmt);
	return _1c975e420_Str(&_3499_s);;
}



inline jule::Bool _1c980da0d_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1c980ee2c_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1c981023a_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1c9810504_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1c9810845_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1c9810acb_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1c9810d95_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1c981115e_IsUnix(jule::Str _5511_os) {
	return (_1c981023a_IsDarwin(_5511_os) || _1c9810504_IsLinux(_5511_os));;
}



inline jule::Bool _1c9811538_Is32Bit(jule::Str _5812_arch) {
	return _1c9810845_IsI386(_5812_arch);;
}



inline jule::Bool _1c981177a_Is64Bit(jule::Str _6112_arch) {
	return (_1c9810acb_IsAmd64(_6112_arch) || _1c9810d95_IsArm64(_6112_arch));;
}



inline void _1c908bad8_init(void) {
	jule::Str _259_path = _1c908a741_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1c908b137_PathWd=({
			auto except = _20c162ae3_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1c908ad7e_PathExec=_1c9762db3_Dir(_259_path);
		_1c908aa82_PathStdlib=_1c97621c0_Join(jule::Slice<jule::Str>::make({_1c908ad7e_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1c908b434_PathApi=_1c97621c0_Join(jule::Slice<jule::Str>::make({_1c908ad7e_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1b28302e9_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1b2837b81_Len64(_6119_x));;
}



inline jule::I64 _1b2831240_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1b2831dde_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1b2831b25_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1b2830937__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1b2831dde_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1b2830ecb__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1b28378b7_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1b2837b81_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b283891d_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b283a227_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1b1b3184e_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1b1b31b5c_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1b1b31e26_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1b1b32267_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1b1b347ca_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a65c3780:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b2842d01_IsInf(_4714_f, 0LL) || _1b284266e_IsNaN(_4714_f)) {
			_case_begin_1a65c3829:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a65c36a3:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b28430ba_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1b1b31e26_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1b1b32267_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _1b2842361_NaN(void) {
	return _1b1b32267_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b284266e_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1b2842938_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1b1b32267_F64FromBits(9218868437227405312LLU);;
	};
	return _1b1b32267_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b2842d01_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b28430ba_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b2845474_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b2844a8e_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b284266e_IsNaN(_1118_x) || _1b2842d01_IsInf(_1118_x, 1LL)) {
			_case_begin_1a630004a:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a63000e4:;
			{
				return _1b2842361_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a630015a:;
			{
				return _1b2842938_Inf(-1LL);;
			}
		}
		_match_end_1a62eee90:;
	};
	jule::F64 _1339_f1;;
	jule::I64 _13317_ki;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b1b347ca_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _1b2845474_Abs(jule::F64 _438_x) {
	return _1b1b32267_F64FromBits((_1b1b31e26_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b284c04c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1b2845474_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1a660e1e4:;
		}
		_iter_end_1a660e1e4:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _1b284c855_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;;
	jule::I64 _4511_exp;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b1b347ca_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_1b2844a8e_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _1b2876780_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _20c1379ca_StrFromBytes(_1b2876d68_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b287a223_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b2876d68_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b2875570_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a57b27b6:;
			{
				_889_bits=static_cast<jule::U64>(_1b1b3184e_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_1b2875570_floatInfo>)((&(_1b287596b_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a57b282c:;
			{
				_889_bits=_1b1b31e26_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_1b2875570_floatInfo>)((&(_1b2875c68_f64info))));
			}
		}
		else {
			_case_begin_1a57b0594:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1a57b20bd:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1a57b66dd:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1a57b7ea3:;
						{
							return jule::append(_8720_dst,_20c13747a_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1a57b804c:;
						{
							return jule::append(_8720_dst,_20c13747a_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1a57b77cc:;
						{
							return jule::append(_8720_dst,_20c13747a_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1a57b76cd:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a57b67ba:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1a57b5841:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1a57b6204:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b2879398_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b2879a2a_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_1b28761ec_decimalSlice _1379_digs = _1b28761ec_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b2885173_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a57b6336:;
				{
					_8758_prec=_1b287a223_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a57bc051:;
				{
					_8758_prec=_1b287a223_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a57bc0b7:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1a57bb25e:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a57be042:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a57be11e:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a57bdb02:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1a57bdbe0:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b2883db9_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b288435e_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _1b2877572_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _1b2877c48_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b2877572_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _1b2875570_floatInfo* _18827_flt) {
	_1b2888e57_decimal _1899_d = _1b2888e57_decimal{};;
	_1b288930e_assign(&_1899_d, _1885_mant);
	_1b28895b7_shift(&_1899_d, (_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits)));
	_1b28761ec_decimalSlice _1929_digs = _1b28761ec_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_1b2878166_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_1b28761ec_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a57c4e5a:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a57c5c91:;
				{
					_18733_prec=_1b287a223_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a57c5d07:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1a57c5b1a:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a57c4be6:;
				{
					_1b2889dd1_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a57c4c5c:;
				{
					_1b2889dd1_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a57c4cc3:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b2889dd1_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1a57c7457:;
		};
		_1929_digs=_1b28761ec_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _1b2877c48_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b2877c48_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b28761ec_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a57ca4b0:;
			{
				return _1b287870a_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a57ca526:;
			{
				return _1b2878be4_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a57ca58c:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _1b287870a_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _1b2878be4_fmtF(_22418_dst, _22447_neg, _2255_digs, _1b287a223_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a57ca416:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _1b2878166_roundShortest(_1b2888e57_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b2875570_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b2888e57_decimal _2929_upper = _1b2888e57_decimal{};;
	_1b288930e_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1b28895b7_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_1b2888e57_decimal _3119_lower = _1b2888e57_decimal{};;
	_1b288930e_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_1b28895b7_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a57d6d07;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1a57db966:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1a57dba10:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1a57dba76:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1a57db911:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1a57de4c4:;
					{
						_1b2889dd1_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1a57de55c:;
					{
						_1b2889870_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1a57de5c3:;
					{
						_1b2889b28_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1a57dbadc:;
			};
		}
	_iter_next_1a57d6d07:;
	}
	_iter_end_1a57d6d07:;;
}



inline jule::Slice<jule::U8> _1b287870a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b28761ec_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _1b2879d9e_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a57e35b6:;
		}
		_iter_end_1a57e35b6:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1a57e5c5b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1a57e5e8c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a57e5123:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a57e571c:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b2878be4_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b28761ec_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _1b2879d9e_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a57e94ce:;
		}
		_iter_end_1a57e94ce:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1a57eb080:;
		}
		_iter_end_1a57eb080:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b2879398_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b2875570_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b288e204_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b288e204_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b2879a2a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _1b2875570_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1a5800ded:;
	}
	_iter_end_1a5800ded:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1a68c8c3e:;
		}
		_iter_end_1a68c8c3e:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1a68ca438:;
		}
		_iter_end_1a68ca438:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b287adb1_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1a68cc627:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1a68cd0c8:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a68cc56c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a68cc418:;
	};
	return _51113_dst;;
}



inline jule::I64 _1b2879d9e_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1b287a223_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b287adb1_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b14a08b6_ConvError _1b287b334_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b14a08b6_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a68d41cd:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a68d4244:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b287adb1_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a68d5b80:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b287adb1_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a68d5c7e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b287adb1_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a68d5850:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a68d57d9:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a68d571d:;
					};
				};
			}
		}
		else {
			_case_begin_1a68d360b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a68d35a6:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a68d9b51:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a68d9854:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a68d4e8c:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1a68d9766:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a68d98ba:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a68d5487:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a68dad2d:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a68dbbca:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a68dced9:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _1b287adb1_lower(_10912_c)) && (_1b287adb1_lower(_10912_c) <= 'z'))) {
						_case_begin_1a68dce1d:;
						{
							_11013_d=((_1b287adb1_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a68dca33:;
						{
							goto _iter_next_1a68dbbca;
						}
					}
					else {
						_case_begin_1a68dc9bc:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a68dc956:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1a68dbbca:;
			++it;
			goto _iter_begin_1a68dbbca;
		}
		_iter_end_1a68dbbca:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b287b763_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un;;
	jule::I64 _1479_err;;
	({
		__jule_tuple_u64__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b287b334_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _1b287bc19_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;;
	jule::I64 _18713_err;;
	({
		__jule_tuple_u64__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b287b334_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b287c8c9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1b1b32267_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1b28302e9_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;;
	jule::U64 _6318_xLo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_4122_man, _1b287d743_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;;
		jule::U64 _6714_yLo;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_4122_man, _1b287d743_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = _639_xHi;;
		jule::U64 _6823_mergedLo = (_6318_xLo + _679_yHi);;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b1b32267_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b287cd4c_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1b1b31b5c_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1b28302e9_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;;
	jule::U64 _13819_x_lo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_11022_man, _1b287d743_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;;
		jule::U64 _14215_y_lo;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_11022_man, _1b287d743_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = _1389_x_hi;;
		jule::U64 _14324_merged_lo = (_13819_x_lo + _1429_y_hi);;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b1b31b5c_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1b287eb2e_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1a691245e:;
	}
	_iter_end_1a691245e:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b287ee3c_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a6915cae:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1a6915d25;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a6915d25:;
			{
				jule::I64 _8813_caseN = _1b287eb2e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b2842938_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a6915d8b:;
			{
				if ((_1b287eb2e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b2842361_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a6915c15:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b2880206_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a691b3ad:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a691b424:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a691aec3:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b287adb1_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1a6921407:;
					{
						goto _iter_next_1a6920758;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1a69214a1:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1a6925d8a;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1a6920758;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1a6921517:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1a6920758;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a6920758;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1b287adb1_lower(_1389_c))) && (_1b287adb1_lower(_1389_c) <= 'f'))) {
					_case_begin_1a692157d:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b287adb1_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a6920758;
					}
				}
				_match_end_1a692132a:;
			};
			goto _iter_end_1a6920758;
		}
	_iter_next_1a6920758:;
	}
	_iter_end_1a6920758:;;
	_julec_label_1a6925d8a:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b287adb1_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a6928695;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1a6928695:;
		}
		_iter_end_1a6928695:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b2881c52_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1b2875c68_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a69326c1:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a6932737:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b2881119_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b2881119_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a693279d:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b2881119_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a69320c7:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b2882181_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1b287596b_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a6936917:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a693697d:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b2881449_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b2881449_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a69369e4:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b2881449_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a693631d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b14a08b6_ConvError _1b2882725_atofHex(_1b2875570_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b14a08b6_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1a693a311:;
	}
	_iter_end_1a693a311:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a693c6cb:;
	}
	_iter_end_1a693c6cb:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a693ca61:;
	}
	_iter_end_1a693ca61:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1b287596b_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b1b31b5c_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1b1b32267_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b2882aee_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;;
		jule::I64 _62314__n;;
		jule::Bool _62318_ok;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b287ee3c_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;;
	jule::I64 _62915_exp;;
	jule::Bool _62920_neg;;
	jule::Bool _62925_trunc;;
	jule::Bool _62932_hex;;
	jule::I64 _62937__n;;
	jule::Bool _62945_ok;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2880206_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b2882725_atofHex(&(_1b287596b_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b2882181_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b287cd4c_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b287cd4c_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b2888e57_decimal _6679_d = _1b2888e57_decimal{};;
	if ((!(_1b2880888_set(&_6679_d, _20c13747a_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;;
	jule::Bool _6718_ovf;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b2880bc9_floatBits(&_6679_d, &(_1b287596b_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b1b31b5c_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b2882d41_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;;
		jule::I64 _68114__n;;
		jule::Bool _68118_ok;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b287ee3c_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;;
	jule::I64 _68715_exp;;
	jule::Bool _68720_neg;;
	jule::Bool _68725_trunc;;
	jule::Bool _68732_hex;;
	jule::I64 _68737__n;;
	jule::Bool _68745_ok;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2880206_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b2882725_atofHex(&(_1b2875c68_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b2881c52_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b287c8c9_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b287c8c9_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b2888e57_decimal _7249_d = _1b2888e57_decimal{};;
	if ((!(_1b2880888_set(&_7249_d, _20c13747a_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;;
	jule::Bool _7288_ovf;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b2880bc9_floatBits(&_7249_d, &(_1b2875c68_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b1b32267_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError _1b28831b5_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;;
		jule::I64 _73812_n;;
		jule::I64 _73815_err;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b2882aee_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f;;
	jule::I64 _7418_n;;
	jule::I64 _74111_err;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b2882d41_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b2883539_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f;;
	jule::I64 _7708_n;;
	jule::I64 _77011_err;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b14a08b6_ConvError __jule_assign_result = _1b28831b5_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_77011_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7705_f};;
}



inline void _1b2883db9_ryuFtoaFixed32(_1b28761ec_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1b28378b7_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1b2885409_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;;
	jule::I64 _8113_dexp2;;
	jule::Bool _8124_d0;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2886d01_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1b28875a4_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1b2884b9a_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1b288435e_ryuFtoaFixed64(_1b28761ec_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1b2837b81_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1b2885409_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;;
	jule::I64 _15313_dexp2;;
	jule::Bool _15324_d0;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2887230_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1b28875a4_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1b2884b9a_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1b2884b9a_formatDecimal(_1b28761ec_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1b28846a0_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = (_20044_m / 10LLU);;
			jule::U64 _20412_b = (_20044_m % 10LL);;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a6973767:;
	}
	_iter_end_1a6973767:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1a697634c:;
	}
	_iter_end_1a697634c:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1a697c3db:;
	}
	_iter_end_1a697c3db:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _1b2885173_ryuFtoaShortest(_1b28761ec_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b2875570_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b2831dde_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1b2886251_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;;
	jule::U64 _2739_mc;;
	jule::U64 _27313_mu;;
	jule::I64 _27321_e2;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b2885b02_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1b2886251_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1b2885409_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1b287596b_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2886d01_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2886d01_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2886d01_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2887230_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2887230_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b2887230_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1b28875a4_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_1b28875a4_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_1b28875a4_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1b2886251_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1b2885409_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1b28856c3_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b2885b02_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b2875570_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b2886251_ryuDigits(_1b28761ec_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;;
	jule::U32 _41014_llo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b288786d_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;;
	jule::U32 _41110_clo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b288786d_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;;
	jule::U32 _41210_ulo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b288786d_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1b28868c2_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1b28868c2_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = (_42913_v / 10LLU);;
				jule::U32 _43117_v2 = (_42913_v % 10LL);;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1a699a959:;
		}
		_iter_end_1a699a959:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _42813_n));
		_1b28868c2_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a699d583:;
	}
	_iter_end_1a699d583:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1a699b4b5:;
	}
	_iter_end_1a699b4b5:;;
}



inline void _1b28868c2_ryuDigits32(_1b28761ec_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = (_45458_central / 10LLU);;
			jule::U32 _47120_cdigit = (_45458_central % 10LL);;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1a69a0cd3;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a69a0cd3:;
	}
	_iter_end_1a69a0cd3:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = (_5099_v / 100LLU);;
			jule::U32 _51213_v2 = (_5099_v % 100LL);;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1a69a349a:;
	}
	_iter_end_1a69a349a:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b2886d01_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1b287d743_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;;
	jule::U64 _5489_lo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b28856c3_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b2887230_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1b287d743_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b28856c3_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;;
	jule::U64 _5799_l0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;;
	jule::U64 _58013_h0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283a227_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;;
	jule::U64 _58110_carry;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b283891d_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b28875a4_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a69b5677:;
	}
	_iter_end_1a69b5677:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b288786d_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1b288a7a5_trim(_1b2888e57_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a69b8e0b:;
	}
	_iter_end_1a69b8e0b:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b288aa91_rightShift(_1b2888e57_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1a69bbd21:;
				}
				_iter_end_1a69bbd21:;;
				goto _iter_end_1a69ba89c;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1a69ba89c:;
	}
	_iter_end_1a69ba89c:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1a69bbe0e:;
	}
	_iter_end_1a69bbe0e:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1a69be483:;
	}
	_iter_end_1a69be483:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1b288a7a5_trim(_28420_a);
}



inline jule::Bool _1b288b047_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1a69c34ed:;
	}
	_iter_end_1a69c34ed:;;
	return false;;
}



inline void _1b288b300_leftShift(_1b2888e57_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1b288886e_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1b288b047_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1b288886e_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1a69c69eb:;
	}
	_iter_end_1a69c69eb:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1a69c6cd7:;
	}
	_iter_end_1a69c6cd7:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1b288a7a5_trim(_35219_a);
}



inline jule::Bool _1b288b674_shouldRoundUp(_1b2888e57_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b288ce06_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b288d8c9_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b288e204_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1b288d2be_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b288d8c9_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b288e204_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1b288d588_Itoa(jule::I64 _819_i) {
	return _1b288d2be_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b288d8c9_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _20c1379ca_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b288db60_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b288e204_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1a6a17685:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1a6a1ae4c:;
				}
				_iter_end_1a6a1ae4c:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_1b288db60_isPowerOfTwo(_10541_base)) {
			_case_begin_1a6a16640:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_1b2831240_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1a6a2178d:;
				}
				_iter_end_1a6a2178d:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1a6a16101:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1a6a16ae6:;
				}
				_iter_end_1a6a16ae6:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1a6a16068:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy((_1119_a), (_1119_a.slice(_1129_i)));;
	__jule_func_result.__jule_result_arg1=_20c1379ca_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1b2890700_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a6a36594:;
			{
				return _1b288ec1b_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a6a34e22:;
			{
				return _1b288eec4_SysUint;;
			}
		}
		else {
			_case_begin_1a6a337e4:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a6a3686e:;
	};
}



inline jule::I64 _1b28909b9_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a6a3761c:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a6a3782b:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a6a37892:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a6a37683:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a6a376e9:;
			{
				return _1b288e91e_BitSize;;
			}
		}
		else {
			_case_begin_1a6a372ed:;
			{
				return -1LL;;
			}
		}
		_match_end_1a6a37573:;
	};
}



inline jule::Str _1b2890d0a_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a6a39c29:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a6a39c90:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a6a39d06:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6a39d7d:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1a6a39773:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6a39465:;
	};
}



inline jule::Str _1b2891091_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a6a3aea0:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a6a3aa4e:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a6a3b038:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6a3b09e:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1a6a3a7b8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6a3a9a5:;
	};
}



inline jule::Str _1b289135a_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a6a3c226:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6a3bcc5:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1a6a3ba3e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6a3bc2b:;
	};
}



inline jule::Bool _1b2891e60_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1b2883539_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1b2892229_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a6a42050:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6a405d1:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6a404e3:;
	};
}



inline jule::I64 _1b28924e3_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a6a42c87:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a6a42649:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a6a426b0:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6a425c2:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6a42506:;
	};
}



inline jule::I64 _1b28927ac_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a6a447d3:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a6a43a13:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a6a43a79:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6a4398b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6a43ded:;
	};
}



inline void _1b2892955_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1c908b995_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1a6a4522e:;
				{
					_1b288e91e_BitSize=64LLU;
					_1b288ec1b_SysInt=jule::Str::lit("i64", 3);
					_1b288eec4_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1a6a45817:;
				{
					_1b288e91e_BitSize=32LLU;
					_1b288ec1b_SysInt=jule::Str::lit("i32", 3);
					_1b288eec4_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1a6a4576d:;
		};
	};
}



inline void _1b2892acb_init(void) {
	_1b2892955_UpdateTarget();
}



inline jule::I64 _1b2896739_MinI(jule::Str _6113_k) {
	_6113_k=_1b2890700_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a6a4795c:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a6a479c3:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a6a47a39:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a6a47aa0:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a6a44ad0:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a45b9c:;
	};
}



inline jule::I64 _1b2896a47_MaxI(jule::Str _7913_k) {
	_7913_k=_1b2890700_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a6a49013:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a6a49079:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a6a490e0:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a6a49156:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a6a48dae:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a48d59:;
	};
}



inline jule::U64 _1b2896d11_MaxU(jule::Str _9713_k) {
	_9713_k=_1b2890700_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a6a4a60d:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a6a4a674:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a6a4a6da:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a6a4a751:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a6a4a4a9:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6a4a454:;
	};
}



inline jule::F64 _1b2897152_Min(jule::Str _11512_k) {
	_11512_k=_1b2890700_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1b2896739_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a6a4cc70:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a6a4c19d:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a6a4c0b0:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a4c148:;
	};
}



inline jule::F64 _1b28973d8_Max(jule::Str _13312_k) {
	_13312_k=_1b2890700_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1b2896a47_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _1b2896d11_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a6a50080:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a6a4e447:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a6a4e359:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6a4e3e2:;
	};
}



inline jule::Bool _1b289788e_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1b2897b9c_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1b2897e66_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1b28982a7_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1b289853d_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1b2898807_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1b2898ac1_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1b2898e9a_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1b2899297_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a6a53869:;
			{
				return _1b289a40d_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a6a538d0:;
			{
				return _1b289a71b_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a6a53946:;
			{
				return _1b289a71b_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a6a539bd:;
			{
				return _1b289788e_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a6a53b55:;
			{
				return _1b2897b9c_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a6a53bcc:;
			{
				return _1b2897e66_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a6a53c54:;
			{
				return _1b28982a7_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a6a53ccb:;
			{
				return _1b289853d_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a6a53ddb:;
			{
				return _1b2898807_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a6a53e52:;
			{
				return _1b2898ac1_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a6a53eb8:;
			{
				return _1b2898e9a_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a6a5402e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6a53528:;
			{
				return false;;
			}
		}
		_match_end_1a6a536c1:;
	};
}



inline jule::Bool _1b289a40d_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b289a71b_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b289a9d5_IsInt(jule::Str _4610_k) {
	return (_1b289a40d_IsSigInt(_4610_k) || _1b289a71b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b289ad26_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b289b0ac_IsNum(jule::Str _5610_k) {
	return (_1b289a9d5_IsInt(_5610_k) || _1b289ad26_IsFloat(_5610_k));;
}



inline jule::Bool _1b289b376_IsSigNum(jule::Str _6113_k) {
	return (_1b289a40d_IsSigInt(_6113_k) || _1b289ad26_IsFloat(_6113_k));;
}



inline void _1b28a566b_lshiftUnsig(_1b289b651_Const* _59021_c, _1b289b651_Const* _59032_x) {
	jule::U64 _5915_l = _1b289e07c_AsU64(_59021_c);;
	jule::U64 _5925_r = _1b289e07c_AsU64(_59032_x);;
	_1b289e874_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _1b28a599b_rshiftUnsig(_1b289b651_Const* _59621_c, _1b289b651_Const* _59632_x) {
	jule::U64 _5975_l = _1b289e07c_AsU64(_59621_c);;
	jule::U64 _5985_r = _1b289e07c_AsU64(_59632_x);;
	_1b289e874_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1a3db88d5_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1a3bad345_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b0c01b:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1a6b0c01b:;
			++it;
			goto _iter_begin_1a6b0c01b;
		}
		_iter_end_1a6b0c01b:;
	};
	return false;;
}



inline jule::Bool _1a3db8be3_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1a3bad675_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b0c813:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1a6b0c813:;
			++it;
			goto _iter_begin_1a6b0c813;
		}
		_iter_end_1a6b0c813:;
	};
	return false;;
}



inline jule::Bool _1a3db92ed_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1a3db9584_IsRawStr(_36410_k)));;
}



inline jule::Bool _1a3db9584_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1a3db984d_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1a3dba233_IsFloat(jule::Str _38012_k) {
	if (_1c9740a83_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1c9745eea_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1c9745eea_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a3dba4ec_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1a3dbaa80_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1a3dbad49_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1a3dbb3cc_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1a3bad125_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b14bd3:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1a6b14bd3:;
			++it;
			goto _iter_begin_1a6b14bd3;
		}
		_iter_end_1a6b14bd3:;
	};
	return false;;
}



inline jule::Bool _1a3dbb8c7_IsLetter(jule::I32 _42913_r) {
	return _1c957d629_IsLetter(_42913_r);;
}



inline jule::Bool _1a3dbbd4a_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1a3dbc114_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1a3dbc3cd_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1a3dbc697_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1a6b18456:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1a6b18500:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1a6b18577:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6b183bd:;
			{
				return false;;
			}
		}
		_match_end_1a6b17389:;
	};
}



inline jule::Bool _1a3dbc961_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1a3dbcc2a_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1a3db267b_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b19a95:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1a6b19a95:;
			++it;
			goto _iter_begin_1a6b19a95;
		}
		_iter_end_1a6b19a95:;
	};
	return false;;
}



inline jule::Bool _1a3dbcee4_IsAssignOp(jule::U64 _49515_id) {
	if (_1a3dbcc2a_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1a3db2967_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b1bb52:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1a6b1bb52:;
			++it;
			goto _iter_begin_1a6b1bb52;
		}
		_iter_end_1a6b1bb52:;
	};
	return false;;
}



inline jule::Ptr<_1a3dbd92e_File> _1a3dbed09_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a3dbd92e_File>(_1a3dbd92e_File{._field_Path=_5715_path, });;
}



inline _1c980bca3_Log _1a3dc1833_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a3dbd92e_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1c980c215_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1a3dc1beb_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b274dc:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1a6b274dc:;
			++it;
			_1149_i++;
			goto _iter_begin_1a6b274dc;
		}
		_iter_end_1a6b274dc:;
	};
	return true;;
}



inline jule::Str _1a3dc2070_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1a3dbbd4a_IsDecimal(_1289_b))))) {
				goto _iter_end_1a6b2a347;
			};
		}
	_iter_next_1a6b2a347:;
	}
	_iter_end_1a6b2a347:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1a3dc2438_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1a3dc2070_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1a3dc27ac_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1a6b2c338:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1a3dbbd4a_IsDecimal(_1689_b)) {
					_case_begin_1a6b2d218:;
					{
						goto _iter_next_1a6b2c1a1;
					}
				}
				else if (_1a3dc413d_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1a6b2d2b2:;
					{
						return _1a3dc2438_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1a6b2d191:;
					{
						goto _iter_end_1a6b2c1a1;
					}
				}
				_match_end_1a6b2d12a:;
			};
		}
	_iter_next_1a6b2c1a1:;
	}
	_iter_end_1a6b2c1a1:;;
	return jule::Str();;
}



inline jule::Str _1a3dc2b31_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1a3dc2070_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1a3dc2ea5_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1a3dc2070_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1a3dc3439_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1a3dc2070_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1a3dbbd4a_IsDecimal(_2019_b))))) {
				goto _iter_end_1a6b30d64;
			};
		}
	_iter_next_1a6b30d64:;
	}
	_iter_end_1a6b30d64:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1a3dc367b_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1a6b315c3:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1a6b340ed:;
					{
						__jule_func_result = _1a3dc3439_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1a6b34197:;
					{
						goto _iter_next_1a6b33509;
					}
				}
				else if (_1a3dc3cb9_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1a6b3420d:;
					{
						__jule_func_result = _1a3dc2070_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a3dbbd4a_IsDecimal(_2209_b)))) {
					_case_begin_1a6b34274:;
					{
						goto _iter_end_1a6b33509;
					}
				}
				_match_end_1a6b34021:;
			};
		}
	_iter_next_1a6b33509:;
	}
	_iter_end_1a6b33509:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1a3dc3945_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a3dc1beb_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1a3dbc114_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1a6b36ee1;
			};
		}
	_iter_next_1a6b36ee1:;
	}
	_iter_end_1a6b36ee1:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1a3dc3cb9_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1a3dc413d_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1a3dc44b2_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1a6b39e17:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1a3dbbd4a_IsDecimal(_2769_b)) {
					_case_begin_1a6b3aab6:;
					{
						goto _iter_next_1a6b39a0a;
					}
				}
				else if (_1a3dc413d_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1a6b3ab60:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a6b3aa3e:;
					{
						goto _iter_end_1a6b39a0a;
					}
				}
				_match_end_1a6b3a9c8:;
			};
		}
	_iter_next_1a6b39a0a:;
	}
	_iter_end_1a6b39a0a:;;
	return false;;
}



inline jule::Bool _1a3dc4836_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1a6b3bdc5:;
			{
				goto _case_begin_1a6b3be6e;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1a6b3be6e:;
			{
				goto _case_begin_1a6b3bee6;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1a6b3bee6:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6b3bd3c:;
			{
				return true;;
			}
		}
		_match_end_1a6b3bc3d:;
	};
}



inline jule::Bool _1a3dc4baa_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1a6b3db96:;
			{
				goto _case_begin_1a6b3dc0c;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1a6b3dc0c:;
			{
				goto _case_begin_1a6b3dc73;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1a6b3dc73:;
			{
				goto _case_begin_1a6b3dcea;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1a6b3dcea:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6b3daca:;
			{
				return true;;
			}
		}
		_match_end_1a6b3d657:;
	};
}



inline jule::Str _1a3dc51a5_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a3dc3439_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1a3dc3cb9_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1a3dc2070_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1a3dbc3cd_IsOctal(_3399_b))))) {
				goto _iter_end_1a6b42d21;
			};
		}
	_iter_next_1a6b42d21:;
	}
	_iter_end_1a6b42d21:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1a3dc5381_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1a6b46cae:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1a3dc4836_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1a6b47991:;
					{
						__jule_func_result = _1a3dc2ea5_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3dc4baa_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1a6b47a3a:;
					{
						__jule_func_result = _1a3dc2b31_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3dc413d_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1a6b47aa1:;
					{
						__jule_func_result = _1a3dc2438_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3dc44b2_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1a6b47b17:;
					{
						__jule_func_result = _1a3dc27ac_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1a3dbc697_IsHex(_3729_b))))) {
					_case_begin_1a6b47b7d:;
					{
						goto _iter_end_1a6b46e02;
					}
				}
				_match_end_1a6b478a3:;
			};
		}
	_iter_next_1a6b46e02:;
	}
	_iter_end_1a6b46e02:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1a3dc56d3_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1a3dbc697_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a58055ea:;
	}
	_iter_end_1a58055ea:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1a3dc599c_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1a3dc56d3_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1a3dc5c66_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1a3dc56d3_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1a3dc6030_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1a3dc56d3_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1a3dc62e9_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a3dbc3cd_IsOctal((*(_42616_txt))[1LL]))) || (!(_1a3dbc3cd_IsOctal((*(_42616_txt))[2LL])))) || (!(_1a3dbc3cd_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1c980bca3_Log> _1a3dcb2dd_Lex(jule::Ptr<_1a3dbd92e_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1a3dc6a69_lex _8149_lex = _1a3dc6a69_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a3dc9880_newLine(&_8149_lex);
	_1a3dc765d_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a3e940cb_FindModuleFile(jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6422359:;
		if (it != expr_end) {
			jule::Ptr<_20c078c3a_DirEntry> *_1412_d = it;
			{
				if (((!(_20c07d0c4_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a6422359:;
			++it;
			goto _iter_begin_1a6422359;
		}
		_iter_end_1a6422359:;
	};
	return false;;
}



inline jule::Str _1a3e94384_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20c078c3a_DirEntry>> _2713_dirents = ({
				auto except = static__1c9765305_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a6421c93;
				} jule::Slice<jule::Ptr<_20c078c3a_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1a3e940cb_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1c9762db3_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1a6421c93;
			};
		}
	_iter_next_1a6421c93:;
	}
	_iter_end_1a6421c93:;;
	return jule::Str();;
}



inline jule::Slice<_1c980bca3_Log> _1a3e9464d_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__20c07b5ab_Read(_1c97621c0_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1c980bca3_Log>::make({_1c980bca3_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1c9748063_Trim(_20c137711_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1c980bca3_Log>::make({_1c980bca3_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1a3e94e9a_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1c95e4a36_IsUpper(_145_r);;
}



inline jule::Bool _1a3ee2965_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a400d1cd_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=_1a400dd49_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1a400d3ed_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a400d73e_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a642eb3b:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1a642eb3b;
				};
			}
			_iter_next_1a642eb3b:;
			++it;
			goto _iter_begin_1a642eb3b;
		}
		_iter_end_1a642eb3b:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1a400e1e0_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;;
				jule::I64 _7516_size;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb951_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1c96ec9eb_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1a6431b4e:;
	}
	_iter_end_1a6431b4e:;;
	return _20c1379ca_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a400d9c5_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a6434091:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a64347bc:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a6434833:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a6434899:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a6434910:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a6434987:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a6434a0e:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a6434a86:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a6434b0d:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a6434b85:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a6434635:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a400dd49_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b;;
	jule::Bool _1148_ok;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a400d9c5_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a669d915:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _1b287b763_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a669d97b:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _1b287b763_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a669d9e2:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b287b763_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1a643824e:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b287b763_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1a6438491:;
	};
}



inline void _1a400e1e0_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1a400dd49_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	jule::Str _1515_sr = jule::Str::from_rune(_1465_r);;
	((*(_14519_buf))).append(_20c13747a_StrBytes(_1515_sr));;
}



inline jule::I64 _1a395bc92_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;;
			jule::I64 _1312_size;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1a66ca205:;
	}
	_iter_end_1a66ca205:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a395c15a_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;;
			jule::I64 _3112_size;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c96eb610_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1a66ccb20:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a66ccc85:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1a66ccba8:;
			};
		}
	_iter_next_1a66cbbc9:;
	}
	_iter_end_1a66cbbc9:;;
	return nullptr;;
}



inline void _1a395c446_FmtByDefault(_1c9754d1c_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1c975db28_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a66ce979:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b2876780_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a66cc108:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b2876780_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a66cdcb9:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288d2be_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a66cdd30:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288d2be_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a66ce418:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288d2be_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a66ce47e:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288d2be_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a66cea45:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288ce06_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1a66ceaab:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288ce06_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1a66ceb22:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288ce06_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a66ceb88:;
			{
				_1c975db28_WriteStr(_4722_buf, _1b288ce06_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a66cebee:;
			{
				_1c975db28_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a66cec65:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1c975db28_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1c975db28_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1a66cdc53:;
			{
				_1c975db28_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1a66ce2a3:;
	};
}



inline void _1a395c864_applyFmtByDefault(_1c9754d1c_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1a395c446_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1a395cc82_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1c9754d1c_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a395c864_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1c975db28_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1c975d870_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1a395d106_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _20c13747a_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1a395bc92_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1c9754d1c_StrBuilder _1269_buf = static__1c97550d6_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1a395bc92_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_1c975d870_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1a395c15a_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1a66dbea3;
			};
			_1a395cc82_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1c975d870_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1a66dbea3;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1a66dbea3:;
	}
	_iter_end_1a66dbea3:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1c975d870_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1c975edc1_Buf(&_1269_buf);;
}



inline jule::Str _1a414d73b_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _20c1379ca_StrFromBytes(_1a395d106_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1a3e195b2_parameterUsesGenerics(jule::Ptr<_1a3e16339_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>* _38446_generics) {
	if (_1a3e13028_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a4075685_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1a4062100_TypeSymbol> _1a3e1bd34_buildType(jule::Ptr<_1a3dcd653_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a402a0da_Value> _1a3e1c142_buildExpr(jule::Ptr<_1a3dd2987_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e1c40b_buildTypeAlias(jule::Ptr<_1a3de5170_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a3e1bd34_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1a3deb5b6_Field> _1a3e1c74c_buildField(jule::Ptr<_1a3de8a25_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a3deb5b6_Field>(_1a3deb5b6_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a3e1bd34_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a3deb5b6_Field>> _1a3e1c9d3_buildFields(jule::Slice<jule::Ptr<_1a3de8a25_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a3deb5b6_Field>> _1359_fields = jule::Slice<jule::Ptr<_1a3deb5b6_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d9e9a6:;
		if (it != expr_end) {
			jule::Ptr<_1a3de8a25_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3deb5b6_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1a3e1c74c_buildField(_13617_decl)); };
			}
			_iter_next_1a6d9e9a6:;
			++it;
			goto _iter_begin_1a6d9e9a6;
		}
		_iter_end_1a6d9e9a6:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e1cc9c_buildStruct(jule::Ptr<_1a3de941b_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a3dee4dc_Struct>(_1a3dee4dc_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a3e1c9d3_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1a3e1290c_Param> _1a3e1d066_buildParam(jule::Ptr<_1a3ddddb1_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a3e1290c_Param>(_1a3e1290c_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a3e1bd34_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a3e1290c_Param>> _1a3e1d440_buildParams(jule::Slice<jule::Ptr<_1a3ddddb1_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a3e1290c_Param>> _1669_params = jule::Slice<jule::Ptr<_1a3e1290c_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6da5649:;
		if (it != expr_end) {
			jule::Ptr<_1a3ddddb1_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3e1290c_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1a3e1d066_buildParam(_16717_decl)); };
			}
			_iter_next_1a6da5649:;
			++it;
			goto _iter_begin_1a6da5649;
		}
		_iter_end_1a6da5649:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1a3e1217b_RetType> _1a3e1d682_buildRetType(jule::Ptr<_1a3dd1546_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3e1217b_RetType>(_1a3e1217b_RetType{._field_Kind=_1a3e1bd34_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e1d94b_buildFunc(jule::Ptr<_1a3de0313_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a3e143d1_Fn>(_1a3e143d1_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a3e1d682_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a3e1d440_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _1a3e1dc15_buildMethods(jule::Slice<jule::Ptr<_1a3de0313_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a3e143d1_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1a3e143d1_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6da752a:;
		if (it != expr_end) {
			jule::Ptr<_1a3de0313_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3e143d1_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1a3e1d94b_buildFunc(_20317_decl)); };
			}
			_iter_next_1a6da752a:;
			++it;
			goto _iter_begin_1a6da752a;
		}
		_iter_end_1a6da752a:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>> _1a3e1dece_buildTraitInherits(jule::Slice<jule::Ptr<_1a3dcd653_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6dab298:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcd653_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a4062100_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1a3e1bd34_buildType(_21117_it)); };
			}
			_iter_next_1a6dab298:;
			++it;
			goto _iter_begin_1a6dab298;
		}
		_iter_end_1a6dab298:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e1e298_buildTrait(jule::Ptr<_1a3de9b58_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a3e276ad_Trait>(_1a3e276ad_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a3e1dece_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a3e1dc15_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1a3e2934c_EnumItem> _1a3e1e562_buildEnumItem(jule::Ptr<_1a3de6c10_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a3e2934c_EnumItem>(_1a3e2934c_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a3e1c142_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _1a3e1e82b_buildEnumItems(jule::Slice<jule::Ptr<_1a3de6c10_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6dad641:;
		if (it != expr_end) {
			jule::Ptr<_1a3de6c10_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3e2934c_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1a3e1e562_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1a6dad641:;
			++it;
			goto _iter_begin_1a6dad641;
		}
		_iter_end_1a6dad641:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e1ed26_buildEnum(jule::Ptr<_1a3de77c1_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a3e29db9_Enum>(_1a3e29db9_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a3e1bd34_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a3e1e82b_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a3e2aeec_TypeEnumItem> _1a3e20002_buildTypeEnumItem(jule::Ptr<_1a3de80eb_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a3e2aeec_TypeEnumItem>(_1a3e2aeec_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a3e1bd34_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> _1a3e20299_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a3de80eb_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6db1897:;
		if (it != expr_end) {
			jule::Ptr<_1a3de80eb_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3e2aeec_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1a3e20002_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1a6db1897:;
			++it;
			goto _iter_begin_1a6db1897;
		}
		_iter_end_1a6db1897:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e20563_buildTypeEnum(jule::Ptr<_1a3de875b_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a3e2b5c4_TypeEnum>(_1a3e2b5c4_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a3e20299_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e2082c_buildVar(jule::Ptr<_1a3de14bd_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a3e1bd34_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a3e1c142_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a3e1a7a0_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _1a3e20ae6_buildVars(jule::Slice<jule::Ptr<_1a3de14bd_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a3ebac4b_Var>> _2969_vars = jule::Slice<jule::Ptr<_1a3ebac4b_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6db47ac:;
		if (it != expr_end) {
			jule::Ptr<_1a3de14bd_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1a3e2082c_buildVar(_29717_decl)); };
			}
			_iter_next_1a6db47ac:;
			++it;
			goto _iter_begin_1a6db47ac;
		}
		_iter_end_1a6db47ac:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1a3e50d24_Impl> _1a3e20db0_buildImpl(jule::Ptr<_1a3dea2b8_Impl> _30318_decl) {
	return jule::new_ptr<_1a3e50d24_Impl>(_1a3e50d24_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a3e1dc15_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a3e20ae6_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4b270_buildAsComptimeMethodData(jule::Ptr<_1a3e172d5_FnIns>* _142135_f) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1a3e77a60_ImportInfo> _1a3e4b57d_findComptimePackage(jule::Ptr<_1a3e97dd2_Sema>* _142929_s) {
	return _1a3e98377_SelectPackage((*(_142929_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a3e77a60_ImportInfo>)>([=](jule::Ptr<_1a3e77a60_ImportInfo> _143028_pkg) mutable -> jule::Bool {
		return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4b902_buildComptimeTypeInfoData(jule::Ptr<_1a3e97dd2_Sema>* _143535_s, jule::Ptr<_1a4059e2d_TypeKind>* _143550_t) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(_1a3e9771c_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a3e4bc43_buildComptimeValue(jule::Ptr<_1a4028e63_Data>* _144328_d) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e45566_comptimeValue>(_1a3e45566_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1a3e4ecbd_toStrConstraints(jule::Ptr<_1a4058547_InsGeneric> _14321_g) {
	_1c9754d1c_StrBuilder _1449_sb = static__1c97550d6_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7105b52:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1a4059e2d_TypeKind> *_14512_c = it;
			{
				_1c975db28_WriteStr(&_1449_sb, _1a405a2e6_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_1c975db28_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1a7105b52:;
			++it;
			_1459_i++;
			goto _iter_begin_1a7105b52;
		}
		_iter_end_1a7105b52:;
	};
	return _1c975e420_Str(&_1449_sb);;
}



inline jule::Bool _1a3e50186_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a4059e2d_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1a710799a:;
			{
				jule::Ptr<_1a4062a07_Prim> _1579_prim = _1a405c57e_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1b289b376_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1a7107a11:;
			{
				jule::Ptr<_1a4062a07_Prim> _1639_prim = _1a405c57e_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1b289a71b_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1a7107a77:;
			{
				jule::Ptr<_1a4062a07_Prim> _1699_prim = _1a405c57e_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1b289ad26_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1a7107aee:;
			{
				jule::Ptr<_1a4062a07_Prim> _1759_prim = _1a405c57e_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1b289b0ac_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1a7107cb9:;
			{
				return _1a405b7ae_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1a7107d30:;
			{
				return (!(_1a405b7ae_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1a7107d96:;
			{
				return _1a405b528_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1a7107e0c:;
			{
				return _1a405ba45_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1a7106dd9:;
			{
				return false;;
			}
		}
		_match_end_1a710779c:;
	};
}



inline jule::Bool _1a3e50450_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a3e4d184_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a710d819:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1a710d819:;
			++it;
			goto _iter_begin_1a710d819;
		}
		_iter_end_1a710d819:;
	};
	return false;;
}



inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e53057_newScopeCheckerBase(jule::Ptr<_1a3e97dd2_Sema>* _5829_s, jule::Ptr<_1a3e172d5_FnIns> _5843_owner) {
	return jule::new_ptr<_1a3e5d57e_scopeChecker>(_1a3e5d57e_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a4023aea_SymbolTable>(), });;
}



inline jule::Ptr<_1a3e5d57e_scopeChecker> _1a3e53420_newScopeChecker(jule::Ptr<_1a3e97dd2_Sema>* _6625_s, jule::Ptr<_1a3e172d5_FnIns> _6639_owner) {
	jule::Ptr<_1a3e5d57e_scopeChecker> _679_base = _1a3e53057_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e5c0d8_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3e5c66b_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1a3e5c0d8_scopeLabel> _1a3e53794_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a3e5d57e_scopeChecker> _7637_scope) {
	jule::Ptr<_1a3e5c0d8_scopeLabel> _779_label = _1a3e62088_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1a3e62088_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1a71264d0:;
	}
	_iter_end_1a71264d0:;;
	return _779_label;;
}



inline jule::Bool _1a3e53b5c_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a3e5627a_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a7129615:;
			{
				jule::Ptr<_1a3e0864a_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1a3e0864a_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a712812a:;
			{
				jule::Ptr<_1a4028e63_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1a4028e63_Data>();;
				return _1a3e53b5c_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1a71295b0:;
	};
	return false;;
}



inline jule::Bool _1a3e53ed1_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a3e5627a_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a712bae0:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a3e5627a_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a712bb56:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1a3e571b0_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a712bbbc:;
			{
				jule::Ptr<_1a3e580b2_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1a3e580b2_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1a3e53b5c_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a712b77c:;
			{
				jule::Ptr<_1a3e57666_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1a3e57666_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1a3e53b5c_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1a3e53b5c_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a712b7e3:;
			{
				jule::Ptr<_1a3e5a3b1_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1a3e5a3b1_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a71310de:;
					if (it != expr_end) {
						jule::Ptr<_1a3e5add9_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7131c38:;
								if (it != expr_end) {
									jule::Ptr<_1a4028e63_Data> *_12420_expr = it;
									{
										if (_1a3e53b5c_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a7131c38:;
									++it;
									goto _iter_begin_1a7131c38;
								}
								_iter_end_1a7131c38:;
							};
						}
						_iter_next_1a71310de:;
						++it;
						goto _iter_begin_1a71310de;
					}
					_iter_end_1a71310de:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a712b859:;
			{
				jule::Ptr<_1a3e56db3_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1a3e56db3_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7133b08:;
					if (it != expr_end) {
						jule::Ptr<_1a3e56698_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1a3e53b5c_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a7133b08:;
						++it;
						goto _iter_begin_1a7133b08;
					}
					_iter_end_1a7133b08:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a712b8c0:;
			{
				jule::Ptr<_1a4028e63_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1a4028e63_Data>(&__jule_any_type24);;
				return _1a3e53b5c_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a7129a88:;
			{
				return false;;
			}
		}
		_match_end_1a712b34d:;
	};
}



inline jule::I64 _1a3e54355_countMatchType(jule::Ptr<_1a3e5a3b1_Match>* _14720_m, jule::Ptr<_1a4059e2d_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1a405a2e6_Str((*(_14732_t)).ptr());;
	_julec_label_1a7136a40:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7136e6e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e5add9_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1a7136e6e;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7137b95:;
					if (it != expr_end) {
						jule::Ptr<_1a4028e63_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1a7136e6e;
							};
							if ((_1495_kind == _1a405a2e6_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1a4059e2d_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1a7137b95:;
						++it;
						goto _iter_begin_1a7137b95;
					}
					_iter_end_1a7137b95:;
				};
			}
			_iter_next_1a7136e6e:;
			++it;
			goto _iter_begin_1a7136e6e;
		}
		_iter_end_1a7136e6e:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1a4028e63_Data>> _1a3e5461e_getDatasFromTupleData(jule::Ptr<_1a4028e63_Data>* _17131_d) {
	if ((_1a405e3a5_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1a713c0ea:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1a3e0bc58_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1a71396d0:;
				{
					jule::Ptr<_1a4067aea_Tuple> _17717_t = _1a405e3a5_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a4028e63_Data>> _17817_r = jule::Slice<jule::Ptr<_1a4028e63_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a713aea6:;
						if (it != expr_end) {
							jule::Ptr<_1a4059e2d_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a4028e63_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1a713aea6:;
							++it;
							goto _iter_begin_1a713aea6;
						}
						_iter_end_1a713aea6:;
					};
					return _17817_r;;
				}
			}
			_match_end_1a713967a:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a4028e63_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a3e54e5a_checkMut(jule::Ptr<_1a3e97dd2_Sema>* _20618_s, jule::Ptr<_1a4028e63_Data>* _20629_left, jule::Ptr<_1a4028e63_Data> _20646_right, jule::Ptr<_1a3db8198_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1a7140274:;
			{
				_1a3e9aa1c_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a405b7ae_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1a714031d:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a405db02_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a3e9aa1c_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a714020d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7140164:;
	};
}



inline jule::Bool _1a3e55444_checkAssign(jule::Ptr<_1a3e97dd2_Sema>* _22521_s, jule::Ptr<_1a4028e63_Data>* _22536_left, jule::Ptr<_1a4028e63_Data> _22553_right, jule::Ptr<_1a3db8198_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3e172d5_FnIns> _2265_f = _1a405d86b_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1a3e9aa1c_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a402986a_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a7145a3d:;
			{
				_1a3e9aa1c_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a3e9ad80_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1a7145aa4:;
			{
				_1a3e9aa1c_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a3e54e5a_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a7145b1a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7145983:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a714582e:;
	};
}



inline jule::Bool _1a3e5570d_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a7148018:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1a3ddc101_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a7147c93:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7147b61:;
			{
				return false;;
			}
		}
		_match_end_1a7141e57:;
	};
}



inline jule::Bool _1a3e559c7_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1a7146313:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a7148bd9:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1a4028e63_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1a7149b96:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a714a15d:;
						{
							return false;;
						}
					}
					_match_end_1a714a108:;
				};
			}
		}
		else {
			_case_begin_1a7148b73:;
			{
				return false;;
			}
		}
		_match_end_1a714837b:;
	};
}



inline jule::Bool _1a3e55c91_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a714a5c0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a71499dc:;
			{
				return false;;
			}
		}
		_match_end_1a7149646:;
	};
}



inline jule::U64 _1a3e70393_removeEqFromOp(jule::U64 _216219_op) {
	{
		auto &_match_expr{ _216219_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a714b390:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a714b406:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a714b0a4:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a714b11a:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a714b4e4:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a714b55a:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a714b5c1:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a714b637:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a714b6ae:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a714b78b:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1a714aadc:;
			{
				return _216219_op;;
			}
		}
		_match_end_1a714aed8:;
	};
}



inline void _1a3e705c4_makeComptimeRange(jule::Ptr<_1a4028e63_Data>* _219127_d) {
	{
		
		if ((_1a405e8c2_comptimeStructFields((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a714bb98:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a405e8c2_comptimeStructFields((*((*(_219127_d))))._field_Kind), 0)}), 5)});
			}
		}
		else if ((_1a405edde_comptimeEnumFields((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a715020c:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a405edde_comptimeEnumFields((*((*(_219127_d))))._field_Kind), 2)}), 5)});
			}
		}
		else if ((_1a4060bae_comptimeTypeInfos((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7150273:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a4060bae_comptimeTypeInfos((*((*(_219127_d))))._field_Kind), 4)}), 5)});
			}
		}
		else if ((_1a406040b_comptimeParams((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a714bc0e:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a406040b_comptimeParams((*((*(_219127_d))))._field_Kind), 3)}), 5)});
			}
		}
		else if ((_1a40611cb_comptimeStatics((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a714bc75:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a40611cb_comptimeStatics((*((*(_219127_d))))._field_Kind), 1)}), 5)});
			}
		}
		else if ((_1a4061c15_comptimeFiles((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a714bcdb:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e2e72b_comptimeRange>(_1a3e2e72b_comptimeRange{._field_kind=jule::Trait<_1a3e2e50b_comptimeRangeKind>(_1a4061c15_comptimeFiles((*((*(_219127_d))))._field_Kind), 5)}), 5)});
			}
		}
		else {
			_case_begin_1a714bb32:;
			{
				(*((*(_219127_d))))._field_Decl=true;
			}
		}
		_match_end_1a714edcc:;
	};
}



inline jule::Bool _1a3e70abe_canComptimeMatch(jule::Ptr<_1a4028e63_Data>* _221226_d) {
	if ((!(_1a4022be8_isGoodValueToInfer(_221226_d)))) {
		return false;;
	};
	return (_1a402986a_IsConst((*(_221226_d)).ptr()) || (_1a4060e45_comptimeTypeInfo((*((*(_221226_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a3e75046_findVarInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5814131:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a3ebac4b_Var> _4813_v = _1a40244d0_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1a5814131:;
			++it;
			goto _iter_begin_1a5814131;
		}
		_iter_end_1a5814131:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a3e754b9_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a58156a4:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a405913b_TypeAlias> _6013_ta = _1a40248cb_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1a58156a4:;
			++it;
			goto _iter_begin_1a58156a4;
		}
		_iter_end_1a58156a4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3dee4dc_Struct> _1a3e758e8_findStructInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5816bb1:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a3dee4dc_Struct> _7213_s = _1a4024cc7_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1a5816bb1:;
			++it;
			goto _iter_begin_1a5816bb1;
		}
		_iter_end_1a5816bb1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e143d1_Fn> _1a3e75d9e_findFnInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a58181bd:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a3e143d1_Fn> _8413_f = _1a40251c3_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1a58181bd:;
			++it;
			goto _iter_begin_1a58181bd;
		}
		_iter_end_1a58181bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e276ad_Trait> _1a3e761e0_findTraitInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5819499:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a3e276ad_Trait> _9613_t = _1a4025514_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1a5819499:;
			++it;
			goto _iter_begin_1a5819499;
		}
		_iter_end_1a5819499:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e29db9_Enum> _1a3e76564_findEnumInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5819a0a:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a3e29db9_Enum> _10813_e = _1a4025855_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1a5819a0a:;
			++it;
			goto _iter_begin_1a5819a0a;
		}
		_iter_end_1a5819a0a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3e2b5c4_TypeEnum> _1a3e768d8_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a581ad3b:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1a3e2b5c4_TypeEnum> _12013_e = _1a4025b96_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1a581ad3b:;
			++it;
			goto _iter_begin_1a581ad3b;
		}
		_iter_end_1a581ad3b:;
	};
	return nullptr;;
}



inline jule::Any _1a3e76e27_defByIdentPackage(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a581d15c:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1a4026b64_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1a581d15c:;
			++it;
			goto _iter_begin_1a581d15c;
		}
		_iter_end_1a581d15c:;
	};
	return nullptr;;
}



inline jule::Bool _1a3e7ce61_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1c9740a83_HasPrefix((*(_35518_f)), _1c97621c0_Join(jule::Slice<jule::Str>::make({_1c908aa82_PathStdlib,_35526_p})));;
}



inline jule::Bool _1a3e95572_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a582dce9:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a582dd60:;
			{
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_1813_model))._field_Field != nullptr) && _1a3e95572_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a582ddc6:;
			{
				jule::Ptr<_1a3e06a44_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a405ca9b_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a405c815_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a3e95572_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a582de3c:;
			{
				jule::Ptr<_1a3e08eca_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1a3e08eca_IndexingExprModel>(&__jule_any_type45);;
				return _1a3e95572_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a582d524:;
			{
				return false;;
			}
		}
		_match_end_1a582d4be:;
	};
}



inline _1c980bca3_Log _1a3e95a28_compilerErr(jule::Ptr<_1a3db8198_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1c980bca3_Log _439_log = _1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1c980c215_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1a3dbe941_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1a3e95d9c_impIsLookupable(jule::Ptr<_1a3e77a60_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1a3e7a3e2_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1a3e961cc_appendRetVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _6823_dest, jule::Ptr<_1a3e172d5_FnIns>* _6842_f) {
	if ((_1a3e14854_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a4059e2d_TypeKind>> _739_types = _1a3e184d4_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5839ad5:;
		if (it != expr_end) {
			jule::I64 _7410_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _7417_ident = *it;
			{
				if ((_1a3dbaa80_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1a3dbad49_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1a5839ad5;
				};
				{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1a5839ad5:;
			++it;
			_7410_i++;
			goto _iter_begin_1a5839ad5;
		}
		_iter_end_1a5839ad5:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a3e964b8_appendParamVars(jule::Slice<jule::Ptr<_1a3ebac4b_Var>>* _9825_dest, jule::Ptr<_1a3e172d5_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a583e48b:;
		if (it != expr_end) {
			jule::Ptr<_1a3e16339_ParamIns> _10317_p = *it;
			{
				if ((_1a3dbaa80_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1a3dbad49_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1a583e48b;
				};
				jule::Ptr<_1a3ebac4b_Var> _10813_v = jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()}), });;
				{
					
					if (_1a3e13028_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1a58432b4:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a4059977_Kind>((*((*(_9844_f))))._field_Owner, 0)});
							(*_10813_v.alloc)._field_Reference=(!(_1a3e132ae_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1a3e132ae_IsRef((*_10317_p.alloc)._field_Decl)) {
								(*_10813_v.alloc)._field_Ident=(*_10813_v.alloc)._field_Ident.slice(1LL);
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4066533_Sptr>(_1a4066533_Sptr{._field_Elem=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), 21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1a584300b:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4067006_Slc>(_1a4067006_Slc{._field_Elem=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1a5842e95:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1a5842d85:;
				};
				{ jule::Slice<jule::Ptr<_1a3ebac4b_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1a583e48b:;
			++it;
			goto _iter_begin_1a583e48b;
		}
		_iter_end_1a583e48b:;
	};
}



inline void _1a3e967a4_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a405913b_TypeAlias>>* _15834_dest, jule::Ptr<_1a3e172d5_FnIns>* _15859_f) {
	jule::I64 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a584b762:;
		if (it != expr_end) {
			jule::I64 _16810_i = it - expr->begin();
			jule::Ptr<_1a4058547_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1a3dda85d_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1a584b762:;
			++it;
			_16810_i++;
			goto _iter_begin_1a584b762;
		}
		_iter_end_1a584b762:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a3e0226a_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a584cc4c:;
			if (it != expr_end) {
				jule::I64 _18214_i = it - expr->begin();
				jule::Ptr<_1a4058547_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1a3dda85d_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1a405913b_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1a584cc4c:;
				++it;
				_18214_i++;
				goto _iter_begin_1a584cc4c;
			}
			_iter_end_1a584cc4c:;
		};
	};
}



inline jule::Ptr<_1a4023aea_SymbolTable> _1a3e96b28_findFile(jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>* _19618_files, jule::Ptr<_1a3dbd92e_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5851c73:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1a5851c73:;
			++it;
			goto _iter_begin_1a5851c73;
		}
		_iter_end_1a5851c73:;
	};
	return nullptr;;
}



inline void _1a3e970ce_pushSuggestion(_1c980bca3_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1c980c215_Logf(_20541_fmt, _20554_args);
}



inline void _1a3eb9431_pushImplemented(jule::Ptr<_1a3e276ad_Trait> _288224_t, jule::Ptr<_1a3dee4dc_Struct>* _288240_d) {
	_julec_label_1a5853b98:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1a5854a23:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a5855480:;
					if (it != expr_end) {
						jule::Ptr<_1a3dee4dc_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1a5853ec8;
							};
						}
						_iter_next_1a5855480:;
						++it;
						goto _iter_begin_1a5855480;
					}
					_iter_end_1a5855480:;
				};
				goto _case_begin_1a5854072;
			}
		}
		else {
			_case_begin_1a5854072:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1a3dee4dc_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1a5853ec8:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5855804:;
		if (it != expr_end) {
			jule::Ptr<_1a4062100_TypeSymbol> _289517_i = *it;
			{
				_1a3eb9431_pushImplemented(_1a405dd88_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1a5855804:;
			++it;
			goto _iter_begin_1a5855804;
		}
		_iter_end_1a5855804:;
	};
}



inline void _1a3eb971c_pushImplements(jule::Ptr<_1a3dee4dc_Struct>* _290024_s, jule::Ptr<_1a3e276ad_Trait> _290040_t) {
	_julec_label_1a5856be0:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1a585797c:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a58583d9:;
					if (it != expr_end) {
						jule::Ptr<_1a3e276ad_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1a5856e32;
							};
						}
						_iter_next_1a58583d9:;
						++it;
						goto _iter_begin_1a58583d9;
					}
					_iter_end_1a58583d9:;
				};
				goto _case_begin_1a5856ecb;
			}
		}
		else {
			_case_begin_1a5856ecb:;
			{
				{ jule::Slice<jule::Ptr<_1a3e276ad_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1a5856e32:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a585875d:;
		if (it != expr_end) {
			jule::Ptr<_1a4062100_TypeSymbol> _291317_i = *it;
			{
				_1a3eb971c_pushImplements(_290024_s, _1a405dd88_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1a585875d:;
			++it;
			goto _iter_begin_1a585875d;
		}
		_iter_end_1a585875d:;
	};
}



inline jule::Bool _1a400e971_traitHasReferenceReceiver(jule::Ptr<_1a3e276ad_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a76670b4:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1a76670b4;
				};
				jule::Ptr<_1a3e1290c_Param> _349_p = (*(*(_2812_f)).alloc)._field_Params[0LL];;
				if ((_1a3e132ae_IsRef(_349_p.ptr()) && _1a3e13028_IsSelf(_349_p))) {
					return true;;
				};
			}
			_iter_next_1a76670b4:;
			++it;
			goto _iter_begin_1a76670b4;
		}
		_iter_end_1a76670b4:;
	};
	return false;;
}



inline jule::Bool _1a400ed28_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1a4028e63_Data>* _4233_d) {
	jule::Str _435_value = _1b2876780_FmtFloat(_1b289e313_AsF64((*((*(_4233_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b2891e60_CheckBitFloat(_435_value, _1b28909b9_BitsizeOf((*(_4221_kind))));;
}



inline jule::Bool _1a401019c_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1a4028e63_Data>* _4730_d) {
	jule::F64 _485_min = _1b2897152_Min(_4718_kind);;
	jule::F64 _495_max = _1b28973d8_Max(_4718_kind);;
	{
		
		if (_1b28a115b_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1a766ab01:;
			{
				jule::F64 _529_x = _1b289da60_ReadF64((*((*(_4730_d))))._field_Constant);;
				jule::F64 _539_i;;
				jule::F64 _5312_frac;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b284c04c_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1b28a08a8_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1a766ab67:;
			{
				jule::F64 _599_x = _1b289e313_AsF64((*((*(_4730_d))))._field_Constant);;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1b28a0622_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1a766abcd:;
			{
				jule::F64 _649_x = _1b289e313_AsF64((*((*(_4730_d))))._field_Constant);;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1a766a9e1:;
	};
	return false;;
}



inline jule::Bool _1a4010565_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1a4028e63_Data>* _7032_d) {
	jule::F64 _715_max = _1b28973d8_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1a3ee2965_IsAscii(static_cast<jule::I32>(_1b289d026_ReadI64((*((*(_7032_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b28a115b_IsF64((*((*(_7032_d))))._field_Constant)) {
			_case_begin_1a767170b:;
			{
				jule::F64 _789_x = _1b289da60_ReadF64((*((*(_7032_d))))._field_Constant);;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i;;
				jule::F64 _8212_frac;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b284c04c_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1b28a08a8_IsU64((*((*(_7032_d))))._field_Constant)) {
			_case_begin_1a7671772:;
			{
				jule::F64 _889_x = _1b289e313_AsF64((*((*(_7032_d))))._field_Constant);;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1b28a0622_IsI64((*((*(_7032_d))))._field_Constant)) {
			_case_begin_1a76717d8:;
			{
				jule::F64 _939_x = _1b289e313_AsF64((*((*(_7032_d))))._field_Constant);;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1a7670d7b:;
	};
	return false;;
}



inline jule::Bool _1a40108d9_intAssignable(jule::Str _9918_kind, jule::Ptr<_1a4028e63_Data>* _9930_d) {
	{
		
		if (_1b289a40d_IsSigInt(_9918_kind)) {
			_case_begin_1a7676414:;
			{
				return _1a401019c_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1b289a71b_IsUnsigInt(_9918_kind)) {
			_case_begin_1a767649c:;
			{
				return _1a4010565_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1a7675e3b:;
			{
				return false;;
			}
		}
		_match_end_1a7675149:;
	};
}



inline void _1a401bd02_checkMutRiskOfStructLit(jule::Ptr<_1a3e97dd2_Sema>* _91933_s, jule::Ptr<_1a3e07418_StructLitExprModel>* _91944_m) {
	{
		auto expr = &((*((*(_91944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7677525:;
		if (it != expr_end) {
			jule::Ptr<_1a3e07072_StructArgExprModel> *_92012_arg = it;
			{
				if ((*((*((*((*(_92012_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1a7677525;
				};
				if (((!((*((*(*(_92012_arg)).alloc)._field_Expr))._field_Mutable)) && _1a405b7ae_Mutable((*(*(*(_92012_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a3e9aa1c_pushErr((*(_91933_s)).ptr(), (*(*(_92012_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(*(*(_92012_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1a7677525:;
			++it;
			goto _iter_begin_1a7677525;
		}
		_iter_end_1a7677525:;
	};
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a4022896_lenKind(void) {
	return _1a4150de2_primInt;;
}



inline jule::Bool _1a4022be8_isGoodValueToInfer(jule::Ptr<_1a4028e63_Data>* _137524_d) {
	return (!(_1a402934d_IsNil((*(_137524_d)).ptr())));;
}



inline jule::Ptr<_1a3dcca70_Directive> _1a405280a_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _425223_directives, jule::Str _425254_d) {
	{
		auto expr = _425223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a776b262:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _425317_dr = *it;
			{
				if (((*((*(_425317_dr))._field_Tag))._field_Kind == _425254_d)) {
					return _425317_dr;;
				};
			}
			_iter_next_1a776b262:;
			++it;
			goto _iter_begin_1a776b262;
		}
		_iter_end_1a776b262:;
	};
	return nullptr;;
}



inline jule::Any _1a4052bc3_findBuiltinsImport(jule::Str* _426124_ident, jule::Ptr<_1a3e77a60_ImportInfo> _426136_imp) {
	return _1a4154500_findPackageBuiltinDef(&((*(_426136_imp))._field_LinkPath), _426124_ident);;
}



inline void _1a4052e04_fitBitsize(jule::Ptr<_1a4028e63_Data>* _427020_d) {
	jule::Ptr<_1a4062a07_Prim> _42719_prim = _1a405c57e_Prim((*((*(_427020_d))))._field_Kind.ptr());;
	jule::I64 _42725_z = _1b28909b9_BitsizeOf(_1a4062d48_Str(_42719_prim.ptr()));;
	{
		
		if (_1b28a0622_IsI64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1a776d9c3:;
			{
				jule::I64 _42759_k = _1b28924e3_BitsizeOfInt(_1b289d026_ReadI64((*((*(_427020_d))))._field_Constant));;
				if (((_42759_k > _42725_z) || _1b289a71b_IsUnsigInt((*_42719_prim.alloc)._field_Kind))) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_1b2890d0a_IntFromBits(_42759_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1a4153246_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b28a08a8_IsU64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1a776da39:;
			{
				jule::I64 _42819_k = _1b28927ac_BitsizeOfUint(_1b289d2ac_ReadU64((*((*(_427020_d))))._field_Constant));;
				if (((_42819_k > _42725_z) || _1b289a40d_IsSigInt((*_42719_prim.alloc)._field_Kind))) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_1b2891091_UintFromBits(_42819_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1a4153246_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b28a115b_IsF64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1a776daa0:;
			{
				if ((_42725_z == 64LLU)) {
					return;;
				};
				jule::I64 _42919_k = _1b2892229_BitsizeOfFloat(_1b289da60_ReadF64((*((*(_427020_d))))._field_Constant));;
				if ((_42919_k > _42725_z)) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_1b289135a_FloatFromBits(_42919_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1a4153246_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1a776d8b3:;
	};
}



inline void _1a4053234_makeStructLitAlloc(jule::Ptr<_1a4028e63_Data>* _429928_d, jule::Ptr<_1a3e07418_StructLitExprModel>* _429943_lit) {
	(*((*(_429928_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4066533_Sptr>(_1a4066533_Sptr{._field_Elem=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*((*(_429943_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_429928_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e07715_AllocStructLitExprModel>(_1a3e07715_AllocStructLitExprModel{._field_Lit=(*(_429943_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1a3ebac4b_Var> _1a40535a8_buildErrorVar(jule::Ptr<_1a3e5627a_Scope>* _431023_s, jule::Ptr<_1a3dd66b1_FnCallExpr>* _431039_fc) {
	return jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Scope=(*(_431023_s)), ._field_Token=(*((*(_431039_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>()}), });;
}



inline jule::Any _1a405392c_findBuiltinsSema(jule::Str* _432522_ident, jule::Ptr<_1a3e97dd2_Sema> _432538_s) {
	{
		auto expr = &((*((*(_432538_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a777a2e8:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _432617_imp = *it;
			{
				if (((*(_432617_imp))._field_ImportAll || _1a3e7a3e2_existIdent(_432617_imp, (*(_432522_ident))))) {
					jule::Any _432817_def = _1a4052bc3_findBuiltinsImport(_432522_ident, _432617_imp);;
					if ((_432817_def != nullptr)) {
						return _432817_def;;
					};
				};
			}
			_iter_next_1a777a2e8:;
			++it;
			goto _iter_begin_1a777a2e8;
		}
		_iter_end_1a777a2e8:;
	};
	jule::Str _43369_ppath = _1a3dbe0d3_Dir((*(*_432538_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_1c9740a83_HasPrefix(_43369_ppath, _1c908aa82_PathStdlib)) {
		(_43369_ppath).mut_slice(_1c908aa82_PathStdlib.len());;
		_43369_ppath=(jule::Str::lit("std", 3) + _1c9746858_Replace(_43369_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1a4154500_findPackageBuiltinDef(&(_43369_ppath), _432522_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a4053be6_isOkForShifting(jule::Ptr<_1a4028e63_Data>* _435025_d) {
	if (_1a402986a_IsConst((*(_435025_d)).ptr())) {
		{
			
			if (_1b28a0622_IsI64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1a777d6d6:;
				{
					return (_1b289d026_ReadI64((*((*(_435025_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b28a08a8_IsU64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1a777d780:;
				{
					return true;;
				}
			}
			else if (_1b28a115b_IsF64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1a777d807:;
				{
					return (_1b289da60_ReadF64((*((*(_435025_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1a777d64d:;
				{
					return false;;
				}
			}
			_match_end_1a777d582:;
		};
	};
	jule::Ptr<_1a4062a07_Prim> _43635_prim = _1a405c57e_Prim((*((*(_435025_d))))._field_Kind.ptr());;
	return ((_43635_prim != nullptr) && _1b289a9d5_IsInt(_1a4062d48_Str(_43635_prim)));;
}



inline jule::Bool _1a40540c0_isInstancedStruct(jule::Ptr<_1a3e0226a_StructIns> _436722_s) {
	return ((*((*(_436722_s))._field_Decl))._field_Generics.len() == (*_436722_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a40543bc_isPtrArithmeticCompatible(jule::Ptr<_1a4028e63_Data>* _437135_l, jule::Ptr<_1a4028e63_Data>* _437150_r) {
	jule::Ptr<_1a4069cea_Ptr> _43725_ptr = _1a405ca9b_Ptr((*((*(_437150_r))))._field_Kind.ptr());;
	if ((_43725_ptr != nullptr)) {
		return _1a405a637_Equal((*(_1a405ca9b_Ptr((*((*(_437135_l))))._field_Kind)))._field_Elem, (*_43725_ptr.alloc)._field_Elem);;
	};
	if (_1a402986a_IsConst((*(_437150_r)).ptr())) {
		return _1a40108d9_intAssignable(jule::Str::lit("int", 3), _437150_r);;
	};
	_1a4010dc3_typeCompatibilityChecker _43799_tcc = _1a4010dc3_typeCompatibilityChecker{._field_dest=_1a4150de2_primInt, ._field_src=(*((*(_437150_r))))._field_Kind, };;
	return _1a4012589_check(&_43799_tcc);;
}



inline void _1a4054763_applyCastKindModel(jule::Ptr<_1a4028e63_Data>* _438628_d, jule::Ptr<_1a4059e2d_TypeKind>* _438643_t, jule::Ptr<_1a3db8198_Token>* _438662_token) {
	(*((*(_438628_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e07c98_CastingExprModel>(_1a3e07c98_CastingExprModel{._field_Token=(*(_438662_token)), ._field_Expr=jule::new_ptr<_1a4028e63_Data>((*((*(_438628_d))))), ._field_Kind=(*(_438643_t)), ._field_ExprKind=(*((*(_438628_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1a4054b09_applyCastKind(jule::Ptr<_1a4028e63_Data>* _439523_d, jule::Ptr<_1a4059e2d_TypeKind>* _439538_t, jule::Ptr<_1a3db8198_Token>* _439557_token) {
	_1a4054763_applyCastKindModel(_439523_d, _439538_t, _439557_token);
	(*((*(_439523_d))))._field_Kind=(*(_439538_t));
}



inline jule::Ptr<_1a4028e63_Data> _1a4054d18_buildVoidData(void) {
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a414eb5a_primVoid, });;
}



inline jule::Str _1a405518c_checkDataForIntegerIndexing(jule::Ptr<_1a4028e63_Data>* _440637_d, jule::Ptr<_1a3db8198_Token>* _440652_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_440637_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a405c57e_Prim((*((*(_440637_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a778801a:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b289a9d5_IsInt(_1a4062d48_Str(_1a405c57e_Prim((*((*(_440637_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a7788081:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a402986a_IsConst((*(_440637_d)).ptr())) {
			_case_begin_1a77880e7:;
			{
				if ((_1b289e313_AsF64((*((*(_440637_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a405c57e_Prim((*((*(_440637_d))))._field_Kind.ptr()) == nullptr) || _1a402986a_IsConst((*(_440637_d)).ptr()) || (_1b2890700_RealKindOf(_1a4062d48_Str(_1a405c57e_Prim((*((*(_440637_d))))._field_Kind).ptr())) != _1b2890700_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1a778815d:;
			{
				_1a4054b09_applyCastKind(_440637_d, &(_1a4150de2_primInt), _440652_token);
			}
		}
		_match_end_1a7787e60:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a4055533_applyCastModelByEnum(jule::Ptr<_1a4028e63_Data>* _443130_d, jule::Ptr<_1a3e29db9_Enum> _443144_e, jule::Ptr<_1a3db8198_Token>* _443159_token) {
	if ((_443144_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _44355_p = _1a405c57e_Prim((*((*(_443144_e))._field_Kind))._field_Kind.ptr());;
	if (_1a4065e8e_IsStr(_44355_p.ptr())) {
		return;;
	};
	_1a4054763_applyCastKindModel(_443130_d, &((*(*(_443144_e))._field_Kind.alloc)._field_Kind), _443159_token);
}



inline void _1a405581e_castConstByType(jule::Str* _444221_t, jule::Ptr<_1a4028e63_Data>* _444234_d) {
	{
		
		if (_1b289a40d_IsSigInt((*(_444221_t)))) {
			_case_begin_1a778de77:;
			{
				{
					auto _match_expr{ _1b28909b9_BitsizeOf(_1b2890700_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a778ea49:;
						{
							_1b289e5bb_SetI64((*((*(_444234_d))))._field_Constant.ptr(), _1b289dce6_AsI64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a778eab0:;
						{
							_1b289e5bb_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b289dce6_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a778eb26:;
						{
							_1b289e5bb_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b289dce6_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a778eb8c:;
						{
							_1b289e5bb_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b289dce6_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1a778e780:;
				};
			}
		}
		else if (_1b289a71b_IsUnsigInt((*(_444221_t)))) {
			_case_begin_1a778e021:;
			{
				{
					auto _match_expr{ _1b28909b9_BitsizeOf(_1b2890700_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a7793b80:;
						{
							_1b289e874_SetU64((*((*(_444234_d))))._field_Constant.ptr(), _1b289e07c_AsU64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a7793be6:;
						{
							_1b289e874_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b289e07c_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a7793c5c:;
						{
							_1b289e874_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b289e07c_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a7793cc3:;
						{
							_1b289e874_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b289e07c_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1a778e51b:;
				};
			}
		}
		else if (_1b289ad26_IsFloat((*(_444221_t)))) {
			_case_begin_1a778e087:;
			{
				{
					auto _match_expr{ _1b28909b9_BitsizeOf(_1b2890700_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a7794147:;
						{
							_1b28a018d_SetF64((*((*(_444234_d))))._field_Constant.ptr(), _1b289e313_AsF64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a7797cc7:;
						{
							_1b28a018d_SetF64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b289e313_AsF64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1a7794224:;
				};
			}
		}
		_match_end_1a778dd34:;
	};
}



inline void _1a4055d3b_updateModelToGenericIns(jule::Any* _447633_m, jule::Ptr<_1a3e172d5_FnIns>* _447652_f) {
	{
		auto &_match_expr{ (*(_447633_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a779815c:;
			{
				(*(_447633_m))=jule::Any((*(_447652_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a7796c82:;
			{
				(*((*(_447633_m)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_447652_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a77981c3:;
			{
				(*((*(_447633_m)).cast_ptr<_1a3e0b582_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_447652_f));
			}
		}
		_match_end_1a779923a:;
	};
}



inline jule::Bool _1a40560a0_pushSubIdentFromExpr(jule::Any _448729_expr, jule::Ptr<_1a3dce027_SubIdentTypeDecl>* _448750_t) {
	{
		auto &_match_expr{ _448729_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a779a923:;
			{
				jule::Ptr<_1a3dd42a2_IdentExpr> _449013_e = _448729_expr.unsafe_cast_ptr<_1a3dd42a2_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>> &__jule_push_dest = (*((*(_448750_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*(_449013_e))._field_Token, ._field_Ident=(*_449013_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a779bc76:;
			{
				jule::Ptr<_1a3dd5a9a_SubIdentExpr> _449613_e = _448729_expr.unsafe_cast_ptr<_1a3dd5a9a_SubIdentExpr>();;
				if ((!(_1a40560a0_pushSubIdentFromExpr((*((*(_449613_e))._field_Expr))._field_Kind, _448750_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a3dcdc5d_IdentTypeDecl>> &__jule_push_dest = (*((*(_448750_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a3dcdc5d_IdentTypeDecl>(_1a3dcdc5d_IdentTypeDecl{._field_Token=(*_449613_e.alloc)._field_Ident, ._field_Ident=(*((*_449613_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1a779b7e2:;
			{
				return false;;
			}
		}
		_match_end_1a779b25e:;
	};
	return true;;
}



inline jule::Str _1a4056369_constoa(jule::Ptr<_1b289b651_Const>* _451013_c) {
	{
		
		if (_1b28a0622_IsI64((*(_451013_c)).ptr())) {
			_case_begin_1a779be74:;
			{
				return _1b288d2be_FmtInt(_1b289d026_ReadI64((*(_451013_c)).ptr()), 10LL);;
			}
		}
		else if (_1b28a08a8_IsU64((*(_451013_c)).ptr())) {
			_case_begin_1a779ea37:;
			{
				return _1b288ce06_FmtUint(_1b289d2ac_ReadU64((*(_451013_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1a779b858:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a779ddbb:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4056798_evalEnumStatic(jule::Ptr<_1a3e29db9_Enum>* _452124_enm, jule::Ptr<_1a3e2934c_EnumItem>* _452141_item, jule::Ptr<_1a3db8198_Token>* _452163_token) {
	jule::Ptr<_1a4028e63_Data> _45229_d = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>((*(_452124_enm)), 3)}), });;
	if (((*(_452141_item)) != nullptr)) {
		(*(_45229_d))._field_Constant=jule::new_ptr<_1b289b651_Const>((*(*((*((*((*(_452141_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45229_d.alloc)._field_Model=jule::Any((*_45229_d.alloc)._field_Constant, &__jule_any_type19);
		_1a4055533_applyCastModelByEnum(&(_45229_d), (*(_452124_enm)), _452163_token);
	};
	return _45229_d;;
}



inline jule::Ptr<_1a3e07418_StructLitExprModel> _1a4056a62_isLitBased(jule::Any* _453820_m) {
	{
		auto &_match_expr{ (*(_453820_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a77a480b:;
			{
				return (*(_453820_m)).cast_ptr<_1a3e07418_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a77a4872:;
			{
				return (*((*(_453820_m)).cast_ptr<_1a3e07715_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a77a48d8:;
			{
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _454513_ssi = (*(_453820_m)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1a4056a62_isLitBased(&((*((*(_454513_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a77a494e:;
			{
				jule::Ptr<_1a3e07c98_CastingExprModel> _454813_c = (*(_453820_m)).cast_ptr<_1a3e07c98_CastingExprModel>(&__jule_any_type92);;
				return _1a4056a62_isLitBased(&((*((*(_454813_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a77a43bb:;
			{
				return nullptr;;
			}
		}
		_match_end_1a77a2be4:;
	};
}



inline void _1a4056d4d_makeImplicitDeref(jule::Ptr<_1a4028e63_Data>* _455527_d, jule::Ptr<_1a3db8198_Token> _455541_baseToken) {
	jule::Ptr<_1a3e06a44_UnaryExprModel> _45569_unary = jule::new_ptr<_1a3e06a44_UnaryExprModel>(_1a3e06a44_UnaryExprModel{._field_Expr=jule::new_ptr<_1a4028e63_Data>((*((*(_455527_d))))), ._field_Op=jule::new_ptr<_1a3db8198_Token>((*(_455541_baseToken)))});;
	(*((*(_45569_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*_45569_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_455527_d))))._field_Model=jule::Any(_45569_unary, &__jule_any_type110);
}



inline void _1a788e275_updateRefer(jule::Ptr<_1a3e1a4a3_ReferenceStack> _456623_ref, jule::Ptr<_1a3e172d5_FnIns>* _456646_old, jule::Ptr<_1a3e172d5_FnIns>* _456659_new) {
	{
		auto expr = &((*_456623_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7890b7d:;
		if (it != expr_end) {
			jule::I64 _45679_i = it - expr->begin();
			jule::Any _456712_sym = *it;
			{
				if ((__jule_any_type7_compare(_456712_sym, (*(_456646_old))))) {
					(*(_456623_ref))._field_buffer[_45679_i]=jule::Any((*(_456659_new)), &__jule_any_type7);
				};
			}
			_iter_next_1a7890b7d:;
			++it;
			_45679_i++;
			goto _iter_begin_1a7890b7d;
		}
		_iter_end_1a7890b7d:;
	};
}



inline void _1a40574d0_makeVariadic(jule::Ptr<_1a4028e63_Data>* _457422_d, jule::Ptr<_1a4059e2d_TypeKind> _457436_elem) {
	(*((*(_457422_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_BindIdent=(*_457436_elem.alloc)._field_BindIdent, ._field_Generic=(*(_457436_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_457436_elem.alloc)._field_Kind});
}



inline jule::Bool _1a4075685_kindUsesGenerics(jule::Ptr<_1a4059e2d_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bce0ba:;
		if (it != expr_end) {
			jule::Ptr<_1a3dda85d_GenericDecl> *_171212_g = it;
			{
				if (static__1a4075256_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1a7bce0ba:;
			++it;
			goto _iter_begin_1a7bce0ba;
		}
		_iter_end_1a7bce0ba:;
	};
	return false;;
}



inline jule::Bool _1a4075a4d_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bd01dc:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1a7bd01dc:;
			++it;
			goto _iter_begin_1a7bd01dc;
		}
		_iter_end_1a7bd01dc:;
	};
	return false;;
}



inline jule::Bool _1a4075d17_canGetPtr(jule::Ptr<_1a4028e63_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1a402986a_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1a7bd1298:;
			{
				return false;;
			}
		}
		else if ((_1a405d86b_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1a405cd32_Enum((*((*(_173019_d))))._field_Kind) != nullptr)) {
			_case_begin_1a7bd1331:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a7bd1232:;
			{
				return true;;
			}
		}
		_match_end_1a7bd06e8:;
	};
}



inline jule::Bool _1a4076158_isValidForSptrType(jule::Ptr<_1a4059e2d_TypeKind>* _174228_t) {
	jule::Ptr<_1a3e0226a_StructIns> _17439_s = _1a405db02_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*_17439_s.alloc)._field_Decl != nullptr)) && (*(*_17439_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a40763de_isValidForRef(jule::Ptr<_1a4059e2d_TypeKind>* _175123_t) {
	return (_1a405d86b_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a40766a8_isBuiltinStrConvertable(jule::Ptr<_1a4059e2d_TypeKind>* _175433_t) {
	return ((((!(_1a405b292_Void((*(_175433_t)).ptr()))) && (_1a405d86b_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1a405e3a5_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1a405e63b_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1a4076972_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bd714a:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1a7bd714a:;
			++it;
			goto _iter_begin_1a7bd714a;
		}
		_iter_end_1a7bd714a:;
	};
	_1c9754d1c_StrBuilder _17679_s = static__1c97550d6_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bd7ee7:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> *_176812_token = it;
			{
				_1c975db28_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_1c975db28_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1a7bd7ee7:;
			++it;
			_17689_i++;
			goto _iter_begin_1a7bd7ee7;
		}
		_iter_end_1a7bd7ee7:;
	};
	return _1c975e420_Str(&_17679_s);;
}



inline jule::Ptr<_1a4062a07_Prim> _1a4076d4b_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1a4062a07_Prim>(_1a4062a07_Prim{._field_Kind=_177718_kind});;
}



inline void _1a4077434_applyImplicitCast(jule::Ptr<_1a4059e2d_TypeKind>* _180527_dest, jule::Ptr<_1a4028e63_Data>* _180549_d, jule::Ptr<_1a3db8198_Token>* _180564_token) {
	if (_1a405b00b_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a4062a07_Prim> _18095_destPrim = _1a405c57e_Prim((*(_180527_dest)).ptr());;
	if (((_18095_destPrim != nullptr) && _1a4066225_IsAny(_18095_destPrim))) {
		jule::Ptr<_1a4062a07_Prim> _18119_prim = _1a405c57e_Prim((*((*(_180549_d))))._field_Kind);;
		if (((_18119_prim == nullptr) || (!(_1a4066225_IsAny(_18119_prim.ptr()))))) {
			_1a4054b09_applyCastKind(_180549_d, _180527_dest, _180564_token);
		};
		return;;
	};
	jule::Ptr<_1a3e276ad_Trait> _18185_dt = _1a405dd88_Trait((*(_180527_dest)).ptr());;
	if ((_18185_dt != nullptr)) {
		jule::Ptr<_1a3e276ad_Trait> _18209_bt = _1a405dd88_Trait((*((*(_180549_d))))._field_Kind);;
		if (((_18209_bt == nullptr) || (_18209_bt != _18185_dt))) {
			_1a4054763_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
			return;;
		};
	};
	if (((_1a405d0b8_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1a405d0b8_TypeEnum((*((*(_180549_d))))._field_Kind) == nullptr))) {
		_1a4054763_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
		return;;
	};
}



inline jule::Bool _1a40776ed_validTypeForXof(jule::Ptr<_1a4059e2d_TypeKind>* _183325_t) {
	return ((!(_1a405b292_Void((*(_183325_t)).ptr()))) && (_1a405d86b_Fn((*(_183325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log _1a407a811_buildSymbols(jule::Ptr<_1a3dcb73e_Ast>* _1622_ast, jule::Trait<_1a3e74b4a_Importer>* _1638_importer, jule::Ptr<_1a3e21476_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log __jule_func_result;
	jule::Ptr<_1a3e21476_symbolBuilder> _179_sb = jule::new_ptr<_1a3e21476_symbolBuilder>(_1a3e21476_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a3e26a75_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log _1a407ac84_analyzePackage(jule::Slice<jule::Ptr<_1a3dcb73e_Ast>>* _3024_files, jule::Trait<_1a3e74b4a_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c9cbe4:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcb73e_Ast> _3317_f = *it;
			{
				jule::Ptr<_1a4023aea_SymbolTable> _3413_table;;
				jule::Slice<_1c980bca3_Log> _3424_errors;;
				({
					__jule_tuple_x_1a4023aea_SymbolTable__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a407a811_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a4023aea_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1a7c9cbe4:;
			++it;
			goto _iter_begin_1a7c9cbe4;
		}
		_iter_end_1a7c9cbe4:;
	};
	jule::Ptr<_1a3e97dd2_Sema> _419_sema = jule::new_ptr<_1a3e97dd2_Sema>(_1a3e97dd2_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1a3e972cc_commonSemaMeta>()});;
	_1a3eb7671_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e7a986_Package> _509_pkg = jule::new_ptr<_1a3e7a986_Package>(_1a3e7a986_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log _1a407b1b3_AnalyzePackage(jule::Slice<jule::Ptr<_1a3dcb73e_Ast>> _7423_files, jule::Trait<_1a3e74b4a_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3e7a986_Package> _789_package;;
	jule::Slice<_1c980bca3_Log> _7822_logs;;
	({
		__jule_tuple_x_1a3e7a986_Package__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a407ac84_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3e172d5_FnIns> _1a414e242_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1a7ca754a:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _2920_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4154ca3_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1a7ca75b1:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _3220_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a41551d2_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1a7ca7627:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _3520_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4155611_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1a7ca769e:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _3820_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4155a40_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1a7ca78d0:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _4120_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a41561a0_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1a7ca7957:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _4420_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a41564be_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1a7ca79ce:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _4720_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4156dd7_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1a7ca7a56:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _5020_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415857b_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1a7ca7b77:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _5320_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4158d2e_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1a7ca7bdd:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _5620_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4159747_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1a7ca7c54:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _5920_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a4159b76_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1a7ca7380:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7ca74a1:;
	};
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a414e550_primTypeAlias(jule::Ptr<_1a4059e2d_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a3ebac4b_Var> _1a4152e05_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1a7caee15:;
			{
				static jule::Ptr<_1a3ebac4b_Var> _9720_v = jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(_1a4062100_TypeSymbol{._field_Kind=_1a414e85d_primNil}), ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Constant=static__1b289c8b6_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1a7caee7b:;
			{
				static jule::Ptr<_1a3ebac4b_Var> _11220_v = jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Constant=static__1b289c124_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1a7caeee2:;
			{
				static jule::Ptr<_1a3ebac4b_Var> _12520_v = jule::new_ptr<_1a3ebac4b_Var>(_1a3ebac4b_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a4153246_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a402a0da_Value>(_1a402a0da_Value{._field_Data=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Constant=static__1b289c124_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1a7ca813e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7caecd3:;
	};
}



inline jule::Ptr<_1a405913b_TypeAlias> _1a4153246_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a7cb4c50:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _14520_t = _1a414e550_primTypeAlias(&(_1a414ee13_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1a7cb4cd8:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _14820_t = _1a414e550_primTypeAlias(&(_1a4150210_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1a7cb4d4e:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _15120_t = _1a414e550_primTypeAlias(&(_1a41504b8_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a7cb4ed6:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _15420_t = _1a414e550_primTypeAlias(&(_1a4150771_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a7cb504c:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _15720_t = _1a414e550_primTypeAlias(&(_1a4150a29_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a7cb50b3:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _16020_t = _1a414e550_primTypeAlias(&(_1a4150de2_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a7cb513a:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _16320_t = _1a414e550_primTypeAlias(&(_1a4151134_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a7cb51b2:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _16620_t = _1a414e550_primTypeAlias(&(_1a41513cb_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a7cb528e:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _16920_t = _1a414e550_primTypeAlias(&(_1a415193c_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a7cb5316:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _17220_t = _1a414e550_primTypeAlias(&(_1a4151e9d_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a7cb538d:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _17520_t = _1a414e550_primTypeAlias(&(_1a4152256_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a7cb5415:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _17820_t = _1a414e550_primTypeAlias(&(_1a4152740_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a7cb548c:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _18120_t = _1a414e550_primTypeAlias(&(_1a4152982_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a7cb5514:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _18420_t = _1a414e550_primTypeAlias(&(_1a4152b91_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a7cb558b:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _18720_t = _1a414e550_primTypeAlias(&(_1a4151be5_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a7cb5613:;
			{
				static jule::Ptr<_1a405913b_TypeAlias> _19020_t = _1a414e550_primTypeAlias(&(_1a4151684_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1a7cb04ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cb061e:;
	};
}



inline jule::Any _1a41534cc_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a3ebac4b_Var> _1989_v = _1a4152e05_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a3e172d5_FnIns> _2029_f = _1a414e242_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a405913b_TypeAlias> _2069_ta = _1a4153246_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1a4153796_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1a7cbec16:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _21620_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415d41b_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1a7cbec9e:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _21920_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415d84a_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a7cbd6c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cbda4a:;
	};
}



inline jule::Any _1a4153a60_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1a7cc1630:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _22920_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415bd21_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1a7cc1971:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _23220_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415c250_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1a7cc1696:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _23520_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415c67e_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a7cbed37:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cc01cd:;
	};
}



inline jule::Any _1a4153e39_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1a7cc3ad8:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _24520_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415a0a5_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1a7cc3de6:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _24820_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415a726_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1a7cc3e5c:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _25120_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415ab55_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1a7cc3b4e:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _25420_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415b084_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1a7cc3bc6:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _25720_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415b4b3_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1a7cc4017:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _26020_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415b8e2_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a7cc1e6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cc1e05:;
	};
}



inline jule::Any _1a415417b_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1a7cc7e83:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _27020_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415caad_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1a7cc82d5:;
			{
				static jule::Ptr<_1a3e172d5_FnIns> _27320_f = jule::new_ptr<_1a3e172d5_FnIns>(_1a3e172d5_FnIns{._field_Decl=jule::new_ptr<_1a3e143d1_Fn>(_1a3e143d1_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a3dda85d_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a4028e63_Data>(jule::Ptr<_1a402ab8a_Eval>*,jule::Ptr<_1a3dd66b1_FnCallExpr>*,jule::Ptr<_1a4028e63_Data>*)>(_1a415cedc_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a7cc40a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cc5898:;
	};
}



inline jule::Any _1a4154500_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1a7cca3c5:;
			{
				return _1a4153e39_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1a7cca13e:;
			{
				return _1a4153796_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1a7cca1a5:;
			{
				return _1a4153a60_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1a7cca44c:;
			{
				return _1a415417b_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1a7cc8eea:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7cca073:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4154874_builtinCallerError(jule::Ptr<_1a402ab8a_Eval>* _30028_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _3089_expr = _1a4048dea_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a402934d_IsNil(_3089_expr.ptr())) {
		_1a402b1da_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a4028e63_Data> _3179_d = _1a4054d18_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1a3e0ed6b_BuiltinErrorCallExprModel>(_1a3e0ed6b_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type23);
	return _3179_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a4154ca3_builtinCallerOut(jule::Ptr<_1a402ab8a_Eval>* _32226_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _32241_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _3319_expr = _1a4048dea_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a40766a8_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1a402b1da_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _3419_d = _1a4054d18_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1a3e0c132_BuiltinOutCallExprModel>(_1a3e0c132_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type27);
	return _3419_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a41551d2_builtinCallerOutln(jule::Ptr<_1a402ab8a_Eval>* _34628_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _34643_fc, jule::Ptr<_1a4028e63_Data>* _34665_d) {
	(*(_34665_d))=_1a4154ca3_builtinCallerOut(_34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>(_1a3e0c50b_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1a3e0c132_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_34665_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4155611_builtinCallerNew(jule::Ptr<_1a402ab8a_Eval>* _35826_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _35841_fc, jule::Ptr<_1a4028e63_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1a402b1da_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _3679_t = _1a40480d6_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1a402b1da_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a4076158_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1a3e0226a_StructIns> _37813_s = _1a405db02_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1a402b1da_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a4066533_Sptr>(_1a4066533_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), 21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a4059e2d_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1a4028e63_Data> _39513_init = _1a4048dea_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1a3db8198_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a3ea78b4_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1a3ea352a_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0c8d5_BuiltinNewCallExprModel>(_1a3e0c8d5_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0c8d5_BuiltinNewCallExprModel>(_1a3e0c8d5_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4155a40_builtinCallerPanic(jule::Ptr<_1a402ab8a_Eval>* _42028_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _42043_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _4299_expr = _1a4048dea_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a405c57e_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1a4065e8e_IsStr(_1a405c57e_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1a402b1da_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a4028e63_Data> _4389_d = _1a4054d18_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1a3e0ccae_BuiltinPanicCallExprModel>(_1a3e0ccae_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type29);
	return _4389_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a41561a0_builtinCallerMake(jule::Ptr<_1a402ab8a_Eval>* _44627_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _44642_fc, jule::Ptr<_1a4028e63_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1a402b1da_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a402b1da_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1a402b1da_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _4599_t = _1a40480d6_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1a402b1da_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a405d5d5_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1a402b1da_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1a4028e63_Data> _4749_lenExpr = _1a4048dea_evalExpr(_1a3ea2b78_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a4034dc5_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a3e0d71b_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1a3e0d71b_BuiltinMakeCallExprModel>(_1a3e0d71b_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a4028e63_Data> _48713_capExpr = _1a4048dea_evalExpr(_1a3ea2b78_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1a4034dc5_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a41564be_builtinCallerAppend(jule::Ptr<_1a402ab8a_Eval>* _49729_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _49744_fc, jule::Ptr<_1a4028e63_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1a402b1da_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a402b1da_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _5079_t = _1a4048dea_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4067006_Slc> _5129_s = _1a405d5d5_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1a402b1da_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4059e2d_TypeKind> _5189_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5189_prefix;
	});;
	;
	;
	(*(_49766_d))=jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a7d18017:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1a402b1da_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a4028e63_Data> _53513_e1 = _1a4048dea_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1a3dd4e1d_VariadicExpr>()))._field_Expr);;
				if ((_53513_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a405c57e_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1a40643ee_IsU8(_1a405c57e_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1a405c57e_Prim((*(_53513_e1))._field_Kind) != nullptr) && _1a4065e8e_IsStr(_1a405c57e_Prim((*(_53513_e1))._field_Kind).ptr()))) {
						_1a40574d0_makeVariadic(&(_53513_e1), _1a4151be5_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>(_1a3e0dae5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type26);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a405c2e8_Variadicable((*(_53513_e1))._field_Kind)))) {
					_1a402b1da_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_53513_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1a40574d0_makeVariadic(&(_53513_e1), (*(_5129_s))._field_Elem);
				if (_1a3ea78b4_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_53513_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1a3ea352a_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_53513_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>(_1a3e0dae5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type26);
				return (*(_49766_d));;
			}
		}
		_match_end_1a7d17e6d:;
	};
	jule::Ptr<_1a4028e63_Data> _5699_e1 = _1a4048dea_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5699_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3e08a24_SliceExprModel> _5749_slice = jule::new_ptr<_1a3e08a24_SliceExprModel>(_1a3e08a24_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7d25167:;
		if (it != expr_end) {
			jule::Ptr<_1a3dd2987_Expr> _57817_arg = *it;
			{
				_5699_e1=_1a4048dea_evalExpr((*(_49729_e)), _57817_arg);
				if ((_5699_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5699_e1))._field_Kind.alloc)._field_Variadic) {
					_1a402b1da_pushErr((*(_49729_e)).ptr(), (*(_57817_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1a3ea78b4_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5699_e1), &((*_57817_arg.alloc)._field_Token))) {
					_1a3ea352a_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5699_e1), (*_57817_arg.alloc)._field_Token);
				};
				(*(_5749_slice))._field_Elems=jule::append((*_5749_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5699_e1))._field_Model}));
			}
			_iter_next_1a7d25167:;
			++it;
			goto _iter_begin_1a7d25167;
		}
		_iter_end_1a7d25167:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dae5_BuiltinAppendCallExprModel>(_1a3e0dae5_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5749_slice, &__jule_any_type76)}), &__jule_any_type26);
	return (*(_49766_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a41569a8_callerCopySlice(jule::Ptr<_1a4028e63_Data>* _60025_dest, jule::Ptr<_1a402ab8a_Eval>* _60043_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _60058_fc, jule::Ptr<_1a4028e63_Data>* _60080_d) {
	if ((!((*((*(_60025_dest))))._field_Mutable))) {
		_1a402b1da_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a4028e63_Data> _6059_src = _1a4048dea_evalExpr((*(_60043_e)), (*((*(_60058_fc))))._field_Args[1LL]);;
	if ((_6059_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4067006_Slc> _6099_slc = _1a405d5d5_Slc((*(_6059_src))._field_Kind.ptr());;
	if ((_6099_slc != nullptr)) {
		if (((!((*(_6059_src))._field_Mutable)) && _1a405b7ae_Mutable((*_6099_slc.alloc)._field_Elem.ptr()))) {
			_1a402b1da_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a405a637_Equal((*((*(_60025_dest))))._field_Kind, (*(_6059_src))._field_Kind)))) {
			_1a402b1da_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1a4062a07_Prim> _6199_destPrim = _1a405c57e_Prim((*(_1a405d5d5_Slc((*((*(_60025_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a4062a07_Prim> _6209_prim = _1a405c57e_Prim((*(_6059_src))._field_Kind);;
		if (((((_6199_destPrim == nullptr) || (_6209_prim == nullptr)) || (!(_1a4065e8e_IsStr(_6209_prim.ptr())))) || (!(_1a40643ee_IsU8(_6199_destPrim.ptr()))))) {
			_1a402b1da_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60080_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_60080_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0e992_BuiltinCopyCallExprModel>(_1a3e0e992_BuiltinCopyCallExprModel{._field_Dest=(*(_60025_dest)), ._field_Src=_6059_src}), &__jule_any_type31);
	return (*(_60080_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4156dd7_builtinCallerCopy(jule::Ptr<_1a402ab8a_Eval>* _63427_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _63442_fc, jule::Ptr<_1a4028e63_Data>* _63464_d) {
	if (((*((*(_63442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63442_fc))))._field_Args.len() == 1LL)) {
			_1a402b1da_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a402b1da_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_63442_fc))))._field_Args.len() > 2LL)) {
		_1a402b1da_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _6479_dest = _1a4048dea_evalExpr((*(_63427_e)), (*((*(_63442_fc))))._field_Args[0LL]);;
	{
		
		if ((_6479_dest == nullptr)) {
			_case_begin_1a7d39b93:;
			{
				return nullptr;;
			}
		}
		else if ((_1a405d5d5_Slc((*(_6479_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d3a831:;
			{
				return _1a41569a8_callerCopySlice(&(_6479_dest), _63427_e, _63442_fc, _63464_d);;
			}
		}
		else {
			_case_begin_1a7d397ec:;
			{
				_1a402b1da_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7d37c7e:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a415725b_callerLenSlice(jule::Ptr<_1a4028e63_Data>* _65924_expr, jule::Ptr<_1a4028e63_Data>* _65942_d) {
	(*((*(_65942_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_65942_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dde2_BuiltinLenCallExprModel>(_1a3e0dde2_BuiltinLenCallExprModel{._field_Expr=(*(_65924_expr))}), &__jule_any_type115);
	return (*(_65942_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a41575d0_callerLenMap(jule::Ptr<_1a4028e63_Data>* _66722_expr, jule::Ptr<_1a4028e63_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dde2_BuiltinLenCallExprModel>(_1a3e0dde2_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	return (*(_66740_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4157954_callerLenArr(jule::Ptr<_1a4028e63_Data>* _67522_expr, jule::Ptr<_1a4028e63_Data>* _67540_d) {
	(*((*(_67540_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_67540_d))))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>((*(_1a405d34e_Arr((*((*(_67522_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_67540_d))))._field_Model=jule::Any((*((*(_67540_d))))._field_Constant, &__jule_any_type19);
	return (*(_67540_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4157cc8_callerLenStr(jule::Ptr<_1a4028e63_Data>* _68222_expr, jule::Ptr<_1a4028e63_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Kind=_1a4022896_lenKind();
	if (_1a402986a_IsConst((*(_68222_expr)).ptr())) {
		(*((*(_68240_d))))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_1b289d7c9_ReadStr((*((*(_68222_expr))))._field_Constant.ptr()).len()));
		(*((*(_68240_d))))._field_Model=jule::Any((*((*(_68240_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0dde2_BuiltinLenCallExprModel>(_1a3e0dde2_BuiltinLenCallExprModel{._field_Expr=(*(_68222_expr))}), &__jule_any_type115);
	};
	return (*(_68240_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a415814c_callerLenComptime(jule::Ptr<_1a4028e63_Data>* _69527_d, jule::I64 _69537_n) {
	(*((*(_69527_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_69527_d))))._field_Constant=static__1b289ba91_NewI64(static_cast<jule::I64>(_69537_n));
	(*((*(_69527_d))))._field_Model=jule::Any((*((*(_69527_d))))._field_Constant, &__jule_any_type19);
	return (*(_69527_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a415857b_builtinCallerLen(jule::Ptr<_1a402ab8a_Eval>* _70226_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _70241_fc, jule::Ptr<_1a4028e63_Data>* _70263_d) {
	if (((*((*(_70241_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_70226_e)).ptr(), (*((*(_70241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70241_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _7109_dest = _1a4048aa9_evalExpr1((*(_70226_e)), (*((*(_70241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7109_dest == nullptr)) {
			_case_begin_1a7d47013:;
			{
				return nullptr;;
			}
		}
		else if ((_1a405d5d5_Slc((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47ba1:;
			{
				return _1a415725b_callerLenSlice(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a405d34e_Arr((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47c17:;
			{
				return _1a4157954_callerLenArr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a405e11e_Map((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47c7d:;
			{
				return _1a41575d0_callerLenMap(&(_7109_dest), _70263_d);;
			}
		}
		else if (((_1a405c57e_Prim((*(_7109_dest))._field_Kind.ptr()) != nullptr) && _1a4065e8e_IsStr(_1a405c57e_Prim((*_7109_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1a7d46bd3:;
			{
				return _1a4157cc8_callerLenStr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1a405e8c2_comptimeStructFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d46c49:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a405e8c2_comptimeStructFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a405edde_comptimeEnumFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d46cb0:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a405edde_comptimeEnumFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a4060bae_comptimeTypeInfos((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d46d26:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a4060bae_comptimeTypeInfos((*_7109_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a406040b_comptimeParams((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47d49:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a406040b_comptimeParams((*_7109_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a40611cb_comptimeStatics((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47db0:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a40611cb_comptimeStatics((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a4061c15_comptimeFiles((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d47e26:;
			{
				return _1a415814c_callerLenComptime(_70263_d, (*(_1a4061c15_comptimeFiles((*_7109_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1a7d46b6c:;
			{
				_1a402b1da_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7d450ee:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4158900_callerCapSlice(jule::Ptr<_1a4028e63_Data>* _74024_expr, jule::Ptr<_1a4028e63_Data>* _74042_d) {
	(*((*(_74042_d))))._field_Kind=_1a4022896_lenKind();
	(*((*(_74042_d))))._field_Model=jule::Any(jule::new_ptr<_1a3e0e1de_BuiltinCapCallExprModel>(_1a3e0e1de_BuiltinCapCallExprModel{._field_Expr=(*(_74024_expr))}), &__jule_any_type116);
	return (*(_74042_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4158d2e_builtinCallerCap(jule::Ptr<_1a402ab8a_Eval>* _74826_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _74841_fc, jule::Ptr<_1a4028e63_Data>* _74863_d) {
	if (((*((*(_74841_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_74826_e)).ptr(), (*((*(_74841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_74841_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _7569_dest = _1a4048dea_evalExpr((*(_74826_e)), (*((*(_74841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7569_dest == nullptr)) {
			_case_begin_1a7d56a6c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7569_dest))._field_Decl) {
			_case_begin_1a7d5770a:;
			{
				_1a402b1da_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a405d5d5_Slc((*(_7569_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d57771:;
			{
				return _1a4158900_callerCapSlice(&(_7569_dest), _74863_d);;
			}
		}
		else {
			_case_begin_1a7d566c6:;
			{
				_1a402b1da_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7d54b58:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4159318_callerDeleteMap(jule::Ptr<_1a402ab8a_Eval>* _77125_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _77140_fc, jule::Ptr<_1a4028e63_Data>* _77162_expr, jule::Ptr<_1a4028e63_Data>* _77180_d) {
	if ((!((*((*(_77162_expr))))._field_Mutable))) {
		_1a402b1da_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77180_d))=_1a4054d18_buildVoidData();
	jule::Ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel> _7769_model = jule::new_ptr<_1a3e0e5b8_BuiltinDeleteCallExprModel>(_1a3e0e5b8_BuiltinDeleteCallExprModel{._field_Dest=(*(_77162_expr)), });;
	if (((*((*(_77140_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a4028e63_Data> _78013_key = _1a4048dea_evalExpr((*(_77125_e)), (*((*(_77140_fc))))._field_Args[1LL]);;
		{
			
			if ((_78013_key == nullptr)) {
				_case_begin_1a7d5d535:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78013_key))._field_Decl) {
				_case_begin_1a7d5d59b:;
				{
					_1a402b1da_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a7d5c116:;
				{
					;
					jule::Ptr<_1a4059e2d_TypeKind> _78917_keyType = (*(_1a405e11e_Map((*((*(_77162_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a3ea352a_checkAssignType((*((*(_77125_e))))._field_s, false, &(_78917_keyType), &(_78013_key), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a7d5c0a0:;
		};
		(*(_7769_model))._field_Key=_78013_key;
	};
	(*((*(_77180_d))))._field_Model=jule::Any(_7769_model, &__jule_any_type32);
	return (*(_77180_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a4159747_builtinCallerDelete(jule::Ptr<_1a402ab8a_Eval>* _80029_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _80044_fc, jule::Ptr<_1a4028e63_Data>* _80066_d) {
	if (((*((*(_80044_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_80029_e)).ptr(), (*((*(_80044_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80044_fc))))._field_Args.len() > 2LL)) {
		_1a402b1da_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _8089_dest = _1a4048dea_evalExpr((*(_80029_e)), (*((*(_80044_fc))))._field_Args[0LL]);;
	{
		
		if ((_8089_dest == nullptr)) {
			_case_begin_1a7d64607:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8089_dest))._field_Decl) {
			_case_begin_1a7d65295:;
			{
				_1a402b1da_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a405e11e_Map((*(_8089_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7d6530b:;
			{
				return _1a4159318_callerDeleteMap(_80029_e, _80044_fc, &(_8089_dest), _80066_d);;
			}
		}
		else {
			_case_begin_1a7d64261:;
			{
				_1a402b1da_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7d626e3:;
	};
}



inline jule::Ptr<_1a4028e63_Data> _1a4159b76_builtinCallerAssert(jule::Ptr<_1a402ab8a_Eval>* _82329_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _82344_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_82344_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82344_fc))))._field_Args.len() > 2LL)) {
		_1a402b1da_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _8329_expr = _1a4048dea_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[0LL]);;
	if ((_8329_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a405c57e_Prim((*(_8329_expr))._field_Kind.ptr()) == nullptr) || (!(_1a4065c08_IsBool(_1a405c57e_Prim((*(_8329_expr))._field_Kind).ptr()))))) {
		_1a402b1da_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3e0d265_BuiltinAssertCallExprModel> _8419_model = jule::new_ptr<_1a3e0d265_BuiltinAssertCallExprModel>(_1a3e0d265_BuiltinAssertCallExprModel{._field_Token=(*((*(_82344_fc))))._field_Token, ._field_Expr=(*(_8329_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a4028e63_Data> _84913_log = _1a4048dea_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[1LL]);;
		if ((_84913_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a402986a_IsConst(_84913_log.ptr()))) || (_1a405c57e_Prim((*(_84913_log))._field_Kind) == nullptr)) || (!(_1a4065e8e_IsStr(_1a405c57e_Prim((*(_84913_log))._field_Kind).ptr()))))) {
			_1a402b1da_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_84913_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8419_model))._field_Log=_1b289d7c9_ReadStr((*(_84913_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a4028e63_Data> _8629_d = _1a4054d18_buildVoidData();;
	(*(_8629_d))._field_Model=jule::Any(_8419_model, &__jule_any_type30);
	return _8629_d;;
}



inline jule::Ptr<_1a4028e63_Data> _1a415a0a5_builtinCallerStdComptimeTypeOf(jule::Ptr<_1a402ab8a_Eval>* _86740_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _86755_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_86755_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*(_86755_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_86755_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _8769_d = _1a40480d6_evalExprKind((*(_86740_e)), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8769_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _8805_f = _1a405d86b_Fn((*(_8769_d))._field_Kind.ptr());;
	if ((_8805_f != nullptr)) {
		if (_1a3e1876a_IsBuiltin(_8805_f)) {
			_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8805_f.alloc)._field_Generics.len() != (*((*_8805_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a3e0226a_StructIns> _8915_s = _1a405db02_Struct((*(_8769_d))._field_Kind);;
	if (((_8915_s != nullptr) && ((*_8915_s.alloc)._field_Generics.len() != (*((*_8915_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a405e63b_comptime((*(_8769_d))._field_Kind)) {
		_1a402b1da_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_8769_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4b902_buildComptimeTypeInfoData(&((*((*(_86740_e))))._field_s), &((*(_8769_d))._field_Kind));;
}



inline jule::Ptr<_1a4028e63_Data> _1a415a726_builtinCallerStdComptimeValueOf(jule::Ptr<_1a402ab8a_Eval>* _90341_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _90356_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_90356_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_90341_e)).ptr(), (*((*(_90356_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90356_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _9119_d = _1a4048dea_evalExpr((*(_90341_e)), (*((*(_90356_fc))))._field_Args[0LL]);;
	if ((_9119_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a4022be8_isGoodValueToInfer(&(_9119_d))))) {
		_1a402b1da_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_9119_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3e4bc43_buildComptimeValue(&(_9119_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a415ab55_builtinCallerStdComptimeLine(jule::Ptr<_1a402ab8a_Eval>* _92338_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _92353_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_92353_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_92338_e)).ptr(), (*((*((*(_92353_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b289b651_Const> _9279_constant = static__1b289ba91_NewI64(static_cast<jule::I64>((*((*((*(_92353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150de2_primInt, ._field_Model=jule::Any(_9279_constant, &__jule_any_type19), ._field_Constant=_9279_constant});;
}



inline jule::Ptr<_1a4028e63_Data> _1a415b084_builtinCallerStdComptimeFile(jule::Ptr<_1a402ab8a_Eval>* _93538_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _93553_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_93553_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_93538_e)).ptr(), (*((*((*(_93553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e494b0_comptimeFile>(_1a3e494b0_comptimeFile{._field_file=(*((*((*(_93538_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a415b4b3_builtinCallerStdComptimeFiles(jule::Ptr<_1a402ab8a_Eval>* _94839_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _94854_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_94854_fc))))._field_Args.len() > 0LL)) {
		_1a402b1da_pushErr((*(_94839_e)).ptr(), (*((*((*(_94854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=jule::new_ptr<_1a4059e2d_TypeKind>(_1a4059e2d_TypeKind{._field_Kind=jule::Trait<_1a4059977_Kind>(jule::new_ptr<_1a3e47db5_comptimeFiles>(_1a3e47db5_comptimeFiles{._field_files=(*((*((*(_94839_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a415b8e2_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1a402ab8a_Eval>* _96143_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _96158_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_96158_fc))))._field_Args.len() > 2LL)) {
		_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 0LL)) {
		_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 1LL)) {
		_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7d8d3cd:;
			{
				goto _match_end_1a7d8db1a;
			}
		}
		else {
			_case_begin_1a7d8db81:;
			{
				_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a402b54d_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a7d8db1a:;
	};
	jule::Ptr<_1a3db8198_Token> _9829_ident = (*((*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a3dd42a2_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7d90e4c:;
			{
				goto _match_end_1a7d9118e;
			}
		}
		else {
			_case_begin_1a7d911e4:;
			{
				_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a7d9118e:;
	};
	jule::Ptr<_1a3e5d57e_scopeChecker> _9919_sc = (*((*(_96143_e))))._field_lookup.cast_ptr<_1a3e5d57e_scopeChecker>(0);;
	jule::Ptr<_1a405913b_TypeAlias> _9929_alias = jule::new_ptr<_1a405913b_TypeAlias>(_1a405913b_TypeAlias{._field_Scope=(*(_9919_sc))._field_tree, ._field_Public=_1a3e94e9a_IsPub((*(_9829_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9829_ident, ._field_Ident=(*_9829_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a4062100_TypeSymbol>(), });;
	jule::Ptr<_1a4028e63_Data> _10029_t = _1a4048427_eval1((*(_96143_e)), (*((*(_96158_fc))))._field_Args[1LL]);;
	if ((_10029_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10029_t))._field_Decl) {
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_10029_t))._field_Kind;
	} else {
		jule::Ptr<_1a3e3e054_comptimeTypeInfo> _100913_cti = _1a4060e45_comptimeTypeInfo((*(_10029_t))._field_Kind.ptr());;
		if ((_100913_cti == nullptr)) {
			_1a402b1da_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a402b54d_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_100913_cti))._field_base;
	};
	_1a3e62d36_checkTypeAlias(_9919_sc, &(_9929_alias));
	return _1a4054d18_buildVoidData();;
}



inline jule::Ptr<_1a4028e63_Data> _1a415bd21_builtinCallerStdMemSizeOf(jule::Ptr<_1a402ab8a_Eval>* _102135_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _102150_fc, jule::Ptr<_1a4028e63_Data>* ) {
	jule::Ptr<_1a4028e63_Data> _10229_result = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150a29_primUint, });;
	if (((*((*(_102150_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_102135_e)).ptr(), (*((*(_102150_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10229_result;;
	};
	if (((*((*(_102150_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _10349_d = _1a40480d6_evalExprKind((*(_102135_e)), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10349_d == nullptr)) {
		return _10229_result;;
	};
	if ((!(_1a40776ed_validTypeForXof(&((*(_10349_d))._field_Kind))))) {
		_1a402b1da_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_10349_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10229_result))._field_Model=jule::Any(jule::new_ptr<_1a3e10520_SizeofExprModel>(_1a3e10520_SizeofExprModel{._field_Expr=(*(_10349_d))._field_Model}), &__jule_any_type117);
	return _10229_result;;
}



inline jule::Ptr<_1a4028e63_Data> _1a415c250_builtinCallerStdMemAlignOf(jule::Ptr<_1a402ab8a_Eval>* _104636_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _104651_fc, jule::Ptr<_1a4028e63_Data>* ) {
	jule::Ptr<_1a4028e63_Data> _10479_result = jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150a29_primUint, });;
	if (((*((*(_104651_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_104636_e)).ptr(), (*((*(_104651_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10479_result;;
	};
	if (((*((*(_104651_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _10599_d = _1a40480d6_evalExprKind((*(_104636_e)), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10599_d == nullptr)) {
		return _10479_result;;
	};
	if ((!(_1a40776ed_validTypeForXof(&((*(_10599_d))._field_Kind))))) {
		_1a402b1da_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a405a2e6_Str((*(_10599_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10479_result))._field_Model=jule::Any(jule::new_ptr<_1a3e1070c_AlignofExprModel>(_1a3e1070c_AlignofExprModel{._field_Expr=(*(_10599_d))._field_Model}), &__jule_any_type118);
	return _10479_result;;
}



inline jule::Ptr<_1a4028e63_Data> _1a415c67e_builtinCallerStdMemFree(jule::Ptr<_1a402ab8a_Eval>* _107133_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _107148_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_107148_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_107133_e)).ptr(), (*((*(_107148_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107148_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _10809_d = _1a4048dea_evalExpr((*(_107133_e)), (*((*(_107148_fc))))._field_Args[0LL]);;
	if ((_10809_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a405c062_PerformsRC((*(_10809_d))._field_Kind.ptr())))) {
		_1a402b1da_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a4028e63_Data> _10899_result = _1a4054d18_buildVoidData();;
	(*(_10899_result))._field_Model=jule::Any(jule::new_ptr<_1a3e11477_FreeExprModel>(_1a3e11477_FreeExprModel{._field_Expr=(*(_10809_d))._field_Model}), &__jule_any_type33);
	return _10899_result;;
}



inline jule::Ptr<_1a4028e63_Data> _1a415caad_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a402ab8a_Eval>* _109445_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _109460_fc, jule::Ptr<_1a4028e63_Data>* ) {
	if (((*((*(_109460_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_109445_e)).ptr(), (*((*(_109460_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109460_fc))))._field_Args.len() > 1LL)) {
		_1a402b1da_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a4028e63_Data> _11039_d = _1a4048dea_evalExpr((*(_109445_e)), (*((*(_109460_fc))))._field_Args[0LL]);;
	if ((_11039_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a40766a8_isBuiltinStrConvertable(&((*(_11039_d))._field_Kind))))) {
		_1a402b1da_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a4028e63_Data>(_1a4028e63_Data{._field_Kind=_1a4150210_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a3e10ca1_IntegratedToStrExprModel>(_1a3e10ca1_IntegratedToStrExprModel{._field_Expr=(*(_11039_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1a4028e63_Data> _1a415cedc_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a402ab8a_Eval>* _112144_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _112159_fc, jule::Ptr<_1a4028e63_Data>* _112181_d) {
	if ((!(_1a402bbd0_isUnsafe((*(_112144_e)).ptr())))) {
		_1a402b1da_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112159_fc))))._field_Args.len() < 1LL)) {
		_1a402b1da_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _11319_argd = _1a4048dea_evalExpr((*(_112144_e)), (*((*(_112159_fc))))._field_Args[0LL]);;
	if ((_11319_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a405c57e_Prim((*(_11319_argd))._field_Kind.ptr()) == nullptr) || (!(_1a4065e8e_IsStr(_1a405c57e_Prim((*(_11319_argd))._field_Kind).ptr()))))) {
		_1a402b1da_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a405a2e6_Str((*(_11319_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1a402986a_IsConst(_11319_argd.ptr()))) || (!(_1b28a0dc5_IsStr((*(_11319_argd))._field_Constant.ptr()))))) {
		_1a402b1da_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4028e63_Data> _11469_r = _1a4054d18_buildVoidData();;
	jule::Ptr<_1a3e172d5_FnIns> _11489_f = _1a405d86b_Fn((*((*(_112181_d))))._field_Kind);;
	if (((*(_11489_f))._field_Generics.len() > 0LL)) {
		(*(_11469_r))._field_Kind=(*((*_11489_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a3e1117a_BackendEmitExprModel> _11539_model = jule::new_ptr<_1a3e1117a_BackendEmitExprModel>(_1a3e1117a_BackendEmitExprModel{._field_Code=_1b289d7c9_ReadStr((*(_11319_argd))._field_Constant), });;
	if (((*((*(_112159_fc))))._field_Args.len() > 1LL)) {
		(*(_11539_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112159_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112159_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a7dbaa7b:;
			if (it != expr_end) {
				jule::Ptr<_1a3dd2987_Expr> _115921_arg = *it;
				{
					_11319_argd=_1a4048427_eval1((*(_112144_e)), _115921_arg);
					if ((_11319_argd == nullptr)) {
						return nullptr;;
					};
					(*_11539_model.alloc)._field_Exprs=jule::append((*_11539_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11319_argd))._field_Model}));
				}
				_iter_next_1a7dbaa7b:;
				++it;
				goto _iter_begin_1a7dbaa7b;
			}
			_iter_end_1a7dbaa7b:;
		};
	};
	(*_11469_r.alloc)._field_Model=jule::Any(_11539_model, &__jule_any_type25);
	return _11469_r;;
}



inline jule::Ptr<_1a4028e63_Data> _1a415d41b_builtinCallerStdDebugOut(jule::Ptr<_1a402ab8a_Eval>* _117234_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _117249_fc, jule::Ptr<_1a4028e63_Data>* _117271_d) {
	(*(_117271_d))=_1a4154ca3_builtinCallerOut(_117234_e, _117249_fc, _117271_d);
	if (((*(_117271_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117271_d))))._field_Model.cast_ptr<_1a3e0c132_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_117271_d));;
}



inline jule::Ptr<_1a4028e63_Data> _1a415d84a_builtinCallerStdDebugOutln(jule::Ptr<_1a402ab8a_Eval>* _118136_e, jule::Ptr<_1a3dd66b1_FnCallExpr>* _118151_fc, jule::Ptr<_1a4028e63_Data>* _118173_d) {
	(*(_118173_d))=_1a41551d2_builtinCallerOutln(_118136_e, _118151_fc, _118173_d);
	if (((*(_118173_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118173_d))))._field_Model.cast_ptr<_1a3e0c50b_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_118173_d));;
}



inline jule::Ptr<_1a49d5e19_FileInfo> _1a4a298b9_ParseFile(jule::Ptr<_1a3dbd92e_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a49d5e19_FileInfo> _279_finf = jule::new_ptr<_1a49d5e19_FileInfo>();;
	({
		__jule_tuple_x_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log __jule_assign_result = _1a4a29e5d_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log _1a4a29e5d_parseFileset(jule::Ptr<_1a3dbd92e_File> _5521_f) {
	__jule_tuple_x_1a3dcb73e_Ast__jule_tuple_s_1c980bca3_Log __jule_func_result;
	jule::Ptr<_1a4a4a7ca_parser> _569_p = jule::new_ptr<_1a4a4a7ca_parser>();;
	_1a4a5b6dc_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3ddd674_ScopeTree> _1a4a2a8ed_newScope(void) {
	return jule::new_ptr<_1a3ddd674_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a4a2ac83_isSt(jule::Ptr<_1a3db8198_Token> _499_current, jule::Ptr<_1a3db8198_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a4a2b107_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a3db8198_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1a3db8be3_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a4a2b4c0_nextStPos(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1a3db8198_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a7e91bc9:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1a4a2b107_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4a2ac83_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1a7e97b47;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1a7e907ee;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a7e91e71:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4a2ac83_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1a7e97b47;
							};
						};
						goto _iter_next_1a7e907ee;
					}
				}
				_match_end_1a7e91206:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1a7e907ee;
			};
			if ((_709_i > _6833_start)) {
				if (_1a4a2b107_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1a7e907ee;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4a2ac83_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4a2ac83_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1a7e907ee;
			};
			_julec_label_1a7e97b47:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a7e907ee:;
	}
	_iter_end_1a7e907ee:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_bool _1a4a2b844_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a3db8198_Token>> _13028_tokens) {
	__jule_tuple_sx_1a3db8198_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a4a2b4c0_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a3db8198_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1a3db8198_Token__jule_tuple_bool __jule_assign_result = _1a4a2b844_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _1a4a2c02b_splitStmts(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1a4a2bb74_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a3db8198_Token>> _15613_stmt;;
			jule::Bool _15619_terminated;;
			({
				__jule_tuple_sx_1a3db8198_Token__jule_tuple_bool __jule_assign_result = _1a4a2b844_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a4a2bb74_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1a4a2bb74_stmt>(_1a4a2bb74_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1a7e9bb07:;
	}
	_iter_end_1a7e9bb07:;;
	return _1539_stmts;;
}



inline jule::Bool _1a4a45682_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a4a45990_isTypeRange(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e23243:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a3db8198_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7e24b5c:;
						if (it != expr_end) {
							jule::Ptr<_1a3db8198_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1a7e253cc:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1a7e24b5c;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1a7e257a6:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1a7e24b5c;
										}
									}
									_match_end_1a7e256c9:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1a4a45682_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1a7e24b5c:;
							++it;
							goto _iter_begin_1a7e24b5c;
						}
						_iter_end_1a7e24b5c:;
					};
					return true;;
				};
				if ((!(_1a4a45682_isTypeOp(&((*_89412_token.alloc)._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1a7e23243:;
			++it;
			_8949_i++;
			goto _iter_begin_1a7e23243;
		}
		_iter_end_1a7e23243:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a45c59_getBlockExpr(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e27621:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1a7e284ac:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a7e28534:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1a7e28413;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a7e2859a:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a7e28611:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1a7e28413:;
				};
			}
			_iter_next_1a7e27621:;
			++it;
			_9289_i++;
			goto _iter_begin_1a7e27621;
		}
		_iter_end_1a7e27621:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token _1a4a46122_splitDelim(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e2b845:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a7e2c8bd:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1a7e2b845;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a7e2c934:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1a7e2c99a:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1a3db8198_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1a3db8198_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1a7e2c813:;
				};
			}
			_iter_next_1a7e2b845:;
			++it;
			_9599_i++;
			goto _iter_begin_1a7e2b845;
		}
		_iter_end_1a7e2b845:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a4a463db_findLowestPrecOp(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e30eba:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a7e31c79:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1a7e31d01;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a7e31d01:;
						{
							(_9919_braceN)++;
							goto _iter_next_1a7e30eba;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a7e31d67:;
						{
							(_9919_braceN)--;
							goto _iter_next_1a7e30eba;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1a7e31dcd:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1a7e30eba;
						}
					}
					_match_end_1a7e31bbe:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1a7e335e9:;
						{
							goto _iter_next_1a7e30eba;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1a7e33660:;
						{
							goto _iter_next_1a7e30eba;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1a7e336c6:;
						{
							goto _iter_next_1a7e30eba;
						}
					}
					else if ((!(_1a3db8be3_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1a7e3373c:;
						{
							goto _iter_next_1a7e30eba;
						}
					}
					_match_end_1a7e33484:;
				};
				jule::Ptr<_1a3db8198_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1a3db88d5_IsUnaryOp((*(_10229_left))._field_Id) || ((*_10229_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a7e30eba;
				};
				if (((_9939_i > 1LL) && ((*_10229_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a3db8198_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_99312_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1a7e30eba;
						};
					};
				};
				jule::U8 _10399_p = _1a3db851c_Prec((*(_99312_token)));;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1a7e30eba:;
			++it;
			_9939_i++;
			goto _iter_begin_1a7e30eba;
		}
		_iter_end_1a7e30eba:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1a3dd42a2_IdentExpr> _1a4a466a5_buildIdentExpr(jule::Ptr<_1a3db8198_Token>* _104824_token) {
	return jule::new_ptr<_1a3dd42a2_IdentExpr>(_1a3dd42a2_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_int _1a4a4696e_getRangeExprTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _105628_tokens) {
	__jule_tuple_sx_1a3db8198_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1a3db8198_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a7e3a5e0:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a7e3a942:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1a7e3a8cb:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a7e39be9:;
	}
	_iter_end_1a7e39be9:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a4a47783_checkAssignTokens(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a3dbc961_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a813b181:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a813b879:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a813bc20:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1a813bb54:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1a813cdb9:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1a813ce30:;
						{
							goto _iter_next_1a813b181;
						}
					}
					else if (_1a3dbcee4_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1a813ce96:;
						{
							return true;;
						}
					}
					_match_end_1a813cd64:;
				};
			}
			_iter_next_1a813b181:;
			++it;
			goto _iter_begin_1a813b181;
		}
		_iter_end_1a813b181:;
	};
	return false;;
}



inline _1c980bca3_Log _1a4a4894e_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a3dbd92e_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1c980c215_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1a3db8198_Token>> _1a4a48e7c_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a3db8198_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3db8198_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1a3db8198_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1a8142e57:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1a8143298:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1a8143243:;
			};
		}
	_iter_next_1a8140a59:;
	}
	_iter_end_1a8140a59:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token _1a4a49246_rangeLast(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _9919_tokens) {
	__jule_tuple_sx_1a3db8198_Token__jule_tuple_sx_1a3db8198_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1a3db8198_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a81471d1:;
					{
						(_1099_braceN)++;
						goto _iter_next_1a8146510;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a8147533:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1a81474bc:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a8146510:;
	}
	_iter_end_1a8146510:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log _1a4a496ec_parts(jule::Slice<jule::Ptr<_1a3db8198_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1a3db8198_Token__jule_tuple_s_1c980bca3_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1419_rangeN = 0LL;;
	jule::I64 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8149579:;
		if (it != expr_end) {
			jule::I64 _1439_i = it - expr->begin();
			jule::Ptr<_1a3db8198_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a814b3a0:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a814b416:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1a814b47c:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1a8149579;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_1c980bca3_Log _15417_err = _1a4a4894e_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1c980bca3_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1a814b2e5:;
				};
			}
			_iter_next_1a8149579:;
			++it;
			_1439_i++;
			goto _iter_begin_1a8149579;
		}
		_iter_end_1a8149579:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a3db8198_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a4a49983_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1a814e903:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a814e969:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a814e9d0:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1a814aca6:;
			{
				return _16720_left;;
			}
		}
		_match_end_1a814ad94:;
	};
}



inline _1c980bca3_Log _1a4a49db2_compilerErr(jule::Ptr<_1a3db8198_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1c980c215_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1a3dbe941_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1a4a4a258_pushSuggestion(_1c980bca3_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1c980c215_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a3dcd653_TypeDecl> _1a4a5c1e3_buildVoidType(void) {
	return jule::new_ptr<_1a3dcd653_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a41ca477_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1a83663ab:;
			{
				__jule_func_result.__jule_result_arg0=_1c980ee2c_IsWindows(_1c908b6dc_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1a8366422:;
			{
				__jule_func_result.__jule_result_arg0=_1c981023a_IsDarwin(_1c908b6dc_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1a8366103:;
			{
				__jule_func_result.__jule_result_arg0=_1c9810504_IsLinux(_1c908b6dc_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1a8366169:;
			{
				__jule_func_result.__jule_result_arg0=_1c981115e_IsUnix(_1c908b6dc_Os);
			}
		}
		else {
			_case_begin_1a8365b08:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a8365c3a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a425b7b1_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1a8368600:;
			{
				__jule_func_result.__jule_result_arg0=_1c9810845_IsI386(_1c908b995_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1a83682d1:;
			{
				__jule_func_result.__jule_result_arg0=_1c9810acb_IsAmd64(_1c908b995_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1a8368347:;
			{
				__jule_func_result.__jule_result_arg0=_1c9810d95_IsArm64(_1c908b995_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1a83683ad:;
			{
				__jule_func_result.__jule_result_arg0=_1c981177a_Is64Bit(_1c908b995_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1a8368424:;
			{
				__jule_func_result.__jule_result_arg0=_1c9811538_Is32Bit(_1c908b995_Arch);
			}
		}
		else {
			_case_begin_1a8367cd6:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a8367e18:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a425ba69_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1c97629d9_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1c9762456_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1c9743bb8_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;;
		jule::Bool _6721_exist;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a41ca477_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a425b7b1_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_1c9743bb8_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;;
		jule::Bool _8821_exist;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a41ca477_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a425b7b1_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;;
	jule::Bool _9617_exist;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a425b7b1_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a41ca477_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a41ca477_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1a4277436_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1c908b6dc_Os); };
	if (_1c981115e_IsUnix(_1c908b6dc_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a42776ab_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1c908b995_Arch); };
	if (_1c981177a_Is64Bit(_1c908b995_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1c9811538_Is32Bit(_1c908b995_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a4277997_initVars(jule::Slice<jule::Str>* _5518_vars, _1a4277117_CompileInfo* _5532_info) {
	_1a4277436_setOsVars(_5518_vars);
	_1a42776ab_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1a74bac81:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1a74ba6cb:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1a74ba654:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1a74ba764:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1a74bb457:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1a74bb4bd:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1a74bbb61:;
	};
}



inline jule::Slice<jule::U8> _1a4a612e6_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__20c07b5ab_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1c908a532_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1c980bca3_Log _1a4a61604_flatCompilerErr(jule::Str _4120_text) {
	return _1c980bca3_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a4a65e22_pushPasses(jule::Ptr<_1a3e7a986_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74ec5ba:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _11217_f = *it;
			{
				_julec_label_1a74ec312:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a74ed137:;
					if (it != expr_end) {
						_1a3e1b9c1_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1a74ed137;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a74edbe8:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1a74ed137;
										};
									}
									_iter_next_1a74edbe8:;
									++it;
									goto _iter_begin_1a74edbe8;
								}
								_iter_end_1a74edbe8:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1a74ed137:;
						++it;
						goto _iter_begin_1a74ed137;
					}
					_iter_end_1a74ed137:;
				};
			}
			_iter_next_1a74ec5ba:;
			++it;
			goto _iter_begin_1a74ec5ba;
		}
		_iter_end_1a74ec5ba:;
	};
}



inline jule::Slice<jule::Str> _1a4a662da_getAllUniquePasses(jule::Ptr<_1a3e7a986_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a3e77a60_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a4a65e22_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75002d2:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1a4a65e22_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1a75002d2:;
			++it;
			goto _iter_begin_1a75002d2;
		}
		_iter_end_1a75002d2:;
	};
	return _12913_passes;;
}



inline _1a4277117_CompileInfo _1a4a664e9_buildCompileInfo(void) {
	_1a4277117_CompileInfo _1429_info = _1a4277117_CompileInfo{._field_Prod=_20ad69059_Production, ._field_Test=_20ad68696_Test, };;
	{
		auto &_match_expr{ _20ad67ac4_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1a7501855:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1a75016e0:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1a7501800:;
	};
	{
		auto &_match_expr{ _20ad67ee2_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1a75018bb:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1a7501bda:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1a7501c51:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1a750259d:;
	};
	return _1429_info;;
}



inline void _1a39c1b2b_EliminateDefines(jule::Ptr<_1a4a6456e_IR>* _30526_ir) {
	jule::Ptr<_1a39bdc16_ObjectDeadCode> _3069_ocd = static__1a39be1ab_new(_30526_ir);;
	_1a39c17eb_elimanate(_3069_ocd);
}



inline jule::Ptr<_1a3dcca70_Directive> _1a39c1ee4_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _31123_directives, jule::Str _31154_tag) {
	{
		auto expr = _31123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a753e013:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _31217_dr = *it;
			{
				if (((*((*(_31217_dr))._field_Tag))._field_Kind == _31154_tag)) {
					return _31217_dr;;
				};
			}
			_iter_next_1a753e013:;
			++it;
			goto _iter_begin_1a753e013;
		}
		_iter_end_1a753e013:;
	};
	return nullptr;;
}



inline jule::Bool _1a39c2368_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _32118_directives, jule::Str _32149_tag) {
	return (_1a39c1ee4_findDirective(&((*(_32118_directives))), _32149_tag) != nullptr);;
}



inline jule::Bool _1a39c2731_isTraitMethod(jule::Ptr<_1a3e0226a_StructIns>* _32623_owner, jule::Ptr<_1a3e172d5_FnIns>* _32643_f) {
	{
		auto expr = &((*((*((*(_32623_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75408d8:;
		if (it != expr_end) {
			jule::Ptr<_1a3e276ad_Trait> _32717_t = *it;
			{
				if ((_1a3e2835c_FindMethod(_32717_t.ptr(), (*((*((*(_32643_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1a75408d8:;
			++it;
			goto _iter_begin_1a75408d8;
		}
		_iter_end_1a75408d8:;
	};
	return false;;
}



inline void _1a39c6735_eliminateDeadCodeOfScope(jule::Ptr<_1a3e5627a_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1a3e58b1d_Label>> _2425_labels = jule::Slice<jule::Ptr<_1a3e58b1d_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a3e58ee7_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1a3e58ee7_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a39c3501_scopeDeadCode> _2449_sdc = jule::new_ptr<_1a39c3501_scopeDeadCode>(_1a39c3501_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a3e58b1d_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a3e58ee7_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1a39c6405_optimizeStmts(_2449_sdc);
	};
}



inline void _1a39c69aa_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a3e143d1_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a839807a:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a839a621:;
					if (it != expr_end) {
						jule::Ptr<_1a3e172d5_FnIns> _25621_ins = *it;
						{
							_1a39c6735_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1a839a621:;
						++it;
						goto _iter_begin_1a839a621;
					}
					_iter_end_1a839a621:;
				};
			}
			_iter_next_1a839807a:;
			++it;
			goto _iter_begin_1a839807a;
		}
		_iter_end_1a839807a:;
	};
}



inline void _1a39c6bdb_eliminateFunctionsScopePackage(jule::Ptr<_1a3e7a986_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a839b0a0:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _26317_f = *it;
			{
				_1a39c69aa_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1a839b0a0:;
			++it;
			goto _iter_begin_1a839b0a0;
		}
		_iter_end_1a839b0a0:;
	};
}



inline void _1a39c6e94_eliminateScopePackage(jule::Ptr<_1a3e7a986_Package>* _26831_pkg) {
	_1a39c6bdb_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a39c7192_EliminateScopes(jule::Ptr<_1a4a6456e_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1a3e77a60_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1a39c6e94_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1a839c238:;
	}
	_iter_end_1a839c238:;;
	_1a39c6e94_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1a415db8b_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1a415e021_equalConst(jule::Ptr<_1b289b651_Const> _2115_l, jule::Ptr<_1b289b651_Const> _2126_r) {
	{
		
		if (_1b28a0622_IsI64(_2115_l.ptr())) {
			_case_begin_1a8443c80:;
			{
				return (_1b28a0622_IsI64(_2126_r.ptr()) && (_1b289d026_ReadI64(_2115_l) == _1b289d026_ReadI64(_2126_r)));;
			}
		}
		else if (_1b28a08a8_IsU64(_2115_l.ptr())) {
			_case_begin_1a8443ce6:;
			{
				return (_1b28a08a8_IsU64(_2126_r.ptr()) && (_1b289d2ac_ReadU64(_2115_l) == _1b289d2ac_ReadU64(_2126_r)));;
			}
		}
		else if (_1b28a115b_IsF64(_2115_l.ptr())) {
			_case_begin_1a8443d6d:;
			{
				return (_1b28a115b_IsF64(_2126_r.ptr()) && (_1b289da60_ReadF64(_2115_l) == _1b289da60_ReadF64(_2126_r)));;
			}
		}
		else if (_1b28a0dc5_IsStr(_2115_l.ptr())) {
			_case_begin_1a8443de5:;
			{
				return (_1b28a0dc5_IsStr(_2126_r.ptr()) && (_1b289d7c9_ReadStr(_2115_l) == _1b289d7c9_ReadStr(_2126_r)));;
			}
		}
		else if (_1b28a0b3e_IsBool(_2115_l.ptr())) {
			_case_begin_1a84440d2:;
			{
				return (_1b28a0b3e_IsBool(_2126_r.ptr()) && (_1b289d543_ReadBool(_2115_l) == _1b289d543_ReadBool(_2126_r)));;
			}
		}
		else if (_1b28a13e2_IsNil(_2115_l.ptr())) {
			_case_begin_1a8444148:;
			{
				return _1b28a13e2_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1a8443b92:;
			{
				return false;;
			}
		}
		_match_end_1a8443961:;
	};
}



inline jule::Bool _1a415e395_equalCasting(jule::Ptr<_1a3e07c98_CastingExprModel> _4017_l, jule::Ptr<_1a3e07c98_CastingExprModel> _4039_r) {
	if ((!(_1a405a637_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1a41602ca_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a415e75d_equalUnary(jule::Ptr<_1a3e06a44_UnaryExprModel> _4715_l, jule::Ptr<_1a3e06a44_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a41602ca_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a415ead2_equalIndexing(jule::Ptr<_1a3e08eca_IndexingExprModel> _5418_l, jule::Ptr<_1a3e08eca_IndexingExprModel> _5441_r) {
	return (_1a41602ca_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1a41602ca_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a415ee56_equalBinary(jule::Ptr<_1a3e0666a_BinaryExprModel> _5916_l, jule::Ptr<_1a3e0666a_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a41602ca_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1a41602ca_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a41602ca_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1a415db8b_typeData(&(_7016_l)) != _1a415db8b_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a84533aa:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a3ebac4b_Var>() == _7030_r.cast_ptr<_1a3ebac4b_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8453421:;
			{
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>();;
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1a41602ca_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8453487:;
			{
				return _1a415e021_equalConst(_7016_l.unsafe_cast_ptr<_1b289b651_Const>(), _7030_r.cast_ptr<_1b289b651_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a8452ee2:;
			{
				return _1a415e395_equalCasting(_7016_l.unsafe_cast_ptr<_1a3e07c98_CastingExprModel>(), _7030_r.cast_ptr<_1a3e07c98_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a8453058:;
			{
				return _1a415e75d_equalUnary(_7016_l.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>(), _7030_r.cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a84530be:;
			{
				return _1a415ead2_equalIndexing(_7016_l.unsafe_cast_ptr<_1a3e08eca_IndexingExprModel>(), _7030_r.cast_ptr<_1a3e08eca_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a8453135:;
			{
				return _1a415ee56_equalBinary(_7016_l.unsafe_cast_ptr<_1a3e0666a_BinaryExprModel>(), _7030_r.cast_ptr<_1a3e0666a_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1a8452970:;
			{
				return false;;
			}
		}
		_match_end_1a8452e26:;
	};
}



inline void _1a4165d4c_possibleNilRemove(jule::Ptr<_1a4164d6d_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1a4165621_removeVar((*(_7827_n)).ptr(), _1a4166820_getNilVar(_7837_m));
	};
}



inline jule::Bool _1a4166215_isGuaranteedNonNilExpr(jule::Ptr<_1a4164d6d_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a8459306:;
			{
				return true;;
			}
		}
		_match_end_1a84592a1:;
	};
	return (((*(_8432_n)) != nullptr) && _1a4165962_isSafe((*(_8432_n)).ptr(), _1a4166820_getNilVar(_8442_m)));;
}



inline jule::Bool _1a41664ce_isNilValidType(jule::Ptr<_1a4059e2d_TypeKind> _9223_t) {
	return (_1a405c815_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a4166820_getNilVar(jule::Any _9414_m) {
	if ((!(_1a4182792_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a845a8bd:;
			{
				jule::Ptr<_1a3ebac4b_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1a3ebac4b_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a3ebac4b_Var>());;
				};
				return _1a4166820_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a845a7d0:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1a845a868:;
	};
	return 0LLU;;
}



inline jule::Bool _1a416c75a_isStdPackage(jule::Str* _67518_f, jule::Str _67526_p) {
	return _1c9740a83_HasPrefix((*(_67518_f)), _1c97621c0_Join(jule::Slice<jule::Str>::make({_1c908aa82_PathStdlib,_67526_p})));;
}



inline jule::Bool _1a416ca68_isConstantValidConditionalCase(jule::Ptr<_1a3e56698_If>* _67936_i) {
	{
		auto &_match_expr{ (*((*(_67936_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8463cd3:;
			{
				jule::Ptr<_1b289b651_Const> _6829_c = (*((*(_67936_i))))._field_Expr.unsafe_cast_ptr<_1b289b651_Const>();;
				return (_1b28a0b3e_IsBool(_6829_c.ptr()) && _1b289d543_ReadBool(_6829_c));;
			}
		}
		_match_end_1a8463c6c:;
	};
	return false;;
}



inline jule::Bool _1a416cd32_isUnreachableExpr(jule::Any* _68823_expr) {
	{
		auto &_match_expr{ (*(_68823_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8464256:;
			{
				jule::Ptr<_1b289b651_Const> _6919_c = (*(_68823_expr)).cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
				return (_1b28a0b3e_IsBool(_6919_c.ptr()) && (!(_1b289d543_ReadBool(_6919_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a8464168:;
			{
				jule::Ptr<_1a3e0666a_BinaryExprModel> _6949_m = (*(_68823_expr)).cast_ptr<_1a3e0666a_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6949_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a416cd32_isUnreachableExpr(&((*((*_6949_m.alloc)._field_Left))._field_Model)) || _1a416cd32_isUnreachableExpr(&((*((*_6949_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1a84641e0:;
	};
	return false;;
}



inline jule::Bool _1a416d173_isConstantValidMatchCase(jule::Ptr<_1a3e5add9_Case>* _70330_case) {
	{
		auto expr = &((*((*(_70330_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84684e1:;
		if (it != expr_end) {
			jule::Ptr<_1a4028e63_Data> *_70412_expr = it;
			{
				if (((_1a402986a_IsConst((*(_70412_expr)).ptr()) && _1b28a0b3e_IsBool((*(*(_70412_expr)).alloc)._field_Constant.ptr())) && _1b289d543_ReadBool((*(*(_70412_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1a84684e1:;
			++it;
			goto _iter_begin_1a84684e1;
		}
		_iter_end_1a84684e1:;
	};
	return false;;
}



inline jule::Bool _1a416d409_isUnreachableConditionalCase(jule::Ptr<_1a3e56698_If>* _71234_i) {
	return _1a416cd32_isUnreachableExpr(&((*((*(_71234_i))))._field_Expr));;
}



inline jule::Bool _1a416d6c3_isUnreachableMatchCase(jule::Ptr<_1a3e5add9_Case>* _71628_case) {
	{
		auto expr = &((*((*(_71628_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a846a49e:;
		if (it != expr_end) {
			jule::Ptr<_1a4028e63_Data> *_71712_expr = it;
			{
				if ((!(_1a416cd32_isUnreachableExpr(&((*((*(_71712_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a846a49e:;
			++it;
			goto _iter_begin_1a846a49e;
		}
		_iter_end_1a846a49e:;
	};
	return true;;
}



inline jule::Bool _1a416d98c_isForwarded(jule::Ptr<_1a3e5627a_Scope>* _72517_s) {
	jule::Any _7265_last = (*((*(_72517_s))))._field_Stmts[((*((*(_72517_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _7265_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a846bcb9:;
			{
				{
					auto &_match_expr{ (*(_7265_last.cast_ptr<_1a4028e63_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a846c182:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a846cb66:;
						{
							return false;;
						}
					}
					_match_end_1a846cb11:;
				};
			}
		}
		else {
			_case_begin_1a846be40:;
			{
				return true;;
			}
		}
		_match_end_1a846bdda:;
	};
}



inline __jule_tuple_bool__jule_tuple_u64 _1a4178315_checkForBitShiftOpt(jule::Ptr<_1a3e06170_OperandExprModel>* _77925_l, jule::Ptr<_1a3e06170_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b289a9d5_IsInt(_1a405a2e6_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_1b289a9d5_IsInt(_1a405a2e6_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b289e07c_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_1b289b651_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _1b284c855_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1a41786cd_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8512865:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8510632:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1a8512da4:;
						{
							goto _match_end_1a85134d1;
						}
					}
					else {
						_case_begin_1a8513536:;
						{
							return false;;
						}
					}
					_match_end_1a85134d1:;
				};
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1a41786cd_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a85128dc:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a8515a11:;
						{
							jule::Ptr<_1a3e06a44_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1a3e06a44_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a41786cd_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1a8514e61:;
				};
			}
		}
		_match_end_1a8512810:;
	};
	return false;;
}



inline void _1a417a6e1_possibleDynamicRemove(jule::Ptr<_1a4179657_dynamic>* _8031_d, jule::Any _8044_m) {
	if (((*(_8031_d)) != nullptr)) {
		_1a4179e0a_removeVar((*(_8031_d)).ptr(), _1a417b26e_getDynamicVar(_8044_m));
	};
}



inline jule::Bool _1a417a9ee_isDynamicValidType(jule::Ptr<_1a4059e2d_TypeKind> _8627_t) {
	return _1a417b505_isAny(&(_8627_t));;
}



inline jule::Ptr<_1a4059e2d_TypeKind> _1a417ae2d_isTypeGuaranteedDynamicData(jule::Ptr<_1a4179657_dynamic>* _8837_dy, jule::Ptr<_1a4059e2d_TypeKind> _8855_t, jule::Any _8873_m) {
	jule::Bool _895_isAny = _1a417b505_isAny(&(_8855_t));;
	if (((!(_895_isAny)) && (_1a405dd88_Trait(_8855_t.ptr()) == nullptr))) {
		return _8855_t;;
	};
	if ((!(_895_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8873_m };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a75b1bce:;
			{
				jule::Ptr<_1a3e07c98_CastingExprModel> _9813_cem = _8873_m.unsafe_cast_ptr<_1a3e07c98_CastingExprModel>();;
				return _1a417ae2d_isTypeGuaranteedDynamicData(_8837_dy, (*(_9813_cem))._field_ExprKind, (*((*_9813_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1a75b1b79:;
	};
	jule::Uintptr _1015_var = _1a417b26e_getDynamicVar(_8873_m);;
	if ((_1015_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8837_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75b386d:;
		if (it != expr_end) {
			_1a4179316_dynamicVar _10517_v = *it;
			{
				if ((_10517_v._field_var == _1015_var)) {
					return _10517_v._field_kind;;
				};
			}
			_iter_next_1a75b386d:;
			++it;
			goto _iter_begin_1a75b386d;
		}
		_iter_end_1a75b386d:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a417b26e_getDynamicVar(jule::Any _11318_m) {
	if ((!(_1a4184277_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11318_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a75b3ede:;
			{
				jule::Ptr<_1a3ebac4b_Var> _1199_v = _11318_m.unsafe_cast_ptr<_1a3ebac4b_Var>();;
				if ((!((*(_1199_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11318_m.unsafe_cast_ptr<_1a3ebac4b_Var>());;
				};
				return _1a417b26e_getDynamicVar((*((*((*_1199_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a75b4385:;
			{
				return static_cast<jule::Uintptr>((*(_11318_m.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a75b4929:;
			{
				jule::Ptr<_1a3e06a44_UnaryExprModel> _1309_uem = _11318_m.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>();;
				if (((*((*(_1309_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a417b26e_getDynamicVar((*((*_1309_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a75b3e45:;
	};
	return 0LLU;;
}



inline jule::Bool _1a417b505_isAny(jule::Ptr<_1a4059e2d_TypeKind>* _13915_t) {
	if ((_1a405d0b8_TypeEnum((*(_13915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a4062a07_Prim> _1435_prim = _1a405c57e_Prim((*(_13915_t)).ptr());;
	return ((_1435_prim != nullptr) && _1a4066225_IsAny(_1435_prim));;
}



inline jule::Bool _1a418000e_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a418074b_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a41803c7_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75bcea4:;
		if (it != expr_end) {
			jule::I64 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1a418074b_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1a75bcea4:;
			++it;
			_909_i++;
			goto _iter_begin_1a75bcea4;
		}
		_iter_end_1a75bcea4:;
	};
	return -1LL;;
}



inline jule::Bool _1a418074b_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1a415db8b_typeData(&(_9813_e1)) != _1a415db8b_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a75be9ab:;
			{
				jule::Ptr<_1b289b651_Const> _1049_exprConst = _9828_e2.cast_ptr<_1b289b651_Const>(&__jule_any_type19);;
				return ((_1b289e313_AsF64(_1049_exprConst.ptr()) >= 0LL) && _1b28a301a_GtEq(_9813_e1.unsafe_cast_ptr<_1b289b651_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a75bea22:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a75bea88:;
			{
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>();;
				jule::Ptr<_1a3e0b1db_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1a3e0b1db_StructSubIdentExprModel>(&__jule_any_type97);;
				return (_1a41602ca_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a75beaee:;
			{
				jule::Ptr<_1a3e06a44_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>();;
				jule::Ptr<_1a3e06a44_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1a3e06a44_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a418074b_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1a75bdeb6:;
			{
				return false;;
			}
		}
		_match_end_1a75be192:;
	};
}



inline void _1a4180a7b_possibleBoundaryRemove(jule::Ptr<_1a417de97_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a75c5363:;
		if (it != expr_end) {
			_1a417db56_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a75c68b4:;
					if (it != expr_end) {
						jule::I64 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1a41602ca_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1a75c68b4;
							};
						}
						_iter_next_1a75c68b4:;
						++it;
						_12713_i++;
						goto _iter_begin_1a75c68b4;
					}
					_iter_end_1a75c68b4:;
				};
			}
			_iter_next_1a75c5363:;
			++it;
			goto _iter_begin_1a75c5363;
		}
		_iter_end_1a75c5363:;
	};
}



inline jule::Bool _1a4180d45_isBoundaryRiskyType(jule::Ptr<_1a4059e2d_TypeKind> _13628_t) {
	return (_1a405d34e_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a418110e_isBoundaryValidType(jule::Ptr<_1a4059e2d_TypeKind> _14128_t) {
	return ((_1a405d5d5_Slc(_14128_t.ptr()) != nullptr) || (_1a405d34e_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a41813c8_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a4182792_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a75c8d7d:;
			{
				jule::Ptr<_1a3ebac4b_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1a3ebac4b_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a3ebac4b_Var>());;
				};
				return _1a41813c8_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a75c8c4b:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a75c8ed2:;
			{
				jule::Ptr<_1a3e06a44_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1a3e06a44_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a41813c8_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a75c8cd4:;
	};
	return 0LLU;;
}



inline void _1a4184453_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1a4181b37_Copy=_335_l1;
	_1a4181e34_Deadcode=_335_l1;
	_1a41821dc_Append=_335_l1;
	_1a41824d9_Math=_335_l1;
	_1a4182792_Access=_335_l1;
	_1a4182a4a_Inline=_335_l1;
	_1a4182d03_Ptr=_335_l1;
	_1a41831bb_Cond=_335_l1;
	_1a418340d_Str=_335_l1;
	_1a41836a5_Slice=_335_l1;
	_1a418395d_Assign=_335_l1;
	_1a4183c16_Exceptional=_335_l1;
	_1a4183ebe_Iter=_335_l1;
	_1a4184277_Dynamic=_335_l1;
}



inline void _1a39d16a7_detectEnabled(void) {
	_1a39ce3b9_exprEnabled=(((_1a4182d03_Ptr || _1a41824d9_Math) || _1a4182792_Access) || _1a41831bb_Cond);
	_1a39ce6a5_scopeEnabled=((((((((_1a41831bb_Cond || _1a41821dc_Append) || _1a4181b37_Copy) || _1a418340d_Str) || _1a41836a5_Slice) || _1a418395d_Assign) || _1a4183c16_Exceptional) || _1a4183ebe_Iter) || _1a4184277_Dynamic);
}



inline void _1a3a0a11a_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1c908a532_Exit(1LL);
}



inline jule::U64 _1a4e739d3_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a4e65189_isCopyOptimizable(jule::Ptr<_1a4028e63_Data>* _99223_expr) {
	if ((!((*((*(_99223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_99223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a87034d4:;
			{
				return false;;
			}
		}
		_match_end_1a870347e:;
	};
	return true;;
}



inline jule::Bool _1a4e65552_isIterCopyOptimizable(jule::Ptr<_1a4028e63_Data>* _100327_expr, jule::Ptr<_1a3ebac4b_Var>* _100341_v) {
	if (((!((*((*(_100327_expr))))._field_Lvalue)) && (!(_1a405b7ae_Mutable((*((*(_100327_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_100341_v))))._field_Mutable)) && (!((*((*(_100327_expr))))._field_Mutable)));;
}



inline jule::Str _1a45a2684_decomposeCommonEsq(jule::U8 _154923_b) {
	{
		auto &_match_expr{ _154923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a8834615:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a88343a1:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a8834417:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a883448e:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a8834516:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a88340b5:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a883413c:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a88341b4:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a883467b:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a88346e2:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1a8833d51:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a88316de:;
	};
}



inline jule::Str _1a45a2992_sbtoa(jule::U8 _157610_b) {
	if ((_157610_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_157610_b < 128LLU)) {
		jule::Str _15819_seq = _1a45a2684_decomposeCommonEsq(_157610_b);;
		if (!(_15819_seq).empty()) {
			return _15819_seq;;
		};
		if (((32LL <= _157610_b) && (_157610_b <= 126LLU))) {
			return jule::Str::from_byte(_157610_b);;
		};
	};
	jule::Str _15895_seq = _1b288ce06_FmtUint(static_cast<jule::U64>(_157610_b), 8LL);;
	if ((_15895_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15895_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15895_seq);;
}



inline void _1a45a2c7d_cstrBytes(_1c9754d1c_StrBuilder* _159619_s, jule::Str _159634_ctx) {
	{
		auto expr = &(_159634_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a883940b:;
		if (it != expr_end) {
			jule::U8 *_159712_b = it;
			{
				_1c975db28_WriteStr(_159619_s, _1a45a2992_sbtoa((*(_159712_b))));
			}
			_iter_next_1a883940b:;
			++it;
			goto _iter_begin_1a883940b;
		}
		_iter_end_1a883940b:;
	};
}



inline void _1a45a30ad_cstrLit(_1c9754d1c_StrBuilder* _160217_s, jule::Str _160232_ctx) {
	_1c975ddd1_WriteByte(_160217_s, '\"');
	_1a45a2c7d_cstrBytes(_160217_s, _160232_ctx);
	_1c975ddd1_WriteByte(_160217_s, '\"');
}



inline void _1a45a3454_ftoa(_1c9754d1c_StrBuilder* _160814_s, jule::F64 _160829_f, jule::I64 _160837_bitsize) {
	if ((_160837_bitsize != 32LL)) {
		if ((_160829_f == static_cast<jule::F64>(static_cast<jule::I64>(_160829_f)))) {
			_1a45a3740_itoa(_160814_s, static_cast<jule::I64>(_160829_f));
			return;;
		};
		if ((_160829_f == static_cast<jule::F64>(static_cast<jule::U64>(_160829_f)))) {
			_1a45a3a2b_utoa(_160814_s, static_cast<jule::U64>(_160829_f));
			return;;
		};
	};
	jule::Str _16195_m = _1b2876780_FmtFloat(_160829_f, 'f', -1LL, _160837_bitsize);;
	_1c975db28_WriteStr(_160814_s, _16195_m);
	if ((!(_1c974547d_Contains(_16195_m, jule::Str::lit(".", 1))))) {
		_1c975db28_WriteStr(_160814_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a45a3740_itoa(_1c9754d1c_StrBuilder* _162614_s, jule::I64 _162629_x) {
	{
		
		if ((_162629_x == jule::MAX_I64)) {
			_case_begin_1a883d6c9:;
			{
				_1c975db28_WriteStr(_162614_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_162629_x == jule::MIN_I64)) {
			_case_begin_1a883d773:;
			{
				_1c975db28_WriteStr(_162614_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1a883d5b9:;
	};
	_1c975db28_WriteStr(_162614_s, _1b288d2be_FmtInt(_162629_x, 10LL));
	if (_1c981177a_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1c975ddd1_WriteByte(_162614_s, 'L');
	};
	_1c975ddd1_WriteByte(_162614_s, 'L');
}



inline void _1a45a3a2b_utoa(_1c9754d1c_StrBuilder* _164314_s, jule::U64 _164329_x) {
	{
		
		if ((_164329_x == jule::MAX_U64)) {
			_case_begin_1a884081e:;
			{
				_1c975db28_WriteStr(_164314_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1a88406dc:;
	};
	_1c975db28_WriteStr(_164314_s, _1b288ce06_FmtUint(_164329_x, 10LL));
	if (_1c981177a_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1c975ddd1_WriteByte(_164314_s, 'L');
	};
	_1c975db28_WriteStr(_164314_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1a45a3e05_isForwarded(jule::Ptr<_1a3e5627a_Scope>* _165717_s) {
	jule::Any _16585_last = (*((*(_165717_s))))._field_Stmts[((*((*(_165717_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16585_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8842a63:;
			{
				{
					auto &_match_expr{ (*(_16585_last.cast_ptr<_1a4028e63_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a8842e2b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a88438dd:;
						{
							return false;;
						}
					}
					_match_end_1a8843877:;
				};
			}
		}
		else {
			_case_begin_1a8842bd9:;
			{
				return true;;
			}
		}
		_match_end_1a8842aeb:;
	};
}



inline jule::Bool _1a45a4147_isExprComesFromBind(jule::Ptr<_1a4028e63_Data>* _167225_d) {
	{
		auto &_match_expr{ (*((*(_167225_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8843b30:;
			{
				return (*((*((*(_167225_d))))._field_Model.unsafe_cast_ptr<_1a3ebac4b_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a884457b:;
			{
				return (*((*((*((*((*(_167225_d))))._field_Model.unsafe_cast_ptr<_1a3e0b1db_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1a88440d6:;
			{
				return false;;
			}
		}
		_match_end_1a8844081:;
	};
}



inline jule::Bool _1a45a4411_isAny(jule::Ptr<_1a4059e2d_TypeKind>* _168415_t) {
	if ((_1a405d0b8_TypeEnum((*(_168415_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a4062a07_Prim> _16885_prim = _1a405c57e_Prim((*(_168415_t)).ptr());;
	return ((_16885_prim != nullptr) && _1a4066225_IsAny(_16885_prim));;
}



inline void _1a4e8808b_iterFiles(jule::Ptr<_1a3e7a986_Package>* _136019_pkg, jule::Fn<void(jule::Ptr<_1a4023aea_SymbolTable>*)> _136034_f) {
	{
		auto expr = &((*((*(_136019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a42d62:;
		if (it != expr_end) {
			jule::Ptr<_1a4023aea_SymbolTable> _136117_file = *it;
			{
				_136034_f(&(_136117_file));
			}
			_iter_next_1a8a42d62:;
			++it;
			goto _iter_begin_1a8a42d62;
		}
		_iter_end_1a8a42d62:;
	};
}



inline jule::Slice<jule::U8> _1a4e88399_concatAllParts(jule::Slice<jule::Ptr<_1a3db8198_Token>> _136719_parts) {
	jule::I64 _13689_n = 0LL;;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a43cec:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_136912_part = it;
			{
				_13689_n+=(*((*(_136912_part))))._field_Kind.len();
			}
			_iter_next_1a8a43cec:;
			++it;
			goto _iter_begin_1a8a43cec;
		}
		_iter_end_1a8a43cec:;
	};
	if ((_13689_n == 0LL)) {
		return nullptr;;
	};
	_1c9754d1c_StrBuilder _13759_s = static__1c97550d6_New(_13689_n);;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a44dec:;
		if (it != expr_end) {
			jule::Ptr<_1a3db8198_Token> *_137612_p = it;
			{
				_1c975db28_WriteStr(&_13759_s, (*((*(_137612_p))))._field_Kind);
			}
			_iter_next_1a8a44dec:;
			++it;
			goto _iter_begin_1a8a44dec;
		}
		_iter_end_1a8a44dec:;
	};
	return _1c975edc1_Buf(&_13759_s);;
}



inline jule::Bool _1a4e8871d_containsTraitMethod(jule::Ptr<_1a3e276ad_Trait>* _138329_t, jule::Str* _138341_ident) {
	{
		auto expr = &((*((*(_138329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a45e0e:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _138412_m = *it;
			{
				if (((*(_138412_m))._field_Ident == (*(_138341_ident)))) {
					return true;;
				};
			}
			_iter_next_1a8a45e0e:;
			++it;
			goto _iter_begin_1a8a45e0e;
		}
		_iter_end_1a8a45e0e:;
	};
	return false;;
}



inline void _1a4e88a4d_pushMethodsFromInherit(jule::Ptr<_1a3e276ad_Trait>* _139532_dest, jule::Ptr<_1a3e276ad_Trait>* _139551_src) {
	_1a4e88d39_pushMethodsFromInherits(_139532_dest, _139551_src);
	{
		auto expr = &((*((*(_139551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a4710d:;
		if (it != expr_end) {
			jule::Ptr<_1a3e143d1_Fn> _139717_m = *it;
			{
				if ((!(_1a4e8871d_containsTraitMethod(_139532_dest, &((*(_139717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1a3e143d1_Fn>> &__jule_push_dest = (*((*(_139532_dest))))._field_Methods; __jule_push_dest.push(_139717_m); };
				};
			}
			_iter_next_1a8a4710d:;
			++it;
			goto _iter_begin_1a8a4710d;
		}
		_iter_end_1a8a4710d:;
	};
}



inline void _1a4e88d39_pushMethodsFromInherits(jule::Ptr<_1a3e276ad_Trait>* _140633_dest, jule::Ptr<_1a3e276ad_Trait>* _140652_src) {
	{
		auto expr = &((*((*(_140652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a4796b:;
		if (it != expr_end) {
			jule::Ptr<_1a4062100_TypeSymbol> _140717_inh = *it;
			{
				jule::Ptr<_1a3e276ad_Trait> _140813_t2 = _1a405dd88_Trait((*(_140717_inh))._field_Kind.ptr());;
				_1a4e88a4d_pushMethodsFromInherit(_140633_dest, &(_140813_t2));
			}
			_iter_next_1a8a4796b:;
			++it;
			goto _iter_begin_1a8a4796b;
		}
		_iter_end_1a8a4796b:;
	};
}



inline jule::Bool _1a4e89103_isOpMethod(jule::Ptr<_1a3e143d1_Fn>* _141416_m) {
	if ((((*((*(_141416_m))))._field_Generics.len() > 0LL) || ((*((*(_141416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _14185_mi = (*((*(_141416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a4e893bc_isHeadDecl(jule::Ptr<_1a3e143d1_Fn>* _143020_m) {
	if ((((*((*(_143020_m))))._field_Generics.len() > 0LL) || ((*((*(_143020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a4e89103_isOpMethod(_143020_m)) {
		return true;;
	};
	jule::Ptr<_1a3e172d5_FnIns> _14379_mi = (*((*(_143020_m))))._field_Instances[0LL];;
	;
	return static__1a3ebc1e2_Dispose(_1a3e032d2_FindMethod((*(_14379_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1a3dcca70_Directive> _1a4e986b7_findDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8be7984:;
		if (it != expr_end) {
			jule::Ptr<_1a3dcca70_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1a8be7984:;
			++it;
			goto _iter_begin_1a8be7984;
		}
		_iter_end_1a8be7984:;
	};
	return nullptr;;
}



inline jule::Bool _1a4e98a80_hasDirective(jule::Slice<jule::Ptr<_1a3dcca70_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1a4e986b7_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1a4e98d49_shouldInitialized(jule::Ptr<_1a4059e2d_TypeKind>* _49127_t) {
	jule::Ptr<_1a4062a07_Prim> _4925_prim = _1a405c57e_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1a4066225_IsAny(_4925_prim))) && (!(_1a4065e8e_IsStr(_4925_prim))));;
	};
	{
		
		if ((_1a405c815_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8bea756:;
			{
				return false;;
			}
		}
		else if ((_1a405e11e_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8be9964:;
			{
				return false;;
			}
		}
		else if ((_1a405d5d5_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8be99ca:;
			{
				return false;;
			}
		}
		else if ((_1a405dd88_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8bea7bc:;
			{
				return false;;
			}
		}
		else if ((_1a405d86b_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8bea8dd:;
			{
				return false;;
			}
		}
		else if ((_1a405d34e_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8bea954:;
			{
				jule::Ptr<_1a4069327_Arr> _50813_arr = _1a405d34e_Arr((*(_49127_t)).ptr());;
				return _1a4e98d49_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1a405db02_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1a8bea9ba:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8be98ed:;
			{
				return true;;
			}
		}
		_match_end_1a8be9bc8:;
	};
}



inline void _1c908eb52_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1c908edc7_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1c908e976_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1c908e976_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b970c6:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1a8b970c6:;
			++it;
			goto _iter_begin_1a8b970c6;
		}
		_iter_end_1a8b970c6:;
	};
	_1c9754d1c_StrBuilder _499_s = static__1c97550d6_New(32LL);;
	;
	{
		auto expr = &(_1c908e976_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b98924:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1c975db28_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1c975db28_WriteStr(&_499_s, _1c974028b_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_1c975db28_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1c975ddd1_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1a8b98924:;
			++it;
			_519_i++;
			goto _iter_begin_1a8b98924;
		}
		_iter_end_1a8b98924:;
	};
	jule::outln(_499_s);
}



inline void _1c9090108_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _1c9090317_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1c909047c_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1c909067a_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1a8b9e73d:;
			{
				_1c9090317_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1a8b9e809:;
			{
				_1c909047c_toolDistarch();
			}
		}
		else {
			_case_begin_1a8b9d231:;
			{
				_1c908eb52_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1a8b9e342:;
	};
}



inline void _1c90908ab_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: darwin", 24));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _20ad67ac4_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _20ad67ee2_CppStd));
}



inline void _1c9090bec_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1a8ba2c2a:;
			{
				({
					auto except = static__20c07b952_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1c908eb52_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a8ba191b:;
			{
				_1c908eb52_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1a8ba280c:;
	};
}



inline jule::Bool _1c9090e3e_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1a8ba429d:;
			{
				_1c908edc7_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1a8ba4314:;
			{
				_1c9090108_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1a8ba437a:;
			{
				_1c909067a_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1a8ba43e1:;
			{
				_1c90908ab_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1a8ba3a83:;
			{
				_1c9090bec_mod(_15320_args);
			}
		}
		else {
			_case_begin_1a8ba2d3a:;
			{
				return false;;
			}
		}
		_match_end_1a8ba34de:;
	};
	return true;;
}



inline void _1c90910d7_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _20c162681_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1c90910d7_showInfo();
		return;;
	};
	if (_1c9090e3e_processCommand(&(_1899_args))) {
		return;;
	};
	_1a50182a3_compileCommand(&(_1899_args));
}



inline void _1a50151c3_init(void) {
	_20ad67ac4_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_20c07ab0a_File> _1a501548c_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1c9762db3_Dir((*(_4316_path)));;
	({
		auto except = static__20c079884_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1c9765536_Create(_445_dir);
				if (!except.ok()) {
					_1a3a0a11a_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20c07b2e2_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a3a0a11a_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a5015635_clearObjects(void) {
	({
		auto except = static__20c077d8d_Remove(_1a501678a_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1c9765767_Remove(_1a5014975_OutDir);
}



inline void _1a5015943_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1c9034311_Cmd> _739_cmd = static__1c903472e_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1c9745109_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1c903492c_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a8baa095:;
					{
						static__1a3a064e0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a8ba9c87:;
					{
						static__1a3a064e0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a8ba9aab:;
					{
						static__1a3a064e0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1a8ba9bcc:;
			};
			_1a3a0a11a_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1c9034db1_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _20ad67ac4_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a3a064e0_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1a3a0a11a_Throw(jule::Str());
	};
	_1a5015635_clearObjects();
}



inline jule::Bool _1a5015c0c_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1c9743bb8_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1c97eecb8_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1a5015e3d_pushCompCmdClang(_1c9754d1c_StrBuilder* _10726_cmd) {
	_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20ad67ee2_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1a8d1e5c2:;
			{
				_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1a8baccbd:;
			{
				_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1a8d1e704:;
			{
				_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1a8d1e56c:;
	};
	_1c975ddd1_WriteByte(_10726_cmd, ' ');
	if (_20ad69059_Production) {
		_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1c975db28_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a501616e_pushCompCmdGcc(_1c9754d1c_StrBuilder* _13324_cmd) {
	_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20ad67ee2_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1a8d22592:;
			{
				_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1a8d20bde:;
			{
				_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1a8d226c4:;
			{
				_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1a8d2253c:;
	};
	_1c975ddd1_WriteByte(_13324_cmd, ' ');
	if (_20ad69059_Production) {
		_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1c975db28_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a5016603_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a4a6456e_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_20ad67cd3_CompilerPath);;
	_1c9754d1c_StrBuilder _1619_cmd = static__1c97550d6_New(64LL);;
	{
		auto &_match_expr{ _20ad67ac4_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1a8d25353:;
			{
				_1a501616e_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1a8d2584d:;
			{
				_1a5015e3d_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1a8d25562:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d25b06:;
		if (it != expr_end) {
			jule::Ptr<_1a3e77a60_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1a5015c0c_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_1c975db28_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_1c975ddd1_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1a8d25b06:;
			++it;
			goto _iter_begin_1a8d25b06;
		}
		_iter_end_1a8d25b06:;
	};
	if (!(_1a5015019_Out).empty()) {
		_1c975db28_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1c975db28_WriteStr(&_1619_cmd, _1a5015019_Out);
		_1c975ddd1_WriteByte(&_1619_cmd, ' ');
	};
	_1c975db28_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d28631:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1c975ddd1_WriteByte(&_1619_cmd, ' ');
				_1c975db28_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1a8d28631:;
			++it;
			goto _iter_begin_1a8d28631;
		}
		_iter_end_1a8d28631:;
	};
	if (_1c908b6dc_Os.equal("windows", 7)) {
		_1c975db28_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1c975e420_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a501678a_getCompilePath(void) {
	return _1c97621c0_Join(jule::Slice<jule::Str>::make({_1a5014975_OutDir,_1a5014c61_OutName}));;
}



inline void _1a50169bb_applyTargetIndependentOptimizations(jule::Ptr<_1a4a6456e_IR>* _20545_ir) {
	jule::Ptr<_1a39ce8a3_Optimizer> _2069_opt = static__1a39ced26_New(_20545_ir);;
	_1a39d1410_Optimize(_2069_opt.ptr());
}



inline void _1a5016b64_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20ad67ac4_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a8d2ac4e:;
			{
				_1a3a0a11a_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1a8d2a91e:;
			{
				if ((_20ad67cd3_CompilerPath).empty()) {
					_20ad67cd3_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1a8d2a985:;
			{
				if ((_20ad67cd3_CompilerPath).empty()) {
					_20ad67cd3_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1a8d2a501:;
			{
				_1a3a0a11a_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _20ad67ac4_Compiler));
			}
		}
		_match_end_1a8d2a8b9:;
	};
}



inline void _1a5016d73_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a3a0a11a_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a50170a4_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a3a0a11a_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a50172d5_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a3a0a11a_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1c9745109_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1a3a0a11a_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os = _2485_parts[0LL];;
	jule::Str _2539_arch = _2485_parts[1LL];;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1a50170a4_checkTargetOs(_2535_os);
		_1c908b6dc_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1a5016d73_checkTargetArch(_2539_arch);
		_1c908b995_Arch=_2539_arch;
	};
	_1b2892955_UpdateTarget();
}



inline void _1a5017516_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a3a0a11a_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1a8d3266d:;
			{
				goto _match_end_1a8d31d10;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1a8d326d4:;
			{
				_1a4184453_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1a8d3201e:;
			{
				_1a3a0a11a_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1a8d31d10:;
	};
}



inline void _1a50178ce_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20ad67ee2_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1a8d3344e:;
			{
				goto _match_end_1a8d33086;
			}
		}
		else {
			_case_begin_1a8d330db:;
			{
				_1a3a0a11a_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _20ad67ee2_CppStd));
			}
		}
		_match_end_1a8d33086:;
	};
}



inline jule::Slice<jule::Str> _1a5017a99_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a500e95e_FlagSet> _2969_fs = static__1a500ec4a_New();;
	_1a8d34d8a_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1a8d34d8a_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1a8d34d8a_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1a5015019_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20ad68201_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20ad68410_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1a8d34d8a_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20ad67ac4_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1a8d34d8a_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20ad67cd3_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20ad69059_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20ad6894e_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_20ad68d17_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1a8d34d8a_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_20ad67ee2_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4181b37_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4181e34_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a41821dc_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a41824d9_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4182792_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4182a4a_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4182d03_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a41831bb_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a418340d_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a41836a5_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a418395d_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4183c16_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4183ebe_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1a8d3bce8_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1a4184277_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1a5010b19_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a3a0a11a_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a5016b64_checkCompilerFlag();
	_1a50178ce_checkCppStdFlag();
	_1a50172d5_checkTargetFlag(&(_2949_target));
	_1a5017516_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1a5017ca8_setupSemaFlags(jule::I64* _33724_flags) {
	if (_20ad68201_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a4a6456e_IR> _1a5018072_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1a5017a99_checkFlags(_34313_args);;
	jule::I64 _3469_semaFlags = static_cast<jule::I64>(0LL);;
	_1a5017ca8_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1a3a0a11a_Throw(_1c980c215_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1a3a0a11a_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;;
	jule::Bool _35415_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c9762720_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1a3a0a11a_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20c07cbea_Status> _3605_inf = ({
		auto except = static__20c079884_Of(_1c908aa82_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a3a0a11a_Throw(_1c980c215_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_20c07cbea_Status>(nullptr);});
	});;
	if ((!(_20c07d0c4_IsDir(_3605_inf.ptr())))) {
		_1a3a0a11a_Throw(_1c980c215_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a4a6456e_IR> _3689_ir;;
	jule::Slice<_1c980bca3_Log> _36813_logs;;
	({
		__jule_tuple_x_1a4a6456e_IR__jule_tuple_s_1c980bca3_Log __jule_assign_result = static__1a4a64a14_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1a3a0a11a_Throw(_1c980c215_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1a3a09658_PrintLogs(&(_36813_logs));
		_1a3a0a11a_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1a50182a3_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_20ad68696_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a4a6456e_IR> _3899_ir = _1a5018072_buildIr(_38324_args);;
	;
	if ((!(_20ad68696_Test))) {
		jule::Ptr<_1a3e143d1_Fn> _39413_main = _1a3e7c01a_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1a3a0a11a_Throw(_1c980c215_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a50169bb_applyTargetIndependentOptimizations(&(_3899_ir));
	_1a4a65a7b_Order(_3899_ir);
	jule::Str _4055_compPath = _1a501678a_getCompilePath();;
	jule::Str _4065_compiler;;
	jule::Str _40615_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a5016603_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a4e7ad4d_ObjectCoder> _4089_oc = static__1a4e7b249_New(&(_3899_ir), _1a4e79335_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_20ad68696_Test) {
		jule::Ptr<_1a45a5500_TestCoder> _41313_tc = static__1a45a5973_New(&(_4089_oc));;
		_1a45a6ce8_Serialize(_41313_tc);
	} else {
		_1a4e87ba1_Serialize(_4089_oc);
	};
	jule::Ptr<_20c07ab0a_File> _4199_file = _1a501548c_openOutput(&(_4055_compPath));;
	({
		auto except = _20c078322_Write(_4199_file.ptr(), _1c975edc1_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1a3a0a11a_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _20c07c18e_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_20ad68410_Transpilation))) {
		_1a5015943_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1c908bad8_init();
	_1b2892acb_init();
	_1a50151c3_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}